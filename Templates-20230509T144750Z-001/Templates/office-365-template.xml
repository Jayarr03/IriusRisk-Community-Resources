<?xml version="1.0" encoding="UTF-8"?>
<template ref="office-365-template" name="office-365 template" tags="">
  <desc>&lt;p&gt;This threat model was created from recommended mitre attack patterns in v11 of the Mitre Enterprise Matrix.&amp;nbsp;&lt;/p&gt;</desc>
  <diagram draft="false">
    <schema></schema>
  </diagram>
  <trustZones>
    <trustZone ref="private-secured" uuid="2ab4effa-40b7-4cd2-ba81-8247d29a6f2d" name="Private Secured" desc="A secured zone within a trusted private zone" trustRating="100"/>
    <trustZone ref="public-cloud" uuid="b61d6911-338d-46a8-9f39-8dcd24abfe91" name="Public Cloud" desc="Public cloud services" trustRating="60"/>
  </trustZones>
  <questions/>
  <assets/>
  <settings/>
  <dataflows>
    <dataflow name="Azure Active Directory Domain Services -&gt; Azure AD Sync" ref="bd72bd04-6350-447f-8f1a-b299760413e7" source="e8ba40d3-37d8-4721-9785-1051ed93a5a2" target="8fbc1541-750e-4a16-9796-35ac068844ea">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Azure AD Sync -&gt; Azure Active Directory" ref="f47cf4ab-c055-4dc9-a397-53da8d21d0c0" source="8fbc1541-750e-4a16-9796-35ac068844ea" target="62a5a79a-5e2c-4f4b-bf4a-d48751103201">
      <assets/>
      <tags/>
    </dataflow>
  </dataflows>
  <customFields>
    <customField ref="Message" value=""/>
    <customField ref="Milestone 1" value=""/>
    <customField ref="Milestone 1 - Deadline" value=""/>
    <customField ref="Milestone 2" value=""/>
    <customField ref="Milestone 2 - Deadline" value=""/>
    <customField ref="Milestone 3" value=""/>
    <customField ref="Milestone 3 - Deadline" value=""/>
    <customField ref="Project Management Details" value=""/>
    <customField ref="Project Manager" value=""/>
    <customField ref="Project Owner Email" value="jrabe@iriusrisk.com"/>
    <customField ref="Release Date" value=""/>
    <customField ref="Use Case" value=""/>
    <customField ref="User" value=""/>
    <customField ref="User Email Field" value=""/>
  </customFields>
  <components>
    <component uuid="e09ca2b0-0de9-4937-9829-01211c5ea5c0" diagramComponentId="1793d13b-1a82-4422-bf60-b228cb297f94" ref="038b4a4b-e9b1-4678-8a9a-601ae2569d88" name="Impact" desc="" library="" parentComponentRef="f30fb5e7-b7d5-4a30-99fe-c9ea74fddb64" componentDefinitionRef="impact">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses/>
      <countermeasures>
        <countermeasure ref="C-DS0026" name="Active Directory" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>A database and set of services that allows administrators to manage permissions, access to network resources, and stored data objects (user, group, application, or devices)(Citation: Microsoft AD DS Getting Started)&lt;br /&gt;&lt;p&gt;Detailed detections per technique:&lt;/p&gt;&lt;br /&gt;['T1556.005']: Monitor property changes in Group Policy: &lt;code&gt;Computer Configuration\Windows Settings\Security Settings\Account Policies\Password Policy\Store passwords using reversible encryption&lt;/code&gt;. By default, the property should be set to Disabled.&lt;br /&gt;['T1134.005']: Monitor for changes to account management events on Domain Controllers for successful and failed changes to SID-History. (Citation: AdSecurity SID History Sept 2015) (Citation: Microsoft DsAddSidHistory)&lt;br /&gt;['T1531']: Monitor for changes made to AD settings for unexpected modifications to user accounts, such as deletions or potentially malicious changes to user attributes (credentials, status, etc.).&lt;br /&gt;['T1222.001']: Monitor for changes made to DACLs and file/directory ownership. Many of the commands used to modify DACLs and file/directory ownership are built-in system utilities and may generate a high false positive alert rate, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible.&lt;br /&gt;['T1098']: Monitor for changes to Azure Activity Logs for unexpected modifications to Service Principal and Application.&lt;br /&gt;['T1207']: Leverage AD directory synchronization (DirSync) to monitor changes to directory state using AD replication cookies.(Citation: Microsoft DirSync) (Citation: ADDSecurity DCShadow Feb 2018) Also consider monitoring and alerting on the replication of AD objects (Audit Detailed Directory Service Replication Events 4928 and 4929). (Citation: DCShadow Blog)&lt;br /&gt;['T1037.003']: Monitor for changes made in the Active Directory that may use network logon scripts automatically executed at logon initialization to establish persistence.&lt;br /&gt;['T1484.002']: Monitor for changes made to AD settings for unexpected modifications to domain trust settings, such as when a user or application modifies the federation settings on the domain.&lt;br /&gt;['T1222']: Monitor for changes made to ACLs and file/directory ownership. Many of the commands used to modify ACLs and file/directory ownership are built-in system utilities and may generate a high false positive alert rate, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible.&lt;br /&gt;['T1037']: Monitor for changes made in the Active Directory that may use scripts automatically executed at boot or logon initialization to establish persistence.&lt;br /&gt;['T1098.001']: Monitor for changes to Azure Activity Logs for Service Principal and Application modifications.&lt;br /&gt;['T1134']: Monitor for changes made to AD settings that may modify access tokens to operate under a different user or system security context to perform actions and bypass access controls.&lt;br /&gt;['T1484']: Monitor for unexpected deletion of an active directory object, such as Windows EID 5141.&lt;br /&gt;['T1484']: Monitor for newly constructed active directory objects, such as Windows EID 5137.&lt;br /&gt;['T1098.005']: Monitor for the registration or joining of new device objects in Active Directory.&lt;br /&gt;['T1207']: Baseline and periodically analyze the Configuration partition of the AD schema and alert on creation of nTDSDSA objects.(Citation: DCShadow Blog)&lt;br /&gt;['T1558.001']: Monitor for anomalous Kerberos activity, such as malformed or blank fields in Windows logon/logoff events (Event ID 4769, 4768), RC4 encryption within TGTs, and TGS requests without preceding TGT requests. Monitor the lifetime of TGT tickets for values that differ from the default domain duration. Monitor for indications of Pass the Ticket being used to move laterally.&lt;br /&gt;['T1550']: Monitor requests of new ticket granting ticket or service tickets to a Domain Controller, such as Windows EID 4769 or 4768, that may use alternate authentication material, such as password hashes, Kerberos tickets, and application access tokens, in order to move laterally within an environment and bypass normal system access controls.&lt;br /&gt;['T1550.002']: Monitor requests of new ticket granting ticket or service tickets to a Domain Controller. Windows Security events such as 4768 (A Kerberos authentication ticket (TGT) was requested) and 4769 (A Kerberos service ticket was requested) combined with logon session creation information may be indicative of an overpass the hash attempt.&lt;br /&gt;['T1558.003']: Monitor for anomalous Kerberos activity, such as enabling Audit Kerberos Service Ticket Operations to log Kerberos TGS service ticket requests. Particularly investigate irregular patterns of activity (ex: accounts making numerous requests, Event ID 4769, within a small time frame, especially if they also request RC4 encryption [Type 0x17]).&lt;br /&gt;['T1558.004']: Monitor for anomalous activity, such as enabling Audit Kerberos Service Ticket Operations to log Kerberos TGS service ticket requests. Particularly investigate irregular patterns of activity (ex: accounts making numerous requests, Event ID 4768 and 4769, within a small time frame, especially if they also request RC4 encryption [Type 0x17], pre-authentication not required [Type: 0x0]).&lt;br /&gt;['T1558']: Monitor for anomalous Kerberos activity, such as malformed or blank fields in Windows logon/logoff events (Event ID 4624, 4672, 4634), RC4 encryption within ticket granting tickets (TGTs), and ticket granting service (TGS) requests without preceding TGT requests.(Citation: ADSecurity Detecting Forged Tickets)(Citation: Stealthbits Detect PtT 2019)(Citation: CERT-EU Golden Ticket Protection)Monitor the lifetime of TGT tickets for values that differ from the default domain duration.(Citation: Microsoft Kerberos Golden Ticket) Monitor for indications of [Pass the Ticket](https://attack.mitre.org/techniques/T1550/003) being used to move laterally.&lt;br /&gt;['T1550.003']: Monitor requests of new ticket granting ticket or service tickets to a Domain Controller. Event ID 4769 is generated on the Domain Controller when using a golden ticket after the KRBTGT password has been reset twice, as mentioned in the mitigation section. The status code 0x1F indicates the action has failed due to "Integrity check on decrypted field failed" and indicates misuse by a previously invalidated golden ticket.(Citation: CERT-EU Golden Ticket Protection)&lt;br /&gt;['T1003.006']: Monitor domain controller logs for replication requests and other unscheduled activity possibly associated with DCSync.(Citation: Microsoft DRSR Dec 2017) (Citation: Microsoft GetNCCChanges) (Citation: Samba DRSUAPI) Note: Domain controllers may not log replication requests originating from the default domain controller account.(Citation: Harmj0y DCSync Sept 2015)&lt;br /&gt;['T1033']: Monitor domain controller logs for replication requests and other unscheduled activity possibly associated with DCSync. (Citation: Microsoft DRSR Dec 2017) (Citation: Microsoft GetNCCChanges) (Citation: Samba DRSUAPI) Note: Domain controllers may not log replication requests originating from the default domain controller account. (Citation: Harmj0y DCSync Sept 2015). Monitor for replication requests (Citation: Microsoft SAMR) from IPs not associated with known domain controllers. (Citation: AdSecurity DCSync Sept 2015)&lt;br /&gt;['T1615']: Monitor for abnormal LDAP queries with filters for &lt;code&gt;groupPolicyContainer&lt;/code&gt; and high volumes of LDAP traffic to domain controllers. Windows Event ID 4661 can also be used to detect when a directory service has been accessed.&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Microsoft AD DS Getting Started" url="https://docs.microsoft.com/en-us/windows-server/identity/ad-ds/ad-ds-getting-started"/>
            <reference name="Mitre ATT&amp;CK Data Source DS0026" url="https://attack.mitre.org/datasources/DS0026"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:02.663">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-DS0015" name="Application Log" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>Events collected by third-party services such as mail servers, web applications, or other appliances (not by the native OS or platform)(Citation: Confluence Logs)&lt;br /&gt;&lt;p&gt;Detailed detections per technique:&lt;/p&gt;&lt;br /&gt;['T1189']: Firewalls and proxies can inspect URLs for potentially known-bad domains or parameters. They can also do reputation-based analytics on websites and their requested resources such as how old a domain is, who it's registered to, if it's on a known bad list, or how many other users have connected to it before.&lt;br /&gt;['T1499.002']: Monitor for third-party application logging, messaging, and/or other artifacts that may target the different network services provided by systems to conduct a DoS. In addition to network level detections, endpoint logging and instrumentation can be useful for detection. Attacks targeting web applications may generate logs in the web server, application server, and/or database server that can be used to identify the type of attack, possibly before the impact is felt. Externally monitor the availability of services that may be targeted by an Endpoint DoS.&lt;br /&gt;['T1557']: Monitor application logs for changes to settings and other events associated with network protocols and other services commonly abused for AiTM.(Citation: dhcp_serv_op_events)&lt;br /&gt;['T1137.003']:  Monitor for third-party application logging, messaging, and/or other artifacts that may abuse Microsoft Outlook forms to obtain persistence on a compromised system. SensePost, whose tool [Ruler](https://attack.mitre.org/software/S0358) can be used to carry out malicious rules, forms, and Home Page attacks, has released a tool to detect Ruler usage.(Citation: SensePost NotRuler)&lt;br /&gt;['T1505.003']: Monitor for third-party application logging, messaging, and/or other artifacts that may backdoor web servers with web shells to establish persistent access to systems. Log authentication attempts to the server and any unusual traffic patterns to or from the server and internal network. (Citation: US-CERT Alert TA15-314A Web Shells)&lt;br /&gt;['T1505']: Monitor for third-party application logging, messaging, and/or other artifacts that may abuse legitimate extensible development features of servers to establish persistent access to systems. Consider monitoring application logs for abnormal behavior that may indicate suspicious installation of application software components. Log authentication attempts to the server and any unusual traffic patterns to or from the server and internal network. (Citation: US-CERT Alert TA15-314A Web Shells)&lt;br /&gt;['T1550']: Monitor for third-party application logging, messaging, and/or other artifacts that may use alternate authentication material, such as password hashes, Kerberos tickets, and application access tokens, in order to move laterally within an environment and bypass normal system access controls.&lt;br /&gt;['T1069.003']: Monitor for events collected that may attempt to find cloud groups and permission settings. &lt;br /&gt;['T1491.002']: Monitor for third-party application logging, messaging, and/or other artifacts that may deface systems external to an organization in an attempt to deliver messaging, intimidate, or otherwise mislead an organization or users. &lt;br /&gt;['T1598']: Depending on the specific method of phishing, the detections can vary. Monitor for suspicious email activity, such as numerous accounts receiving messages from a single unusual/unknown sender. Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.(Citation: Microsoft Anti Spoofing)(Citation: ACSC Email Spoofing)
When it comes to following links, monitor for references to uncategorized or known-bad sites. URL inspection within email (including expanding shortened links) can also help detect links leading to known malicious sites.
Monitor social media traffic for suspicious activity, including messages requesting information as well as abnormal file or data transfers (especially those involving unknown, or otherwise suspicious accounts).&lt;br /&gt;['T1499']: Monitor for third-party application logging, messaging, and/or other artifacts that may perform Endpoint Denial of Service (DoS) attacks to degrade or block the availability of services to users. In addition to network level detections, endpoint logging and instrumentation can be useful for detection. Attacks targeting web applications may generate logs in the web server, application server, and/or database server that can be used to identify the type of attack, possibly before the impact is felt. Externally monitor the availability of services that may be targeted by an Endpoint DoS.&lt;br /&gt;['T1204.003']: Monitor for third-party application logging, messaging, and/or other artifacts that may rely on a user running a malicious image to facilitate execution.&lt;br /&gt;['T1598.001']: Monitor social media traffic for suspicious activity, including messages requesting information as well as abnormal file or data transfers (especially those involving unknown, or otherwise suspicious accounts).
Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.
Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.&lt;br /&gt;['T1564']: Monitor for third-party application logging, messaging, and/or other artifacts that may attempt to hide artifacts associated with their behaviors to evade detection. &lt;br /&gt;['T1499.004']: Monitor for third-party application logging, messaging, and/or other artifacts that may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Attacks targeting web applications may generate logs in the web server, application server, and/or database server that can be used to identify the type of attack. Externally monitor the availability of services that may be targeted by an Endpoint DoS.&lt;br /&gt;['T1211']: Exploitation for defense evasion may happen shortly after the system has been compromised to prevent detection during later actions for for additional tools that may be brought in and used. Detecting software exploitation may be difficult depending on the tools available. Software exploits may not always succeed or may cause the exploited process to become unstable or crash. &lt;br /&gt;['T1137']: Monitor for third-party application logging, messaging, and/or other artifacts that may leverage Microsoft Office-based applications for persistence between startups. SensePost, whose tool [Ruler](https://attack.mitre.org/software/S0358) can be used to carry out malicious rules, forms, and Home Page attacks, has released a tool to detect Ruler usage.(Citation: SensePost NotRuler)&lt;br /&gt;['T1566.001']: Monitor for third-party application logging, messaging, and/or other artifacts that may send spearphishing emails with a malicious attachment in an attempt to gain access to victim systems. Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.(Citation: Microsoft Anti Spoofing)(Citation: ACSC Email Spoofing) Anti-virus can potentially detect malicious documents and attachments as they're scanned to be stored on the email server or on the user's computer. Monitor for suspicious descendant process spawning from Microsoft Office and other productivity software.(Citation: Elastic - Koadiac Detection with EQL)&lt;br /&gt;['T1566.002']: Monitor for third-party application logging, messaging, and/or other artifacts that may send spearphishing emails with a malicious link in an attempt to gain access to victim systems. Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.(Citation: Microsoft Anti Spoofing)(Citation: ACSC Email Spoofing) URL inspection within email (including expanding shortened links) can help detect links leading to known malicious sites. Detonation chambers can be used to detect these links and either automatically go to these sites to determine if they're potentially malicious, or wait and capture the content if a user visits the link.&lt;br /&gt;['T1598.003']: Monitor for suspicious email activity, such as numerous accounts receiving messages from a single unusual/unknown sender. Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.(Citation: Microsoft Anti Spoofing)(Citation: ACSC Email Spoofing)
Monitor for references to uncategorized or known-bad sites. URL inspection within email (including expanding shortened links) can also help detect links leading to known malicious sites.&lt;br /&gt;['T1610']: Configuration management databases (CMDB) and other asset management systems may help with the detection of computer systems or network devices that should not exist on a network.&lt;br /&gt;['T1114']: Detection is challenging because all messages forwarded because of an auto-forwarding rule have the same presentation as a manually forwarded message. It is also possible for the user to not be aware of the addition of such an auto-forwarding rule and not suspect that their account has been compromised; email-forwarding rules alone will not affect the normal usage patterns or operations of the email account. Auto-forwarded messages generally contain specific detectable artifacts that may be present in the header; such artifacts would be platform-specific. Examples include &lt;code&gt;X-MS-Exchange-Organization-AutoForwarded&lt;/code&gt; set to true, &lt;code&gt;X-MailFwdBy&lt;/code&gt; and &lt;code&gt;X-Forwarded-To&lt;/code&gt;. The &lt;code&gt;forwardingSMTPAddress&lt;/code&gt; parameter used in a forwarding process that is managed by administrators and not by user actions. All messages for the mailbox are forwarded to the specified SMTP address. However, unlike typical client-side rules, the message does not appear as forwarded in the mailbox; it appears as if it were sent directly to the specified destination mailbox.(Citation: Microsoft Tim McMichael Exchange Mail Forwarding 2) High volumes of emails that bear the &lt;code&gt;X-MS-Exchange-Organization-AutoForwarded&lt;/code&gt; header (indicating auto-forwarding) without a corresponding number of emails that match the appearance of a forwarded message may indicate that further investigation is needed at the administrator level rather than user-level.&lt;br /&gt;['T1534']: Monitor email gateways usually do not scan internal email, but an organization can leverage the journaling-based solution which sends a copy of emails to a security service for offline analysis or incorporate service-integrated solutions using on-premise or API-based integrations to help detect internal spearphishing attacks.(Citation: Trend Micro When Phishing Starts from the Inside 2017)&lt;br /&gt;['T1594']: Monitor for suspicious network traffic that could be indicative of adversary reconnaissance, such as rapid successions of requests indicative of web crawling and/or large quantities of requests originating from a single source (especially if the source is known to be associated with an adversary). Analyzing web metadata may also reveal artifacts that can be attributed to potentially malicious activity, such as referer or user-agent string HTTP/S fields.&lt;br /&gt;['T1137.005']: Monitor for third-party application logging, messaging, and/or other artifacts that may abuse Microsoft Outlook rules to obtain persistence on a compromised system. SensePost, whose tool [Ruler](https://attack.mitre.org/software/S0358) can be used to carry out malicious rules, forms, and Home Page attacks, has released a tool to detect Ruler usage.(Citation: SensePost NotRuler)&lt;br /&gt;['T1213.002']: Monitor for third-party application logging, messaging, and/or other artifacts that may leverage the SharePoint repository as a source to mine valuable information. Monitor access to Microsoft SharePoint repositories performed by privileged users (for example, Active Directory Domain, Enterprise, or Schema Administrators) should be closely monitored and alerted upon, as these types of accounts should generally not be used to access information repositories. If the capability exists, it may be of value to monitor and alert on users that are retrieving and viewing a large number of documents and pages; this behavior may be indicative of programmatic means being used to retrieve all data within the repository. In environments with high-maturity, it may be possible to leverage User-Behavioral Analytics (UBA) platforms to detect and alert on user based anomalies.&lt;br /&gt;['T1110.004']: Monitor authentication logs for system and application login failures of [Valid Accounts](https://attack.mitre.org/techniques/T1078). If authentication failures are high, then there may be a brute force attempt to gain access to a system using legitimate credentials.&lt;br /&gt;['T1491.001']: Monitor for third-party application logging, messaging, and/or other artifacts that may deface systems internal to an organization in an attempt to intimidate or mislead users. &lt;br /&gt;['T1114.003']: Detection is challenging because all messages forwarded because of an auto-forwarding rule have the same presentation as a manually forwarded message. It is also possible for the user to not be aware of the addition of such an auto-forwarding rule and not suspect that their account has been compromised; email-forwarding rules alone will not affect the normal usage patterns or operations of the email account. This is especially true in cases with hidden auto-forwarding rules. This makes it only possible to reliably detect the existence of a hidden auto-forwarding rule by examining message tracking logs or by using a MAPI editor to notice the modified rule property values.(Citation: Pfammatter - Hidden Inbox Rules)
Auto-forwarded messages generally contain specific detectable artifacts that may be present in the header; such artifacts would be platform-specific. Examples include X-MS-Exchange-Organization-AutoForwarded set to true, X-MailFwdBy and X-Forwarded-To. The forwardingSMTPAddress parameter used in a forwarding process that is managed by administrators and not by user actions. All messages for the mailbox are forwarded to the specified SMTP address. However, unlike typical client-side rules, the message does not appear as forwarded in the mailbox; it appears as if it were sent directly to the specified destination mailbox.(Citation: Microsoft Tim McMichael Exchange Mail Forwarding 2) High volumes of emails that bear the X-MS-Exchange-Organization-AutoForwarded header (indicating auto-forwarding) without a corresponding number of emails that match the appearance of a forwarded message may indicate that further investigation is needed at the administrator level rather than user-level.&lt;br /&gt;['T1137.004']: Monitor for third-party application logging, messaging, and/or other artifacts that may abuse Microsoft Outlook's Home Page feature to obtain persistence on a compromised system. SensePost, whose tool [Ruler](https://attack.mitre.org/software/S0358) can be used to carry out malicious rules, forms, and Home Page attacks, has released a tool to detect Ruler usage.(Citation: SensePost NotRuler)&lt;br /&gt;['T1622']: Monitor debugger logs for signs of abnormal and potentially malicious activity.&lt;br /&gt;['T1069']: Monitor for logging, messaging, and other artifacts provided by cloud services.&lt;br /&gt;['T1499.003']: Monitor for third-party application logging, messaging, and/or other artifacts that may target resource intensive features of web applications to cause a denial of service (DoS). In addition to network level detections, endpoint logging and instrumentation can be useful for detection. Attacks targeting web applications may generate logs in the web server, application server, and/or database server that can be used to identify the type of attack, possibly before the impact is felt. Externally monitor the availability of services that may be targeted by an Endpoint DoS.&lt;br /&gt;['T1491']: Monitor for third-party application logging, messaging, and/or other artifacts that may modify visual content available internally or externally to an enterprise network. &lt;br /&gt;['T1213.003']: Monitor for third-party application logging, messaging, and/or other artifacts that may leverage code repositories to collect valuable information. Monitor access to code repositories, especially performed by privileged users such as Active Directory Domain or Enterprise Administrators as these types of accounts should generally not be used to access code repositories. In environments with high-maturity, it may be possible to leverage User-Behavioral Analytics (UBA) platforms to detect and alert on user-based anomalies.&lt;br /&gt;['T1621']: Monitor application logs for suspicious events including repeated MFA failures that may indicate user's primary credentials have been compromised.&lt;br /&gt;['T1072']: Often these third-party applications will have logs of their own that can be collected and correlated with other data from the environment. Ensure that third-party application logs are on-boarded to the enterprise logging system and the logs are regularly reviewed. Audit software deployment logs and look for suspicious or unauthorized activity. A system not typically used to push software to clients that suddenly is used for such a task outside of a known admin function may be suspicious. Monitor account login activity on these applications to detect suspicious/abnormal usage.
Perform application deployment at regular times so that irregular deployment activity stands out.&lt;br /&gt;['T1098.005']: 
Azure AD creates several log entries when new devices are enrolled, which can be monitored for unexpected device registrations.(Citation: AADInternals - BPRT) Additionally, joined devices can be viewed via the Azure AD portal.(Citation: Microsoft Manage Device Identities)&lt;br /&gt;['T1110.002']: Monitor authentication logs for system and application login failures of [Valid Accounts](https://attack.mitre.org/techniques/T1078). It is difficult to detect when hashes are cracked, since this is generally done outside the scope of the target network. Consider focusing efforts on detecting other adversary behavior used to acquire credential materials, such as [OS Credential Dumping](https://attack.mitre.org/techniques/T1003) or [Kerberoasting](https://attack.mitre.org/techniques/T1558/003).&lt;br /&gt;['T1213']: Monitor for third-party application logging, messaging, and/or other artifacts that may leverage information repositories to mine valuable information. Information repositories generally have a considerably large user base, detection of malicious use can be non-trivial. At minimum, access to information repositories performed by privileged users (for example, Active Directory Domain, Enterprise, or Schema Administrators) should be closely monitored and alerted upon, as these types of accounts should generally not be used to access information repositories. If the capability exists, it may be of value to monitor and alert on users that are retrieving and viewing a large number of documents and pages; this behavior may be indicative of programmatic means being used to retrieve all data within the repository. In environments with high-maturity, it may be possible to leverage User-Behavioral Analytics (UBA) platforms to detect and alert on user based anomalies.&lt;br /&gt;['T1505.001']: Monitor for third-party application logging, messaging, and/or other artifacts that may abuse SQL stored procedures to establish persistent access to systems. On a MSSQL Server, consider monitoring for xp_cmdshell usage.(Citation: NetSPI Startup Stored Procedures) Consider enabling audit features that can log malicious startup activities.&lt;br /&gt;['T1203']: Detecting software exploitation may be difficult depending on the tools available. Software exploits may not always succeed or may cause the exploited process to become unstable or crash.&lt;br /&gt;['T1566']: Monitor for third-party application logging, messaging, and/or other artifacts that may send phishing messages to gain access to victim systems. Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.(Citation: Microsoft Anti Spoofing)(Citation: ACSC Email Spoofing) URL inspection within email (including expanding shortened links) can help detect links leading to known malicious sites. Detonation chambers can be used to detect these links and either automatically go to these sites to determine if they're potentially malicious, or wait and capture the content if a user visits the link.&lt;br /&gt;['T1110.003']: Monitor authentication logs for system and application login failures of [Valid Accounts](https://attack.mitre.org/techniques/T1078). Consider the following event IDs:(Citation: Trimarc Detecting Password Spraying)
Domain Controllers: "Audit Logon" (Success &amp; Failure) for event ID 4625.
Domain Controllers: "Audit Kerberos Authentication Service" (Success &amp; Failure) for event ID 4771.
All systems: "Audit Logon" (Success &amp; Failure) for event ID 4648.&lt;br /&gt;['T1098.002']: Enable the UpdateFolderPermissions action for all logon types. The mailbox audit log will forward folder permission modification events to the Unified Audit Log. Create rules to alert on ModifyFolderPermissions operations where the Anonymous or Default user is assigned permissions other than None.

A larger than normal volume of emails sent from an account and similar phishing emails sent from real accounts within a network may be a sign that an account was compromised and attempts to leverage access with modified email permissions is occurring.&lt;br /&gt;['T1598.002']: Monitor for suspicious email activity, such as numerous accounts receiving messages from a single unusual/unknown sender. Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.(Citation: Microsoft Anti Spoofing)(Citation: ACSC Email Spoofing)&lt;br /&gt;['T1566.003']: Monitor for third-party application logging, messaging, and/or other artifacts that may send spearphishing messages via third-party services in an attempt to gain access to victim systems. &lt;br /&gt;['T1550.004']: Monitor for third-party application logging, messaging, and/or other service artifacts that provide context of user authentication to web applications, including cloud-based services. Combine this information with web credentials usage events to identify authentication events that do not fit the organization baseline.&lt;br /&gt;['T1210']: Detecting software exploitation may be difficult depending on the tools available. Software exploits may not always succeed or may cause the exploited process to become unstable or crash. Web Application Firewalls may detect improper inputs attempting exploitation.&lt;br /&gt;['T1557.003']: Monitor Windows logs (ex: EIDs 1341, 1342, 1020, and 1063) for changes to DHCP settings. These may also highlight DHCP issues such as when IP allocations are low or have run out.(Citation: dhcp_serv_op_events)(Citation: solution_monitor_dhcp_scopes)&lt;br /&gt;['T1562.002']: Monitor for third-party application logging, messaging, and/or other artifacts provided by third-party services that may disable Windows event logging to limit data that can be leveraged for detections and audits.&lt;br /&gt;['T1564.008']: Monitor for third-party application logging, messaging, and/or other artifacts that may use email rules to hide inbound emails in a compromised user's mailbox. Monitor email clients and applications for suspicious activity, such as missing messages or abnormal configuration and/or log entries.&lt;br /&gt;['T1505.002']: Monitor for third-party application logging, messaging, and/or other artifacts that may abuse Microsoft transport agents to establish persistent access to systems. Consider monitoring application logs for abnormal behavior that may indicate suspicious installation of application software components.&lt;br /&gt;['T1213.001']: Monitor for third-party application logging, messaging, and/or other artifacts that may leverage Confluence repositories to mine valuable information. Watch for access to Confluence repositories performed by privileged users (for example, Active Directory Domain, Enterprise, or Schema Administrators) as these types of accounts should generally not be used to access information repositories. If the capability exists, it may be of value to monitor and alert on users that are retrieving and viewing a large number of documents and pages; this behavior may be indicative of programmatic means being used to retrieve all data within the repository. In environments with high-maturity, it may be possible to leverage User-Behavioral Analytics (UBA) platforms to detect and alert on user based anomalies.&lt;br /&gt;['T1204']: Monitor for third-party application logging, messaging, and/or other artifacts that may rely upon specific actions by a user in order to gain execution.&lt;br /&gt;['T1133']: When authentication is not required to access an exposed remote service, monitor for follow-on activities such as anomalous external use of the exposed API or application.&lt;br /&gt;['T1027.005']: The first detection of a malicious tool may trigger an anti-virus or other security tool alert. Similar events may also occur at the boundary through network IDS, email scanning appliance, etc. The initial detection should be treated as an indication of a potentially more invasive intrusion. The alerting system should be thoroughly investigated beyond that initial alert for activity that was not detected. Adversaries may continue with an operation, assuming that individual events like an anti-virus detect will not be investigated or that an analyst will not be able to conclusively link that event to other activity occurring on the network.&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Confluence Logs" url="https://confluence.atlassian.com/doc/working-with-confluence-logs-108364721.html"/>
            <reference name="Mitre ATT&amp;CK Data Source DS0015" url="https://attack.mitre.org/datasources/DS0015"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:02.619">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-M1037" name="Filter Network Traffic" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>Use network appliances to filter ingress or egress traffic and perform protocol-based filtering. Configure software on endpoints to filter network traffic.&lt;br /&gt;&lt;p&gt;Detailed mitigations per technique:&lt;/p&gt;&lt;br /&gt;['T1205.001', 'T1205']: Mitigation of some variants of this technique could be achieved through the use of stateful firewalls, depending upon how it is implemented.&lt;br /&gt;['T1557']: Use network appliances and host-based security software to block network traffic that is not necessary within the environment, such as legacy protocols that may be leveraged for AiTM conditions.&lt;br /&gt;['T1171', 'T1557.001']: Use host-based security software to block LLMNR/NetBIOS traffic. Enabling SMB Signing can stop NTLMv2 relay attacks.(Citation: byt3bl33d3r NTLM Relaying)(Citation: Secure Ideas SMB Relay)(Citation: Microsoft SMB Packet Signing)&lt;br /&gt;['T1572']: Consider filtering network traffic to untrusted or known bad domains and resources. &lt;br /&gt;['T1499.003', 'T1499.002', 'T1499.004']: Leverage services provided by Content Delivery Networks (CDN) or providers specializing in DoS mitigations to filter traffic upstream from services.(Citation: CERT-EU DDoS March 2017) Filter boundary traffic by blocking source addresses sourcing the attack, blocking ports that are being targeted, or blocking protocols being used for transport.&lt;br /&gt;['T1557.003']: Consider filtering DHCP traffic on ports 67 and 68 to/from unknown or untrusted DHCP servers. Furthermore, consider enabling DHCP snooping on layer 2 switches as it will prevent DHCP spoofing attacks and starvation attacks. Additionally, port security may also be enabled on layer switches. Consider tracking available IP addresses through a script or a tool.&lt;br /&gt;['T1498.002', 'T1498', 'T1498.001']: When flood volumes exceed the capacity of the network connection being targeted, it is typically necessary to intercept the incoming traffic upstream to filter out the attack traffic from the legitimate traffic. Such defenses can be provided by the hosting Internet Service Provider (ISP) or by a 3rd party such as a Content Delivery Network (CDN) or providers specializing in DoS mitigations.(Citation: CERT-EU DDoS March 2017)

Depending on flood volume, on-premises filtering may be possible by blocking source addresses sourcing the attack, blocking ports that are being targeted, or blocking protocols being used for transport.(Citation: CERT-EU DDoS March 2017)

As immediate response may require rapid engagement of 3rd parties, analyze the risk associated to critical resources being affected by Network DoS attacks and create a disaster recovery plan/business continuity plan to respond to incidents.(Citation: CERT-EU DDoS March 2017)&lt;br /&gt;['T1094']: Filter network traffic to look for unusual or non-standard protocols.&lt;br /&gt;['T1071.004']: Consider filtering DNS requests to unknown, untrusted, or known bad domains and resources. Resolving DNS requests with on-premise/proxy servers may also disrupt adversary attempts to conceal data within DNS packets. &lt;br /&gt;['T1090.003', 'T1090']: Traffic to known anonymity networks and C2 infrastructure can be blocked through the use of network allow and block lists. It should be noted that this kind of blocking may be circumvented by other techniques like [Domain Fronting](https://attack.mitre.org/techniques/T1090/004).&lt;br /&gt;['T1197']: Modify network and/or host firewall rules, as well as other network controls, to only allow legitimate BITS traffic.&lt;br /&gt;['T1048.001', 'T1048.003', 'T1048.002']: Enforce proxies and use dedicated servers for services such as DNS and only allow those systems to communicate over respective ports/protocols, instead of all systems within a network. &lt;br /&gt;['T1021.005']: VNC defaults to TCP ports 5900 for the server, 5800 for browser access, and 5500 for a viewer in listening mode. Filtering or blocking these ports will inhibit VNC traffic utilizing default ports.&lt;br /&gt;['T1218.012']: Consider modifying host firewall rules to prevent egress traffic from verclsid.exe.&lt;br /&gt;['T1499', 'T1499.001']: Leverage services provided by Content Delivery Networks (CDN) or providers specializing in DoS mitigations to filter traffic upstream from services.(Citation: CERT-EU DDoS March 2017) Filter boundary traffic by blocking source addresses sourcing the attack, blocking ports that are being targeted, or blocking protocols being used for transport. To defend against SYN floods, enable SYN Cookies.&lt;br /&gt;['T1188']: Traffic to known anonymity networks and C2 infrastructure can be blocked through the use of network black and white lists. It should be noted that this kind of blocking may be circumvented by other techniques like [Domain Fronting](https://attack.mitre.org/techniques/T1172).&lt;br /&gt;['T1570', 'T1021.002']: Consider using the host firewall to restrict file sharing communications such as SMB. (Citation: Microsoft Preventing SMB)&lt;br /&gt;['T1552', 'T1552.005']: Limit access to the Instance Metadata API using a host-based firewall such as iptables. A properly configured Web Application Firewall (WAF) may help prevent external adversaries from exploiting Server-side Request Forgery (SSRF) attacks that allow access to the Cloud Instance Metadata API.(Citation: RedLock Instance Metadata API 2018)&lt;br /&gt;['T1048']: Enforce proxies and use dedicated servers for services such as DNS and only allow those systems to communicate over respective ports/protocols, instead of all systems within a network.&lt;br /&gt;['T1219']: Properly configure firewalls, application firewalls, and proxies to limit outgoing traffic to sites and services used by remote access tools.&lt;br /&gt;['T1187']: 
Block SMB traffic from exiting an enterprise network with egress filtering or by blocking TCP ports 139, 445 and UDP port 137. Filter or block WebDAV protocol traffic from exiting the network. If access to external resources over SMB and WebDAV is necessary, then traffic should be tightly limited with allowlisting. (Citation: US-CERT SMB Security) (Citation: US-CERT APT Energy Oct 2017)&lt;br /&gt;['T1602.002', 'T1602', 'T1602.001']: Apply extended ACLs to block unauthorized protocols outside the trusted network.(Citation: US-CERT TA17-156A SNMP Abuse 2017)&lt;br /&gt;['T1095']: Filter network traffic to prevent use of protocols across the network boundary that are unnecessary.&lt;br /&gt;['T1537']: Implement network-based filtering restrictions to prohibit data transfers to untrusted VPCs.&lt;br /&gt;['T1599']: Upon identifying a compromised network device being used to bridge a network boundary, block the malicious packets using an unaffected network device in path, such as a firewall or a router that has not been compromised.  Continue to monitor for additional activity and to ensure that the blocks are indeed effective.&lt;br /&gt;['T1522']: Limit access to the Instance Metadata API using a host-based firewall such as iptables.(Citation: RedLock Instance Metadata API 2018) A properly configured Web Application Firewall (WAF) may help prevent external adversaries from exploiting Server-side Request Forgery (SSRF) attacks that allow access to the Cloud Instance Metadata API.&lt;br /&gt;['T1557.002']: Consider enabling DHCP Snooping and Dynamic ARP Inspection on switches to create mappings between IP addresses requested via DHCP and ARP tables and tie the values to a port on the switch that may block bogus traffic.(Citation: Cisco ARP Poisoning Mitigation 2016)(Citation: Juniper DAI 2020)&lt;br /&gt;['T1530']: Cloud service providers support IP-based restrictions when accessing cloud resources. Consider using IP allowlisting along with user account management to ensure that data access is restricted not only to valid users but only from expected IP ranges to mitigate the use of stolen credentials to access data.&lt;br /&gt;['T1599.001']: Block Traffic	Upon identifying a compromised network device being used to bridge a network boundary, block the malicious packets using an unaffected network device in path, such as a firewall or a router that has not been compromised.  Continue to monitor for additional activity and to ensure that the blocks are indeed effective.&lt;br /&gt;['T1078']: Cloud service providers support IP-based restrictions when accessing cloud resources. Consider using IP whitelisting on cloud-based systems along with user account management to ensure that data access is restricted not only to valid users but only from expected IP ranges to mitigate the use of stolen credentials to access data.&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Mitre ATT&amp;CK Mitigation M1037" url="https://attack.mitre.org/mitigations/M1037"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:02.731">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-DS0029" name="Network Traffic" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>Data transmitted across a network (ex: Web, DNS, Mail, File, etc.), that is either summarized (ex: Netflow) and/or captured as raw data in an analyzable format (ex: PCAP)&lt;br /&gt;&lt;p&gt;Detailed detections per technique:&lt;/p&gt;&lt;br /&gt;['T1499.003']: Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.&lt;br /&gt;['T1011.001']: Monitor network data for uncommon data flows., such as the usage of abnormal/unexpected protocols.&lt;br /&gt;['T1071']: Monitor and analyze traffic flows that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, or gratuitous or anomalous traffic patterns). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).&lt;br /&gt;['T1020']: Monitor and analyze network flows associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, or gratuitous or anomalous traffic patterns). Consider analyzing newly constructed network connections that are sent or received by untrusted hosts, unexpected hardware devices, or other uncommon data flows.&lt;br /&gt;['T1571']: Monitor network data flows for unexpected patterns and metadata that may be indicative of a mismatch between protocol and utilized port.&lt;br /&gt;['T1187']: Monitor for SMB traffic on TCP ports 139, 445 and UDP port 137 and WebDAV traffic attempting to exit the network to unknown external systems.If attempts are detected, then investigate endpoint data sources to find the root cause.&lt;br /&gt;['T1008']: Monitor network data for uncommon data flows, such as unexpected surges or other abnormal inbound/outbound patterns.&lt;br /&gt;['T1029']: Monitor for network traffic originating from unknown/unexpected hardware devices. Local network traffic metadata (such as source MAC addressing) as well as usage of network management protocols such as DHCP may be helpful in identifying hardware.&lt;br /&gt;['T1021.001']: Monitor network traffic for uncommon data flows that may use https://attack.mitre.org/techniques/T1078 to log into a computer using the Remote Desktop Protocol (RDP).&lt;br /&gt;['T1570']: Monitor for network traffic originating from unknown/unexpected hardware devices. Local network traffic metadata (such as source MAC addressing) as well as usage of network management protocols such as DHCP may be helpful in identifying hardware. &lt;br /&gt;['T1021.002']: Monitor network data for uncommon SMB data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.&lt;br /&gt;['T1105']: Monitor network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.&lt;br /&gt;['T1071.001']: Monitor for web traffic to/from known-bad or suspicious domains and analyze traffic flows that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, or gratuitous or anomalous traffic patterns). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).&lt;br /&gt;['T1205.001']: Monitor and analyze network flows associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, or gratuitous or anomalous traffic patterns). Consider analyzing newly constructed network connections that are sent or received by untrusted hosts, unexpcted hardware devices, or other uncommon data flows.&lt;br /&gt;['T1071.004']: Monitor for DNS traffic to/from known-bad or suspicious domains and analyze traffic flows that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, or gratuitous or anomalous traffic patterns). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).&lt;br /&gt;['T1568.001']: In general, detecting usage of fast flux DNS is difficult due to web traffic load balancing that services client requests quickly. In single flux cases only IP addresses change for static domain names. In double flux cases, nothing is static. Defenders such as domain registrars and service providers are likely in the best position for detection.&lt;br /&gt;['T1565']: Monitor for network traffic originating from unknown/unexpected hardware devices.&lt;br /&gt;['T1568.002']: Detecting dynamically generated domains can be challenging due to the number of different DGA algorithms, constantly evolving malware families, and the increasing complexity of the algorithms. There is a myriad of approaches for detecting a pseudo-randomly generated domain name, including using frequency analysis, Markov chains, entropy, proportion of dictionary words, ratio of vowels to other characters, and more. (Citation: Data Driven Security DGA) CDN domains may trigger these detections due to the format of their domain names. In addition to detecting a DGA domain based on the name, another more general approach for detecting a suspicious domain is to check for recently registered names or for rarely visited domains.
Machine learning approaches to detecting DGA domains have been developed and have seen success in applications. One approach is to use N-Gram methods to determine a randomness score for strings used in the domain name. If the randomness score is high, and the domains are not whitelisted (CDN, etc), then it may be determined if a domain is related to a legitimate host or DGA. (Citation: Pace University Detecting DGA May 2017) Another approach is to use deep learning to classify domains as DGA-generated(Citation: Elastic Predicting DGA)]&lt;br /&gt;['T1612']: Monitor for established network communications with anomalous IPs that have never been seen before in the environment that may indicate the download of malicious code.&lt;br /&gt;['T1557.003']: Monitor network traffic for anomalies associated with known AiTM behavior. Consider monitoring for modifications to system configuration files involved in shaping network traffic flow.&lt;br /&gt;['T1021']: Monitor network data for uncommon data flows that may be related to abuse of https://attack.mitre.org/techniques/T1078 to log into a service specifically designed to accept remote connections, such as RDP, telnet, SSH, and VNC.&lt;br /&gt;['T1602.001']: Monitor for newly constructed network connections that are sent or received by untrusted hosts or uncommon data flows. Consider analyzing packet contents to detect application layer protocols, leveraging SSL/TLS inspection for encrypted traffic, that do not follow the expected protocol standards and traffic flows(e.g. snmp traffic originating from unauthorized or untrusted hosts, signature detection for strings mapped to device configuration(s), and anomolies in snmp request(s))&lt;br /&gt;['T1218.003']: Monitor for newly constructed network connections that are sent or received by untrusted hosts, such as Sysmon Event 3 (Network connection) where Image contains CMSTP.exe and DestinationIP is external.&lt;br /&gt;['T1218']: Monitor for newly constructed network connections that are sent or received by untrusted hosts. &lt;br /&gt;['T1020.001']: Monitor for newly constructed network connections that are sent or received by abnormal or untrusted hosts. &lt;br /&gt;['T1020']: Monitor for newly constructed network connections associated with processes performing collection activity, especially those involving abnormal/untrusted hosts. &lt;br /&gt;['T1542.005']: Monitor for newly constructed network device configuration and system image against a known-good version to discover unauthorized changes to system boot, startup configuration, or the running OS. (Citation: Cisco IOS Software Integrity Assurance - Secure Boot) (Citation: Cisco IOS Software Integrity Assurance - Image File Verification) The same process can be accomplished through a comparison of the run-time memory, though this is non-trivial and may require assistance from the vendor.&lt;br /&gt;['T1021.004']: Monitor for newly constructed network connections (typically port 22) that may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to log into remote machines using Secure Shell (SSH). Use of SSH may be legitimate depending on the environment and how it's used. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior with SSH.&lt;br /&gt;['T1602.002']: Monitor for newly constructed network connections that are sent or received by untrusted hosts or uncommon data flows. Consider analyzing packet contents to detect application layer protocols, leveraging SSL/TLS inspection for encrypted traffic, that do not follow the expected protocol standards and traffic flows (e.g. unauthorized, gratuitous, or anomalous traffic patterns attempting to access network configuration content)&lt;br /&gt;['T1030']: Monitor for newly constructed network connections that are sent or received by untrusted hosts or uncommon data flows (e.g. unusual network communications or suspicious communications sending fixed size data packets at regular intervals as well as unusually long connection patterns). Consider analyzing packet contents to detect application layer protocols, leveraging SSL/TLS inspection for encrypted traffic, that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, protocol port mismatch, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments (e.g. monitor anomalies in use of files that do not normally initiate network connections or unusual connections initiated&lt;br /&gt;['T1047']: Monitor network traffic for WMI connections; the use of WMI in environments that do not typically use WMI may be suspect.&lt;br /&gt;['T1197']: Monitor for newly constructed network activity generated by BITS. BITS jobs use HTTP(S) and SMB for remote connections and are tethered to the creating user and will only function when that user is logged on (this rule applies even if a user attaches the job to a service account).&lt;br /&gt;['T1542']: Monitor for newly constructed network device configuration and system image against a known-good version to discover unauthorized changes to system boot, startup configuration, or the running OS. The same process can be accomplished through a comparison of the run-time memory, though this is non-trivial and may require assistance from the vendor.&lt;br /&gt;['T1021.001']: Monitor for newly constructed network connections (typically over port 3389) that may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to log into a computer using the Remote Desktop Protocol (RDP). The adversary may then perform actions as the logged-on user. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior with RDP.&lt;br /&gt;['T1008']: Monitor for newly constructed network connections that may use fallback or alternate communication channels if the primary channel is compromised or inaccessible in order to maintain reliable command and control and to avoid data transfer thresholds. Processes utilizing the network that do not normally have network communication or have never been seen before may be suspicious.&lt;br /&gt;['T1204']: Monitor for newly constructed web-based network connections that are sent to malicious or suspicious destinations (e.g. destinations attributed to phishing campaigns). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments (e.g. monitor anomalies in use of files that do not normally initiate network connections or unusual connections initiated by regsvr32.exe, rundll.exe, .SCF, HTA, MSI, DLLs, or msiexec.exe).&lt;br /&gt;['T1021']: Monitor for newly constructed network connections that may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to log into a service specifically designed to accept remote connections, such as RDP, telnet, SSH, and VNC. Monitor network connections involving common remote management protocols, such as ports tcp:3283 and tcp:5900, as well as ports tcp: 3389 and tcp:22 for remote login.&lt;br /&gt;['T1021.003']: Monitor for newly constructed network connections that may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to interact with remote machines using Distributed Component Object Model (DCOM). The adversary may then perform actions as the logged-on user. Monitor for any influxes or abnormal increases in DCOM related Distributed Computing Environment/Remote Procedure Call (DCE/RPC) traffic (typically over port 135).&lt;br /&gt;['T1021.006']: 
Monitor for newly constructed network connections using Windows Remote Management (WinRM), such as remote WMI connection attempts (typically over port 5985 when using HTTP and 5986 for HTTPS).&lt;br /&gt;['T1011.001']: Monitor for newly constructed network connections that may attempt to exfiltrate data over Bluetooth rather than the command and control channel. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.&lt;br /&gt;['T1105']: Monitor for newly constructed network connections that are sent or received by untrusted hosts or creating files on-system may be suspicious. Use of utilities, such as FTP, that does not normally occur may also be suspicious.&lt;br /&gt;['T1602']: Monitor for newly constructed network connections that are sent or received by untrusted hosts or uncommon data flows. Consider analyzing packet contents to detect application layer protocols, leveraging SSL/TLS inspection for encrypted traffic, that do not follow the expected protocol standards and traffic flows (e.g. unauthorized, gratuitous, or anomalous traffic patterns attempting to access configuration content)&lt;br /&gt;['T1021.002']: Monitor for newly constructed network connections (typically over ports 139 or 445), especially those that are sent or received by abnormal or untrusted hosts. Correlate these network connections with remote login events and associated SMB-related activity such as file transfers and remote process execution.&lt;br /&gt;['T1018']: Monitor for newly constructed network connections associated with pings/scans that may attempt to get a listing of other systems by IP address, hostname, or other logical identifier on a network that may be used for Lateral Movement from the current system.&lt;br /&gt;['T1011']: Monitor for newly constructed network connections that may attempt to exfiltrate data over a different network medium than the command and control channel. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.&lt;br /&gt;['T1021.005']: Monitor for newly constructed network connections that may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to remotely control machines using Virtual Network Computing (VNC). Use of VNC may be legitimate depending on the environment and how it's used. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior using VNC. &lt;br /&gt;['T1568.001']: Monitor for newly constructed network connections that may use Fast Flux DNS to hide a command and control channel behind an array of rapidly changing IP addresses linked to a single domain resolution.&lt;br /&gt;['T1176']: Monitor for newly constructed network connections that are sent or received by untrusted hosts.&lt;br /&gt;['T1003']: Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).&lt;br /&gt;['T1602']: Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g. unauthorized, gratuitous, or anomalous traffic patterns attempting to access configuration content)&lt;br /&gt;['T1071.003']: Monitor and analyze traffic patterns and packet inspection associated to protocol(s), leveraging SSL/TLS inspection for encrypted traffic, that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).&lt;br /&gt;['T1557']: Monitor network traffic for anomalies associated with known AiTM behavior.&lt;br /&gt;['T1491']: Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g. unauthorized, gratuitous, or anomalous traffic patterns attempting to access internal and external websites and services). Consider correlating with application monitoring for inidcation of unplanned service interrputions or unauthorized content changes.&lt;br /&gt;['T1589.002']: Monitor for suspicious network traffic that could be indicative of probing for email addresses and/or usernames, such as large/iterative quantities of authentication requests originating from a single source (especially if the source is known to be associated with an adversary/botnet). Analyzing web metadata may also reveal artifacts that can be attributed to potentially malicious activity, such as referer or user-agent string HTTP/S fields.&lt;br /&gt;['T1210']: Use deep packet inspection to look for artifacts of common exploit traffic, such as known payloads.&lt;br /&gt;['T1189']: Monitor for networks that solicits and obtains the configuration information of the queried device &lt;br /&gt;['T1566.001']: Monitor and analyze SSL/TLS traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)). Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.(Citation: Microsoft Anti Spoofing)(Citation: ACSC Email Spoofing)&lt;br /&gt;['T1070.005']: Monitoring for SMB traffic between systems may also be captured and decoded to look for related network share session and file transfer activity.&lt;br /&gt;['T1071.004']: Monitor and analyze traffic patterns and packet inspection associated to protocol(s), leveraging SSL/TLS inspection for DNSSEC traffic, that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).&lt;br /&gt;['T1565.002']: Monitor for networks that solicits and obtains the configuration information of the queried device. &lt;br /&gt;['T1105']: Monitor network traffic content for files and other potentially malicious content, especially data coming in from abnormal/unknown domain and IPs.&lt;br /&gt;['T1020']: Monitor network traffic content for evidence of data exfiltration, such as gratuitous or anomalous outbound traffic containing collected data. Consider correlation with process monitoring and command lines associated with collection and exfiltration.&lt;br /&gt;['T1589']: Monitor for suspicious network traffic that could be indicative of probing for user information, such as large/iterative quantities of authentication requests originating from a single source (especially if the source is known to be associated with an adversary/botnet). Analyzing web metadata may also reveal artifacts that can be attributed to potentially malicious activity, such as referer or user-agent string HTTP/S fields.&lt;br /&gt;['T1205']: Monitor and analyze network packet contents to detect application layer protocols, leveraging SSL/TLS inspection for encrypted traffic, that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, protocol port mismatch, anomalous syntax, or structure). Consider packet inspection for Wake-on-LAN magic packet consists of 6 bytes of &lt;code&gt;FF&lt;/code&gt; followed by sixteen repetitions of the target system's IEEE address. Seeing this string anywhere in a packet's payload may be indicative of a Wake-on-LAN attempt.(Citation: GitLab WakeOnLAN)&lt;br /&gt;['T1602.001']: Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flow (e.g. snmp traffic originating from unauthorized or untrusted hosts, signature detection for strings mapped to device configuration(s), and anomolies in snmp request(s))&lt;br /&gt;['T1557.002']: Monitor network traffic for unusual ARP traffic, gratuitous ARP replies may be suspicious. Consider collecting changes to ARP caches across endpoints for signs of ARP poisoning. For example, if multiple IP addresses map to a single MAC address, this could be an indicator that the ARP cache has been poisoned.&lt;br /&gt;['T1207']: Monitor and analyze network traffic associated with data replication (such as calls to DrsAddEntry, DrsReplicaAdd, and especially GetNCChanges) between DCs as well as to/from non DC hosts. (Citation: GitHub DCSYNCMonitor)(Citation: DCShadow Blog) DC replication will naturally take place every 15 minutes but can be triggered by an adversary or by legitimate urgent changes (ex: passwords).&lt;br /&gt;['T1190']: Use deep packet inspection to look for artifacts of common exploit traffic, such as SQL injection strings or known payloads.&lt;br /&gt;['T1001.002']: Monitor and analyze traffic patterns and packet inspection associated to protocol(s), leveraging SSL/TLS inspection for encrypted traffic, that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure).&lt;br /&gt;['T1612']: Monitor for network traffic associated with requests and/or downloads of container images, especially those that may be anomalous or known malicious.&lt;br /&gt;['T1602.002']: Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g. unauthorized, gratuitous, or anomalous traffic patterns attempting to access network configuration content)&lt;br /&gt;['T1204.001']: Monitor and analyze traffic patterns and packet inspection associated with web-based network connections that are sent to malicious or suspicious detinations (e.g. destinations attributed to phishing campaigns). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments (e.g. monitor anomalies in use of files that do not normally initiate network connections or unusual connections initiated by regsvr32.exe, rundll.exe, .SCF, HTA, MSI, DLLs, or msiexec.exe).&lt;br /&gt;['T1132.002']: Monitor for network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.&lt;br /&gt;['T1557.001']: Monitor for traffic on ports UDP 5355 and UDP 137 if LLMNR/NetBIOS is disabled by security policy.&lt;br /&gt;['T1595.003']: Monitor for suspicious network traffic that could be indicative of scanning, such as large quantities originating from a single source (especially if the source is known to be associated with an adversary/botnet).&lt;br /&gt;['T1557.003']: Monitor network traffic for suspicious/malicious behavior involving DHCP, such as changes in DNS and/or gateway parameters.&lt;br /&gt;['T1566.002']: Monitor and analyze SSL/TLS traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).&lt;br /&gt;['T1571']: Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used. https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf&lt;br /&gt;['T1566.003']: Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)). &lt;br /&gt;['T1187']: For internal traffic, monitor the workstation-to-workstation unusual (vs. baseline) SMB traffic. For many networks there should not be any, but it depends on how systems on the network are configured and where resources are located.&lt;br /&gt;['T1505']: Monitor and analyze traffic patterns and packet inspection associated to protocol(s), leveraging SSL/TLS inspection for encrypted traffic, that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)). (Citation: US-CERT Alert TA15-314A Web Shells)&lt;br /&gt;['T1570']: Monitor for unusual processes with internal network connections creating files on-system may be suspicious&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Mitre ATT&amp;CK Data Source DS0029" url="https://attack.mitre.org/datasources/DS0029"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:02.676">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-DS0013" name="Sensor Health" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>Information from host telemetry providing insights about system status, errors, or other notable functional activity&lt;br /&gt;&lt;p&gt;Detailed detections per technique:&lt;/p&gt;&lt;br /&gt;['T1562.001']: Lack of expected log events may be suspicious. Monitor for telemetry that provides context for modification or deletion of information related to security software processes or services such as Windows Defender definition files in Windows and System log files in Linux.&lt;br /&gt;['T1499.002']: Detection of Endpoint DoS can sometimes be achieved before the effect is sufficient to cause significant impact to the availability of the service, but such response time typically requires very aggressive monitoring and responsiveness. Monitor for logging, messaging, and other artifacts highlighting the health of host sensors (ex: metrics, errors, and/or exceptions from logging applications)&lt;br /&gt;['T1195']: Perform physical inspection of hardware to look for potential tampering. Perform integrity checking on pre-OS boot mechanisms that can be manipulated for malicious purposes and compare against known good baseline behavior.&lt;br /&gt;['T1562.002']: Monitor for logging, messaging that may disable Windows event logging to limit data that can be leveraged for detections and audits.&lt;br /&gt;['T1529']: Monitor for logging, messaging, and other artifacts highlighting the health of host sensors (ex: metrics, errors, and/or exceptions from logging applications) that may suggest the shutting down or rebooting of the system. Windows event logs may also designate activity associated with a shutdown/reboot, ex. Event ID 1074 and 6006.&lt;br /&gt;['T1498.001']: Detection of Network DoS can sometimes be achieved before the traffic volume is sufficient to cause impact to the availability of the service, but such response time typically requires very aggressive monitoring and responsiveness or services provided by an upstream network service provider. Monitor for logging, messaging, and other artifacts highlighting the health of host sensors (ex: metrics, errors, and/or exceptions from logging applications)&lt;br /&gt;['T1562.006']: Detect lack of reported activity from a host sensor. Different methods of blocking may cause different disruptions in reporting. Systems may suddenly stop reporting all data or only certain kinds of data. Depending on the types of host information collected, an analyst may be able to detect the event that triggered a process to stop or connection to be blocked. For example, Sysmon will log when its configuration state has changed (Event ID 16) and Windows Management Instrumentation (WMI) may be used to subscribe ETW providers that log any provider removal from a specific trace session. (Citation: Medium Event Tracing Tampering 2018)&lt;br /&gt;['T1562.003']: Users checking or changing their &lt;code&gt;HISTCONTROL&lt;/code&gt;, &lt;code&gt;HISTFILE&lt;/code&gt;, or &lt;code&gt;HISTFILESIZE&lt;/code&gt; environment variables may be suspicious.&lt;br /&gt;['T1496']: Consider monitoring process resource usage to determine anomalous activity associated with malicious hijacking of computer resources such as CPU, memory, and graphics processing resources.&lt;br /&gt;['T1195.003']: Perform physical inspection of hardware to look for potential tampering. Perform integrity checking on pre-OS boot mechanisms that can be manipulated for malicious purposes and and compare against known good baseline behavior.&lt;br /&gt;['T1562']: Monitor logging, messaging, and other artifacts highlighting the health of host sensors (ex: metrics, errors, and/or exceptions from logging applications) that may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms. Lack of log events may be suspicious.&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Mitre ATT&amp;CK Data Source DS0013" url="https://attack.mitre.org/datasources/DS0013"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:02.616">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-DS0002" name="User Account" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>A profile representing a user, device, service, or application used to authenticate and access resources&lt;br /&gt;&lt;p&gt;Detailed detections per technique:&lt;/p&gt;&lt;br /&gt;['T1110.002']:  Monitor for many failed authentication attempts across various accounts that may result from password spraying attempts. It is difficult to detect when hashes are cracked, since this is generally done outside the scope of the target network. (ex: Windows EID 4625 or 5379)&lt;br /&gt;['T1078.002']: Monitor for an attempt by a user to gain access to a network or computing resource, often by the use of domain authentication services, such as the System Security Services Daemon (sssd) on Linux&lt;br /&gt;['T1078.004']: Monitor the activity of cloud accounts to detect abnormal or malicious behavior, such as accessing information outside of the normal function of the account or account usage at atypical hours.&lt;br /&gt;['T1552.007']: It may be possible to detect adversary use of credentials they have obtained such as in [Valid Accounts](https://attack.mitre.org/techniques/T1078).&lt;br /&gt;['T1070']: Monitor for an attempt by a user to gain access to a network or computing resource, often by providing credentials that may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined malware.&lt;br /&gt;['T1550.003']: Audit all Kerberos authentication and credential use events and review for discrepancies. Unusual remote authentication events that correlate with other suspicious activity (such as writing and executing binaries) may indicate malicious activity.&lt;br /&gt;['T1621']: Monitor user account logs for suspicious events: unusual login attempt source location, mismatch in location of login attempt and smart device receiving 2FA/MFA request prompts, and high volume of repeated login attempts, all of which may indicate user's primary credentials have been compromised minus 2FA/MFA mechanism.&lt;br /&gt;['T1212']: Credential resources obtained through exploitation may be detectable in use if they are not normally used or seen.&lt;br /&gt;['T1110']:  Monitor for many failed authentication attempts across various accounts that may result from password spraying attempts. It is difficult to detect when hashes are cracked, since this is generally done outside the scope of the target network.&lt;br /&gt;['T1606.002']: Monitor for user authentication attempts, when requesting access tokens to services, that failed because of Conditional Access Policies (CAP). Some SAML tokens features, such as the location of a user, may not be as easy to claim.&lt;br /&gt;['T1207']: Investigate usage of Kerberos Service Principal Names (SPNs), especially those associated with services (beginning with "GC/") by computers not present in the DC organizational unit (OU). The SPN associated with the Directory Replication Service (DRS) Remote Protocol interface (GUID E3514235-4B06-11D1-AB04-00C04FC2DCD2) can be set without logging.(Citation: ADDSecurity DCShadow Feb 2018) A rogue DC must authenticate as a service using these two SPNs for the replication process to successfully complete.&lt;br /&gt;['T1552.005']: It may be possible to detect adversary use of credentials they have obtained such as in [Valid Accounts](https://attack.mitre.org/techniques/T1078).&lt;br /&gt;['T1078.001']: Monitor for an attempt by a user to gain access to a network or computing resource, often by providing credentials&lt;br /&gt;['T1550.002']: Monitor for user authentication attempts. From a classic Pass-The-Hash perspective, this technique uses a hash through the NTLMv1 / NTLMv2 protocol to authenticate against a compromised endpoint. This technique does not touch Kerberos. Therefore, NTLM LogonType 3 authentications that are not associated to a domain login and are not anonymous logins are suspicious. From an Over-Pass-The-Hash perspective, an adversary wants to exchange the hash for a Kerberos authentication ticket (TGT). One way to do this is by creating a sacrificial logon session with dummy credentials (LogonType 9) and then inject the hash into that session which triggers the Kerberos authentication process.&lt;br /&gt;['T1070.005']: Monitoring for Windows authentication logs are also useful in determining when authenticated network shares are established and by which account, and can be used to correlate network share activity to other events to investigate potentially malicious activity.&lt;br /&gt;['T1078']: Monitor for an attempt by a user that may obtain and abuse credentials of existing accounts as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. &lt;br /&gt;['T1070.003']: Monitor for an attempts by a user to gain access to a network or computing resource, often by providing credentials via remote terminal services, that do not have a corresponding entry in a command history file.&lt;br /&gt;['T1550']: Monitor for an attempt by a user to gain access to a network or computing resource, often by providing credentials that may use alternate authentication material, such as password hashes, Kerberos tickets, and application access tokens, in order to move laterally within an environment and bypass normal system access controls.&lt;br /&gt;['T1538']: Correlate other security systems with login information&lt;br /&gt;['T1552']: Monitor for an attempt by a user to gain access to a network or computing resource, often by providing credentials that may search compromised systems to find and obtain insecurely stored credentials.&lt;br /&gt;['T1564.002']: Monitor for newly constructed user accounts, such as userIDs under 500 on macOS, that may mask the presence of user accounts they create or modify.&lt;br /&gt;['T1136.003']: Monitor for newly constructed user accounts through the collection of usage logs from cloud user and administrator accounts to identify unusual activity in the creation of new accounts and assignment of roles to those accounts. Monitor for accounts assigned to admin roles that go over a certain threshold of known admins.&lt;br /&gt;['T1136.001']: Monitor for newly constructed user accounts through account audits to detect suspicious accounts that may have been created by an adversary. Collect data on account creation within a network or Windows Event ID 4720 (for when a user account is created on a Windows system and domain controller).&lt;br /&gt;['T1564']: Monitor for newly constructed user accounts that may attempt to hide artifacts associated with their behaviors to evade detection.&lt;br /&gt;['T1531']: Monitor for unexpected deletions of user accounts. Windows event logs may designate activity associated with an adversary's attempt to remove an account (ex: Event ID 4726 - A user account was deleted).

Alerting on these Event IDs may generate a high degree of false positives, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible.&lt;br /&gt;['T1098.001']: Monitor Azure Activity Logs for Service Principal and Application modifications. Monitor for the usage of APIs that create or import SSH keys, particularly by unexpected users or accounts such as the root account.&lt;br /&gt;['T1528']: Administrators should set up monitoring to trigger automatic alerts when policy criteria are met. For example, using a Cloud Access Security Broker (CASB), admins can create a "High severity app permissions" policy that generates alerts if apps request high severity permissions or send permissions requests for too many users.
Security analysts can hunt for malicious apps using the tools available in their CASB, identity provider, or resource provider (depending on platform.) For example, they can filter for apps that are authorized by a small number of users, apps requesting high risk permissions, permissions incongruous with the app's purpose, or apps with old "Last authorized" fields. A specific app can be investigated using an activity log displaying activities the app has performed, although some activities may be mis-logged as being performed by the user. App stores can be useful resources to further investigate suspicious apps.
Administrators can set up a variety of logs and leverage audit tools to monitor actions that can be conducted as a result of OAuth 2.0 access. For instance, audit reports enable admins to identify privilege escalation actions such as role creations or policy modifications, which could be actions performed after initial access.&lt;br /&gt;['T1531']: Monitor for changes made to user accounts for unexpected modification of properties, such as passwords or status (enabled/disabled). Windows event logs may designate activity associated with an adversary's attempt to remove access to an account:
Event ID 4723 - An attempt was made to change an account's password
Event ID 4724 - An attempt was made to reset an account's password
Event ID 4725 - A user account was disabled

Alerting on these Event IDs may generate a high degree of false positives, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible.&lt;br /&gt;['T1098.003']: Collect usage logs from cloud administrator accounts to identify unusual activity in the assignment of roles to those accounts. Monitor for accounts assigned to admin roles that go over a certain threshold of known admins.&lt;br /&gt;['T1098.005']: Monitor user accounts for new and suspicious device associations, such as those originating from unusual sources, occurring at unusual times, or following a suspicious login.(Citation: Microsoft DEV-0537) &lt;br /&gt;['T1098.002']: Monitor for unusual Exchange and Office 365 email account permissions changes that may indicate excessively broad permissions being granted to compromised accounts.&lt;br /&gt;['T1098']: Monitor events for changes to account objects and/or permissions on systems and the domain, such as event IDs 4738, 4728 and 4670. Monitor for modification of accounts in correlation with other suspicious activity. Changes may occur at unusual times or from unusual systems. Especially flag events where the subject and target accounts differ or that include additional flags such as changing a password without knowledge of the old password.

Monitor for unusual permissions changes that may indicate excessively broad permissions being granted to compromised accounts.&lt;br /&gt;['T1201']: Monitor for contextual data about an account that may attempt to access detailed information about the password policy used within an enterprise network or cloud environment.&lt;br /&gt;['T1134']: Monitor for contextual data about an account, which may include a username, user ID, environmental data, etc. that may modify access tokens to operate under a different user or system security context to perform actions and bypass access controls.&lt;br /&gt;['T1134.005']: Examine data in user's SID-History attributes&lt;br /&gt;['T1564.002']: Monitor for contextual data about an account, which may include a username, user ID, environmental data that may mask the presence of user accounts they create or modify. On macOS, identify users with an userID under 500 and the &lt;code&gt;Hide500Users&lt;/code&gt; key value in the &lt;code&gt;/Library/Preferences/com.apple.loginwindow&lt;/code&gt; plist file set to &lt;code&gt;TRUE&lt;/code&gt;.(Citation: Cybereason OSX Pirrit)&lt;br /&gt;['T1556.005']: Monitor Fine-Grained Password Policies and regularly audit user accounts and group settings.(Citation: dump_pwd_dcsync)&lt;br /&gt;['T1564']: Monitor for contextual data about an account, which may include a username, user ID, environmental data that may attempt to hide artifacts associated with their behaviors to evade detection.&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Mitre ATT&amp;CK Data Source DS0002" url="https://attack.mitre.org/datasources/DS0002"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:02.595">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="account-access-removal" name="Account Access Removal" desc="" library="">
          <threats>
            <threat ref="T-T1531" name="Account Access Removal" state="Expose" source="MANUAL" edited="false" owner="JamesRabe" library="" editable="true">
              <desc>Adversaries may interrupt availability of system and network resources by inhibiting access to accounts utilized by legitimate users. Accounts may be deleted, locked, or manipulated (ex: changed credentials) to remove access to accounts. Adversaries may also subsequently log off and/or perform a [System Shutdown/Reboot](https://attack.mitre.org/techniques/T1529) to set malicious changes into place.(Citation: CarbonBlack LockerGoga 2019)(Citation: Unit42 LockerGoga 2019)&lt;br&gt;&lt;br&gt;In Windows, [Net](https://attack.mitre.org/software/S0039) utility, &lt;code&gt;Set-LocalUser&lt;/code&gt; and &lt;code&gt;Set-ADAccountPassword&lt;/code&gt; [PowerShell](https://attack.mitre.org/techniques/T1059/001) cmdlets may be used by adversaries to modify user accounts. In Linux, the &lt;code&gt;passwd&lt;/code&gt; utility may be used to change passwords. Accounts could also be disabled by Group Policy. &lt;br&gt;&lt;br&gt;Adversaries who use ransomware may first perform this and other Impact behaviors, such as [Data Destruction](https://attack.mitre.org/techniques/T1485) and [Defacement](https://attack.mitre.org/techniques/T1491), before completing the [Data Encrypted for Impact](https://attack.mitre.org/techniques/T1486) objective. &lt;br&gt;&lt;br&gt;Use process monitoring to monitor the execution and command line parameters of binaries involved in deleting accounts or changing passwords, such as use of [Net](https://attack.mitre.org/software/S0039). Windows event logs may also designate activity associated with an adversary's attempt to remove access to an account:&lt;br&gt;&lt;br&gt;* Event ID 4723 - An attempt was made to change an account's password&lt;br&gt;* Event ID 4724 - An attempt was made to reset an account's password&lt;br&gt;* Event ID 4726 - A user account was deleted&lt;br&gt;* Event ID 4740 - A user account was locked out&lt;br&gt;&lt;br&gt;Alerting on [Net](https://attack.mitre.org/software/S0039) and these Event IDs may generate a high degree of false positives, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible.</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references>
                <reference name="CarbonBlack LockerGoga 2019" url="https://www.carbonblack.com/2019/03/22/tau-threat-intelligence-notification-lockergoga-ransomware/"/>
                <reference name="Mitre ATT&amp;CK Technique T1531" url="https://attack.mitre.org/techniques/T1531"/>
                <reference name="Unit42 LockerGoga 2019" url="https://unit42.paloaltonetworks.com/born-this-way-origins-of-lockergoga/"/>
              </references>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-DS0002" mitigation="50"/>
                <countermeasure ref="C-DS0026" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="endpoint-denial-of-service" name="Endpoint Denial of Service" desc="" library="">
          <threats>
            <threat ref="T-T1499.003" name="Application Exhaustion Flood" state="Expose" source="MANUAL" edited="false" owner="JamesRabe" library="" editable="true">
              <desc>Adversaries may target resource intensive features of applications to cause a denial of service (DoS), denying availability to those applications. For example, specific features in web applications may be highly resource intensive. Repeated requests to those features may be able to exhaust system resources and deny access to the application or the server itself.(Citation: Arbor AnnualDoSreport Jan 2018)&lt;br&gt;&lt;br&gt;Detection of Endpoint DoS can sometimes be achieved before the effect is sufficient to cause significant impact to the availability of the service, but such response time typically requires very aggressive monitoring and responsiveness. Typical network throughput monitoring tools such as netflow, SNMP, and custom scripts can be used to detect sudden increases in circuit utilization.(Citation: Cisco DoSdetectNetflow) Real-time, automated, and qualitative study of the network traffic can identify a sudden surge in one type of protocol can be used to detect an attack as it starts.&lt;br&gt;&lt;br&gt;In addition to network level detections, endpoint logging and instrumentation can be useful for detection. Attacks targeting web applications may generate logs in the web server, application server, and/or database server that can be used to identify the type of attack, possibly before the impact is felt.</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references>
                <reference name="Arbor AnnualDoSreport Jan 2018" url="https://pages.arbornetworks.com/rs/082-KNA-087/images/13th_Worldwide_Infrastructure_Security_Report.pdf"/>
                <reference name="Cisco DoSdetectNetflow" url="https://www.cisco.com/c/en/us/td/docs/ios-xml/ios/netflow/configuration/15-mt/nf-15-mt-book/nf-detct-analy-thrts.pdf"/>
                <reference name="Mitre ATT&amp;CK Technique T1499.003" url="https://attack.mitre.org/techniques/T1499/003"/>
              </references>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-DS0013" mitigation="25"/>
                <countermeasure ref="C-DS0015" mitigation="25"/>
                <countermeasure ref="C-DS0029" mitigation="25"/>
                <countermeasure ref="C-M1037" mitigation="25"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="T-T1499.004" name="Application or System Exploitation" state="Expose" source="MANUAL" edited="false" owner="JamesRabe" library="" editable="true">
              <desc>Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.&lt;br&gt;&lt;br&gt;Adversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. &lt;br&gt;&lt;br&gt;Attacks targeting web applications may generate logs in the web server, application server, and/or database server that can be used to identify the type of attack. Externally monitor the availability of services that may be targeted by an Endpoint DoS.</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references>
                <reference name="Mitre ATT&amp;CK Technique T1499.004" url="https://attack.mitre.org/techniques/T1499/004"/>
                <reference name="Sucuri BIND9 August 2015" url="https://blog.sucuri.net/2015/08/bind9-denial-of-service-exploit-in-the-wild.html"/>
              </references>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-DS0013" mitigation="25"/>
                <countermeasure ref="C-DS0015" mitigation="25"/>
                <countermeasure ref="C-DS0029" mitigation="25"/>
                <countermeasure ref="C-M1037" mitigation="25"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="T-T1499.002" name="Service Exhaustion Flood" state="Expose" source="MANUAL" edited="false" owner="JamesRabe" library="" editable="true">
              <desc>Adversaries may target the different network services provided by systems to conduct a denial of service (DoS). Adversaries often target the availability of DNS and web services, however others have been targeted as well.(Citation: Arbor AnnualDoSreport Jan 2018) Web server software can be attacked through a variety of means, some of which apply generally while others are specific to the software being used to provide the service.&lt;br&gt;&lt;br&gt;One example of this type of attack is known as a simple HTTP flood, where an adversary sends a large number of HTTP requests to a web server to overwhelm it and/or an application that runs on top of it. This flood relies on raw volume to accomplish the objective, exhausting any of the various resources required by the victim software to provide the service.(Citation: Cloudflare HTTPflood)&lt;br&gt;&lt;br&gt;Another variation, known as a SSL renegotiation attack, takes advantage of a protocol feature in SSL/TLS. The SSL/TLS protocol suite includes mechanisms for the client and server to agree on an encryption algorithm to use for subsequent secure connections. If SSL renegotiation is enabled, a request can be made for renegotiation of the crypto algorithm. In a renegotiation attack, the adversary establishes a SSL/TLS connection and then proceeds to make a series of renegotiation requests. Because the cryptographic renegotiation has a meaningful cost in computation cycles, this can cause an impact to the availability of the service when done in volume.(Citation: Arbor SSLDoS April 2012)&lt;br&gt;&lt;br&gt;Detection of Endpoint DoS can sometimes be achieved before the effect is sufficient to cause significant impact to the availability of the service, but such response time typically requires very aggressive monitoring and responsiveness. Typical network throughput monitoring tools such as netflow, SNMP, and custom scripts can be used to detect sudden increases in circuit utilization.(Citation: Cisco DoSdetectNetflow) Real-time, automated, and qualitative study of the network traffic can identify a sudden surge in one type of protocol can be used to detect an attack as it starts.&lt;br&gt;&lt;br&gt;In addition to network level detections, endpoint logging and instrumentation can be useful for detection. Attacks targeting web applications may generate logs in the web server, application server, and/or database server that can be used to identify the type of attack, possibly before the impact is felt.&lt;br&gt;&lt;br&gt;Externally monitor the availability of services that may be targeted by an Endpoint DoS.</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references>
                <reference name="Arbor AnnualDoSreport Jan 2018" url="https://pages.arbornetworks.com/rs/082-KNA-087/images/13th_Worldwide_Infrastructure_Security_Report.pdf"/>
                <reference name="Arbor SSLDoS April 2012" url="https://www.netscout.com/blog/asert/ddos-attacks-ssl-something-old-something-new"/>
                <reference name="CAPEC-488" url="https://capec.mitre.org/data/definitions/488.html"/>
                <reference name="CAPEC-489" url="https://capec.mitre.org/data/definitions/489.html"/>
                <reference name="CAPEC-528" url="https://capec.mitre.org/data/definitions/528.html"/>
                <reference name="Cisco DoSdetectNetflow" url="https://www.cisco.com/c/en/us/td/docs/ios-xml/ios/netflow/configuration/15-mt/nf-15-mt-book/nf-detct-analy-thrts.pdf"/>
                <reference name="Cloudflare HTTPflood" url="https://www.cloudflare.com/learning/ddos/http-flood-ddos-attack/"/>
                <reference name="Mitre ATT&amp;CK Technique T1499.002" url="https://attack.mitre.org/techniques/T1499/002"/>
              </references>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-DS0013" mitigation="25"/>
                <countermeasure ref="C-DS0015" mitigation="25"/>
                <countermeasure ref="C-DS0029" mitigation="25"/>
                <countermeasure ref="C-M1037" mitigation="25"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="network-denial-of-service" name="Network Denial of Service" desc="" library="">
          <threats>
            <threat ref="T-T1498.001" name="Direct Network Flood" state="Expose" source="MANUAL" edited="false" owner="JamesRabe" library="" editable="true">
              <desc>Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.&lt;br&gt;&lt;br&gt;Botnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)&lt;br&gt;&lt;br&gt;Detection of a network flood can sometimes be achieved before the traffic volume is sufficient to cause impact to the availability of the service, but such response time typically requires very aggressive monitoring and responsiveness or services provided by an upstream network service provider. Typical network throughput monitoring tools such as netflow(Citation: Cisco DoSdetectNetflow), SNMP, and custom scripts can be used to detect sudden increases in network or service utilization. Real-time, automated, and qualitative study of the network traffic can identify a sudden surge in one type of protocol can be used to detect a network flood event as it starts. Often, the lead time may be small and the indicator of an event availability of the network or service drops. The analysis tools mentioned can then be used to determine the type of DoS causing the outage and help with remediation.</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references>
                <reference name="CAPEC-125" url="https://capec.mitre.org/data/definitions/125.html"/>
                <reference name="CAPEC-486" url="https://capec.mitre.org/data/definitions/486.html"/>
                <reference name="Cisco DoSdetectNetflow" url="https://www.cisco.com/c/en/us/td/docs/ios-xml/ios/netflow/configuration/15-mt/nf-15-mt-book/nf-detct-analy-thrts.pdf"/>
                <reference name="Mitre ATT&amp;CK Technique T1498.001" url="https://attack.mitre.org/techniques/T1498/001"/>
                <reference name="USNYAG IranianBotnet March 2016" url="https://www.justice.gov/opa/pr/seven-iranians-working-islamic-revolutionary-guard-corps-affiliated-entities-charged"/>
              </references>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-DS0013" mitigation="34"/>
                <countermeasure ref="C-DS0029" mitigation="33"/>
                <countermeasure ref="C-M1037" mitigation="33"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="T-T1498.002" name="Reflection Amplification" state="Expose" source="MANUAL" edited="false" owner="JamesRabe" library="" editable="true">
              <desc>Adversaries may attempt to cause a denial of service (DoS) by reflecting a high-volume of network traffic to a target. This type of Network DoS takes advantage of a third-party server intermediary that hosts and will respond to a given spoofed source IP address. This third-party server is commonly termed a reflector. An adversary accomplishes a reflection attack by sending packets to reflectors with the spoofed address of the victim. Similar to Direct Network Floods, more than one system may be used to conduct the attack, or a botnet may be used. Likewise, one or more reflectors may be used to focus traffic on the target.(Citation: Cloudflare ReflectionDoS May 2017) This Network DoS attack may also reduce the availability and functionality of the targeted system(s) and network.&lt;br&gt;&lt;br&gt;Reflection attacks often take advantage of protocols with larger responses than requests in order to amplify their traffic, commonly known as a Reflection Amplification attack. Adversaries may be able to generate an increase in volume of attack traffic that is several orders of magnitude greater than the requests sent to the amplifiers. The extent of this increase will depending upon many variables, such as the protocol in question, the technique used, and the amplifying servers that actually produce the amplification in attack volume. Two prominent protocols that have enabled Reflection Amplification Floods are DNS(Citation: Cloudflare DNSamplficationDoS) and NTP(Citation: Cloudflare NTPamplifciationDoS), though the use of several others in the wild have been documented.(Citation: Arbor AnnualDoSreport Jan 2018) In particular, the memcache protocol showed itself to be a powerful protocol, with amplification sizes up to 51,200 times the requesting packet.(Citation: Cloudflare Memcrashed Feb 2018)&lt;br&gt;&lt;br&gt;Detection of reflection amplification can sometimes be achieved before the traffic volume is sufficient to cause impact to the availability of the service, but such response time typically requires very aggressive monitoring and responsiveness or services provided by an upstream network service provider. Typical network throughput monitoring tools such as netflow(Citation: Cisco DoSdetectNetflow), SNMP, and custom scripts can be used to detect sudden increases in network or service utilization. Real-time, automated, and qualitative study of the network traffic can identify a sudden surge in one type of protocol can be used to detect a reflection amplification DoS event as it starts. Often, the lead time may be small and the indicator of an event availability of the network or service drops. The analysis tools mentioned can then be used to determine the type of DoS causing the outage and help with remediation.</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references>
                <reference name="Arbor AnnualDoSreport Jan 2018" url="https://pages.arbornetworks.com/rs/082-KNA-087/images/13th_Worldwide_Infrastructure_Security_Report.pdf"/>
                <reference name="CAPEC-490" url="https://capec.mitre.org/data/definitions/490.html"/>
                <reference name="Cisco DoSdetectNetflow" url="https://www.cisco.com/c/en/us/td/docs/ios-xml/ios/netflow/configuration/15-mt/nf-15-mt-book/nf-detct-analy-thrts.pdf"/>
                <reference name="Cloudflare DNSamplficationDoS" url="https://www.cloudflare.com/learning/ddos/dns-amplification-ddos-attack/"/>
                <reference name="Cloudflare Memcrashed Feb 2018" url="https://blog.cloudflare.com/memcrashed-major-amplification-attacks-from-port-11211/"/>
                <reference name="Cloudflare NTPamplifciationDoS" url="https://www.cloudflare.com/learning/ddos/ntp-amplification-ddos-attack/"/>
                <reference name="Cloudflare ReflectionDoS May 2017" url="https://blog.cloudflare.com/reflections-on-reflections/"/>
                <reference name="Mitre ATT&amp;CK Technique T1498.002" url="https://attack.mitre.org/techniques/T1498/002"/>
              </references>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-DS0013" mitigation="34"/>
                <countermeasure ref="C-DS0029" mitigation="33"/>
                <countermeasure ref="C-M1037" mitigation="33"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="45cce31f-bfbb-4184-8645-2f174daec9dc" diagramComponentId="77202c53-b5b7-48b6-8cd7-9f4f9c5bbcf4" ref="d1cc2170-9245-4a3b-86ca-b6713ec17cbf" name="Storage Functions" desc="" library="" parentComponentRef="f30fb5e7-b7d5-4a30-99fe-c9ea74fddb64" componentDefinitionRef="empty-component">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses/>
      <countermeasures/>
      <usecases/>
    </component>
    <component uuid="2fce875f-d24c-44ea-b157-5a3e19190501" diagramComponentId="ff113062-6c1d-41a2-a17b-a7809f6fb1aa" ref="c5427868-22c4-4243-b7d7-7e5e1fc85167" name="Collection" desc="" library="" parentComponentRef="d1cc2170-9245-4a3b-86ca-b6713ec17cbf" componentDefinitionRef="collection">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses/>
      <countermeasures>
        <countermeasure ref="C-DS0015" name="Application Log" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>Events collected by third-party services such as mail servers, web applications, or other appliances (not by the native OS or platform)(Citation: Confluence Logs)&lt;br /&gt;&lt;p&gt;Detailed detections per technique:&lt;/p&gt;&lt;br /&gt;['T1189']: Firewalls and proxies can inspect URLs for potentially known-bad domains or parameters. They can also do reputation-based analytics on websites and their requested resources such as how old a domain is, who it's registered to, if it's on a known bad list, or how many other users have connected to it before.&lt;br /&gt;['T1499.002']: Monitor for third-party application logging, messaging, and/or other artifacts that may target the different network services provided by systems to conduct a DoS. In addition to network level detections, endpoint logging and instrumentation can be useful for detection. Attacks targeting web applications may generate logs in the web server, application server, and/or database server that can be used to identify the type of attack, possibly before the impact is felt. Externally monitor the availability of services that may be targeted by an Endpoint DoS.&lt;br /&gt;['T1557']: Monitor application logs for changes to settings and other events associated with network protocols and other services commonly abused for AiTM.(Citation: dhcp_serv_op_events)&lt;br /&gt;['T1137.003']:  Monitor for third-party application logging, messaging, and/or other artifacts that may abuse Microsoft Outlook forms to obtain persistence on a compromised system. SensePost, whose tool [Ruler](https://attack.mitre.org/software/S0358) can be used to carry out malicious rules, forms, and Home Page attacks, has released a tool to detect Ruler usage.(Citation: SensePost NotRuler)&lt;br /&gt;['T1505.003']: Monitor for third-party application logging, messaging, and/or other artifacts that may backdoor web servers with web shells to establish persistent access to systems. Log authentication attempts to the server and any unusual traffic patterns to or from the server and internal network. (Citation: US-CERT Alert TA15-314A Web Shells)&lt;br /&gt;['T1505']: Monitor for third-party application logging, messaging, and/or other artifacts that may abuse legitimate extensible development features of servers to establish persistent access to systems. Consider monitoring application logs for abnormal behavior that may indicate suspicious installation of application software components. Log authentication attempts to the server and any unusual traffic patterns to or from the server and internal network. (Citation: US-CERT Alert TA15-314A Web Shells)&lt;br /&gt;['T1550']: Monitor for third-party application logging, messaging, and/or other artifacts that may use alternate authentication material, such as password hashes, Kerberos tickets, and application access tokens, in order to move laterally within an environment and bypass normal system access controls.&lt;br /&gt;['T1069.003']: Monitor for events collected that may attempt to find cloud groups and permission settings. &lt;br /&gt;['T1491.002']: Monitor for third-party application logging, messaging, and/or other artifacts that may deface systems external to an organization in an attempt to deliver messaging, intimidate, or otherwise mislead an organization or users. &lt;br /&gt;['T1598']: Depending on the specific method of phishing, the detections can vary. Monitor for suspicious email activity, such as numerous accounts receiving messages from a single unusual/unknown sender. Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.(Citation: Microsoft Anti Spoofing)(Citation: ACSC Email Spoofing)
When it comes to following links, monitor for references to uncategorized or known-bad sites. URL inspection within email (including expanding shortened links) can also help detect links leading to known malicious sites.
Monitor social media traffic for suspicious activity, including messages requesting information as well as abnormal file or data transfers (especially those involving unknown, or otherwise suspicious accounts).&lt;br /&gt;['T1499']: Monitor for third-party application logging, messaging, and/or other artifacts that may perform Endpoint Denial of Service (DoS) attacks to degrade or block the availability of services to users. In addition to network level detections, endpoint logging and instrumentation can be useful for detection. Attacks targeting web applications may generate logs in the web server, application server, and/or database server that can be used to identify the type of attack, possibly before the impact is felt. Externally monitor the availability of services that may be targeted by an Endpoint DoS.&lt;br /&gt;['T1204.003']: Monitor for third-party application logging, messaging, and/or other artifacts that may rely on a user running a malicious image to facilitate execution.&lt;br /&gt;['T1598.001']: Monitor social media traffic for suspicious activity, including messages requesting information as well as abnormal file or data transfers (especially those involving unknown, or otherwise suspicious accounts).
Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.
Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.&lt;br /&gt;['T1564']: Monitor for third-party application logging, messaging, and/or other artifacts that may attempt to hide artifacts associated with their behaviors to evade detection. &lt;br /&gt;['T1499.004']: Monitor for third-party application logging, messaging, and/or other artifacts that may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Attacks targeting web applications may generate logs in the web server, application server, and/or database server that can be used to identify the type of attack. Externally monitor the availability of services that may be targeted by an Endpoint DoS.&lt;br /&gt;['T1211']: Exploitation for defense evasion may happen shortly after the system has been compromised to prevent detection during later actions for for additional tools that may be brought in and used. Detecting software exploitation may be difficult depending on the tools available. Software exploits may not always succeed or may cause the exploited process to become unstable or crash. &lt;br /&gt;['T1137']: Monitor for third-party application logging, messaging, and/or other artifacts that may leverage Microsoft Office-based applications for persistence between startups. SensePost, whose tool [Ruler](https://attack.mitre.org/software/S0358) can be used to carry out malicious rules, forms, and Home Page attacks, has released a tool to detect Ruler usage.(Citation: SensePost NotRuler)&lt;br /&gt;['T1566.001']: Monitor for third-party application logging, messaging, and/or other artifacts that may send spearphishing emails with a malicious attachment in an attempt to gain access to victim systems. Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.(Citation: Microsoft Anti Spoofing)(Citation: ACSC Email Spoofing) Anti-virus can potentially detect malicious documents and attachments as they're scanned to be stored on the email server or on the user's computer. Monitor for suspicious descendant process spawning from Microsoft Office and other productivity software.(Citation: Elastic - Koadiac Detection with EQL)&lt;br /&gt;['T1566.002']: Monitor for third-party application logging, messaging, and/or other artifacts that may send spearphishing emails with a malicious link in an attempt to gain access to victim systems. Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.(Citation: Microsoft Anti Spoofing)(Citation: ACSC Email Spoofing) URL inspection within email (including expanding shortened links) can help detect links leading to known malicious sites. Detonation chambers can be used to detect these links and either automatically go to these sites to determine if they're potentially malicious, or wait and capture the content if a user visits the link.&lt;br /&gt;['T1598.003']: Monitor for suspicious email activity, such as numerous accounts receiving messages from a single unusual/unknown sender. Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.(Citation: Microsoft Anti Spoofing)(Citation: ACSC Email Spoofing)
Monitor for references to uncategorized or known-bad sites. URL inspection within email (including expanding shortened links) can also help detect links leading to known malicious sites.&lt;br /&gt;['T1610']: Configuration management databases (CMDB) and other asset management systems may help with the detection of computer systems or network devices that should not exist on a network.&lt;br /&gt;['T1114']: Detection is challenging because all messages forwarded because of an auto-forwarding rule have the same presentation as a manually forwarded message. It is also possible for the user to not be aware of the addition of such an auto-forwarding rule and not suspect that their account has been compromised; email-forwarding rules alone will not affect the normal usage patterns or operations of the email account. Auto-forwarded messages generally contain specific detectable artifacts that may be present in the header; such artifacts would be platform-specific. Examples include &lt;code&gt;X-MS-Exchange-Organization-AutoForwarded&lt;/code&gt; set to true, &lt;code&gt;X-MailFwdBy&lt;/code&gt; and &lt;code&gt;X-Forwarded-To&lt;/code&gt;. The &lt;code&gt;forwardingSMTPAddress&lt;/code&gt; parameter used in a forwarding process that is managed by administrators and not by user actions. All messages for the mailbox are forwarded to the specified SMTP address. However, unlike typical client-side rules, the message does not appear as forwarded in the mailbox; it appears as if it were sent directly to the specified destination mailbox.(Citation: Microsoft Tim McMichael Exchange Mail Forwarding 2) High volumes of emails that bear the &lt;code&gt;X-MS-Exchange-Organization-AutoForwarded&lt;/code&gt; header (indicating auto-forwarding) without a corresponding number of emails that match the appearance of a forwarded message may indicate that further investigation is needed at the administrator level rather than user-level.&lt;br /&gt;['T1534']: Monitor email gateways usually do not scan internal email, but an organization can leverage the journaling-based solution which sends a copy of emails to a security service for offline analysis or incorporate service-integrated solutions using on-premise or API-based integrations to help detect internal spearphishing attacks.(Citation: Trend Micro When Phishing Starts from the Inside 2017)&lt;br /&gt;['T1594']: Monitor for suspicious network traffic that could be indicative of adversary reconnaissance, such as rapid successions of requests indicative of web crawling and/or large quantities of requests originating from a single source (especially if the source is known to be associated with an adversary). Analyzing web metadata may also reveal artifacts that can be attributed to potentially malicious activity, such as referer or user-agent string HTTP/S fields.&lt;br /&gt;['T1137.005']: Monitor for third-party application logging, messaging, and/or other artifacts that may abuse Microsoft Outlook rules to obtain persistence on a compromised system. SensePost, whose tool [Ruler](https://attack.mitre.org/software/S0358) can be used to carry out malicious rules, forms, and Home Page attacks, has released a tool to detect Ruler usage.(Citation: SensePost NotRuler)&lt;br /&gt;['T1213.002']: Monitor for third-party application logging, messaging, and/or other artifacts that may leverage the SharePoint repository as a source to mine valuable information. Monitor access to Microsoft SharePoint repositories performed by privileged users (for example, Active Directory Domain, Enterprise, or Schema Administrators) should be closely monitored and alerted upon, as these types of accounts should generally not be used to access information repositories. If the capability exists, it may be of value to monitor and alert on users that are retrieving and viewing a large number of documents and pages; this behavior may be indicative of programmatic means being used to retrieve all data within the repository. In environments with high-maturity, it may be possible to leverage User-Behavioral Analytics (UBA) platforms to detect and alert on user based anomalies.&lt;br /&gt;['T1110.004']: Monitor authentication logs for system and application login failures of [Valid Accounts](https://attack.mitre.org/techniques/T1078). If authentication failures are high, then there may be a brute force attempt to gain access to a system using legitimate credentials.&lt;br /&gt;['T1491.001']: Monitor for third-party application logging, messaging, and/or other artifacts that may deface systems internal to an organization in an attempt to intimidate or mislead users. &lt;br /&gt;['T1114.003']: Detection is challenging because all messages forwarded because of an auto-forwarding rule have the same presentation as a manually forwarded message. It is also possible for the user to not be aware of the addition of such an auto-forwarding rule and not suspect that their account has been compromised; email-forwarding rules alone will not affect the normal usage patterns or operations of the email account. This is especially true in cases with hidden auto-forwarding rules. This makes it only possible to reliably detect the existence of a hidden auto-forwarding rule by examining message tracking logs or by using a MAPI editor to notice the modified rule property values.(Citation: Pfammatter - Hidden Inbox Rules)
Auto-forwarded messages generally contain specific detectable artifacts that may be present in the header; such artifacts would be platform-specific. Examples include X-MS-Exchange-Organization-AutoForwarded set to true, X-MailFwdBy and X-Forwarded-To. The forwardingSMTPAddress parameter used in a forwarding process that is managed by administrators and not by user actions. All messages for the mailbox are forwarded to the specified SMTP address. However, unlike typical client-side rules, the message does not appear as forwarded in the mailbox; it appears as if it were sent directly to the specified destination mailbox.(Citation: Microsoft Tim McMichael Exchange Mail Forwarding 2) High volumes of emails that bear the X-MS-Exchange-Organization-AutoForwarded header (indicating auto-forwarding) without a corresponding number of emails that match the appearance of a forwarded message may indicate that further investigation is needed at the administrator level rather than user-level.&lt;br /&gt;['T1137.004']: Monitor for third-party application logging, messaging, and/or other artifacts that may abuse Microsoft Outlook's Home Page feature to obtain persistence on a compromised system. SensePost, whose tool [Ruler](https://attack.mitre.org/software/S0358) can be used to carry out malicious rules, forms, and Home Page attacks, has released a tool to detect Ruler usage.(Citation: SensePost NotRuler)&lt;br /&gt;['T1622']: Monitor debugger logs for signs of abnormal and potentially malicious activity.&lt;br /&gt;['T1069']: Monitor for logging, messaging, and other artifacts provided by cloud services.&lt;br /&gt;['T1499.003']: Monitor for third-party application logging, messaging, and/or other artifacts that may target resource intensive features of web applications to cause a denial of service (DoS). In addition to network level detections, endpoint logging and instrumentation can be useful for detection. Attacks targeting web applications may generate logs in the web server, application server, and/or database server that can be used to identify the type of attack, possibly before the impact is felt. Externally monitor the availability of services that may be targeted by an Endpoint DoS.&lt;br /&gt;['T1491']: Monitor for third-party application logging, messaging, and/or other artifacts that may modify visual content available internally or externally to an enterprise network. &lt;br /&gt;['T1213.003']: Monitor for third-party application logging, messaging, and/or other artifacts that may leverage code repositories to collect valuable information. Monitor access to code repositories, especially performed by privileged users such as Active Directory Domain or Enterprise Administrators as these types of accounts should generally not be used to access code repositories. In environments with high-maturity, it may be possible to leverage User-Behavioral Analytics (UBA) platforms to detect and alert on user-based anomalies.&lt;br /&gt;['T1621']: Monitor application logs for suspicious events including repeated MFA failures that may indicate user's primary credentials have been compromised.&lt;br /&gt;['T1072']: Often these third-party applications will have logs of their own that can be collected and correlated with other data from the environment. Ensure that third-party application logs are on-boarded to the enterprise logging system and the logs are regularly reviewed. Audit software deployment logs and look for suspicious or unauthorized activity. A system not typically used to push software to clients that suddenly is used for such a task outside of a known admin function may be suspicious. Monitor account login activity on these applications to detect suspicious/abnormal usage.
Perform application deployment at regular times so that irregular deployment activity stands out.&lt;br /&gt;['T1098.005']: 
Azure AD creates several log entries when new devices are enrolled, which can be monitored for unexpected device registrations.(Citation: AADInternals - BPRT) Additionally, joined devices can be viewed via the Azure AD portal.(Citation: Microsoft Manage Device Identities)&lt;br /&gt;['T1110.002']: Monitor authentication logs for system and application login failures of [Valid Accounts](https://attack.mitre.org/techniques/T1078). It is difficult to detect when hashes are cracked, since this is generally done outside the scope of the target network. Consider focusing efforts on detecting other adversary behavior used to acquire credential materials, such as [OS Credential Dumping](https://attack.mitre.org/techniques/T1003) or [Kerberoasting](https://attack.mitre.org/techniques/T1558/003).&lt;br /&gt;['T1213']: Monitor for third-party application logging, messaging, and/or other artifacts that may leverage information repositories to mine valuable information. Information repositories generally have a considerably large user base, detection of malicious use can be non-trivial. At minimum, access to information repositories performed by privileged users (for example, Active Directory Domain, Enterprise, or Schema Administrators) should be closely monitored and alerted upon, as these types of accounts should generally not be used to access information repositories. If the capability exists, it may be of value to monitor and alert on users that are retrieving and viewing a large number of documents and pages; this behavior may be indicative of programmatic means being used to retrieve all data within the repository. In environments with high-maturity, it may be possible to leverage User-Behavioral Analytics (UBA) platforms to detect and alert on user based anomalies.&lt;br /&gt;['T1505.001']: Monitor for third-party application logging, messaging, and/or other artifacts that may abuse SQL stored procedures to establish persistent access to systems. On a MSSQL Server, consider monitoring for xp_cmdshell usage.(Citation: NetSPI Startup Stored Procedures) Consider enabling audit features that can log malicious startup activities.&lt;br /&gt;['T1203']: Detecting software exploitation may be difficult depending on the tools available. Software exploits may not always succeed or may cause the exploited process to become unstable or crash.&lt;br /&gt;['T1566']: Monitor for third-party application logging, messaging, and/or other artifacts that may send phishing messages to gain access to victim systems. Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.(Citation: Microsoft Anti Spoofing)(Citation: ACSC Email Spoofing) URL inspection within email (including expanding shortened links) can help detect links leading to known malicious sites. Detonation chambers can be used to detect these links and either automatically go to these sites to determine if they're potentially malicious, or wait and capture the content if a user visits the link.&lt;br /&gt;['T1110.003']: Monitor authentication logs for system and application login failures of [Valid Accounts](https://attack.mitre.org/techniques/T1078). Consider the following event IDs:(Citation: Trimarc Detecting Password Spraying)
Domain Controllers: "Audit Logon" (Success &amp; Failure) for event ID 4625.
Domain Controllers: "Audit Kerberos Authentication Service" (Success &amp; Failure) for event ID 4771.
All systems: "Audit Logon" (Success &amp; Failure) for event ID 4648.&lt;br /&gt;['T1098.002']: Enable the UpdateFolderPermissions action for all logon types. The mailbox audit log will forward folder permission modification events to the Unified Audit Log. Create rules to alert on ModifyFolderPermissions operations where the Anonymous or Default user is assigned permissions other than None.

A larger than normal volume of emails sent from an account and similar phishing emails sent from real accounts within a network may be a sign that an account was compromised and attempts to leverage access with modified email permissions is occurring.&lt;br /&gt;['T1598.002']: Monitor for suspicious email activity, such as numerous accounts receiving messages from a single unusual/unknown sender. Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.(Citation: Microsoft Anti Spoofing)(Citation: ACSC Email Spoofing)&lt;br /&gt;['T1566.003']: Monitor for third-party application logging, messaging, and/or other artifacts that may send spearphishing messages via third-party services in an attempt to gain access to victim systems. &lt;br /&gt;['T1550.004']: Monitor for third-party application logging, messaging, and/or other service artifacts that provide context of user authentication to web applications, including cloud-based services. Combine this information with web credentials usage events to identify authentication events that do not fit the organization baseline.&lt;br /&gt;['T1210']: Detecting software exploitation may be difficult depending on the tools available. Software exploits may not always succeed or may cause the exploited process to become unstable or crash. Web Application Firewalls may detect improper inputs attempting exploitation.&lt;br /&gt;['T1557.003']: Monitor Windows logs (ex: EIDs 1341, 1342, 1020, and 1063) for changes to DHCP settings. These may also highlight DHCP issues such as when IP allocations are low or have run out.(Citation: dhcp_serv_op_events)(Citation: solution_monitor_dhcp_scopes)&lt;br /&gt;['T1562.002']: Monitor for third-party application logging, messaging, and/or other artifacts provided by third-party services that may disable Windows event logging to limit data that can be leveraged for detections and audits.&lt;br /&gt;['T1564.008']: Monitor for third-party application logging, messaging, and/or other artifacts that may use email rules to hide inbound emails in a compromised user's mailbox. Monitor email clients and applications for suspicious activity, such as missing messages or abnormal configuration and/or log entries.&lt;br /&gt;['T1505.002']: Monitor for third-party application logging, messaging, and/or other artifacts that may abuse Microsoft transport agents to establish persistent access to systems. Consider monitoring application logs for abnormal behavior that may indicate suspicious installation of application software components.&lt;br /&gt;['T1213.001']: Monitor for third-party application logging, messaging, and/or other artifacts that may leverage Confluence repositories to mine valuable information. Watch for access to Confluence repositories performed by privileged users (for example, Active Directory Domain, Enterprise, or Schema Administrators) as these types of accounts should generally not be used to access information repositories. If the capability exists, it may be of value to monitor and alert on users that are retrieving and viewing a large number of documents and pages; this behavior may be indicative of programmatic means being used to retrieve all data within the repository. In environments with high-maturity, it may be possible to leverage User-Behavioral Analytics (UBA) platforms to detect and alert on user based anomalies.&lt;br /&gt;['T1204']: Monitor for third-party application logging, messaging, and/or other artifacts that may rely upon specific actions by a user in order to gain execution.&lt;br /&gt;['T1133']: When authentication is not required to access an exposed remote service, monitor for follow-on activities such as anomalous external use of the exposed API or application.&lt;br /&gt;['T1027.005']: The first detection of a malicious tool may trigger an anti-virus or other security tool alert. Similar events may also occur at the boundary through network IDS, email scanning appliance, etc. The initial detection should be treated as an indication of a potentially more invasive intrusion. The alerting system should be thoroughly investigated beyond that initial alert for activity that was not detected. Adversaries may continue with an operation, assuming that individual events like an anti-virus detect will not be investigated or that an analyst will not be able to conclusively link that event to other activity occurring on the network.&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Confluence Logs" url="https://confluence.atlassian.com/doc/working-with-confluence-logs-108364721.html"/>
            <reference name="Mitre ATT&amp;CK Data Source DS0015" url="https://attack.mitre.org/datasources/DS0015"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:02.307">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-M1047" name="Audit" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>Perform audits or scans of systems, permissions, insecure software, insecure configurations, etc. to identify potential weaknesses.&lt;br /&gt;&lt;p&gt;Detailed mitigations per technique:&lt;/p&gt;&lt;br /&gt;['T1484']: Identify and correct GPO permissions abuse opportunities (ex: GPO modification privileges) using auditing tools such as [BloodHound](https://attack.mitre.org/software/S0521) (version 1.5.1 and later)(Citation: GitHub Bloodhound).&lt;br /&gt;['T1059.006']: Inventory systems for unauthorized Python installations.&lt;br /&gt;['T1482']: Map the trusts within existing domains/forests and keep trust relationships to a minimum.&lt;br /&gt;['T1053.003']: Review changes to the &lt;code&gt;cron&lt;/code&gt; schedule. &lt;code&gt;cron&lt;/code&gt; execution can be reviewed within the &lt;code&gt;/var/log&lt;/code&gt; directory. To validate the location of the &lt;code&gt;cron&lt;/code&gt; log file, check the syslog config at &lt;code&gt;/etc/rsyslog.conf&lt;/code&gt; or &lt;code&gt;/etc/syslog.conf&lt;/code&gt; &lt;br /&gt;['T1574.005', 'T1574.010']: Use auditing tools capable of detecting file system permissions abuse opportunities on systems within an enterprise and correct them. Toolkits like the PowerSploit framework contain PowerUp modules that can be used to explore systems for service file system permissions weaknesses.(Citation: Powersploit)&lt;br /&gt;['T1076']: Audit the Remote Desktop Users group membership regularly. Remove unnecessary accounts and groups from Remote Desktop Users groups&lt;br /&gt;['T1505.005', 'T1505']: Regularly check component software on critical services that adversaries may target for persistence to verify the integrity of the systems and identify if unexpected changes have been made.&lt;br /&gt;['T1176']:  Ensure extensions that are installed are the intended ones as many malicious extensions will masquerade as legitimate ones.&lt;br /&gt;['T1484.001']: Identify and correct GPO permissions abuse opportunities (ex: GPO modification privileges) using auditing tools such as [BloodHound](https://attack.mitre.org/software/S0521) (version 1.5.1 and later).(Citation: GitHub Bloodhound)&lt;br /&gt;['T1505.001', 'T1505.002']: Regularly check component software on critical services that adversaries may target for persistence to verify the integrity of the systems and identify if unexpected changes have been made. &lt;br /&gt;['T1574.009', 'T1574.008', 'T1574.007']: Find and eliminate path interception weaknesses in program configuration files, scripts, the PATH environment variable, services, and in shortcuts by surrounding PATH variables with quotation marks when functions allow for them. Be aware of the search order Windows uses for executing or loading binaries and use fully qualified paths wherever appropriate.

Clean up old Windows Registry keys when software is uninstalled to avoid keys with no associated legitimate binaries. Periodically search for and correct or report path interception weaknesses on systems that may have been introduced using custom or available tools that report software using insecure path configurations.(Citation: Microsoft CreateProcess)(Citation: Microsoft Dynamic-Link Library Security)(Citation: Vulnerability and Exploit Detector)&lt;br /&gt;['T1044']: Use auditing tools capable of detecting file system permissions abuse opportunities on systems within an enterprise and correct them. Toolkits like the PowerSploit framework contain PowerUp modules that can be used to explore systems for service file system permissions weaknesses. (Citation: Powersploit)&lt;br /&gt;['T1021.001', 'T1563.002']: Audit the Remote Desktop Users group membership regularly. Remove unnecessary accounts and groups from Remote Desktop Users groups.&lt;br /&gt;['T1564.008']: Enterprise email solutions may have monitoring mechanisms that may include the ability to audit inbox rules on a regular basis. 

In an Exchange environment, Administrators can use &lt;code&gt;Get-InboxRule&lt;/code&gt; to discover and remove potentially malicious inbox rules.(Citation: Microsoft Get-InboxRule)&lt;br /&gt;['T1548.002', 'T1548']: Check for common UAC bypass weaknesses on Windows systems to be aware of the risk posture and address issues where appropriate.(Citation: Github UACMe)&lt;br /&gt;['T1558.004']: Kerberos preauthentication is enabled by default. Older protocols might not support preauthentication therefore it is possible to have this setting disabled. Make sure that all accounts have preauthentication whenever possible and audit changes to setting. Windows tools such as PowerShell may be used to easily find which accounts have preauthentication disabled.  (Citation: Microsoft Preauthentication Jul 2012)(Citation: Stealthbits Cracking AS-REP Roasting Jun 2019)&lt;br /&gt;['T1053.002']: Toolkits like the PowerSploit framework contain PowerUp modules that can be used to explore systems for permission weaknesses in scheduled tasks that could be used to escalate privileges. (Citation: Powersploit) Windows operating system also creates a registry key specifically associated with the creation of a scheduled task on the destination host at: Microsoft\Windows NT\CurrentVersion\Schedule\TaskCache\Tree\At1. (Citation: Secureworks - AT.exe Scheduled Task) In Linux and macOS environments, scheduled tasks using &lt;code&gt;[at](https://attack.mitre.org/software/S0110)&lt;/code&gt; can be audited locally, or through centrally collected logging, using syslog, or auditd events from the host. (Citation: Kifarunix - Task Scheduling in Linux)&lt;br /&gt;['T1543.003']: Use auditing tools capable of detecting privilege and service abuse opportunities on systems within an enterprise and correct them. &lt;br /&gt;['T1552.006']: Search SYSVOL for any existing GGPs that may contain credentials and remove them.(Citation: ADSecurity Finding Passwords in SYSVOL)&lt;br /&gt;['T1528']: Administrators should audit all cloud and container accounts to ensure that they are necessary and that the permissions granted to them are appropriate.  Additionally, administrators should perform an audit of all OAuth applications and the permissions they have been granted to access organizational data. This should be done extensively on all applications in order to establish a baseline, followed up on with periodic audits of new or updated applications. Suspicious applications should be investigated and removed.&lt;br /&gt;['T1574']: Use auditing tools capable of detecting hijacking opportunities on systems within an enterprise and correct them. Toolkits like the PowerSploit framework contain PowerUp modules that can be used to explore systems for hijacking weaknesses.(Citation: Powersploit)

Use the program sxstrace.exe that is included with Windows along with manual inspection to check manifest files for side-loading vulnerabilities in software.

Find and eliminate path interception weaknesses in program configuration files, scripts, the PATH environment variable, services, and in shortcuts by surrounding PATH variables with quotation marks when functions allow for them. Be aware of the search order Windows uses for executing or loading binaries and use fully qualified paths wherever appropriate.

Clean up old Windows Registry keys when software is uninstalled to avoid keys with no associated legitimate binaries. Periodically search for and correct or report path interception weaknesses on systems that may have been introduced using custom or available tools that report software using insecure path configurations.(Citation: Microsoft CreateProcess)(Citation: Microsoft Dynamic-Link Library Security)(Citation: Vulnerability and Exploit Detector)&lt;br /&gt;['T1610']: Scan images before deployment, and block those that are not in compliance with security policies. In Kubernetes environments, the admission controller can be used to validate images after a container deployment request is authenticated but before the container is deployed.(Citation: Kubernetes Hardening Guide)&lt;br /&gt;['T1031', 'T1543']: Use auditing tools capable of detecting privilege and service abuse opportunities on systems within an enterprise and correct them.&lt;br /&gt;['T1606.001']: Administrators should perform an audit of all access lists and the permissions they have been granted to access web applications and services. This should be done extensively on all resources in order to establish a baseline, followed up on with periodic audits of new or updated resources. Suspicious accounts/credentials should be investigated and removed.&lt;br /&gt;['T1213.001']: Consider periodic review of accounts and privileges for critical and sensitive Confluence repositories.&lt;br /&gt;['T1566.002']: Audit applications and their permissions to ensure access to data and resources are limited based upon necessity and principle of least privilege.&lt;br /&gt;['T1546.006', 'T1161']: Binaries can also be baselined for what dynamic libraries they require, and if an app requires a new dynamic library that wasn\u2019t included as part of an update, it should be investigated.&lt;br /&gt;['T1213.002']: Consider periodic review of accounts and privileges for critical and sensitive SharePoint repositories.&lt;br /&gt;['T1578.001']: Routinely check user permissions to ensure only the expected users have the capability to create snapshots and backups.&lt;br /&gt;['T1021.005']: Inventory workstations for unauthorized VNC server software.&lt;br /&gt;['T1145', 'T1552.004']: Ensure only authorized keys are allowed access to critical resources and audit access lists regularly.&lt;br /&gt;['T1550.001']: Administrators should audit all cloud and container accounts to ensure that they are necessary and that the permissions granted to them are appropriate. Where possible, the ability to request temporary account tokens on behalf of another accounts should be disabled. Additionally, administrators can leverage audit tools to monitor actions that can be conducted as a result of OAuth 2.0 access. For instance, audit reports enable admins to identify privilege escalation actions such as role creations or policy modifications, which could be actions performed after initial access.&lt;br /&gt;['T1606.002']: Enable advanced auditing on AD FS. Check the success and failure audit options in the AD FS Management snap-in. Enable Audit Application Generated events on the AD FS farm via Group Policy Object.(Citation: FireEye ADFS)&lt;br /&gt;['T1053.004']: Audit logging for &lt;code&gt;launchd&lt;/code&gt; events in MacOS can be reviewed or centrally collected using multiple options, such as syslog, OpenBSM, or OSquery.&lt;br /&gt;['T1087.004']: Routinely check user permissions to ensure only the expected users have the ability to list IAM identities or otherwise discover cloud accounts.&lt;br /&gt;['T1578']: Routinely monitor user permissions to ensure only the expected users have the capability to modify cloud compute infrastructure components.&lt;br /&gt;['T1560.001', 'T1560']: System scans can be performed to identify unauthorized archival utilities.&lt;br /&gt;['T1073', 'T1574.002']: Use the program sxstrace.exe that is included with Windows along with manual inspection to check manifest files for side-loading vulnerabilities in software.&lt;br /&gt;['T1213.003']: Consider periodic reviews of accounts and privileges for critical and sensitive code repositories. Scan code repositories for exposed credentials or other sensitive information.&lt;br /&gt;['T1088']: Check for common UAC bypass weaknesses on Windows systems to be aware of the risk posture and address issues where appropriate. (Citation: Github UACMe)&lt;br /&gt;['T1562.007']: Routinely check account role permissions to ensure only expected users and roles have permission to modify cloud firewalls. &lt;br /&gt;['T1552.002', 'T1214']: Proactively search for credentials within the Registry and attempt to remediate the risk.&lt;br /&gt;['T1053', 'T1053.005']: Toolkits like the PowerSploit framework contain PowerUp modules that can be used to explore systems for permission weaknesses in scheduled tasks that could be used to escalate privileges. (Citation: Powersploit)&lt;br /&gt;['T1505.004']: Regularly check installed IIS components to verify the integrity of the web server and identify if unexpected changes have been made.&lt;br /&gt;['T1562.002']: Consider periodic review of &lt;code&gt;auditpol&lt;/code&gt; settings for Administrator accounts and perform dynamic baselining on SIEM(s) to investigate potential malicious activity. Also ensure that the EventLog service and its threads are properly running.&lt;br /&gt;['T1038']: Use auditing tools capable of detecting DLL search order hijacking opportunities on systems within an enterprise and correct them. Toolkits like the PowerSploit framework contain PowerUp modules that can be used to explore systems for DLL hijacking weaknesses.(Citation: Powersploit)&lt;br /&gt;['T1552']: Preemptively search for files containing passwords or other credentials and take actions to reduce the exposure risk when found.&lt;br /&gt;['T1578.002']: Routinely check user permissions to ensure only the expected users have the capability to create new instances.&lt;br /&gt;['T1034']: Find and eliminate path interception weaknesses in program configuration files, scripts, the PATH environment variable, services, and in shortcuts by surrounding PATH variables with quotation marks when functions allow for them (Citation: Microsoft CreateProcess). Be aware of the search order Windows uses for executing or loading binaries and use fully qualified paths wherever appropriate (Citation: MSDN DLL Security). 

Clean up old Windows Registry keys when software is uninstalled to avoid keys with no associated legitimate binaries. Periodically search for and correct or report path interception weaknesses on systems that may have been introduced using custom or available tools that report software using insecure path configurations. (Citation: Kanthak Sentinel)&lt;br /&gt;['T1542.004']: Periodically check the integrity of system image to ensure it has not been modified. (Citation: Cisco IOS Software Integrity Assurance - Image File Integrity) (Citation: Cisco IOS Software Integrity Assurance - Image File Verification) (Citation: Cisco IOS Software Integrity Assurance - Change Control) &lt;br /&gt;['T1574.001']: Use auditing tools capable of detecting DLL search order hijacking opportunities on systems within an enterprise and correct them. Toolkits like the PowerSploit framework contain PowerUp modules that can be used to explore systems for DLL hijacking weaknesses.(Citation: Powersploit)

Use the program sxstrace.exe that is included with Windows along with manual inspection to check manifest files for side-by-side problems in software.(Citation: Microsoft Sxstrace)&lt;br /&gt;['T1204.003', 'T1612']: Audit images deployed within the environment to ensure they do not contain any malicious components.&lt;br /&gt;['T1578.003']: Routinely check user permissions to ensure only the expected users have the capability to delete new instances.&lt;br /&gt;['T1527']: Administrators can set up a variety of logs and leverage audit tools to monitor actions that can be conducted as a result of OAuth 2.0 access. For instance, audit reports enable admins to identify privilege escalation actions such as role creations or policy modifications, which could be actions performed after initial access.&lt;br /&gt;['T1114.003']: Enterprise email solutions have monitoring mechanisms that may include the ability to audit auto-forwarding rules on a regular basis.

In an Exchange environment, Administrators can use Get-InboxRule to discover and remove potentially malicious auto-forwarding rules.(Citation: Microsoft Tim McMichael Exchange Mail Forwarding 2). In addition to this, a MAPI Editor can be utilized to examine the underlying database structure and discover any modifications/tampering of the properties of auto-forwarding rules.(Citation: Pfammatter - Hidden Inbox Rules)&lt;br /&gt;['T1114']: Enterprise email solutions have monitoring mechanisms that may include the ability to audit auto-forwarding rules on a regular basis.

In an Exchange environment, Administrators can use Get-InboxRule to discover and remove potentially malicious auto-forwarding rules.(Citation: Microsoft Tim McMichael Exchange Mail Forwarding 2) &lt;br /&gt;['T1606']: Administrators should perform an audit of all access lists and the permissions they have been granted to access web applications and services. This should be done extensively on all resources in order to establish a baseline, followed up on with periodic audits of new or updated resources. Suspicious accounts/credentials should be investigated and removed.
 
Enable advanced auditing on ADFS. Check the success and failure audit options in the ADFS Management snap-in. Enable Audit Application Generated events on the AD FS farm via Group Policy Object.(Citation: FireEye ADFS)&lt;br /&gt;['T1552.001', 'T1081']: Preemptively search for files containing passwords and take actions to reduce the exposure risk when found.&lt;br /&gt;['T1530']: Frequently check permissions on cloud storage to ensure proper permissions are set to deny open or unprivileged access to resources.(Citation: Amazon S3 Security, 2019)&lt;br /&gt;['T1543.004']: Use auditing tools capable of detecting folder permissions abuse opportunities on systems, especially reviewing changes made to folders by third-party software.&lt;br /&gt;['T1213']: Consider periodic review of accounts and privileges for critical and sensitive repositories.&lt;br /&gt;['T1542.005']: Periodically check the integrity of the running configuration and system image to ensure they have not been modified. (Citation: Cisco IOS Software Integrity Assurance - Image File Verification) (Citation: Cisco IOS Software Integrity Assurance - Image File Integrity) (Citation: Cisco IOS Software Integrity Assurance - Change Control) &lt;br /&gt;['T1525']: Periodically check the integrity of images and containers used in cloud deployments to ensure they have not been modified to include malicious software.&lt;br /&gt;['T1053.001']: Scheduled tasks using &lt;code&gt;[at](https://attack.mitre.org/software/S0110)&lt;/code&gt; can be audited locally, or through centrally collected logging, using syslog, or auditd events from the host. (Citation: Kifarunix - Task Scheduling in Linux)&lt;br /&gt;['T1078']: Routinely audit source code, application configuration files, open repositories, and public cloud storage for insecure use and storage of credentials.&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Mitre ATT&amp;CK Mitigation M1047" url="https://attack.mitre.org/mitigations/M1047"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:02.412">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-DS0017" name="Command" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>A directive given to a computer program, acting as an interpreter of some kind, in order to perform a specific task(Citation: Confluence Linux Command  Line)(Citation: Audit OSX)&lt;br /&gt;&lt;p&gt;Detailed detections per technique:&lt;/p&gt;&lt;br /&gt;['T1041']: Monitor executed commands and arguments that may steal data by exfiltrating it over an existing command and control channel.&lt;br /&gt;['T1555.003']: Monitor executed commands and arguments that may acquire credentials from web browsers by reading files specific to the target browser.(Citation: Talos Olympic Destroyer 2018)&lt;br /&gt;['T1134.001']: Monitor executed commands and arguments to detect token manipulation by auditing command-line activity. Specifically, analysts should look for use of the runas command. Detailed command-line logging is not enabled by default in Windows.(Citation: Microsoft Command-line Logging)&lt;br /&gt;['T1218.013']: Adversaries may rename abusable binaries to evade detections, but the argument &lt;code&gt;INJECTRUNNING&lt;/code&gt; is required for mavinject.exe to perform [Dynamic-link Library Injection](https://attack.mitre.org/techniques/T1055/001) and may therefore be monitored to alert malicious activity.&lt;br /&gt;['T1548.001']: Monitor for execution of utilities, like chmod, and their command-line arguments to look for setuid or setguid bits being set.&lt;br /&gt;['T1218.011']: Command arguments used with the rundll32.exe invocation may also be useful in determining the origin and purpose of the DLL being loaded.&lt;br /&gt;['T1218.008']: Command arguments used before and after the invocation of odbcconf.exe may also be useful in determining the origin and purpose of the DLL being loaded.&lt;br /&gt;['T1218.009']: Command arguments used before and after Regsvcs.exe or Regasm.exe invocation may also be useful in determining the origin and purpose of the binary being executed.&lt;br /&gt;['T1547.005']: Monitor executed commands and arguments that may abuse security support providers (SSPs) to execute DLLs when the system boots.&lt;br /&gt;['T1218.012']: Command arguments used before and after the invocation of verclsid.exe may also be useful in determining the origin and purpose of the payload being executed.&lt;br /&gt;['T1542.005']: Monitor executed commands and arguments in command history in either the console or as part of the running memory to determine if unauthorized or suspicious commands were used to modify device configuration.&lt;br /&gt;['T1546.001']: Monitor executed commands and arguments that may establish persistence by executing malicious content triggered by a file type association.&lt;br /&gt;['T1564.004']: The Streams tool of Sysinternals can be used to uncover files with ADSs. The &lt;code&gt;dir /r&lt;/code&gt; command can also be used to display ADSs. (Citation: Symantec ADS May 2009) Many PowerShell commands (such as Get-Item, Set-Item, Remove-Item, and Get-ChildItem) can also accept a &lt;code&gt;-stream&lt;/code&gt; parameter to interact with ADSs. (Citation: MalwareBytes ADS July 2015) (Citation: Microsoft ADS Mar 2014)&lt;br /&gt;['T1069.003']: Monitor for executed commands and arguments that may attempt to find cloud groups and permission settings. &lt;br /&gt;['T1087.002']: Monitor for execution of commands and arguments associated with enumeration or information gathering of domain accounts and groups, such as &lt;code&gt;net user /domain&lt;/code&gt; and &lt;code&gt;net group /domain&lt;/code&gt;, &lt;code&gt;dscacheutil -q group&lt;/code&gt;on macOS, and &lt;code&gt;ldapsearch&lt;/code&gt; on Linux.

System and network discovery techniques normally occur throughout an operation as an adversary learns the environment, and also to an extent in normal network operations. Therefore discovery data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.&lt;br /&gt;['T1037.005']: Monitor executed commands and arguments for logon scripts&lt;br /&gt;['T1011.001']: Monitor executed commands and arguments that may attempt to exfiltrate data over Bluetooth rather than the command and control channel.&lt;br /&gt;['T1127']: Monitor executed commands and arguments used before and after invocation of the utilities may also be useful in determining the origin and purpose of the binary being executed.&lt;br /&gt;['T1020']: Monitor executed commands and arguments that may exfiltrate data, such as sensitive documents, through the use of automated processing after being gathered during Collection&lt;br /&gt;['T1547.004']: Monitor executed commands and arguments that may abuse features of Winlogon to execute DLLs and/or executables when a user logs in.&lt;br /&gt;['T1003.003']: Monitor executed commands and arguments that may attempt to access or create a copy of the Active Directory domain database in order to steal credential information, as well as obtain other information about domain members such as devices, users, and access rights. Look for command-lines that invoke attempts to access or copy the NTDS.dit.&lt;br /&gt;['T1484.002']: Monitor executed commands and arguments that updates domain authentication from Managed to Federated via ActionTypes &lt;code&gt;Set federation settings on domain&lt;/code&gt; and &lt;code&gt;Set domain authentication&lt;/code&gt;.(Citation: Microsoft - Azure Sentinel ADFSDomainTrustMods) Monitor for PowerShell commands such as: &lt;code&gt;Update-MSOLFederatedDomain -DomainName: "Federated Domain Name"&lt;/code&gt;, or &lt;code&gt;Update-MSOLFederatedDomain -DomainName: "Federated Domain Name" -supportmultipledomain&lt;/code&gt;.(Citation: Microsoft - Update or Repair Federated domain)&lt;br /&gt;['T1609']: Monitor commands and arguments executed by container services. In Docker, the daemon log provides insight into events at the daemon and container service level. Kubernetes system component logs may also detect activities running in and out of containers in the cluster.&lt;br /&gt;['T1560']: Monitor executed commands and arguments for actions that will aid in compression or encrypting data that is collected prior to exfiltration, such as tar. &lt;br /&gt;['T1033']: Monitor executed commands and arguments that may attempt to dump credentials to obtain account login and credential material, normally in the form of a hash or a clear text password, from the operating system and software. Look for command-lines that invoke AuditD or the Security Accounts Manager (SAM). Remote access tools may contain built-in features or incorporate existing tools like [Mimikatz](https://attack.mitre.org/software/S0002). [PowerShell](https://attack.mitre.org/techniques/T1059/001) scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module, (Citation: Powersploit) which may require additional logging features to be configured in the operating system to collect necessary information for analysis.&lt;br /&gt;['T1547.001']: Monitor executed commands and arguments that may achieve persistence by adding a program to a startup folder or referencing it with a Registry run key.&lt;br /&gt;['T1543.002']: Suspicious systemd services can also be identified by comparing results against a trusted system baseline. Malicious systemd services may be detected by using the systemctl utility to examine system wide services: &lt;code&gt;systemctl list-units --type=service -all&lt;/code&gt;. Auditing the execution and command-line arguments of the 'systemctl' utility, as well related utilities such as &lt;code&gt;/usr/sbin/service&lt;/code&gt; may reveal malicious systemd service execution.&lt;br /&gt;['T1546.007']: Monitor executed commands and arguments that may establish persistence by executing malicious content triggered by Netsh Helper DLLs.&lt;br /&gt;['T1018']: Monitor executed commands and arguments that may attempt to get a listing of other systems by IP address, hostname, or other logical identifier on a network that may be used for Lateral Movement from the current system&lt;br /&gt;['T1070.001']: Monitor executed commands and arguments for actions that would delete Windows event logs (via PowerShell)&lt;br /&gt;['T1053.002']: Monitor executed commands and arguments for actions that could be taken to create/modify tasks. Tasks may also be created through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001), so additional logging may need to be configured to gather the appropriate data.&lt;br /&gt;['T1003.002']: Monitor executed commands and arguments that may attempt to extract credential material from the Security Account Manager (SAM) database either through in-memory techniques or through the Windows Registry where the SAM database is stored.&lt;br /&gt;['T1547.006']: Loading, unloading, and manipulating modules on Linux systems can be detected by monitoring for the following commands: &lt;code&gt;modprobe&lt;/code&gt;, &lt;code&gt;insmod&lt;/code&gt;, &lt;code&gt;lsmod&lt;/code&gt;, &lt;code&gt;rmmod&lt;/code&gt;, or &lt;code&gt;modinfo&lt;/code&gt; (Citation: Linux Loadable Kernel Module Insert and Remove LKMs) Adversaries may run commands on the target system before loading a malicious module in order to ensure that it is properly compiled. (Citation: iDefense Rootkit Overview) Adversaries may also execute commands to identify the exact version of the running Linux kernel and/or download multiple versions of the same .ko (kernel object) files to use the one appropriate for the running system.(Citation: Trend Micro Skidmap) Many LKMs require Linux headers (specific to the target kernel) in order to compile properly. These are typically obtained through the operating systems package manager and installed like a normal package.

On macOS, monitor for execution of &lt;code&gt;kextload&lt;/code&gt; commands and user installed kernel extensions performing abnormal and/or potentially malicious activity (such as creating network connections). Monitor for new rows added in the &lt;code&gt;kext_policy&lt;/code&gt; table. KextPolicy stores a list of user approved (non Apple) kernel extensions and a partial history of loaded kernel modules in a SQLite database, &lt;code&gt;/var/db/SystemPolicyConfiguration/KextPolicy&lt;/code&gt;.(Citation: User Approved Kernel Extension Pike's)(Citation: Purves Kextpocalypse 2)(Citation: Apple Developer Configuration Profile)&lt;br /&gt;['T1552.004']: Monitor executed commands and arguments that may search for private key certificate files on compromised systems for insecurely stored credentials.&lt;br /&gt;['T1489']: Monitor executed commands and arguments that may stop or disable services on a system to render those services unavailable to legitimate users.&lt;br /&gt;['T1216']: Monitor executed commands and arguments for scripts like PubPrn.vbs that may be used to proxy execution of malicious files.&lt;br /&gt;['T1098.004']: Monitor executed commands and arguments to modify the authorized_keys or /etc/ssh/sshd_config files.&lt;br /&gt;['T1552.007']: Establish centralized logging for the activity of container and Kubernetes cluster components. Monitor logs for actions that could be taken to gather credentials to container and cloud infrastructure, including the use of discovery API calls by new or unexpected users and APIs that access Docker logs.&lt;br /&gt;['T1546.013']: Monitor abnormal PowerShell commands, unusual loading of PowerShell drives or modules.&lt;br /&gt;['T1113']: Monitor executed commands and arguments that may attempt to take screen captures of the desktop to gather information over the course of an operation.&lt;br /&gt;['T1547.002']: Monitor executed commands and arguments that may abuse authentication packages to execute DLLs when the system boots.&lt;br /&gt;['T1027.004']: Monitor executed commands and arguments for actions that could be taken to gather common compilers, such as csc.exe and GCC/MinGW, and correlate with other suspicious behavior to reduce false positives from normal user and administrator behavior.&lt;br /&gt;['T1562.006']: Monitor executed commands and arguments that may attempt to block indicators or events typically captured by sensors from being gathered and analyzed.&lt;br /&gt;['T1553.004']: Monitor for commands, such as &lt;code&gt;security add-trusted-cert&lt;/code&gt; (macOS) or &lt;code&gt;certutil -addstore&lt;/code&gt; (Windows), that can be used to install root certificates. A system's root certificates are unlikely to change frequently. Monitor new certificates installed on a system that could be due to malicious activity. (Citation: SpectorOps Code Signing Dec 2017) Check pre-installed certificates on new systems to ensure unnecessary or suspicious certificates are not present. Microsoft provides a list of trustworthy root certificates online and through &lt;code&gt;authroot.stl&lt;/code&gt;. (Citation: SpectorOps Code Signing Dec 2017) The Sysinternals Sigcheck utility can also be used (&lt;code&gt;sigcheck[64].exe -tuv&lt;/code&gt;) to dump the contents of the certificate store and list valid certificates not rooted to the Microsoft Certificate Trust List. (Citation: Microsoft Sigcheck May 2017)&lt;br /&gt;['T1547.014']: Monitor executed commands and arguments that may achieve persistence by adding a Registry key to the Active Setup of the local machine.&lt;br /&gt;['T1114.001']: Monitor executed commands and arguments for actions that could be taken to gather local email files. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.&lt;br /&gt;['T1059.004']: Monitor executed commands and arguments that may abuse Unix shell commands and scripts for execution. Unix shell usage may be common on administrator, developer, or power user systems, depending on job function. If scripting is restricted for normal users, then any attempt to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.&lt;br /&gt;['T1123']: Monitor executed commands and arguments for actions that can leverage a computer's peripheral devices (e.g., microphones and webcams) or applications (e.g., voice and video call services) to capture audio recordings for the purpose of listening into sensitive conversations to gather information.&lt;br /&gt;['T1647']: Monitor for commands with arguments (such as opening common command-line editors) used to modify plist files, especially commonly abused files such as those in &lt;code&gt;\~/LaunchAgents&lt;/code&gt;, &lt;code&gt;\~/Library/Application Support/com.apple.backgroundtaskmanagementagent/backgrounditems.btm&lt;/code&gt;, and an application's &lt;code&gt;Info.plist&lt;/code&gt;.&lt;br /&gt;['T1553.001']: Monitor and investigate attempts to modify extended file attributes with utilities such as &lt;code&gt;xattr&lt;/code&gt;. Built-in system utilities may generate high false positive alerts, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible. &lt;br /&gt;['T1546.010']: Monitor executed commands and arguments that may establish persistence and/or elevate privileges by executing malicious content triggered by AppInit DLLs loaded into processes.&lt;br /&gt;['T1098']: Monitor executed commands and arguments for suspicious commands to modify accounts or account settings (including files such as the authorized_keys or /etc/ssh/sshd_config).

Monitor executed commands and arguments of suspicious commands (such as Add-MailboxPermission) that may be indicative of modifying the permissions of Exchange and other related service settings.&lt;br /&gt;['T1222.001']: Monitor for executed commands and arguments for PowerShell cmdlets that can be used to retrieve or modify file and directory DACLs.&lt;br /&gt;['T1562.010']: Monitor for commands or other activity that may be indicative of attempts to abuse older or deprecated technologies (ex: &lt;code&gt;powershell -v 2&lt;/code&gt;).&lt;br /&gt;['T1112']:  Monitor executed commands and arguments for actions that could be taken to change, conceal, and/or delete information in the Registry. The Registry may also be modified through Windows system management tools such as Windows Management Instrumentation and PowerShell, which may require additional logging features to be configured in the operating system to collect necessary information for analysis.&lt;br /&gt;['T1547']: Monitor executed commands and arguments that may configure system settings to automatically execute a program during system boot or logon to maintain persistence or gain higher-level privileges on compromised systems.&lt;br /&gt;['T1070.005']: Monitor executed commands and arguments of net use commands associated with establishing and removing remote shares over SMB, including following best practices for detection of Windows Admin Shares.&lt;br /&gt;['T1555.001']: Monitor executed commands with arguments that may be used to collect Keychain data from a system to acquire credentials.&lt;br /&gt;['T1574.006']: Monitor executed commands and arguments associated with modifications to variables and files associated with loading shared libraries such as LD_PRELOAD on Linux and DYLD_INSERT_LIBRARIES on macOS.&lt;br /&gt;['T1482']: Monitor executed commands and arguments for actions that could be taken to gather system and network information, such as nltest /domain_trusts. Remote access tools with built-in features may interact directly with the Windows API to gather information.&lt;br /&gt;['T1546.006']: Monitor executed commands and arguments that may establish persistence by executing malicious content triggered by the execution of tainted binaries.&lt;br /&gt;['T1552']: While detecting adversaries accessing credentials may be difficult without knowing they exist in the environment, it may be possible to detect adversary use of credentials they have obtained. Monitor the command-line arguments of executing processes for suspicious words or regular expressions that may indicate searching for a password (for example: password, pwd, login, secure, or credentials). See [Valid Accounts](https://attack.mitre.org/techniques/T1078) for more information.&lt;br /&gt;['T1059.008']: Consider reviewing command history in either the console or as part of the running memory to determine if unauthorized or suspicious commands were used to modify device configuration. (Citation: Cisco IOS Software Integrity Assurance - Command History) Consider comparing a copy of the network device configuration against a known-good version to discover unauthorized changes to the command interpreter. The same process can be accomplished through a comparison of the run-time memory, though this is non-trivial and may require assistance from the vendor.&lt;br /&gt;['T1025']: Monitor executed commands and arguments for actions that could be taken to collect files from a system's connected removable media. For example, data may be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.&lt;br /&gt;['T1555.004']: Monitor executed commands and arguments of &lt;code&gt;vaultcmd.exe&lt;/code&gt; for suspicious activity, such as listing credentials from the Windows Credentials locker (i.e., &lt;code&gt;vaultcmd /listcreds:"Windows Credentials"&lt;/code&gt;).(Citation: Malwarebytes The Windows Vault)&lt;br /&gt;['T1218.014']: Monitor executed commands and arguments that may gather information about the victim's DNS that can be used during targeting.&lt;br /&gt;['T1037']: Monitor executed commands and arguments that may consist of logon scripts for unusual access by abnormal users or at abnormal times.&lt;br /&gt;['T1548']: Monitor executed commands and arguments that may circumvent mechanisms designed to control elevate privileges to gain higher-level permissions.&lt;br /&gt;['T1048.001']: Monitor executed commands and arguments that may steal data by exfiltrating it over a symmetrically encrypted network protocol other than that of the existing command and control channel.&lt;br /&gt;['T1562.002']: Monitor executed commands and arguments for commands that can be used to disable logging. For example, [Wevtutil](https://attack.mitre.org/software/S0645), auditpol, sc stop EventLog, and offensive tooling (such as [Mimikatz](https://attack.mitre.org/software/S0002) and Invoke-Phant0m) may be used to clear logs.(Citation: def_ev_win_event_logging)(Citation: evt_log_tampering)&lt;br /&gt;['T1567.001']: Monitor executed command and arguments that may exfiltrate data to a code repository rather than over their primary command and control channel.&lt;br /&gt;['T1048']: Monitor executed commands and arguments that may steal data by exfiltrating it over a different protocol than that of the existing command and control channel.&lt;br /&gt;['T1564.003']: Monitor executed commands and arguments that may use hidden windows to conceal malicious activity from the plain sight of users. In Windows, enable and configure event logging and PowerShell logging to check for the hidden window style.&lt;br /&gt;['T1555.002']: Monitor executed commands and arguments that may obtain root access (allowing them to read securityd's memory), then they can scan through memory to find the correct sequence of keys in relatively few tries to decrypt the user's logon keychain.&lt;br /&gt;['T1546.004']: Monitor executed commands and arguments that may establish persistence through executing malicious commands triggered by a user's shell.&lt;br /&gt;['T1197']: Monitor executed commands and arguments from the BITSAdmin tool (especially the 'Transfer', 'Create', 'AddFile', 'SetNotifyFlags', 'SetNotifyCmdLine', 'SetMinRetryDelay', 'SetCustomHeaders', and 'Resume' command options)(Citation: Microsoft BITS) Admin logs, PowerShell logs, and the Windows Event log for BITS activity.(Citation: Elastic - Hunting for Persistence Part 1) Also consider investigating more detailed information about jobs by parsing the BITS job database.(Citation: CTU BITS Malware June 2016)&lt;br /&gt;['T1134.002']: Monitor executed commands and arguments to detect token manipulation by auditing command-line activity. Specifically, analysts should look for use of the runas command or similar artifacts. Detailed command-line logging is not enabled by default in Windows.(Citation: Microsoft Command-line Logging)&lt;br /&gt;['T1059.005']: Monitor executed commands and arguments that may abuse Visual Basic (VB) for execution.&lt;br /&gt;['T1553.006']: Monitor for the execution of commands that could modify the code signing policy of a system, such as &lt;code&gt;bcdedit.exe -set TESTSIGNING ON&lt;/code&gt;. (Citation: Microsoft TESTSIGNING Feb 2021)&lt;br /&gt;['T1569.001']: Monitor command-line execution of the &lt;code&gt;launchctl&lt;/code&gt; command immediately followed by abnormal network connections.&lt;br /&gt;['T1070']: Monitor executed commands and arguments that may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined malware.&lt;br /&gt;['T1546.011']: Monitor executed commands and arguments for sdbinst.exe for potential indications of application shim abuse.&lt;br /&gt;['T1563.001']: Monitor executed commands and arguments that may hijack a legitimate user's SSH session to move laterally within an environment.&lt;br /&gt;['T1053.005']: Monitor executed commands and arguments for actions that could be taken to gather tasks may also be created through Windows system management tools such as Windows Management Instrumentation and PowerShell, so additional logging may need to be configured to gather the appropriate data.&lt;br /&gt;['T1562']: Monitor executed commands and arguments that may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms.&lt;br /&gt;['T1010']: Monitor executed commands and arguments for actions that could be taken to gather system and network information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.&lt;br /&gt;['T1137.001']: Monitor executed commands and arguments that may abuse Microsoft Office templates to obtain persistence on a compromised system.&lt;br /&gt;['T1484.001']: Monitor executed commands and arguments that may modify Group Policy Objects (GPOs) to subvert the intended discretionary access controls for a domain, usually with the intention of escalating privileges on the domain.&lt;br /&gt;['T1546.012']: Monitor executed commands and arguments that may establish persistence and/or elevate privileges by executing malicious content triggered by Image File Execution Options (IFEO) debuggers.&lt;br /&gt;['T1134']: Monitor executed commands and arguments for token manipulation by auditing command-line activity. Specifically, analysts should look for use of the &lt;code&gt;runas&lt;/code&gt; command. Detailed command-line logging is not enabled by default in Windows.(Citation: Microsoft Command-line Logging)&lt;br /&gt;['T1563']: Monitor executed commands and arguments that may take control of preexisting sessions with remote services to move laterally in an environment.&lt;br /&gt;['T1574.011']: Monitor for the execution of commands and arguments that can be used for adversaries to modify services' registry keys and values through applications such as Windows Management Instrumentation and PowerShell. Additional logging may need to be configured to gather the appropriate data.&lt;br /&gt;['T1125']: Monitor executed commands and arguments that can leverage a computer's peripheral devices (e.g., integrated cameras or webcams) or applications (e.g., video call services) to capture video recordings for the purpose of gathering information.&lt;br /&gt;['T1546.009']: Monitor executed commands and arguments that may establish persistence and/or elevate privileges by executing malicious content triggered by AppCert DLLs loaded into processes.&lt;br /&gt;['T1204.003']: Monitor executed commands and arguments that may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior.&lt;br /&gt;['T1007']: Monitor executed commands and arguments that could be taken to gather system information related to services. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).&lt;br /&gt;['T1003.007']: Monitor executed commands and arguments that may gather credentials from information stored in the Proc filesystem or &lt;code&gt;/proc&lt;/code&gt;.&lt;br /&gt;['T1059.002']: Monitor executed commands and arguments that may abuse AppleScript for execution. Scripts are likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used.  Actions may be related to network and system information [Discovery](https://attack.mitre.org/tactics/TA0007), [Collection](https://attack.mitre.org/tactics/TA0009), or other scriptable post-compromise behaviors and could be used as indicators of detection leading back to the source script.&lt;br /&gt;['T1222.002']: Many of the commands used to modify ACLs and file/directory ownership are built-in system utilities and may generate a high false positive alert rate, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible. Commonly abused command arguments include &lt;code&gt;chmod +x&lt;/code&gt;, &lt;code&gt;chmod -R 755&lt;/code&gt;, and &lt;code&gt;chmod 777&lt;/code&gt;.(Citation: 20 macOS Common Tools and Techniques)&lt;br /&gt;['T1558']: Monitor executed commands and arguments that may attempt to subvert Kerberos authentication by stealing or forging Kerberos tickets to enable [Pass the Ticket](https://attack.mitre.org/techniques/T1550/003).&lt;br /&gt;['T1136.002']: Monitor executed commands and arguments for actions that are associated with local account creation, such as net user /add /domain.&lt;br /&gt;['T1490']: Use process monitoring to monitor the execution and command line parameters of binaries involved in inhibiting system recovery, such as vssadmin, wbadmin, and bcdedit.&lt;br /&gt;['T1546.008']: Monitor executed commands and arguments that may establish persistence and/or elevate privileges by executing malicious content triggered by accessibility features. Command line invocation of tools capable of modifying the Registry for associated keys are also suspicious. Utility arguments and the binaries themselves should be monitored for changes.&lt;br /&gt;['T1547.013']: Monitor executed commands and arguments that may modify XDG autostart entries to execute programs or commands during system boot.&lt;br /&gt;['T1016']: Monitor executed commands and arguments that may look for details about the network configuration and settings, such as IP and/or MAC addresses, of systems they access or through information discovery of remote systems.&lt;br /&gt;['T1497']: Monitor executed commands and arguments that may employ various means to detect and avoid virtualization and analysis environments. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary's implementation and monitoring required.&lt;br /&gt;['T1564']: Monitor executed commands and arguments that may attempt to hide artifacts associated with their behaviors to evade detection.&lt;br /&gt;['T1136']: Monitor executed commands and arguments for actions that are associated with account creation, such as net user or useradd&lt;br /&gt;['T1547.007']: Monitor executed commands and arguments that may modify plist files to automatically run an application when a user logs in.&lt;br /&gt;['T1218.002']: When executed from the command line or clicked, control.exe will execute the CPL file (ex: &lt;code&gt;control.exe file.cpl&lt;/code&gt;) before [Rundll32](https://attack.mitre.org/techniques/T1218/011) is used to call the CPL's API functions (ex: &lt;code&gt;rundll32.exe shell32.dll,Control_RunDLL file.cpl&lt;/code&gt;). CPL files can be executed directly via the CPL API function with just the latter [Rundll32](https://attack.mitre.org/techniques/T1218/011) command, which may bypass detections and/or execution filters for control.exe.(Citation: TrendMicro CPL Malware Jan 2014)&lt;br /&gt;['T1570']: Monitor executed commands and arguments for actions for abnormal usage of utilities and command-line arguments that may be used in support of remote transfer of files&lt;br /&gt;['T1555.005']: Monitor executed commands and arguments that may acquire user credentials from third-party password managers. (Citation: ise Password Manager February 2019)&lt;br /&gt;['T1039']: Monitor executed commands and arguments for actions that could be taken to collect files from a network share. Remote access tools with built-in features may interact directly with the Windows API to gather and copy to a location. Data may also be acquired and staged through Windows system management tools such as Windows Management Instrumentation and PowerShell.&lt;br /&gt;['T1069']: Monitor executed commands and arguments acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.&lt;br /&gt;['T1497.003']: Monitor executed commands and arguments that may employ various time-based methods to detect and avoid virtualization and analysis environments. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary's implementation and monitoring required.&lt;br /&gt;['T1137.002']: Monitor executed commands and arguments that may abuse the Microsoft Office "Office Test" Registry key to obtain persistence on a compromised system.&lt;br /&gt;['T1564.008']: On Windows systems, monitor for creation of suspicious inbox rules through the use of the &lt;code&gt;New-InboxRule&lt;/code&gt; and &lt;code&gt;Set-InboxRule&lt;/code&gt; PowerShell cmdlets.(Citation: Microsoft BEC Campaign)&lt;br /&gt;['T1021']: Monitor executed commands and arguments that may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to log into a service specifically designed to accept remote connections, such as telnet, SSH, and VNC. The adversary may then perform actions as the logged-on user.&lt;br /&gt;['T1553']: Command monitoring may reveal malicious attempts to modify trust settings, such as the installation of root certificates or modifications to trust attributes/policies applied to files.&lt;br /&gt;['T1563.002']: monitor service creation that uses cmd.exe /k or cmd.exe /c in its arguments to detect RDP session hijacking.&lt;br /&gt;['T1548.002']: Monitor executed commands and arguments that may bypass UAC mechanisms to elevate process privileges on system.&lt;br /&gt;['T1036.003']: Monitor executed commands and arguments for actions that could be taken to gather...&lt;br /&gt;['T1543.003']: Monitor processes and command-line arguments for actions that could create or modify services. Command-line invocation of tools capable of adding or modifying services may be unusual, depending on how systems are typically used in a particular environment. Services may also be modified through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001), so additional logging may need to be configured to gather the appropriate data. Also collect service utility execution and service binary path arguments used for analysis. Service binary paths may even be changed to execute commands or scripts.&lt;br /&gt;['T1217']: Monitor executed commands and arguments for actions that could be taken to gather browser bookmark information. Remote access tools with built-in features may interact directly using APIs to gather information. Information may also be acquired through system management tools such as Windows Management Instrumentation and PowerShell.&lt;br /&gt;['T1135']: Monitor executed commands and arguments that may look for folders and drives shared on remote systems as a means of identifying sources of information to gather as a precursor for Collection and to identify potential systems of interest for Lateral Movement.&lt;br /&gt;['T1567']: Monitor executed commands and arguments that may use an existing, legitimate external Web service to exfiltrate data rather than their primary command and control channel.&lt;br /&gt;['T1202']: Monitor executed commands and arguments to bypass security restrictions that limit the use of command-line interpreters. &lt;br /&gt;['T1561']: Monitor for direct access read/write attempts using the &lt;code&gt;\\\\.\\&lt;/code&gt; notation.(Citation: Microsoft Sysmon v6 May 2017) Monitor for unusual kernel driver installation activity.&lt;br /&gt;['T1059.003']: Monitor executed commands and arguments that may abuse the Windows command shell for execution. Usage of the Windows command shell may be common on administrator, developer, or power user systems depending on job function. If scripting is restricted for normal users, then any attempt to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.&lt;br /&gt;['T1548.003']: Monitor executed commands and arguments that may perform sudo caching and/or use the suoders file to elevate privileges, such as the &lt;code&gt;sudo&lt;/code&gt; command.&lt;br /&gt;['T1480.001']: Monitor executed commands and arguments that may gather the victim's physical location(s) that can be used during targeting. Detecting the use of environmental keying may be difficult depending on the implementation.&lt;br /&gt;['T1546.005']: Monitor executed commands and arguments that may establish persistence by executing malicious content triggered by an interrupt signal.&lt;br /&gt;['T1082']: Monitor executed commands and arguments that may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture.&lt;br /&gt;['T1564.002']: Monitor executed commands and arguments that could be taken to add a new user and subsequently hide it from login screens.&lt;br /&gt;['T1057']: Monitor executed commands and arguments for actions that may attempt to get information about running processes on a system.&lt;br /&gt;['T1110']: Monitor executed commands and arguments that may use brute force techniques to gain access to accounts when passwords are unknown or when password hashes are obtained.&lt;br /&gt;['T1218.010']: Command arguments used before and after the regsvr32.exe invocation may also be useful in determining the origin and purpose of the script or DLL being loaded. (Citation: Carbon Black Squiblydoo Apr 2016)&lt;br /&gt;['T1484']: Monitor executed commands and arguments for modifications to domain trust settings, such as when a user or application modifies the federation settings on the domain or updates domain authentication from Managed to Federated via ActionTypes &lt;code&gt;Set federation settings on domain&lt;/code&gt; and &lt;code&gt;Set domain authentication&lt;/code&gt;.(Citation: Microsoft - Azure Sentinel ADFSDomainTrustMods)(Citation: Microsoft 365 Defender Solorigate)&lt;br /&gt;['T1562.003']: Correlating a user session with a distinct lack of new commands in their &lt;code&gt;.bash_history&lt;/code&gt; can be a clue to suspicious behavior. Monitor for modification of PowerShell command history settings through processes being created with &lt;code&gt;-HistorySaveStyle SaveNothing&lt;/code&gt; command-line arguments and use of the PowerShell commands &lt;code&gt;Set-PSReadlineOption -HistorySaveStyle SaveNothing&lt;/code&gt; and &lt;code&gt;Set-PSReadLineOption -HistorySavePath {File Path}&lt;/code&gt;.&lt;br /&gt;['T1518']: Monitor executed commands and arguments that may attempt to get a listing of software and software versions that are installed on a system or in a cloud environment.&lt;br /&gt;['T1505.004']: Monitor execution and command-line arguments of &lt;code&gt;AppCmd.exe&lt;/code&gt;, which may be abused to install malicious IIS modules.(Citation: Microsoft IIS Modules Overview 2007)(Citation: Unit 42 RGDoor Jan 2018)(Citation: ESET IIS Malware 2021)&lt;br /&gt;['T1552.006']: Monitor executed commands and arguments that may search for SYSVOL data and/or GPP XML files, especially on compromised domain controllers.&lt;br /&gt;['T1040']: Monitor executed commands and arguments for actions that aid in sniffing network traffic to capture information about an environment, including authentication material passed over the network&lt;br /&gt;['T1218.005']: Look for mshta.exe executing raw or obfuscated script within the command-line. Compare recent invocations of mshta.exe with prior history of known good arguments and executed .hta files to determine anomalous and potentially adversarial activity. Command arguments used before and after the mshta.exe invocation may also be useful in determining the origin and purpose of the .hta file being executed.&lt;br /&gt;['T1056.002']: Monitor executed commands and arguments, such as requests for credentials and/or strings related to creating password prompts that may be malicious.(Citation: Spoofing credential dialogs)&lt;br /&gt;['T1505.005']: Monitor executed commands and arguments for potential adversary actions to modify Registry values (ex: &lt;code&gt;reg.exe&lt;/code&gt;) or modify/replace the legitimate &lt;code&gt;termsrv.dll&lt;/code&gt;.&lt;br /&gt;['T1069.002']: Monitor for executed commands and arguments that may attempt to find domain-level groups and permission settings.&lt;br /&gt;['T1562.009']: Monitor executed commands and arguments associated with making configuration changes to boot settings, such as &lt;code&gt;bcdedit.exe&lt;/code&gt; and &lt;code&gt;bootcfg.exe&lt;/code&gt;.(Citation: Microsoft bcdedit 2021)(Citation: Microsoft Bootcfg)(Citation: Sophos Snatch Ransomware 2019)&lt;br /&gt;['T1552.001']: While detecting adversaries accessing these files may be difficult without knowing they exist in the first place, it may be possible to detect adversary use of credentials they have obtained. Monitor executed commands and arguments of executing processes for suspicious words or regular expressions that may indicate searching for a password (for example: password, pwd, login, secure, or credentials). See [Valid Accounts](https://attack.mitre.org/techniques/T1078) for more information.&lt;br /&gt;['T1087.004']: Monitor logs for actions that could be taken to gather information about cloud accounts, including the use of calls to cloud APIs that perform account discovery.

System and network discovery techniques normally occur throughout an operation as an adversary learns the environment, and also to an extent in normal network operations. Therefore discovery data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.&lt;br /&gt;['T1027']: Monitor executed commands and arguments containing indicators of obfuscation and known suspicious syntax such as uninterpreted escape characters like '''^''' and '''"'''. Deobfuscation tools can be used to detect these indicators in files/payloads. (Citation: GitHub Revoke-Obfuscation) (Citation: FireEye Revoke-Obfuscation July 2017) (Citation: GitHub Office-Crackros Aug 2016)&lt;br /&gt;['T1201']: Monitor executed commands and arguments for actions that may attempt to access detailed information about the password policy used within an enterprise network or cloud environment.&lt;br /&gt;['T1547.003']: Monitor executed commands and arguments that may abuse time providers to execute DLLs when the system boots.&lt;br /&gt;['T1555']: Monitor executed commands and arguments that may search for common password storage locations to obtain user credentials.&lt;br /&gt;['T1552.002']: Monitor executed commands and arguments that may search the Registry on compromised systems for insecurely stored credentials.&lt;br /&gt;['T1562.001']: Monitor for the execution of commands and arguments associated with disabling or modification of security software processes or services such as &lt;code&gt;Set-MpPreference-DisableScriptScanning 1&lt;/code&gt; in Windows,&lt;code&gt;sudo spctl --master-disable&lt;/code&gt; in macOS, and &lt;code&gt;setenforce 0&lt;/code&gt; in Linux.&lt;br /&gt;['T1546.002']: Monitor executed commands and arguments of .scr files.&lt;br /&gt;['T1562.004']: Monitor executed commands and arguments associated with disabling or the modification of system firewalls such as &lt;code&gt;netsh advfirewall firewall set rule group="file and printer sharing" new enable=Yes&lt;/code&gt;,&lt;code&gt;ufw disable&lt;/code&gt;, and &lt;code&gt;ufw logging off&lt;/code&gt;.&lt;br /&gt;['T1546.014']: Monitor executed commands and arguments that may gain persistence and elevate privileges by executing malicious content triggered by the Event Monitor Daemon (emond).&lt;br /&gt;['T1074.002']: Monitor executed commands and arguments arguments for actions that could be taken to collect and combine files. Remote access tools with built-in features may interact directly with the Windows API to gather and copy to a location. Data may also be acquired and staged through Windows system management tools such as Windows Management Instrumentation and PowerShell.&lt;br /&gt;['T1486']: Monitor executed commands and arguments for actions involved in data destruction activity, such as vssadmin, wbadmin, and bcdedit&lt;br /&gt;['T1561.002']: Monitor executed commands and arguments that may corrupt or wipe the disk data structures on a hard drive necessary to boot a system; targeting specific critical systems or in large numbers in a network to interrupt availability to system and network resources.&lt;br /&gt;['T1556.005']: Monitor command-line usage for &lt;code&gt;-AllowReversiblePasswordEncryption $true&lt;/code&gt; or other actions that could be related to malicious tampering of user settings (i.e. [Group Policy Modification](https://attack.mitre.org/techniques/T1484/001)). &lt;br /&gt;['T1021.006']: Monitor executed commands and arguments that may invoke a WinRM script to correlate it with other related events.(Citation: Medium Detecting Lateral Movement)&lt;br /&gt;['T1564.001']: Monitor the file system and shell commands for files being created with a leading "." and the Windows command-line use of attrib.exe to add the hidden attribute.&lt;br /&gt;['T1615']: Monitor for suspicious use of &lt;code&gt;gpresult&lt;/code&gt;. Monitor for the use of PowerShell functions such as &lt;code&gt;Get-DomainGPO&lt;/code&gt; and &lt;code&gt;Get-DomainGPOLocalGroup&lt;/code&gt; and processes spawning with command-line arguments containing &lt;code&gt;GPOLocalGroup&lt;/code&gt;.&lt;br /&gt;['T1529']: Monitor executed commands and arguments of binaries involved in shutting down or rebooting systems.&lt;br /&gt;['T1053.006']: Monitor executed commands and arguments the 'systemd-run' utility as it may be used to create timers&lt;br /&gt;['T1137.004']: Monitor executed commands and arguments that may abuse Microsoft Outlook's Home Page feature to obtain persistence on a compromised system. Microsoft has released a PowerShell script to safely gather mail forwarding rules and custom forms in your mail environment as well as steps to interpret the output.(Citation: Microsoft Detect Outlook Forms)&lt;br /&gt;['T1037.002']: Monitor executed commands with arguments to install or modify login hooks.&lt;br /&gt;['T1037.004']: Monitor executed commands and arguments resulting from RC scripts for unusual or unknown applications or behavior&lt;br /&gt;['T1070.004']: Monitor executed commands and arguments for actions that could be utilized to unlink, rename, or delete files.&lt;br /&gt;['T1614']: Monitor executed commands and arguments that may gather information in an attempt to calculate the geographical location of a victim host.&lt;br /&gt;['T1083']: Monitor executed commands and arguments that may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system.&lt;br /&gt;['T1137.003']: Monitor executed commands and arguments that may abuse Microsoft Outlook forms to obtain persistence on a compromised system. Microsoft has released a PowerShell script to safely gather mail forwarding rules and custom forms in your mail environment as well as steps to interpret the output.(Citation: Microsoft Detect Outlook Forms)&lt;br /&gt;['T1543.001']: Ensure Launch Agent's &lt;code&gt; ProgramArguments &lt;/code&gt; key pointing to executables located in the &lt;code&gt;/tmp&lt;/code&gt; or &lt;code&gt;/shared&lt;/code&gt; folders are in alignment with enterprise policy. Ensure all Launch Agents with the &lt;code&gt;RunAtLoad&lt;/code&gt; key set to &lt;code&gt;true&lt;/code&gt; are in alignment with policy.&lt;br /&gt;['T1059']: Monitor command-line arguments for script execution and subsequent behavior. Actions may be related to network and system information Discovery, Collection, or other scriptable post-compromise behaviors and could be used as indicators of detection leading back to the source script. Scripts are likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. &lt;br /&gt;['T1119']: Monitor executed commands and arguments for actions that could be taken to collect internal data.&lt;br /&gt;['T1016.001']: Monitor executed commands and arguments that may check for Internet connectivity on compromised systems.&lt;br /&gt;['T1137.005']: Monitor executed commands and arguments that may abuse Microsoft Outlook rules to obtain persistence on a compromised system. Microsoft has released a PowerShell script to safely gather mail forwarding rules and custom forms in your mail environment as well as steps to interpret the output.(Citation: Microsoft Detect Outlook Forms) This PowerShell script is ineffective in gathering rules with modified PR_RULE_MSG_NAME and PR_RULE_MSG_PROVIDER properties caused by adversaries using a Microsoft Exchange Server Messaging API Editor (MAPI Editor), so only examination with the Exchange Administration tool MFCMapi can reveal these mail forwarding rules.(Citation: Pfammatter - Hidden Inbox Rules)&lt;br /&gt;['T1137.006']: Monitor executed commands and arguments that may abuse Microsoft Office add-ins to obtain persistence on a compromised system. &lt;br /&gt;['T1218.001']: Monitor executed commands and arguments that may forge SAML tokens with any permissions claims and lifetimes if they possess a valid SAML token-signing certificate.(Citation: Microsoft SolarWinds Steps)&lt;br /&gt;['T1012']: Monitor executed commands and arguments for actions that may interact with the Windows Registry to gather information about the system, configuration, and installed software.&lt;br /&gt;['T1003.004']: Monitor executed commands and arguments that may access to a host may attempt to access Local Security Authority (LSA) secrets. Remote access tools may contain built-in features or incorporate existing tools like Mimikatz. PowerShell scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module,(Citation: Powersploit) which may require additional logging features to be configured in the operating system to collect necessary information for analysis.&lt;br /&gt;['T1204']: Monitor the execution of and command-line arguments for applications that may be used by an adversary to gain Initial Access that require user interaction. This includes compression applications, such as those for zip files, that can be used to [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140) in payloads.&lt;br /&gt;['T1543.004']: Some legitimate LaunchDaemons point to unsigned code that could be exploited. For Launch Daemons with the &lt;code&gt;RunAtLoad&lt;/code&gt; parameter set to true, ensure the &lt;code&gt;Program&lt;/code&gt; parameter points to signed code or executables are in alignment with enterprise policy. Some parameters are interchangeable with others, such as &lt;code&gt;Program&lt;/code&gt; and &lt;code&gt;ProgramArguments&lt;/code&gt; parameters but one must be present. (Citation: launchd Keywords for plists)&lt;br /&gt;['T1496']: Monitor executed commands and arguments that may indicate common cryptomining functionality &lt;br /&gt;['T1574.012']: Extra scrutiny should be placed on suspicious modification of Registry keys such as COR_ENABLE_PROFILING, COR_PROFILER, and COR_PROFILER_PATH by command line tools like wmic.exe, setx.exe, and [Reg](https://attack.mitre.org/software/S0075). Monitoring for command-line arguments indicating a change to COR_PROFILER variables may aid in detection.&lt;br /&gt;['T1046']: Monitor executed commands and arguments that may attempt to get a listing of services running on remote hosts, including those that may be vulnerable to remote software exploitation.&lt;br /&gt;['T1222']: Many of the commands used to modify ACLs and file/directory ownership are built-in system utilities and may generate a high false positive alert rate, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible.&lt;br /&gt;['T1115']: Monitor executed commands and arguments to collect data stored in the clipboard from users copying information within or between applications.&lt;br /&gt;['T1087.003']: Monitor for execution of commands and arguments associated with enumeration or information gathering of email addresses and accounts such as &lt;code&gt;Get-AddressList&lt;/code&gt;, &lt;code&gt;Get-GlobalAddressList&lt;/code&gt;, and &lt;code&gt;Get-OfflineAddressBook&lt;/code&gt;.&lt;br /&gt;['T1052']: Monitor executed commands and arguments that may attempt to exfiltrate data via a physical medium, such as a removable drive.&lt;br /&gt;['T1552.003']: While users do typically rely on their history of commands, they often access this history through other utilities like "history" instead of commands like &lt;code&gt;cat ~/.bash_history&lt;/code&gt;.&lt;br /&gt;['T1003.005']: Monitor executed commands and arguments that may attempt to access cached domain credentials used to allow authentication to occur in the event a domain controller is unavailable.(Citation: Microsoft - Cached Creds). Remote access tools may contain built-in features or incorporate existing tools like Mimikatz. PowerShell scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module,(Citation: Powersploit) which may require additional logging features to be configured in the operating system to collect necessary information for analysis.
Detection of compromised https://attack.mitre.org/techniques/T1078 in-use by adversaries may help as well.&lt;br /&gt;['T1546']: Monitor executed commands and arguments that may establish persistence and/or elevate privileges using system mechanisms that trigger execution based on specific events.&lt;br /&gt;['T1036.004']: Monitor executed commands and arguments that may attempt to manipulate the name of a task or service to make it appear legitimate or benign.&lt;br /&gt;['T1059.006']: Monitor systems for abnormal Python usage and python.exe behavior, which could be an indicator of malicious activity. Understanding standard usage patterns is important to avoid a high number of false positives. If scripting is restricted for normal users, then any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent. Scripts are likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Monitor executed commands and arguments that may abuse Python commands and scripts for execution.&lt;br /&gt;['T1053']: Monitor executed commands and arguments that may abuse task scheduling functionality to facilitate initial or recurring execution of malicious code.&lt;br /&gt;['T1087']: Monitor logs and other sources of command execution history for actions that could be taken to gather information about accounts, including the use of calls to cloud APIs that perform account discovery.

System and network discovery techniques normally occur throughout an operation as an adversary learns the environment, and also to an extent in normal network operations. Therefore discovery data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.&lt;br /&gt;['T1480']: Monitor executed commands and arguments that may gather information about the victim's business relationships that can be used during targeting. Detecting the use of guardrails may be difficult depending on the implementation.&lt;br /&gt;['T1176']: Monitor executed commands and arguments for usage of the profiles tool, such as profiles install -type=configuration.&lt;br /&gt;['T1003.001']: Monitor executed commands and arguments that may attempt to access credential material stored in the process memory of the Local Security Authority Subsystem Service (LSASS). Remote access tools may contain built-in features or incorporate existing tools like Mimikatz. PowerShell scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module,(Citation: Powersploit) which may require additional logging features to be configured in the operating system to collect necessary information for analysis.&lt;br /&gt;['T1218.003']: Monitor executed commands and arguments that may gather information about the victim's hosts that can be used during targeting.&lt;br /&gt;['T1136.001']: Monitor executed commands and arguments for actions that are associated with local account creation, such as net user /add , useradd , and dscl -create&lt;br /&gt;['T1021.002']: Monitor executed commands and arguments that connect to remote shares, such as [Net](https://attack.mitre.org/software/S0039), on the command-line interface and Discovery techniques that could be used to find remotely accessible systems.(Citation: Medium Detecting WMI Persistence)&lt;br /&gt;['T1059.001']: If proper execution policy is set, adversaries will likely be able to define their own execution policy if they obtain administrator or system access, either through the Registry or at the command line. This change in policy on a system may be a way to detect malicious use of PowerShell. If PowerShell is not used in an environment, then simply looking for PowerShell execution may detect malicious activity. It is also beneficial to turn on PowerShell logging to gain increased fidelity in what occurs during execution (which is applied to .NET invocations). (Citation: Malware Archaeology PowerShell Cheat Sheet) PowerShell 5.0 introduced enhanced logging capabilities, and some of those features have since been added to PowerShell 4.0. Earlier versions of PowerShell do not have many logging features.(Citation: FireEye PowerShell Logging 2016) An organization can gather PowerShell execution details in a data analytic platform to supplement it with other data.&lt;br /&gt;['T1070.002']: Monitor executed commands and arguments for actions that could be taken to remove or overwrite system logs.&lt;br /&gt;['T1005']: Monitor executed commands and arguments that may search and collect local system sources, such as file systems or local databases, to find files of interest and sensitive data prior to Exfiltration. Remote access tools with built-in features may interact directly with the Windows API to gather data. Data may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).&lt;br /&gt;['T1546.003']: Monitor executed commands and arguments that can be used to register WMI persistence, such as the &lt;code&gt; Register-WmiEvent&lt;/code&gt; [PowerShell](https://attack.mitre.org/techniques/T1059/001) cmdlet (Citation: Microsoft Register-WmiEvent)&lt;br /&gt;['T1518.001']: Monitor executed commands and arguments that may attempt to get a listing of security software, configurations, defensive tools, and sensors that are installed on a system or in a cloud environment.&lt;br /&gt;['T1003.008']: Monitor executed commands and arguments that may attempt to dump the contents of &lt;code&gt;/etc/passwd&lt;/code&gt; and &lt;code&gt;/etc/shadow&lt;/code&gt; to enable offline password cracking.&lt;br /&gt;['T1087.001']: Monitor for execution of commands and arguments associated with enumeration or information gathering of local accounts and groups such as &lt;code&gt;net user&lt;/code&gt;, &lt;code&gt;net account&lt;/code&gt;, &lt;code&gt;net localgroup&lt;/code&gt;, &lt;code&gt;Get-LocalUser&lt;/code&gt;, and &lt;code&gt; dscl&lt;/code&gt;.

System and network discovery techniques normally occur throughout an operation as an adversary learns the environment, and also to an extent in normal network operations. Therefore discovery data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.&lt;br /&gt;['T1036']: Monitor executed commands and arguments that may attempt to manipulate features of their artifacts to make them appear legitimate or benign to users and/or security tools. (Citation: Twitter ItsReallyNick Masquerading Update)&lt;br /&gt;['T1053.003']: Monitor executed atq command and ensure IP addresses stored in the SSH_CONNECTION and SSH_CLIENT variables, machines that created the jobs, are trusted hosts. All at jobs are stored in /var/spool/cron/atjobs/.&lt;br /&gt;['T1114']: Monitor executed processes and command-line arguments for actions that could be taken to gather local email files. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.&lt;br /&gt;['T1120']: Monitor executed commands and arguments that may attempt to gather information about attached peripheral devices and components connected to a computer system.&lt;br /&gt;['T1011']: Monitor executed commands and arguments that may attempt to exfiltrate data over a different network medium than the command and control channel&lt;br /&gt;['T1561.001']: Monitor executed commands and arguments that may erase the contents of storage devices on specific systems or in large numbers in a network to interrupt availability to system and network resources.&lt;br /&gt;['T1124']: Monitor executed commands and arguments for actions that may gather the system time and/or time zone from a local or remote system.&lt;br /&gt;['T1069.001']: Monitor for executed commands and arguments that may attempt to find local system groups and permission settings.&lt;br /&gt;['T1052.001']: Monitor executed commands and arguments that may attempt to exfiltrate data over a USB connected physical device.&lt;br /&gt;['T1564.009']: Monitor executed commands and arguments that are leveraging the use of resource forks, especially those immediately followed by potentially malicious activity such as creating network connections.&lt;br /&gt;['T1070.003']: Monitor executed commands and arguments for actions that could be taken to clear command history, such as &lt;code&gt;Clear-History&lt;/code&gt; on Windows, or to disable writing command history, such as &lt;code&gt;history -c&lt;/code&gt; in bash/zsh.&lt;br /&gt;['T1543']: Command-line invocation of tools capable of modifying services may be unusual, depending on how systems are typically used in a particular environment. Look for abnormal process call trees from known services and for execution of other commands that could relate to Discovery or other adversary techniques.&lt;br /&gt;['T1137']: Monitor executed commands and arguments that may leverage Microsoft Office-based applications for persistence between startups. Microsoft has released a PowerShell script to safely gather mail forwarding rules and custom forms in your mail environment as well as steps to interpret the output.(Citation: Microsoft Detect Outlook Forms) SensePost, whose tool [Ruler](https://attack.mitre.org/software/S0358) can be used to carry out malicious rules, forms, and Home Page attacks, has released a tool to detect Ruler usage.(Citation: SensePost NotRuler)&lt;br /&gt;['T1564.006']: Consider monitoring for commands and arguments that may be atypical for benign use of virtualization software. Usage of virtualization binaries or command-line arguments associated with running a silent installation may be especially suspect (ex. &lt;code&gt;-silent&lt;/code&gt;, &lt;code&gt;-ignore-reboot&lt;/code&gt;), as well as those associated with running a headless (in the background with no UI) virtual instance (ex. &lt;code&gt;VBoxManage startvm $VM --type headless&lt;/code&gt;).(Citation: Shadowbunny VM Defense Evasion) Similarly, monitoring command line arguments which suppress notifications may highlight potentially malicious activity (ex. &lt;code&gt;VBoxManage.exe setextradata global GUI/SuppressMessages "all"&lt;/code&gt;). Monitor for commands which enable hypervisors such as Hyper-V.&lt;br /&gt;['T1567.002']: Monitor executed commands and arguments that may exfiltrate data to a cloud storage service rather than over their primary command and control channel.&lt;br /&gt;['T1114.002']: Monitor executed commands and arguments for actions that may target an Exchange server, Office 365, or Google Workspace to collect sensitive information.&lt;br /&gt;['T1218.007']: Command arguments used before and after the invocation of msiexec.exe may also be useful in determining the origin and purpose of the MSI files or DLLs being executed.&lt;br /&gt;['T1047']: Monitor executed commands and arguments for actions that are used to perform remote behavior&lt;br /&gt;['T1569.002']: Monitor executed commands and arguments that may abuse the Windows service control manager to execute malicious commands or payloads.&lt;br /&gt;['T1006']: Monitor executed commands and arguments that could be taken to copy files from the logical drive and evade common file system protections. Since this technique may also be used through [PowerShell](https://attack.mitre.org/techniques/T1059/001), additional logging of PowerShell scripts is recommended.&lt;br /&gt;['T1614.001']: Monitor executed commands and arguments that may attempt to gather information about the system language of a victim in order to infer the geographical location of that host.&lt;br /&gt;['T1546.015']: Monitor executed commands and arguments that may establish persistence by executing malicious content triggered by hijacked references to Component Object Model (COM) objects.&lt;br /&gt;['T1049']: Monitor executed commands and arguments that may attempt to get a listing of network connections to or from the compromised system they are currently accessing or from remote systems by querying for information over the network. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).&lt;br /&gt;['T1569']: Monitor for command line invocations of tools capable of modifying services that doesn't correspond to normal usage patterns and known software, patch cycles, etc.&lt;br /&gt;['T1059.007']: Scripting execution is likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Monitor processes and command-line arguments for execution and subsequent behavior. Actions may be related to network and system information [Discovery](https://attack.mitre.org/tactics/TA0007), [Collection](https://attack.mitre.org/tactics/TA0009), or other programmable post-compromise behaviors and could be used as indicators of detection leading back to the source. Monitor for execution of JXA through &lt;code&gt;osascript&lt;/code&gt; and usage of &lt;code&gt;OSAScript&lt;/code&gt; API that may be related to other suspicious behavior occurring on the system. &lt;br /&gt;['T1622']: Monitor executed commands and arguments that may employ various means to detect and avoid debugged environments. Detecting actions related to debugger identification may be difficult depending on the adversary's implementation and monitoring required.&lt;br /&gt;['T1485']: Monitor executed commands and arguments for binaries that could be involved in data destruction activity, such as SDelete.&lt;br /&gt;['T1218.004']: Monitor executed commands and arguments used before and after the InstallUtil.exe invocation may also be useful in determining the origin and purpose of the binary being executed.&lt;br /&gt;['T1218']: Monitor executed commands and arguments that may forge credential materials that can be used to gain access to web applications or Internet services.&lt;br /&gt;['T1574']: Monitor executed commands and arguments that may execute their own malicious payloads by hijacking the way operating systems run programs.&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Audit OSX" url="https://www.scip.ch/en/?labs.20150108"/>
            <reference name="Confluence Linux Command  Line" url="https://confluence.atlassian.com/confkb/how-to-enable-command-line-audit-logging-in-linux-956166545.html"/>
            <reference name="Mitre ATT&amp;CK Data Source DS0017" url="https://attack.mitre.org/data-sources/DS0017"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:02.313">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-M1042" name="Disable or Remove Feature or Program" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>Remove or deny access to unnecessary and potentially vulnerable software to prevent abuse by adversaries.&lt;br /&gt;&lt;p&gt;Detailed mitigations per technique:&lt;/p&gt;&lt;br /&gt;['T1547.007', 'T1164']: This feature can be disabled entirely with the following terminal command: &lt;code&gt;defaults write -g ApplePersistence -bool no&lt;/code&gt;.&lt;br /&gt;['T1021.004']: Disable the SSH daemon on systems that do not require it. For macOS ensure Remote Login is disabled under Sharing Preferences.(Citation: Apple Unified Log Analysis Remote Login and Screen Sharing)&lt;br /&gt;['T1021.005']: Uninstall any VNC server software where not required.&lt;br /&gt;['T1175', 'T1021.003']: Consider disabling DCOM through Dcomcnfg.exe.(Citation: Microsoft Disable DCOM)&lt;br /&gt;['T1210']: Minimize available services to only those that are necessary.&lt;br /&gt;['T1028', 'T1021.006']: Disable the WinRM service.&lt;br /&gt;['T1121', 'T1218.009']: Regsvcs and Regasm may not be necessary within a given environment.&lt;br /&gt;['T1059.005']: Turn off or restrict access to unneeded VB components.&lt;br /&gt;['T1595.003']: Remove or disable access to any systems, resources, and infrastructure that are not explicitly required to be available externally.&lt;br /&gt;['T1559', 'T1559.002']: Registry keys specific to Microsoft Office feature control security can be set to disable automatic DDE/OLE execution. (Citation: Microsoft DDE Advisory Nov 2017)(Citation: BleepingComputer DDE Disabled in Word Dec 2017)(Citation: GitHub Disable DDEAUTO Oct 2017) Microsoft also created, and enabled by default, Registry keys to completely disable DDE execution in Word and Excel.(Citation: Microsoft ADV170021 Dec 2017)&lt;br /&gt;['T1173']: Registry keys specific to Microsoft Office feature control security can be set to disable automatic DDE/OLE execution. (Citation: Microsoft DDE Advisory Nov 2017) (Citation: BleepingComputer DDE Disabled in Word Dec 2017) (Citation: GitHub Disable DDEAUTO Oct 2017) Microsoft also created, and enabled by default, Registry keys to completely disable DDE execution in Word and Excel. (Citation: Microsoft ADV170021 Dec 2017)&lt;br /&gt;['T1564.006']: Disable Hyper-V if not necessary within a given environment.&lt;br /&gt;['T1171', 'T1557.001']: Disable LLMNR and NetBIOS in local computer security settings or by group policy if they are not needed within an environment. (Citation: ADSecurity Windows Secure Baseline)&lt;br /&gt;['T1046']: Ensure that unnecessary ports and services are closed to prevent risk of discovery and potential exploitation.&lt;br /&gt;['T1519']: Consider disabling emond by removing the [Launch Daemon](https://attack.mitre.org/techniques/T1160) plist file.&lt;br /&gt;['T1114.003']: Consider disabling external email forwarding.(Citation: Microsoft BEC Campaign)&lt;br /&gt;['T1086', 'T1059.001']: It may be possible to remove PowerShell from systems when not needed, but a review should be performed to assess the impact to an environment, since it could be in use for many legitimate purposes and administrative functions.

Disable/restrict the WinRM Service to help prevent uses of PowerShell for remote execution.&lt;br /&gt;['T1557']: Disable legacy network protocols that may be used   to intercept network traffic if applicable, especially those that are not needed within an environment.&lt;br /&gt;['T1052.001', 'T1052']: Disable Autorun if it is unnecessary. (Citation: Microsoft Disable Autorun) Disallow or restrict removable media at an organizational policy level if they are not required for business operations. (Citation: TechNet Removable Media Control)&lt;br /&gt;['T1553.005']: Consider disabling auto-mounting of disk image files (i.e., .iso, .img, .vhd, and .vhdx). This can be achieved by modifying the Registry values related to the Windows Explorer file associations in order to disable the automatic Explorer "Mount and Burn" dialog for these file extensions. Note: this will not deactivate the mount functionality itself.(Citation: GitHub MOTW)&lt;br /&gt;['T1505']: Consider disabling software components from servers when possible to prevent abuse by adversaries.(Citation: ITSyndicate Disabling PHP functions)&lt;br /&gt;['T1218.008']: Odbcconf.exe may not be necessary within a given environment.&lt;br /&gt;['T1091']: Disable Autorun if it is unnecessary. (Citation: Microsoft Disable Autorun) Disallow or restrict removable media at an organizational policy level if it is not required for business operations. (Citation: TechNet Removable Media Control)&lt;br /&gt;['T1137']: Follow Office macro security best practices suitable for your environment. Disable Office VBA macros from executing.

Disable Office add-ins. If they are required, follow best practices for securing them by requiring them to be signed and disabling user notification for allowing add-ins. For some add-ins types (WLL, VBA) additional mitigation is likely required as disabling add-ins in the Office Trust Center does not disable WLL nor does it prevent VBA code from executing. (Citation: MRWLabs Office Persistence Add-ins)&lt;br /&gt;['T1546.002']: Use Group Policy to disable screensavers if they are unnecessary.(Citation: TechNet Screensaver GP)&lt;br /&gt;['T1059']: Disable or remove any unnecessary or unused shells or interpreters.&lt;br /&gt;['T1021.001', 'T1563.002', 'T1076']: Disable the RDP service if it is unnecessary.&lt;br /&gt;['T1555.004']: Consider enabling the "Network access: Do not allow storage of passwords and credentials for network authentication" setting that will prevent network credentials from being stored by the Credential Manager.(Citation: Microsoft Network access Credential Manager)&lt;br /&gt;['T1092']: Disable Autoruns if it is unnecessary.(Citation: Microsoft Disable Autorun)&lt;br /&gt;['T1218.013']: Consider removing mavinject.exe if Microsoft App-V is not used within a given environment.&lt;br /&gt;['T1563']: Disable the remote service (ex: SSH, RDP, etc.) if it is unnecessary.&lt;br /&gt;['T1098.004']: Disable SSH if it is not necessary on a host or restrict SSH access for specific users/groups using &lt;code&gt;/etc/ssh/sshd_config&lt;/code&gt;.&lt;br /&gt;['T1557.002']: Consider disabling updating the ARP cache on gratuitous ARP replies.&lt;br /&gt;['T1184', 'T1563.001']: Ensure that agent forwarding is disabled on systems that do not explicitly require this feature to prevent misuse. (Citation: Symantec SSH and ssh-agent)&lt;br /&gt;['T1218.012']: Consider removing verclsid.exe if it is not necessary within a given environment.&lt;br /&gt;['T1218.005', 'T1170']: Mshta.exe may not be necessary within a given environment since its functionality is tied to older versions of Internet Explorer that have reached end of life.&lt;br /&gt;['T1133']: Disable or block remotely available services that may be unnecessary.&lt;br /&gt;['T1218.007']: Consider disabling the &lt;code&gt;AlwaysInstallElevated&lt;/code&gt; policy to prevent elevated execution of Windows Installer packages.(Citation: Microsoft AlwaysInstallElevated 2018)&lt;br /&gt;['T1564.007']: Turn off or restrict access to unneeded VB components.(Citation: Microsoft Disable VBA Jan 2020)&lt;br /&gt;['T1059.007']: Turn off or restrict access to unneeded scripting components.&lt;br /&gt;['T1218.004', 'T1118']: InstallUtil may not be necessary within a given environment.&lt;br /&gt;['T1127.001']: MSBuild.exe may not be necessary within an environment and should be removed if not being used.&lt;br /&gt;['T1011.001']: Disable Bluetooth in local computer security settings or by group policy if it is not needed within an environment.&lt;br /&gt;['T1218.014']: MMC may not be necessary within a given environment since it is primarily used by system administrators, not regular users or clients. &lt;br /&gt;['T1552.005']: Disable unnecessary metadata services and restrict or disable insecure versions of metadata services that are in use to prevent adversary access.(Citation: Amazon AWS IMDS V2)&lt;br /&gt;['T1191', 'T1218.003']: CMSTP.exe may not be necessary within a given environment (unless using it for VPN connection installation).&lt;br /&gt;['T1546.014']: Consider disabling emond by removing the [Launch Daemon](https://attack.mitre.org/techniques/T1543/004) plist file.&lt;br /&gt;['T1137.001']: Follow Office macro security best practices suitable for your environment. Disable Office VBA macros from executing.

Disable Office add-ins. If they are required, follow best practices for securing them by requiring them to be signed and disabling user notification for allowing add-ins. For some add-ins types (WLL, VBA) additional mitigation is likely required as disabling add-ins in the Office Trust Center does not disable WLL nor does it prevent VBA code from executing. (Citation: MRWLabs Office Persistence Add-ins)
&lt;br /&gt;['T1505.003']: Consider disabling functions from web technologies such as PHP's &lt;code&gt;eval()&lt;/code&gt; that may be abused for web shells.(Citation: ITSyndicate Disabling PHP functions)&lt;br /&gt;['T1205']: Disable Wake-on-LAN if it is not needed within an environment.&lt;br /&gt;['T1218']: Many native binaries may not be necessary within a given environment.&lt;br /&gt;['T1221']: Consider disabling Microsoft Office macros/active content to prevent the execution of malicious payloads in documents (Citation: Microsoft Disable Macros), though this setting may not mitigate the [Forced Authentication](https://attack.mitre.org/techniques/T1187) use for this technique.&lt;br /&gt;['T1562.010']: Consider removing previous versions of tools that are unnecessary to the environment when possible.&lt;br /&gt;['T1064']: Turn off unused features or restrict access to scripting engines such as VBScript or scriptable administration frameworks such as PowerShell.&lt;br /&gt;['T1098.002']: If email delegation is not required, disable it. In Google Workspace this can be accomplished through the Google Admin console.(Citation: Gmail Delegation)&lt;br /&gt;['T1127']: Specific developer utilities may not be necessary within a given environment and should be removed if not used.&lt;br /&gt;['T1180']: Use Group Policy to disable screensavers if they are unnecessary. (Citation: TechNet Screensaver GP)&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Mitre ATT&amp;CK Mitigation M1042" url="https://attack.mitre.org/mitigations/M1042"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:02.407">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-M1041" name="Encrypt Sensitive Information" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>Protect sensitive information with strong encryption.&lt;br /&gt;&lt;p&gt;Detailed mitigations per technique:&lt;/p&gt;&lt;br /&gt;['T1552', 'T1145', 'T1552.004']: When possible, store keys on separate cryptographic hardware instead of on the local system. &lt;br /&gt;['T1557.002', 'T1557', 'T1040', 'T1020.001']: Ensure that all wired and/or wireless traffic is encrypted appropriately. Use best practices for authentication protocols, such as Kerberos, and ensure web traffic that may contain credentials is protected by SSL/TLS.&lt;br /&gt;['T1070', 'T1070.001', 'T1070.002']: Obfuscate/encrypt event files locally and in transit to avoid giving feedback to an adversary.&lt;br /&gt;['T1602.002']: Configure SNMPv3 to use the highest level of security (authPriv) available.(Citation: US-CERT TA17-156A SNMP Abuse 2017) &lt;br /&gt;['T1003']: Ensure Domain Controller backups are properly secured.&lt;br /&gt;['T1565.002', 'T1493']: Encrypt all important data flows to reduce the impact of tailored modifications on data in transit.&lt;br /&gt;['T1565', 'T1565.001']: Consider encrypting important information to reduce an adversary's ability to perform tailored data modifications.&lt;br /&gt;['T1558', 'T1558.004', 'T1558.003', 'T1558.002']: Enable AES Kerberos encryption (or another stronger encryption algorithm), rather than RC4, where possible.(Citation: AdSecurity Cracking Kerberos Dec 2015)&lt;br /&gt;['T1530']: Encrypt data stored at rest in cloud storage.(Citation: Amazon S3 Security, 2019)(Citation: Microsoft Azure Storage Security, 2019) Managed encryption keys can be rotated by most providers. At a minimum, ensure an incident response plan to storage breach includes rotating the keys and test for impact on client applications.(Citation: Google Cloud Encryption Key Rotation)&lt;br /&gt;['T1492']: Consider encrypting important information to reduce an adversaries ability to perform tailored data modifications.&lt;br /&gt;['T1208']: Enable AES Kerberos encryption (or another stronger encryption algorithm), rather than RC4, where possible. (Citation: AdSecurity Cracking Kerberos Dec 2015)&lt;br /&gt;['T1114.002', 'T1114.003', 'T1114', 'T1114.001']: Use of encryption provides an added layer of security to sensitive information sent over email. Encryption using public key cryptography requires the adversary to obtain the private certificate along with an encryption key to decrypt messages.&lt;br /&gt;['T1602.001', 'T1602']: Configure SNMPv3 to use the highest level of security (authPriv) available.(Citation: US-CERT TA17-156A SNMP Abuse 2017)&lt;br /&gt;['T1119']: Encryption and off-system storage of sensitive information may be one way to mitigate collection of files, but may not stop an adversary from acquiring the information if an intrusion persists over a long period of time and the adversary is able to discover and access the data through other means. Strong passwords should be used on certain encrypted documents that use them to prevent offline cracking through [Brute Force](https://attack.mitre.org/techniques/T1110) techniques.&lt;br /&gt;['T1003.003']: Ensure Domain Controller backups are properly secured.(Citation: Metcalf 2015)&lt;br /&gt;['T1550.001', 'T1527']: File encryption should be enforced across email communications containing sensitive information that may be obtained through access to email services.&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Mitre ATT&amp;CK Mitigation M1041" url="https://attack.mitre.org/mitigations/M1041"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:02.402">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-DS0022" name="File" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>A computer resource object, managed by the I/O system, for storing data (such as images, text, videos, computer programs, or any wide variety of other media).(Citation: Microsoft File Mgmt)&lt;br /&gt;&lt;p&gt;Detailed detections per technique:&lt;/p&gt;&lt;br /&gt;['T1070.002']: Monitor for unexpected deletion of a system log file, typically stored in /var/logs or /Library/Logs. &lt;br /&gt;['T1485']: Monitor for unexpected deletion to a file (ex: Sysmon EID 23) &lt;br /&gt;['T1554']: Monitor for unexpected deletion of  client software binaries to establish persistent access to systems.&lt;br /&gt;['T1070']: Monitor for a file that may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined malware.&lt;br /&gt;['T1070.001']: Monitor for unexpected deletion of Windows event logs (via native binaries) and may also generate an alterable event (Event ID 1102: "The audit log was cleared")&lt;br /&gt;['T1565.003']: Monitor for unexpected deletion of a file in order to manipulate external outcomes or hide activity &lt;br /&gt;['T1490']: The Windows event logs, ex. Event ID 524 indicating a system catalog was deleted, may contain entries associated with suspicious activity.&lt;br /&gt;['T1070.003']: Monitor for unexpected deletion of a command history file, such as ConsoleHost_history.txt, ~/.zsh_history, or ~/.bash_history.&lt;br /&gt;['T1070.004']: Monitor for unexpected deletion of files from the system&lt;br /&gt;['T1552.006']: Monitor for attempts to access SYSVOL that involve searching for XML files.&lt;br /&gt;['T1114.001']: Monitor for unusual processes accessing local email files that may target user email on local systems to collect sensitive information.&lt;br /&gt;['T1074']: Monitor processes that appear to be reading files from disparate locations and writing them to the same directory or file may be an indication of data being staged, especially if they are suspected of performing encryption or compression on the files, such as 7zip, RAR, ZIP, or zlib.&lt;br /&gt;['T1555.004']: Consider monitoring file reads to Vault locations, &lt;code&gt;&amp;percnt;Systemdrive&amp;percnt;&amp;bsol;Users&amp;bsol;&amp;bsol;&amp;lsqb;Username&amp;rsqb;&amp;bsol;AppData&amp;bsol;Local&amp;bsol;Microsoft&amp;bsol;&amp;bsol;&amp;lsqb;Vault&amp;sol;Credentials&amp;rsqb;&amp;bsol;&lt;/code&gt;, for suspicious activity.(Citation: Malwarebytes The Windows Vault)&lt;br /&gt;['T1552.003']: Monitoring when the user's &lt;code&gt;.bash_history&lt;/code&gt; is read can help alert to suspicious activity.&lt;br /&gt;['T1187']: Monitor for unexpected files used to gather credentials when the files are rendered&lt;br /&gt;['T1011.001']: Monitor for files being accessed that could be related to exfiltration, such as file reads by a process that also has an active network connection. Also monitor for and investigate changes to host adapter settings, such as addition and/or replication of communication interfaces. &lt;br /&gt;['T1020']: Monitor for abnormal access to files (i.e. .pdf, .docx, .jpg, etc.), especially sensitive documents, through the use of automated processing after being gathered during Collection.&lt;br /&gt;['T1048.003']: Monitor files viewed in isolation that may steal data by exfiltrating it over a symmetrically encrypted network protocol other than that of the existing command and control channel.&lt;br /&gt;['T1091']: Monitor for unexpected files accessed on removable media.&lt;br /&gt;['T1555.005']: Monitor file reads that may acquire user credentials from third-party password managers.(Citation: ise Password Manager February 2019)&lt;br /&gt;['T1052']: Monitor file access on removable media that may attempt to exfiltrate data via a physical medium, such as a removable drive.&lt;br /&gt;['T1041']: Monitor for suspicious files (i.e. .pdf, .docx, .jpg, etc.) viewed in isolation that may steal data by exfiltrating it over an existing command and control channel.&lt;br /&gt;['T1555.003']: Identify web browser files that contain credentials such as Google Chrome's Login Data database file: &lt;code&gt;AppData\Local\Google\Chrome\User Data\Default\Login Data&lt;/code&gt;. Monitor file read events of web browser files that contain credentials, especially when the reading process is unrelated to the subject web browser.&lt;br /&gt;['T1018']: Monitor for files (such as &lt;code&gt;/etc/hosts&lt;/code&gt;) being accessed that may attempt to get a listing of other systems by IP address, hostname, or other logical identifier on a network that may be used for Lateral Movement from the current system&lt;br /&gt;['T1025']: Monitor for unexpected/abnormal file accesses to removable media (optical disk drive, USB memory, etc.) connected to the compromised system. &lt;br /&gt;['T1048.001']: Monitor for files viewed in isolation that may steal data by exfiltrating it over a symmetrically encrypted network protocol other than that of the existing command and control channel.&lt;br /&gt;['T1003.003']: Monitor for access or copy of the NTDS.dit.&lt;br /&gt;['T1003.002']: Monitor for hash dumpers opening the Security Accounts Manager (SAM) on the local file system (&lt;code&gt;%SystemRoot%/system32/config/SAM&lt;/code&gt;). Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromised [Valid Accounts](https://attack.mitre.org/techniques/T1078) in-use by adversaries may help as well.&lt;br /&gt;['T1003.007']: Monitor for unexpected access to passwords and hashes stored in memory, processes must open a maps file in the /proc filesystem for the process being analyzed. This file is stored under the path &lt;code&gt;/proc/\/maps&lt;/code&gt;, where the &lt;code&gt;\&lt;/code&gt; directory is the unique pid of the program being interrogated for such authentication data. The AuditD monitoring tool, which ships stock in many Linux distributions, can be used to watch for hostile processes opening this file in the proc file system, alerting on the pid, process name, and arguments of such programs.&lt;br /&gt;['T1003.008']: Monitor for files being accessed that may attempt to dump the contents of &lt;code&gt;/etc/passwd&lt;/code&gt; and &lt;code&gt;/etc/shadow&lt;/code&gt; to enable offline password cracking. The AuditD monitoring tool, which ships stock in many Linux distributions, can be used to watch for hostile processes attempting to access &lt;code&gt;/etc/passwd&lt;/code&gt; and &lt;code&gt;/etc/shadow&lt;/code&gt;, alerting on the pid, process name, and arguments of such programs.&lt;br /&gt;['T1555']: Monitor for files being accessed that may search for common password storage locations to obtain user credentials.&lt;br /&gt;['T1567']: Monitor for files being accessed by an existing, legitimate external Web service to exfiltrate data rather than their primary command and control channel.&lt;br /&gt;['T1539']: Monitor for an attempt by a user to gain access to a network or computing resource, often by providing credentials to cloud service management consoles. Some cloud providers, such as AWS, provide distinct log events for login attempts to the management console.&lt;br /&gt;['T1567.002']: Monitor for files being accessed to exfiltrate data to a cloud storage service rather than over their primary command and control channel.&lt;br /&gt;['T1114']: Monitor for unusual processes access of local system email files for Exfiltration, unusual processes connecting to an email server within a network, or unusual access patterns or authentication attempts on a public-facing webmail server may all be indicators of malicious activity.&lt;br /&gt;['T1048']: Monitor for suspicious files (i.e. .pdf, .docx, .jpg, etc.) viewed in isolation that may steal data by exfiltrating it over a different protocol than that of the existing command and control channel.&lt;br /&gt;['T1217']: Monitor for unexpected browser bookmarks viewed in isolation, this showcases part of a chain of behavior that could lead to other activities, such as Collection and Exfiltration, based on the information obtained.&lt;br /&gt;['T1052.001']: Monitor file access on removable media that may attempt to exfiltrate data over a USB connected physical device.&lt;br /&gt;['T1555.001']: Monitor for Keychain files being accessed that may be related to malicious credential collection.&lt;br /&gt;['T1033']: Monitor for hash dumpers opening the Security Accounts Manager (SAM) on the local file system (&lt;code&gt;%SystemRoot%/system32/config/SAM&lt;/code&gt;). Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromised  [Valid Accounts](https://attack.mitre.org/techniques/T1078) in-use by adversaries may help as well.&lt;br /&gt;['T1003']: Monitor for hash dumpers opening the Security Accounts Manager (SAM) on the local file system (&lt;code&gt;%SystemRoot%/system32/config/SAM&lt;/code&gt;). Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromised ( LinkById: T1078) in-use by adversaries may help as well.&lt;br /&gt;['T1119']: Monitor for unexpected files (i.e. .pdf, .docx, .jpg, etc.) viewed for collecting internal data.&lt;br /&gt;['T1039']: Monitor for unexpected files (i.e. .pdf, .docx, .jpg, etc.)  interacting with network shares.&lt;br /&gt;['T1552.004']: Monitor access to files and directories related to cryptographic keys and certificates as a means for potentially detecting access patterns that may indicate collection and exfiltration activity. &lt;br /&gt;['T1558']: Monitor for unexpected processes interacting with lsass.exe.(Citation: Medium Detecting Attempts to Steal Passwords from Memory) Common credential dumpers such as  [Mimikatz](https://attack.mitre.org/software/S0002) access the LSA Subsystem Service (LSASS) process by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details, including Kerberos tickets, are stored. Monitor for unusual processes accessing &lt;code&gt;secrets.ldb&lt;/code&gt; and &lt;code&gt;.secrets.mkey&lt;/code&gt; located in &lt;code&gt;/var/lib/sss/secrets/&lt;/code&gt;.&lt;br /&gt;['T1087']: Monitor access to file resources that contain local accounts and groups information such as &lt;code&gt;/etc/passwd&lt;/code&gt;, &lt;code&gt;/Users&lt;/code&gt; directories, and the SAM database. 

If access requires high privileges, look for non-admin objects (such as users or processes) attempting to access restricted file resources.&lt;br /&gt;['T1552']: Monitor for suspicious file access activity, specifically indications that a process is reading multiple files in a short amount of time and/or using command-line arguments indicative of searching for credential material (ex: regex patterns). These may be indicators of automated/scripted credential access behavior. Monitoring when the user's &lt;code&gt;.bash_history&lt;/code&gt; is read can help alert to suspicious activity. While users do typically rely on their history of commands, they often access this history through other utilities like "history" instead of commands like &lt;code&gt;cat ~/.bash_history&lt;/code&gt;.&lt;br /&gt;['T1011']: Monitor for files being accessed that could be related to exfiltration, such as file reads by a process that also has an active network connection.&lt;br /&gt;['T1567.001']: Monitor for files being accessed to exfiltrate data to a code repository rather than over their primary command and control channel.&lt;br /&gt;['T1087.001']: Monitor access to file resources that contain local accounts and groups information such as &lt;code&gt;/etc/passwd&lt;/code&gt;, &lt;code&gt;/Users&lt;/code&gt; directories, and the Windows SAM database. 

If access requires high privileges, look for non-admin objects (such as users or processes) attempting to access restricted file resources.&lt;br /&gt;['T1005']: Monitor for unexpected/abnormal access to files that may be malicious collection of local data, such as user files (pdf, .docx, .jpg, etc.) or local databases.&lt;br /&gt;['T1552.001']: Monitor for files being accessed that may search local file systems and remote file shares for files containing insecurely stored credentials. While detecting adversaries accessing these files may be difficult without knowing they exist in the first place, it may be possible to detect adversary use of credentials they have obtained. &lt;br /&gt;['T1053.005']: Monitor Windows Task Scheduler stores in %systemroot%\System32\Tasks for change entries related to scheduled tasks that do not correlate with known software, patch cycles, etc.&lt;br /&gt;['T1574.001']: Monitor for changed made to .manifest/.local redirection files, or file systems for moving, renaming, replacing, or modifying DLLs. Changes in the set of DLLs that are loaded by a process (compared with past behavior) that do not correlate with known software, patches, etc., are suspicious.&lt;br /&gt;['T1574.005']: Monitor for changes to binaries and service executables that may normally occur during software updates. &lt;br /&gt;['T1547.009']: Since a shortcut's target path likely will not change, modifications to shortcut files that do not correlate with known software changes, patches, removal, etc., may be suspicious. Analysis should attempt to relate shortcut file change events to other potentially suspicious events based on known adversary behavior such as process launches of unknown executables that make network connections.&lt;br /&gt;['T1037']: Monitor for changes made to files that are modified by unusual accounts outside of normal administration duties.&lt;br /&gt;['T1564.002']: Monitor for changes made to files that may use hidden users to mask the presence of user accounts they create or modify. Monitor for changes made to the &lt;code&gt;/Library/Preferences/com.apple.loginwindow&lt;/code&gt; plist file for unexpected modifications to the &lt;code&gt; Hide500Users&lt;/code&gt; key value on macOS.(Citation: Cybereason OSX Pirrit)&lt;br /&gt;['T1036']: Monitor for changes made to files outside of an update or patch that may attempt to manipulate features of their artifacts to make them appear legitimate or benign to users and/or security tools.&lt;br /&gt;['T1556.004']: Monitor for changes made to the checksum of the operating system file and verifying the image of the operating system in memory.(Citation: Cisco IOS Software Integrity Assurance - Image File Verification)(Citation: Cisco IOS Software Integrity Assurance - Run-Time Memory Verification) Detection of this behavior may be difficult, detection efforts may be focused on closely related adversary behaviors, such as Modify System Image.&lt;br /&gt;['T1600']: File Modification&lt;br /&gt;['T1548.003']: On Linux, auditd can alert every time a user's actual ID and effective ID are different (this is what happens when you sudo). This technique is abusing normal functionality in macOS and Linux systems, but sudo has the ability to log all input and output based on the &lt;code&gt;LOG_INPUT&lt;/code&gt; and &lt;code&gt;LOG_OUTPUT&lt;/code&gt; directives in the &lt;code&gt;/etc/sudoers&lt;/code&gt; file.&lt;br /&gt;['T1543.001']: Launch Agents also require files on disk for persistence which can also be monitored via other file monitoring applications.&lt;br /&gt;['T1053.003']: Monitor for changes made to files for unexpected modifications to access permissions and attributes &lt;br /&gt;['T1070']: Monitor for changes made to a file may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined malware.&lt;br /&gt;['T1056']: Monitor for changes made to files for unexpected modifications to access permissions and attributes  &lt;br /&gt;['T1546.011']: Monitor for changes made to files that may establish persistence and/or elevate privileges by executing malicious content triggered by application shims.&lt;br /&gt;['T1574.010']: Monitor for modification of binaries and service executables that do not occur during a regular software update or an update scheduled by the organization. Modification of files considers actions such as renaming and directory moving.&lt;br /&gt;['T1505']: Monitor for changes made to files that may abuse legitimate extensible development features of servers to establish persistent access to systems.&lt;br /&gt;['T1053.006']: Monitor for changes made to systemd timer unit files for unexpected modification events within the /etc/systemd/system, /usr/lib/systemd/system/, and ~/.config/systemd/user/ directories, as well as associated symbolic links&lt;br /&gt;['T1056.003']: Monitor for changes made to detect changes to files in the Web directory for organization login pages that do not match with authorized updates to the Web server's content.&lt;br /&gt;['T1546.002']: Monitor for changes made to files that may establish persistence by executing malicious content triggered by user inactivity.&lt;br /&gt;['T1546.013']: Locations where &lt;code&gt;profile.ps1&lt;/code&gt; can be stored should be monitored for modifications. (Citation: Malware Archaeology PowerShell Cheat Sheet) Example profile locations include:
* &lt;code&gt;$PsHome\Profile.ps1&lt;/code&gt;
* &lt;code&gt;$PsHome\Microsoft.{HostProgram}_profile.ps1&lt;/code&gt;
* &lt;code&gt;$Home\My Documents\PowerShell\Profile.ps1&lt;/code&gt;
* &lt;code&gt;$Home\My Documents\PowerShell\Microsoft.{HostProgram}_profile.ps1&lt;/code&gt;&lt;br /&gt;['T1564.003']: Monitor for changes made to files that may use hidden windows to conceal malicious activity from the plain sight of users. In MacOS, plist files are ASCII text files with a specific format, so they're relatively easy to parse. File monitoring can check for the &lt;code&gt;apple.awt.UIElement&lt;/code&gt; or any other suspicious plist tag in plist files and flag them.&lt;br /&gt;['T1547.001']: Monitor the start folder for additions or changes. Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including the startup folders. (Citation: TechNet Autoruns)&lt;br /&gt;['T1565.003']: Monitor for unexpected files with manipulated data in order to manipulate external outcomes or hide activity&lt;br /&gt;['T1070.006']: Monitor for unexpected modifications to file timestamps &lt;br /&gt;['T1489']: Monitor for changes made to files that may stop or disable services on a system to render those services unavailable to legitimate users.&lt;br /&gt;['T1564.005']: Detecting the use of a hidden file system may be exceptionally difficult depending on the implementation. Emphasis may be placed on detecting related aspects of the adversary lifecycle, such as how malware interacts with the hidden file system or how a hidden file system is loaded.&lt;br /&gt;['T1037.002']: Monitor for changes to login hook files (&lt;code&gt;/Library/Preferences/com.apple.loginwindow.plist&lt;/code&gt;), especially by unusual accounts outside of normal administration duties.&lt;br /&gt;['T1574.009']: Monitor for changes made to files that may execute their own malicious payloads by hijacking vulnerable file path references.&lt;br /&gt;['T1491.002']: Monitor external websites for unplanned content changes.&lt;br /&gt;['T1486']: Monitor for changes made to files in user directories.&lt;br /&gt;['T1055.009']: Monitor for changes made to /proc files that may inject malicious code into processes via the /proc filesystem in order to evade process-based defenses as well as possibly elevate privileges. Users should not have permission to modify these in most cases. &lt;br /&gt;['T1098']: Monitor for changes made to files related to account settings, such as /etc/ssh/sshd_config and the authorized_keys file for each user on a system.&lt;br /&gt;['T1564.004']: There are many ways to create and interact with ADSs using Windows utilities. Monitor for operations (execution, copies, etc.) with file names that contain colons. This syntax (ex: &lt;code&gt;file.ext:ads[.ext]&lt;/code&gt;) is commonly associated with ADSs. (Citation: Microsoft ADS Mar 2014) (Citation: Oddvar Moe ADS1 Jan 2018) (Citation: Oddvar Moe ADS2 Apr 2018) For a more exhaustive list of utilities that can be used to execute and create ADSs, see https://gist.github.com/api0cradle/cdd2d0d0ec9abb686f0e89306e277b8f.&lt;br /&gt;['T1600.002']: There is no documented method for defenders to directly identify behaviors that reduce encryption key space. Detection efforts may be focused on closely related adversary behaviors, such as Modify System Image and Network Device CLI. Some detection methods require vendor support to aid in investigation.&lt;br /&gt;['T1187']: Monitor for changes made to the .LNK, .SCF, or any other files on systems and within virtual environments that contain resources that point to external network resources &lt;br /&gt;['T1543.004']: Monitor files for changes that may create or modify Launch Daemons to execute malicious payloads as part of persistence.&lt;br /&gt;['T1546.004']: Monitor for changes to &lt;code&gt;/etc/profile&lt;/code&gt; and &lt;code&gt;/etc/profile.d&lt;/code&gt;, these files should only be modified by system administrators. MacOS users can leverage Endpoint Security Framework file events monitoring these specific files.(Citation: ESF_filemonitor)&lt;br /&gt;['T1098.004']: Monitor for changes made to detect changes made to the authorized_keys file for each user on a system. Monitor for changes to and suspicious processes modifiying /etc/ssh/sshd_config.&lt;br /&gt;['T1548']: On Linux, auditd can alert every time a user's actual ID and effective ID are different (this is what happens when you sudo). This technique is abusing normal functionality in macOS and Linux systems, but sudo has the ability to log all input and output based on the &lt;code&gt;LOG_INPUT&lt;/code&gt; and &lt;code&gt;LOG_OUTPUT&lt;/code&gt; directives in the &lt;code&gt;/etc/sudoers&lt;/code&gt; file. Consider monitoring for &lt;code&gt;/usr/libexec/security_authtrampoline&lt;/code&gt; executions which may indicate that AuthorizationExecuteWithPrivileges is being executed. MacOS system logs may also indicate when AuthorizationExecuteWithPrivileges is being called.&lt;br /&gt;['T1037.004']: Monitor for changes made to files for unexpected modifications to RC scripts in the /etc/ directory&lt;br /&gt;['T1554']: Monitor changes to client software that do not correlate with known software or patch cycles.&lt;br /&gt;['T1070.002']: Monitor for changes made to system log files, typically stored in  /var/log or /Library/Logs, for unexpected modifications to access permissions and attributes &lt;br /&gt;['T1055']: Monitor for changes made to files that may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges.&lt;br /&gt;['T1036.003']: Monitor for changes made to files for unexpected modifications to file names that are mismatched between the file name on disk and that of the binary's PE metadata. This is a likely indicator that a binary was renamed after it was compiled.  &lt;br /&gt;['T1547.015']: All login items created via shared file lists are viewable by using the System Preferences GUI or in the &lt;code&gt;~/Library/Application Support/com.apple.backgroundtaskmanagementagent/backgrounditems.btm&lt;/code&gt; file.(Citation: Open Login Items Apple)(Citation: Startup Items Eclectic)(Citation: objsee block blocking login items)(Citation: sentinelone macos persist Jun 2019) These locations should be monitored and audited.&lt;br /&gt;['T1574']: Monitor file systems for moving, renaming, replacing, or modifying DLLs. Changes in the set of DLLs that are loaded by a process (compared with past behavior) that do not correlate with known software, patches, etc., are suspicious. Modifications to or creation of .manifest and .local redirection files that do not correlate with software updates are suspicious.&lt;br /&gt;['T1546']: Monitor for changes made to files that may establish persistence and/or elevate privileges using system mechanisms that trigger execution based on specific events.&lt;br /&gt;['T1556']: Monitor PAM configuration and module paths (ex: /etc/pam.d/) for changes. Use system-integrity tools such as AIDE and monitoring tools such as auditd to monitor PAM files.&lt;br /&gt;['T1137.002']: Monitor for changes made to files that may abuse the Microsoft Office "Office Test" Registry key to obtain persistence on a compromised system.&lt;br /&gt;['T1564']: Monitor for changes made to files that may attempt to hide artifacts associated with their behaviors to evade detection.&lt;br /&gt;['T1547.006']: Monitor for changes made to files that may modify the kernel to automatically execute programs on system boot.&lt;br /&gt;['T1574.006']: Monitor for changes to environment variables and files associated with loading shared libraries such as LD_PRELOAD on Linux and DYLD_INSERT_LIBRARIES on macOS.&lt;br /&gt;['T1553']: Periodically baseline registered SIPs and trust providers (Registry entries and files on disk), specifically looking for new, modified, or non-Microsoft entries.(Citation: SpectorOps Subverting Trust Sept 2017) Also analyze Autoruns data for oddities and anomalies, specifically malicious files attempting persistent execution by hiding within auto-starting locations. Autoruns will hide entries signed by Microsoft or Windows by default, so ensure "Hide Microsoft Entries" and "Hide Windows Entries" are both deselected.(Citation: SpectorOps Subverting Trust Sept 2017)

On macOS, the removal of the &lt;code&gt;com.apple.quarantine&lt;/code&gt; flag by a user instead of the operating system is a suspicious action and should be examined further. Also monitor software update frameworks that may strip this flag when performing updates.&lt;br /&gt;['T1137.006']: Monitor for changes made to files that may abuse Microsoft Office add-ins to obtain persistence on a compromised system.&lt;br /&gt;['T1546.008']: Monitor for changes made to files that may establish persistence and/or elevate privileges by executing malicious content triggered by accessibility features. Changes to accessibility utility binaries or binary paths that do not correlate with known software, patch cycles, etc., are suspicious.&lt;br /&gt;['T1546.006']: Monitor file systems for changes to application binaries and invalid checksums/signatures.&lt;br /&gt;['T1137']: Monitor for changes made to files that may leverage Microsoft Office-based applications for persistence between startups.&lt;br /&gt;['T1553.003']: Periodically baseline registered SIPs and trust providers (Registry entries and files on disk), specifically looking for new, modified, or non-Microsoft entries.(Citation: SpectorOps Subverting Trust Sept 2017) Also analyze Autoruns data for oddities and anomalies, specifically malicious files attempting persistent execution by hiding within auto-starting locations. Autoruns will hide entries signed by Microsoft or Windows by default, so ensure "Hide Microsoft Entries" and "Hide Windows Entries" are both deselected.(Citation: SpectorOps Subverting Trust Sept 2017)&lt;br /&gt;['T1037.003']: Monitor for changes made to files for unexpected modifications to unusual accounts outside of normal administration duties  &lt;br /&gt;['T1569.001']: Every Launch Agent and Launch Daemon must have a corresponding plist file on disk which can be monitored. Plist files are located in the root, system, and users &lt;code&gt;/Library/LaunchAgents&lt;/code&gt; or &lt;code&gt;/Library/LaunchDaemons&lt;/code&gt; folders. [Launch Agent](https://attack.mitre.org/techniques/T1543/001) or [Launch Daemon](https://attack.mitre.org/techniques/T1543/004) with executable paths pointing to /tmp and /Shared folders locations are potentially suspicious.&lt;br /&gt;['T1543']: Monitor for changes to files associated with system-level processes.&lt;br /&gt;['T1569']: Monitor for changes made to files that may abuse system services or daemons to execute commands or programs.&lt;br /&gt;['T1547']: Monitor for changes made to files that may configure system settings to automatically execute a program during system boot or logon to maintain persistence or gain higher-level privileges on compromised systems.&lt;br /&gt;['T1505.005']: Monitor unexpected changes and/or interactions with &lt;code&gt;termsrv.dll&lt;/code&gt;, which is typically stored in &lt;code&gt;%SystemRoot%\System32\&lt;/code&gt;.&lt;br /&gt;['T1546.005']: Monitor for changes made to files that may establish persistence by executing malicious content triggered by an interrupt signal.&lt;br /&gt;['T1543.002']: Systemd service unit files may be detected by auditing file creation and modification events within the &lt;code&gt;/etc/systemd/system&lt;/code&gt;, &lt;code&gt;/usr/lib/systemd/system/&lt;/code&gt;, and &lt;code&gt;/home/&lt;username&gt;/.config/systemd/user/&lt;/code&gt; directories, as well as associated symbolic links&lt;br /&gt;['T1505.003']: Monitor for changes made to files that may backdoor web servers with web shells to establish persistent access to systems.&lt;br /&gt;['T1556.001']: Monitor for changes to functions exported from authentication-related system DLLs (such as cryptdll.dll and samsrv.dll).(Citation: Dell Skeleton)&lt;br /&gt;['T1601.002']: Monitor for changes made to the operating system of a network device because image downgrade may be used in conjunction with  [Patch System Image](https://attack.mitre.org/techniques/T1601/001), it may be appropriate to also verify the integrity of the vendor provided operating system image file.&lt;br /&gt;['T1547.008']: Monitor for changes made to files that may modify or add LSASS drivers to obtain persistence on compromised systems.&lt;br /&gt;['T1553.001']: The removal of the &lt;code&gt;com.apple.quarantine&lt;/code&gt; flag by a user instead of the operating system is a suspicious action and should be examined further. Also monitor software update frameworks that may strip this flag when performing updates.&lt;br /&gt;['T1574.004']: Monitor file systems for moving, renaming, replacing, or modifying dylibs. Changes in the set of dylibs that are loaded by a process (compared to past behavior) that do not correlate with known software, patches, etc., are suspicious. Check the system for multiple dylibs with the same name and monitor which versions have historically been loaded into a process.&lt;br /&gt;['T1485']: Monitor for changes made to a large quantity of files for unexpected modifications in user directories and under C:\Windows\System32\.&lt;br /&gt;['T1037.005']: Monitor for changes made to files for unexpected modifications to /Library/StartupItem folder&lt;br /&gt;['T1647']: Monitor for plist file modification, especially if immediately followed by other suspicious events such as code execution from &lt;code&gt;\~/Library/Scripts&lt;/code&gt; or &lt;code&gt;\~/Library/Preferences&lt;/code&gt;. Also, monitor for significant changes to any path pointers in a modified plist.&lt;br /&gt;['T1574.008']: Monitor for programs metadata modifications such as deletion of the path to an executable since it makes programs vulnerable to this type of technique. Also, monitor modifications of files such as renaming programs using Windows system utilities names.&lt;br /&gt;['T1080']: Monitor for files that write or overwrite many files to a network shared directory may be suspicious.&lt;br /&gt;['T1547.013']: Malicious XDG autostart entries may be detected by auditing file modification events within the &lt;code&gt;/etc/xdg/autostart&lt;/code&gt; and &lt;code&gt;~/.config/autostart&lt;/code&gt; directories. Depending on individual configurations, defenders may need to query the environment variables &lt;code&gt;$XDG_CONFIG_HOME&lt;/code&gt; or &lt;code&gt;$XDG_CONFIG_DIRS&lt;/code&gt; to determine the paths of Autostart entries. Autostart entry files not associated with legitimate packages may be considered suspicious. Suspicious entries can also be identified by comparing entries to a trusted system baseline.&lt;br /&gt;['T1053']: Monitor for changes made to files that may abuse task scheduling functionality to facilitate initial or recurring execution of malicious code.&lt;br /&gt;['T1601.001']: Compare the checksum of the operating system file with the checksum of a known good copy from a trusted source. Some embedded network device platforms may have the capability to calculate the checksum of the file, while others may not. Even for those platforms that have the capability, it is recommended to download a copy of the file to a trusted computer to calculate the checksum with software that is not compromised.https://tools.cisco.com/security/center/resources/integrity_assurance.html#7

Many vendors of embedded network devices can provide advanced debugging support that will allow them to work with device owners to validate the integrity of the operating system running in memory. If a compromise of the operating system is suspected, contact the vendor technical support and seek such services for a more thorough inspection of the current running system. https://tools.cisco.com/security/center/resources/integrity_assurance.html#13&lt;br /&gt;['T1546.014']: Monitor emond rules creation by checking for files modified in &lt;code&gt;/etc/emond.d/rules/&lt;/code&gt; and &lt;code&gt;/private/var/db/emondClients&lt;/code&gt;.&lt;br /&gt;['T1140']: Monitor for changes made to files for unexpected modifications that attempt to hide artifacts.&lt;br /&gt;['T1053.002']: On Windows, monitor Windows Task Scheduler stores in `%systemroot%\System32\Tasks` for change entries related to scheduled tasks, especially those that do not correlate with known software, patch cycles, etc. On Linux and macOS, all [at](https://attack.mitre.org/software/S0110) jobs are stored in &lt;code&gt;/var/spool/cron/atjobs/&lt;/code&gt;.(Citation: rowland linux at 2019)&lt;br /&gt;['T1070.003']: Monitor for changes made to command history files, such as ConsoleHost_history.txt, ~/.zsh_history, or ~/.bash_history, for unexpected modifications to contents, access permissions, and attributes.&lt;br /&gt;['T1505.004']: Monitor for modification of files (especially DLLs on webservers) that could be abused as malicious ISAPI extensions/filters or IIS modules. Changes to &lt;code&gt;%windir%\system32\inetsrv\config\applicationhost.config&lt;/code&gt; could indicate an IIS module installation.(Citation: Microsoft IIS Modules Overview 2007)(Citation: ESET IIS Malware 2021)&lt;br /&gt;['T1491.001']: Monitor internal and websites for unplanned content changes.&lt;br /&gt;['T1137.001']: Monitor for changes made to files that may abuse Microsoft Office templates to obtain persistence on a compromised system. Modification to base templates, like Normal.dotm, should also be investigated since the base templates should likely not contain VBA macros. Changes to the Office macro security settings should also be investigated&lt;br /&gt;['T1547.007']: Monitoring the specific plist files associated with reopening applications can indicate when an application has registered itself to be reopened.&lt;br /&gt;['T1491']: Monitor for changes made to files for unexpected modifications to internal and external websites for unplanned content changes.&lt;br /&gt;['T1564.008']: On MacOS systems, monitor for modifications to the &lt;code&gt;RulesActiveState.plist&lt;/code&gt;, &lt;code&gt;SyncedRules.plist&lt;/code&gt;, &lt;code&gt;UnsyncedRules.plist&lt;/code&gt;, and &lt;code&gt;MessageRules.plist&lt;/code&gt; files.(Citation: MacOS Email Rules)&lt;br /&gt;['T1548.001']: Monitor for changes made to files that may perform shell escapes or exploit vulnerabilities in an application with the setsuid or setgid bits to get code running in a different user's context.&lt;br /&gt;['T1014']: Monitor for changes and the existence of unrecognized DLLs, drivers, devices, services, and to the MBR. (Citation: Wikipedia Rootkit)&lt;br /&gt;['T1601']: Most embedded network devices provide a command to print the version of the currently running operating system. Use this command to query the operating system for its version number and compare it to what is expected for the device in question. Because this method may be used in conjunction with  [Patch System Image](https://attack.mitre.org/techniques/T1601/001), it may be appropriate to also verify the integrity of the vendor provided operating system image file.

Compare the checksum of the operating system file with the checksum of a known good copy from a trusted source. Some embedded network device platforms may have the capability to calculate the checksum of the file, while others may not. Even for those platforms that have the capability, it is recommended to download a copy of the file to a trusted computer to calculate the checksum with software that is not compromised. (Citation: Cisco IOS Software Integrity Assurance - Image File Verification)

Many vendors of embedded network devices can provide advanced debugging support that will allow them to work with device owners to validate the integrity of the operating system running in memory. If a compromise of the operating system is suspected, contact the vendor technical support and seek such services for a more thorough inspection of the current running system.  (Citation: Cisco IOS Software Integrity Assurance - Run-Time Memory Verification)&lt;br /&gt;['T1053.007']: Monitor for newly constructed files by using the logging agents on Kubernetes nodes and retrieve logs from sidecar proxies for application and resource pods to monitor malicious container orchestration job deployments.&lt;br /&gt;['T1574.007']: Monitor for newly constructed files for files named after partial directories and in locations that may be searched for common processes through the environment variable, or otherwise should not be user writable. Also, monitor file creation for programs that are named after Windows system programs or programs commonly executed without a path (such as "findstr," "net," and "python"). If this activity occurs outside of known administration activity, upgrades, installations, or patches, then it may be suspicious.&lt;br /&gt;['T1204.001']: malicious documents and files that are downloaded from a link and executed on the user's computer&lt;br /&gt;['T1137.001']: Monitor for newly constructed files that may abuse Microsoft Office templates to obtain persistence on a compromised system.&lt;br /&gt;['T1137']: Monitor for newly constructed files that may leverage Microsoft Office-based applications for persistence between startups.&lt;br /&gt;['T1218.002']: Monitor for newly constructed files that may forge web cookies that can be used to gain access to web applications or Internet services.&lt;br /&gt;['T1560.002']: Monitor newly constructed files being written with extensions and/or headers associated with compressed or encrypted file types. Detection efforts may focus on follow-on exfiltration activity, where compressed or encrypted files can be detected in transit with a network intrusion detection or data loss prevention system analyzing file headers.&lt;br /&gt;['T1037.002']: Monitor for the creation of and/or changes to login hook files (&lt;code&gt;/Library/Preferences/com.apple.loginwindow.plist&lt;/code&gt;), especially by unusual accounts outside of normal administration duties.&lt;br /&gt;['T1037.004']: Monitor for newly constructed /etc/rc.local file &lt;br /&gt;['T1574.006']: Monitor for newly constructed files that are added to absolute paths of shared libraries such as LD_PRELOAD on Linux and DYLD_INSERT_LIBRARIES on macOS.&lt;br /&gt;['T1566']: Monitor for newly constructed files from a phishing messages to gain access to victim systems.&lt;br /&gt;['T1546.004']: Monitor for newly constructed files that may establish persistence through executing malicious commands triggered by a user's shell. For most Linux and macOS systems, a list of file paths for valid shell options available on a system are located in the &lt;code&gt;/etc/shells&lt;/code&gt; file.&lt;br /&gt;['T1036.007']: Monitor for files written to disk that contain two file extensions, particularly when the second is an executable.&lt;br /&gt;['T1574.005']: Monitor for newly constructed files to match an existing service executable, it could be detected and correlated with other suspicious behavior.  &lt;br /&gt;['T1105']: Monitor for file creation and files transferred into the network&lt;br /&gt;['T1491']: Monitor for newly constructed visual content for internal or external enterprise networks. &lt;br /&gt;['T1037.005']: Monitor for newly constructed files by unusual accounts outside of normal administration duties&lt;br /&gt;['T1074.001']: Monitor publicly writeable directories, central locations, and commonly used staging directories (recycle bin, temp folders, etc.) to regularly check for compressed or encrypted data that may be indicative of staging.&lt;br /&gt;['T1053']: Monitor newly constructed files that may abuse task scheduling functionality to facilitate initial or recurring execution of malicious code.&lt;br /&gt;['T1546.005']: Monitor for newly constructed files that may establish persistence by executing malicious content triggered by an interrupt signal.&lt;br /&gt;['T1505.003']: File monitoring may be used to detect changes to files in the Web directory of a Web server that do not match with updates to the Web server's content and may indicate implantation of a Web shell script.(Citation: NSA Cyber Mitigating Web Shells)&lt;br /&gt;['T1547']: Monitor for newly constructed files that may configure system settings to automatically execute a program during system boot or logon to maintain persistence or gain higher-level privileges on compromised systems.&lt;br /&gt;['T1543.001']: Monitor for newly constructed files that may create or modify launch agents to repeatedly execute malicious payloads as part of persistence.&lt;br /&gt;['T1547.013']: Malicious XDG autostart entries may be detected by auditing file creation events within the &lt;code&gt;/etc/xdg/autostart&lt;/code&gt; and &lt;code&gt;~/.config/autostart&lt;/code&gt; directories. Depending on individual configurations, defenders may need to query the environment variables &lt;code&gt;$XDG_CONFIG_HOME&lt;/code&gt; or &lt;code&gt;$XDG_CONFIG_DIRS&lt;/code&gt; to determine the paths of Autostart entries. Autostart entry files not associated with legitimate packages may be considered suspicious. Suspicious entries can also be identified by comparing entries to a trusted system baseline.&lt;br /&gt;['T1027.004']: Monitor for newly constructed files for payloads&lt;br /&gt;['T1543.004']: Monitor for new files added to the &lt;code&gt;/Library/LaunchDaemons/&lt;/code&gt; folder. The System LaunchDaemons are protected by SIP.&lt;br /&gt;['T1574']: Monitor for newly constructed files that may execute their own malicious payloads by hijacking the way operating systems run programs.&lt;br /&gt;['T1546.002']: Monitor newly constructed files that may establish persistence by executing malicious content triggered by user inactivity.&lt;br /&gt;['T1547.012']: Monitor for newly constructed files that may abuse print processors to run malicious DLLs during system boot for persistence and/or privilege escalation.&lt;br /&gt;['T1574.010']: Monitor for creation of binaries and service executables that do not occur during a regular software update or an update scheduled by the organization. This behavior also considers files that are overwritten.&lt;br /&gt;['T1547.010']: Monitor newly constructed files that may use port monitors to run an attacker supplied DLL during system boot for persistence or privilege escalation.&lt;br /&gt;['T1491.001']: Monitor for newly constructed files that may deface systems internal to an organization in an attempt to intimidate or mislead users.&lt;br /&gt;['T1027']: Detection of file obfuscation is difficult unless artifacts are left behind by the obfuscation process that are uniquely detectable with a signature. If detection of the obfuscation itself is not possible, it may be possible to detect the malicious activity that caused the obfuscated file (for example, the method that was used to write, read, or modify the file on the file system).&lt;br /&gt;['T1564.001']: Monitor the file system and shell commands for files being created with a leading "."&lt;br /&gt;['T1218.001']: Monitor presence and use of CHM files, especially if they are not typically used within an environment.&lt;br /&gt;['T1218']: Monitor for file activity (creations, downloads, modifications, etc.), especially for file types that are not typical within an environment and may be indicative of adversary activity.&lt;br /&gt;['T1556.002']: Monitor for newly constructed files that may register malicious password filter dynamic link libraries (DLLs) into the authentication process to acquire user credentials as they are validated.&lt;br /&gt;['T1556']: Monitor for suspicious additions to the /Library/Security/SecurityAgentPlugins directory.(Citation: Xorrior Authorization Plugins)&lt;br /&gt;['T1204']: Anti-virus can potentially detect malicious documents and files that are downloaded and executed on the user's computer. Endpoint sensing or network sensing can potentially detect malicious events once the file is opened (such as a Microsoft Word document or PDF reaching out to the internet or spawning powershell.exe).&lt;br /&gt;['T1574.009']: Monitor file creation for files named after partial directories and in locations that may be searched for common processes through the environment variable, or otherwise should not be user writable. Also, monitor file creation for programs that are named after Windows system programs or programs commonly executed without a path (such as "findstr," "net," and "python"). If this activity occurs outside of known administration activity, upgrades, installations, or patches, then it may be suspicious.&lt;br /&gt;['T1546']: Monitor newly constructed files that may establish persistence and/or elevate privileges using system mechanisms that trigger execution based on specific events.&lt;br /&gt;['T1491.002']: Monitor for newly constructed files that may deface systems external to an organization in an attempt to deliver messaging, intimidate, or otherwise mislead an organization or users.&lt;br /&gt;['T1546.014']: Monitor emond rules creation by checking for files created in &lt;code&gt;/etc/emond.d/rules/&lt;/code&gt; and &lt;code&gt;/private/var/db/emondClients&lt;/code&gt;.&lt;br /&gt;['T1547.009']: Monitor for LNK files created with a Zone Identifier value greater than 1, which may indicate that the LNK file originated from outside of the network.(Citation: BSidesSLC 2020 - LNK Elastic) Analysis should attempt to relate shortcut creation events to other potentially suspicious events based on known adversary behavior such as process launches of unknown executables that make network connections.&lt;br /&gt;['T1547.006']: Monitor for newly constructed files that may modify the kernel to automatically execute programs on system boot.&lt;br /&gt;['T1187']: Monitor for newly constructed .LNK, .SCF, or any other files on systems and within virtual environments that contain resources that point to external network resources &lt;br /&gt;['T1546.008']: Monitor newly constructed files that may establish persistence and/or elevate privileges by executing malicious content triggered by accessibility features.&lt;br /&gt;['T1547.008']: Monitor newly constructed files that may modify or add LSASS drivers to obtain persistence on compromised systems.&lt;br /&gt;['T1496']: Monitor for common cryptomining files on local systems that may indicate compromise and resource usage&lt;br /&gt;['T1505.004']: Monitor for creation of files (especially DLLs on webservers) that could be abused as malicious ISAPI extensions/filters or IIS modules.&lt;br /&gt;['T1565']: Monitor for newly constructed files in order to manipulate external outcomes or hide activity&lt;br /&gt;['T1505']: Consider monitoring file locations associated with the installation of new application software components such as paths from which applications typically load such extensible components.&lt;br /&gt;['T1218.005']: Monitor use of HTA files. If they are not typically used within an environment then execution of them may be suspicious&lt;br /&gt;['T1566.001']: Monitor for newly constructed files from a spearphishing emails with a malicious attachment in an attempt to gain access to victim systems.&lt;br /&gt;['T1486']: Monitor for newly constructed files in user directories.&lt;br /&gt;['T1574.004']: Monitor for newly constructed dylibs&lt;br /&gt;['T1137.002']: Monitor for newly constructed files that may abuse the Microsoft Office "Office Test" Registry key to obtain persistence on a compromised system.&lt;br /&gt;['T1204.002']: Monitor for newly constructed files that are downloaded and executed on the user's computer. Endpoint sensing or network sensing can potentially detect malicious events once the file is opened (such as a Microsoft Word document or PDF reaching out to the internet or spawning powershell.exe).&lt;br /&gt;['T1543']: Monitor for newly constructed files that may create or modify system-level processes to repeatedly execute malicious payloads as part of persistence.&lt;br /&gt;['T1218.014']: Monitor for creation and use of .msc files. MMC may legitimately be used to call Microsoft-created .msc files, such as &lt;code&gt;services.msc&lt;/code&gt; or &lt;code&gt;eventvwr.msc&lt;/code&gt;. Invoking non-Microsoft .msc files may be an indicator of malicious activity.&lt;br /&gt;['T1037']: Monitor for newly constructed files that may use scripts automatically executed at boot or logon initialization to establish persistence.&lt;br /&gt;['T1574.001']: Monitor newly constructed .manifest and .local redirection files that do not correlate with software updates.&lt;br /&gt;['T1189']: Monitor for newly constructed files written to disk to gain access to a system through a user visiting a website over the normal course of browsing.&lt;br /&gt;['T1564.006']: Monitor for newly constructed files associated with running a virtual instance, such as binary files associated with common virtualization technologies (ex: VirtualBox, VMware, QEMU, Hyper-V).&lt;br /&gt;['T1080']: Monitor for newly constructed files from files that write or overwrite many files to a network shared directory may be suspicious.&lt;br /&gt;['T1574.002']: Monitor for newly constructed files in common folders on the computer system.&lt;br /&gt;['T1564.009']: Monitor for newly constructed files that may abuse resource forks to hide malicious code or executables to evade detection and bypass security applications.&lt;br /&gt;['T1176']: Monitor for newly constructed files and/or all installed extensions maintain a plist file in the /Library/Managed Preferences/username/ directory. Ensure all listed files are in alignment with approved extensions&lt;br /&gt;['T1553.005']: Monitor compressed/archive and image files downloaded from the Internet as the contents may not be tagged with the MOTW. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities.&lt;br /&gt;['T1570']: Monitor newly constructed files to/from a lateral tool transfer &lt;br /&gt;['T1564']: Monitor for newly constructed files that may attempt to hide artifacts associated with their behaviors to evade detection.&lt;br /&gt;['T1546.013']: Locations where &lt;code&gt;profile.ps1&lt;/code&gt; can be stored should be monitored for new profiles. (Citation: Malware Archaeology PowerShell Cheat Sheet) Example profile locations include:
* &lt;code&gt;$PsHome\Profile.ps1&lt;/code&gt;
* &lt;code&gt;$PsHome\Microsoft.{HostProgram}_profile.ps1&lt;/code&gt;
* &lt;code&gt;$Home\My Documents\PowerShell\Profile.ps1&lt;/code&gt;
* &lt;code&gt;$Home\My Documents\PowerShell\Microsoft.{HostProgram}_profile.ps1&lt;/code&gt;&lt;br /&gt;['T1027.006']: Monitor for newly constructed files via JavaScript, developing rules for the different variants, with a combination of different encoding and/or encryption schemes, may be very challenging. Consider monitoring files downloaded from the Internet, possibly by HTML Smuggling, for suspicious activities. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities.&lt;br /&gt;['T1554']: Monitor for newly constructed files that may modify client software binaries to establish persistent access to systems.&lt;br /&gt;['T1091']: Monitor for newly constructed files on removable media&lt;br /&gt;['T1137.006']: Monitor for newly constructed files that may abuse Microsoft Office add-ins to obtain persistence on a compromised system.&lt;br /&gt;['T1564']: Monitor for contextual data about a file, which may include information such as name, the content (ex: signature, headers, or data/media), user/ower, permissions that may attempt to hide artifacts associated with their behaviors to evade detection.&lt;br /&gt;['T1036.005']: Collect file hashes; file names that do not match their expected hash are suspect. Perform file monitoring; files with known names but in unusual locations are suspect. Likewise, files that are modified outside of an update or patch are suspect.&lt;br /&gt;['T1036.002']: Monitor for common formats of RTLO characters within filenames such as \u202E, [U+202E], and %E2%80%AE. Defenders should also check their analysis tools to ensure they do not interpret the RTLO character and instead print the true name of the file containing it.&lt;br /&gt;['T1070']: Monitor for contextual file data that may show signs of deletion or alter generated artifacts on a host system, including logs or captured files such as quarantined malware.&lt;br /&gt;['T1553']: Collect and analyze signing certificate metadata on software that executes within the environment to look for unusual certificate characteristics and outliers.&lt;br /&gt;['T1055.013']: Scan file objects reported during the PsSetCreateProcessNotifyRoutine, (Citation: Microsoft PsSetCreateProcessNotifyRoutine routine) which triggers a callback whenever a process is created or deleted, specifically looking for file objects with enabled write access. (Citation: BlackHat Process Doppelganging Dec 2017) Also consider comparing file objects loaded in memory to the corresponding file on disk. (Citation: hasherezade Process Doppelganging Dec 2017)&lt;br /&gt;['T1546.006']: Changes to binaries that do not line up with application updates or patches are also extremely suspicious.&lt;br /&gt;['T1027.003']: Detection of steganography is difficult unless artifacts are left behind by the obfuscation process that are detectable with a known signature. Look for strings or other signatures left in system artifacts related to decoding steganography.&lt;br /&gt;['T1195.002']: Use verification of distributed binaries through hash checking or other integrity checking mechanisms. Scan downloads for malicious signatures and attempt to test software and updates prior to deployment while taking note of potential suspicious activity.&lt;br /&gt;['T1222.002']: Monitor and investigate attempts to modify ACLs and file/directory ownership. Consider enabling file/directory permission change auditing on folders containing key binary/configuration files.&lt;br /&gt;['T1027.001']: Depending on the method used to pad files, a file-based signature may be capable of detecting padding using a scanning or on-access based tool. When executed, the resulting process from padded files may also exhibit other behavior characteristics of being used to conduct an intrusion such as system and network information Discovery or Lateral Movement, which could be used as event indicators that point to the source file.&lt;br /&gt;['T1546']: Monitor for contextual data about a file, which may include information such as name, the content (ex: signature, headers, or data/media), user/ower, permissions, etc.&lt;br /&gt;['T1564.001']: Monitor for contextual data about a file, which may include information such as name, the content (ex: signature, headers, or data/media), user/ower, permissions may set files and directories to be hidden to evade detection mechanisms.&lt;br /&gt;['T1564.009']: Identify files with the &lt;code&gt;com.apple.ResourceFork&lt;/code&gt; extended attribute and large data amounts stored in resource forks.&lt;br /&gt;['T1070.006']: Monitor for file modifications that collects information on file handle opens and can compare timestamp values&lt;br /&gt;['T1565.003']: Monitor for contextual data about a file, which may include information such as name, the content (ex: signature, headers, or data/media), user/ower, permissions, etc that would aid in the manipulation of data to hide activity&lt;br /&gt;['T1564.007']: If the document is opened with a Graphical User Interface (GUI) the malicious p-code is decompiled and may be viewed. However, if the &lt;code&gt;PROJECT&lt;/code&gt; stream, which specifies the project properties, is modified in a specific way the decompiled VBA code will not be displayed. For example, adding a module name that is undefined to the &lt;code&gt;PROJECT&lt;/code&gt; stream will inhibit attempts of reading the VBA source code through the GUI.(Citation: FireEye VBA stomp Feb 2020)&lt;br /&gt;['T1553.005']: Monitor files (especially those downloaded from untrusted locations) for MOTW attributes. Also consider inspecting and scanning file formats commonly abused to bypass MOTW (ex: .arj, .gzip, .iso, .vhd).&lt;br /&gt;['T1218.011']: Analyze contextual data about executed DLL files, which may include information such as name, the content (ex: signature, headers, or data/media), age, user/ower, permissions, etc.&lt;br /&gt;['T1553.001']: Review &lt;code&gt;false&lt;/code&gt; values under the &lt;code&gt;LSFileQuarantineEnabled&lt;/code&gt; entry in an application's &lt;code&gt;Info.plist&lt;/code&gt; file (required by every application). &lt;code&gt;false&lt;/code&gt; under &lt;code&gt;LSFileQuarantineEnabled&lt;/code&gt; indicates that an application does not use the quarantine flag. Unsandboxed applications with an unspecified &lt;code&gt;LSFileQuarantineEnabled&lt;/code&gt; entry will default to not setting the quarantine flag.

QuarantineEvents is a SQLite database containing a list of all files assigned the &lt;code&gt;com.apple.quarantine&lt;c/ode&gt; attribute, located at &lt;code&gt;~/Library/Preferences/com.apple.LaunchServices.QuarantineEventsV2&lt;/code&gt;. Each event contains the corresponding UUID, timestamp, application, Gatekeeper score, and decision if it was allowed. (Citation: TheEclecticLightCompany Quarantine and the flag)&lt;br /&gt;['T1548']: Monitor the file system for files that have the setuid or setgid bits set. On Linux, auditd can alert every time a user's actual ID and effective ID are different (this is what happens when you sudo).&lt;br /&gt;['T1036']: Collect file hashes; file names that do not match their expected hash are suspect. Perform file monitoring; files with known names but in unusual locations are suspect. Look for indications of common characters that may indicate an attempt to trick users into misidentifying the file type, such as a space as the last character of a file name or the right-to-left override characters"\u202E", "[U+202E]", and "%E2%80%AE".&lt;br /&gt;['T1036.006']: Monitor for spaces at the end of file names, that can easily be checked with file monitoring. From the user's perspective though, this is very hard to notice from within the Finder.app or on the command-line in Terminal.app. Processes executed from binaries containing non-standard extensions in the filename are suspicious.&lt;br /&gt;['T1564.004']: Monitor for contextual data about a file, which may include information such as name, the content (ex: signature, headers, or data/media), user/ower, permissions, may use NTFS file attributes to hide their malicious data in order to evade detection. Forensic techniques exist to identify information stored in NTFS EA. (Citation: Journey into IR ZeroAccess NTFS EA)&lt;br /&gt;['T1027.002']: Use file scanning to look for known software packers or artifacts of packing techniques. Packing is not a definitive indicator of malicious activity, because legitimate software may use packing techniques to reduce binary size or to protect proprietary code.&lt;br /&gt;['T1222']: Monitor and investigate attempts to modify ACLs and file/directory ownership.&lt;br /&gt;['T1548.001']: Monitor the file system for files that have the setuid or setgid bits set.&lt;br /&gt;['T1036.001']: Collect and analyze signing certificate metadata and check signature validity on software that executes within the environment, look for invalid signatures as well as unusual certificate characteristics and outliers.&lt;br /&gt;['T1554']: Collect and analyze signing certificate metadata and check signature validity on software that executes within the environment&lt;br /&gt;['T1036.003']: Collecting and comparing disk and resource filenames for binaries by looking to see if the InternalName, OriginalFilename, and/or ProductName match what is expected could provide useful leads, but may not always be indicative of malicious activity.&lt;br /&gt;['T1222.001']: Consider enabling file/directory permission change auditing on folders containing key binary/configuration files. For example, Windows Security Log events (Event ID 4670) are created when DACLs are modified.&lt;br /&gt;['T1570']: Monitor for alike file hashes or characteristics (ex: filename) that are created on multiple hosts.&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Microsoft File Mgmt" url="https://docs.microsoft.com/en-us/windows/win32/fileio/file-management"/>
            <reference name="Mitre ATT&amp;CK Data Source DS0022" url="https://attack.mitre.org/data-sources/DS0022"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:02.324">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-DS0028" name="Logon Session" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>Logon occurring on a system or resource (local, domain, or cloud) to which a user/device is gaining access after successful authentication and authorizaton(Citation: Microsoft Audit Logon Events)&lt;br /&gt;&lt;p&gt;Detailed detections per technique:&lt;/p&gt;&lt;br /&gt;['T1114']: Monitor for unusual login activity from unknown or abnormal locations, especially for privileged accounts (ex: Exchange administrator account). &lt;br /&gt;['T1213']: Monitor for newly constructed logon behavior within Microsoft's SharePoint can be configured to report access to certain pages and documents. (Citation: Microsoft SharePoint Logging) Sharepoint audit logging can also be configured to report when a user shares a resource. (Citation: Sharepoint Sharing Events)The user access logging within Atlassian's Confluence can also be configured to report access to certain pages and documents through AccessLogFilter. (Citation: Atlassian Confluence Logging) Additional log storage and analysis infrastructure will likely be required for more robust detection capabilities.&lt;br /&gt;['T1021.004']: Monitor for user accounts logged into systems that may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to log into remote machines using Secure Shell (SSH). For example, on Linux systems SSH logon activity can be found in the logs located in &lt;code&gt;/var/log/auth.log&lt;/code&gt; or &lt;code&gt;/var/log/secure&lt;/code&gt; depending on the distro you are using.&lt;br /&gt;['T1606.002']: Monitor for logins using SAML tokens which do not have corresponding 4769 and 1200 events in the domain.(Citation: Sygnia Golden SAML) These logins may occur on any on-premises resources as well as from any cloud environment that trusts the certificate.(Citation: Microsoft SolarWinds Customer Guidance)&lt;br /&gt;['T1606.001']: Monitor for anomalous authentication activity, such as logons or other user session activity associated with unknown accounts. Monitor for unexpected and abnormal access to resources, including access of websites and cloud-based applications by the same user in different locations or by different systems that do not match expected configurations.&lt;br /&gt;['T1078.002']: Monitor for suspicious account behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. &lt;br /&gt;['T1556']: Monitor for newly constructed logon behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times (ex: when the user is not present) or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access). Configure robust, consistent account activity audit policies across the enterprise and with externally accessible services.(Citation: TechNet Audit Policy) &lt;br /&gt;['T1550']: Look for suspicious account behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account.&lt;br /&gt;['T1199']: Monitor for newly constructed logon behavior that may breach or otherwise leverage organizations who have access to intended victims.&lt;br /&gt;['T1538']: Monitor for newly constructed logon behavior across cloud service management consoles.&lt;br /&gt;['T1563.002']: Use of RDP may be legitimate, depending on the network environment and how it is used. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior with RDP.&lt;br /&gt;['T1550.002']: Monitor newly created logons and credentials used in events and review for discrepancies. Unusual remote logins that correlate with other suspicious activity (such as writing and executing binaries) may indicate malicious activity.&lt;br /&gt;['T1078']: Monitor for newly constructed logon behavior that may obtain and abuse credentials of existing accounts as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access).&lt;br /&gt;['T1021.001']: Monitor for user accounts logged into systems associated with RDP (ex: Windows EID 4624 Logon Type 10). Other factors, such as access patterns (ex: multiple systems over a relatively short period of time) and activity that occurs after a remote login, may indicate suspicious or malicious behavior with RDP.&lt;br /&gt;['T1213.002']: Monitor for newly constructed logon behavior across Microsoft's SharePoint which can be configured to report access to certain pages and documents. (Citation: Microsoft SharePoint Logging) As information repositories generally have a considerably large user base, detection of malicious use can be non-trivial.&lt;br /&gt;['T1021.002']: Monitor for logon behavior (ex: EID 4624 Logon Type 3) using [Valid Accounts](https://attack.mitre.org/techniques/T1078) to interact with a remote network share using Server Message Block (SMB). The adversary may then perform actions as the logged-on user. Ensure that proper logging of accounts used to log into systems is turned on and centrally collected. Windows logging is able to collect success/failure for accounts that may be used to move laterally and can be collected using tools such as Windows Event Forwarding. (Citation: Lateral Movement Payne)(Citation: Windows Event Forwarding Payne)&lt;br /&gt;['T1556.001']: Monitor for newly constructed logon behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times (ex: when the user is not present) or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access). Configure robust, consistent account activity audit policies across the enterprise and with externally accessible services.(Citation: TechNet Audit Policy)&lt;br /&gt;['T1078.001']: Monitor for newly constructed logon behavior across default accounts that have been activated or logged into. These audits should also include checks on any appliances and applications for default credentials or SSH keys, and if any are discovered, they should be updated immediately.&lt;br /&gt;['T1021.006']: Monitor for user accounts logging into the system via [Valid Accounts](https://attack.mitre.org/techniques/T1078) to interact with remote systems using Windows Remote Management (WinRM). The adversary may then perform actions as the logged-on user. &lt;br /&gt;['T1563']: Monitor for user accounts logged into systems they would not normally access or access patterns to multiple systems over a relatively short period of time.&lt;br /&gt;['T1213.001']: Monitor for newly constructed logon behavior across Atlassian's Confluence which can be configured to report access to certain pages and documents through AccessLogFilter. (Citation: Atlassian Confluence Logging) Additional log storage and analysis infrastructure will likely be required for more robust detection capabilities.&lt;br /&gt;['T1021.005']: Monitor for user accounts logged into systems that may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to remotely control machines using Virtual Network Computing (VNC). For example, on macOS systems &lt;code&gt;log show --predicate 'process = "screensharingd" and eventMessage contains "Authentication:"'&lt;/code&gt; can be used to review incoming VNC connection attempts for suspicious activity.(Citation: Apple Unified Log Analysis Remote Login and Screen Sharing) &lt;br /&gt;['T1563.001']: Monitor for user accounts logged into systems they would not normally access or access patterns to multiple systems over a relatively short period of time. Also monitor user SSH-agent socket files being used by different users.&lt;br /&gt;['T1550.003']: Monitor for newly constructed logon behavior that may "pass the ticket" using stolen Kerberos tickets to move laterally within an environment, bypassing normal system access controls.&lt;br /&gt;['T1114.002']: Monitor for unusual login activity from unknown or abnormal locations, especially for privileged accounts (ex: Exchange administrator account).&lt;br /&gt;['T1213.003']: Monitor for newly constructed logon behavior across code repositories (e.g. Github) which can be configured to report access to certain pages and documents.&lt;br /&gt;['T1078.004']: Monitor for suspicious account behavior across cloud services that share account. &lt;br /&gt;['T1606']: Monitor for anomalous authentication activity, such as logons or other user session activity associated with unknown accounts and/or using SAML tokens which do not have corresponding 4769 and 1200 events in the domain.(Citation: Sygnia Golden SAML). Monitor for unexpected and abnormal access to resources, including access of websites and cloud-based applications by the same user in different locations or by different systems that do not match expected configurations. These logins may occur on any on-premises resources as well as from any cloud environment that trusts the credentials.(Citation: Microsoft SolarWinds Customer Guidance)&lt;br /&gt;['T1185']: Authentication logs can be used to audit logins to specific web applications, but determining malicious logins versus benign logins may be difficult if activity matches typical user behavior.&lt;br /&gt;['T1021']: Monitor for user accounts logged into systems they would not normally access or abnormal access patterns, such as multiple systems over a relatively short period of time. Correlate use of login activity related to remote services with unusual behavior or other malicious or suspicious activity. Adversaries will likely need to learn about an environment and the relationships between systems through Discovery techniques prior to attempting Lateral Movement. For example, in macOS you can review logs for "screensharingd" and "Authentication" event messages. (Citation: Lockboxx ARD 2019)(Citation: Apple Unified Log Analysis Remote Login and Screen Sharing)&lt;br /&gt;['T1556.003']: Monitor for newly constructed logon behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times (ex: when the user is not present) or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access).&lt;br /&gt;['T1621']: Monitor 2FA/MFA application logs for suspicious events such as rapid login attempts with valid credentials.&lt;br /&gt;['T1078.003']: Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access).&lt;br /&gt;['T1621']: Monitor 2FA/MFA application logs for suspicious events such as unusual login attempt source location, mismatch in location of login attempt and smart device approving 2FA/MFA request prompts.&lt;br /&gt;['T1558.001']: Monitor for anomalous Kerberos activity, such as malformed or blank fields in Windows logon/logoff events (Event ID 4624, 4634, 4672). Correlate other security systems with login information (e.g., a user has the KRBTGT account password hash and forges Kerberos ticket-granting tickets). &lt;br /&gt;['T1558']: Enable Audit Kerberos Service Ticket Operations to log Kerberos TGS service ticket requests. Particularly investigate irregular patterns of activity (ex: accounts making numerous requests, Event ID 4769, within a small time frame, especially if they also request RC4 encryption [Type 0x17]).(Citation: Microsoft Detecting Kerberoasting Feb 2018) (Citation: AdSecurity Cracking Kerberos Dec 2015)&lt;br /&gt;['T1606.002']: Consider modifying SAML responses to include custom elements for each service provider. Monitor these custom elements in service provider access logs to detect any anomalous requests.(Citation: Sygnia Golden SAML)&lt;br /&gt;['T1558.002']: Monitor for anomalous Kerberos activity, such as malformed or blank fields in Windows logon/logoff events (Event ID 4624, 4634, 4672).&lt;br /&gt;['T1133']: Follow best practices for detecting adversary use of Valid Accounts for authenticating to remote services. Collect authentication logs and analyze for unusual access patterns, windows of activity, and access outside of normal business hours.&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Microsoft Audit Logon Events" url="https://docs.microsoft.com/en-us/windows/security/threat-protection/auditing/basic-audit-logon-events"/>
            <reference name="Mitre ATT&amp;CK Data Source DS0028" url="https://attack.mitre.org/datasources/DS0028"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:02.340">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-M1032" name="Multi-factor Authentication" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>Use two or more pieces of evidence to authenticate to a system; such as username and password in addition to a token from a physical smart card or token generator.&lt;br /&gt;&lt;p&gt;Detailed mitigations per technique:&lt;/p&gt;&lt;br /&gt;['T1098.001']: Use multi-factor authentication for user and privileged accounts. Consider enforcing multi-factor authentication for the &lt;code&gt;CreateKeyPair&lt;/code&gt; and &lt;code&gt;ImportKeyPair&lt;/code&gt; API calls through IAM policies.(Citation: Expel IO Evil in AWS)&lt;br /&gt;['T1040']: Use multi-factor authentication wherever possible.&lt;br /&gt;['T1136.001', 'T1136.002', 'T1136.003', 'T1098', 'T1098.003', 'T1136', 'T1098.002']: Use multi-factor authentication for user and privileged accounts.&lt;br /&gt;['T1556.003']: Integrating multi-factor authentication (MFA) as part of organizational policy can greatly reduce the risk of an adversary gaining control of valid credentials that may be used for additional tactics such as initial access, lateral movement, and collecting information.&lt;br /&gt;['T1556', 'T1556.001']: Integrating multi-factor authentication (MFA) as part of organizational policy can greatly reduce the risk of an adversary gaining control of valid credentials that may be used for additional tactics such as initial access, lateral movement, and collecting information. MFA can also be used to restrict access to cloud resources and APIs. &lt;br /&gt;['T1599', 'T1601', 'T1601.002', 'T1601.001']: Use multi-factor authentication for user and privileged accounts. Most embedded network devices support TACACS+ and/or RADIUS.  Follow vendor prescribed best practices for hardening access control.(Citation: Cisco IOS Software Integrity Assurance - TACACS)&lt;br /&gt;['T1114', 'T1114.002']: Use of multi-factor authentication for public-facing webmail servers is a recommended best practice to minimize the usefulness of usernames and passwords to adversaries.&lt;br /&gt;['T1621']: Implement more secure 2FA/MFA mechanisms in replacement of simple push or one-click 2FA/MFA options. For example, having users enter a one-time code provided by the login screen into the 2FA/MFA application or utilizing other out-of-band 2FA/MFA mechanisms (such as rotating code-based hardware tokens providing rotating codes that need an accompanying user pin) may be more secure. Furthermore, change default configurations and implement limits upon the maximum number of 2FA/MFA request prompts that can be sent to users in period of time.(Citation: MFA Fatigue Attacks - PortSwigger)&lt;br /&gt;['T1076']: Use multi-factor authentication for remote logins. (Citation: Berkley Secure)&lt;br /&gt;['T1078.002', 'T1078']: Integrating multi-factor authentication (MFA) as part of organizational policy can greatly reduce the risk of an adversary gaining control of valid credentials that may be used for additional tactics such as initial access, lateral movement, and collecting information. MFA can also be used to restrict access to cloud resources and APIs.&lt;br /&gt;['T1098.005']: Require multi-factor authentication to register devices in Azure AD.(Citation: Microsoft - Device Registration) Configure multi-factor authentication systems to disallow enrolling new devices for inactive accounts.(Citation: CISA MFA PrintNightmare)&lt;br /&gt;['T1110.003', 'T1110.001', 'T1110', 'T1110.004', 'T1110.002']: Use multi-factor authentication. Where possible, also enable multi-factor authentication on externally facing services.&lt;br /&gt;['T1078.004']: Use multi-factor authentication for cloud accounts, especially privileged accounts. This can be implemented in a variety of forms (e.g. hardware, virtual, SMS), and can also be audited using administrative reporting features.(Citation: AWS - IAM Console Best Practices)&lt;br /&gt;['T1021.004']: Require multi-factor authentication for SSH connections wherever possible, such as password protected SSH keys.&lt;br /&gt;['T1539']: A physical second factor key that uses the target login domain as part of the negotiation protocol will prevent session cookie theft through proxy methods.(Citation: Evilginx 2 July 2018)&lt;br /&gt;['T1599.001', 'T1556.004']: Use multi-factor authentication for user and privileged accounts. Most embedded network devices support TACACS+ and/or RADIUS.  Follow vendor prescribed best practices for hardening access control. (Citation: Cisco IOS Software Integrity Assurance - TACACS)&lt;br /&gt;['T1021.001']: Use multi-factor authentication for remote logins.(Citation: Berkley Secure)&lt;br /&gt;['T1017']: Use multi-factor authentication for accounts used with application deployment software.&lt;br /&gt;['T1072']: Ensure proper system and access isolation for critical network systems through use of multi-factor authentication.&lt;br /&gt;['T1021', 'T1021']: Use multi-factor authentication on remote service logons where possible.&lt;br /&gt;['T1133']: Use strong two-factor or multi-factor authentication for remote service accounts to mitigate an adversary's ability to leverage stolen credentials, but be aware of [Multi-Factor Authentication Interception](https://attack.mitre.org/techniques/T1111) techniques for some two-factor authentication implementations.&lt;br /&gt;['T1530']: Consider using multi-factor authentication to restrict access to resources and cloud storage APIs.(Citation: Amazon S3 Security, 2019)&lt;br /&gt;['T1213.003']: Use multi-factor authentication for logons to code repositories.&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Mitre ATT&amp;CK Mitigation M1032" url="https://attack.mitre.org/mitigations/M1032"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:02.388">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-DS0029" name="Network Traffic" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>Data transmitted across a network (ex: Web, DNS, Mail, File, etc.), that is either summarized (ex: Netflow) and/or captured as raw data in an analyzable format (ex: PCAP)&lt;br /&gt;&lt;p&gt;Detailed detections per technique:&lt;/p&gt;&lt;br /&gt;['T1499.003']: Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.&lt;br /&gt;['T1011.001']: Monitor network data for uncommon data flows., such as the usage of abnormal/unexpected protocols.&lt;br /&gt;['T1071']: Monitor and analyze traffic flows that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, or gratuitous or anomalous traffic patterns). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).&lt;br /&gt;['T1020']: Monitor and analyze network flows associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, or gratuitous or anomalous traffic patterns). Consider analyzing newly constructed network connections that are sent or received by untrusted hosts, unexpected hardware devices, or other uncommon data flows.&lt;br /&gt;['T1571']: Monitor network data flows for unexpected patterns and metadata that may be indicative of a mismatch between protocol and utilized port.&lt;br /&gt;['T1187']: Monitor for SMB traffic on TCP ports 139, 445 and UDP port 137 and WebDAV traffic attempting to exit the network to unknown external systems.If attempts are detected, then investigate endpoint data sources to find the root cause.&lt;br /&gt;['T1008']: Monitor network data for uncommon data flows, such as unexpected surges or other abnormal inbound/outbound patterns.&lt;br /&gt;['T1029']: Monitor for network traffic originating from unknown/unexpected hardware devices. Local network traffic metadata (such as source MAC addressing) as well as usage of network management protocols such as DHCP may be helpful in identifying hardware.&lt;br /&gt;['T1021.001']: Monitor network traffic for uncommon data flows that may use https://attack.mitre.org/techniques/T1078 to log into a computer using the Remote Desktop Protocol (RDP).&lt;br /&gt;['T1570']: Monitor for network traffic originating from unknown/unexpected hardware devices. Local network traffic metadata (such as source MAC addressing) as well as usage of network management protocols such as DHCP may be helpful in identifying hardware. &lt;br /&gt;['T1021.002']: Monitor network data for uncommon SMB data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.&lt;br /&gt;['T1105']: Monitor network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.&lt;br /&gt;['T1071.001']: Monitor for web traffic to/from known-bad or suspicious domains and analyze traffic flows that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, or gratuitous or anomalous traffic patterns). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).&lt;br /&gt;['T1205.001']: Monitor and analyze network flows associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, or gratuitous or anomalous traffic patterns). Consider analyzing newly constructed network connections that are sent or received by untrusted hosts, unexpcted hardware devices, or other uncommon data flows.&lt;br /&gt;['T1071.004']: Monitor for DNS traffic to/from known-bad or suspicious domains and analyze traffic flows that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, or gratuitous or anomalous traffic patterns). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).&lt;br /&gt;['T1568.001']: In general, detecting usage of fast flux DNS is difficult due to web traffic load balancing that services client requests quickly. In single flux cases only IP addresses change for static domain names. In double flux cases, nothing is static. Defenders such as domain registrars and service providers are likely in the best position for detection.&lt;br /&gt;['T1565']: Monitor for network traffic originating from unknown/unexpected hardware devices.&lt;br /&gt;['T1568.002']: Detecting dynamically generated domains can be challenging due to the number of different DGA algorithms, constantly evolving malware families, and the increasing complexity of the algorithms. There is a myriad of approaches for detecting a pseudo-randomly generated domain name, including using frequency analysis, Markov chains, entropy, proportion of dictionary words, ratio of vowels to other characters, and more. (Citation: Data Driven Security DGA) CDN domains may trigger these detections due to the format of their domain names. In addition to detecting a DGA domain based on the name, another more general approach for detecting a suspicious domain is to check for recently registered names or for rarely visited domains.
Machine learning approaches to detecting DGA domains have been developed and have seen success in applications. One approach is to use N-Gram methods to determine a randomness score for strings used in the domain name. If the randomness score is high, and the domains are not whitelisted (CDN, etc), then it may be determined if a domain is related to a legitimate host or DGA. (Citation: Pace University Detecting DGA May 2017) Another approach is to use deep learning to classify domains as DGA-generated(Citation: Elastic Predicting DGA)]&lt;br /&gt;['T1612']: Monitor for established network communications with anomalous IPs that have never been seen before in the environment that may indicate the download of malicious code.&lt;br /&gt;['T1557.003']: Monitor network traffic for anomalies associated with known AiTM behavior. Consider monitoring for modifications to system configuration files involved in shaping network traffic flow.&lt;br /&gt;['T1021']: Monitor network data for uncommon data flows that may be related to abuse of https://attack.mitre.org/techniques/T1078 to log into a service specifically designed to accept remote connections, such as RDP, telnet, SSH, and VNC.&lt;br /&gt;['T1602.001']: Monitor for newly constructed network connections that are sent or received by untrusted hosts or uncommon data flows. Consider analyzing packet contents to detect application layer protocols, leveraging SSL/TLS inspection for encrypted traffic, that do not follow the expected protocol standards and traffic flows(e.g. snmp traffic originating from unauthorized or untrusted hosts, signature detection for strings mapped to device configuration(s), and anomolies in snmp request(s))&lt;br /&gt;['T1218.003']: Monitor for newly constructed network connections that are sent or received by untrusted hosts, such as Sysmon Event 3 (Network connection) where Image contains CMSTP.exe and DestinationIP is external.&lt;br /&gt;['T1218']: Monitor for newly constructed network connections that are sent or received by untrusted hosts. &lt;br /&gt;['T1020.001']: Monitor for newly constructed network connections that are sent or received by abnormal or untrusted hosts. &lt;br /&gt;['T1020']: Monitor for newly constructed network connections associated with processes performing collection activity, especially those involving abnormal/untrusted hosts. &lt;br /&gt;['T1542.005']: Monitor for newly constructed network device configuration and system image against a known-good version to discover unauthorized changes to system boot, startup configuration, or the running OS. (Citation: Cisco IOS Software Integrity Assurance - Secure Boot) (Citation: Cisco IOS Software Integrity Assurance - Image File Verification) The same process can be accomplished through a comparison of the run-time memory, though this is non-trivial and may require assistance from the vendor.&lt;br /&gt;['T1021.004']: Monitor for newly constructed network connections (typically port 22) that may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to log into remote machines using Secure Shell (SSH). Use of SSH may be legitimate depending on the environment and how it's used. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior with SSH.&lt;br /&gt;['T1602.002']: Monitor for newly constructed network connections that are sent or received by untrusted hosts or uncommon data flows. Consider analyzing packet contents to detect application layer protocols, leveraging SSL/TLS inspection for encrypted traffic, that do not follow the expected protocol standards and traffic flows (e.g. unauthorized, gratuitous, or anomalous traffic patterns attempting to access network configuration content)&lt;br /&gt;['T1030']: Monitor for newly constructed network connections that are sent or received by untrusted hosts or uncommon data flows (e.g. unusual network communications or suspicious communications sending fixed size data packets at regular intervals as well as unusually long connection patterns). Consider analyzing packet contents to detect application layer protocols, leveraging SSL/TLS inspection for encrypted traffic, that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, protocol port mismatch, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments (e.g. monitor anomalies in use of files that do not normally initiate network connections or unusual connections initiated&lt;br /&gt;['T1047']: Monitor network traffic for WMI connections; the use of WMI in environments that do not typically use WMI may be suspect.&lt;br /&gt;['T1197']: Monitor for newly constructed network activity generated by BITS. BITS jobs use HTTP(S) and SMB for remote connections and are tethered to the creating user and will only function when that user is logged on (this rule applies even if a user attaches the job to a service account).&lt;br /&gt;['T1542']: Monitor for newly constructed network device configuration and system image against a known-good version to discover unauthorized changes to system boot, startup configuration, or the running OS. The same process can be accomplished through a comparison of the run-time memory, though this is non-trivial and may require assistance from the vendor.&lt;br /&gt;['T1021.001']: Monitor for newly constructed network connections (typically over port 3389) that may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to log into a computer using the Remote Desktop Protocol (RDP). The adversary may then perform actions as the logged-on user. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior with RDP.&lt;br /&gt;['T1008']: Monitor for newly constructed network connections that may use fallback or alternate communication channels if the primary channel is compromised or inaccessible in order to maintain reliable command and control and to avoid data transfer thresholds. Processes utilizing the network that do not normally have network communication or have never been seen before may be suspicious.&lt;br /&gt;['T1204']: Monitor for newly constructed web-based network connections that are sent to malicious or suspicious destinations (e.g. destinations attributed to phishing campaigns). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments (e.g. monitor anomalies in use of files that do not normally initiate network connections or unusual connections initiated by regsvr32.exe, rundll.exe, .SCF, HTA, MSI, DLLs, or msiexec.exe).&lt;br /&gt;['T1021']: Monitor for newly constructed network connections that may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to log into a service specifically designed to accept remote connections, such as RDP, telnet, SSH, and VNC. Monitor network connections involving common remote management protocols, such as ports tcp:3283 and tcp:5900, as well as ports tcp: 3389 and tcp:22 for remote login.&lt;br /&gt;['T1021.003']: Monitor for newly constructed network connections that may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to interact with remote machines using Distributed Component Object Model (DCOM). The adversary may then perform actions as the logged-on user. Monitor for any influxes or abnormal increases in DCOM related Distributed Computing Environment/Remote Procedure Call (DCE/RPC) traffic (typically over port 135).&lt;br /&gt;['T1021.006']: 
Monitor for newly constructed network connections using Windows Remote Management (WinRM), such as remote WMI connection attempts (typically over port 5985 when using HTTP and 5986 for HTTPS).&lt;br /&gt;['T1011.001']: Monitor for newly constructed network connections that may attempt to exfiltrate data over Bluetooth rather than the command and control channel. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.&lt;br /&gt;['T1105']: Monitor for newly constructed network connections that are sent or received by untrusted hosts or creating files on-system may be suspicious. Use of utilities, such as FTP, that does not normally occur may also be suspicious.&lt;br /&gt;['T1602']: Monitor for newly constructed network connections that are sent or received by untrusted hosts or uncommon data flows. Consider analyzing packet contents to detect application layer protocols, leveraging SSL/TLS inspection for encrypted traffic, that do not follow the expected protocol standards and traffic flows (e.g. unauthorized, gratuitous, or anomalous traffic patterns attempting to access configuration content)&lt;br /&gt;['T1021.002']: Monitor for newly constructed network connections (typically over ports 139 or 445), especially those that are sent or received by abnormal or untrusted hosts. Correlate these network connections with remote login events and associated SMB-related activity such as file transfers and remote process execution.&lt;br /&gt;['T1018']: Monitor for newly constructed network connections associated with pings/scans that may attempt to get a listing of other systems by IP address, hostname, or other logical identifier on a network that may be used for Lateral Movement from the current system.&lt;br /&gt;['T1011']: Monitor for newly constructed network connections that may attempt to exfiltrate data over a different network medium than the command and control channel. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.&lt;br /&gt;['T1021.005']: Monitor for newly constructed network connections that may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to remotely control machines using Virtual Network Computing (VNC). Use of VNC may be legitimate depending on the environment and how it's used. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior using VNC. &lt;br /&gt;['T1568.001']: Monitor for newly constructed network connections that may use Fast Flux DNS to hide a command and control channel behind an array of rapidly changing IP addresses linked to a single domain resolution.&lt;br /&gt;['T1176']: Monitor for newly constructed network connections that are sent or received by untrusted hosts.&lt;br /&gt;['T1003']: Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).&lt;br /&gt;['T1602']: Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g. unauthorized, gratuitous, or anomalous traffic patterns attempting to access configuration content)&lt;br /&gt;['T1071.003']: Monitor and analyze traffic patterns and packet inspection associated to protocol(s), leveraging SSL/TLS inspection for encrypted traffic, that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).&lt;br /&gt;['T1557']: Monitor network traffic for anomalies associated with known AiTM behavior.&lt;br /&gt;['T1491']: Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g. unauthorized, gratuitous, or anomalous traffic patterns attempting to access internal and external websites and services). Consider correlating with application monitoring for inidcation of unplanned service interrputions or unauthorized content changes.&lt;br /&gt;['T1589.002']: Monitor for suspicious network traffic that could be indicative of probing for email addresses and/or usernames, such as large/iterative quantities of authentication requests originating from a single source (especially if the source is known to be associated with an adversary/botnet). Analyzing web metadata may also reveal artifacts that can be attributed to potentially malicious activity, such as referer or user-agent string HTTP/S fields.&lt;br /&gt;['T1210']: Use deep packet inspection to look for artifacts of common exploit traffic, such as known payloads.&lt;br /&gt;['T1189']: Monitor for networks that solicits and obtains the configuration information of the queried device &lt;br /&gt;['T1566.001']: Monitor and analyze SSL/TLS traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)). Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.(Citation: Microsoft Anti Spoofing)(Citation: ACSC Email Spoofing)&lt;br /&gt;['T1070.005']: Monitoring for SMB traffic between systems may also be captured and decoded to look for related network share session and file transfer activity.&lt;br /&gt;['T1071.004']: Monitor and analyze traffic patterns and packet inspection associated to protocol(s), leveraging SSL/TLS inspection for DNSSEC traffic, that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).&lt;br /&gt;['T1565.002']: Monitor for networks that solicits and obtains the configuration information of the queried device. &lt;br /&gt;['T1105']: Monitor network traffic content for files and other potentially malicious content, especially data coming in from abnormal/unknown domain and IPs.&lt;br /&gt;['T1020']: Monitor network traffic content for evidence of data exfiltration, such as gratuitous or anomalous outbound traffic containing collected data. Consider correlation with process monitoring and command lines associated with collection and exfiltration.&lt;br /&gt;['T1589']: Monitor for suspicious network traffic that could be indicative of probing for user information, such as large/iterative quantities of authentication requests originating from a single source (especially if the source is known to be associated with an adversary/botnet). Analyzing web metadata may also reveal artifacts that can be attributed to potentially malicious activity, such as referer or user-agent string HTTP/S fields.&lt;br /&gt;['T1205']: Monitor and analyze network packet contents to detect application layer protocols, leveraging SSL/TLS inspection for encrypted traffic, that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, protocol port mismatch, anomalous syntax, or structure). Consider packet inspection for Wake-on-LAN magic packet consists of 6 bytes of &lt;code&gt;FF&lt;/code&gt; followed by sixteen repetitions of the target system's IEEE address. Seeing this string anywhere in a packet's payload may be indicative of a Wake-on-LAN attempt.(Citation: GitLab WakeOnLAN)&lt;br /&gt;['T1602.001']: Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flow (e.g. snmp traffic originating from unauthorized or untrusted hosts, signature detection for strings mapped to device configuration(s), and anomolies in snmp request(s))&lt;br /&gt;['T1557.002']: Monitor network traffic for unusual ARP traffic, gratuitous ARP replies may be suspicious. Consider collecting changes to ARP caches across endpoints for signs of ARP poisoning. For example, if multiple IP addresses map to a single MAC address, this could be an indicator that the ARP cache has been poisoned.&lt;br /&gt;['T1207']: Monitor and analyze network traffic associated with data replication (such as calls to DrsAddEntry, DrsReplicaAdd, and especially GetNCChanges) between DCs as well as to/from non DC hosts. (Citation: GitHub DCSYNCMonitor)(Citation: DCShadow Blog) DC replication will naturally take place every 15 minutes but can be triggered by an adversary or by legitimate urgent changes (ex: passwords).&lt;br /&gt;['T1190']: Use deep packet inspection to look for artifacts of common exploit traffic, such as SQL injection strings or known payloads.&lt;br /&gt;['T1001.002']: Monitor and analyze traffic patterns and packet inspection associated to protocol(s), leveraging SSL/TLS inspection for encrypted traffic, that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure).&lt;br /&gt;['T1612']: Monitor for network traffic associated with requests and/or downloads of container images, especially those that may be anomalous or known malicious.&lt;br /&gt;['T1602.002']: Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g. unauthorized, gratuitous, or anomalous traffic patterns attempting to access network configuration content)&lt;br /&gt;['T1204.001']: Monitor and analyze traffic patterns and packet inspection associated with web-based network connections that are sent to malicious or suspicious detinations (e.g. destinations attributed to phishing campaigns). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments (e.g. monitor anomalies in use of files that do not normally initiate network connections or unusual connections initiated by regsvr32.exe, rundll.exe, .SCF, HTA, MSI, DLLs, or msiexec.exe).&lt;br /&gt;['T1132.002']: Monitor for network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.&lt;br /&gt;['T1557.001']: Monitor for traffic on ports UDP 5355 and UDP 137 if LLMNR/NetBIOS is disabled by security policy.&lt;br /&gt;['T1595.003']: Monitor for suspicious network traffic that could be indicative of scanning, such as large quantities originating from a single source (especially if the source is known to be associated with an adversary/botnet).&lt;br /&gt;['T1557.003']: Monitor network traffic for suspicious/malicious behavior involving DHCP, such as changes in DNS and/or gateway parameters.&lt;br /&gt;['T1566.002']: Monitor and analyze SSL/TLS traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).&lt;br /&gt;['T1571']: Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used. https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf&lt;br /&gt;['T1566.003']: Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)). &lt;br /&gt;['T1187']: For internal traffic, monitor the workstation-to-workstation unusual (vs. baseline) SMB traffic. For many networks there should not be any, but it depends on how systems on the network are configured and where resources are located.&lt;br /&gt;['T1505']: Monitor and analyze traffic patterns and packet inspection associated to protocol(s), leveraging SSL/TLS inspection for encrypted traffic, that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)). (Citation: US-CERT Alert TA15-314A Web Shells)&lt;br /&gt;['T1570']: Monitor for unusual processes with internal network connections creating files on-system may be suspicious&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Mitre ATT&amp;CK Data Source DS0029" url="https://attack.mitre.org/datasources/DS0029"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:02.345">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-M1018" name="User Account Management" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>Manage the creation, modification, use, and permissions associated to user accounts.&lt;br /&gt;&lt;p&gt;Detailed mitigations per technique:&lt;/p&gt;&lt;br /&gt;['T1580']: Limit permissions to discover cloud infrastructure in accordance with least privilege. Organizations should limit the number of users within the organization with an IAM role that has administrative privileges, strive to reduce all permanent privileged role assignments, and conduct periodic entitlement reviews on IAM users, roles and policies.&lt;br /&gt;['T1159', 'T1543.001']: Restrict user's abilities to create Launch Agents with group policy.&lt;br /&gt;['T1543']: Limit privileges of user accounts and groups so that only authorized administrators can interact with system-level process changes and service configurations.&lt;br /&gt;['T1040']: In cloud environments, ensure that users are not granted permissions to create or modify traffic mirrors unless this is explicitly required.&lt;br /&gt;['T1578']: Limit permissions for creating, deleting, and otherwise altering compute components in accordance with least privilege. Organizations should limit the number of users within the organization with an IAM role that has administrative privileges, strive to reduce all permanent privileged role assignments, and conduct periodic entitlement reviews on IAM users, roles and policies.(Citation: Mandiant M-Trends 2020)&lt;br /&gt;['T1004', 'T1547.004']: Limit the privileges of user accounts so that only authorized administrators can perform Winlogon helper changes.&lt;br /&gt;['T1072']: Ensure that any accounts used by third-party providers to access these systems are traceable to the third-party and are not used throughout the network or used by other third-party providers in the same environment. Ensure there are regular reviews of accounts provisioned to these systems to verify continued business need, and ensure there is governance to trace de-provisioning of access that is no longer required. Ensure proper system and access isolation for critical network systems through use of account privilege separation.&lt;br /&gt;['T1574.010', 'T1574.005']: Limit privileges of user accounts and groups so that only authorized administrators can interact with service changes and service binary target path locations. Deny execution from user directories such as file download directories and temp directories where able.&lt;br /&gt;['T1098.004']: In cloud environments, ensure that only users who explicitly require the permissions to update instance metadata or configurations can do so.&lt;br /&gt;['T1619']: Restrict granting of permissions related to listing objects in cloud storage to necessary accounts.&lt;br /&gt;['T1053']: Limit privileges of user accounts and remediate Privilege Escalation vectors so only authorized administrators can create scheduled tasks on remote systems.&lt;br /&gt;['T1089', 'T1562.001']: Ensure proper user permissions are in place to prevent adversaries from disabling or interfering with security services.&lt;br /&gt;['T1530']: Configure user permissions groups and roles for access to cloud storage.(Citation: Microsoft Azure Storage Security, 2019) Implement strict Identity and Access Management (IAM) controls to prevent access to storage solutions except for the applications, users, and services that require access.(Citation: Amazon S3 Security, 2019) Ensure that temporary access tokens are issued rather than permanent credentials, especially when access is being granted to entities outside of the internal security boundary.(Citation: Amazon  AWS Temporary Security Credentials)&lt;br /&gt;['T1050']: Limit privileges of user accounts and remediate Privilege Escalation vectors so only  authorized administrators can create new services.&lt;br /&gt;['T1610']: Enforce the principle of least privilege by limiting container dashboard access to only the necessary users.&lt;br /&gt;['T1197']: 
Consider limiting access to the BITS interface to specific users or groups.(Citation: Symantec BITS May 2007)&lt;br /&gt;['T1537']: Limit user account and IAM policies to the least privileges required. Consider using temporary credentials for accounts that are only valid for a certain period of time to reduce the effectiveness of compromised accounts.&lt;br /&gt;['T1562.008']: Configure default account policy to enable logging. Manage policies to ensure only necessary users have permissions to make changes to logging policies.&lt;br /&gt;['T1546.003', 'T1084']: By default, only administrators are allowed to connect remotely using WMI; restrict other users that are allowed to connect, or disallow all users from connecting remotely to WMI.&lt;br /&gt;['T1547.009', 'T1023']: Limit permissions for who can create symbolic links in Windows to appropriate groups such as Administrators and necessary groups for virtualization. This can be done through GPO: Computer Configuration &gt; [Policies] &gt; Windows Settings &gt; Security Settings &gt; Local Policies &gt; User Rights Assignment: Create symbolic links. (Citation: UCF STIG Symbolic Links)&lt;br /&gt;['T1578.003']: Limit permissions for deleting new instances in accordance with least privilege. Organizations should limit the number of users within the organization with an IAM role that has administrative privileges, strive to reduce all permanent privileged role assignments, and conduct periodic entitlement reviews on IAM users, roles and policies.(Citation: Mandiant M-Trends 2020)&lt;br /&gt;['T1051']: Ensure that permissions of the Web server process are only what is required by not using built-in accounts; instead, create specific accounts to limit unnecessary access or permissions overlap across multiple systems. (Citation: acunetix Server Secuirty) (Citation: NIST Server Security July 2008)&lt;br /&gt;['T1134', 'T1134.001', 'T1134.003']: An adversary must already have administrator level access on the local system to make full use of this technique; be sure to restrict users and accounts to the least privileges they require.  &lt;br /&gt;['T1163']: Limit privileges of user accounts so only authorized users can edit the rc.common file.&lt;br /&gt;['T1054', 'T1562.006']: Ensure event tracers/forwarders (Citation: Microsoft ETW May 2018), firewall policies, and other associated mechanisms are secured with appropriate permissions and access controls and cannot be manipulated by user accounts.&lt;br /&gt;['T1165']: Appropriate permissions should be applied such that only specific users can edit the startup items so that they can be leveraged for privilege escalation.&lt;br /&gt;['T1543.004', 'T1160', 'T1053.004']: Limit privileges of user accounts and remediate Privilege Escalation vectors so only authorized administrators can create new Launch Daemons.&lt;br /&gt;['T1047']: By default, only administrators are allowed to connect remotely using WMI. Restrict other users who are allowed to connect, or disallow all users to connect remotely to WMI.&lt;br /&gt;['T1609']: Enforce authentication and role-based access control on the container service to restrict users to the least privileges required.(Citation: Kubernetes Hardening Guide)&lt;br /&gt;['T1550.003', 'T1097']: Do not allow a user to be a local administrator for multiple systems.&lt;br /&gt;['T1574']: Limit privileges of user accounts and groups so that only authorized administrators can interact with service changes and service binary target path locations. Deny execution from user directories such as file download directories and temp directories where able.

Ensure that proper permissions and directory access control are set to deny users the ability to write files to the top-level directory &lt;code&gt;C:&lt;/code&gt; and system directories, such as &lt;code&gt;C:\Windows\&lt;/code&gt;, to reduce places where malicious files could be placed for execution.&lt;br /&gt;['T1078']: Regularly audit user accounts for activity and deactivate or remove any that are no longer needed.&lt;br /&gt;['T1053.007']: Limit privileges of user accounts and remediate privilege escalation vectors so only authorized administrators can create container orchestration jobs.&lt;br /&gt;['T1484.001', 'T1484']: Consider implementing WMI and security filtering to further tailor which users and computers a GPO will apply to.(Citation: Wald0 Guide to GPOs)(Citation: Microsoft WMI Filters)(Citation: Microsoft GPO Security Filtering)&lt;br /&gt;['T1547.006']: Use MDM to disable user's ability to install or approve kernel extensions, and ensure all approved kernel extensions are in alignment with policies specified in &lt;code&gt;com.apple.syspolicy.kernel-extension-policy&lt;/code&gt;.(Citation: Apple TN2459 Kernel Extensions)(Citation: MDMProfileConfigMacOS)
&lt;br /&gt;['T1563.002', 'T1021.001', 'T1076', 'T1563']: Limit remote user permissions if remote access is necessary.&lt;br /&gt;['T1569', 'T1569.001']: Prevent users from installing their own launch agents or launch daemons.&lt;br /&gt;['T1501', 'T1543.002']: Limit user access to system utilities such as 'systemctl' to only users who have a legitimate need.&lt;br /&gt;['T1213.002', 'T1213', 'T1213.001']: Enforce the principle of least-privilege. Consider implementing access control mechanisms that include both authentication and authorization.&lt;br /&gt;['T1031', 'T1489']: Limit privileges of user accounts and groups so that only authorized administrators can interact with service changes and service configurations.&lt;br /&gt;['T1021']: Limit the accounts that may use remote services. Limit the permissions for accounts that are at higher risk of compromise; for example, configure SSH so users can only run specific programs.&lt;br /&gt;['T1550.002', 'T1075']: Do not allow a domain user to be in the local administrator group on multiple systems.&lt;br /&gt;['T1562']: Ensure proper user permissions are in place to prevent adversaries from disabling or interfering with security/logging services.&lt;br /&gt;['T1547.013']: Limit privileges of user accounts so only authorized privileged users can create and modify XDG autostart entries.&lt;br /&gt;['T1157']: Prevent users from being able to write files to the search paths for applications.&lt;br /&gt;['T1034']: Ensure that proper permissions and directory access control are set to deny users the ability to write files to the top-level directory &lt;code&gt;C:&lt;/code&gt; and system directories, such as &lt;code&gt;C:\Windows\&lt;/code&gt;, to reduce places where malicious files could be placed for execution.&lt;br /&gt;['T1578.001']: Limit permissions for creating snapshots or backups in accordance with least privilege. Organizations should limit the number of users within the organization with an IAM role that has administrative privileges, strive to reduce all permanent privileged role assignments, and conduct periodic entitlement reviews on IAM users, roles and policies.(Citation: Mandiant M-Trends 2020)&lt;br /&gt;['T1606.002', 'T1606']: Ensure that user accounts with administrative rights follow best practices, including use of privileged access workstations, Just in Time/Just Enough Administration (JIT/JEA), and strong authentication. Reduce the number of users that are members of highly privileged Directory Roles.(Citation: Microsoft SolarWinds Customer Guidance)&lt;br /&gt;['T1134.002']: An adversary must already have administrator level access on the local system to make full use of this technique; be sure to restrict users and accounts to the least privileges they require.&lt;br /&gt;['T1053.005']: Limit privileges of user accounts and remediate Privilege Escalation vectors so only authorized administrators can create scheduled tasks on remote systems. &lt;br /&gt;['T1566.002']: Azure AD Administrators apply limitations upon the ability for users to grant consent to unfamiliar or unverified third-party applications. &lt;br /&gt;['T1110.004', 'T1110']: Proactively reset accounts that are known to be part of breached credentials either immediately, or after detecting bruteforce attempts.&lt;br /&gt;['T1185']: Since browser pivoting requires a high integrity process to launch from, restricting user permissions and addressing Privilege Escalation and [Bypass User Account Control](https://attack.mitre.org/techniques/T1548/002) opportunities can limit the exposure to this technique.&lt;br /&gt;['T1044']: Limit privileges of user accounts and groups so that only authorized administrators can interact with service changes and service binary target path locations. Deny execution from user directories such as file download directories and temp directories where able. (Citation: Seclists Kanthak 7zip Installer)&lt;br /&gt;['T1021.004']: Limit which user accounts are allowed to login via SSH.&lt;br /&gt;['T1562.007']: Ensure least privilege principles are applied to Identity and Access Management (IAM) security policies.(Citation: Expel IO Evil in AWS)&lt;br /&gt;['T1168']: Limit privileges of user accounts and remediate Privilege Escalation vectors so only authorized users can create scheduled jobs.&lt;br /&gt;['T1538']: Enforce the principle of least-privilege by limiting dashboard visibility to only the resources required. This may limit the discovery value of the dashboard in the event of a compromised account.&lt;br /&gt;['T1550']: Enforce the principle of least-privilege. Do not allow a domain user to be in the local administrator group on multiple systems.&lt;br /&gt;['T1053.002']: Limit privileges of user accounts and remediate Privilege Escalation vectors so only authorized administrators can create scheduled tasks on remote systems. In Linux environments, users account-level access to &lt;code&gt;[at](https://attack.mitre.org/software/S0110)&lt;/code&gt; can be managed using &lt;code&gt;at.allow&lt;/code&gt; and &lt;code&gt;at.deny&lt;/code&gt; files. Users listed in the at.allow are enabled to schedule actions using at, whereas users listed in at.deny file disabled from the utility.&lt;br /&gt;['T1053.003']: &lt;code&gt;cron&lt;/code&gt; permissions are controlled by &lt;code&gt;/etc/cron.allow and /etc/cron.deny&lt;/code&gt;. If there is a &lt;code&gt;cron.allow&lt;/code&gt; file, then the user or users that need to use &lt;code&gt;cron&lt;/code&gt; will need to be listed in the file. &lt;code&gt;cron.deny&lt;/code&gt; is used to explicitly disallow users from using cron. If neither files exist, then only the super user is allowed to run cron.&lt;br /&gt;['T1505.003']: Enforce the principle of least privilege by limiting privileges of user accounts so only authorized accounts can modify the web directory.(Citation: NSA and ASD Detect and Prevent Web Shells 2020)&lt;br /&gt;['T1552.007']: Enforce authentication and role-based access control on the container API to restrict users to the least privileges required.(Citation: Kubernetes Hardening Guide)&lt;br /&gt;['T1562.004']: Ensure proper user permissions are in place to prevent adversaries from disabling or modifying firewall settings.&lt;br /&gt;['T1213.003']: Enforce the principle of least-privilege. Consider implementing access control mechanisms that include both authentication and authorization for code repositories.&lt;br /&gt;['T1613']: Enforce the principle of least privilege by limiting dashboard visibility to only the required users.&lt;br /&gt;['T1547.012']: Limit user accounts that can load or unload device drivers by disabling &lt;code&gt;SeLoadDriverPrivilege&lt;/code&gt;.&lt;br /&gt;['T1543.003']: Limit privileges of user accounts and groups so that only authorized administrators can interact with service changes and service configurations. &lt;br /&gt;['T1528']: Enforce role-based access control to limit accounts to the least privileges they require. A Cloud Access Security Broker (CASB) can be used to set usage policies and manage user permissions on cloud applications to prevent access to application access tokens. In Kubernetes applications, set "automountServiceAccountToken: false" in the YAML specification of pods that do not require access to service account tokens.(Citation: Kubernetes Hardening Guide)&lt;br /&gt;['T1053.006']: Limit user access to system utilities such as 'systemctl' or 'systemd-run' to users who have a legitimate need.&lt;br /&gt;['T1152']: Prevent users from installing their own launch agents or launch daemons and instead require them to be pushed out by group policy.&lt;br /&gt;['T1578.002']: Limit permissions for creating new instances in accordance with least privilege. Organizations should limit the number of users within the organization with an IAM role that has administrative privileges, strive to reduce all permanent privileged role assignments, and conduct periodic entitlement reviews on IAM users, roles and policies.(Citation: Mandiant M-Trends 2020)&lt;br /&gt;['T1087.004']: Limit permissions to discover cloud accounts in accordance with least privilege. Organizations should limit the number of users within the organization with an IAM role that has administrative privileges, strive to reduce all permanent privileged role assignments, and conduct periodic entitlement reviews on IAM users, roles and policies.&lt;br /&gt;['T1505']: Enforce the principle of least privilege by limiting privileges of user accounts so only authorized accounts can modify and/or add server software components.(Citation: NSA and ASD Detect and Prevent Web Shells 2020)&lt;br /&gt;['T1562.002']: Ensure proper user permissions are in place to prevent adversaries from disabling or interfering with logging.&lt;br /&gt;['T1059.008']: Use of Authentication, Authorization, and Accounting (AAA) systems will limit actions users can perform and provide a history of user actions to detect unauthorized use and abuse. Ensure least privilege principles are applied to user accounts and groups so that only authorized users can perform configuration changes. (Citation: Cisco IOS Software Integrity Assurance - AAA)&lt;br /&gt;['T1574.012']: Limit the privileges of user accounts so that only authorized administrators can edit system environment variables.&lt;br /&gt;['T1078.004']: Periodically review user accounts and remove those that are inactive or unnecessary. Limit the ability for user accounts to create additional accounts.&lt;br /&gt;['T1053.001']: Users account-level access to &lt;code&gt;[at](https://attack.mitre.org/software/S0110)&lt;/code&gt; can be managed using &lt;code&gt;/etc/at.allow&lt;/code&gt; and &lt;code&gt;/etc/at.deny&lt;/code&gt; files. Users listed in the at.allow are enabled to schedule actions using at, whereas users listed in at.deny file disabled from the utility.&lt;br /&gt;['T1162']: Restrict users from being able to create their own login items.&lt;br /&gt;['T1078']: Ensure users and user groups have appropriate permissions for their roles through Identity and Access Management (IAM) controls. Configure user permissions, groups, and roles for access to cloud-based systems as well. Implement strict IAM controls to prevent access to systems except for the applications, users, and services that require access. Consider using temporary credentials that are only good for a certain period of time in cloud environments to reduce the effectiveness of compromised accounts.&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Mitre ATT&amp;CK Mitigation M1018" url="https://attack.mitre.org/mitigations/M1018"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:02.359">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-M1017" name="User Training" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>Train users to be aware of access or manipulation attempts by an adversary to reduce the risk of successful spearphishing, social engineering, and other techniques that involve user interaction.&lt;br /&gt;&lt;p&gt;Detailed mitigations per technique:&lt;/p&gt;&lt;br /&gt;['T1566.003']: Users can be trained to identify social engineering techniques and spearphishing messages with malicious links.&lt;br /&gt;['T1204', 'T1204.001', 'T1204.002']: Use user training as a way to bring awareness to common phishing and spearphishing techniques and how to raise suspicion for potentially malicious events.&lt;br /&gt;['T1213.003']: Develop and publish policies that define acceptable information to be stored in code repositories.&lt;br /&gt;['T1164']: Holding the Shift key while logging in prevents apps from opening automatically. (Citation: Re-Open windows on Mac)&lt;br /&gt;['T1552', 'T1081', 'T1552.001']: Ensure that developers and system administrators are aware of the risk associated with having plaintext passwords in software configuration files that may be left on endpoint systems or servers.&lt;br /&gt;['T1213']: Develop and publish policies that define acceptable information to be stored in repositories.&lt;br /&gt;['T1598', 'T1598.003', 'T1598.001', 'T1598.002']: Users can be trained to identify social engineering techniques and spearphishing attempts.&lt;br /&gt;['T1213.001']: Develop and publish policies that define acceptable information to be stored in Confluence repositories.&lt;br /&gt;['T1078.002', 'T1078.004', 'T1078']: Applications may send push notifications to verify a login as a form of multi-factor authentication (MFA). Train users to only accept valid push notifications and to report suspicious push notifications.&lt;br /&gt;['T1557.002', 'T1557']: Train users to be suspicious about certificate errors. Adversaries may use their own certificates in an attempt to intercept HTTPS traffic. Certificate errors may arise when the application's certificate does not match the one expected by the host.&lt;br /&gt;['T1003.005', 'T1003', 'T1003.003', 'T1003.001', 'T1003.002', 'T1003.004']: Limit credential overlap across accounts and systems by training users and administrators not to use the same password for multiple accounts.&lt;br /&gt;['T1185']: Close all browser sessions regularly and when they are no longer needed.&lt;br /&gt;['T1072']: Have a strict approval policy for use of deployment systems.&lt;br /&gt;['T1204.003']: Train users to be aware of the existence of malicious images and how to avoid deploying instances and containers from them.&lt;br /&gt;['T1192', 'T1194']: Users can be trained to identify social engineering techniques and spearphishing emails with malicious links.&lt;br /&gt;['T1036.007']: Train users to look for double extensions in filenames, and in general use training as a way to bring awareness to common phishing and spearphishing techniques and how to raise suspicion for potentially malicious events.&lt;br /&gt;['T1111']: Remove smart cards when not in use.&lt;br /&gt;['T1528']: Users need to be trained to not authorize third-party applications they don't recognize. The user should pay particular attention to the redirect URL: if the URL is a misspelled or convoluted sequence of words related to an expected service or SaaS application, the website is likely trying to spoof a legitimate service. Users should also be cautious about the permissions they are granting to apps. For example, offline access and access to read emails should excite higher suspicions because adversaries can utilize SaaS APIs to discover credentials and other sensitive communications.&lt;br /&gt;['T1221']: Train users to identify social engineering techniques and spearphishing emails that could be used to deliver malicious documents.&lt;br /&gt;['T1056.002']: Use user training as a way to bring awareness and raise suspicion for potentially malicious events and dialog boxes (ex: Office documents prompting for credentials).&lt;br /&gt;['T1176']: 
Close out all browser sessions when finished using them to prevent any potentially malicious extensions from continuing to run.&lt;br /&gt;['T1566.001', 'T1193']: Users can be trained to identify social engineering techniques and spearphishing emails.&lt;br /&gt;['T1213.002']: Develop and publish policies that define acceptable information to be stored in SharePoint repositories.&lt;br /&gt;['T1566.002']: Users can be trained to identify social engineering techniques and spearphishing emails with malicious links which includes phishing for consent with OAuth 2.0 &lt;br /&gt;['T1566']: Users can be trained to identify social engineering techniques and phishing emails.&lt;br /&gt;['T1547.007']: Holding the Shift key while logging in prevents apps from opening automatically.(Citation: Re-Open windows on Mac)&lt;br /&gt;['T1141']: Use user training as a way to bring awareness and raise suspicion for potentially malicious events (ex: Office documents prompting for credentials).&lt;br /&gt;['T1539']: Train users to identify aspects of phishing attempts where they're asked to enter credentials into a site that has the incorrect domain for the application they are logging into.&lt;br /&gt;['T1621']: Train users to only accept 2FA/MFA requests from login attempts they initiated, to review source location of the login attempt prompting the 2FA/MFA requests, and to report suspicious/unsolicited prompts.&lt;br /&gt;['T1547.011']: Holding the shift key during login prevents apps from opening automatically.(Citation: Re-Open windows on Mac)&lt;br /&gt;['T1162']: Holding the shift key during login prevents apps from opening automatically. (Citation: Re-Open windows on Mac)&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Mitre ATT&amp;CK Mitigation M1017" url="https://attack.mitre.org/mitigations/M1017"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:02.354">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="data-from-information-repositories" name="Data from Information Repositories" desc="" library="">
          <threats>
            <threat ref="T-T1213.002" name="Sharepoint" state="Expose" source="MANUAL" edited="false" owner="JamesRabe" library="" editable="true">
              <desc>Adversaries may leverage the SharePoint repository as a source to mine valuable information. SharePoint will often contain useful information for an adversary to learn about the structure and functionality of the internal network and systems. For example, the following is a list of example information that may hold potential value to an adversary and may also be found on SharePoint:&lt;br&gt;&lt;br&gt;* Policies, procedures, and standards&lt;br&gt;* Physical / logical network diagrams&lt;br&gt;* System architecture diagrams&lt;br&gt;* Technical system documentation&lt;br&gt;* Testing / development credentials&lt;br&gt;* Work / project schedules&lt;br&gt;* Source code snippets&lt;br&gt;* Links to network shares and other internal resources&lt;br&gt;&lt;br&gt;&lt;br&gt;The user access logging within Microsoft's SharePoint can be configured to report access to certain pages and documents. (Citation: Microsoft SharePoint Logging). As information repositories generally have a considerably large user base, detection of malicious use can be non-trivial. At minimum, access to information repositories performed by privileged users (for example, Active Directory Domain, Enterprise, or Schema Administrators) should be closely monitored and alerted upon, as these types of accounts should generally not be used to access information repositories. If the capability exists, it may be of value to monitor and alert on users that are retrieving and viewing a large number of documents and pages; this behavior may be indicative of programmatic means being used to retrieve all data within the repository. In environments with high-maturity, it may be possible to leverage User-Behavioral Analytics (UBA) platforms to detect and alert on user based anomalies. &lt;br&gt;&lt;br&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references>
                <reference name="Microsoft SharePoint Logging" url="https://support.office.com/en-us/article/configure-audit-settings-for-a-site-collection-a9920c97-38c0-44f2-8bcb-4cf1e2ae22d2"/>
                <reference name="Mitre ATT&amp;CK Technique T1213.002" url="https://attack.mitre.org/techniques/T1213/002"/>
              </references>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-DS0015" mitigation="20"/>
                <countermeasure ref="C-DS0028" mitigation="20"/>
                <countermeasure ref="C-M1017" mitigation="20"/>
                <countermeasure ref="C-M1018" mitigation="20"/>
                <countermeasure ref="C-M1047" mitigation="20"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="email-collection" name="Email Collection" desc="" library="">
          <threats>
            <threat ref="T-T1114.003" name="Email Forwarding Rule" state="Expose" source="MANUAL" edited="false" owner="JamesRabe" library="" editable="true">
              <desc>Adversaries may setup email forwarding rules to collect sensitive information. Adversaries may abuse email-forwarding rules to monitor the activities of a victim, steal information, and further gain intelligence on the victim or the victim's organization to use as part of further exploits or operations.(Citation: US-CERT TA18-068A 2018) Furthermore, email forwarding rules can allow adversaries to maintain persistent access to victim's emails even after compromised credentials are reset by administrators.(Citation: Pfammatter - Hidden Inbox Rules) Most email clients allow users to create inbox rules for various email functions, including forwarding to a different recipient. These rules may be created through a local email application, a web interface, or by command-line interface. Messages can be forwarded to internal or external recipients, and there are no restrictions limiting the extent of this rule. Administrators may also create forwarding rules for user accounts with the same considerations and outcomes.(Citation: Microsoft Tim McMichael Exchange Mail Forwarding 2)(Citation: Mac Forwarding Rules)&lt;br&gt;&lt;br&gt;Any user or administrator within the organization (or adversary with valid credentials) can create rules to automatically forward all received messages to another recipient, forward emails to different locations based on the sender, and more. Adversaries may also hide the rule by making use of the Microsoft Messaging API (MAPI) to modify the rule properties, making it hidden and not visible from Outlook, OWA or most Exchange Administration tools.(Citation: Pfammatter - Hidden Inbox Rules)&lt;br&gt;&lt;br&gt;Detection is challenging because all messages forwarded because of an auto-forwarding rule have the same presentation as a manually forwarded message. It is also possible for the user to not be aware of the addition of such an auto-forwarding rule and not suspect that their account has been compromised; email-forwarding rules alone will not affect the normal usage patterns or operations of the email account. This is especially true in cases with hidden auto-forwarding rules. This makes it only possible to reliably detect the existence of a hidden auto-forwarding rule by examining message tracking logs or by using a MAPI editor to notice the modified rule property values.(Citation: Pfammatter - Hidden Inbox Rules)&lt;br&gt;&lt;br&gt;Auto-forwarded messages generally contain specific detectable artifacts that may be present in the header; such artifacts would be platform-specific. Examples include `X-MS-Exchange-Organization-AutoForwarded` set to true, `X-MailFwdBy` and `X-Forwarded-To`. The `forwardingSMTPAddress` parameter used in a forwarding process that is managed by administrators and not by user actions. All messages for the mailbox are forwarded to the specified SMTP address. However, unlike typical client-side rules, the message does not appear as forwarded in the mailbox; it appears as if it were sent directly to the specified destination mailbox.(Citation: Microsoft Tim McMichael Exchange Mail Forwarding 2) High volumes of emails that bear the `X-MS-Exchange-Organization-AutoForwarded` header (indicating auto-forwarding) without a corresponding number of emails that match the appearance of a forwarded message may indicate that further investigation is needed at the administrator level rather than user-level.</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references>
                <reference name="Mac Forwarding Rules" url="https://support.apple.com/guide/mail/reply-to-forward-or-redirect-emails-mlhlp1010/mac"/>
                <reference name="Microsoft Tim McMichael Exchange Mail Forwarding 2" url="https://blogs.technet.microsoft.com/timmcmic/2015/06/08/exchange-and-office-365-mail-forwarding-2/"/>
                <reference name="Mitre ATT&amp;CK Technique T1114.003" url="https://attack.mitre.org/techniques/T1114/003"/>
                <reference name="Pfammatter - Hidden Inbox Rules" url="https://blog.compass-security.com/2018/09/hidden-inbox-rules-in-microsoft-exchange/"/>
                <reference name="US-CERT TA18-068A 2018" url="https://www.us-cert.gov/ncas/alerts/TA18-086A"/>
              </references>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-DS0015" mitigation="16"/>
                <countermeasure ref="C-DS0017" mitigation="12"/>
                <countermeasure ref="C-DS0022" mitigation="12"/>
                <countermeasure ref="C-DS0028" mitigation="12"/>
                <countermeasure ref="C-DS0029" mitigation="12"/>
                <countermeasure ref="C-M1041" mitigation="12"/>
                <countermeasure ref="C-M1042" mitigation="12"/>
                <countermeasure ref="C-M1047" mitigation="12"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="T-T1114.002" name="Remote Email Collection" state="Expose" source="MANUAL" edited="false" owner="JamesRabe" library="" editable="true">
              <desc>Adversaries may target an Exchange server, Office 365, or Google Workspace to collect sensitive information. Adversaries may leverage a user's credentials and interact directly with the Exchange server to acquire information from within a network. Adversaries may also access externally facing Exchange services, Office 365, or Google Workspace to access email using credentials or access tokens. Tools such as [MailSniper](https://attack.mitre.org/software/S0413) can be used to automate searches for specific keywords.&lt;br&gt;&lt;br&gt;Monitor for unusual login activity from unknown or abnormal locations, especially for privileged accounts (ex: Exchange administrator account).</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references>
                <reference name="Mitre ATT&amp;CK Technique T1114.002" url="https://attack.mitre.org/techniques/T1114/002"/>
              </references>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-DS0015" mitigation="16"/>
                <countermeasure ref="C-DS0017" mitigation="14"/>
                <countermeasure ref="C-DS0022" mitigation="14"/>
                <countermeasure ref="C-DS0028" mitigation="14"/>
                <countermeasure ref="C-DS0029" mitigation="14"/>
                <countermeasure ref="C-M1032" mitigation="14"/>
                <countermeasure ref="C-M1041" mitigation="14"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="b19d0acf-741d-47c3-9dbf-70c48395c8a8" diagramComponentId="912d6424-ab5d-4bad-96b6-ee6b678865bb" ref="91610ed1-0ca7-4119-b3de-35f8450ac491" name="Initial Access" desc="" library="" parentComponentRef="62a5a79a-5e2c-4f4b-bf4a-d48751103201" componentDefinitionRef="initial-access">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses/>
      <countermeasures>
        <countermeasure ref="C-DS0015" name="Application Log" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>Events collected by third-party services such as mail servers, web applications, or other appliances (not by the native OS or platform)(Citation: Confluence Logs)&lt;br /&gt;&lt;p&gt;Detailed detections per technique:&lt;/p&gt;&lt;br /&gt;['T1189']: Firewalls and proxies can inspect URLs for potentially known-bad domains or parameters. They can also do reputation-based analytics on websites and their requested resources such as how old a domain is, who it's registered to, if it's on a known bad list, or how many other users have connected to it before.&lt;br /&gt;['T1499.002']: Monitor for third-party application logging, messaging, and/or other artifacts that may target the different network services provided by systems to conduct a DoS. In addition to network level detections, endpoint logging and instrumentation can be useful for detection. Attacks targeting web applications may generate logs in the web server, application server, and/or database server that can be used to identify the type of attack, possibly before the impact is felt. Externally monitor the availability of services that may be targeted by an Endpoint DoS.&lt;br /&gt;['T1557']: Monitor application logs for changes to settings and other events associated with network protocols and other services commonly abused for AiTM.(Citation: dhcp_serv_op_events)&lt;br /&gt;['T1137.003']:  Monitor for third-party application logging, messaging, and/or other artifacts that may abuse Microsoft Outlook forms to obtain persistence on a compromised system. SensePost, whose tool [Ruler](https://attack.mitre.org/software/S0358) can be used to carry out malicious rules, forms, and Home Page attacks, has released a tool to detect Ruler usage.(Citation: SensePost NotRuler)&lt;br /&gt;['T1505.003']: Monitor for third-party application logging, messaging, and/or other artifacts that may backdoor web servers with web shells to establish persistent access to systems. Log authentication attempts to the server and any unusual traffic patterns to or from the server and internal network. (Citation: US-CERT Alert TA15-314A Web Shells)&lt;br /&gt;['T1505']: Monitor for third-party application logging, messaging, and/or other artifacts that may abuse legitimate extensible development features of servers to establish persistent access to systems. Consider monitoring application logs for abnormal behavior that may indicate suspicious installation of application software components. Log authentication attempts to the server and any unusual traffic patterns to or from the server and internal network. (Citation: US-CERT Alert TA15-314A Web Shells)&lt;br /&gt;['T1550']: Monitor for third-party application logging, messaging, and/or other artifacts that may use alternate authentication material, such as password hashes, Kerberos tickets, and application access tokens, in order to move laterally within an environment and bypass normal system access controls.&lt;br /&gt;['T1069.003']: Monitor for events collected that may attempt to find cloud groups and permission settings. &lt;br /&gt;['T1491.002']: Monitor for third-party application logging, messaging, and/or other artifacts that may deface systems external to an organization in an attempt to deliver messaging, intimidate, or otherwise mislead an organization or users. &lt;br /&gt;['T1598']: Depending on the specific method of phishing, the detections can vary. Monitor for suspicious email activity, such as numerous accounts receiving messages from a single unusual/unknown sender. Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.(Citation: Microsoft Anti Spoofing)(Citation: ACSC Email Spoofing)
When it comes to following links, monitor for references to uncategorized or known-bad sites. URL inspection within email (including expanding shortened links) can also help detect links leading to known malicious sites.
Monitor social media traffic for suspicious activity, including messages requesting information as well as abnormal file or data transfers (especially those involving unknown, or otherwise suspicious accounts).&lt;br /&gt;['T1499']: Monitor for third-party application logging, messaging, and/or other artifacts that may perform Endpoint Denial of Service (DoS) attacks to degrade or block the availability of services to users. In addition to network level detections, endpoint logging and instrumentation can be useful for detection. Attacks targeting web applications may generate logs in the web server, application server, and/or database server that can be used to identify the type of attack, possibly before the impact is felt. Externally monitor the availability of services that may be targeted by an Endpoint DoS.&lt;br /&gt;['T1204.003']: Monitor for third-party application logging, messaging, and/or other artifacts that may rely on a user running a malicious image to facilitate execution.&lt;br /&gt;['T1598.001']: Monitor social media traffic for suspicious activity, including messages requesting information as well as abnormal file or data transfers (especially those involving unknown, or otherwise suspicious accounts).
Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.
Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.&lt;br /&gt;['T1564']: Monitor for third-party application logging, messaging, and/or other artifacts that may attempt to hide artifacts associated with their behaviors to evade detection. &lt;br /&gt;['T1499.004']: Monitor for third-party application logging, messaging, and/or other artifacts that may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Attacks targeting web applications may generate logs in the web server, application server, and/or database server that can be used to identify the type of attack. Externally monitor the availability of services that may be targeted by an Endpoint DoS.&lt;br /&gt;['T1211']: Exploitation for defense evasion may happen shortly after the system has been compromised to prevent detection during later actions for for additional tools that may be brought in and used. Detecting software exploitation may be difficult depending on the tools available. Software exploits may not always succeed or may cause the exploited process to become unstable or crash. &lt;br /&gt;['T1137']: Monitor for third-party application logging, messaging, and/or other artifacts that may leverage Microsoft Office-based applications for persistence between startups. SensePost, whose tool [Ruler](https://attack.mitre.org/software/S0358) can be used to carry out malicious rules, forms, and Home Page attacks, has released a tool to detect Ruler usage.(Citation: SensePost NotRuler)&lt;br /&gt;['T1566.001']: Monitor for third-party application logging, messaging, and/or other artifacts that may send spearphishing emails with a malicious attachment in an attempt to gain access to victim systems. Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.(Citation: Microsoft Anti Spoofing)(Citation: ACSC Email Spoofing) Anti-virus can potentially detect malicious documents and attachments as they're scanned to be stored on the email server or on the user's computer. Monitor for suspicious descendant process spawning from Microsoft Office and other productivity software.(Citation: Elastic - Koadiac Detection with EQL)&lt;br /&gt;['T1566.002']: Monitor for third-party application logging, messaging, and/or other artifacts that may send spearphishing emails with a malicious link in an attempt to gain access to victim systems. Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.(Citation: Microsoft Anti Spoofing)(Citation: ACSC Email Spoofing) URL inspection within email (including expanding shortened links) can help detect links leading to known malicious sites. Detonation chambers can be used to detect these links and either automatically go to these sites to determine if they're potentially malicious, or wait and capture the content if a user visits the link.&lt;br /&gt;['T1598.003']: Monitor for suspicious email activity, such as numerous accounts receiving messages from a single unusual/unknown sender. Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.(Citation: Microsoft Anti Spoofing)(Citation: ACSC Email Spoofing)
Monitor for references to uncategorized or known-bad sites. URL inspection within email (including expanding shortened links) can also help detect links leading to known malicious sites.&lt;br /&gt;['T1610']: Configuration management databases (CMDB) and other asset management systems may help with the detection of computer systems or network devices that should not exist on a network.&lt;br /&gt;['T1114']: Detection is challenging because all messages forwarded because of an auto-forwarding rule have the same presentation as a manually forwarded message. It is also possible for the user to not be aware of the addition of such an auto-forwarding rule and not suspect that their account has been compromised; email-forwarding rules alone will not affect the normal usage patterns or operations of the email account. Auto-forwarded messages generally contain specific detectable artifacts that may be present in the header; such artifacts would be platform-specific. Examples include &lt;code&gt;X-MS-Exchange-Organization-AutoForwarded&lt;/code&gt; set to true, &lt;code&gt;X-MailFwdBy&lt;/code&gt; and &lt;code&gt;X-Forwarded-To&lt;/code&gt;. The &lt;code&gt;forwardingSMTPAddress&lt;/code&gt; parameter used in a forwarding process that is managed by administrators and not by user actions. All messages for the mailbox are forwarded to the specified SMTP address. However, unlike typical client-side rules, the message does not appear as forwarded in the mailbox; it appears as if it were sent directly to the specified destination mailbox.(Citation: Microsoft Tim McMichael Exchange Mail Forwarding 2) High volumes of emails that bear the &lt;code&gt;X-MS-Exchange-Organization-AutoForwarded&lt;/code&gt; header (indicating auto-forwarding) without a corresponding number of emails that match the appearance of a forwarded message may indicate that further investigation is needed at the administrator level rather than user-level.&lt;br /&gt;['T1534']: Monitor email gateways usually do not scan internal email, but an organization can leverage the journaling-based solution which sends a copy of emails to a security service for offline analysis or incorporate service-integrated solutions using on-premise or API-based integrations to help detect internal spearphishing attacks.(Citation: Trend Micro When Phishing Starts from the Inside 2017)&lt;br /&gt;['T1594']: Monitor for suspicious network traffic that could be indicative of adversary reconnaissance, such as rapid successions of requests indicative of web crawling and/or large quantities of requests originating from a single source (especially if the source is known to be associated with an adversary). Analyzing web metadata may also reveal artifacts that can be attributed to potentially malicious activity, such as referer or user-agent string HTTP/S fields.&lt;br /&gt;['T1137.005']: Monitor for third-party application logging, messaging, and/or other artifacts that may abuse Microsoft Outlook rules to obtain persistence on a compromised system. SensePost, whose tool [Ruler](https://attack.mitre.org/software/S0358) can be used to carry out malicious rules, forms, and Home Page attacks, has released a tool to detect Ruler usage.(Citation: SensePost NotRuler)&lt;br /&gt;['T1213.002']: Monitor for third-party application logging, messaging, and/or other artifacts that may leverage the SharePoint repository as a source to mine valuable information. Monitor access to Microsoft SharePoint repositories performed by privileged users (for example, Active Directory Domain, Enterprise, or Schema Administrators) should be closely monitored and alerted upon, as these types of accounts should generally not be used to access information repositories. If the capability exists, it may be of value to monitor and alert on users that are retrieving and viewing a large number of documents and pages; this behavior may be indicative of programmatic means being used to retrieve all data within the repository. In environments with high-maturity, it may be possible to leverage User-Behavioral Analytics (UBA) platforms to detect and alert on user based anomalies.&lt;br /&gt;['T1110.004']: Monitor authentication logs for system and application login failures of [Valid Accounts](https://attack.mitre.org/techniques/T1078). If authentication failures are high, then there may be a brute force attempt to gain access to a system using legitimate credentials.&lt;br /&gt;['T1491.001']: Monitor for third-party application logging, messaging, and/or other artifacts that may deface systems internal to an organization in an attempt to intimidate or mislead users. &lt;br /&gt;['T1114.003']: Detection is challenging because all messages forwarded because of an auto-forwarding rule have the same presentation as a manually forwarded message. It is also possible for the user to not be aware of the addition of such an auto-forwarding rule and not suspect that their account has been compromised; email-forwarding rules alone will not affect the normal usage patterns or operations of the email account. This is especially true in cases with hidden auto-forwarding rules. This makes it only possible to reliably detect the existence of a hidden auto-forwarding rule by examining message tracking logs or by using a MAPI editor to notice the modified rule property values.(Citation: Pfammatter - Hidden Inbox Rules)
Auto-forwarded messages generally contain specific detectable artifacts that may be present in the header; such artifacts would be platform-specific. Examples include X-MS-Exchange-Organization-AutoForwarded set to true, X-MailFwdBy and X-Forwarded-To. The forwardingSMTPAddress parameter used in a forwarding process that is managed by administrators and not by user actions. All messages for the mailbox are forwarded to the specified SMTP address. However, unlike typical client-side rules, the message does not appear as forwarded in the mailbox; it appears as if it were sent directly to the specified destination mailbox.(Citation: Microsoft Tim McMichael Exchange Mail Forwarding 2) High volumes of emails that bear the X-MS-Exchange-Organization-AutoForwarded header (indicating auto-forwarding) without a corresponding number of emails that match the appearance of a forwarded message may indicate that further investigation is needed at the administrator level rather than user-level.&lt;br /&gt;['T1137.004']: Monitor for third-party application logging, messaging, and/or other artifacts that may abuse Microsoft Outlook's Home Page feature to obtain persistence on a compromised system. SensePost, whose tool [Ruler](https://attack.mitre.org/software/S0358) can be used to carry out malicious rules, forms, and Home Page attacks, has released a tool to detect Ruler usage.(Citation: SensePost NotRuler)&lt;br /&gt;['T1622']: Monitor debugger logs for signs of abnormal and potentially malicious activity.&lt;br /&gt;['T1069']: Monitor for logging, messaging, and other artifacts provided by cloud services.&lt;br /&gt;['T1499.003']: Monitor for third-party application logging, messaging, and/or other artifacts that may target resource intensive features of web applications to cause a denial of service (DoS). In addition to network level detections, endpoint logging and instrumentation can be useful for detection. Attacks targeting web applications may generate logs in the web server, application server, and/or database server that can be used to identify the type of attack, possibly before the impact is felt. Externally monitor the availability of services that may be targeted by an Endpoint DoS.&lt;br /&gt;['T1491']: Monitor for third-party application logging, messaging, and/or other artifacts that may modify visual content available internally or externally to an enterprise network. &lt;br /&gt;['T1213.003']: Monitor for third-party application logging, messaging, and/or other artifacts that may leverage code repositories to collect valuable information. Monitor access to code repositories, especially performed by privileged users such as Active Directory Domain or Enterprise Administrators as these types of accounts should generally not be used to access code repositories. In environments with high-maturity, it may be possible to leverage User-Behavioral Analytics (UBA) platforms to detect and alert on user-based anomalies.&lt;br /&gt;['T1621']: Monitor application logs for suspicious events including repeated MFA failures that may indicate user's primary credentials have been compromised.&lt;br /&gt;['T1072']: Often these third-party applications will have logs of their own that can be collected and correlated with other data from the environment. Ensure that third-party application logs are on-boarded to the enterprise logging system and the logs are regularly reviewed. Audit software deployment logs and look for suspicious or unauthorized activity. A system not typically used to push software to clients that suddenly is used for such a task outside of a known admin function may be suspicious. Monitor account login activity on these applications to detect suspicious/abnormal usage.
Perform application deployment at regular times so that irregular deployment activity stands out.&lt;br /&gt;['T1098.005']: 
Azure AD creates several log entries when new devices are enrolled, which can be monitored for unexpected device registrations.(Citation: AADInternals - BPRT) Additionally, joined devices can be viewed via the Azure AD portal.(Citation: Microsoft Manage Device Identities)&lt;br /&gt;['T1110.002']: Monitor authentication logs for system and application login failures of [Valid Accounts](https://attack.mitre.org/techniques/T1078). It is difficult to detect when hashes are cracked, since this is generally done outside the scope of the target network. Consider focusing efforts on detecting other adversary behavior used to acquire credential materials, such as [OS Credential Dumping](https://attack.mitre.org/techniques/T1003) or [Kerberoasting](https://attack.mitre.org/techniques/T1558/003).&lt;br /&gt;['T1213']: Monitor for third-party application logging, messaging, and/or other artifacts that may leverage information repositories to mine valuable information. Information repositories generally have a considerably large user base, detection of malicious use can be non-trivial. At minimum, access to information repositories performed by privileged users (for example, Active Directory Domain, Enterprise, or Schema Administrators) should be closely monitored and alerted upon, as these types of accounts should generally not be used to access information repositories. If the capability exists, it may be of value to monitor and alert on users that are retrieving and viewing a large number of documents and pages; this behavior may be indicative of programmatic means being used to retrieve all data within the repository. In environments with high-maturity, it may be possible to leverage User-Behavioral Analytics (UBA) platforms to detect and alert on user based anomalies.&lt;br /&gt;['T1505.001']: Monitor for third-party application logging, messaging, and/or other artifacts that may abuse SQL stored procedures to establish persistent access to systems. On a MSSQL Server, consider monitoring for xp_cmdshell usage.(Citation: NetSPI Startup Stored Procedures) Consider enabling audit features that can log malicious startup activities.&lt;br /&gt;['T1203']: Detecting software exploitation may be difficult depending on the tools available. Software exploits may not always succeed or may cause the exploited process to become unstable or crash.&lt;br /&gt;['T1566']: Monitor for third-party application logging, messaging, and/or other artifacts that may send phishing messages to gain access to victim systems. Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.(Citation: Microsoft Anti Spoofing)(Citation: ACSC Email Spoofing) URL inspection within email (including expanding shortened links) can help detect links leading to known malicious sites. Detonation chambers can be used to detect these links and either automatically go to these sites to determine if they're potentially malicious, or wait and capture the content if a user visits the link.&lt;br /&gt;['T1110.003']: Monitor authentication logs for system and application login failures of [Valid Accounts](https://attack.mitre.org/techniques/T1078). Consider the following event IDs:(Citation: Trimarc Detecting Password Spraying)
Domain Controllers: "Audit Logon" (Success &amp; Failure) for event ID 4625.
Domain Controllers: "Audit Kerberos Authentication Service" (Success &amp; Failure) for event ID 4771.
All systems: "Audit Logon" (Success &amp; Failure) for event ID 4648.&lt;br /&gt;['T1098.002']: Enable the UpdateFolderPermissions action for all logon types. The mailbox audit log will forward folder permission modification events to the Unified Audit Log. Create rules to alert on ModifyFolderPermissions operations where the Anonymous or Default user is assigned permissions other than None.

A larger than normal volume of emails sent from an account and similar phishing emails sent from real accounts within a network may be a sign that an account was compromised and attempts to leverage access with modified email permissions is occurring.&lt;br /&gt;['T1598.002']: Monitor for suspicious email activity, such as numerous accounts receiving messages from a single unusual/unknown sender. Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.(Citation: Microsoft Anti Spoofing)(Citation: ACSC Email Spoofing)&lt;br /&gt;['T1566.003']: Monitor for third-party application logging, messaging, and/or other artifacts that may send spearphishing messages via third-party services in an attempt to gain access to victim systems. &lt;br /&gt;['T1550.004']: Monitor for third-party application logging, messaging, and/or other service artifacts that provide context of user authentication to web applications, including cloud-based services. Combine this information with web credentials usage events to identify authentication events that do not fit the organization baseline.&lt;br /&gt;['T1210']: Detecting software exploitation may be difficult depending on the tools available. Software exploits may not always succeed or may cause the exploited process to become unstable or crash. Web Application Firewalls may detect improper inputs attempting exploitation.&lt;br /&gt;['T1557.003']: Monitor Windows logs (ex: EIDs 1341, 1342, 1020, and 1063) for changes to DHCP settings. These may also highlight DHCP issues such as when IP allocations are low or have run out.(Citation: dhcp_serv_op_events)(Citation: solution_monitor_dhcp_scopes)&lt;br /&gt;['T1562.002']: Monitor for third-party application logging, messaging, and/or other artifacts provided by third-party services that may disable Windows event logging to limit data that can be leveraged for detections and audits.&lt;br /&gt;['T1564.008']: Monitor for third-party application logging, messaging, and/or other artifacts that may use email rules to hide inbound emails in a compromised user's mailbox. Monitor email clients and applications for suspicious activity, such as missing messages or abnormal configuration and/or log entries.&lt;br /&gt;['T1505.002']: Monitor for third-party application logging, messaging, and/or other artifacts that may abuse Microsoft transport agents to establish persistent access to systems. Consider monitoring application logs for abnormal behavior that may indicate suspicious installation of application software components.&lt;br /&gt;['T1213.001']: Monitor for third-party application logging, messaging, and/or other artifacts that may leverage Confluence repositories to mine valuable information. Watch for access to Confluence repositories performed by privileged users (for example, Active Directory Domain, Enterprise, or Schema Administrators) as these types of accounts should generally not be used to access information repositories. If the capability exists, it may be of value to monitor and alert on users that are retrieving and viewing a large number of documents and pages; this behavior may be indicative of programmatic means being used to retrieve all data within the repository. In environments with high-maturity, it may be possible to leverage User-Behavioral Analytics (UBA) platforms to detect and alert on user based anomalies.&lt;br /&gt;['T1204']: Monitor for third-party application logging, messaging, and/or other artifacts that may rely upon specific actions by a user in order to gain execution.&lt;br /&gt;['T1133']: When authentication is not required to access an exposed remote service, monitor for follow-on activities such as anomalous external use of the exposed API or application.&lt;br /&gt;['T1027.005']: The first detection of a malicious tool may trigger an anti-virus or other security tool alert. Similar events may also occur at the boundary through network IDS, email scanning appliance, etc. The initial detection should be treated as an indication of a potentially more invasive intrusion. The alerting system should be thoroughly investigated beyond that initial alert for activity that was not detected. Adversaries may continue with an operation, assuming that individual events like an anti-virus detect will not be investigated or that an analyst will not be able to conclusively link that event to other activity occurring on the network.&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Confluence Logs" url="https://confluence.atlassian.com/doc/working-with-confluence-logs-108364721.html"/>
            <reference name="Mitre ATT&amp;CK Data Source DS0015" url="https://attack.mitre.org/datasources/DS0015"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:00.276">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-M1047" name="Audit" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>Perform audits or scans of systems, permissions, insecure software, insecure configurations, etc. to identify potential weaknesses.&lt;br /&gt;&lt;p&gt;Detailed mitigations per technique:&lt;/p&gt;&lt;br /&gt;['T1484']: Identify and correct GPO permissions abuse opportunities (ex: GPO modification privileges) using auditing tools such as [BloodHound](https://attack.mitre.org/software/S0521) (version 1.5.1 and later)(Citation: GitHub Bloodhound).&lt;br /&gt;['T1059.006']: Inventory systems for unauthorized Python installations.&lt;br /&gt;['T1482']: Map the trusts within existing domains/forests and keep trust relationships to a minimum.&lt;br /&gt;['T1053.003']: Review changes to the &lt;code&gt;cron&lt;/code&gt; schedule. &lt;code&gt;cron&lt;/code&gt; execution can be reviewed within the &lt;code&gt;/var/log&lt;/code&gt; directory. To validate the location of the &lt;code&gt;cron&lt;/code&gt; log file, check the syslog config at &lt;code&gt;/etc/rsyslog.conf&lt;/code&gt; or &lt;code&gt;/etc/syslog.conf&lt;/code&gt; &lt;br /&gt;['T1574.005', 'T1574.010']: Use auditing tools capable of detecting file system permissions abuse opportunities on systems within an enterprise and correct them. Toolkits like the PowerSploit framework contain PowerUp modules that can be used to explore systems for service file system permissions weaknesses.(Citation: Powersploit)&lt;br /&gt;['T1076']: Audit the Remote Desktop Users group membership regularly. Remove unnecessary accounts and groups from Remote Desktop Users groups&lt;br /&gt;['T1505.005', 'T1505']: Regularly check component software on critical services that adversaries may target for persistence to verify the integrity of the systems and identify if unexpected changes have been made.&lt;br /&gt;['T1176']:  Ensure extensions that are installed are the intended ones as many malicious extensions will masquerade as legitimate ones.&lt;br /&gt;['T1484.001']: Identify and correct GPO permissions abuse opportunities (ex: GPO modification privileges) using auditing tools such as [BloodHound](https://attack.mitre.org/software/S0521) (version 1.5.1 and later).(Citation: GitHub Bloodhound)&lt;br /&gt;['T1505.001', 'T1505.002']: Regularly check component software on critical services that adversaries may target for persistence to verify the integrity of the systems and identify if unexpected changes have been made. &lt;br /&gt;['T1574.009', 'T1574.008', 'T1574.007']: Find and eliminate path interception weaknesses in program configuration files, scripts, the PATH environment variable, services, and in shortcuts by surrounding PATH variables with quotation marks when functions allow for them. Be aware of the search order Windows uses for executing or loading binaries and use fully qualified paths wherever appropriate.

Clean up old Windows Registry keys when software is uninstalled to avoid keys with no associated legitimate binaries. Periodically search for and correct or report path interception weaknesses on systems that may have been introduced using custom or available tools that report software using insecure path configurations.(Citation: Microsoft CreateProcess)(Citation: Microsoft Dynamic-Link Library Security)(Citation: Vulnerability and Exploit Detector)&lt;br /&gt;['T1044']: Use auditing tools capable of detecting file system permissions abuse opportunities on systems within an enterprise and correct them. Toolkits like the PowerSploit framework contain PowerUp modules that can be used to explore systems for service file system permissions weaknesses. (Citation: Powersploit)&lt;br /&gt;['T1021.001', 'T1563.002']: Audit the Remote Desktop Users group membership regularly. Remove unnecessary accounts and groups from Remote Desktop Users groups.&lt;br /&gt;['T1564.008']: Enterprise email solutions may have monitoring mechanisms that may include the ability to audit inbox rules on a regular basis. 

In an Exchange environment, Administrators can use &lt;code&gt;Get-InboxRule&lt;/code&gt; to discover and remove potentially malicious inbox rules.(Citation: Microsoft Get-InboxRule)&lt;br /&gt;['T1548.002', 'T1548']: Check for common UAC bypass weaknesses on Windows systems to be aware of the risk posture and address issues where appropriate.(Citation: Github UACMe)&lt;br /&gt;['T1558.004']: Kerberos preauthentication is enabled by default. Older protocols might not support preauthentication therefore it is possible to have this setting disabled. Make sure that all accounts have preauthentication whenever possible and audit changes to setting. Windows tools such as PowerShell may be used to easily find which accounts have preauthentication disabled.  (Citation: Microsoft Preauthentication Jul 2012)(Citation: Stealthbits Cracking AS-REP Roasting Jun 2019)&lt;br /&gt;['T1053.002']: Toolkits like the PowerSploit framework contain PowerUp modules that can be used to explore systems for permission weaknesses in scheduled tasks that could be used to escalate privileges. (Citation: Powersploit) Windows operating system also creates a registry key specifically associated with the creation of a scheduled task on the destination host at: Microsoft\Windows NT\CurrentVersion\Schedule\TaskCache\Tree\At1. (Citation: Secureworks - AT.exe Scheduled Task) In Linux and macOS environments, scheduled tasks using &lt;code&gt;[at](https://attack.mitre.org/software/S0110)&lt;/code&gt; can be audited locally, or through centrally collected logging, using syslog, or auditd events from the host. (Citation: Kifarunix - Task Scheduling in Linux)&lt;br /&gt;['T1543.003']: Use auditing tools capable of detecting privilege and service abuse opportunities on systems within an enterprise and correct them. &lt;br /&gt;['T1552.006']: Search SYSVOL for any existing GGPs that may contain credentials and remove them.(Citation: ADSecurity Finding Passwords in SYSVOL)&lt;br /&gt;['T1528']: Administrators should audit all cloud and container accounts to ensure that they are necessary and that the permissions granted to them are appropriate.  Additionally, administrators should perform an audit of all OAuth applications and the permissions they have been granted to access organizational data. This should be done extensively on all applications in order to establish a baseline, followed up on with periodic audits of new or updated applications. Suspicious applications should be investigated and removed.&lt;br /&gt;['T1574']: Use auditing tools capable of detecting hijacking opportunities on systems within an enterprise and correct them. Toolkits like the PowerSploit framework contain PowerUp modules that can be used to explore systems for hijacking weaknesses.(Citation: Powersploit)

Use the program sxstrace.exe that is included with Windows along with manual inspection to check manifest files for side-loading vulnerabilities in software.

Find and eliminate path interception weaknesses in program configuration files, scripts, the PATH environment variable, services, and in shortcuts by surrounding PATH variables with quotation marks when functions allow for them. Be aware of the search order Windows uses for executing or loading binaries and use fully qualified paths wherever appropriate.

Clean up old Windows Registry keys when software is uninstalled to avoid keys with no associated legitimate binaries. Periodically search for and correct or report path interception weaknesses on systems that may have been introduced using custom or available tools that report software using insecure path configurations.(Citation: Microsoft CreateProcess)(Citation: Microsoft Dynamic-Link Library Security)(Citation: Vulnerability and Exploit Detector)&lt;br /&gt;['T1610']: Scan images before deployment, and block those that are not in compliance with security policies. In Kubernetes environments, the admission controller can be used to validate images after a container deployment request is authenticated but before the container is deployed.(Citation: Kubernetes Hardening Guide)&lt;br /&gt;['T1031', 'T1543']: Use auditing tools capable of detecting privilege and service abuse opportunities on systems within an enterprise and correct them.&lt;br /&gt;['T1606.001']: Administrators should perform an audit of all access lists and the permissions they have been granted to access web applications and services. This should be done extensively on all resources in order to establish a baseline, followed up on with periodic audits of new or updated resources. Suspicious accounts/credentials should be investigated and removed.&lt;br /&gt;['T1213.001']: Consider periodic review of accounts and privileges for critical and sensitive Confluence repositories.&lt;br /&gt;['T1566.002']: Audit applications and their permissions to ensure access to data and resources are limited based upon necessity and principle of least privilege.&lt;br /&gt;['T1546.006', 'T1161']: Binaries can also be baselined for what dynamic libraries they require, and if an app requires a new dynamic library that wasn\u2019t included as part of an update, it should be investigated.&lt;br /&gt;['T1213.002']: Consider periodic review of accounts and privileges for critical and sensitive SharePoint repositories.&lt;br /&gt;['T1578.001']: Routinely check user permissions to ensure only the expected users have the capability to create snapshots and backups.&lt;br /&gt;['T1021.005']: Inventory workstations for unauthorized VNC server software.&lt;br /&gt;['T1145', 'T1552.004']: Ensure only authorized keys are allowed access to critical resources and audit access lists regularly.&lt;br /&gt;['T1550.001']: Administrators should audit all cloud and container accounts to ensure that they are necessary and that the permissions granted to them are appropriate. Where possible, the ability to request temporary account tokens on behalf of another accounts should be disabled. Additionally, administrators can leverage audit tools to monitor actions that can be conducted as a result of OAuth 2.0 access. For instance, audit reports enable admins to identify privilege escalation actions such as role creations or policy modifications, which could be actions performed after initial access.&lt;br /&gt;['T1606.002']: Enable advanced auditing on AD FS. Check the success and failure audit options in the AD FS Management snap-in. Enable Audit Application Generated events on the AD FS farm via Group Policy Object.(Citation: FireEye ADFS)&lt;br /&gt;['T1053.004']: Audit logging for &lt;code&gt;launchd&lt;/code&gt; events in MacOS can be reviewed or centrally collected using multiple options, such as syslog, OpenBSM, or OSquery.&lt;br /&gt;['T1087.004']: Routinely check user permissions to ensure only the expected users have the ability to list IAM identities or otherwise discover cloud accounts.&lt;br /&gt;['T1578']: Routinely monitor user permissions to ensure only the expected users have the capability to modify cloud compute infrastructure components.&lt;br /&gt;['T1560.001', 'T1560']: System scans can be performed to identify unauthorized archival utilities.&lt;br /&gt;['T1073', 'T1574.002']: Use the program sxstrace.exe that is included with Windows along with manual inspection to check manifest files for side-loading vulnerabilities in software.&lt;br /&gt;['T1213.003']: Consider periodic reviews of accounts and privileges for critical and sensitive code repositories. Scan code repositories for exposed credentials or other sensitive information.&lt;br /&gt;['T1088']: Check for common UAC bypass weaknesses on Windows systems to be aware of the risk posture and address issues where appropriate. (Citation: Github UACMe)&lt;br /&gt;['T1562.007']: Routinely check account role permissions to ensure only expected users and roles have permission to modify cloud firewalls. &lt;br /&gt;['T1552.002', 'T1214']: Proactively search for credentials within the Registry and attempt to remediate the risk.&lt;br /&gt;['T1053', 'T1053.005']: Toolkits like the PowerSploit framework contain PowerUp modules that can be used to explore systems for permission weaknesses in scheduled tasks that could be used to escalate privileges. (Citation: Powersploit)&lt;br /&gt;['T1505.004']: Regularly check installed IIS components to verify the integrity of the web server and identify if unexpected changes have been made.&lt;br /&gt;['T1562.002']: Consider periodic review of &lt;code&gt;auditpol&lt;/code&gt; settings for Administrator accounts and perform dynamic baselining on SIEM(s) to investigate potential malicious activity. Also ensure that the EventLog service and its threads are properly running.&lt;br /&gt;['T1038']: Use auditing tools capable of detecting DLL search order hijacking opportunities on systems within an enterprise and correct them. Toolkits like the PowerSploit framework contain PowerUp modules that can be used to explore systems for DLL hijacking weaknesses.(Citation: Powersploit)&lt;br /&gt;['T1552']: Preemptively search for files containing passwords or other credentials and take actions to reduce the exposure risk when found.&lt;br /&gt;['T1578.002']: Routinely check user permissions to ensure only the expected users have the capability to create new instances.&lt;br /&gt;['T1034']: Find and eliminate path interception weaknesses in program configuration files, scripts, the PATH environment variable, services, and in shortcuts by surrounding PATH variables with quotation marks when functions allow for them (Citation: Microsoft CreateProcess). Be aware of the search order Windows uses for executing or loading binaries and use fully qualified paths wherever appropriate (Citation: MSDN DLL Security). 

Clean up old Windows Registry keys when software is uninstalled to avoid keys with no associated legitimate binaries. Periodically search for and correct or report path interception weaknesses on systems that may have been introduced using custom or available tools that report software using insecure path configurations. (Citation: Kanthak Sentinel)&lt;br /&gt;['T1542.004']: Periodically check the integrity of system image to ensure it has not been modified. (Citation: Cisco IOS Software Integrity Assurance - Image File Integrity) (Citation: Cisco IOS Software Integrity Assurance - Image File Verification) (Citation: Cisco IOS Software Integrity Assurance - Change Control) &lt;br /&gt;['T1574.001']: Use auditing tools capable of detecting DLL search order hijacking opportunities on systems within an enterprise and correct them. Toolkits like the PowerSploit framework contain PowerUp modules that can be used to explore systems for DLL hijacking weaknesses.(Citation: Powersploit)

Use the program sxstrace.exe that is included with Windows along with manual inspection to check manifest files for side-by-side problems in software.(Citation: Microsoft Sxstrace)&lt;br /&gt;['T1204.003', 'T1612']: Audit images deployed within the environment to ensure they do not contain any malicious components.&lt;br /&gt;['T1578.003']: Routinely check user permissions to ensure only the expected users have the capability to delete new instances.&lt;br /&gt;['T1527']: Administrators can set up a variety of logs and leverage audit tools to monitor actions that can be conducted as a result of OAuth 2.0 access. For instance, audit reports enable admins to identify privilege escalation actions such as role creations or policy modifications, which could be actions performed after initial access.&lt;br /&gt;['T1114.003']: Enterprise email solutions have monitoring mechanisms that may include the ability to audit auto-forwarding rules on a regular basis.

In an Exchange environment, Administrators can use Get-InboxRule to discover and remove potentially malicious auto-forwarding rules.(Citation: Microsoft Tim McMichael Exchange Mail Forwarding 2). In addition to this, a MAPI Editor can be utilized to examine the underlying database structure and discover any modifications/tampering of the properties of auto-forwarding rules.(Citation: Pfammatter - Hidden Inbox Rules)&lt;br /&gt;['T1114']: Enterprise email solutions have monitoring mechanisms that may include the ability to audit auto-forwarding rules on a regular basis.

In an Exchange environment, Administrators can use Get-InboxRule to discover and remove potentially malicious auto-forwarding rules.(Citation: Microsoft Tim McMichael Exchange Mail Forwarding 2) &lt;br /&gt;['T1606']: Administrators should perform an audit of all access lists and the permissions they have been granted to access web applications and services. This should be done extensively on all resources in order to establish a baseline, followed up on with periodic audits of new or updated resources. Suspicious accounts/credentials should be investigated and removed.
 
Enable advanced auditing on ADFS. Check the success and failure audit options in the ADFS Management snap-in. Enable Audit Application Generated events on the AD FS farm via Group Policy Object.(Citation: FireEye ADFS)&lt;br /&gt;['T1552.001', 'T1081']: Preemptively search for files containing passwords and take actions to reduce the exposure risk when found.&lt;br /&gt;['T1530']: Frequently check permissions on cloud storage to ensure proper permissions are set to deny open or unprivileged access to resources.(Citation: Amazon S3 Security, 2019)&lt;br /&gt;['T1543.004']: Use auditing tools capable of detecting folder permissions abuse opportunities on systems, especially reviewing changes made to folders by third-party software.&lt;br /&gt;['T1213']: Consider periodic review of accounts and privileges for critical and sensitive repositories.&lt;br /&gt;['T1542.005']: Periodically check the integrity of the running configuration and system image to ensure they have not been modified. (Citation: Cisco IOS Software Integrity Assurance - Image File Verification) (Citation: Cisco IOS Software Integrity Assurance - Image File Integrity) (Citation: Cisco IOS Software Integrity Assurance - Change Control) &lt;br /&gt;['T1525']: Periodically check the integrity of images and containers used in cloud deployments to ensure they have not been modified to include malicious software.&lt;br /&gt;['T1053.001']: Scheduled tasks using &lt;code&gt;[at](https://attack.mitre.org/software/S0110)&lt;/code&gt; can be audited locally, or through centrally collected logging, using syslog, or auditd events from the host. (Citation: Kifarunix - Task Scheduling in Linux)&lt;br /&gt;['T1078']: Routinely audit source code, application configuration files, open repositories, and public cloud storage for insecure use and storage of credentials.&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Mitre ATT&amp;CK Mitigation M1047" url="https://attack.mitre.org/mitigations/M1047"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:00.441">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-DS0022" name="File" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>A computer resource object, managed by the I/O system, for storing data (such as images, text, videos, computer programs, or any wide variety of other media).(Citation: Microsoft File Mgmt)&lt;br /&gt;&lt;p&gt;Detailed detections per technique:&lt;/p&gt;&lt;br /&gt;['T1070.002']: Monitor for unexpected deletion of a system log file, typically stored in /var/logs or /Library/Logs. &lt;br /&gt;['T1485']: Monitor for unexpected deletion to a file (ex: Sysmon EID 23) &lt;br /&gt;['T1554']: Monitor for unexpected deletion of  client software binaries to establish persistent access to systems.&lt;br /&gt;['T1070']: Monitor for a file that may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined malware.&lt;br /&gt;['T1070.001']: Monitor for unexpected deletion of Windows event logs (via native binaries) and may also generate an alterable event (Event ID 1102: "The audit log was cleared")&lt;br /&gt;['T1565.003']: Monitor for unexpected deletion of a file in order to manipulate external outcomes or hide activity &lt;br /&gt;['T1490']: The Windows event logs, ex. Event ID 524 indicating a system catalog was deleted, may contain entries associated with suspicious activity.&lt;br /&gt;['T1070.003']: Monitor for unexpected deletion of a command history file, such as ConsoleHost_history.txt, ~/.zsh_history, or ~/.bash_history.&lt;br /&gt;['T1070.004']: Monitor for unexpected deletion of files from the system&lt;br /&gt;['T1552.006']: Monitor for attempts to access SYSVOL that involve searching for XML files.&lt;br /&gt;['T1114.001']: Monitor for unusual processes accessing local email files that may target user email on local systems to collect sensitive information.&lt;br /&gt;['T1074']: Monitor processes that appear to be reading files from disparate locations and writing them to the same directory or file may be an indication of data being staged, especially if they are suspected of performing encryption or compression on the files, such as 7zip, RAR, ZIP, or zlib.&lt;br /&gt;['T1555.004']: Consider monitoring file reads to Vault locations, &lt;code&gt;&amp;percnt;Systemdrive&amp;percnt;&amp;bsol;Users&amp;bsol;&amp;bsol;&amp;lsqb;Username&amp;rsqb;&amp;bsol;AppData&amp;bsol;Local&amp;bsol;Microsoft&amp;bsol;&amp;bsol;&amp;lsqb;Vault&amp;sol;Credentials&amp;rsqb;&amp;bsol;&lt;/code&gt;, for suspicious activity.(Citation: Malwarebytes The Windows Vault)&lt;br /&gt;['T1552.003']: Monitoring when the user's &lt;code&gt;.bash_history&lt;/code&gt; is read can help alert to suspicious activity.&lt;br /&gt;['T1187']: Monitor for unexpected files used to gather credentials when the files are rendered&lt;br /&gt;['T1011.001']: Monitor for files being accessed that could be related to exfiltration, such as file reads by a process that also has an active network connection. Also monitor for and investigate changes to host adapter settings, such as addition and/or replication of communication interfaces. &lt;br /&gt;['T1020']: Monitor for abnormal access to files (i.e. .pdf, .docx, .jpg, etc.), especially sensitive documents, through the use of automated processing after being gathered during Collection.&lt;br /&gt;['T1048.003']: Monitor files viewed in isolation that may steal data by exfiltrating it over a symmetrically encrypted network protocol other than that of the existing command and control channel.&lt;br /&gt;['T1091']: Monitor for unexpected files accessed on removable media.&lt;br /&gt;['T1555.005']: Monitor file reads that may acquire user credentials from third-party password managers.(Citation: ise Password Manager February 2019)&lt;br /&gt;['T1052']: Monitor file access on removable media that may attempt to exfiltrate data via a physical medium, such as a removable drive.&lt;br /&gt;['T1041']: Monitor for suspicious files (i.e. .pdf, .docx, .jpg, etc.) viewed in isolation that may steal data by exfiltrating it over an existing command and control channel.&lt;br /&gt;['T1555.003']: Identify web browser files that contain credentials such as Google Chrome's Login Data database file: &lt;code&gt;AppData\Local\Google\Chrome\User Data\Default\Login Data&lt;/code&gt;. Monitor file read events of web browser files that contain credentials, especially when the reading process is unrelated to the subject web browser.&lt;br /&gt;['T1018']: Monitor for files (such as &lt;code&gt;/etc/hosts&lt;/code&gt;) being accessed that may attempt to get a listing of other systems by IP address, hostname, or other logical identifier on a network that may be used for Lateral Movement from the current system&lt;br /&gt;['T1025']: Monitor for unexpected/abnormal file accesses to removable media (optical disk drive, USB memory, etc.) connected to the compromised system. &lt;br /&gt;['T1048.001']: Monitor for files viewed in isolation that may steal data by exfiltrating it over a symmetrically encrypted network protocol other than that of the existing command and control channel.&lt;br /&gt;['T1003.003']: Monitor for access or copy of the NTDS.dit.&lt;br /&gt;['T1003.002']: Monitor for hash dumpers opening the Security Accounts Manager (SAM) on the local file system (&lt;code&gt;%SystemRoot%/system32/config/SAM&lt;/code&gt;). Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromised [Valid Accounts](https://attack.mitre.org/techniques/T1078) in-use by adversaries may help as well.&lt;br /&gt;['T1003.007']: Monitor for unexpected access to passwords and hashes stored in memory, processes must open a maps file in the /proc filesystem for the process being analyzed. This file is stored under the path &lt;code&gt;/proc/\/maps&lt;/code&gt;, where the &lt;code&gt;\&lt;/code&gt; directory is the unique pid of the program being interrogated for such authentication data. The AuditD monitoring tool, which ships stock in many Linux distributions, can be used to watch for hostile processes opening this file in the proc file system, alerting on the pid, process name, and arguments of such programs.&lt;br /&gt;['T1003.008']: Monitor for files being accessed that may attempt to dump the contents of &lt;code&gt;/etc/passwd&lt;/code&gt; and &lt;code&gt;/etc/shadow&lt;/code&gt; to enable offline password cracking. The AuditD monitoring tool, which ships stock in many Linux distributions, can be used to watch for hostile processes attempting to access &lt;code&gt;/etc/passwd&lt;/code&gt; and &lt;code&gt;/etc/shadow&lt;/code&gt;, alerting on the pid, process name, and arguments of such programs.&lt;br /&gt;['T1555']: Monitor for files being accessed that may search for common password storage locations to obtain user credentials.&lt;br /&gt;['T1567']: Monitor for files being accessed by an existing, legitimate external Web service to exfiltrate data rather than their primary command and control channel.&lt;br /&gt;['T1539']: Monitor for an attempt by a user to gain access to a network or computing resource, often by providing credentials to cloud service management consoles. Some cloud providers, such as AWS, provide distinct log events for login attempts to the management console.&lt;br /&gt;['T1567.002']: Monitor for files being accessed to exfiltrate data to a cloud storage service rather than over their primary command and control channel.&lt;br /&gt;['T1114']: Monitor for unusual processes access of local system email files for Exfiltration, unusual processes connecting to an email server within a network, or unusual access patterns or authentication attempts on a public-facing webmail server may all be indicators of malicious activity.&lt;br /&gt;['T1048']: Monitor for suspicious files (i.e. .pdf, .docx, .jpg, etc.) viewed in isolation that may steal data by exfiltrating it over a different protocol than that of the existing command and control channel.&lt;br /&gt;['T1217']: Monitor for unexpected browser bookmarks viewed in isolation, this showcases part of a chain of behavior that could lead to other activities, such as Collection and Exfiltration, based on the information obtained.&lt;br /&gt;['T1052.001']: Monitor file access on removable media that may attempt to exfiltrate data over a USB connected physical device.&lt;br /&gt;['T1555.001']: Monitor for Keychain files being accessed that may be related to malicious credential collection.&lt;br /&gt;['T1033']: Monitor for hash dumpers opening the Security Accounts Manager (SAM) on the local file system (&lt;code&gt;%SystemRoot%/system32/config/SAM&lt;/code&gt;). Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromised  [Valid Accounts](https://attack.mitre.org/techniques/T1078) in-use by adversaries may help as well.&lt;br /&gt;['T1003']: Monitor for hash dumpers opening the Security Accounts Manager (SAM) on the local file system (&lt;code&gt;%SystemRoot%/system32/config/SAM&lt;/code&gt;). Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromised ( LinkById: T1078) in-use by adversaries may help as well.&lt;br /&gt;['T1119']: Monitor for unexpected files (i.e. .pdf, .docx, .jpg, etc.) viewed for collecting internal data.&lt;br /&gt;['T1039']: Monitor for unexpected files (i.e. .pdf, .docx, .jpg, etc.)  interacting with network shares.&lt;br /&gt;['T1552.004']: Monitor access to files and directories related to cryptographic keys and certificates as a means for potentially detecting access patterns that may indicate collection and exfiltration activity. &lt;br /&gt;['T1558']: Monitor for unexpected processes interacting with lsass.exe.(Citation: Medium Detecting Attempts to Steal Passwords from Memory) Common credential dumpers such as  [Mimikatz](https://attack.mitre.org/software/S0002) access the LSA Subsystem Service (LSASS) process by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details, including Kerberos tickets, are stored. Monitor for unusual processes accessing &lt;code&gt;secrets.ldb&lt;/code&gt; and &lt;code&gt;.secrets.mkey&lt;/code&gt; located in &lt;code&gt;/var/lib/sss/secrets/&lt;/code&gt;.&lt;br /&gt;['T1087']: Monitor access to file resources that contain local accounts and groups information such as &lt;code&gt;/etc/passwd&lt;/code&gt;, &lt;code&gt;/Users&lt;/code&gt; directories, and the SAM database. 

If access requires high privileges, look for non-admin objects (such as users or processes) attempting to access restricted file resources.&lt;br /&gt;['T1552']: Monitor for suspicious file access activity, specifically indications that a process is reading multiple files in a short amount of time and/or using command-line arguments indicative of searching for credential material (ex: regex patterns). These may be indicators of automated/scripted credential access behavior. Monitoring when the user's &lt;code&gt;.bash_history&lt;/code&gt; is read can help alert to suspicious activity. While users do typically rely on their history of commands, they often access this history through other utilities like "history" instead of commands like &lt;code&gt;cat ~/.bash_history&lt;/code&gt;.&lt;br /&gt;['T1011']: Monitor for files being accessed that could be related to exfiltration, such as file reads by a process that also has an active network connection.&lt;br /&gt;['T1567.001']: Monitor for files being accessed to exfiltrate data to a code repository rather than over their primary command and control channel.&lt;br /&gt;['T1087.001']: Monitor access to file resources that contain local accounts and groups information such as &lt;code&gt;/etc/passwd&lt;/code&gt;, &lt;code&gt;/Users&lt;/code&gt; directories, and the Windows SAM database. 

If access requires high privileges, look for non-admin objects (such as users or processes) attempting to access restricted file resources.&lt;br /&gt;['T1005']: Monitor for unexpected/abnormal access to files that may be malicious collection of local data, such as user files (pdf, .docx, .jpg, etc.) or local databases.&lt;br /&gt;['T1552.001']: Monitor for files being accessed that may search local file systems and remote file shares for files containing insecurely stored credentials. While detecting adversaries accessing these files may be difficult without knowing they exist in the first place, it may be possible to detect adversary use of credentials they have obtained. &lt;br /&gt;['T1053.005']: Monitor Windows Task Scheduler stores in %systemroot%\System32\Tasks for change entries related to scheduled tasks that do not correlate with known software, patch cycles, etc.&lt;br /&gt;['T1574.001']: Monitor for changed made to .manifest/.local redirection files, or file systems for moving, renaming, replacing, or modifying DLLs. Changes in the set of DLLs that are loaded by a process (compared with past behavior) that do not correlate with known software, patches, etc., are suspicious.&lt;br /&gt;['T1574.005']: Monitor for changes to binaries and service executables that may normally occur during software updates. &lt;br /&gt;['T1547.009']: Since a shortcut's target path likely will not change, modifications to shortcut files that do not correlate with known software changes, patches, removal, etc., may be suspicious. Analysis should attempt to relate shortcut file change events to other potentially suspicious events based on known adversary behavior such as process launches of unknown executables that make network connections.&lt;br /&gt;['T1037']: Monitor for changes made to files that are modified by unusual accounts outside of normal administration duties.&lt;br /&gt;['T1564.002']: Monitor for changes made to files that may use hidden users to mask the presence of user accounts they create or modify. Monitor for changes made to the &lt;code&gt;/Library/Preferences/com.apple.loginwindow&lt;/code&gt; plist file for unexpected modifications to the &lt;code&gt; Hide500Users&lt;/code&gt; key value on macOS.(Citation: Cybereason OSX Pirrit)&lt;br /&gt;['T1036']: Monitor for changes made to files outside of an update or patch that may attempt to manipulate features of their artifacts to make them appear legitimate or benign to users and/or security tools.&lt;br /&gt;['T1556.004']: Monitor for changes made to the checksum of the operating system file and verifying the image of the operating system in memory.(Citation: Cisco IOS Software Integrity Assurance - Image File Verification)(Citation: Cisco IOS Software Integrity Assurance - Run-Time Memory Verification) Detection of this behavior may be difficult, detection efforts may be focused on closely related adversary behaviors, such as Modify System Image.&lt;br /&gt;['T1600']: File Modification&lt;br /&gt;['T1548.003']: On Linux, auditd can alert every time a user's actual ID and effective ID are different (this is what happens when you sudo). This technique is abusing normal functionality in macOS and Linux systems, but sudo has the ability to log all input and output based on the &lt;code&gt;LOG_INPUT&lt;/code&gt; and &lt;code&gt;LOG_OUTPUT&lt;/code&gt; directives in the &lt;code&gt;/etc/sudoers&lt;/code&gt; file.&lt;br /&gt;['T1543.001']: Launch Agents also require files on disk for persistence which can also be monitored via other file monitoring applications.&lt;br /&gt;['T1053.003']: Monitor for changes made to files for unexpected modifications to access permissions and attributes &lt;br /&gt;['T1070']: Monitor for changes made to a file may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined malware.&lt;br /&gt;['T1056']: Monitor for changes made to files for unexpected modifications to access permissions and attributes  &lt;br /&gt;['T1546.011']: Monitor for changes made to files that may establish persistence and/or elevate privileges by executing malicious content triggered by application shims.&lt;br /&gt;['T1574.010']: Monitor for modification of binaries and service executables that do not occur during a regular software update or an update scheduled by the organization. Modification of files considers actions such as renaming and directory moving.&lt;br /&gt;['T1505']: Monitor for changes made to files that may abuse legitimate extensible development features of servers to establish persistent access to systems.&lt;br /&gt;['T1053.006']: Monitor for changes made to systemd timer unit files for unexpected modification events within the /etc/systemd/system, /usr/lib/systemd/system/, and ~/.config/systemd/user/ directories, as well as associated symbolic links&lt;br /&gt;['T1056.003']: Monitor for changes made to detect changes to files in the Web directory for organization login pages that do not match with authorized updates to the Web server's content.&lt;br /&gt;['T1546.002']: Monitor for changes made to files that may establish persistence by executing malicious content triggered by user inactivity.&lt;br /&gt;['T1546.013']: Locations where &lt;code&gt;profile.ps1&lt;/code&gt; can be stored should be monitored for modifications. (Citation: Malware Archaeology PowerShell Cheat Sheet) Example profile locations include:
* &lt;code&gt;$PsHome\Profile.ps1&lt;/code&gt;
* &lt;code&gt;$PsHome\Microsoft.{HostProgram}_profile.ps1&lt;/code&gt;
* &lt;code&gt;$Home\My Documents\PowerShell\Profile.ps1&lt;/code&gt;
* &lt;code&gt;$Home\My Documents\PowerShell\Microsoft.{HostProgram}_profile.ps1&lt;/code&gt;&lt;br /&gt;['T1564.003']: Monitor for changes made to files that may use hidden windows to conceal malicious activity from the plain sight of users. In MacOS, plist files are ASCII text files with a specific format, so they're relatively easy to parse. File monitoring can check for the &lt;code&gt;apple.awt.UIElement&lt;/code&gt; or any other suspicious plist tag in plist files and flag them.&lt;br /&gt;['T1547.001']: Monitor the start folder for additions or changes. Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including the startup folders. (Citation: TechNet Autoruns)&lt;br /&gt;['T1565.003']: Monitor for unexpected files with manipulated data in order to manipulate external outcomes or hide activity&lt;br /&gt;['T1070.006']: Monitor for unexpected modifications to file timestamps &lt;br /&gt;['T1489']: Monitor for changes made to files that may stop or disable services on a system to render those services unavailable to legitimate users.&lt;br /&gt;['T1564.005']: Detecting the use of a hidden file system may be exceptionally difficult depending on the implementation. Emphasis may be placed on detecting related aspects of the adversary lifecycle, such as how malware interacts with the hidden file system or how a hidden file system is loaded.&lt;br /&gt;['T1037.002']: Monitor for changes to login hook files (&lt;code&gt;/Library/Preferences/com.apple.loginwindow.plist&lt;/code&gt;), especially by unusual accounts outside of normal administration duties.&lt;br /&gt;['T1574.009']: Monitor for changes made to files that may execute their own malicious payloads by hijacking vulnerable file path references.&lt;br /&gt;['T1491.002']: Monitor external websites for unplanned content changes.&lt;br /&gt;['T1486']: Monitor for changes made to files in user directories.&lt;br /&gt;['T1055.009']: Monitor for changes made to /proc files that may inject malicious code into processes via the /proc filesystem in order to evade process-based defenses as well as possibly elevate privileges. Users should not have permission to modify these in most cases. &lt;br /&gt;['T1098']: Monitor for changes made to files related to account settings, such as /etc/ssh/sshd_config and the authorized_keys file for each user on a system.&lt;br /&gt;['T1564.004']: There are many ways to create and interact with ADSs using Windows utilities. Monitor for operations (execution, copies, etc.) with file names that contain colons. This syntax (ex: &lt;code&gt;file.ext:ads[.ext]&lt;/code&gt;) is commonly associated with ADSs. (Citation: Microsoft ADS Mar 2014) (Citation: Oddvar Moe ADS1 Jan 2018) (Citation: Oddvar Moe ADS2 Apr 2018) For a more exhaustive list of utilities that can be used to execute and create ADSs, see https://gist.github.com/api0cradle/cdd2d0d0ec9abb686f0e89306e277b8f.&lt;br /&gt;['T1600.002']: There is no documented method for defenders to directly identify behaviors that reduce encryption key space. Detection efforts may be focused on closely related adversary behaviors, such as Modify System Image and Network Device CLI. Some detection methods require vendor support to aid in investigation.&lt;br /&gt;['T1187']: Monitor for changes made to the .LNK, .SCF, or any other files on systems and within virtual environments that contain resources that point to external network resources &lt;br /&gt;['T1543.004']: Monitor files for changes that may create or modify Launch Daemons to execute malicious payloads as part of persistence.&lt;br /&gt;['T1546.004']: Monitor for changes to &lt;code&gt;/etc/profile&lt;/code&gt; and &lt;code&gt;/etc/profile.d&lt;/code&gt;, these files should only be modified by system administrators. MacOS users can leverage Endpoint Security Framework file events monitoring these specific files.(Citation: ESF_filemonitor)&lt;br /&gt;['T1098.004']: Monitor for changes made to detect changes made to the authorized_keys file for each user on a system. Monitor for changes to and suspicious processes modifiying /etc/ssh/sshd_config.&lt;br /&gt;['T1548']: On Linux, auditd can alert every time a user's actual ID and effective ID are different (this is what happens when you sudo). This technique is abusing normal functionality in macOS and Linux systems, but sudo has the ability to log all input and output based on the &lt;code&gt;LOG_INPUT&lt;/code&gt; and &lt;code&gt;LOG_OUTPUT&lt;/code&gt; directives in the &lt;code&gt;/etc/sudoers&lt;/code&gt; file. Consider monitoring for &lt;code&gt;/usr/libexec/security_authtrampoline&lt;/code&gt; executions which may indicate that AuthorizationExecuteWithPrivileges is being executed. MacOS system logs may also indicate when AuthorizationExecuteWithPrivileges is being called.&lt;br /&gt;['T1037.004']: Monitor for changes made to files for unexpected modifications to RC scripts in the /etc/ directory&lt;br /&gt;['T1554']: Monitor changes to client software that do not correlate with known software or patch cycles.&lt;br /&gt;['T1070.002']: Monitor for changes made to system log files, typically stored in  /var/log or /Library/Logs, for unexpected modifications to access permissions and attributes &lt;br /&gt;['T1055']: Monitor for changes made to files that may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges.&lt;br /&gt;['T1036.003']: Monitor for changes made to files for unexpected modifications to file names that are mismatched between the file name on disk and that of the binary's PE metadata. This is a likely indicator that a binary was renamed after it was compiled.  &lt;br /&gt;['T1547.015']: All login items created via shared file lists are viewable by using the System Preferences GUI or in the &lt;code&gt;~/Library/Application Support/com.apple.backgroundtaskmanagementagent/backgrounditems.btm&lt;/code&gt; file.(Citation: Open Login Items Apple)(Citation: Startup Items Eclectic)(Citation: objsee block blocking login items)(Citation: sentinelone macos persist Jun 2019) These locations should be monitored and audited.&lt;br /&gt;['T1574']: Monitor file systems for moving, renaming, replacing, or modifying DLLs. Changes in the set of DLLs that are loaded by a process (compared with past behavior) that do not correlate with known software, patches, etc., are suspicious. Modifications to or creation of .manifest and .local redirection files that do not correlate with software updates are suspicious.&lt;br /&gt;['T1546']: Monitor for changes made to files that may establish persistence and/or elevate privileges using system mechanisms that trigger execution based on specific events.&lt;br /&gt;['T1556']: Monitor PAM configuration and module paths (ex: /etc/pam.d/) for changes. Use system-integrity tools such as AIDE and monitoring tools such as auditd to monitor PAM files.&lt;br /&gt;['T1137.002']: Monitor for changes made to files that may abuse the Microsoft Office "Office Test" Registry key to obtain persistence on a compromised system.&lt;br /&gt;['T1564']: Monitor for changes made to files that may attempt to hide artifacts associated with their behaviors to evade detection.&lt;br /&gt;['T1547.006']: Monitor for changes made to files that may modify the kernel to automatically execute programs on system boot.&lt;br /&gt;['T1574.006']: Monitor for changes to environment variables and files associated with loading shared libraries such as LD_PRELOAD on Linux and DYLD_INSERT_LIBRARIES on macOS.&lt;br /&gt;['T1553']: Periodically baseline registered SIPs and trust providers (Registry entries and files on disk), specifically looking for new, modified, or non-Microsoft entries.(Citation: SpectorOps Subverting Trust Sept 2017) Also analyze Autoruns data for oddities and anomalies, specifically malicious files attempting persistent execution by hiding within auto-starting locations. Autoruns will hide entries signed by Microsoft or Windows by default, so ensure "Hide Microsoft Entries" and "Hide Windows Entries" are both deselected.(Citation: SpectorOps Subverting Trust Sept 2017)

On macOS, the removal of the &lt;code&gt;com.apple.quarantine&lt;/code&gt; flag by a user instead of the operating system is a suspicious action and should be examined further. Also monitor software update frameworks that may strip this flag when performing updates.&lt;br /&gt;['T1137.006']: Monitor for changes made to files that may abuse Microsoft Office add-ins to obtain persistence on a compromised system.&lt;br /&gt;['T1546.008']: Monitor for changes made to files that may establish persistence and/or elevate privileges by executing malicious content triggered by accessibility features. Changes to accessibility utility binaries or binary paths that do not correlate with known software, patch cycles, etc., are suspicious.&lt;br /&gt;['T1546.006']: Monitor file systems for changes to application binaries and invalid checksums/signatures.&lt;br /&gt;['T1137']: Monitor for changes made to files that may leverage Microsoft Office-based applications for persistence between startups.&lt;br /&gt;['T1553.003']: Periodically baseline registered SIPs and trust providers (Registry entries and files on disk), specifically looking for new, modified, or non-Microsoft entries.(Citation: SpectorOps Subverting Trust Sept 2017) Also analyze Autoruns data for oddities and anomalies, specifically malicious files attempting persistent execution by hiding within auto-starting locations. Autoruns will hide entries signed by Microsoft or Windows by default, so ensure "Hide Microsoft Entries" and "Hide Windows Entries" are both deselected.(Citation: SpectorOps Subverting Trust Sept 2017)&lt;br /&gt;['T1037.003']: Monitor for changes made to files for unexpected modifications to unusual accounts outside of normal administration duties  &lt;br /&gt;['T1569.001']: Every Launch Agent and Launch Daemon must have a corresponding plist file on disk which can be monitored. Plist files are located in the root, system, and users &lt;code&gt;/Library/LaunchAgents&lt;/code&gt; or &lt;code&gt;/Library/LaunchDaemons&lt;/code&gt; folders. [Launch Agent](https://attack.mitre.org/techniques/T1543/001) or [Launch Daemon](https://attack.mitre.org/techniques/T1543/004) with executable paths pointing to /tmp and /Shared folders locations are potentially suspicious.&lt;br /&gt;['T1543']: Monitor for changes to files associated with system-level processes.&lt;br /&gt;['T1569']: Monitor for changes made to files that may abuse system services or daemons to execute commands or programs.&lt;br /&gt;['T1547']: Monitor for changes made to files that may configure system settings to automatically execute a program during system boot or logon to maintain persistence or gain higher-level privileges on compromised systems.&lt;br /&gt;['T1505.005']: Monitor unexpected changes and/or interactions with &lt;code&gt;termsrv.dll&lt;/code&gt;, which is typically stored in &lt;code&gt;%SystemRoot%\System32\&lt;/code&gt;.&lt;br /&gt;['T1546.005']: Monitor for changes made to files that may establish persistence by executing malicious content triggered by an interrupt signal.&lt;br /&gt;['T1543.002']: Systemd service unit files may be detected by auditing file creation and modification events within the &lt;code&gt;/etc/systemd/system&lt;/code&gt;, &lt;code&gt;/usr/lib/systemd/system/&lt;/code&gt;, and &lt;code&gt;/home/&lt;username&gt;/.config/systemd/user/&lt;/code&gt; directories, as well as associated symbolic links&lt;br /&gt;['T1505.003']: Monitor for changes made to files that may backdoor web servers with web shells to establish persistent access to systems.&lt;br /&gt;['T1556.001']: Monitor for changes to functions exported from authentication-related system DLLs (such as cryptdll.dll and samsrv.dll).(Citation: Dell Skeleton)&lt;br /&gt;['T1601.002']: Monitor for changes made to the operating system of a network device because image downgrade may be used in conjunction with  [Patch System Image](https://attack.mitre.org/techniques/T1601/001), it may be appropriate to also verify the integrity of the vendor provided operating system image file.&lt;br /&gt;['T1547.008']: Monitor for changes made to files that may modify or add LSASS drivers to obtain persistence on compromised systems.&lt;br /&gt;['T1553.001']: The removal of the &lt;code&gt;com.apple.quarantine&lt;/code&gt; flag by a user instead of the operating system is a suspicious action and should be examined further. Also monitor software update frameworks that may strip this flag when performing updates.&lt;br /&gt;['T1574.004']: Monitor file systems for moving, renaming, replacing, or modifying dylibs. Changes in the set of dylibs that are loaded by a process (compared to past behavior) that do not correlate with known software, patches, etc., are suspicious. Check the system for multiple dylibs with the same name and monitor which versions have historically been loaded into a process.&lt;br /&gt;['T1485']: Monitor for changes made to a large quantity of files for unexpected modifications in user directories and under C:\Windows\System32\.&lt;br /&gt;['T1037.005']: Monitor for changes made to files for unexpected modifications to /Library/StartupItem folder&lt;br /&gt;['T1647']: Monitor for plist file modification, especially if immediately followed by other suspicious events such as code execution from &lt;code&gt;\~/Library/Scripts&lt;/code&gt; or &lt;code&gt;\~/Library/Preferences&lt;/code&gt;. Also, monitor for significant changes to any path pointers in a modified plist.&lt;br /&gt;['T1574.008']: Monitor for programs metadata modifications such as deletion of the path to an executable since it makes programs vulnerable to this type of technique. Also, monitor modifications of files such as renaming programs using Windows system utilities names.&lt;br /&gt;['T1080']: Monitor for files that write or overwrite many files to a network shared directory may be suspicious.&lt;br /&gt;['T1547.013']: Malicious XDG autostart entries may be detected by auditing file modification events within the &lt;code&gt;/etc/xdg/autostart&lt;/code&gt; and &lt;code&gt;~/.config/autostart&lt;/code&gt; directories. Depending on individual configurations, defenders may need to query the environment variables &lt;code&gt;$XDG_CONFIG_HOME&lt;/code&gt; or &lt;code&gt;$XDG_CONFIG_DIRS&lt;/code&gt; to determine the paths of Autostart entries. Autostart entry files not associated with legitimate packages may be considered suspicious. Suspicious entries can also be identified by comparing entries to a trusted system baseline.&lt;br /&gt;['T1053']: Monitor for changes made to files that may abuse task scheduling functionality to facilitate initial or recurring execution of malicious code.&lt;br /&gt;['T1601.001']: Compare the checksum of the operating system file with the checksum of a known good copy from a trusted source. Some embedded network device platforms may have the capability to calculate the checksum of the file, while others may not. Even for those platforms that have the capability, it is recommended to download a copy of the file to a trusted computer to calculate the checksum with software that is not compromised.https://tools.cisco.com/security/center/resources/integrity_assurance.html#7

Many vendors of embedded network devices can provide advanced debugging support that will allow them to work with device owners to validate the integrity of the operating system running in memory. If a compromise of the operating system is suspected, contact the vendor technical support and seek such services for a more thorough inspection of the current running system. https://tools.cisco.com/security/center/resources/integrity_assurance.html#13&lt;br /&gt;['T1546.014']: Monitor emond rules creation by checking for files modified in &lt;code&gt;/etc/emond.d/rules/&lt;/code&gt; and &lt;code&gt;/private/var/db/emondClients&lt;/code&gt;.&lt;br /&gt;['T1140']: Monitor for changes made to files for unexpected modifications that attempt to hide artifacts.&lt;br /&gt;['T1053.002']: On Windows, monitor Windows Task Scheduler stores in `%systemroot%\System32\Tasks` for change entries related to scheduled tasks, especially those that do not correlate with known software, patch cycles, etc. On Linux and macOS, all [at](https://attack.mitre.org/software/S0110) jobs are stored in &lt;code&gt;/var/spool/cron/atjobs/&lt;/code&gt;.(Citation: rowland linux at 2019)&lt;br /&gt;['T1070.003']: Monitor for changes made to command history files, such as ConsoleHost_history.txt, ~/.zsh_history, or ~/.bash_history, for unexpected modifications to contents, access permissions, and attributes.&lt;br /&gt;['T1505.004']: Monitor for modification of files (especially DLLs on webservers) that could be abused as malicious ISAPI extensions/filters or IIS modules. Changes to &lt;code&gt;%windir%\system32\inetsrv\config\applicationhost.config&lt;/code&gt; could indicate an IIS module installation.(Citation: Microsoft IIS Modules Overview 2007)(Citation: ESET IIS Malware 2021)&lt;br /&gt;['T1491.001']: Monitor internal and websites for unplanned content changes.&lt;br /&gt;['T1137.001']: Monitor for changes made to files that may abuse Microsoft Office templates to obtain persistence on a compromised system. Modification to base templates, like Normal.dotm, should also be investigated since the base templates should likely not contain VBA macros. Changes to the Office macro security settings should also be investigated&lt;br /&gt;['T1547.007']: Monitoring the specific plist files associated with reopening applications can indicate when an application has registered itself to be reopened.&lt;br /&gt;['T1491']: Monitor for changes made to files for unexpected modifications to internal and external websites for unplanned content changes.&lt;br /&gt;['T1564.008']: On MacOS systems, monitor for modifications to the &lt;code&gt;RulesActiveState.plist&lt;/code&gt;, &lt;code&gt;SyncedRules.plist&lt;/code&gt;, &lt;code&gt;UnsyncedRules.plist&lt;/code&gt;, and &lt;code&gt;MessageRules.plist&lt;/code&gt; files.(Citation: MacOS Email Rules)&lt;br /&gt;['T1548.001']: Monitor for changes made to files that may perform shell escapes or exploit vulnerabilities in an application with the setsuid or setgid bits to get code running in a different user's context.&lt;br /&gt;['T1014']: Monitor for changes and the existence of unrecognized DLLs, drivers, devices, services, and to the MBR. (Citation: Wikipedia Rootkit)&lt;br /&gt;['T1601']: Most embedded network devices provide a command to print the version of the currently running operating system. Use this command to query the operating system for its version number and compare it to what is expected for the device in question. Because this method may be used in conjunction with  [Patch System Image](https://attack.mitre.org/techniques/T1601/001), it may be appropriate to also verify the integrity of the vendor provided operating system image file.

Compare the checksum of the operating system file with the checksum of a known good copy from a trusted source. Some embedded network device platforms may have the capability to calculate the checksum of the file, while others may not. Even for those platforms that have the capability, it is recommended to download a copy of the file to a trusted computer to calculate the checksum with software that is not compromised. (Citation: Cisco IOS Software Integrity Assurance - Image File Verification)

Many vendors of embedded network devices can provide advanced debugging support that will allow them to work with device owners to validate the integrity of the operating system running in memory. If a compromise of the operating system is suspected, contact the vendor technical support and seek such services for a more thorough inspection of the current running system.  (Citation: Cisco IOS Software Integrity Assurance - Run-Time Memory Verification)&lt;br /&gt;['T1053.007']: Monitor for newly constructed files by using the logging agents on Kubernetes nodes and retrieve logs from sidecar proxies for application and resource pods to monitor malicious container orchestration job deployments.&lt;br /&gt;['T1574.007']: Monitor for newly constructed files for files named after partial directories and in locations that may be searched for common processes through the environment variable, or otherwise should not be user writable. Also, monitor file creation for programs that are named after Windows system programs or programs commonly executed without a path (such as "findstr," "net," and "python"). If this activity occurs outside of known administration activity, upgrades, installations, or patches, then it may be suspicious.&lt;br /&gt;['T1204.001']: malicious documents and files that are downloaded from a link and executed on the user's computer&lt;br /&gt;['T1137.001']: Monitor for newly constructed files that may abuse Microsoft Office templates to obtain persistence on a compromised system.&lt;br /&gt;['T1137']: Monitor for newly constructed files that may leverage Microsoft Office-based applications for persistence between startups.&lt;br /&gt;['T1218.002']: Monitor for newly constructed files that may forge web cookies that can be used to gain access to web applications or Internet services.&lt;br /&gt;['T1560.002']: Monitor newly constructed files being written with extensions and/or headers associated with compressed or encrypted file types. Detection efforts may focus on follow-on exfiltration activity, where compressed or encrypted files can be detected in transit with a network intrusion detection or data loss prevention system analyzing file headers.&lt;br /&gt;['T1037.002']: Monitor for the creation of and/or changes to login hook files (&lt;code&gt;/Library/Preferences/com.apple.loginwindow.plist&lt;/code&gt;), especially by unusual accounts outside of normal administration duties.&lt;br /&gt;['T1037.004']: Monitor for newly constructed /etc/rc.local file &lt;br /&gt;['T1574.006']: Monitor for newly constructed files that are added to absolute paths of shared libraries such as LD_PRELOAD on Linux and DYLD_INSERT_LIBRARIES on macOS.&lt;br /&gt;['T1566']: Monitor for newly constructed files from a phishing messages to gain access to victim systems.&lt;br /&gt;['T1546.004']: Monitor for newly constructed files that may establish persistence through executing malicious commands triggered by a user's shell. For most Linux and macOS systems, a list of file paths for valid shell options available on a system are located in the &lt;code&gt;/etc/shells&lt;/code&gt; file.&lt;br /&gt;['T1036.007']: Monitor for files written to disk that contain two file extensions, particularly when the second is an executable.&lt;br /&gt;['T1574.005']: Monitor for newly constructed files to match an existing service executable, it could be detected and correlated with other suspicious behavior.  &lt;br /&gt;['T1105']: Monitor for file creation and files transferred into the network&lt;br /&gt;['T1491']: Monitor for newly constructed visual content for internal or external enterprise networks. &lt;br /&gt;['T1037.005']: Monitor for newly constructed files by unusual accounts outside of normal administration duties&lt;br /&gt;['T1074.001']: Monitor publicly writeable directories, central locations, and commonly used staging directories (recycle bin, temp folders, etc.) to regularly check for compressed or encrypted data that may be indicative of staging.&lt;br /&gt;['T1053']: Monitor newly constructed files that may abuse task scheduling functionality to facilitate initial or recurring execution of malicious code.&lt;br /&gt;['T1546.005']: Monitor for newly constructed files that may establish persistence by executing malicious content triggered by an interrupt signal.&lt;br /&gt;['T1505.003']: File monitoring may be used to detect changes to files in the Web directory of a Web server that do not match with updates to the Web server's content and may indicate implantation of a Web shell script.(Citation: NSA Cyber Mitigating Web Shells)&lt;br /&gt;['T1547']: Monitor for newly constructed files that may configure system settings to automatically execute a program during system boot or logon to maintain persistence or gain higher-level privileges on compromised systems.&lt;br /&gt;['T1543.001']: Monitor for newly constructed files that may create or modify launch agents to repeatedly execute malicious payloads as part of persistence.&lt;br /&gt;['T1547.013']: Malicious XDG autostart entries may be detected by auditing file creation events within the &lt;code&gt;/etc/xdg/autostart&lt;/code&gt; and &lt;code&gt;~/.config/autostart&lt;/code&gt; directories. Depending on individual configurations, defenders may need to query the environment variables &lt;code&gt;$XDG_CONFIG_HOME&lt;/code&gt; or &lt;code&gt;$XDG_CONFIG_DIRS&lt;/code&gt; to determine the paths of Autostart entries. Autostart entry files not associated with legitimate packages may be considered suspicious. Suspicious entries can also be identified by comparing entries to a trusted system baseline.&lt;br /&gt;['T1027.004']: Monitor for newly constructed files for payloads&lt;br /&gt;['T1543.004']: Monitor for new files added to the &lt;code&gt;/Library/LaunchDaemons/&lt;/code&gt; folder. The System LaunchDaemons are protected by SIP.&lt;br /&gt;['T1574']: Monitor for newly constructed files that may execute their own malicious payloads by hijacking the way operating systems run programs.&lt;br /&gt;['T1546.002']: Monitor newly constructed files that may establish persistence by executing malicious content triggered by user inactivity.&lt;br /&gt;['T1547.012']: Monitor for newly constructed files that may abuse print processors to run malicious DLLs during system boot for persistence and/or privilege escalation.&lt;br /&gt;['T1574.010']: Monitor for creation of binaries and service executables that do not occur during a regular software update or an update scheduled by the organization. This behavior also considers files that are overwritten.&lt;br /&gt;['T1547.010']: Monitor newly constructed files that may use port monitors to run an attacker supplied DLL during system boot for persistence or privilege escalation.&lt;br /&gt;['T1491.001']: Monitor for newly constructed files that may deface systems internal to an organization in an attempt to intimidate or mislead users.&lt;br /&gt;['T1027']: Detection of file obfuscation is difficult unless artifacts are left behind by the obfuscation process that are uniquely detectable with a signature. If detection of the obfuscation itself is not possible, it may be possible to detect the malicious activity that caused the obfuscated file (for example, the method that was used to write, read, or modify the file on the file system).&lt;br /&gt;['T1564.001']: Monitor the file system and shell commands for files being created with a leading "."&lt;br /&gt;['T1218.001']: Monitor presence and use of CHM files, especially if they are not typically used within an environment.&lt;br /&gt;['T1218']: Monitor for file activity (creations, downloads, modifications, etc.), especially for file types that are not typical within an environment and may be indicative of adversary activity.&lt;br /&gt;['T1556.002']: Monitor for newly constructed files that may register malicious password filter dynamic link libraries (DLLs) into the authentication process to acquire user credentials as they are validated.&lt;br /&gt;['T1556']: Monitor for suspicious additions to the /Library/Security/SecurityAgentPlugins directory.(Citation: Xorrior Authorization Plugins)&lt;br /&gt;['T1204']: Anti-virus can potentially detect malicious documents and files that are downloaded and executed on the user's computer. Endpoint sensing or network sensing can potentially detect malicious events once the file is opened (such as a Microsoft Word document or PDF reaching out to the internet or spawning powershell.exe).&lt;br /&gt;['T1574.009']: Monitor file creation for files named after partial directories and in locations that may be searched for common processes through the environment variable, or otherwise should not be user writable. Also, monitor file creation for programs that are named after Windows system programs or programs commonly executed without a path (such as "findstr," "net," and "python"). If this activity occurs outside of known administration activity, upgrades, installations, or patches, then it may be suspicious.&lt;br /&gt;['T1546']: Monitor newly constructed files that may establish persistence and/or elevate privileges using system mechanisms that trigger execution based on specific events.&lt;br /&gt;['T1491.002']: Monitor for newly constructed files that may deface systems external to an organization in an attempt to deliver messaging, intimidate, or otherwise mislead an organization or users.&lt;br /&gt;['T1546.014']: Monitor emond rules creation by checking for files created in &lt;code&gt;/etc/emond.d/rules/&lt;/code&gt; and &lt;code&gt;/private/var/db/emondClients&lt;/code&gt;.&lt;br /&gt;['T1547.009']: Monitor for LNK files created with a Zone Identifier value greater than 1, which may indicate that the LNK file originated from outside of the network.(Citation: BSidesSLC 2020 - LNK Elastic) Analysis should attempt to relate shortcut creation events to other potentially suspicious events based on known adversary behavior such as process launches of unknown executables that make network connections.&lt;br /&gt;['T1547.006']: Monitor for newly constructed files that may modify the kernel to automatically execute programs on system boot.&lt;br /&gt;['T1187']: Monitor for newly constructed .LNK, .SCF, or any other files on systems and within virtual environments that contain resources that point to external network resources &lt;br /&gt;['T1546.008']: Monitor newly constructed files that may establish persistence and/or elevate privileges by executing malicious content triggered by accessibility features.&lt;br /&gt;['T1547.008']: Monitor newly constructed files that may modify or add LSASS drivers to obtain persistence on compromised systems.&lt;br /&gt;['T1496']: Monitor for common cryptomining files on local systems that may indicate compromise and resource usage&lt;br /&gt;['T1505.004']: Monitor for creation of files (especially DLLs on webservers) that could be abused as malicious ISAPI extensions/filters or IIS modules.&lt;br /&gt;['T1565']: Monitor for newly constructed files in order to manipulate external outcomes or hide activity&lt;br /&gt;['T1505']: Consider monitoring file locations associated with the installation of new application software components such as paths from which applications typically load such extensible components.&lt;br /&gt;['T1218.005']: Monitor use of HTA files. If they are not typically used within an environment then execution of them may be suspicious&lt;br /&gt;['T1566.001']: Monitor for newly constructed files from a spearphishing emails with a malicious attachment in an attempt to gain access to victim systems.&lt;br /&gt;['T1486']: Monitor for newly constructed files in user directories.&lt;br /&gt;['T1574.004']: Monitor for newly constructed dylibs&lt;br /&gt;['T1137.002']: Monitor for newly constructed files that may abuse the Microsoft Office "Office Test" Registry key to obtain persistence on a compromised system.&lt;br /&gt;['T1204.002']: Monitor for newly constructed files that are downloaded and executed on the user's computer. Endpoint sensing or network sensing can potentially detect malicious events once the file is opened (such as a Microsoft Word document or PDF reaching out to the internet or spawning powershell.exe).&lt;br /&gt;['T1543']: Monitor for newly constructed files that may create or modify system-level processes to repeatedly execute malicious payloads as part of persistence.&lt;br /&gt;['T1218.014']: Monitor for creation and use of .msc files. MMC may legitimately be used to call Microsoft-created .msc files, such as &lt;code&gt;services.msc&lt;/code&gt; or &lt;code&gt;eventvwr.msc&lt;/code&gt;. Invoking non-Microsoft .msc files may be an indicator of malicious activity.&lt;br /&gt;['T1037']: Monitor for newly constructed files that may use scripts automatically executed at boot or logon initialization to establish persistence.&lt;br /&gt;['T1574.001']: Monitor newly constructed .manifest and .local redirection files that do not correlate with software updates.&lt;br /&gt;['T1189']: Monitor for newly constructed files written to disk to gain access to a system through a user visiting a website over the normal course of browsing.&lt;br /&gt;['T1564.006']: Monitor for newly constructed files associated with running a virtual instance, such as binary files associated with common virtualization technologies (ex: VirtualBox, VMware, QEMU, Hyper-V).&lt;br /&gt;['T1080']: Monitor for newly constructed files from files that write or overwrite many files to a network shared directory may be suspicious.&lt;br /&gt;['T1574.002']: Monitor for newly constructed files in common folders on the computer system.&lt;br /&gt;['T1564.009']: Monitor for newly constructed files that may abuse resource forks to hide malicious code or executables to evade detection and bypass security applications.&lt;br /&gt;['T1176']: Monitor for newly constructed files and/or all installed extensions maintain a plist file in the /Library/Managed Preferences/username/ directory. Ensure all listed files are in alignment with approved extensions&lt;br /&gt;['T1553.005']: Monitor compressed/archive and image files downloaded from the Internet as the contents may not be tagged with the MOTW. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities.&lt;br /&gt;['T1570']: Monitor newly constructed files to/from a lateral tool transfer &lt;br /&gt;['T1564']: Monitor for newly constructed files that may attempt to hide artifacts associated with their behaviors to evade detection.&lt;br /&gt;['T1546.013']: Locations where &lt;code&gt;profile.ps1&lt;/code&gt; can be stored should be monitored for new profiles. (Citation: Malware Archaeology PowerShell Cheat Sheet) Example profile locations include:
* &lt;code&gt;$PsHome\Profile.ps1&lt;/code&gt;
* &lt;code&gt;$PsHome\Microsoft.{HostProgram}_profile.ps1&lt;/code&gt;
* &lt;code&gt;$Home\My Documents\PowerShell\Profile.ps1&lt;/code&gt;
* &lt;code&gt;$Home\My Documents\PowerShell\Microsoft.{HostProgram}_profile.ps1&lt;/code&gt;&lt;br /&gt;['T1027.006']: Monitor for newly constructed files via JavaScript, developing rules for the different variants, with a combination of different encoding and/or encryption schemes, may be very challenging. Consider monitoring files downloaded from the Internet, possibly by HTML Smuggling, for suspicious activities. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities.&lt;br /&gt;['T1554']: Monitor for newly constructed files that may modify client software binaries to establish persistent access to systems.&lt;br /&gt;['T1091']: Monitor for newly constructed files on removable media&lt;br /&gt;['T1137.006']: Monitor for newly constructed files that may abuse Microsoft Office add-ins to obtain persistence on a compromised system.&lt;br /&gt;['T1564']: Monitor for contextual data about a file, which may include information such as name, the content (ex: signature, headers, or data/media), user/ower, permissions that may attempt to hide artifacts associated with their behaviors to evade detection.&lt;br /&gt;['T1036.005']: Collect file hashes; file names that do not match their expected hash are suspect. Perform file monitoring; files with known names but in unusual locations are suspect. Likewise, files that are modified outside of an update or patch are suspect.&lt;br /&gt;['T1036.002']: Monitor for common formats of RTLO characters within filenames such as \u202E, [U+202E], and %E2%80%AE. Defenders should also check their analysis tools to ensure they do not interpret the RTLO character and instead print the true name of the file containing it.&lt;br /&gt;['T1070']: Monitor for contextual file data that may show signs of deletion or alter generated artifacts on a host system, including logs or captured files such as quarantined malware.&lt;br /&gt;['T1553']: Collect and analyze signing certificate metadata on software that executes within the environment to look for unusual certificate characteristics and outliers.&lt;br /&gt;['T1055.013']: Scan file objects reported during the PsSetCreateProcessNotifyRoutine, (Citation: Microsoft PsSetCreateProcessNotifyRoutine routine) which triggers a callback whenever a process is created or deleted, specifically looking for file objects with enabled write access. (Citation: BlackHat Process Doppelganging Dec 2017) Also consider comparing file objects loaded in memory to the corresponding file on disk. (Citation: hasherezade Process Doppelganging Dec 2017)&lt;br /&gt;['T1546.006']: Changes to binaries that do not line up with application updates or patches are also extremely suspicious.&lt;br /&gt;['T1027.003']: Detection of steganography is difficult unless artifacts are left behind by the obfuscation process that are detectable with a known signature. Look for strings or other signatures left in system artifacts related to decoding steganography.&lt;br /&gt;['T1195.002']: Use verification of distributed binaries through hash checking or other integrity checking mechanisms. Scan downloads for malicious signatures and attempt to test software and updates prior to deployment while taking note of potential suspicious activity.&lt;br /&gt;['T1222.002']: Monitor and investigate attempts to modify ACLs and file/directory ownership. Consider enabling file/directory permission change auditing on folders containing key binary/configuration files.&lt;br /&gt;['T1027.001']: Depending on the method used to pad files, a file-based signature may be capable of detecting padding using a scanning or on-access based tool. When executed, the resulting process from padded files may also exhibit other behavior characteristics of being used to conduct an intrusion such as system and network information Discovery or Lateral Movement, which could be used as event indicators that point to the source file.&lt;br /&gt;['T1546']: Monitor for contextual data about a file, which may include information such as name, the content (ex: signature, headers, or data/media), user/ower, permissions, etc.&lt;br /&gt;['T1564.001']: Monitor for contextual data about a file, which may include information such as name, the content (ex: signature, headers, or data/media), user/ower, permissions may set files and directories to be hidden to evade detection mechanisms.&lt;br /&gt;['T1564.009']: Identify files with the &lt;code&gt;com.apple.ResourceFork&lt;/code&gt; extended attribute and large data amounts stored in resource forks.&lt;br /&gt;['T1070.006']: Monitor for file modifications that collects information on file handle opens and can compare timestamp values&lt;br /&gt;['T1565.003']: Monitor for contextual data about a file, which may include information such as name, the content (ex: signature, headers, or data/media), user/ower, permissions, etc that would aid in the manipulation of data to hide activity&lt;br /&gt;['T1564.007']: If the document is opened with a Graphical User Interface (GUI) the malicious p-code is decompiled and may be viewed. However, if the &lt;code&gt;PROJECT&lt;/code&gt; stream, which specifies the project properties, is modified in a specific way the decompiled VBA code will not be displayed. For example, adding a module name that is undefined to the &lt;code&gt;PROJECT&lt;/code&gt; stream will inhibit attempts of reading the VBA source code through the GUI.(Citation: FireEye VBA stomp Feb 2020)&lt;br /&gt;['T1553.005']: Monitor files (especially those downloaded from untrusted locations) for MOTW attributes. Also consider inspecting and scanning file formats commonly abused to bypass MOTW (ex: .arj, .gzip, .iso, .vhd).&lt;br /&gt;['T1218.011']: Analyze contextual data about executed DLL files, which may include information such as name, the content (ex: signature, headers, or data/media), age, user/ower, permissions, etc.&lt;br /&gt;['T1553.001']: Review &lt;code&gt;false&lt;/code&gt; values under the &lt;code&gt;LSFileQuarantineEnabled&lt;/code&gt; entry in an application's &lt;code&gt;Info.plist&lt;/code&gt; file (required by every application). &lt;code&gt;false&lt;/code&gt; under &lt;code&gt;LSFileQuarantineEnabled&lt;/code&gt; indicates that an application does not use the quarantine flag. Unsandboxed applications with an unspecified &lt;code&gt;LSFileQuarantineEnabled&lt;/code&gt; entry will default to not setting the quarantine flag.

QuarantineEvents is a SQLite database containing a list of all files assigned the &lt;code&gt;com.apple.quarantine&lt;c/ode&gt; attribute, located at &lt;code&gt;~/Library/Preferences/com.apple.LaunchServices.QuarantineEventsV2&lt;/code&gt;. Each event contains the corresponding UUID, timestamp, application, Gatekeeper score, and decision if it was allowed. (Citation: TheEclecticLightCompany Quarantine and the flag)&lt;br /&gt;['T1548']: Monitor the file system for files that have the setuid or setgid bits set. On Linux, auditd can alert every time a user's actual ID and effective ID are different (this is what happens when you sudo).&lt;br /&gt;['T1036']: Collect file hashes; file names that do not match their expected hash are suspect. Perform file monitoring; files with known names but in unusual locations are suspect. Look for indications of common characters that may indicate an attempt to trick users into misidentifying the file type, such as a space as the last character of a file name or the right-to-left override characters"\u202E", "[U+202E]", and "%E2%80%AE".&lt;br /&gt;['T1036.006']: Monitor for spaces at the end of file names, that can easily be checked with file monitoring. From the user's perspective though, this is very hard to notice from within the Finder.app or on the command-line in Terminal.app. Processes executed from binaries containing non-standard extensions in the filename are suspicious.&lt;br /&gt;['T1564.004']: Monitor for contextual data about a file, which may include information such as name, the content (ex: signature, headers, or data/media), user/ower, permissions, may use NTFS file attributes to hide their malicious data in order to evade detection. Forensic techniques exist to identify information stored in NTFS EA. (Citation: Journey into IR ZeroAccess NTFS EA)&lt;br /&gt;['T1027.002']: Use file scanning to look for known software packers or artifacts of packing techniques. Packing is not a definitive indicator of malicious activity, because legitimate software may use packing techniques to reduce binary size or to protect proprietary code.&lt;br /&gt;['T1222']: Monitor and investigate attempts to modify ACLs and file/directory ownership.&lt;br /&gt;['T1548.001']: Monitor the file system for files that have the setuid or setgid bits set.&lt;br /&gt;['T1036.001']: Collect and analyze signing certificate metadata and check signature validity on software that executes within the environment, look for invalid signatures as well as unusual certificate characteristics and outliers.&lt;br /&gt;['T1554']: Collect and analyze signing certificate metadata and check signature validity on software that executes within the environment&lt;br /&gt;['T1036.003']: Collecting and comparing disk and resource filenames for binaries by looking to see if the InternalName, OriginalFilename, and/or ProductName match what is expected could provide useful leads, but may not always be indicative of malicious activity.&lt;br /&gt;['T1222.001']: Consider enabling file/directory permission change auditing on folders containing key binary/configuration files. For example, Windows Security Log events (Event ID 4670) are created when DACLs are modified.&lt;br /&gt;['T1570']: Monitor for alike file hashes or characteristics (ex: filename) that are created on multiple hosts.&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Microsoft File Mgmt" url="https://docs.microsoft.com/en-us/windows/win32/fileio/file-management"/>
            <reference name="Mitre ATT&amp;CK Data Source DS0022" url="https://attack.mitre.org/data-sources/DS0022"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:00.298">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-DS0028" name="Logon Session" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>Logon occurring on a system or resource (local, domain, or cloud) to which a user/device is gaining access after successful authentication and authorizaton(Citation: Microsoft Audit Logon Events)&lt;br /&gt;&lt;p&gt;Detailed detections per technique:&lt;/p&gt;&lt;br /&gt;['T1114']: Monitor for unusual login activity from unknown or abnormal locations, especially for privileged accounts (ex: Exchange administrator account). &lt;br /&gt;['T1213']: Monitor for newly constructed logon behavior within Microsoft's SharePoint can be configured to report access to certain pages and documents. (Citation: Microsoft SharePoint Logging) Sharepoint audit logging can also be configured to report when a user shares a resource. (Citation: Sharepoint Sharing Events)The user access logging within Atlassian's Confluence can also be configured to report access to certain pages and documents through AccessLogFilter. (Citation: Atlassian Confluence Logging) Additional log storage and analysis infrastructure will likely be required for more robust detection capabilities.&lt;br /&gt;['T1021.004']: Monitor for user accounts logged into systems that may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to log into remote machines using Secure Shell (SSH). For example, on Linux systems SSH logon activity can be found in the logs located in &lt;code&gt;/var/log/auth.log&lt;/code&gt; or &lt;code&gt;/var/log/secure&lt;/code&gt; depending on the distro you are using.&lt;br /&gt;['T1606.002']: Monitor for logins using SAML tokens which do not have corresponding 4769 and 1200 events in the domain.(Citation: Sygnia Golden SAML) These logins may occur on any on-premises resources as well as from any cloud environment that trusts the certificate.(Citation: Microsoft SolarWinds Customer Guidance)&lt;br /&gt;['T1606.001']: Monitor for anomalous authentication activity, such as logons or other user session activity associated with unknown accounts. Monitor for unexpected and abnormal access to resources, including access of websites and cloud-based applications by the same user in different locations or by different systems that do not match expected configurations.&lt;br /&gt;['T1078.002']: Monitor for suspicious account behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. &lt;br /&gt;['T1556']: Monitor for newly constructed logon behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times (ex: when the user is not present) or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access). Configure robust, consistent account activity audit policies across the enterprise and with externally accessible services.(Citation: TechNet Audit Policy) &lt;br /&gt;['T1550']: Look for suspicious account behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account.&lt;br /&gt;['T1199']: Monitor for newly constructed logon behavior that may breach or otherwise leverage organizations who have access to intended victims.&lt;br /&gt;['T1538']: Monitor for newly constructed logon behavior across cloud service management consoles.&lt;br /&gt;['T1563.002']: Use of RDP may be legitimate, depending on the network environment and how it is used. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior with RDP.&lt;br /&gt;['T1550.002']: Monitor newly created logons and credentials used in events and review for discrepancies. Unusual remote logins that correlate with other suspicious activity (such as writing and executing binaries) may indicate malicious activity.&lt;br /&gt;['T1078']: Monitor for newly constructed logon behavior that may obtain and abuse credentials of existing accounts as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access).&lt;br /&gt;['T1021.001']: Monitor for user accounts logged into systems associated with RDP (ex: Windows EID 4624 Logon Type 10). Other factors, such as access patterns (ex: multiple systems over a relatively short period of time) and activity that occurs after a remote login, may indicate suspicious or malicious behavior with RDP.&lt;br /&gt;['T1213.002']: Monitor for newly constructed logon behavior across Microsoft's SharePoint which can be configured to report access to certain pages and documents. (Citation: Microsoft SharePoint Logging) As information repositories generally have a considerably large user base, detection of malicious use can be non-trivial.&lt;br /&gt;['T1021.002']: Monitor for logon behavior (ex: EID 4624 Logon Type 3) using [Valid Accounts](https://attack.mitre.org/techniques/T1078) to interact with a remote network share using Server Message Block (SMB). The adversary may then perform actions as the logged-on user. Ensure that proper logging of accounts used to log into systems is turned on and centrally collected. Windows logging is able to collect success/failure for accounts that may be used to move laterally and can be collected using tools such as Windows Event Forwarding. (Citation: Lateral Movement Payne)(Citation: Windows Event Forwarding Payne)&lt;br /&gt;['T1556.001']: Monitor for newly constructed logon behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times (ex: when the user is not present) or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access). Configure robust, consistent account activity audit policies across the enterprise and with externally accessible services.(Citation: TechNet Audit Policy)&lt;br /&gt;['T1078.001']: Monitor for newly constructed logon behavior across default accounts that have been activated or logged into. These audits should also include checks on any appliances and applications for default credentials or SSH keys, and if any are discovered, they should be updated immediately.&lt;br /&gt;['T1021.006']: Monitor for user accounts logging into the system via [Valid Accounts](https://attack.mitre.org/techniques/T1078) to interact with remote systems using Windows Remote Management (WinRM). The adversary may then perform actions as the logged-on user. &lt;br /&gt;['T1563']: Monitor for user accounts logged into systems they would not normally access or access patterns to multiple systems over a relatively short period of time.&lt;br /&gt;['T1213.001']: Monitor for newly constructed logon behavior across Atlassian's Confluence which can be configured to report access to certain pages and documents through AccessLogFilter. (Citation: Atlassian Confluence Logging) Additional log storage and analysis infrastructure will likely be required for more robust detection capabilities.&lt;br /&gt;['T1021.005']: Monitor for user accounts logged into systems that may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to remotely control machines using Virtual Network Computing (VNC). For example, on macOS systems &lt;code&gt;log show --predicate 'process = "screensharingd" and eventMessage contains "Authentication:"'&lt;/code&gt; can be used to review incoming VNC connection attempts for suspicious activity.(Citation: Apple Unified Log Analysis Remote Login and Screen Sharing) &lt;br /&gt;['T1563.001']: Monitor for user accounts logged into systems they would not normally access or access patterns to multiple systems over a relatively short period of time. Also monitor user SSH-agent socket files being used by different users.&lt;br /&gt;['T1550.003']: Monitor for newly constructed logon behavior that may "pass the ticket" using stolen Kerberos tickets to move laterally within an environment, bypassing normal system access controls.&lt;br /&gt;['T1114.002']: Monitor for unusual login activity from unknown or abnormal locations, especially for privileged accounts (ex: Exchange administrator account).&lt;br /&gt;['T1213.003']: Monitor for newly constructed logon behavior across code repositories (e.g. Github) which can be configured to report access to certain pages and documents.&lt;br /&gt;['T1078.004']: Monitor for suspicious account behavior across cloud services that share account. &lt;br /&gt;['T1606']: Monitor for anomalous authentication activity, such as logons or other user session activity associated with unknown accounts and/or using SAML tokens which do not have corresponding 4769 and 1200 events in the domain.(Citation: Sygnia Golden SAML). Monitor for unexpected and abnormal access to resources, including access of websites and cloud-based applications by the same user in different locations or by different systems that do not match expected configurations. These logins may occur on any on-premises resources as well as from any cloud environment that trusts the credentials.(Citation: Microsoft SolarWinds Customer Guidance)&lt;br /&gt;['T1185']: Authentication logs can be used to audit logins to specific web applications, but determining malicious logins versus benign logins may be difficult if activity matches typical user behavior.&lt;br /&gt;['T1021']: Monitor for user accounts logged into systems they would not normally access or abnormal access patterns, such as multiple systems over a relatively short period of time. Correlate use of login activity related to remote services with unusual behavior or other malicious or suspicious activity. Adversaries will likely need to learn about an environment and the relationships between systems through Discovery techniques prior to attempting Lateral Movement. For example, in macOS you can review logs for "screensharingd" and "Authentication" event messages. (Citation: Lockboxx ARD 2019)(Citation: Apple Unified Log Analysis Remote Login and Screen Sharing)&lt;br /&gt;['T1556.003']: Monitor for newly constructed logon behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times (ex: when the user is not present) or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access).&lt;br /&gt;['T1621']: Monitor 2FA/MFA application logs for suspicious events such as rapid login attempts with valid credentials.&lt;br /&gt;['T1078.003']: Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access).&lt;br /&gt;['T1621']: Monitor 2FA/MFA application logs for suspicious events such as unusual login attempt source location, mismatch in location of login attempt and smart device approving 2FA/MFA request prompts.&lt;br /&gt;['T1558.001']: Monitor for anomalous Kerberos activity, such as malformed or blank fields in Windows logon/logoff events (Event ID 4624, 4634, 4672). Correlate other security systems with login information (e.g., a user has the KRBTGT account password hash and forges Kerberos ticket-granting tickets). &lt;br /&gt;['T1558']: Enable Audit Kerberos Service Ticket Operations to log Kerberos TGS service ticket requests. Particularly investigate irregular patterns of activity (ex: accounts making numerous requests, Event ID 4769, within a small time frame, especially if they also request RC4 encryption [Type 0x17]).(Citation: Microsoft Detecting Kerberoasting Feb 2018) (Citation: AdSecurity Cracking Kerberos Dec 2015)&lt;br /&gt;['T1606.002']: Consider modifying SAML responses to include custom elements for each service provider. Monitor these custom elements in service provider access logs to detect any anomalous requests.(Citation: Sygnia Golden SAML)&lt;br /&gt;['T1558.002']: Monitor for anomalous Kerberos activity, such as malformed or blank fields in Windows logon/logoff events (Event ID 4624, 4634, 4672).&lt;br /&gt;['T1133']: Follow best practices for detecting adversary use of Valid Accounts for authenticating to remote services. Collect authentication logs and analyze for unusual access patterns, windows of activity, and access outside of normal business hours.&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Microsoft Audit Logon Events" url="https://docs.microsoft.com/en-us/windows/security/threat-protection/auditing/basic-audit-logon-events"/>
            <reference name="Mitre ATT&amp;CK Data Source DS0028" url="https://attack.mitre.org/datasources/DS0028"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:00.308">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-M1032" name="Multi-factor Authentication" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>Use two or more pieces of evidence to authenticate to a system; such as username and password in addition to a token from a physical smart card or token generator.&lt;br /&gt;&lt;p&gt;Detailed mitigations per technique:&lt;/p&gt;&lt;br /&gt;['T1098.001']: Use multi-factor authentication for user and privileged accounts. Consider enforcing multi-factor authentication for the &lt;code&gt;CreateKeyPair&lt;/code&gt; and &lt;code&gt;ImportKeyPair&lt;/code&gt; API calls through IAM policies.(Citation: Expel IO Evil in AWS)&lt;br /&gt;['T1040']: Use multi-factor authentication wherever possible.&lt;br /&gt;['T1136.001', 'T1136.002', 'T1136.003', 'T1098', 'T1098.003', 'T1136', 'T1098.002']: Use multi-factor authentication for user and privileged accounts.&lt;br /&gt;['T1556.003']: Integrating multi-factor authentication (MFA) as part of organizational policy can greatly reduce the risk of an adversary gaining control of valid credentials that may be used for additional tactics such as initial access, lateral movement, and collecting information.&lt;br /&gt;['T1556', 'T1556.001']: Integrating multi-factor authentication (MFA) as part of organizational policy can greatly reduce the risk of an adversary gaining control of valid credentials that may be used for additional tactics such as initial access, lateral movement, and collecting information. MFA can also be used to restrict access to cloud resources and APIs. &lt;br /&gt;['T1599', 'T1601', 'T1601.002', 'T1601.001']: Use multi-factor authentication for user and privileged accounts. Most embedded network devices support TACACS+ and/or RADIUS.  Follow vendor prescribed best practices for hardening access control.(Citation: Cisco IOS Software Integrity Assurance - TACACS)&lt;br /&gt;['T1114', 'T1114.002']: Use of multi-factor authentication for public-facing webmail servers is a recommended best practice to minimize the usefulness of usernames and passwords to adversaries.&lt;br /&gt;['T1621']: Implement more secure 2FA/MFA mechanisms in replacement of simple push or one-click 2FA/MFA options. For example, having users enter a one-time code provided by the login screen into the 2FA/MFA application or utilizing other out-of-band 2FA/MFA mechanisms (such as rotating code-based hardware tokens providing rotating codes that need an accompanying user pin) may be more secure. Furthermore, change default configurations and implement limits upon the maximum number of 2FA/MFA request prompts that can be sent to users in period of time.(Citation: MFA Fatigue Attacks - PortSwigger)&lt;br /&gt;['T1076']: Use multi-factor authentication for remote logins. (Citation: Berkley Secure)&lt;br /&gt;['T1078.002', 'T1078']: Integrating multi-factor authentication (MFA) as part of organizational policy can greatly reduce the risk of an adversary gaining control of valid credentials that may be used for additional tactics such as initial access, lateral movement, and collecting information. MFA can also be used to restrict access to cloud resources and APIs.&lt;br /&gt;['T1098.005']: Require multi-factor authentication to register devices in Azure AD.(Citation: Microsoft - Device Registration) Configure multi-factor authentication systems to disallow enrolling new devices for inactive accounts.(Citation: CISA MFA PrintNightmare)&lt;br /&gt;['T1110.003', 'T1110.001', 'T1110', 'T1110.004', 'T1110.002']: Use multi-factor authentication. Where possible, also enable multi-factor authentication on externally facing services.&lt;br /&gt;['T1078.004']: Use multi-factor authentication for cloud accounts, especially privileged accounts. This can be implemented in a variety of forms (e.g. hardware, virtual, SMS), and can also be audited using administrative reporting features.(Citation: AWS - IAM Console Best Practices)&lt;br /&gt;['T1021.004']: Require multi-factor authentication for SSH connections wherever possible, such as password protected SSH keys.&lt;br /&gt;['T1539']: A physical second factor key that uses the target login domain as part of the negotiation protocol will prevent session cookie theft through proxy methods.(Citation: Evilginx 2 July 2018)&lt;br /&gt;['T1599.001', 'T1556.004']: Use multi-factor authentication for user and privileged accounts. Most embedded network devices support TACACS+ and/or RADIUS.  Follow vendor prescribed best practices for hardening access control. (Citation: Cisco IOS Software Integrity Assurance - TACACS)&lt;br /&gt;['T1021.001']: Use multi-factor authentication for remote logins.(Citation: Berkley Secure)&lt;br /&gt;['T1017']: Use multi-factor authentication for accounts used with application deployment software.&lt;br /&gt;['T1072']: Ensure proper system and access isolation for critical network systems through use of multi-factor authentication.&lt;br /&gt;['T1021', 'T1021']: Use multi-factor authentication on remote service logons where possible.&lt;br /&gt;['T1133']: Use strong two-factor or multi-factor authentication for remote service accounts to mitigate an adversary's ability to leverage stolen credentials, but be aware of [Multi-Factor Authentication Interception](https://attack.mitre.org/techniques/T1111) techniques for some two-factor authentication implementations.&lt;br /&gt;['T1530']: Consider using multi-factor authentication to restrict access to resources and cloud storage APIs.(Citation: Amazon S3 Security, 2019)&lt;br /&gt;['T1213.003']: Use multi-factor authentication for logons to code repositories.&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Mitre ATT&amp;CK Mitigation M1032" url="https://attack.mitre.org/mitigations/M1032"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:01.506">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-M1030" name="Network Segmentation" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>Architect sections of the network to isolate critical systems, functions, or resources. Use physical and logical segmentation to prevent access to potentially sensitive systems and information. Use a DMZ to contain any internet-facing services that should not be exposed from the internal network. Configure separate virtual private cloud (VPC) instances to isolate critical cloud systems.&lt;br /&gt;&lt;p&gt;Detailed mitigations per technique:&lt;/p&gt;&lt;br /&gt;['T1565.003', 'T1565']: Identify critical business and system processes that may be targeted by adversaries and work to isolate and secure those systems against unauthorized access and tampering.&lt;br /&gt;['T1613', 'T1612', 'T1610', 'T1133', 'T1552.007']: Deny direct remote access to internal systems through the use of network proxies, gateways, and firewalls.&lt;br /&gt;['T1043']: Configure internal and external firewalls to block traffic using common ports that associate to network protocols that may be unnecessary for that particular network segment.&lt;br /&gt;['T1098', 'T1136.003', 'T1098.001']: Configure access controls and firewalls to limit access to critical systems and domain controllers. Most cloud environments support separate virtual private cloud (VPC) instances that enable further segmentation of cloud systems.&lt;br /&gt;['T1051']: Networks that allow for open development and testing of Web content and allow users to set up their own Web servers on the enterprise network may be particularly vulnerable if the systems and Web servers are not properly secured to limit unauthenticated network share access and network/system isolation&lt;br /&gt;['T1136', 'T1136.002']: Configure access controls and firewalls to limit access to domain controllers and systems used to create and manage accounts.&lt;br /&gt;['T1021.001', 'T1076']: Do not leave RDP accessible from the internet. Enable firewall rules to block RDP traffic between network security zones within a network.&lt;br /&gt;['T1190']: Segment externally facing servers and services from the rest of the network with a DMZ or on separate hosting infrastructure.&lt;br /&gt;['T1602.002']: Segregate SNMP traffic on a separate management network.(Citation: US-CERT TA17-156A SNMP Abuse 2017) &lt;br /&gt;['T1563.002']: Enable firewall rules to block RDP traffic between network security zones within a network.&lt;br /&gt;['T1489']: Operate intrusion detection, analysis, and response systems on a separate network from the production environment to lessen the chances that an adversary can see and interfere with critical response functions.&lt;br /&gt;['T1494']: Identify critical business and system processes that may be targeted by adversaries and work to isolate and secure those systems against unauthorized access and tampering. &lt;br /&gt;['T1175', 'T1021.003']: Enable Windows firewall, which prevents DCOM instantiation by default.&lt;br /&gt;['T1210']: Segment networks and systems appropriately to reduce access to critical systems and services to controlled methods.&lt;br /&gt;['T1048', 'T1048.002', 'T1048.003', 'T1048.001']: Follow best practices for network firewall configurations to allow only necessary ports and traffic to enter and exit the network.(Citation: TechNet Firewall Design)&lt;br /&gt;['T1094', 'T1095']: Properly configure firewalls and proxies to limit outgoing traffic to only necessary ports and through proper network gateway systems. Also ensure hosts are only provisioned to communicate over authorized interfaces.&lt;br /&gt;['T1482']: Employ network segmentation for sensitive domains.(Citation: Harmj0y Domain Trusts).&lt;br /&gt;['T1046']: Ensure proper network segmentation is followed to protect critical servers and devices.&lt;br /&gt;['T1563']: Enable firewall rules to block unnecessary traffic between network security zones within a network.&lt;br /&gt;['T1571', 'T1065']: Properly configure firewalls and proxies to limit outgoing traffic to only necessary ports for that particular network segment.&lt;br /&gt;['T1145']: Use separate infrastructure for managing critical systems to prevent overlap of credentials and permissions on systems that could be used as vectors for lateral movement.&lt;br /&gt;['T1072']: Ensure proper system isolation for critical network systems through use of firewalls.&lt;br /&gt;['T1557', 'T1557.001']: Network segmentation can be used to isolate infrastructure components that do not require broad network access. This may mitigate, or at least alleviate, the scope of AiTM activity.&lt;br /&gt;['T1602', 'T1602.001']: Segregate SNMP traffic on a separate management network.(Citation: US-CERT TA17-156A SNMP Abuse 2017)&lt;br /&gt;['T1028']: If the service is necessary, lock down critical enclaves with separate WinRM infrastructure and follow WinRM best practices on use of host firewalls to restrict WinRM access to allow communication only to/from specific devices. (Citation: NSA Spotting)&lt;br /&gt;['T1021.006']: If the service is necessary, lock down critical enclaves with separate WinRM infrastructure and follow WinRM best practices on use of host firewalls to restrict WinRM access to allow communication only to/from specific devices.(Citation: NSA Spotting)&lt;br /&gt;['T1017']: Ensure proper system and access isolation for critical network systems through use of firewalls, account privilege separation, group policy, and multi-factor authentication.&lt;br /&gt;['T1199']: Network segmentation can be used to isolate infrastructure components that do not require broad network access.&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Mitre ATT&amp;CK Mitigation M1030" url="https://attack.mitre.org/mitigations/M1030"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:00.373">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-DS0029" name="Network Traffic" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>Data transmitted across a network (ex: Web, DNS, Mail, File, etc.), that is either summarized (ex: Netflow) and/or captured as raw data in an analyzable format (ex: PCAP)&lt;br /&gt;&lt;p&gt;Detailed detections per technique:&lt;/p&gt;&lt;br /&gt;['T1499.003']: Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.&lt;br /&gt;['T1011.001']: Monitor network data for uncommon data flows., such as the usage of abnormal/unexpected protocols.&lt;br /&gt;['T1071']: Monitor and analyze traffic flows that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, or gratuitous or anomalous traffic patterns). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).&lt;br /&gt;['T1020']: Monitor and analyze network flows associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, or gratuitous or anomalous traffic patterns). Consider analyzing newly constructed network connections that are sent or received by untrusted hosts, unexpected hardware devices, or other uncommon data flows.&lt;br /&gt;['T1571']: Monitor network data flows for unexpected patterns and metadata that may be indicative of a mismatch between protocol and utilized port.&lt;br /&gt;['T1187']: Monitor for SMB traffic on TCP ports 139, 445 and UDP port 137 and WebDAV traffic attempting to exit the network to unknown external systems.If attempts are detected, then investigate endpoint data sources to find the root cause.&lt;br /&gt;['T1008']: Monitor network data for uncommon data flows, such as unexpected surges or other abnormal inbound/outbound patterns.&lt;br /&gt;['T1029']: Monitor for network traffic originating from unknown/unexpected hardware devices. Local network traffic metadata (such as source MAC addressing) as well as usage of network management protocols such as DHCP may be helpful in identifying hardware.&lt;br /&gt;['T1021.001']: Monitor network traffic for uncommon data flows that may use https://attack.mitre.org/techniques/T1078 to log into a computer using the Remote Desktop Protocol (RDP).&lt;br /&gt;['T1570']: Monitor for network traffic originating from unknown/unexpected hardware devices. Local network traffic metadata (such as source MAC addressing) as well as usage of network management protocols such as DHCP may be helpful in identifying hardware. &lt;br /&gt;['T1021.002']: Monitor network data for uncommon SMB data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.&lt;br /&gt;['T1105']: Monitor network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.&lt;br /&gt;['T1071.001']: Monitor for web traffic to/from known-bad or suspicious domains and analyze traffic flows that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, or gratuitous or anomalous traffic patterns). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).&lt;br /&gt;['T1205.001']: Monitor and analyze network flows associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, or gratuitous or anomalous traffic patterns). Consider analyzing newly constructed network connections that are sent or received by untrusted hosts, unexpcted hardware devices, or other uncommon data flows.&lt;br /&gt;['T1071.004']: Monitor for DNS traffic to/from known-bad or suspicious domains and analyze traffic flows that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, or gratuitous or anomalous traffic patterns). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).&lt;br /&gt;['T1568.001']: In general, detecting usage of fast flux DNS is difficult due to web traffic load balancing that services client requests quickly. In single flux cases only IP addresses change for static domain names. In double flux cases, nothing is static. Defenders such as domain registrars and service providers are likely in the best position for detection.&lt;br /&gt;['T1565']: Monitor for network traffic originating from unknown/unexpected hardware devices.&lt;br /&gt;['T1568.002']: Detecting dynamically generated domains can be challenging due to the number of different DGA algorithms, constantly evolving malware families, and the increasing complexity of the algorithms. There is a myriad of approaches for detecting a pseudo-randomly generated domain name, including using frequency analysis, Markov chains, entropy, proportion of dictionary words, ratio of vowels to other characters, and more. (Citation: Data Driven Security DGA) CDN domains may trigger these detections due to the format of their domain names. In addition to detecting a DGA domain based on the name, another more general approach for detecting a suspicious domain is to check for recently registered names or for rarely visited domains.
Machine learning approaches to detecting DGA domains have been developed and have seen success in applications. One approach is to use N-Gram methods to determine a randomness score for strings used in the domain name. If the randomness score is high, and the domains are not whitelisted (CDN, etc), then it may be determined if a domain is related to a legitimate host or DGA. (Citation: Pace University Detecting DGA May 2017) Another approach is to use deep learning to classify domains as DGA-generated(Citation: Elastic Predicting DGA)]&lt;br /&gt;['T1612']: Monitor for established network communications with anomalous IPs that have never been seen before in the environment that may indicate the download of malicious code.&lt;br /&gt;['T1557.003']: Monitor network traffic for anomalies associated with known AiTM behavior. Consider monitoring for modifications to system configuration files involved in shaping network traffic flow.&lt;br /&gt;['T1021']: Monitor network data for uncommon data flows that may be related to abuse of https://attack.mitre.org/techniques/T1078 to log into a service specifically designed to accept remote connections, such as RDP, telnet, SSH, and VNC.&lt;br /&gt;['T1602.001']: Monitor for newly constructed network connections that are sent or received by untrusted hosts or uncommon data flows. Consider analyzing packet contents to detect application layer protocols, leveraging SSL/TLS inspection for encrypted traffic, that do not follow the expected protocol standards and traffic flows(e.g. snmp traffic originating from unauthorized or untrusted hosts, signature detection for strings mapped to device configuration(s), and anomolies in snmp request(s))&lt;br /&gt;['T1218.003']: Monitor for newly constructed network connections that are sent or received by untrusted hosts, such as Sysmon Event 3 (Network connection) where Image contains CMSTP.exe and DestinationIP is external.&lt;br /&gt;['T1218']: Monitor for newly constructed network connections that are sent or received by untrusted hosts. &lt;br /&gt;['T1020.001']: Monitor for newly constructed network connections that are sent or received by abnormal or untrusted hosts. &lt;br /&gt;['T1020']: Monitor for newly constructed network connections associated with processes performing collection activity, especially those involving abnormal/untrusted hosts. &lt;br /&gt;['T1542.005']: Monitor for newly constructed network device configuration and system image against a known-good version to discover unauthorized changes to system boot, startup configuration, or the running OS. (Citation: Cisco IOS Software Integrity Assurance - Secure Boot) (Citation: Cisco IOS Software Integrity Assurance - Image File Verification) The same process can be accomplished through a comparison of the run-time memory, though this is non-trivial and may require assistance from the vendor.&lt;br /&gt;['T1021.004']: Monitor for newly constructed network connections (typically port 22) that may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to log into remote machines using Secure Shell (SSH). Use of SSH may be legitimate depending on the environment and how it's used. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior with SSH.&lt;br /&gt;['T1602.002']: Monitor for newly constructed network connections that are sent or received by untrusted hosts or uncommon data flows. Consider analyzing packet contents to detect application layer protocols, leveraging SSL/TLS inspection for encrypted traffic, that do not follow the expected protocol standards and traffic flows (e.g. unauthorized, gratuitous, or anomalous traffic patterns attempting to access network configuration content)&lt;br /&gt;['T1030']: Monitor for newly constructed network connections that are sent or received by untrusted hosts or uncommon data flows (e.g. unusual network communications or suspicious communications sending fixed size data packets at regular intervals as well as unusually long connection patterns). Consider analyzing packet contents to detect application layer protocols, leveraging SSL/TLS inspection for encrypted traffic, that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, protocol port mismatch, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments (e.g. monitor anomalies in use of files that do not normally initiate network connections or unusual connections initiated&lt;br /&gt;['T1047']: Monitor network traffic for WMI connections; the use of WMI in environments that do not typically use WMI may be suspect.&lt;br /&gt;['T1197']: Monitor for newly constructed network activity generated by BITS. BITS jobs use HTTP(S) and SMB for remote connections and are tethered to the creating user and will only function when that user is logged on (this rule applies even if a user attaches the job to a service account).&lt;br /&gt;['T1542']: Monitor for newly constructed network device configuration and system image against a known-good version to discover unauthorized changes to system boot, startup configuration, or the running OS. The same process can be accomplished through a comparison of the run-time memory, though this is non-trivial and may require assistance from the vendor.&lt;br /&gt;['T1021.001']: Monitor for newly constructed network connections (typically over port 3389) that may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to log into a computer using the Remote Desktop Protocol (RDP). The adversary may then perform actions as the logged-on user. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior with RDP.&lt;br /&gt;['T1008']: Monitor for newly constructed network connections that may use fallback or alternate communication channels if the primary channel is compromised or inaccessible in order to maintain reliable command and control and to avoid data transfer thresholds. Processes utilizing the network that do not normally have network communication or have never been seen before may be suspicious.&lt;br /&gt;['T1204']: Monitor for newly constructed web-based network connections that are sent to malicious or suspicious destinations (e.g. destinations attributed to phishing campaigns). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments (e.g. monitor anomalies in use of files that do not normally initiate network connections or unusual connections initiated by regsvr32.exe, rundll.exe, .SCF, HTA, MSI, DLLs, or msiexec.exe).&lt;br /&gt;['T1021']: Monitor for newly constructed network connections that may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to log into a service specifically designed to accept remote connections, such as RDP, telnet, SSH, and VNC. Monitor network connections involving common remote management protocols, such as ports tcp:3283 and tcp:5900, as well as ports tcp: 3389 and tcp:22 for remote login.&lt;br /&gt;['T1021.003']: Monitor for newly constructed network connections that may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to interact with remote machines using Distributed Component Object Model (DCOM). The adversary may then perform actions as the logged-on user. Monitor for any influxes or abnormal increases in DCOM related Distributed Computing Environment/Remote Procedure Call (DCE/RPC) traffic (typically over port 135).&lt;br /&gt;['T1021.006']: 
Monitor for newly constructed network connections using Windows Remote Management (WinRM), such as remote WMI connection attempts (typically over port 5985 when using HTTP and 5986 for HTTPS).&lt;br /&gt;['T1011.001']: Monitor for newly constructed network connections that may attempt to exfiltrate data over Bluetooth rather than the command and control channel. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.&lt;br /&gt;['T1105']: Monitor for newly constructed network connections that are sent or received by untrusted hosts or creating files on-system may be suspicious. Use of utilities, such as FTP, that does not normally occur may also be suspicious.&lt;br /&gt;['T1602']: Monitor for newly constructed network connections that are sent or received by untrusted hosts or uncommon data flows. Consider analyzing packet contents to detect application layer protocols, leveraging SSL/TLS inspection for encrypted traffic, that do not follow the expected protocol standards and traffic flows (e.g. unauthorized, gratuitous, or anomalous traffic patterns attempting to access configuration content)&lt;br /&gt;['T1021.002']: Monitor for newly constructed network connections (typically over ports 139 or 445), especially those that are sent or received by abnormal or untrusted hosts. Correlate these network connections with remote login events and associated SMB-related activity such as file transfers and remote process execution.&lt;br /&gt;['T1018']: Monitor for newly constructed network connections associated with pings/scans that may attempt to get a listing of other systems by IP address, hostname, or other logical identifier on a network that may be used for Lateral Movement from the current system.&lt;br /&gt;['T1011']: Monitor for newly constructed network connections that may attempt to exfiltrate data over a different network medium than the command and control channel. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.&lt;br /&gt;['T1021.005']: Monitor for newly constructed network connections that may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to remotely control machines using Virtual Network Computing (VNC). Use of VNC may be legitimate depending on the environment and how it's used. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior using VNC. &lt;br /&gt;['T1568.001']: Monitor for newly constructed network connections that may use Fast Flux DNS to hide a command and control channel behind an array of rapidly changing IP addresses linked to a single domain resolution.&lt;br /&gt;['T1176']: Monitor for newly constructed network connections that are sent or received by untrusted hosts.&lt;br /&gt;['T1003']: Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).&lt;br /&gt;['T1602']: Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g. unauthorized, gratuitous, or anomalous traffic patterns attempting to access configuration content)&lt;br /&gt;['T1071.003']: Monitor and analyze traffic patterns and packet inspection associated to protocol(s), leveraging SSL/TLS inspection for encrypted traffic, that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).&lt;br /&gt;['T1557']: Monitor network traffic for anomalies associated with known AiTM behavior.&lt;br /&gt;['T1491']: Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g. unauthorized, gratuitous, or anomalous traffic patterns attempting to access internal and external websites and services). Consider correlating with application monitoring for inidcation of unplanned service interrputions or unauthorized content changes.&lt;br /&gt;['T1589.002']: Monitor for suspicious network traffic that could be indicative of probing for email addresses and/or usernames, such as large/iterative quantities of authentication requests originating from a single source (especially if the source is known to be associated with an adversary/botnet). Analyzing web metadata may also reveal artifacts that can be attributed to potentially malicious activity, such as referer or user-agent string HTTP/S fields.&lt;br /&gt;['T1210']: Use deep packet inspection to look for artifacts of common exploit traffic, such as known payloads.&lt;br /&gt;['T1189']: Monitor for networks that solicits and obtains the configuration information of the queried device &lt;br /&gt;['T1566.001']: Monitor and analyze SSL/TLS traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)). Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.(Citation: Microsoft Anti Spoofing)(Citation: ACSC Email Spoofing)&lt;br /&gt;['T1070.005']: Monitoring for SMB traffic between systems may also be captured and decoded to look for related network share session and file transfer activity.&lt;br /&gt;['T1071.004']: Monitor and analyze traffic patterns and packet inspection associated to protocol(s), leveraging SSL/TLS inspection for DNSSEC traffic, that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).&lt;br /&gt;['T1565.002']: Monitor for networks that solicits and obtains the configuration information of the queried device. &lt;br /&gt;['T1105']: Monitor network traffic content for files and other potentially malicious content, especially data coming in from abnormal/unknown domain and IPs.&lt;br /&gt;['T1020']: Monitor network traffic content for evidence of data exfiltration, such as gratuitous or anomalous outbound traffic containing collected data. Consider correlation with process monitoring and command lines associated with collection and exfiltration.&lt;br /&gt;['T1589']: Monitor for suspicious network traffic that could be indicative of probing for user information, such as large/iterative quantities of authentication requests originating from a single source (especially if the source is known to be associated with an adversary/botnet). Analyzing web metadata may also reveal artifacts that can be attributed to potentially malicious activity, such as referer or user-agent string HTTP/S fields.&lt;br /&gt;['T1205']: Monitor and analyze network packet contents to detect application layer protocols, leveraging SSL/TLS inspection for encrypted traffic, that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, protocol port mismatch, anomalous syntax, or structure). Consider packet inspection for Wake-on-LAN magic packet consists of 6 bytes of &lt;code&gt;FF&lt;/code&gt; followed by sixteen repetitions of the target system's IEEE address. Seeing this string anywhere in a packet's payload may be indicative of a Wake-on-LAN attempt.(Citation: GitLab WakeOnLAN)&lt;br /&gt;['T1602.001']: Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flow (e.g. snmp traffic originating from unauthorized or untrusted hosts, signature detection for strings mapped to device configuration(s), and anomolies in snmp request(s))&lt;br /&gt;['T1557.002']: Monitor network traffic for unusual ARP traffic, gratuitous ARP replies may be suspicious. Consider collecting changes to ARP caches across endpoints for signs of ARP poisoning. For example, if multiple IP addresses map to a single MAC address, this could be an indicator that the ARP cache has been poisoned.&lt;br /&gt;['T1207']: Monitor and analyze network traffic associated with data replication (such as calls to DrsAddEntry, DrsReplicaAdd, and especially GetNCChanges) between DCs as well as to/from non DC hosts. (Citation: GitHub DCSYNCMonitor)(Citation: DCShadow Blog) DC replication will naturally take place every 15 minutes but can be triggered by an adversary or by legitimate urgent changes (ex: passwords).&lt;br /&gt;['T1190']: Use deep packet inspection to look for artifacts of common exploit traffic, such as SQL injection strings or known payloads.&lt;br /&gt;['T1001.002']: Monitor and analyze traffic patterns and packet inspection associated to protocol(s), leveraging SSL/TLS inspection for encrypted traffic, that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure).&lt;br /&gt;['T1612']: Monitor for network traffic associated with requests and/or downloads of container images, especially those that may be anomalous or known malicious.&lt;br /&gt;['T1602.002']: Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g. unauthorized, gratuitous, or anomalous traffic patterns attempting to access network configuration content)&lt;br /&gt;['T1204.001']: Monitor and analyze traffic patterns and packet inspection associated with web-based network connections that are sent to malicious or suspicious detinations (e.g. destinations attributed to phishing campaigns). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments (e.g. monitor anomalies in use of files that do not normally initiate network connections or unusual connections initiated by regsvr32.exe, rundll.exe, .SCF, HTA, MSI, DLLs, or msiexec.exe).&lt;br /&gt;['T1132.002']: Monitor for network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.&lt;br /&gt;['T1557.001']: Monitor for traffic on ports UDP 5355 and UDP 137 if LLMNR/NetBIOS is disabled by security policy.&lt;br /&gt;['T1595.003']: Monitor for suspicious network traffic that could be indicative of scanning, such as large quantities originating from a single source (especially if the source is known to be associated with an adversary/botnet).&lt;br /&gt;['T1557.003']: Monitor network traffic for suspicious/malicious behavior involving DHCP, such as changes in DNS and/or gateway parameters.&lt;br /&gt;['T1566.002']: Monitor and analyze SSL/TLS traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).&lt;br /&gt;['T1571']: Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used. https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf&lt;br /&gt;['T1566.003']: Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)). &lt;br /&gt;['T1187']: For internal traffic, monitor the workstation-to-workstation unusual (vs. baseline) SMB traffic. For many networks there should not be any, but it depends on how systems on the network are configured and where resources are located.&lt;br /&gt;['T1505']: Monitor and analyze traffic patterns and packet inspection associated to protocol(s), leveraging SSL/TLS inspection for encrypted traffic, that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)). (Citation: US-CERT Alert TA15-314A Web Shells)&lt;br /&gt;['T1570']: Monitor for unusual processes with internal network connections creating files on-system may be suspicious&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Mitre ATT&amp;CK Data Source DS0029" url="https://attack.mitre.org/datasources/DS0029"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:00.318">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-M1027" name="Password Policies" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>Set and enforce secure password policies for accounts.&lt;br /&gt;&lt;p&gt;Detailed mitigations per technique:&lt;/p&gt;&lt;br /&gt;['T1599.001', 'T1599', 'T1110.004', 'T1110.002', 'T1601', 'T1110.001', 'T1110.003']: Refer to NIST guidelines when creating password policies. (Citation: NIST 800-63-3)&lt;br /&gt;['T1078.004']: Ensure that cloud accounts, particularly privileged accounts, have complex, unique passwords across all systems on the network. Passwords and access keys should be rotated regularly. This limits the amount of time credentials can be used to access resources if a credential is compromised without your knowledge. Cloud service providers may track access key age to help audit and identify keys that may need to be rotated.(Citation: AWS - IAM Console Best Practices)&lt;br /&gt;['T1075']: Ensure that built-in and created local administrator accounts have complex, unique passwords.&lt;br /&gt;['T1556.005', 'T1556']: Ensure that &lt;code&gt;AllowReversiblePasswordEncryption&lt;/code&gt; property is set to disabled unless there are application requirements.(Citation: store_pwd_rev_enc)&lt;br /&gt;['T1552.002', 'T1214']: Do not store credentials within the Registry.&lt;br /&gt;['T1550.003', 'T1097']: Ensure that local administrator accounts have complex, unique passwords.&lt;br /&gt;['T1537']: Consider rotating access keys within a certain number of days to reduce the effectiveness of stolen credentials.&lt;br /&gt;['T1552.004', 'T1145']: Use strong passphrases for private keys to make cracking difficult.&lt;br /&gt;['T1558.002', 'T1558.003', 'T1558']: Ensure strong password length (ideally 25+ characters) and complexity for service accounts and that these passwords periodically expire.(Citation: AdSecurity Cracking Kerberos Dec 2015) Also consider using Group Managed Service Accounts or another third party product such as password vaulting.(Citation: AdSecurity Cracking Kerberos Dec 2015)&lt;br /&gt;['T1003.003', 'T1003.006', 'T1003.002', 'T1003.004', 'T1003', 'T1003.005', 'T1078.003', 'T1003.001']: Ensure that local administrator accounts have complex, unique passwords across all systems on the network.&lt;br /&gt;['T1078']: Applications and appliances that utilize default username and password should be changed immediately after the installation, and before deployment to a production environment. (Citation: US-CERT Alert TA13-175A Risks of Default Passwords on the Internet) When possible, applications that use SSH keys should be updated periodically and properly secured.&lt;br /&gt;['T1552']: Use strong passphrases for private keys to make cracking difficult. Do not store credentials within the Registry. Establish an organizational policy that prohibits password storage in files.&lt;br /&gt;['T1503', 'T1555.003']: Organizations may consider weighing the risk of storing credentials in web browsers. If web browser credential disclosure is a significant concern, technical controls, policy, and user training may be used to prevent storage of credentials in web browsers.&lt;br /&gt;['T1187']: Use strong passwords to increase the difficulty of credential hashes from being cracked if they are obtained.&lt;br /&gt;['T1558.004']: Ensure strong password length (ideally 25+ characters) and complexity for service accounts and that these passwords periodically expire. Also consider using Group Managed Service Accounts or another third party product such as password vaulting. (Citation: AdSecurity Cracking Kerberos Dec 2015)&lt;br /&gt;['T1072']: Verify that account credentials that may be used to access deployment systems are unique and not used throughout the enterprise network.&lt;br /&gt;['T1003.007', 'T1003.008']: Ensure that root accounts have complex, unique passwords across all systems on the network.&lt;br /&gt;['T1078.001']: Applications and appliances that utilize default username and password should be changed immediately after the installation, and before deployment to a production environment. (Citation: US-CERT Alert TA13-175A Risks of Default Passwords on the Internet)&lt;br /&gt;['T1555.001', 'T1142']: The password for the user's login keychain can be changed from the user's login password. This increases the complexity for an adversary because they need to know an additional password.&lt;br /&gt;['T1081', 'T1552.001']: Establish an organizational policy that prohibits password storage in files.&lt;br /&gt;['T1077', 'T1021.002']: Do not reuse local administrator account passwords across systems. Ensure password complexity and uniqueness such that the passwords cannot be cracked or guessed.&lt;br /&gt;['T1563.001', 'T1184']: Ensure SSH key pairs have strong passwords and refrain from using key-store technologies such as ssh-agent unless they are properly protected.&lt;br /&gt;['T1555']: The password for the user's login keychain can be changed from the user's login password. This increases the complexity for an adversary because they need to know an additional password.

Organizations may consider weighing the risk of storing credentials in password stores and web browsers. If system, software, or web browser credential disclosure is a significant concern, technical controls, policy, and user training may be used to prevent storage of credentials in improper locations.&lt;br /&gt;['T1110']: Refer to NIST guidelines when creating password policies.(Citation: NIST 800-63-3)&lt;br /&gt;['T1601.002', 'T1601.001']: Refer to NIST guidelines when creating password policies.  (Citation: NIST 800-63-3)&lt;br /&gt;['T1201']: Ensure only valid password filters are registered. Filter DLLs must be present in Windows installation directory (&lt;code&gt;C:\Windows\System32\&lt;/code&gt; by default) of a domain controller and/or local computer with a corresponding entry in &lt;code&gt;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Lsa\Notification Packages&lt;/code&gt;. (Citation: Microsoft Install Password Filter n.d)&lt;br /&gt;['T1208']: Ensure strong password length (ideally 25+ characters) and complexity for service accounts and that these passwords periodically expire. (Citation: AdSecurity Cracking Kerberos Dec 2015) Also consider using Group Managed Service Accounts or another third party product such as password vaulting. (Citation: AdSecurity Cracking Kerberos Dec 2015)&lt;br /&gt;['T1555.005']: Refer to NIST guidelines when creating password policies for master passwords.(Citation: NIST 800-63-3)&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Mitre ATT&amp;CK Mitigation M1027" url="https://attack.mitre.org/mitigations/M1027"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:01.477">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-M1026" name="Privileged Account Management" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>Manage the creation, modification, use, and permissions associated to privileged accounts, including SYSTEM and root.&lt;br /&gt;&lt;p&gt;Detailed mitigations per technique:&lt;/p&gt;&lt;br /&gt;['T1053.005', 'T1053.002']: Configure the Increase Scheduling Priority option to only allow the Administrators group the rights to schedule a priority process. This can be configured through GPO: Computer Configuration &gt; [Policies] &gt; Windows Settings &gt; Security Settings &gt; Local Policies &gt; User Rights Assignment: Increase scheduling priority. (Citation: TechNet Scheduling Priority)&lt;br /&gt;['T1206']: Setting the &lt;code&gt;timestamp_timeout&lt;/code&gt; to 0 will require the user to input their password every time &lt;code&gt;sudo&lt;/code&gt; is executed.&lt;br /&gt;['T1550.003']: Limit domain admin account permissions to domain controllers and limited servers. Delegate other admin functions to separate accounts.(Citation: ADSecurity AD Kerberos Attacks)&lt;br /&gt;['T1505.004']: Do not allow administrator accounts that have permissions to add IIS components to be used for day-to-day operations that may expose these permissions to potential adversaries and/or other unprivileged systems.&lt;br /&gt;['T1556.005']: Audit domain and local accounts as well as their permission levels routinely to look for situations that could allow an adversary to gain wide access by obtaining credentials of a privileged account.(Citation: TechNet Credential Theft)(Citation: TechNet Least Privilege) These audits should also include if default accounts have been enabled, or if new local accounts are created that have not be authorized. Follow best practices for design and administration of an enterprise network to limit privileged account use across administrative tiers.(Citation: Microsoft Securing Privileged Access)&lt;br /&gt;['T1035', 'T1569.002', 'T1569']: Ensure that permissions disallow services that run at a higher permissions level from being created or interacted with by a user with a lower permission level.&lt;br /&gt;['T1214', 'T1552.002', 'T1552']: If it is necessary that software must store credentials in the Registry, then ensure the associated accounts have limited permissions so they cannot be abused if obtained by an adversary.&lt;br /&gt;['T1505.002', 'T1505.001']: Do not allow administrator accounts that have permissions to add component software on these services to be used for day-to-day operations that may expose them to potential adversaries on unprivileged systems. &lt;br /&gt;['T1075', 'T1550', 'T1550.002']: Limit credential overlap across systems to prevent the damage of credential compromise and reduce the adversary's ability to perform Lateral Movement between systems.&lt;br /&gt;['T1017']: Grant access to application deployment systems only to a limited number of authorized administrators.  Verify that account credentials that may be used to access deployment systems are unique and not used throughout the enterprise network.&lt;br /&gt;['T1169']: By requiring a password, even if an adversary can get terminal access, they must know the password to run anything in the sudoers file.&lt;br /&gt;['T1047', 'T1084']: Prevent credential overlap across systems of administrator and privileged accounts. (Citation: FireEye WMI 2015)&lt;br /&gt;['T1208']: Limit service accounts to minimal required privileges, including membership in privileged groups such as Domain Administrators. (Citation: AdSecurity Cracking Kerberos Dec 2015)&lt;br /&gt;['T1098.003']: Ensure that all accounts use the least privileges they require.&lt;br /&gt;['T1077', 'T1021.002']: Deny remote use of local admin credentials to log into systems. Do not allow domain user accounts to be in the local Administrators group multiple systems.&lt;br /&gt;['T1222.001', 'T1222.002', 'T1222']: Ensure critical system files as well as those known to be abused by adversaries have restrictive permissions and are owned by an appropriately privileged account, especially if access is not required by users nor will inhibit system functionality.&lt;br /&gt;['T1556.003']: Limit access to the root account and prevent users from modifying PAM components through proper privilege separation (ex SELinux, grsecurity, AppArmor, etc.) and limiting Privilege Escalation opportunities.&lt;br /&gt;['T1021.006', 'T1028']: If the service is necessary, lock down critical enclaves with separate WinRM accounts and permissions.&lt;br /&gt;['T1599', 'T1601.001', 'T1601.002', 'T1556.004', 'T1599.001', 'T1601']: Restrict administrator accounts to as few individuals as possible, following least privilege principles.  Prevent credential overlap across systems of administrator and privileged accounts, particularly between network and non-network platforms, such as servers or endpoints.&lt;br /&gt;['T1003.008']: Follow best practices in restricting access to privileged accounts to avoid hostile programs from accessing such sensitive information.&lt;br /&gt;['T1072']: Grant access to application deployment systems only to a limited number of authorized administrators.&lt;br /&gt;['T1553.006']: Limit the usage of local administrator and domain administrator accounts to be used for day-to-day operations that may expose them to potential adversaries.&lt;br /&gt;['T1484']: Use least privilege and protect administrative access to the Domain Controller and Active Directory Federation Services (AD FS) server. Do not create service accounts with administrative privileges.&lt;br /&gt;['T1076', 'T1563.002', 'T1021.001']: Consider removing the local Administrators group from the list of groups allowed to log in through RDP.&lt;br /&gt;['T1547.006', 'T1215']: Limit access to the root account and prevent users from loading kernel modules and extensions through proper privilege separation and limiting Privilege Escalation opportunities.&lt;br /&gt;['T1134.003', 'T1134.002', 'T1134', 'T1134.001']: Limit permissions so that users and user groups cannot create tokens. This setting should be defined for the local system account only. GPO: Computer Configuration &gt; [Policies] &gt; Windows Settings &gt; Security Settings &gt; Local Policies &gt; User Rights Assignment: Create a token object. (Citation: Microsoft Create Token) Also define who can create a process level token to only the local and network service through GPO: Computer Configuration &gt; [Policies] &gt; Windows Settings &gt; Security Settings &gt; Local Policies &gt; User Rights Assignment: Replace a process level token.(Citation: Microsoft Replace Process Token)

Administrators should log in as a standard user but run their tools with administrator privileges using the built-in access token manipulation command &lt;code&gt;runas&lt;/code&gt;.(Citation: Microsoft runas)&lt;br /&gt;['T1542.001', 'T1019']: Prevent adversary access to privileged accounts or access necessary to perform this technique.&lt;br /&gt;['T1078.002']: Audit domain account permission levels routinely to look for situations that could allow an adversary to gain wide access by obtaining credentials of a privileged account. Do not put user or admin domain accounts in the local administrator groups across systems unless they are tightly controlled and use of accounts is segmented, as this is often equivalent to having a local administrator account with the same password on all systems. Follow best practices for design and administration of an enterprise network to limit privileged account use across administrative tiers. Limit credential overlap across systems to prevent access if account credentials are obtained.&lt;br /&gt;['T1190']: Use least privilege for service accounts will limit what permissions the exploited process gets on the rest of the system.&lt;br /&gt;['T1078.004']: Review privileged cloud account permission levels routinely to look for those that could allow an adversary to gain wide access.(Citation: TechNet Credential Theft)(Citation: TechNet Least Privilege) These reviews should also check if new privileged cloud accounts have been created that were not authorized.&lt;br /&gt;['T1078.003']: Audit local accounts permission levels routinely to look for situations that could allow an adversary to gain wide access by obtaining credentials of a privileged account. (Citation: TechNet Credential Theft) (Citation: TechNet Least Privilege) These audits should check if new local accounts are created that have not be authorized. Implementing LAPS may help prevent reuse of local administrator credentials across a domain.(Citation: Microsoft Remote Use of Local)&lt;br /&gt;['T1558.002', 'T1558.003']: Limit service accounts to minimal required privileges, including membership in privileged groups such as Domain Administrators.(Citation: AdSecurity Cracking Kerberos Dec 2015)&lt;br /&gt;['T1612', 'T1611', 'T1053.007', 'T1609']: Ensure containers are not running as root by default. In Kubernetes environments, consider defining a Pod Security Policy that prevents pods from running privileged containers.(Citation: Kubernetes Hardening Guide)&lt;br /&gt;['T1484.002']: Use the principal of least privilege and protect administrative access to domain trusts.&lt;br /&gt;['T1098.002', 'T1098', 'T1136', 'T1136.002']: Do not allow domain administrator accounts to be used for day-to-day operations that may expose them to potential adversaries on unprivileged systems.&lt;br /&gt;['T1003.003', 'T1003.002', 'T1003.001', 'T1003.005', 'T1003.006']: Do not put user or admin domain accounts in the local administrator groups across systems unless they are tightly controlled, as this is often equivalent to having a local administrator account with the same password on all systems. Follow best practices for design and administration of an enterprise network to limit privileged account use across administrative tiers.&lt;br /&gt;['T1542.005']: Use of Authentication, Authorization, and Accounting (AAA) systems will limit actions administrators can perform and provide a history of user actions to detect unauthorized use and abuse. TACACS+ can keep control over which commands administrators are permitted to use through the configuration of authentication and command authorization. (Citation: Cisco IOS Software Integrity Assurance - AAA) (Citation: Cisco IOS Software Integrity Assurance - TACACS)&lt;br /&gt;['T1088', 'T1548.002']: Remove users from the local administrator group on systems.&lt;br /&gt;['T1606', 'T1606.002']: Restrict permissions and access to the AD FS server to only originate from privileged access workstations.(Citation: FireEye ADFS)&lt;br /&gt;['T1559.001', 'T1559']: Modify Registry settings (directly or using Dcomcnfg.exe) in `HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\AppID\\{AppID_GUID}` associated with the process-wide security of individual COM applications.(Citation: Microsoft Process Wide Com Keys)

Modify Registry settings (directly or using Dcomcnfg.exe) in `HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Ole` associated with system-wide security defaults for all COM applications that do no set their own process-wide security.(Citation: Microsoft System Wide Com Keys) (Citation: Microsoft COM ACL)&lt;br /&gt;['T1136.003']: Do not allow privileged accounts to be used for day-to-day operations that may expose them to potential adversaries on unprivileged systems.&lt;br /&gt;['T1218']: Restrict execution of particularly vulnerable binaries to privileged accounts or groups that need to use it to lessen the opportunities for malicious usage.&lt;br /&gt;['T1184', 'T1563.001']: Do not allow remote access via SSH as root or other privileged accounts.&lt;br /&gt;['T1097']: Limit domain admin account permissions to domain controllers and limited servers. Delegate other admin functions to separate accounts. (Citation: ADSecurity AD Kerberos Attacks)&lt;br /&gt;['T1055']: Utilize Yama (ex: /proc/sys/kernel/yama/ptrace_scope) to mitigate ptrace based process injection by restricting the use of ptrace to privileged users only. Other mitigation controls involve the deployment of security kernel modules that provide advanced access control and process restrictions such as SELinux, grsecurity, and AppArmor.&lt;br /&gt;['T1051']: Networks that allow for open development and testing of Web content and allow users to set up their own Web servers on the enterprise network may be particularly vulnerable if the systems and Web servers are not properly secured to limit privileged account use and unauthenticated network share access.&lt;br /&gt;['T1548']: Remove users from the local administrator group on systems.

By requiring a password, even if an adversary can get terminal access, they must know the password to run anything in the sudoers file. Setting the timestamp_timeout to 0 will require the user to input their password every time sudo is executed.&lt;br /&gt;['T1556.001', 'T1078']: Audit domain and local accounts as well as their permission levels routinely to look for situations that could allow an adversary to gain wide access by obtaining credentials of a privileged account. (Citation: TechNet Credential Theft) (Citation: TechNet Least Privilege) These audits should also include if default accounts have been enabled, or if new local accounts are created that have not be authorized. Follow best practices for design and administration of an enterprise network to limit privileged account use across administrative tiers. (Citation: Microsoft Securing Privileged Access)&lt;br /&gt;['T1552.007']: Use the principle of least privilege for privileged accounts such as the service account in Kubernetes.&lt;br /&gt;['T1098.001']: Do not allow domain administrator or root accounts to be used for day-to-day operations that may expose them to potential adversaries on unprivileged systems.&lt;br /&gt;['T1525']: Limit permissions associated with creating and modifying platform images or containers based on the principle of least privilege.&lt;br /&gt;['T1053']: Configure the Increase Scheduling Priority option to only allow the Administrators group the rights to schedule a priority process. This can be can be configured through GPO: Computer Configuration &gt; [Policies] &gt; Windows Settings &gt; Security Settings &gt; Local Policies &gt; User Rights Assignment: Increase scheduling priority. (Citation: TechNet Scheduling Priority)&lt;br /&gt;['T1100']: Audit account and group permissions to ensure that accounts used to manage servers do not overlap with accounts and permissions of users in the internal network that could be acquired through Credential Access and used to log into the Web server and plant a Web shell or pivot from the Web server into the internal network. (Citation: US-CERT Alert TA15-314A Web Shells)&lt;br /&gt;['T1542.003', 'T1067']: Ensure proper permissions are in place to help prevent adversary access to privileged accounts necessary to install a bootkit.&lt;br /&gt;['T1562.009']: Restrict administrator accounts to as few individuals as possible, following least privilege principles, that may be abused to remotely boot a machine in safe mode.(Citation: CyberArk Labs Safe Mode 2016)&lt;br /&gt;['T1175']: Modify Registry settings (directly or using Dcomcnfg.exe) in &lt;code&gt;HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\AppID\\{AppID_GUID}&lt;/code&gt; associated with the process-wide security of individual COM applications.(Citation: Microsoft Process Wide Com Keys)

Modify Registry settings (directly or using Dcomcnfg.exe) in &lt;code&gt;HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Ole&lt;/code&gt; associated with system-wide security defaults for all COM applications that do no set their own process-wide security.(Citation: Microsoft System Wide Com Keys) (Citation: Microsoft COM ACL)&lt;br /&gt;['T1210']: Minimize permissions and access for service accounts to limit impact of exploitation.&lt;br /&gt;['T1003']: Windows:
Do not put user or admin domain accounts in the local administrator groups across systems unless they are tightly controlled, as this is often equivalent to having a local administrator account with the same password on all systems. Follow best practices for design and administration of an enterprise network to limit privileged account use across administrative tiers.(Citation: Microsoft Securing Privileged Access)

Linux:
Scraping the passwords from memory requires root privileges. Follow best practices in restricting access to privileged accounts to avoid hostile programs from accessing such sensitive regions of memory.&lt;br /&gt;['T1558.001']: Limit domain admin account permissions to domain controllers and limited servers. Delegate other admin functions to separate accounts.&lt;br /&gt;['T1546.003']: Prevent credential overlap across systems of administrator and privileged accounts.(Citation: FireEye WMI 2015)&lt;br /&gt;['T1059', 'T1059.001']: When PowerShell is necessary, restrict PowerShell execution policy to administrators. Be aware that there are methods of bypassing the PowerShell execution policy, depending on environment configuration.(Citation: Netspi PowerShell Execution Policy Bypass)&lt;br /&gt;['T1056.003']: Do not allow administrator accounts that have permissions to modify the Web content of organization login portals to be used for day-to-day operations that may expose them to potential adversaries on unprivileged systems.&lt;br /&gt;['T1501', 'T1543.002']: The creation and modification of systemd service unit files is generally reserved for administrators such as the Linux root user and other users with superuser privileges. &lt;br /&gt;['T1086']: When PowerShell is necessary, restrict PowerShell execution policy to administrators. Be aware that there are methods of bypassing the PowerShell execution policy, depending on environment configuration. (Citation: Netspi PowerShell Execution Policy Bypass) &lt;br /&gt;['T1542']: Ensure proper permissions are in place to help prevent adversary access to privileged accounts necessary to perform these actions&lt;br /&gt;['T1495']: Prevent adversary access to privileged accounts or access necessary to replace system firmware.&lt;br /&gt;['T1136.001']: Limit the usage of local administrator accounts to be used for day-to-day operations that may expose them to potential adversaries.&lt;br /&gt;['T1003.004']: Follow best practices for design and administration of an enterprise network to limit privileged account use across administrative tiers.(Citation: Tilbury Windows Credentials)&lt;br /&gt;['T1055.008']: Utilize Yama (ex: /proc/sys/kernel/yama/ptrace_scope) to mitigate ptrace based process injection by restricting the use of ptrace to privileged users only. Other mitigation controls involve the deployment of security kernel modules that provide advanced access control and process restrictions such as SELinux, grsecurity, and AppArmor. &lt;br /&gt;['T1003.007']: Follow best practices in restricting access to privileged accounts to avoid hostile programs from accessing sensitive information.&lt;br /&gt;['T1556']: Audit domain and local accounts as well as their permission levels routinely to look for situations that could allow an adversary to gain wide access by obtaining credentials of a privileged account. (Citation: TechNet Credential Theft) (Citation: TechNet Least Privilege) These audits should also include if default accounts have been enabled, or if new local accounts are created that have not be authorized. Follow best practices for design and administration of an enterprise network to limit privileged account use across administrative tiers. (Citation: Microsoft Securing Privileged Access)

Limit access to the root account and prevent users from modifying protected components through proper privilege separation (ex SELinux, grsecurity, AppArmor, etc.) and limiting Privilege Escalation opportunities.&lt;br /&gt;['T1563']: Do not allow remote access to services as a privileged account unless necessary.&lt;br /&gt;['T1053.006']: Limit access to the root account and prevent users from creating and/or modifying systemd timer unit files. &lt;br /&gt;['T1021.003']: Modify Registry settings (directly or using Dcomcnfg.exe) in `HKEY_LOCAL_MACHINE\SOFTWARE\Classes\AppID\{{AppID_GUID}}` associated with the process-wide security of individual COM applications.(Citation: Microsoft Process Wide Com Keys)

Modify Registry settings (directly or using Dcomcnfg.exe) in `HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Ole` associated with system-wide security defaults for all COM applications that do not set their own process-wide security.(Citation: Microsoft System Wide Com Keys) (Citation: Microsoft COM ACL)&lt;br /&gt;['T1059.008']: Use of Authentication, Authorization, and Accounting (AAA) systems will limit actions administrators can perform and provide a history of user actions to detect unauthorized use and abuse. TACACS+ can keep control over which commands administrators are permitted to use through the configuration of authentication and command authorization(Citation: Cisco IOS Software Integrity Assurance - AAA) (Citation: Cisco IOS Software Integrity Assurance - TACACS)&lt;br /&gt;['T1218.007']: Restrict execution of Msiexec.exe to privileged accounts or groups that need to use it to lessen the opportunities for malicious usage.&lt;br /&gt;['T1505']: Do not allow administrator accounts that have permissions to add component software on these services to be used for day-to-day operations that may expose them to potential adversaries on unprivileged systems.&lt;br /&gt;['T1548.003', 'T1548.003', 'T1548.003']: By requiring a password, even if an adversary can get terminal access, they must know the password to run anything in the sudoers file. Setting the &lt;code&gt;timestamp_timeout&lt;/code&gt; to 0 will require the user to input their password every time &lt;code&gt;sudo&lt;/code&gt; is executed.&lt;br /&gt;['T1558']: Limit domain admin account permissions to domain controllers and limited servers. Delegate other admin functions to separate accounts.

Limit service accounts to minimal required privileges, including membership in privileged groups such as Domain Administrators.(Citation: AdSecurity Cracking Kerberos Dec 2015)&lt;br /&gt;['T1218']: If these binaries are required for use, then restrict execution of them to privileged accounts or groups that need to use them to lessen the opportunities for malicious use.&lt;br /&gt;['T1055']: ###Linux

Utilize Yama to mitigate ptrace based process injection by restricting the use of ptrace to privileged users only. Other mitigation controls involve the deployment of security kernel modules that provide advanced access control and process restrictions such as SELinux, grsecurity, and AppArmor.&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Mitre ATT&amp;CK Mitigation M1026" url="https://attack.mitre.org/mitigations/M1026"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:01.471">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-M1021" name="Restrict Web-Based Content" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>Restrict use of certain websites, block downloads/attachments, block Javascript, restrict browser extensions, etc.&lt;br /&gt;&lt;p&gt;Detailed mitigations per technique:&lt;/p&gt;&lt;br /&gt;['T1102.002', 'T1102.001', 'T1102', 'T1102.003']: Web proxies can be used to enforce external network communication policy that prevents use of unauthorized external services.&lt;br /&gt;['T1566.002', 'T1192']: Determine if certain websites that can be used for spearphishing are necessary for business operations and consider blocking access if activity cannot be monitored well or if it poses a significant risk.&lt;br /&gt;['T1528']: Administrators can block end-user consent to OAuth applications, disabling users from authorizing third-party apps through OAuth 2.0 and forcing administrative consent for all requests. They can also block end-user registration of applications by their users, to reduce risk. A Cloud Access Security Broker can also be used to ban applications.

Azure offers a couple of enterprise policy settings in the Azure Management Portal that may help:

"Users -&gt; User settings -&gt; App registrations: Users can register applications" can be set to "no" to prevent users from registering new applications. 
"Enterprise applications -&gt; User settings -&gt; Enterprise applications: Users can consent to apps accessing company data on their behalf" can be set to "no" to prevent users from consenting to allow third-party multi-tenant applications&lt;br /&gt;['T1527']: Update corporate policies to restrict what types of third-party applications may be added to any online service or tool that is linked to the company's information, accounts or network (example: Google, Microsoft, Dropbox, Basecamp, GitHub). However, rather than providing high-level guidance on this, be extremely specific-include a list of pre-approved applications and deny all others not on the list. Administrators may also block end-user consent through administrative portals, such as the Azure Portal, disabling users from authorizing third-party apps through OAuth and forcing administrative consent.(Citation: Microsoft Azure AD Admin Consent)&lt;br /&gt;['T1223']: Consider blocking download/transfer and execution of potentially uncommon file types known to be used in adversary campaigns, such as CHM files.&lt;br /&gt;['T1218.001']: Consider blocking download/transfer and execution of potentially uncommon file types known to be used in adversary campaigns, such as CHM files&lt;br /&gt;['T1483', 'T1568.002']: In some cases a local DNS sinkhole may be used to help prevent DGA-based command and control at a reduced cost.&lt;br /&gt;['T1568']: In some cases a local DNS sinkhole may be used to help prevent behaviors associated with dynamic resolution.&lt;br /&gt;['T1204', 'T1204.001']: If a link is being visited by a user, block unknown or unused files in transit by default that should not be downloaded or by policy from suspicious sites as a best practice to prevent some vectors, such as .scr, .exe, .pif, .cpl, etc. Some download scanning devices can open and analyze compressed and encrypted formats, such as zip and rar that may be used to conceal malicious files.&lt;br /&gt;['T1189']: For malicious code served up through ads, adblockers can help prevent that code from executing in the first place.

Script blocking extensions can help prevent the execution of JavaScript that may commonly be used during the exploitation process.&lt;br /&gt;['T1566.003', 'T1194']: Determine if certain social media sites, personal webmail services, or other service that can be used for spearphishing is necessary for business operations and consider blocking access if activity cannot be monitored well or if it poses a significant risk.&lt;br /&gt;['T1193']: Block unknown or unused attachments by default that should not be transmitted over email as a best practice to prevent some vectors, such as .scr, .exe, .pif, .cpl, etc. Some email scanning devices can open and analyze compressed and encrypted formats, such as zip and rar that may be used to conceal malicious attachments in [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027).&lt;br /&gt;['T1567', 'T1567.002', 'T1567.001']: Web proxies can be used to enforce an external network communication policy that prevents use of unauthorized external services.&lt;br /&gt;['T1550.001']: Update corporate policies to restrict what types of third-party applications may be added to any online service or tool that is linked to the company's information, accounts or network (e.g., Google, Microsoft, Dropbox, Basecamp, GitHub). However, rather than providing high-level guidance on this, be extremely specific-include a list of per-approved applications and deny all others not on the list. Administrators may also block end-user consent through administrative portals, such as the Azure Portal, disabling users from authorizing third-party apps through OAuth and forcing administrative consent.(Citation: Microsoft Azure AD Admin Consent)&lt;br /&gt;['T1566']: Determine if certain websites or attachment types (ex: .scr, .exe, .pif, .cpl, etc.) that can be used for phishing are necessary for business operations and consider blocking access if activity cannot be monitored well or if it poses a significant risk.&lt;br /&gt;['T1059.005', 'T1059']: Script blocking extensions can help prevent the execution of scripts and HTA files that may commonly be used during the exploitation process. For malicious code served up through ads, adblockers can help prevent that code from executing in the first place.&lt;br /&gt;['T1059.007']: Script blocking extensions can help prevent the execution of JavaScript and HTA files that may commonly be used during the exploitation process. For malicious code served up through ads, adblockers can help prevent that code from executing in the first place.&lt;br /&gt;['T1566.001']: Block unknown or unused attachments by default that should not be transmitted over email as a best practice to prevent some vectors, such as .scr, .exe, .pif, .cpl, etc. Some email scanning devices can open and analyze compressed and encrypted formats, such as zip and rar that may be used to conceal malicious attachments.&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Mitre ATT&amp;CK Mitigation M1021" url="https://attack.mitre.org/mitigations/M1021"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:00.350">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-M1054" name="Software Configuration" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>Implement configuration changes to software (other than the operating system) to mitigate security risks associated to how the software operates.&lt;br /&gt;&lt;p&gt;Detailed mitigations per technique:&lt;/p&gt;&lt;br /&gt;['T1566.002', 'T1598', 'T1566', 'T1566.001', 'T1598.002', 'T1598.003']: Use anti-spoofing and email authentication mechanisms to filter messages based on validity checks of the sender domain (using SPF) and integrity of messages (using DKIM). Enabling these mechanisms within an organization (through policies such as DMARC) may enable recipients (intra-org and cross domain) to perform similar message filtering and validation.(Citation: Microsoft Anti Spoofing)(Citation: ACSC Email Spoofing)&lt;br /&gt;['T1550.004', 'T1539', 'T1506']: Configure browsers or tasks to regularly delete persistent cookies.&lt;br /&gt;['T1602.001', 'T1602']: Allowlist MIB objects and implement SNMP views.(Citation: Cisco Securing SNMP)&lt;br /&gt;['T1553.004', 'T1553']: HTTP Public Key Pinning (HPKP) is one method to mitigate potential [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) situations where and adversary uses a mis-issued or fraudulent certificate to intercept encrypted communications by enforcing use of an expected certificate. (Citation: Wikipedia HPKP)&lt;br /&gt;['T1137.002']: Create the Registry key used to execute it and set the permissions to "Read Control" to prevent easy access to the key without administrator permissions or requiring Privilege Escalation.(Citation: Palo Alto Office Test Sofacy)&lt;br /&gt;['T1559', 'T1559.002', 'T1173']: Consider disabling embedded files in Office programs, such as OneNote, that do not work with Protected View.(Citation: Enigma Reviving DDE Jan 2018)(Citation: GitHub Disable DDEAUTO Oct 2017)&lt;br /&gt;['T1535']: Cloud service providers may allow customers to deactivate unused regions.(Citation: CloudSploit - Unused AWS Regions)&lt;br /&gt;['T1562.006', 'T1054']: Consider automatically relaunching forwarding mechanisms at recurring intervals (ex: temporal, on-logon, etc.) as well as applying appropriate change management to firewall rules and other related system configurations.&lt;br /&gt;['T1130']: HTTP Public Key Pinning (HPKP) is one method to mitigate potential man-in-the-middle situations where and adversary uses a mis-issued or fraudulent certificate to intercept encrypted communications by enforcing use of an expected certificate. (Citation: Wikipedia HPKP)&lt;br /&gt;['T1602.002']: Allowlist MIB objects and implement SNMP views. Disable Smart Install (SMI) if not used.(Citation: Cisco Securing SNMP)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018) &lt;br /&gt;['T1504']: Avoid PowerShell profiles if not needed. Use the &lt;code&gt;-No Profile&lt;/code&gt; flag with when executing PowerShell scripts remotely to prevent local profiles and scripts from being executed. &lt;br /&gt;['T1546.013']: Avoid PowerShell profiles if not needed. Use the -No Profile flag with when executing PowerShell scripts remotely to prevent local profiles and scripts from being executed.&lt;br /&gt;['T1555.005']: Consider re-locking password managers after a short timeout to limit the time plaintext credentials live in memory from decrypted databases.&lt;br /&gt;['T1606']: Configure browsers/applications to regularly delete persistent web credentials (such as cookies).&lt;br /&gt;['T1606.001']: Configure browsers/applications to regularly delete persistent web cookies.&lt;br /&gt;['T1137']: For the Office Test method, create the Registry key used to execute it and set the permissions to "Read Control" to prevent easy access to the key without administrator permissions or requiring Privilege Escalation. (Citation: Palo Alto Office Test Sofacy)&lt;br /&gt;['T1562.009']: Ensure that endpoint defenses run in safe mode.(Citation: CyberArk Labs Safe Mode 2016)&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Mitre ATT&amp;CK Mitigation M1054" url="https://attack.mitre.org/mitigations/M1054"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:00.490">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-DS0002" name="User Account" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>A profile representing a user, device, service, or application used to authenticate and access resources&lt;br /&gt;&lt;p&gt;Detailed detections per technique:&lt;/p&gt;&lt;br /&gt;['T1110.002']:  Monitor for many failed authentication attempts across various accounts that may result from password spraying attempts. It is difficult to detect when hashes are cracked, since this is generally done outside the scope of the target network. (ex: Windows EID 4625 or 5379)&lt;br /&gt;['T1078.002']: Monitor for an attempt by a user to gain access to a network or computing resource, often by the use of domain authentication services, such as the System Security Services Daemon (sssd) on Linux&lt;br /&gt;['T1078.004']: Monitor the activity of cloud accounts to detect abnormal or malicious behavior, such as accessing information outside of the normal function of the account or account usage at atypical hours.&lt;br /&gt;['T1552.007']: It may be possible to detect adversary use of credentials they have obtained such as in [Valid Accounts](https://attack.mitre.org/techniques/T1078).&lt;br /&gt;['T1070']: Monitor for an attempt by a user to gain access to a network or computing resource, often by providing credentials that may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined malware.&lt;br /&gt;['T1550.003']: Audit all Kerberos authentication and credential use events and review for discrepancies. Unusual remote authentication events that correlate with other suspicious activity (such as writing and executing binaries) may indicate malicious activity.&lt;br /&gt;['T1621']: Monitor user account logs for suspicious events: unusual login attempt source location, mismatch in location of login attempt and smart device receiving 2FA/MFA request prompts, and high volume of repeated login attempts, all of which may indicate user's primary credentials have been compromised minus 2FA/MFA mechanism.&lt;br /&gt;['T1212']: Credential resources obtained through exploitation may be detectable in use if they are not normally used or seen.&lt;br /&gt;['T1110']:  Monitor for many failed authentication attempts across various accounts that may result from password spraying attempts. It is difficult to detect when hashes are cracked, since this is generally done outside the scope of the target network.&lt;br /&gt;['T1606.002']: Monitor for user authentication attempts, when requesting access tokens to services, that failed because of Conditional Access Policies (CAP). Some SAML tokens features, such as the location of a user, may not be as easy to claim.&lt;br /&gt;['T1207']: Investigate usage of Kerberos Service Principal Names (SPNs), especially those associated with services (beginning with "GC/") by computers not present in the DC organizational unit (OU). The SPN associated with the Directory Replication Service (DRS) Remote Protocol interface (GUID E3514235-4B06-11D1-AB04-00C04FC2DCD2) can be set without logging.(Citation: ADDSecurity DCShadow Feb 2018) A rogue DC must authenticate as a service using these two SPNs for the replication process to successfully complete.&lt;br /&gt;['T1552.005']: It may be possible to detect adversary use of credentials they have obtained such as in [Valid Accounts](https://attack.mitre.org/techniques/T1078).&lt;br /&gt;['T1078.001']: Monitor for an attempt by a user to gain access to a network or computing resource, often by providing credentials&lt;br /&gt;['T1550.002']: Monitor for user authentication attempts. From a classic Pass-The-Hash perspective, this technique uses a hash through the NTLMv1 / NTLMv2 protocol to authenticate against a compromised endpoint. This technique does not touch Kerberos. Therefore, NTLM LogonType 3 authentications that are not associated to a domain login and are not anonymous logins are suspicious. From an Over-Pass-The-Hash perspective, an adversary wants to exchange the hash for a Kerberos authentication ticket (TGT). One way to do this is by creating a sacrificial logon session with dummy credentials (LogonType 9) and then inject the hash into that session which triggers the Kerberos authentication process.&lt;br /&gt;['T1070.005']: Monitoring for Windows authentication logs are also useful in determining when authenticated network shares are established and by which account, and can be used to correlate network share activity to other events to investigate potentially malicious activity.&lt;br /&gt;['T1078']: Monitor for an attempt by a user that may obtain and abuse credentials of existing accounts as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. &lt;br /&gt;['T1070.003']: Monitor for an attempts by a user to gain access to a network or computing resource, often by providing credentials via remote terminal services, that do not have a corresponding entry in a command history file.&lt;br /&gt;['T1550']: Monitor for an attempt by a user to gain access to a network or computing resource, often by providing credentials that may use alternate authentication material, such as password hashes, Kerberos tickets, and application access tokens, in order to move laterally within an environment and bypass normal system access controls.&lt;br /&gt;['T1538']: Correlate other security systems with login information&lt;br /&gt;['T1552']: Monitor for an attempt by a user to gain access to a network or computing resource, often by providing credentials that may search compromised systems to find and obtain insecurely stored credentials.&lt;br /&gt;['T1564.002']: Monitor for newly constructed user accounts, such as userIDs under 500 on macOS, that may mask the presence of user accounts they create or modify.&lt;br /&gt;['T1136.003']: Monitor for newly constructed user accounts through the collection of usage logs from cloud user and administrator accounts to identify unusual activity in the creation of new accounts and assignment of roles to those accounts. Monitor for accounts assigned to admin roles that go over a certain threshold of known admins.&lt;br /&gt;['T1136.001']: Monitor for newly constructed user accounts through account audits to detect suspicious accounts that may have been created by an adversary. Collect data on account creation within a network or Windows Event ID 4720 (for when a user account is created on a Windows system and domain controller).&lt;br /&gt;['T1564']: Monitor for newly constructed user accounts that may attempt to hide artifacts associated with their behaviors to evade detection.&lt;br /&gt;['T1531']: Monitor for unexpected deletions of user accounts. Windows event logs may designate activity associated with an adversary's attempt to remove an account (ex: Event ID 4726 - A user account was deleted).

Alerting on these Event IDs may generate a high degree of false positives, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible.&lt;br /&gt;['T1098.001']: Monitor Azure Activity Logs for Service Principal and Application modifications. Monitor for the usage of APIs that create or import SSH keys, particularly by unexpected users or accounts such as the root account.&lt;br /&gt;['T1528']: Administrators should set up monitoring to trigger automatic alerts when policy criteria are met. For example, using a Cloud Access Security Broker (CASB), admins can create a "High severity app permissions" policy that generates alerts if apps request high severity permissions or send permissions requests for too many users.
Security analysts can hunt for malicious apps using the tools available in their CASB, identity provider, or resource provider (depending on platform.) For example, they can filter for apps that are authorized by a small number of users, apps requesting high risk permissions, permissions incongruous with the app's purpose, or apps with old "Last authorized" fields. A specific app can be investigated using an activity log displaying activities the app has performed, although some activities may be mis-logged as being performed by the user. App stores can be useful resources to further investigate suspicious apps.
Administrators can set up a variety of logs and leverage audit tools to monitor actions that can be conducted as a result of OAuth 2.0 access. For instance, audit reports enable admins to identify privilege escalation actions such as role creations or policy modifications, which could be actions performed after initial access.&lt;br /&gt;['T1531']: Monitor for changes made to user accounts for unexpected modification of properties, such as passwords or status (enabled/disabled). Windows event logs may designate activity associated with an adversary's attempt to remove access to an account:
Event ID 4723 - An attempt was made to change an account's password
Event ID 4724 - An attempt was made to reset an account's password
Event ID 4725 - A user account was disabled

Alerting on these Event IDs may generate a high degree of false positives, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible.&lt;br /&gt;['T1098.003']: Collect usage logs from cloud administrator accounts to identify unusual activity in the assignment of roles to those accounts. Monitor for accounts assigned to admin roles that go over a certain threshold of known admins.&lt;br /&gt;['T1098.005']: Monitor user accounts for new and suspicious device associations, such as those originating from unusual sources, occurring at unusual times, or following a suspicious login.(Citation: Microsoft DEV-0537) &lt;br /&gt;['T1098.002']: Monitor for unusual Exchange and Office 365 email account permissions changes that may indicate excessively broad permissions being granted to compromised accounts.&lt;br /&gt;['T1098']: Monitor events for changes to account objects and/or permissions on systems and the domain, such as event IDs 4738, 4728 and 4670. Monitor for modification of accounts in correlation with other suspicious activity. Changes may occur at unusual times or from unusual systems. Especially flag events where the subject and target accounts differ or that include additional flags such as changing a password without knowledge of the old password.

Monitor for unusual permissions changes that may indicate excessively broad permissions being granted to compromised accounts.&lt;br /&gt;['T1201']: Monitor for contextual data about an account that may attempt to access detailed information about the password policy used within an enterprise network or cloud environment.&lt;br /&gt;['T1134']: Monitor for contextual data about an account, which may include a username, user ID, environmental data, etc. that may modify access tokens to operate under a different user or system security context to perform actions and bypass access controls.&lt;br /&gt;['T1134.005']: Examine data in user's SID-History attributes&lt;br /&gt;['T1564.002']: Monitor for contextual data about an account, which may include a username, user ID, environmental data that may mask the presence of user accounts they create or modify. On macOS, identify users with an userID under 500 and the &lt;code&gt;Hide500Users&lt;/code&gt; key value in the &lt;code&gt;/Library/Preferences/com.apple.loginwindow&lt;/code&gt; plist file set to &lt;code&gt;TRUE&lt;/code&gt;.(Citation: Cybereason OSX Pirrit)&lt;br /&gt;['T1556.005']: Monitor Fine-Grained Password Policies and regularly audit user accounts and group settings.(Citation: dump_pwd_dcsync)&lt;br /&gt;['T1564']: Monitor for contextual data about an account, which may include a username, user ID, environmental data that may attempt to hide artifacts associated with their behaviors to evade detection.&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Mitre ATT&amp;CK Data Source DS0002" url="https://attack.mitre.org/datasources/DS0002"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:01.238">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-M1052" name="User Account Control" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>Configure Windows User Account Control to mitigate risk of adversaries obtaining elevated process access.&lt;br /&gt;&lt;p&gt;Detailed mitigations per technique:&lt;/p&gt;&lt;br /&gt;['T1574', 'T1574.005']: Turn off UAC's privilege elevation for standard users &lt;code&gt;[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System]&lt;/code&gt; to automatically deny elevation requests, add: &lt;code&gt;"ConsentPromptBehaviorUser"=dword:00000000&lt;/code&gt;. Consider enabling installer detection for all users by adding: &lt;code&gt;"EnableInstallerDetection"=dword:00000001&lt;/code&gt;. This will prompt for a password for installation and also log the attempt. To disable installer detection, instead add: &lt;code&gt;"EnableInstallerDetection"=dword:00000000&lt;/code&gt;. This may prevent potential elevation of privileges through exploitation during the process of UAC detecting the installer, but will allow the installation process to continue without being logged.  (Citation: Executable Installers are Vulnerable)&lt;br /&gt;['T1550.002']: Enable pass the hash mitigations to apply UAC restrictions to local accounts on network logon. The associated Registry key is located &lt;code&gt;HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System\LocalAccountTokenFilterPolicy&lt;/code&gt;.

Through GPO: Computer Configuration &gt; [Policies] &gt; Administrative Templates &gt; SCM: Pass the Hash Mitigations: Apply UAC restrictions to local accounts on network logons.(Citation: GitHub IAD Secure Host Baseline UAC Filtering)&lt;br /&gt;['T1044']: Turn off UAC's privilege elevation for standard users &lt;code&gt;[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System]&lt;/code&gt;to automatically deny elevation requests, add: &lt;code&gt;"ConsentPromptBehaviorUser"=dword:00000000&lt;/code&gt; (Citation: Seclists Kanthak 7zip Installer). Consider enabling installer detection for all users by adding: &lt;code&gt;"EnableInstallerDetection"=dword:00000001&lt;/code&gt;. This will prompt for a password for installation and also log the attempt. To disable installer detection, instead add: &lt;code&gt;"EnableInstallerDetection"=dword:00000000&lt;/code&gt;. This may prevent potential elevation of privileges through exploitation during the process of UAC detecting the installer, but will allow the installation process to continue without being logged.&lt;br /&gt;['T1075']: Enable pass the hash mitigations to apply UAC restrictions to local accounts on network logon. The associated Registry key is located &lt;code&gt;HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System\\LocalAccountTokenFilterPolicy&lt;/code&gt; Through GPO: Computer Configuration &gt; [Policies] &gt; Administrative Templates &gt; SCM: Pass the Hash Mitigations: Apply UAC restrictions to local accounts on network logons.(Citation: GitHub IAD Secure Host Baseline UAC Filtering)&lt;br /&gt;['T1546.011', 'T1138']: Changing UAC settings to "Always Notify" will give the user more visibility when UAC elevation is requested, however, this option will not be popular among users due to the constant UAC interruptions.&lt;br /&gt;['T1548', 'T1548.002']: Although UAC bypass techniques exist, it is still prudent to use the highest enforcement level for UAC when possible and mitigate bypass opportunities that exist with techniques such as [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1574/001).&lt;br /&gt;['T1184']: Ensure that all private keys are stored securely in locations where only the legitimate owner has access to with strong passwords and are rotated frequently.&lt;br /&gt;['T1199']: Properly manage accounts and permissions used by parties in trusted relationships to minimize potential abuse by the party and if the party is compromised by an adversary.&lt;br /&gt;['T1574.010']: Turn off UAC's privilege elevation for standard users &lt;code&gt;[HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System]&lt;/code&gt;to automatically deny elevation requests, add: &lt;code&gt;"ConsentPromptBehaviorUser"=dword:00000000&lt;/code&gt;. Consider enabling installer detection for all users by adding: &lt;code&gt;"EnableInstallerDetection"=dword:00000001&lt;/code&gt;. This will prompt for a password for installation and also log the attempt. To disable installer detection, instead add: &lt;code&gt;"EnableInstallerDetection"=dword:00000000&lt;/code&gt;. This may prevent potential elevation of privileges through exploitation during the process of UAC detecting the installer, but will allow the installation process to continue without being logged.(Citation: Executable Installers are Vulnerable)&lt;br /&gt;['T1088']: Although UAC bypass techniques exist, it is still prudent to use the highest enforcement level for UAC when possible and mitigate bypass opportunities that exist with techniques such as [DLL Search Order Hijacking](https://attack.mitre.org/techniques/T1038).&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Mitre ATT&amp;CK Mitigation M1052" url="https://attack.mitre.org/mitigations/M1052"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:00.482">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-M1018" name="User Account Management" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>Manage the creation, modification, use, and permissions associated to user accounts.&lt;br /&gt;&lt;p&gt;Detailed mitigations per technique:&lt;/p&gt;&lt;br /&gt;['T1580']: Limit permissions to discover cloud infrastructure in accordance with least privilege. Organizations should limit the number of users within the organization with an IAM role that has administrative privileges, strive to reduce all permanent privileged role assignments, and conduct periodic entitlement reviews on IAM users, roles and policies.&lt;br /&gt;['T1159', 'T1543.001']: Restrict user's abilities to create Launch Agents with group policy.&lt;br /&gt;['T1543']: Limit privileges of user accounts and groups so that only authorized administrators can interact with system-level process changes and service configurations.&lt;br /&gt;['T1040']: In cloud environments, ensure that users are not granted permissions to create or modify traffic mirrors unless this is explicitly required.&lt;br /&gt;['T1578']: Limit permissions for creating, deleting, and otherwise altering compute components in accordance with least privilege. Organizations should limit the number of users within the organization with an IAM role that has administrative privileges, strive to reduce all permanent privileged role assignments, and conduct periodic entitlement reviews on IAM users, roles and policies.(Citation: Mandiant M-Trends 2020)&lt;br /&gt;['T1004', 'T1547.004']: Limit the privileges of user accounts so that only authorized administrators can perform Winlogon helper changes.&lt;br /&gt;['T1072']: Ensure that any accounts used by third-party providers to access these systems are traceable to the third-party and are not used throughout the network or used by other third-party providers in the same environment. Ensure there are regular reviews of accounts provisioned to these systems to verify continued business need, and ensure there is governance to trace de-provisioning of access that is no longer required. Ensure proper system and access isolation for critical network systems through use of account privilege separation.&lt;br /&gt;['T1574.010', 'T1574.005']: Limit privileges of user accounts and groups so that only authorized administrators can interact with service changes and service binary target path locations. Deny execution from user directories such as file download directories and temp directories where able.&lt;br /&gt;['T1098.004']: In cloud environments, ensure that only users who explicitly require the permissions to update instance metadata or configurations can do so.&lt;br /&gt;['T1619']: Restrict granting of permissions related to listing objects in cloud storage to necessary accounts.&lt;br /&gt;['T1053']: Limit privileges of user accounts and remediate Privilege Escalation vectors so only authorized administrators can create scheduled tasks on remote systems.&lt;br /&gt;['T1089', 'T1562.001']: Ensure proper user permissions are in place to prevent adversaries from disabling or interfering with security services.&lt;br /&gt;['T1530']: Configure user permissions groups and roles for access to cloud storage.(Citation: Microsoft Azure Storage Security, 2019) Implement strict Identity and Access Management (IAM) controls to prevent access to storage solutions except for the applications, users, and services that require access.(Citation: Amazon S3 Security, 2019) Ensure that temporary access tokens are issued rather than permanent credentials, especially when access is being granted to entities outside of the internal security boundary.(Citation: Amazon  AWS Temporary Security Credentials)&lt;br /&gt;['T1050']: Limit privileges of user accounts and remediate Privilege Escalation vectors so only  authorized administrators can create new services.&lt;br /&gt;['T1610']: Enforce the principle of least privilege by limiting container dashboard access to only the necessary users.&lt;br /&gt;['T1197']: 
Consider limiting access to the BITS interface to specific users or groups.(Citation: Symantec BITS May 2007)&lt;br /&gt;['T1537']: Limit user account and IAM policies to the least privileges required. Consider using temporary credentials for accounts that are only valid for a certain period of time to reduce the effectiveness of compromised accounts.&lt;br /&gt;['T1562.008']: Configure default account policy to enable logging. Manage policies to ensure only necessary users have permissions to make changes to logging policies.&lt;br /&gt;['T1546.003', 'T1084']: By default, only administrators are allowed to connect remotely using WMI; restrict other users that are allowed to connect, or disallow all users from connecting remotely to WMI.&lt;br /&gt;['T1547.009', 'T1023']: Limit permissions for who can create symbolic links in Windows to appropriate groups such as Administrators and necessary groups for virtualization. This can be done through GPO: Computer Configuration &gt; [Policies] &gt; Windows Settings &gt; Security Settings &gt; Local Policies &gt; User Rights Assignment: Create symbolic links. (Citation: UCF STIG Symbolic Links)&lt;br /&gt;['T1578.003']: Limit permissions for deleting new instances in accordance with least privilege. Organizations should limit the number of users within the organization with an IAM role that has administrative privileges, strive to reduce all permanent privileged role assignments, and conduct periodic entitlement reviews on IAM users, roles and policies.(Citation: Mandiant M-Trends 2020)&lt;br /&gt;['T1051']: Ensure that permissions of the Web server process are only what is required by not using built-in accounts; instead, create specific accounts to limit unnecessary access or permissions overlap across multiple systems. (Citation: acunetix Server Secuirty) (Citation: NIST Server Security July 2008)&lt;br /&gt;['T1134', 'T1134.001', 'T1134.003']: An adversary must already have administrator level access on the local system to make full use of this technique; be sure to restrict users and accounts to the least privileges they require.  &lt;br /&gt;['T1163']: Limit privileges of user accounts so only authorized users can edit the rc.common file.&lt;br /&gt;['T1054', 'T1562.006']: Ensure event tracers/forwarders (Citation: Microsoft ETW May 2018), firewall policies, and other associated mechanisms are secured with appropriate permissions and access controls and cannot be manipulated by user accounts.&lt;br /&gt;['T1165']: Appropriate permissions should be applied such that only specific users can edit the startup items so that they can be leveraged for privilege escalation.&lt;br /&gt;['T1543.004', 'T1160', 'T1053.004']: Limit privileges of user accounts and remediate Privilege Escalation vectors so only authorized administrators can create new Launch Daemons.&lt;br /&gt;['T1047']: By default, only administrators are allowed to connect remotely using WMI. Restrict other users who are allowed to connect, or disallow all users to connect remotely to WMI.&lt;br /&gt;['T1609']: Enforce authentication and role-based access control on the container service to restrict users to the least privileges required.(Citation: Kubernetes Hardening Guide)&lt;br /&gt;['T1550.003', 'T1097']: Do not allow a user to be a local administrator for multiple systems.&lt;br /&gt;['T1574']: Limit privileges of user accounts and groups so that only authorized administrators can interact with service changes and service binary target path locations. Deny execution from user directories such as file download directories and temp directories where able.

Ensure that proper permissions and directory access control are set to deny users the ability to write files to the top-level directory &lt;code&gt;C:&lt;/code&gt; and system directories, such as &lt;code&gt;C:\Windows\&lt;/code&gt;, to reduce places where malicious files could be placed for execution.&lt;br /&gt;['T1078']: Regularly audit user accounts for activity and deactivate or remove any that are no longer needed.&lt;br /&gt;['T1053.007']: Limit privileges of user accounts and remediate privilege escalation vectors so only authorized administrators can create container orchestration jobs.&lt;br /&gt;['T1484.001', 'T1484']: Consider implementing WMI and security filtering to further tailor which users and computers a GPO will apply to.(Citation: Wald0 Guide to GPOs)(Citation: Microsoft WMI Filters)(Citation: Microsoft GPO Security Filtering)&lt;br /&gt;['T1547.006']: Use MDM to disable user's ability to install or approve kernel extensions, and ensure all approved kernel extensions are in alignment with policies specified in &lt;code&gt;com.apple.syspolicy.kernel-extension-policy&lt;/code&gt;.(Citation: Apple TN2459 Kernel Extensions)(Citation: MDMProfileConfigMacOS)
&lt;br /&gt;['T1563.002', 'T1021.001', 'T1076', 'T1563']: Limit remote user permissions if remote access is necessary.&lt;br /&gt;['T1569', 'T1569.001']: Prevent users from installing their own launch agents or launch daemons.&lt;br /&gt;['T1501', 'T1543.002']: Limit user access to system utilities such as 'systemctl' to only users who have a legitimate need.&lt;br /&gt;['T1213.002', 'T1213', 'T1213.001']: Enforce the principle of least-privilege. Consider implementing access control mechanisms that include both authentication and authorization.&lt;br /&gt;['T1031', 'T1489']: Limit privileges of user accounts and groups so that only authorized administrators can interact with service changes and service configurations.&lt;br /&gt;['T1021']: Limit the accounts that may use remote services. Limit the permissions for accounts that are at higher risk of compromise; for example, configure SSH so users can only run specific programs.&lt;br /&gt;['T1550.002', 'T1075']: Do not allow a domain user to be in the local administrator group on multiple systems.&lt;br /&gt;['T1562']: Ensure proper user permissions are in place to prevent adversaries from disabling or interfering with security/logging services.&lt;br /&gt;['T1547.013']: Limit privileges of user accounts so only authorized privileged users can create and modify XDG autostart entries.&lt;br /&gt;['T1157']: Prevent users from being able to write files to the search paths for applications.&lt;br /&gt;['T1034']: Ensure that proper permissions and directory access control are set to deny users the ability to write files to the top-level directory &lt;code&gt;C:&lt;/code&gt; and system directories, such as &lt;code&gt;C:\Windows\&lt;/code&gt;, to reduce places where malicious files could be placed for execution.&lt;br /&gt;['T1578.001']: Limit permissions for creating snapshots or backups in accordance with least privilege. Organizations should limit the number of users within the organization with an IAM role that has administrative privileges, strive to reduce all permanent privileged role assignments, and conduct periodic entitlement reviews on IAM users, roles and policies.(Citation: Mandiant M-Trends 2020)&lt;br /&gt;['T1606.002', 'T1606']: Ensure that user accounts with administrative rights follow best practices, including use of privileged access workstations, Just in Time/Just Enough Administration (JIT/JEA), and strong authentication. Reduce the number of users that are members of highly privileged Directory Roles.(Citation: Microsoft SolarWinds Customer Guidance)&lt;br /&gt;['T1134.002']: An adversary must already have administrator level access on the local system to make full use of this technique; be sure to restrict users and accounts to the least privileges they require.&lt;br /&gt;['T1053.005']: Limit privileges of user accounts and remediate Privilege Escalation vectors so only authorized administrators can create scheduled tasks on remote systems. &lt;br /&gt;['T1566.002']: Azure AD Administrators apply limitations upon the ability for users to grant consent to unfamiliar or unverified third-party applications. &lt;br /&gt;['T1110.004', 'T1110']: Proactively reset accounts that are known to be part of breached credentials either immediately, or after detecting bruteforce attempts.&lt;br /&gt;['T1185']: Since browser pivoting requires a high integrity process to launch from, restricting user permissions and addressing Privilege Escalation and [Bypass User Account Control](https://attack.mitre.org/techniques/T1548/002) opportunities can limit the exposure to this technique.&lt;br /&gt;['T1044']: Limit privileges of user accounts and groups so that only authorized administrators can interact with service changes and service binary target path locations. Deny execution from user directories such as file download directories and temp directories where able. (Citation: Seclists Kanthak 7zip Installer)&lt;br /&gt;['T1021.004']: Limit which user accounts are allowed to login via SSH.&lt;br /&gt;['T1562.007']: Ensure least privilege principles are applied to Identity and Access Management (IAM) security policies.(Citation: Expel IO Evil in AWS)&lt;br /&gt;['T1168']: Limit privileges of user accounts and remediate Privilege Escalation vectors so only authorized users can create scheduled jobs.&lt;br /&gt;['T1538']: Enforce the principle of least-privilege by limiting dashboard visibility to only the resources required. This may limit the discovery value of the dashboard in the event of a compromised account.&lt;br /&gt;['T1550']: Enforce the principle of least-privilege. Do not allow a domain user to be in the local administrator group on multiple systems.&lt;br /&gt;['T1053.002']: Limit privileges of user accounts and remediate Privilege Escalation vectors so only authorized administrators can create scheduled tasks on remote systems. In Linux environments, users account-level access to &lt;code&gt;[at](https://attack.mitre.org/software/S0110)&lt;/code&gt; can be managed using &lt;code&gt;at.allow&lt;/code&gt; and &lt;code&gt;at.deny&lt;/code&gt; files. Users listed in the at.allow are enabled to schedule actions using at, whereas users listed in at.deny file disabled from the utility.&lt;br /&gt;['T1053.003']: &lt;code&gt;cron&lt;/code&gt; permissions are controlled by &lt;code&gt;/etc/cron.allow and /etc/cron.deny&lt;/code&gt;. If there is a &lt;code&gt;cron.allow&lt;/code&gt; file, then the user or users that need to use &lt;code&gt;cron&lt;/code&gt; will need to be listed in the file. &lt;code&gt;cron.deny&lt;/code&gt; is used to explicitly disallow users from using cron. If neither files exist, then only the super user is allowed to run cron.&lt;br /&gt;['T1505.003']: Enforce the principle of least privilege by limiting privileges of user accounts so only authorized accounts can modify the web directory.(Citation: NSA and ASD Detect and Prevent Web Shells 2020)&lt;br /&gt;['T1552.007']: Enforce authentication and role-based access control on the container API to restrict users to the least privileges required.(Citation: Kubernetes Hardening Guide)&lt;br /&gt;['T1562.004']: Ensure proper user permissions are in place to prevent adversaries from disabling or modifying firewall settings.&lt;br /&gt;['T1213.003']: Enforce the principle of least-privilege. Consider implementing access control mechanisms that include both authentication and authorization for code repositories.&lt;br /&gt;['T1613']: Enforce the principle of least privilege by limiting dashboard visibility to only the required users.&lt;br /&gt;['T1547.012']: Limit user accounts that can load or unload device drivers by disabling &lt;code&gt;SeLoadDriverPrivilege&lt;/code&gt;.&lt;br /&gt;['T1543.003']: Limit privileges of user accounts and groups so that only authorized administrators can interact with service changes and service configurations. &lt;br /&gt;['T1528']: Enforce role-based access control to limit accounts to the least privileges they require. A Cloud Access Security Broker (CASB) can be used to set usage policies and manage user permissions on cloud applications to prevent access to application access tokens. In Kubernetes applications, set "automountServiceAccountToken: false" in the YAML specification of pods that do not require access to service account tokens.(Citation: Kubernetes Hardening Guide)&lt;br /&gt;['T1053.006']: Limit user access to system utilities such as 'systemctl' or 'systemd-run' to users who have a legitimate need.&lt;br /&gt;['T1152']: Prevent users from installing their own launch agents or launch daemons and instead require them to be pushed out by group policy.&lt;br /&gt;['T1578.002']: Limit permissions for creating new instances in accordance with least privilege. Organizations should limit the number of users within the organization with an IAM role that has administrative privileges, strive to reduce all permanent privileged role assignments, and conduct periodic entitlement reviews on IAM users, roles and policies.(Citation: Mandiant M-Trends 2020)&lt;br /&gt;['T1087.004']: Limit permissions to discover cloud accounts in accordance with least privilege. Organizations should limit the number of users within the organization with an IAM role that has administrative privileges, strive to reduce all permanent privileged role assignments, and conduct periodic entitlement reviews on IAM users, roles and policies.&lt;br /&gt;['T1505']: Enforce the principle of least privilege by limiting privileges of user accounts so only authorized accounts can modify and/or add server software components.(Citation: NSA and ASD Detect and Prevent Web Shells 2020)&lt;br /&gt;['T1562.002']: Ensure proper user permissions are in place to prevent adversaries from disabling or interfering with logging.&lt;br /&gt;['T1059.008']: Use of Authentication, Authorization, and Accounting (AAA) systems will limit actions users can perform and provide a history of user actions to detect unauthorized use and abuse. Ensure least privilege principles are applied to user accounts and groups so that only authorized users can perform configuration changes. (Citation: Cisco IOS Software Integrity Assurance - AAA)&lt;br /&gt;['T1574.012']: Limit the privileges of user accounts so that only authorized administrators can edit system environment variables.&lt;br /&gt;['T1078.004']: Periodically review user accounts and remove those that are inactive or unnecessary. Limit the ability for user accounts to create additional accounts.&lt;br /&gt;['T1053.001']: Users account-level access to &lt;code&gt;[at](https://attack.mitre.org/software/S0110)&lt;/code&gt; can be managed using &lt;code&gt;/etc/at.allow&lt;/code&gt; and &lt;code&gt;/etc/at.deny&lt;/code&gt; files. Users listed in the at.allow are enabled to schedule actions using at, whereas users listed in at.deny file disabled from the utility.&lt;br /&gt;['T1162']: Restrict users from being able to create their own login items.&lt;br /&gt;['T1078']: Ensure users and user groups have appropriate permissions for their roles through Identity and Access Management (IAM) controls. Configure user permissions, groups, and roles for access to cloud-based systems as well. Implement strict IAM controls to prevent access to systems except for the applications, users, and services that require access. Consider using temporary credentials that are only good for a certain period of time in cloud environments to reduce the effectiveness of compromised accounts.&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Mitre ATT&amp;CK Mitigation M1018" url="https://attack.mitre.org/mitigations/M1018"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:00.342">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-M1017" name="User Training" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>Train users to be aware of access or manipulation attempts by an adversary to reduce the risk of successful spearphishing, social engineering, and other techniques that involve user interaction.&lt;br /&gt;&lt;p&gt;Detailed mitigations per technique:&lt;/p&gt;&lt;br /&gt;['T1566.003']: Users can be trained to identify social engineering techniques and spearphishing messages with malicious links.&lt;br /&gt;['T1204', 'T1204.001', 'T1204.002']: Use user training as a way to bring awareness to common phishing and spearphishing techniques and how to raise suspicion for potentially malicious events.&lt;br /&gt;['T1213.003']: Develop and publish policies that define acceptable information to be stored in code repositories.&lt;br /&gt;['T1164']: Holding the Shift key while logging in prevents apps from opening automatically. (Citation: Re-Open windows on Mac)&lt;br /&gt;['T1552', 'T1081', 'T1552.001']: Ensure that developers and system administrators are aware of the risk associated with having plaintext passwords in software configuration files that may be left on endpoint systems or servers.&lt;br /&gt;['T1213']: Develop and publish policies that define acceptable information to be stored in repositories.&lt;br /&gt;['T1598', 'T1598.003', 'T1598.001', 'T1598.002']: Users can be trained to identify social engineering techniques and spearphishing attempts.&lt;br /&gt;['T1213.001']: Develop and publish policies that define acceptable information to be stored in Confluence repositories.&lt;br /&gt;['T1078.002', 'T1078.004', 'T1078']: Applications may send push notifications to verify a login as a form of multi-factor authentication (MFA). Train users to only accept valid push notifications and to report suspicious push notifications.&lt;br /&gt;['T1557.002', 'T1557']: Train users to be suspicious about certificate errors. Adversaries may use their own certificates in an attempt to intercept HTTPS traffic. Certificate errors may arise when the application's certificate does not match the one expected by the host.&lt;br /&gt;['T1003.005', 'T1003', 'T1003.003', 'T1003.001', 'T1003.002', 'T1003.004']: Limit credential overlap across accounts and systems by training users and administrators not to use the same password for multiple accounts.&lt;br /&gt;['T1185']: Close all browser sessions regularly and when they are no longer needed.&lt;br /&gt;['T1072']: Have a strict approval policy for use of deployment systems.&lt;br /&gt;['T1204.003']: Train users to be aware of the existence of malicious images and how to avoid deploying instances and containers from them.&lt;br /&gt;['T1192', 'T1194']: Users can be trained to identify social engineering techniques and spearphishing emails with malicious links.&lt;br /&gt;['T1036.007']: Train users to look for double extensions in filenames, and in general use training as a way to bring awareness to common phishing and spearphishing techniques and how to raise suspicion for potentially malicious events.&lt;br /&gt;['T1111']: Remove smart cards when not in use.&lt;br /&gt;['T1528']: Users need to be trained to not authorize third-party applications they don't recognize. The user should pay particular attention to the redirect URL: if the URL is a misspelled or convoluted sequence of words related to an expected service or SaaS application, the website is likely trying to spoof a legitimate service. Users should also be cautious about the permissions they are granting to apps. For example, offline access and access to read emails should excite higher suspicions because adversaries can utilize SaaS APIs to discover credentials and other sensitive communications.&lt;br /&gt;['T1221']: Train users to identify social engineering techniques and spearphishing emails that could be used to deliver malicious documents.&lt;br /&gt;['T1056.002']: Use user training as a way to bring awareness and raise suspicion for potentially malicious events and dialog boxes (ex: Office documents prompting for credentials).&lt;br /&gt;['T1176']: 
Close out all browser sessions when finished using them to prevent any potentially malicious extensions from continuing to run.&lt;br /&gt;['T1566.001', 'T1193']: Users can be trained to identify social engineering techniques and spearphishing emails.&lt;br /&gt;['T1213.002']: Develop and publish policies that define acceptable information to be stored in SharePoint repositories.&lt;br /&gt;['T1566.002']: Users can be trained to identify social engineering techniques and spearphishing emails with malicious links which includes phishing for consent with OAuth 2.0 &lt;br /&gt;['T1566']: Users can be trained to identify social engineering techniques and phishing emails.&lt;br /&gt;['T1547.007']: Holding the Shift key while logging in prevents apps from opening automatically.(Citation: Re-Open windows on Mac)&lt;br /&gt;['T1141']: Use user training as a way to bring awareness and raise suspicion for potentially malicious events (ex: Office documents prompting for credentials).&lt;br /&gt;['T1539']: Train users to identify aspects of phishing attempts where they're asked to enter credentials into a site that has the incorrect domain for the application they are logging into.&lt;br /&gt;['T1621']: Train users to only accept 2FA/MFA requests from login attempts they initiated, to review source location of the login attempt prompting the 2FA/MFA requests, and to report suspicious/unsolicited prompts.&lt;br /&gt;['T1547.011']: Holding the shift key during login prevents apps from opening automatically.(Citation: Re-Open windows on Mac)&lt;br /&gt;['T1162']: Holding the shift key during login prevents apps from opening automatically. (Citation: Re-Open windows on Mac)&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Mitre ATT&amp;CK Mitigation M1017" url="https://attack.mitre.org/mitigations/M1017"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:00.333">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="phishing" name="Phishing" desc="" library="">
          <threats>
            <threat ref="T-T1566.002" name="Spearphishing Link" state="Expose" source="MANUAL" edited="false" owner="JamesRabe" library="" editable="true">
              <desc>Adversaries may send spearphishing emails with a malicious link in an attempt to gain access to victim systems. Spearphishing with a link is a specific variant of spearphishing. It is different from other forms of spearphishing in that it employs the use of links to download malware contained in email, instead of attaching malicious files to the email itself, to avoid defenses that may inspect email attachments. Spearphishing may also involve social engineering techniques, such as posing as a trusted source.&lt;br&gt;&lt;br&gt;All forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this case, the malicious emails contain links. Generally, the links will be accompanied by social engineering text and require the user to actively click or copy and paste a URL into a browser, leveraging [User Execution](https://attack.mitre.org/techniques/T1204). The visited website may compromise the web browser using an exploit, or the user will be prompted to download applications, documents, zip files, or even executables depending on the pretext for the email in the first place. Adversaries may also include links that are intended to interact directly with an email reader, including embedded images intended to exploit the end system directly or verify the receipt of an email (i.e. web bugs/web beacons). &lt;br&gt;&lt;br&gt;Adversaries may also utilize links to perform consent phishing, typically with OAuth 2.0 request URLs that when accepted by the user provide permissions/access for malicious applications, allowing adversaries to [Steal Application Access Token](https://attack.mitre.org/techniques/T1528)s.(Citation: Trend Micro Pawn Storm OAuth 2017) These stolen access tokens allow the adversary to perform various actions on behalf of the user via API calls. (Citation: Microsoft OAuth 2.0 Consent Phishing 2021)&lt;br&gt;&lt;br&gt;URL inspection within email (including expanding shortened links) can help detect links leading to known malicious sites as well as links redirecting to adversary infrastructure based by upon suspicious OAuth patterns with unusual TLDs.(Citation: Microsoft OAuth 2.0 Consent Phishing 2021). Detonation chambers can be used to detect these links and either automatically go to these sites to determine if they're potentially malicious, or wait and capture the content if a user visits the link.&lt;br&gt;&lt;br&gt;Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.(Citation: Microsoft Anti Spoofing)(Citation: ACSC Email Spoofing)&lt;br&gt;&lt;br&gt;Because this technique usually involves user interaction on the endpoint, many of the possible detections take place once [User Execution](https://attack.mitre.org/techniques/T1204) occurs.</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references>
                <reference name="ACSC Email Spoofing" url="https://www.cyber.gov.au/sites/default/files/2019-03/spoof_email_sender_policy_framework.pdf"/>
                <reference name="CAPEC-163" url="https://capec.mitre.org/data/definitions/163.html"/>
                <reference name="Microsoft Anti Spoofing" url="https://docs.microsoft.com/en-us/microsoft-365/security/office-365-security/anti-spoofing-protection?view=o365-worldwide"/>
                <reference name="Microsoft OAuth 2.0 Consent Phishing 2021" url="https://www.microsoft.com/security/blog/2021/07/14/microsoft-delivers-comprehensive-solution-to-battle-rise-in-consent-phishing-emails/"/>
                <reference name="Mitre ATT&amp;CK Technique T1566.002" url="https://attack.mitre.org/techniques/T1566/002"/>
                <reference name="Trend Micro Pawn Storm OAuth 2017" url="https://blog.trendmicro.com/trendlabs-security-intelligence/pawn-storm-abuses-open-authentication-advanced-social-engineering-attacks"/>
              </references>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-DS0015" mitigation="16"/>
                <countermeasure ref="C-DS0022" mitigation="12"/>
                <countermeasure ref="C-DS0029" mitigation="12"/>
                <countermeasure ref="C-M1017" mitigation="12"/>
                <countermeasure ref="C-M1018" mitigation="12"/>
                <countermeasure ref="C-M1021" mitigation="12"/>
                <countermeasure ref="C-M1047" mitigation="12"/>
                <countermeasure ref="C-M1054" mitigation="12"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="trusted-relationships" name="Trusted Relationships" desc="" library="">
          <threats>
            <threat ref="T-T1199" name="Trusted Relationship" state="Expose" source="MANUAL" edited="false" owner="JamesRabe" library="" editable="true">
              <desc>Adversaries may breach or otherwise leverage organizations who have access to intended victims. Access through trusted third party relationship exploits an existing connection that may not be protected or receives less scrutiny than standard mechanisms of gaining access to a network.&lt;br&gt;&lt;br&gt;Organizations often grant elevated access to second or third-party external providers in order to allow them to manage internal systems as well as cloud-based environments. Some examples of these relationships include IT services contractors, managed security providers, infrastructure contractors (e.g. HVAC, elevators, physical security). The third-party provider's access may be intended to be limited to the infrastructure being maintained, but may exist on the same network as the rest of the enterprise. As such, [Valid Accounts](https://attack.mitre.org/techniques/T1078) used by the other party for access to internal network systems may be compromised and used.(Citation: CISA IT Service Providers)&lt;br&gt;&lt;br&gt;Establish monitoring for activity conducted by second and third party providers and other trusted entities that may be leveraged as a means to gain access to the network. Depending on the type of relationship, an adversary may have access to significant amounts of information about the target before conducting an operation, especially if the trusted relationship is based on IT services. Adversaries may be able to act quickly towards an objective, so proper monitoring for behavior related to Credential Access, Lateral Movement, and Collection will be important to detect the intrusion.</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references>
                <reference name="CISA IT Service Providers" url="https://us-cert.cisa.gov/APTs-Targeting-IT-Service-Provider-Customers"/>
                <reference name="Mitre ATT&amp;CK Technique T1199" url="https://attack.mitre.org/techniques/T1199"/>
              </references>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-DS0015" mitigation="25"/>
                <countermeasure ref="C-DS0028" mitigation="25"/>
                <countermeasure ref="C-M1030" mitigation="25"/>
                <countermeasure ref="C-M1052" mitigation="25"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="valid-accounts" name="Valid Accounts" desc="" library="">
          <threats>
            <threat ref="T-T1078.004" name="Cloud Accounts" state="Expose" source="MANUAL" edited="false" owner="JamesRabe" library="" editable="true">
              <desc>Adversaries may obtain and abuse credentials of a cloud account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Cloud accounts are those created and configured by an organization for use by users, remote support, services, or for administration of resources within a cloud service provider or SaaS application. In some cases, cloud accounts may be federated with traditional identity management system, such as Window Active Directory.(Citation: AWS Identity Federation)(Citation: Google Federating GC)(Citation: Microsoft Deploying AD Federation)&lt;br&gt;&lt;br&gt;Compromised credentials for cloud accounts can be used to harvest sensitive data from online storage accounts and databases. Access to cloud accounts can also be abused to gain Initial Access to a network by abusing a [Trusted Relationship](https://attack.mitre.org/techniques/T1199). Similar to [Domain Accounts](https://attack.mitre.org/techniques/T1078/002), compromise of federated cloud accounts may allow adversaries to more easily move laterally within an environment.&lt;br&gt;&lt;br&gt;Once a cloud account is compromised, an adversary may perform [Account Manipulation](https://attack.mitre.org/techniques/T1098) - for example, by adding [Additional Cloud Roles](https://attack.mitre.org/techniques/T1098/003) - to maintain persistence and potentially escalate their privileges.&lt;br&gt;&lt;br&gt;Monitor the activity of cloud accounts to detect abnormal or malicious behavior, such as accessing information outside of the normal function of the account or account usage at atypical hours.</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references>
                <reference name="AWS Identity Federation" url="https://aws.amazon.com/identity/federation/"/>
                <reference name="Google Federating GC" url="https://cloud.google.com/solutions/federating-gcp-with-active-directory-introduction"/>
                <reference name="Microsoft Deploying AD Federation" url="https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/deployment/how-to-connect-fed-azure-adfs"/>
                <reference name="Mitre ATT&amp;CK Technique T1078.004" url="https://attack.mitre.org/techniques/T1078/004"/>
              </references>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-DS0002" mitigation="16"/>
                <countermeasure ref="C-DS0028" mitigation="14"/>
                <countermeasure ref="C-M1017" mitigation="14"/>
                <countermeasure ref="C-M1018" mitigation="14"/>
                <countermeasure ref="C-M1026" mitigation="14"/>
                <countermeasure ref="C-M1027" mitigation="14"/>
                <countermeasure ref="C-M1032" mitigation="14"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="T-T1078.001" name="Default Accounts" state="Expose" source="MANUAL" edited="false" owner="JamesRabe" library="" editable="true">
              <desc>Adversaries may obtain and abuse credentials of a default account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Default accounts are those that are built-into an OS, such as the Guest or Administrator accounts on Windows systems. Default accounts also include default factory/provider set accounts on other types of systems, software, or devices, including the root user account in AWS and the default service account in Kubernetes.(Citation: Microsoft Local Accounts Feb 2019)(Citation: AWS Root User)(Citation: Threat Matrix for Kubernetes)&lt;br&gt;&lt;br&gt;Default accounts are not limited to client machines, rather also include accounts that are preset for equipment such as network devices and computer applications whether they are internal, open source, or commercial. Appliances that come preset with a username and password combination pose a serious threat to organizations that do not change it post installation, as they are easy targets for an adversary. Similarly, adversaries may also utilize publicly disclosed or stolen [Private Keys](https://attack.mitre.org/techniques/T1552/004) or credential materials to legitimately connect to remote environments via [Remote Services](https://attack.mitre.org/techniques/T1021).(Citation: Metasploit SSH Module)&lt;br&gt;&lt;br&gt;Monitor whether default accounts have been activated or logged into. These audits should also include checks on any appliances and applications for default credentials or SSH keys, and if any are discovered, they should be updated immediately.</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references>
                <reference name="AWS Root User" url="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_root-user.html"/>
                <reference name="CAPEC-70" url="https://capec.mitre.org/data/definitions/70.html"/>
                <reference name="Metasploit SSH Module" url="https://github.com/rapid7/metasploit-framework/tree/master/modules/exploits/linux/ssh"/>
                <reference name="Microsoft Local Accounts Feb 2019" url="https://docs.microsoft.com/en-us/windows/security/identity-protection/access-control/local-accounts"/>
                <reference name="Mitre ATT&amp;CK Technique T1078.001" url="https://attack.mitre.org/techniques/T1078/001"/>
                <reference name="Threat Matrix for Kubernetes" url="https://www.microsoft.com/security/blog/2020/04/02/attack-matrix-kubernetes/"/>
              </references>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-DS0002" mitigation="34"/>
                <countermeasure ref="C-DS0028" mitigation="33"/>
                <countermeasure ref="C-M1027" mitigation="33"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="f60c6c92-2275-432f-9964-347cfc5934af" diagramComponentId="49651d3c-8cbf-463b-912a-dd235bfef69d" ref="f0d54cbd-bb4b-4375-9178-980f6a239855" name="MS Defender/Sentinel Protections" desc="" library="" parentComponentRef="f30fb5e7-b7d5-4a30-99fe-c9ea74fddb64" componentDefinitionRef="empty-component">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses/>
      <countermeasures/>
      <usecases/>
    </component>
    <component uuid="287cbc8f-a6bc-4703-9ff7-7af7b52707a4" diagramComponentId="c30db5fd-4459-4db0-8773-16ce6b0692bf" ref="398e3757-a3e2-4a46-83b4-bfb70224d0e1" name="Discovery" desc="" library="" parentComponentRef="f30fb5e7-b7d5-4a30-99fe-c9ea74fddb64" componentDefinitionRef="discovery">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses/>
      <countermeasures>
        <countermeasure ref="C-DS0015" name="Application Log" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>Events collected by third-party services such as mail servers, web applications, or other appliances (not by the native OS or platform)(Citation: Confluence Logs)&lt;br /&gt;&lt;p&gt;Detailed detections per technique:&lt;/p&gt;&lt;br /&gt;['T1189']: Firewalls and proxies can inspect URLs for potentially known-bad domains or parameters. They can also do reputation-based analytics on websites and their requested resources such as how old a domain is, who it's registered to, if it's on a known bad list, or how many other users have connected to it before.&lt;br /&gt;['T1499.002']: Monitor for third-party application logging, messaging, and/or other artifacts that may target the different network services provided by systems to conduct a DoS. In addition to network level detections, endpoint logging and instrumentation can be useful for detection. Attacks targeting web applications may generate logs in the web server, application server, and/or database server that can be used to identify the type of attack, possibly before the impact is felt. Externally monitor the availability of services that may be targeted by an Endpoint DoS.&lt;br /&gt;['T1557']: Monitor application logs for changes to settings and other events associated with network protocols and other services commonly abused for AiTM.(Citation: dhcp_serv_op_events)&lt;br /&gt;['T1137.003']:  Monitor for third-party application logging, messaging, and/or other artifacts that may abuse Microsoft Outlook forms to obtain persistence on a compromised system. SensePost, whose tool [Ruler](https://attack.mitre.org/software/S0358) can be used to carry out malicious rules, forms, and Home Page attacks, has released a tool to detect Ruler usage.(Citation: SensePost NotRuler)&lt;br /&gt;['T1505.003']: Monitor for third-party application logging, messaging, and/or other artifacts that may backdoor web servers with web shells to establish persistent access to systems. Log authentication attempts to the server and any unusual traffic patterns to or from the server and internal network. (Citation: US-CERT Alert TA15-314A Web Shells)&lt;br /&gt;['T1505']: Monitor for third-party application logging, messaging, and/or other artifacts that may abuse legitimate extensible development features of servers to establish persistent access to systems. Consider monitoring application logs for abnormal behavior that may indicate suspicious installation of application software components. Log authentication attempts to the server and any unusual traffic patterns to or from the server and internal network. (Citation: US-CERT Alert TA15-314A Web Shells)&lt;br /&gt;['T1550']: Monitor for third-party application logging, messaging, and/or other artifacts that may use alternate authentication material, such as password hashes, Kerberos tickets, and application access tokens, in order to move laterally within an environment and bypass normal system access controls.&lt;br /&gt;['T1069.003']: Monitor for events collected that may attempt to find cloud groups and permission settings. &lt;br /&gt;['T1491.002']: Monitor for third-party application logging, messaging, and/or other artifacts that may deface systems external to an organization in an attempt to deliver messaging, intimidate, or otherwise mislead an organization or users. &lt;br /&gt;['T1598']: Depending on the specific method of phishing, the detections can vary. Monitor for suspicious email activity, such as numerous accounts receiving messages from a single unusual/unknown sender. Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.(Citation: Microsoft Anti Spoofing)(Citation: ACSC Email Spoofing)
When it comes to following links, monitor for references to uncategorized or known-bad sites. URL inspection within email (including expanding shortened links) can also help detect links leading to known malicious sites.
Monitor social media traffic for suspicious activity, including messages requesting information as well as abnormal file or data transfers (especially those involving unknown, or otherwise suspicious accounts).&lt;br /&gt;['T1499']: Monitor for third-party application logging, messaging, and/or other artifacts that may perform Endpoint Denial of Service (DoS) attacks to degrade or block the availability of services to users. In addition to network level detections, endpoint logging and instrumentation can be useful for detection. Attacks targeting web applications may generate logs in the web server, application server, and/or database server that can be used to identify the type of attack, possibly before the impact is felt. Externally monitor the availability of services that may be targeted by an Endpoint DoS.&lt;br /&gt;['T1204.003']: Monitor for third-party application logging, messaging, and/or other artifacts that may rely on a user running a malicious image to facilitate execution.&lt;br /&gt;['T1598.001']: Monitor social media traffic for suspicious activity, including messages requesting information as well as abnormal file or data transfers (especially those involving unknown, or otherwise suspicious accounts).
Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.
Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.&lt;br /&gt;['T1564']: Monitor for third-party application logging, messaging, and/or other artifacts that may attempt to hide artifacts associated with their behaviors to evade detection. &lt;br /&gt;['T1499.004']: Monitor for third-party application logging, messaging, and/or other artifacts that may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Attacks targeting web applications may generate logs in the web server, application server, and/or database server that can be used to identify the type of attack. Externally monitor the availability of services that may be targeted by an Endpoint DoS.&lt;br /&gt;['T1211']: Exploitation for defense evasion may happen shortly after the system has been compromised to prevent detection during later actions for for additional tools that may be brought in and used. Detecting software exploitation may be difficult depending on the tools available. Software exploits may not always succeed or may cause the exploited process to become unstable or crash. &lt;br /&gt;['T1137']: Monitor for third-party application logging, messaging, and/or other artifacts that may leverage Microsoft Office-based applications for persistence between startups. SensePost, whose tool [Ruler](https://attack.mitre.org/software/S0358) can be used to carry out malicious rules, forms, and Home Page attacks, has released a tool to detect Ruler usage.(Citation: SensePost NotRuler)&lt;br /&gt;['T1566.001']: Monitor for third-party application logging, messaging, and/or other artifacts that may send spearphishing emails with a malicious attachment in an attempt to gain access to victim systems. Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.(Citation: Microsoft Anti Spoofing)(Citation: ACSC Email Spoofing) Anti-virus can potentially detect malicious documents and attachments as they're scanned to be stored on the email server or on the user's computer. Monitor for suspicious descendant process spawning from Microsoft Office and other productivity software.(Citation: Elastic - Koadiac Detection with EQL)&lt;br /&gt;['T1566.002']: Monitor for third-party application logging, messaging, and/or other artifacts that may send spearphishing emails with a malicious link in an attempt to gain access to victim systems. Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.(Citation: Microsoft Anti Spoofing)(Citation: ACSC Email Spoofing) URL inspection within email (including expanding shortened links) can help detect links leading to known malicious sites. Detonation chambers can be used to detect these links and either automatically go to these sites to determine if they're potentially malicious, or wait and capture the content if a user visits the link.&lt;br /&gt;['T1598.003']: Monitor for suspicious email activity, such as numerous accounts receiving messages from a single unusual/unknown sender. Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.(Citation: Microsoft Anti Spoofing)(Citation: ACSC Email Spoofing)
Monitor for references to uncategorized or known-bad sites. URL inspection within email (including expanding shortened links) can also help detect links leading to known malicious sites.&lt;br /&gt;['T1610']: Configuration management databases (CMDB) and other asset management systems may help with the detection of computer systems or network devices that should not exist on a network.&lt;br /&gt;['T1114']: Detection is challenging because all messages forwarded because of an auto-forwarding rule have the same presentation as a manually forwarded message. It is also possible for the user to not be aware of the addition of such an auto-forwarding rule and not suspect that their account has been compromised; email-forwarding rules alone will not affect the normal usage patterns or operations of the email account. Auto-forwarded messages generally contain specific detectable artifacts that may be present in the header; such artifacts would be platform-specific. Examples include &lt;code&gt;X-MS-Exchange-Organization-AutoForwarded&lt;/code&gt; set to true, &lt;code&gt;X-MailFwdBy&lt;/code&gt; and &lt;code&gt;X-Forwarded-To&lt;/code&gt;. The &lt;code&gt;forwardingSMTPAddress&lt;/code&gt; parameter used in a forwarding process that is managed by administrators and not by user actions. All messages for the mailbox are forwarded to the specified SMTP address. However, unlike typical client-side rules, the message does not appear as forwarded in the mailbox; it appears as if it were sent directly to the specified destination mailbox.(Citation: Microsoft Tim McMichael Exchange Mail Forwarding 2) High volumes of emails that bear the &lt;code&gt;X-MS-Exchange-Organization-AutoForwarded&lt;/code&gt; header (indicating auto-forwarding) without a corresponding number of emails that match the appearance of a forwarded message may indicate that further investigation is needed at the administrator level rather than user-level.&lt;br /&gt;['T1534']: Monitor email gateways usually do not scan internal email, but an organization can leverage the journaling-based solution which sends a copy of emails to a security service for offline analysis or incorporate service-integrated solutions using on-premise or API-based integrations to help detect internal spearphishing attacks.(Citation: Trend Micro When Phishing Starts from the Inside 2017)&lt;br /&gt;['T1594']: Monitor for suspicious network traffic that could be indicative of adversary reconnaissance, such as rapid successions of requests indicative of web crawling and/or large quantities of requests originating from a single source (especially if the source is known to be associated with an adversary). Analyzing web metadata may also reveal artifacts that can be attributed to potentially malicious activity, such as referer or user-agent string HTTP/S fields.&lt;br /&gt;['T1137.005']: Monitor for third-party application logging, messaging, and/or other artifacts that may abuse Microsoft Outlook rules to obtain persistence on a compromised system. SensePost, whose tool [Ruler](https://attack.mitre.org/software/S0358) can be used to carry out malicious rules, forms, and Home Page attacks, has released a tool to detect Ruler usage.(Citation: SensePost NotRuler)&lt;br /&gt;['T1213.002']: Monitor for third-party application logging, messaging, and/or other artifacts that may leverage the SharePoint repository as a source to mine valuable information. Monitor access to Microsoft SharePoint repositories performed by privileged users (for example, Active Directory Domain, Enterprise, or Schema Administrators) should be closely monitored and alerted upon, as these types of accounts should generally not be used to access information repositories. If the capability exists, it may be of value to monitor and alert on users that are retrieving and viewing a large number of documents and pages; this behavior may be indicative of programmatic means being used to retrieve all data within the repository. In environments with high-maturity, it may be possible to leverage User-Behavioral Analytics (UBA) platforms to detect and alert on user based anomalies.&lt;br /&gt;['T1110.004']: Monitor authentication logs for system and application login failures of [Valid Accounts](https://attack.mitre.org/techniques/T1078). If authentication failures are high, then there may be a brute force attempt to gain access to a system using legitimate credentials.&lt;br /&gt;['T1491.001']: Monitor for third-party application logging, messaging, and/or other artifacts that may deface systems internal to an organization in an attempt to intimidate or mislead users. &lt;br /&gt;['T1114.003']: Detection is challenging because all messages forwarded because of an auto-forwarding rule have the same presentation as a manually forwarded message. It is also possible for the user to not be aware of the addition of such an auto-forwarding rule and not suspect that their account has been compromised; email-forwarding rules alone will not affect the normal usage patterns or operations of the email account. This is especially true in cases with hidden auto-forwarding rules. This makes it only possible to reliably detect the existence of a hidden auto-forwarding rule by examining message tracking logs or by using a MAPI editor to notice the modified rule property values.(Citation: Pfammatter - Hidden Inbox Rules)
Auto-forwarded messages generally contain specific detectable artifacts that may be present in the header; such artifacts would be platform-specific. Examples include X-MS-Exchange-Organization-AutoForwarded set to true, X-MailFwdBy and X-Forwarded-To. The forwardingSMTPAddress parameter used in a forwarding process that is managed by administrators and not by user actions. All messages for the mailbox are forwarded to the specified SMTP address. However, unlike typical client-side rules, the message does not appear as forwarded in the mailbox; it appears as if it were sent directly to the specified destination mailbox.(Citation: Microsoft Tim McMichael Exchange Mail Forwarding 2) High volumes of emails that bear the X-MS-Exchange-Organization-AutoForwarded header (indicating auto-forwarding) without a corresponding number of emails that match the appearance of a forwarded message may indicate that further investigation is needed at the administrator level rather than user-level.&lt;br /&gt;['T1137.004']: Monitor for third-party application logging, messaging, and/or other artifacts that may abuse Microsoft Outlook's Home Page feature to obtain persistence on a compromised system. SensePost, whose tool [Ruler](https://attack.mitre.org/software/S0358) can be used to carry out malicious rules, forms, and Home Page attacks, has released a tool to detect Ruler usage.(Citation: SensePost NotRuler)&lt;br /&gt;['T1622']: Monitor debugger logs for signs of abnormal and potentially malicious activity.&lt;br /&gt;['T1069']: Monitor for logging, messaging, and other artifacts provided by cloud services.&lt;br /&gt;['T1499.003']: Monitor for third-party application logging, messaging, and/or other artifacts that may target resource intensive features of web applications to cause a denial of service (DoS). In addition to network level detections, endpoint logging and instrumentation can be useful for detection. Attacks targeting web applications may generate logs in the web server, application server, and/or database server that can be used to identify the type of attack, possibly before the impact is felt. Externally monitor the availability of services that may be targeted by an Endpoint DoS.&lt;br /&gt;['T1491']: Monitor for third-party application logging, messaging, and/or other artifacts that may modify visual content available internally or externally to an enterprise network. &lt;br /&gt;['T1213.003']: Monitor for third-party application logging, messaging, and/or other artifacts that may leverage code repositories to collect valuable information. Monitor access to code repositories, especially performed by privileged users such as Active Directory Domain or Enterprise Administrators as these types of accounts should generally not be used to access code repositories. In environments with high-maturity, it may be possible to leverage User-Behavioral Analytics (UBA) platforms to detect and alert on user-based anomalies.&lt;br /&gt;['T1621']: Monitor application logs for suspicious events including repeated MFA failures that may indicate user's primary credentials have been compromised.&lt;br /&gt;['T1072']: Often these third-party applications will have logs of their own that can be collected and correlated with other data from the environment. Ensure that third-party application logs are on-boarded to the enterprise logging system and the logs are regularly reviewed. Audit software deployment logs and look for suspicious or unauthorized activity. A system not typically used to push software to clients that suddenly is used for such a task outside of a known admin function may be suspicious. Monitor account login activity on these applications to detect suspicious/abnormal usage.
Perform application deployment at regular times so that irregular deployment activity stands out.&lt;br /&gt;['T1098.005']: 
Azure AD creates several log entries when new devices are enrolled, which can be monitored for unexpected device registrations.(Citation: AADInternals - BPRT) Additionally, joined devices can be viewed via the Azure AD portal.(Citation: Microsoft Manage Device Identities)&lt;br /&gt;['T1110.002']: Monitor authentication logs for system and application login failures of [Valid Accounts](https://attack.mitre.org/techniques/T1078). It is difficult to detect when hashes are cracked, since this is generally done outside the scope of the target network. Consider focusing efforts on detecting other adversary behavior used to acquire credential materials, such as [OS Credential Dumping](https://attack.mitre.org/techniques/T1003) or [Kerberoasting](https://attack.mitre.org/techniques/T1558/003).&lt;br /&gt;['T1213']: Monitor for third-party application logging, messaging, and/or other artifacts that may leverage information repositories to mine valuable information. Information repositories generally have a considerably large user base, detection of malicious use can be non-trivial. At minimum, access to information repositories performed by privileged users (for example, Active Directory Domain, Enterprise, or Schema Administrators) should be closely monitored and alerted upon, as these types of accounts should generally not be used to access information repositories. If the capability exists, it may be of value to monitor and alert on users that are retrieving and viewing a large number of documents and pages; this behavior may be indicative of programmatic means being used to retrieve all data within the repository. In environments with high-maturity, it may be possible to leverage User-Behavioral Analytics (UBA) platforms to detect and alert on user based anomalies.&lt;br /&gt;['T1505.001']: Monitor for third-party application logging, messaging, and/or other artifacts that may abuse SQL stored procedures to establish persistent access to systems. On a MSSQL Server, consider monitoring for xp_cmdshell usage.(Citation: NetSPI Startup Stored Procedures) Consider enabling audit features that can log malicious startup activities.&lt;br /&gt;['T1203']: Detecting software exploitation may be difficult depending on the tools available. Software exploits may not always succeed or may cause the exploited process to become unstable or crash.&lt;br /&gt;['T1566']: Monitor for third-party application logging, messaging, and/or other artifacts that may send phishing messages to gain access to victim systems. Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.(Citation: Microsoft Anti Spoofing)(Citation: ACSC Email Spoofing) URL inspection within email (including expanding shortened links) can help detect links leading to known malicious sites. Detonation chambers can be used to detect these links and either automatically go to these sites to determine if they're potentially malicious, or wait and capture the content if a user visits the link.&lt;br /&gt;['T1110.003']: Monitor authentication logs for system and application login failures of [Valid Accounts](https://attack.mitre.org/techniques/T1078). Consider the following event IDs:(Citation: Trimarc Detecting Password Spraying)
Domain Controllers: "Audit Logon" (Success &amp; Failure) for event ID 4625.
Domain Controllers: "Audit Kerberos Authentication Service" (Success &amp; Failure) for event ID 4771.
All systems: "Audit Logon" (Success &amp; Failure) for event ID 4648.&lt;br /&gt;['T1098.002']: Enable the UpdateFolderPermissions action for all logon types. The mailbox audit log will forward folder permission modification events to the Unified Audit Log. Create rules to alert on ModifyFolderPermissions operations where the Anonymous or Default user is assigned permissions other than None.

A larger than normal volume of emails sent from an account and similar phishing emails sent from real accounts within a network may be a sign that an account was compromised and attempts to leverage access with modified email permissions is occurring.&lt;br /&gt;['T1598.002']: Monitor for suspicious email activity, such as numerous accounts receiving messages from a single unusual/unknown sender. Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.(Citation: Microsoft Anti Spoofing)(Citation: ACSC Email Spoofing)&lt;br /&gt;['T1566.003']: Monitor for third-party application logging, messaging, and/or other artifacts that may send spearphishing messages via third-party services in an attempt to gain access to victim systems. &lt;br /&gt;['T1550.004']: Monitor for third-party application logging, messaging, and/or other service artifacts that provide context of user authentication to web applications, including cloud-based services. Combine this information with web credentials usage events to identify authentication events that do not fit the organization baseline.&lt;br /&gt;['T1210']: Detecting software exploitation may be difficult depending on the tools available. Software exploits may not always succeed or may cause the exploited process to become unstable or crash. Web Application Firewalls may detect improper inputs attempting exploitation.&lt;br /&gt;['T1557.003']: Monitor Windows logs (ex: EIDs 1341, 1342, 1020, and 1063) for changes to DHCP settings. These may also highlight DHCP issues such as when IP allocations are low or have run out.(Citation: dhcp_serv_op_events)(Citation: solution_monitor_dhcp_scopes)&lt;br /&gt;['T1562.002']: Monitor for third-party application logging, messaging, and/or other artifacts provided by third-party services that may disable Windows event logging to limit data that can be leveraged for detections and audits.&lt;br /&gt;['T1564.008']: Monitor for third-party application logging, messaging, and/or other artifacts that may use email rules to hide inbound emails in a compromised user's mailbox. Monitor email clients and applications for suspicious activity, such as missing messages or abnormal configuration and/or log entries.&lt;br /&gt;['T1505.002']: Monitor for third-party application logging, messaging, and/or other artifacts that may abuse Microsoft transport agents to establish persistent access to systems. Consider monitoring application logs for abnormal behavior that may indicate suspicious installation of application software components.&lt;br /&gt;['T1213.001']: Monitor for third-party application logging, messaging, and/or other artifacts that may leverage Confluence repositories to mine valuable information. Watch for access to Confluence repositories performed by privileged users (for example, Active Directory Domain, Enterprise, or Schema Administrators) as these types of accounts should generally not be used to access information repositories. If the capability exists, it may be of value to monitor and alert on users that are retrieving and viewing a large number of documents and pages; this behavior may be indicative of programmatic means being used to retrieve all data within the repository. In environments with high-maturity, it may be possible to leverage User-Behavioral Analytics (UBA) platforms to detect and alert on user based anomalies.&lt;br /&gt;['T1204']: Monitor for third-party application logging, messaging, and/or other artifacts that may rely upon specific actions by a user in order to gain execution.&lt;br /&gt;['T1133']: When authentication is not required to access an exposed remote service, monitor for follow-on activities such as anomalous external use of the exposed API or application.&lt;br /&gt;['T1027.005']: The first detection of a malicious tool may trigger an anti-virus or other security tool alert. Similar events may also occur at the boundary through network IDS, email scanning appliance, etc. The initial detection should be treated as an indication of a potentially more invasive intrusion. The alerting system should be thoroughly investigated beyond that initial alert for activity that was not detected. Adversaries may continue with an operation, assuming that individual events like an anti-virus detect will not be investigated or that an analyst will not be able to conclusively link that event to other activity occurring on the network.&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Confluence Logs" url="https://confluence.atlassian.com/doc/working-with-confluence-logs-108364721.html"/>
            <reference name="Mitre ATT&amp;CK Data Source DS0015" url="https://attack.mitre.org/datasources/DS0015"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:01.924">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-M1047" name="Audit" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>Perform audits or scans of systems, permissions, insecure software, insecure configurations, etc. to identify potential weaknesses.&lt;br /&gt;&lt;p&gt;Detailed mitigations per technique:&lt;/p&gt;&lt;br /&gt;['T1484']: Identify and correct GPO permissions abuse opportunities (ex: GPO modification privileges) using auditing tools such as [BloodHound](https://attack.mitre.org/software/S0521) (version 1.5.1 and later)(Citation: GitHub Bloodhound).&lt;br /&gt;['T1059.006']: Inventory systems for unauthorized Python installations.&lt;br /&gt;['T1482']: Map the trusts within existing domains/forests and keep trust relationships to a minimum.&lt;br /&gt;['T1053.003']: Review changes to the &lt;code&gt;cron&lt;/code&gt; schedule. &lt;code&gt;cron&lt;/code&gt; execution can be reviewed within the &lt;code&gt;/var/log&lt;/code&gt; directory. To validate the location of the &lt;code&gt;cron&lt;/code&gt; log file, check the syslog config at &lt;code&gt;/etc/rsyslog.conf&lt;/code&gt; or &lt;code&gt;/etc/syslog.conf&lt;/code&gt; &lt;br /&gt;['T1574.005', 'T1574.010']: Use auditing tools capable of detecting file system permissions abuse opportunities on systems within an enterprise and correct them. Toolkits like the PowerSploit framework contain PowerUp modules that can be used to explore systems for service file system permissions weaknesses.(Citation: Powersploit)&lt;br /&gt;['T1076']: Audit the Remote Desktop Users group membership regularly. Remove unnecessary accounts and groups from Remote Desktop Users groups&lt;br /&gt;['T1505.005', 'T1505']: Regularly check component software on critical services that adversaries may target for persistence to verify the integrity of the systems and identify if unexpected changes have been made.&lt;br /&gt;['T1176']:  Ensure extensions that are installed are the intended ones as many malicious extensions will masquerade as legitimate ones.&lt;br /&gt;['T1484.001']: Identify and correct GPO permissions abuse opportunities (ex: GPO modification privileges) using auditing tools such as [BloodHound](https://attack.mitre.org/software/S0521) (version 1.5.1 and later).(Citation: GitHub Bloodhound)&lt;br /&gt;['T1505.001', 'T1505.002']: Regularly check component software on critical services that adversaries may target for persistence to verify the integrity of the systems and identify if unexpected changes have been made. &lt;br /&gt;['T1574.009', 'T1574.008', 'T1574.007']: Find and eliminate path interception weaknesses in program configuration files, scripts, the PATH environment variable, services, and in shortcuts by surrounding PATH variables with quotation marks when functions allow for them. Be aware of the search order Windows uses for executing or loading binaries and use fully qualified paths wherever appropriate.

Clean up old Windows Registry keys when software is uninstalled to avoid keys with no associated legitimate binaries. Periodically search for and correct or report path interception weaknesses on systems that may have been introduced using custom or available tools that report software using insecure path configurations.(Citation: Microsoft CreateProcess)(Citation: Microsoft Dynamic-Link Library Security)(Citation: Vulnerability and Exploit Detector)&lt;br /&gt;['T1044']: Use auditing tools capable of detecting file system permissions abuse opportunities on systems within an enterprise and correct them. Toolkits like the PowerSploit framework contain PowerUp modules that can be used to explore systems for service file system permissions weaknesses. (Citation: Powersploit)&lt;br /&gt;['T1021.001', 'T1563.002']: Audit the Remote Desktop Users group membership regularly. Remove unnecessary accounts and groups from Remote Desktop Users groups.&lt;br /&gt;['T1564.008']: Enterprise email solutions may have monitoring mechanisms that may include the ability to audit inbox rules on a regular basis. 

In an Exchange environment, Administrators can use &lt;code&gt;Get-InboxRule&lt;/code&gt; to discover and remove potentially malicious inbox rules.(Citation: Microsoft Get-InboxRule)&lt;br /&gt;['T1548.002', 'T1548']: Check for common UAC bypass weaknesses on Windows systems to be aware of the risk posture and address issues where appropriate.(Citation: Github UACMe)&lt;br /&gt;['T1558.004']: Kerberos preauthentication is enabled by default. Older protocols might not support preauthentication therefore it is possible to have this setting disabled. Make sure that all accounts have preauthentication whenever possible and audit changes to setting. Windows tools such as PowerShell may be used to easily find which accounts have preauthentication disabled.  (Citation: Microsoft Preauthentication Jul 2012)(Citation: Stealthbits Cracking AS-REP Roasting Jun 2019)&lt;br /&gt;['T1053.002']: Toolkits like the PowerSploit framework contain PowerUp modules that can be used to explore systems for permission weaknesses in scheduled tasks that could be used to escalate privileges. (Citation: Powersploit) Windows operating system also creates a registry key specifically associated with the creation of a scheduled task on the destination host at: Microsoft\Windows NT\CurrentVersion\Schedule\TaskCache\Tree\At1. (Citation: Secureworks - AT.exe Scheduled Task) In Linux and macOS environments, scheduled tasks using &lt;code&gt;[at](https://attack.mitre.org/software/S0110)&lt;/code&gt; can be audited locally, or through centrally collected logging, using syslog, or auditd events from the host. (Citation: Kifarunix - Task Scheduling in Linux)&lt;br /&gt;['T1543.003']: Use auditing tools capable of detecting privilege and service abuse opportunities on systems within an enterprise and correct them. &lt;br /&gt;['T1552.006']: Search SYSVOL for any existing GGPs that may contain credentials and remove them.(Citation: ADSecurity Finding Passwords in SYSVOL)&lt;br /&gt;['T1528']: Administrators should audit all cloud and container accounts to ensure that they are necessary and that the permissions granted to them are appropriate.  Additionally, administrators should perform an audit of all OAuth applications and the permissions they have been granted to access organizational data. This should be done extensively on all applications in order to establish a baseline, followed up on with periodic audits of new or updated applications. Suspicious applications should be investigated and removed.&lt;br /&gt;['T1574']: Use auditing tools capable of detecting hijacking opportunities on systems within an enterprise and correct them. Toolkits like the PowerSploit framework contain PowerUp modules that can be used to explore systems for hijacking weaknesses.(Citation: Powersploit)

Use the program sxstrace.exe that is included with Windows along with manual inspection to check manifest files for side-loading vulnerabilities in software.

Find and eliminate path interception weaknesses in program configuration files, scripts, the PATH environment variable, services, and in shortcuts by surrounding PATH variables with quotation marks when functions allow for them. Be aware of the search order Windows uses for executing or loading binaries and use fully qualified paths wherever appropriate.

Clean up old Windows Registry keys when software is uninstalled to avoid keys with no associated legitimate binaries. Periodically search for and correct or report path interception weaknesses on systems that may have been introduced using custom or available tools that report software using insecure path configurations.(Citation: Microsoft CreateProcess)(Citation: Microsoft Dynamic-Link Library Security)(Citation: Vulnerability and Exploit Detector)&lt;br /&gt;['T1610']: Scan images before deployment, and block those that are not in compliance with security policies. In Kubernetes environments, the admission controller can be used to validate images after a container deployment request is authenticated but before the container is deployed.(Citation: Kubernetes Hardening Guide)&lt;br /&gt;['T1031', 'T1543']: Use auditing tools capable of detecting privilege and service abuse opportunities on systems within an enterprise and correct them.&lt;br /&gt;['T1606.001']: Administrators should perform an audit of all access lists and the permissions they have been granted to access web applications and services. This should be done extensively on all resources in order to establish a baseline, followed up on with periodic audits of new or updated resources. Suspicious accounts/credentials should be investigated and removed.&lt;br /&gt;['T1213.001']: Consider periodic review of accounts and privileges for critical and sensitive Confluence repositories.&lt;br /&gt;['T1566.002']: Audit applications and their permissions to ensure access to data and resources are limited based upon necessity and principle of least privilege.&lt;br /&gt;['T1546.006', 'T1161']: Binaries can also be baselined for what dynamic libraries they require, and if an app requires a new dynamic library that wasn\u2019t included as part of an update, it should be investigated.&lt;br /&gt;['T1213.002']: Consider periodic review of accounts and privileges for critical and sensitive SharePoint repositories.&lt;br /&gt;['T1578.001']: Routinely check user permissions to ensure only the expected users have the capability to create snapshots and backups.&lt;br /&gt;['T1021.005']: Inventory workstations for unauthorized VNC server software.&lt;br /&gt;['T1145', 'T1552.004']: Ensure only authorized keys are allowed access to critical resources and audit access lists regularly.&lt;br /&gt;['T1550.001']: Administrators should audit all cloud and container accounts to ensure that they are necessary and that the permissions granted to them are appropriate. Where possible, the ability to request temporary account tokens on behalf of another accounts should be disabled. Additionally, administrators can leverage audit tools to monitor actions that can be conducted as a result of OAuth 2.0 access. For instance, audit reports enable admins to identify privilege escalation actions such as role creations or policy modifications, which could be actions performed after initial access.&lt;br /&gt;['T1606.002']: Enable advanced auditing on AD FS. Check the success and failure audit options in the AD FS Management snap-in. Enable Audit Application Generated events on the AD FS farm via Group Policy Object.(Citation: FireEye ADFS)&lt;br /&gt;['T1053.004']: Audit logging for &lt;code&gt;launchd&lt;/code&gt; events in MacOS can be reviewed or centrally collected using multiple options, such as syslog, OpenBSM, or OSquery.&lt;br /&gt;['T1087.004']: Routinely check user permissions to ensure only the expected users have the ability to list IAM identities or otherwise discover cloud accounts.&lt;br /&gt;['T1578']: Routinely monitor user permissions to ensure only the expected users have the capability to modify cloud compute infrastructure components.&lt;br /&gt;['T1560.001', 'T1560']: System scans can be performed to identify unauthorized archival utilities.&lt;br /&gt;['T1073', 'T1574.002']: Use the program sxstrace.exe that is included with Windows along with manual inspection to check manifest files for side-loading vulnerabilities in software.&lt;br /&gt;['T1213.003']: Consider periodic reviews of accounts and privileges for critical and sensitive code repositories. Scan code repositories for exposed credentials or other sensitive information.&lt;br /&gt;['T1088']: Check for common UAC bypass weaknesses on Windows systems to be aware of the risk posture and address issues where appropriate. (Citation: Github UACMe)&lt;br /&gt;['T1562.007']: Routinely check account role permissions to ensure only expected users and roles have permission to modify cloud firewalls. &lt;br /&gt;['T1552.002', 'T1214']: Proactively search for credentials within the Registry and attempt to remediate the risk.&lt;br /&gt;['T1053', 'T1053.005']: Toolkits like the PowerSploit framework contain PowerUp modules that can be used to explore systems for permission weaknesses in scheduled tasks that could be used to escalate privileges. (Citation: Powersploit)&lt;br /&gt;['T1505.004']: Regularly check installed IIS components to verify the integrity of the web server and identify if unexpected changes have been made.&lt;br /&gt;['T1562.002']: Consider periodic review of &lt;code&gt;auditpol&lt;/code&gt; settings for Administrator accounts and perform dynamic baselining on SIEM(s) to investigate potential malicious activity. Also ensure that the EventLog service and its threads are properly running.&lt;br /&gt;['T1038']: Use auditing tools capable of detecting DLL search order hijacking opportunities on systems within an enterprise and correct them. Toolkits like the PowerSploit framework contain PowerUp modules that can be used to explore systems for DLL hijacking weaknesses.(Citation: Powersploit)&lt;br /&gt;['T1552']: Preemptively search for files containing passwords or other credentials and take actions to reduce the exposure risk when found.&lt;br /&gt;['T1578.002']: Routinely check user permissions to ensure only the expected users have the capability to create new instances.&lt;br /&gt;['T1034']: Find and eliminate path interception weaknesses in program configuration files, scripts, the PATH environment variable, services, and in shortcuts by surrounding PATH variables with quotation marks when functions allow for them (Citation: Microsoft CreateProcess). Be aware of the search order Windows uses for executing or loading binaries and use fully qualified paths wherever appropriate (Citation: MSDN DLL Security). 

Clean up old Windows Registry keys when software is uninstalled to avoid keys with no associated legitimate binaries. Periodically search for and correct or report path interception weaknesses on systems that may have been introduced using custom or available tools that report software using insecure path configurations. (Citation: Kanthak Sentinel)&lt;br /&gt;['T1542.004']: Periodically check the integrity of system image to ensure it has not been modified. (Citation: Cisco IOS Software Integrity Assurance - Image File Integrity) (Citation: Cisco IOS Software Integrity Assurance - Image File Verification) (Citation: Cisco IOS Software Integrity Assurance - Change Control) &lt;br /&gt;['T1574.001']: Use auditing tools capable of detecting DLL search order hijacking opportunities on systems within an enterprise and correct them. Toolkits like the PowerSploit framework contain PowerUp modules that can be used to explore systems for DLL hijacking weaknesses.(Citation: Powersploit)

Use the program sxstrace.exe that is included with Windows along with manual inspection to check manifest files for side-by-side problems in software.(Citation: Microsoft Sxstrace)&lt;br /&gt;['T1204.003', 'T1612']: Audit images deployed within the environment to ensure they do not contain any malicious components.&lt;br /&gt;['T1578.003']: Routinely check user permissions to ensure only the expected users have the capability to delete new instances.&lt;br /&gt;['T1527']: Administrators can set up a variety of logs and leverage audit tools to monitor actions that can be conducted as a result of OAuth 2.0 access. For instance, audit reports enable admins to identify privilege escalation actions such as role creations or policy modifications, which could be actions performed after initial access.&lt;br /&gt;['T1114.003']: Enterprise email solutions have monitoring mechanisms that may include the ability to audit auto-forwarding rules on a regular basis.

In an Exchange environment, Administrators can use Get-InboxRule to discover and remove potentially malicious auto-forwarding rules.(Citation: Microsoft Tim McMichael Exchange Mail Forwarding 2). In addition to this, a MAPI Editor can be utilized to examine the underlying database structure and discover any modifications/tampering of the properties of auto-forwarding rules.(Citation: Pfammatter - Hidden Inbox Rules)&lt;br /&gt;['T1114']: Enterprise email solutions have monitoring mechanisms that may include the ability to audit auto-forwarding rules on a regular basis.

In an Exchange environment, Administrators can use Get-InboxRule to discover and remove potentially malicious auto-forwarding rules.(Citation: Microsoft Tim McMichael Exchange Mail Forwarding 2) &lt;br /&gt;['T1606']: Administrators should perform an audit of all access lists and the permissions they have been granted to access web applications and services. This should be done extensively on all resources in order to establish a baseline, followed up on with periodic audits of new or updated resources. Suspicious accounts/credentials should be investigated and removed.
 
Enable advanced auditing on ADFS. Check the success and failure audit options in the ADFS Management snap-in. Enable Audit Application Generated events on the AD FS farm via Group Policy Object.(Citation: FireEye ADFS)&lt;br /&gt;['T1552.001', 'T1081']: Preemptively search for files containing passwords and take actions to reduce the exposure risk when found.&lt;br /&gt;['T1530']: Frequently check permissions on cloud storage to ensure proper permissions are set to deny open or unprivileged access to resources.(Citation: Amazon S3 Security, 2019)&lt;br /&gt;['T1543.004']: Use auditing tools capable of detecting folder permissions abuse opportunities on systems, especially reviewing changes made to folders by third-party software.&lt;br /&gt;['T1213']: Consider periodic review of accounts and privileges for critical and sensitive repositories.&lt;br /&gt;['T1542.005']: Periodically check the integrity of the running configuration and system image to ensure they have not been modified. (Citation: Cisco IOS Software Integrity Assurance - Image File Verification) (Citation: Cisco IOS Software Integrity Assurance - Image File Integrity) (Citation: Cisco IOS Software Integrity Assurance - Change Control) &lt;br /&gt;['T1525']: Periodically check the integrity of images and containers used in cloud deployments to ensure they have not been modified to include malicious software.&lt;br /&gt;['T1053.001']: Scheduled tasks using &lt;code&gt;[at](https://attack.mitre.org/software/S0110)&lt;/code&gt; can be audited locally, or through centrally collected logging, using syslog, or auditd events from the host. (Citation: Kifarunix - Task Scheduling in Linux)&lt;br /&gt;['T1078']: Routinely audit source code, application configuration files, open repositories, and public cloud storage for insecure use and storage of credentials.&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Mitre ATT&amp;CK Mitigation M1047" url="https://attack.mitre.org/mitigations/M1047"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:02.077">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-DS0025" name="Cloud Service" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>Infrastructure, platforms, or software that are hosted on-premise or by third-party providers, made available to users through network connections and/or APIs(Citation: Amazon AWS)(Citation: Azure Products)&lt;br /&gt;&lt;p&gt;Detailed detections per technique:&lt;/p&gt;&lt;br /&gt;['T1562']: Monitor logs for API calls to disable logging. In AWS, monitor for: &lt;code&gt;StopLogging&lt;/code&gt; and &lt;code&gt;DeleteTrail&lt;/code&gt;.(Citation: Stopping CloudTrail from Sending Events to CloudWatch Logs) In GCP, monitor for: &lt;code&gt;google.logging.v2.ConfigServiceV2.UpdateSink&lt;/code&gt;.(Citation: Configuring Data Access audit logs) In Azure, monitor for &lt;code&gt;az monitor diagnostic-settings delete&lt;/code&gt;.(Citation: az monitor diagnostic-settings) Additionally, a sudden loss of a log source may indicate that it has been disabled.&lt;br /&gt;['T1526']: Cloud service discovery techniques will likely occur throughout an operation where an adversary is targeting cloud-based systems and services. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.
Normal, benign system and network events that look like cloud service discovery may be uncommon, depending on the environment and how they are used. Monitor cloud service usage for anomalous behavior that may indicate adversarial presence within the environment.&lt;br /&gt;['T1562.008']: Monitor changes made to cloud services for unexpected modifications to settings and/or data &lt;br /&gt;['T1562']: Monitor changes made to cloud services for unexpected modifications to settings and/or data.&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Amazon AWS" url="https://aws.amazon.com"/>
            <reference name="Azure Products" url="https://azure.microsoft.com/en-us/services/"/>
            <reference name="Mitre ATT&amp;CK Data Source DS0025" url="https://attack.mitre.org/datasources/DS0025"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:01.962">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-DS0017" name="Command" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>A directive given to a computer program, acting as an interpreter of some kind, in order to perform a specific task(Citation: Confluence Linux Command  Line)(Citation: Audit OSX)&lt;br /&gt;&lt;p&gt;Detailed detections per technique:&lt;/p&gt;&lt;br /&gt;['T1041']: Monitor executed commands and arguments that may steal data by exfiltrating it over an existing command and control channel.&lt;br /&gt;['T1555.003']: Monitor executed commands and arguments that may acquire credentials from web browsers by reading files specific to the target browser.(Citation: Talos Olympic Destroyer 2018)&lt;br /&gt;['T1134.001']: Monitor executed commands and arguments to detect token manipulation by auditing command-line activity. Specifically, analysts should look for use of the runas command. Detailed command-line logging is not enabled by default in Windows.(Citation: Microsoft Command-line Logging)&lt;br /&gt;['T1218.013']: Adversaries may rename abusable binaries to evade detections, but the argument &lt;code&gt;INJECTRUNNING&lt;/code&gt; is required for mavinject.exe to perform [Dynamic-link Library Injection](https://attack.mitre.org/techniques/T1055/001) and may therefore be monitored to alert malicious activity.&lt;br /&gt;['T1548.001']: Monitor for execution of utilities, like chmod, and their command-line arguments to look for setuid or setguid bits being set.&lt;br /&gt;['T1218.011']: Command arguments used with the rundll32.exe invocation may also be useful in determining the origin and purpose of the DLL being loaded.&lt;br /&gt;['T1218.008']: Command arguments used before and after the invocation of odbcconf.exe may also be useful in determining the origin and purpose of the DLL being loaded.&lt;br /&gt;['T1218.009']: Command arguments used before and after Regsvcs.exe or Regasm.exe invocation may also be useful in determining the origin and purpose of the binary being executed.&lt;br /&gt;['T1547.005']: Monitor executed commands and arguments that may abuse security support providers (SSPs) to execute DLLs when the system boots.&lt;br /&gt;['T1218.012']: Command arguments used before and after the invocation of verclsid.exe may also be useful in determining the origin and purpose of the payload being executed.&lt;br /&gt;['T1542.005']: Monitor executed commands and arguments in command history in either the console or as part of the running memory to determine if unauthorized or suspicious commands were used to modify device configuration.&lt;br /&gt;['T1546.001']: Monitor executed commands and arguments that may establish persistence by executing malicious content triggered by a file type association.&lt;br /&gt;['T1564.004']: The Streams tool of Sysinternals can be used to uncover files with ADSs. The &lt;code&gt;dir /r&lt;/code&gt; command can also be used to display ADSs. (Citation: Symantec ADS May 2009) Many PowerShell commands (such as Get-Item, Set-Item, Remove-Item, and Get-ChildItem) can also accept a &lt;code&gt;-stream&lt;/code&gt; parameter to interact with ADSs. (Citation: MalwareBytes ADS July 2015) (Citation: Microsoft ADS Mar 2014)&lt;br /&gt;['T1069.003']: Monitor for executed commands and arguments that may attempt to find cloud groups and permission settings. &lt;br /&gt;['T1087.002']: Monitor for execution of commands and arguments associated with enumeration or information gathering of domain accounts and groups, such as &lt;code&gt;net user /domain&lt;/code&gt; and &lt;code&gt;net group /domain&lt;/code&gt;, &lt;code&gt;dscacheutil -q group&lt;/code&gt;on macOS, and &lt;code&gt;ldapsearch&lt;/code&gt; on Linux.

System and network discovery techniques normally occur throughout an operation as an adversary learns the environment, and also to an extent in normal network operations. Therefore discovery data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.&lt;br /&gt;['T1037.005']: Monitor executed commands and arguments for logon scripts&lt;br /&gt;['T1011.001']: Monitor executed commands and arguments that may attempt to exfiltrate data over Bluetooth rather than the command and control channel.&lt;br /&gt;['T1127']: Monitor executed commands and arguments used before and after invocation of the utilities may also be useful in determining the origin and purpose of the binary being executed.&lt;br /&gt;['T1020']: Monitor executed commands and arguments that may exfiltrate data, such as sensitive documents, through the use of automated processing after being gathered during Collection&lt;br /&gt;['T1547.004']: Monitor executed commands and arguments that may abuse features of Winlogon to execute DLLs and/or executables when a user logs in.&lt;br /&gt;['T1003.003']: Monitor executed commands and arguments that may attempt to access or create a copy of the Active Directory domain database in order to steal credential information, as well as obtain other information about domain members such as devices, users, and access rights. Look for command-lines that invoke attempts to access or copy the NTDS.dit.&lt;br /&gt;['T1484.002']: Monitor executed commands and arguments that updates domain authentication from Managed to Federated via ActionTypes &lt;code&gt;Set federation settings on domain&lt;/code&gt; and &lt;code&gt;Set domain authentication&lt;/code&gt;.(Citation: Microsoft - Azure Sentinel ADFSDomainTrustMods) Monitor for PowerShell commands such as: &lt;code&gt;Update-MSOLFederatedDomain -DomainName: "Federated Domain Name"&lt;/code&gt;, or &lt;code&gt;Update-MSOLFederatedDomain -DomainName: "Federated Domain Name" -supportmultipledomain&lt;/code&gt;.(Citation: Microsoft - Update or Repair Federated domain)&lt;br /&gt;['T1609']: Monitor commands and arguments executed by container services. In Docker, the daemon log provides insight into events at the daemon and container service level. Kubernetes system component logs may also detect activities running in and out of containers in the cluster.&lt;br /&gt;['T1560']: Monitor executed commands and arguments for actions that will aid in compression or encrypting data that is collected prior to exfiltration, such as tar. &lt;br /&gt;['T1033']: Monitor executed commands and arguments that may attempt to dump credentials to obtain account login and credential material, normally in the form of a hash or a clear text password, from the operating system and software. Look for command-lines that invoke AuditD or the Security Accounts Manager (SAM). Remote access tools may contain built-in features or incorporate existing tools like [Mimikatz](https://attack.mitre.org/software/S0002). [PowerShell](https://attack.mitre.org/techniques/T1059/001) scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module, (Citation: Powersploit) which may require additional logging features to be configured in the operating system to collect necessary information for analysis.&lt;br /&gt;['T1547.001']: Monitor executed commands and arguments that may achieve persistence by adding a program to a startup folder or referencing it with a Registry run key.&lt;br /&gt;['T1543.002']: Suspicious systemd services can also be identified by comparing results against a trusted system baseline. Malicious systemd services may be detected by using the systemctl utility to examine system wide services: &lt;code&gt;systemctl list-units --type=service -all&lt;/code&gt;. Auditing the execution and command-line arguments of the 'systemctl' utility, as well related utilities such as &lt;code&gt;/usr/sbin/service&lt;/code&gt; may reveal malicious systemd service execution.&lt;br /&gt;['T1546.007']: Monitor executed commands and arguments that may establish persistence by executing malicious content triggered by Netsh Helper DLLs.&lt;br /&gt;['T1018']: Monitor executed commands and arguments that may attempt to get a listing of other systems by IP address, hostname, or other logical identifier on a network that may be used for Lateral Movement from the current system&lt;br /&gt;['T1070.001']: Monitor executed commands and arguments for actions that would delete Windows event logs (via PowerShell)&lt;br /&gt;['T1053.002']: Monitor executed commands and arguments for actions that could be taken to create/modify tasks. Tasks may also be created through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001), so additional logging may need to be configured to gather the appropriate data.&lt;br /&gt;['T1003.002']: Monitor executed commands and arguments that may attempt to extract credential material from the Security Account Manager (SAM) database either through in-memory techniques or through the Windows Registry where the SAM database is stored.&lt;br /&gt;['T1547.006']: Loading, unloading, and manipulating modules on Linux systems can be detected by monitoring for the following commands: &lt;code&gt;modprobe&lt;/code&gt;, &lt;code&gt;insmod&lt;/code&gt;, &lt;code&gt;lsmod&lt;/code&gt;, &lt;code&gt;rmmod&lt;/code&gt;, or &lt;code&gt;modinfo&lt;/code&gt; (Citation: Linux Loadable Kernel Module Insert and Remove LKMs) Adversaries may run commands on the target system before loading a malicious module in order to ensure that it is properly compiled. (Citation: iDefense Rootkit Overview) Adversaries may also execute commands to identify the exact version of the running Linux kernel and/or download multiple versions of the same .ko (kernel object) files to use the one appropriate for the running system.(Citation: Trend Micro Skidmap) Many LKMs require Linux headers (specific to the target kernel) in order to compile properly. These are typically obtained through the operating systems package manager and installed like a normal package.

On macOS, monitor for execution of &lt;code&gt;kextload&lt;/code&gt; commands and user installed kernel extensions performing abnormal and/or potentially malicious activity (such as creating network connections). Monitor for new rows added in the &lt;code&gt;kext_policy&lt;/code&gt; table. KextPolicy stores a list of user approved (non Apple) kernel extensions and a partial history of loaded kernel modules in a SQLite database, &lt;code&gt;/var/db/SystemPolicyConfiguration/KextPolicy&lt;/code&gt;.(Citation: User Approved Kernel Extension Pike's)(Citation: Purves Kextpocalypse 2)(Citation: Apple Developer Configuration Profile)&lt;br /&gt;['T1552.004']: Monitor executed commands and arguments that may search for private key certificate files on compromised systems for insecurely stored credentials.&lt;br /&gt;['T1489']: Monitor executed commands and arguments that may stop or disable services on a system to render those services unavailable to legitimate users.&lt;br /&gt;['T1216']: Monitor executed commands and arguments for scripts like PubPrn.vbs that may be used to proxy execution of malicious files.&lt;br /&gt;['T1098.004']: Monitor executed commands and arguments to modify the authorized_keys or /etc/ssh/sshd_config files.&lt;br /&gt;['T1552.007']: Establish centralized logging for the activity of container and Kubernetes cluster components. Monitor logs for actions that could be taken to gather credentials to container and cloud infrastructure, including the use of discovery API calls by new or unexpected users and APIs that access Docker logs.&lt;br /&gt;['T1546.013']: Monitor abnormal PowerShell commands, unusual loading of PowerShell drives or modules.&lt;br /&gt;['T1113']: Monitor executed commands and arguments that may attempt to take screen captures of the desktop to gather information over the course of an operation.&lt;br /&gt;['T1547.002']: Monitor executed commands and arguments that may abuse authentication packages to execute DLLs when the system boots.&lt;br /&gt;['T1027.004']: Monitor executed commands and arguments for actions that could be taken to gather common compilers, such as csc.exe and GCC/MinGW, and correlate with other suspicious behavior to reduce false positives from normal user and administrator behavior.&lt;br /&gt;['T1562.006']: Monitor executed commands and arguments that may attempt to block indicators or events typically captured by sensors from being gathered and analyzed.&lt;br /&gt;['T1553.004']: Monitor for commands, such as &lt;code&gt;security add-trusted-cert&lt;/code&gt; (macOS) or &lt;code&gt;certutil -addstore&lt;/code&gt; (Windows), that can be used to install root certificates. A system's root certificates are unlikely to change frequently. Monitor new certificates installed on a system that could be due to malicious activity. (Citation: SpectorOps Code Signing Dec 2017) Check pre-installed certificates on new systems to ensure unnecessary or suspicious certificates are not present. Microsoft provides a list of trustworthy root certificates online and through &lt;code&gt;authroot.stl&lt;/code&gt;. (Citation: SpectorOps Code Signing Dec 2017) The Sysinternals Sigcheck utility can also be used (&lt;code&gt;sigcheck[64].exe -tuv&lt;/code&gt;) to dump the contents of the certificate store and list valid certificates not rooted to the Microsoft Certificate Trust List. (Citation: Microsoft Sigcheck May 2017)&lt;br /&gt;['T1547.014']: Monitor executed commands and arguments that may achieve persistence by adding a Registry key to the Active Setup of the local machine.&lt;br /&gt;['T1114.001']: Monitor executed commands and arguments for actions that could be taken to gather local email files. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.&lt;br /&gt;['T1059.004']: Monitor executed commands and arguments that may abuse Unix shell commands and scripts for execution. Unix shell usage may be common on administrator, developer, or power user systems, depending on job function. If scripting is restricted for normal users, then any attempt to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.&lt;br /&gt;['T1123']: Monitor executed commands and arguments for actions that can leverage a computer's peripheral devices (e.g., microphones and webcams) or applications (e.g., voice and video call services) to capture audio recordings for the purpose of listening into sensitive conversations to gather information.&lt;br /&gt;['T1647']: Monitor for commands with arguments (such as opening common command-line editors) used to modify plist files, especially commonly abused files such as those in &lt;code&gt;\~/LaunchAgents&lt;/code&gt;, &lt;code&gt;\~/Library/Application Support/com.apple.backgroundtaskmanagementagent/backgrounditems.btm&lt;/code&gt;, and an application's &lt;code&gt;Info.plist&lt;/code&gt;.&lt;br /&gt;['T1553.001']: Monitor and investigate attempts to modify extended file attributes with utilities such as &lt;code&gt;xattr&lt;/code&gt;. Built-in system utilities may generate high false positive alerts, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible. &lt;br /&gt;['T1546.010']: Monitor executed commands and arguments that may establish persistence and/or elevate privileges by executing malicious content triggered by AppInit DLLs loaded into processes.&lt;br /&gt;['T1098']: Monitor executed commands and arguments for suspicious commands to modify accounts or account settings (including files such as the authorized_keys or /etc/ssh/sshd_config).

Monitor executed commands and arguments of suspicious commands (such as Add-MailboxPermission) that may be indicative of modifying the permissions of Exchange and other related service settings.&lt;br /&gt;['T1222.001']: Monitor for executed commands and arguments for PowerShell cmdlets that can be used to retrieve or modify file and directory DACLs.&lt;br /&gt;['T1562.010']: Monitor for commands or other activity that may be indicative of attempts to abuse older or deprecated technologies (ex: &lt;code&gt;powershell -v 2&lt;/code&gt;).&lt;br /&gt;['T1112']:  Monitor executed commands and arguments for actions that could be taken to change, conceal, and/or delete information in the Registry. The Registry may also be modified through Windows system management tools such as Windows Management Instrumentation and PowerShell, which may require additional logging features to be configured in the operating system to collect necessary information for analysis.&lt;br /&gt;['T1547']: Monitor executed commands and arguments that may configure system settings to automatically execute a program during system boot or logon to maintain persistence or gain higher-level privileges on compromised systems.&lt;br /&gt;['T1070.005']: Monitor executed commands and arguments of net use commands associated with establishing and removing remote shares over SMB, including following best practices for detection of Windows Admin Shares.&lt;br /&gt;['T1555.001']: Monitor executed commands with arguments that may be used to collect Keychain data from a system to acquire credentials.&lt;br /&gt;['T1574.006']: Monitor executed commands and arguments associated with modifications to variables and files associated with loading shared libraries such as LD_PRELOAD on Linux and DYLD_INSERT_LIBRARIES on macOS.&lt;br /&gt;['T1482']: Monitor executed commands and arguments for actions that could be taken to gather system and network information, such as nltest /domain_trusts. Remote access tools with built-in features may interact directly with the Windows API to gather information.&lt;br /&gt;['T1546.006']: Monitor executed commands and arguments that may establish persistence by executing malicious content triggered by the execution of tainted binaries.&lt;br /&gt;['T1552']: While detecting adversaries accessing credentials may be difficult without knowing they exist in the environment, it may be possible to detect adversary use of credentials they have obtained. Monitor the command-line arguments of executing processes for suspicious words or regular expressions that may indicate searching for a password (for example: password, pwd, login, secure, or credentials). See [Valid Accounts](https://attack.mitre.org/techniques/T1078) for more information.&lt;br /&gt;['T1059.008']: Consider reviewing command history in either the console or as part of the running memory to determine if unauthorized or suspicious commands were used to modify device configuration. (Citation: Cisco IOS Software Integrity Assurance - Command History) Consider comparing a copy of the network device configuration against a known-good version to discover unauthorized changes to the command interpreter. The same process can be accomplished through a comparison of the run-time memory, though this is non-trivial and may require assistance from the vendor.&lt;br /&gt;['T1025']: Monitor executed commands and arguments for actions that could be taken to collect files from a system's connected removable media. For example, data may be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.&lt;br /&gt;['T1555.004']: Monitor executed commands and arguments of &lt;code&gt;vaultcmd.exe&lt;/code&gt; for suspicious activity, such as listing credentials from the Windows Credentials locker (i.e., &lt;code&gt;vaultcmd /listcreds:"Windows Credentials"&lt;/code&gt;).(Citation: Malwarebytes The Windows Vault)&lt;br /&gt;['T1218.014']: Monitor executed commands and arguments that may gather information about the victim's DNS that can be used during targeting.&lt;br /&gt;['T1037']: Monitor executed commands and arguments that may consist of logon scripts for unusual access by abnormal users or at abnormal times.&lt;br /&gt;['T1548']: Monitor executed commands and arguments that may circumvent mechanisms designed to control elevate privileges to gain higher-level permissions.&lt;br /&gt;['T1048.001']: Monitor executed commands and arguments that may steal data by exfiltrating it over a symmetrically encrypted network protocol other than that of the existing command and control channel.&lt;br /&gt;['T1562.002']: Monitor executed commands and arguments for commands that can be used to disable logging. For example, [Wevtutil](https://attack.mitre.org/software/S0645), auditpol, sc stop EventLog, and offensive tooling (such as [Mimikatz](https://attack.mitre.org/software/S0002) and Invoke-Phant0m) may be used to clear logs.(Citation: def_ev_win_event_logging)(Citation: evt_log_tampering)&lt;br /&gt;['T1567.001']: Monitor executed command and arguments that may exfiltrate data to a code repository rather than over their primary command and control channel.&lt;br /&gt;['T1048']: Monitor executed commands and arguments that may steal data by exfiltrating it over a different protocol than that of the existing command and control channel.&lt;br /&gt;['T1564.003']: Monitor executed commands and arguments that may use hidden windows to conceal malicious activity from the plain sight of users. In Windows, enable and configure event logging and PowerShell logging to check for the hidden window style.&lt;br /&gt;['T1555.002']: Monitor executed commands and arguments that may obtain root access (allowing them to read securityd's memory), then they can scan through memory to find the correct sequence of keys in relatively few tries to decrypt the user's logon keychain.&lt;br /&gt;['T1546.004']: Monitor executed commands and arguments that may establish persistence through executing malicious commands triggered by a user's shell.&lt;br /&gt;['T1197']: Monitor executed commands and arguments from the BITSAdmin tool (especially the 'Transfer', 'Create', 'AddFile', 'SetNotifyFlags', 'SetNotifyCmdLine', 'SetMinRetryDelay', 'SetCustomHeaders', and 'Resume' command options)(Citation: Microsoft BITS) Admin logs, PowerShell logs, and the Windows Event log for BITS activity.(Citation: Elastic - Hunting for Persistence Part 1) Also consider investigating more detailed information about jobs by parsing the BITS job database.(Citation: CTU BITS Malware June 2016)&lt;br /&gt;['T1134.002']: Monitor executed commands and arguments to detect token manipulation by auditing command-line activity. Specifically, analysts should look for use of the runas command or similar artifacts. Detailed command-line logging is not enabled by default in Windows.(Citation: Microsoft Command-line Logging)&lt;br /&gt;['T1059.005']: Monitor executed commands and arguments that may abuse Visual Basic (VB) for execution.&lt;br /&gt;['T1553.006']: Monitor for the execution of commands that could modify the code signing policy of a system, such as &lt;code&gt;bcdedit.exe -set TESTSIGNING ON&lt;/code&gt;. (Citation: Microsoft TESTSIGNING Feb 2021)&lt;br /&gt;['T1569.001']: Monitor command-line execution of the &lt;code&gt;launchctl&lt;/code&gt; command immediately followed by abnormal network connections.&lt;br /&gt;['T1070']: Monitor executed commands and arguments that may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined malware.&lt;br /&gt;['T1546.011']: Monitor executed commands and arguments for sdbinst.exe for potential indications of application shim abuse.&lt;br /&gt;['T1563.001']: Monitor executed commands and arguments that may hijack a legitimate user's SSH session to move laterally within an environment.&lt;br /&gt;['T1053.005']: Monitor executed commands and arguments for actions that could be taken to gather tasks may also be created through Windows system management tools such as Windows Management Instrumentation and PowerShell, so additional logging may need to be configured to gather the appropriate data.&lt;br /&gt;['T1562']: Monitor executed commands and arguments that may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms.&lt;br /&gt;['T1010']: Monitor executed commands and arguments for actions that could be taken to gather system and network information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.&lt;br /&gt;['T1137.001']: Monitor executed commands and arguments that may abuse Microsoft Office templates to obtain persistence on a compromised system.&lt;br /&gt;['T1484.001']: Monitor executed commands and arguments that may modify Group Policy Objects (GPOs) to subvert the intended discretionary access controls for a domain, usually with the intention of escalating privileges on the domain.&lt;br /&gt;['T1546.012']: Monitor executed commands and arguments that may establish persistence and/or elevate privileges by executing malicious content triggered by Image File Execution Options (IFEO) debuggers.&lt;br /&gt;['T1134']: Monitor executed commands and arguments for token manipulation by auditing command-line activity. Specifically, analysts should look for use of the &lt;code&gt;runas&lt;/code&gt; command. Detailed command-line logging is not enabled by default in Windows.(Citation: Microsoft Command-line Logging)&lt;br /&gt;['T1563']: Monitor executed commands and arguments that may take control of preexisting sessions with remote services to move laterally in an environment.&lt;br /&gt;['T1574.011']: Monitor for the execution of commands and arguments that can be used for adversaries to modify services' registry keys and values through applications such as Windows Management Instrumentation and PowerShell. Additional logging may need to be configured to gather the appropriate data.&lt;br /&gt;['T1125']: Monitor executed commands and arguments that can leverage a computer's peripheral devices (e.g., integrated cameras or webcams) or applications (e.g., video call services) to capture video recordings for the purpose of gathering information.&lt;br /&gt;['T1546.009']: Monitor executed commands and arguments that may establish persistence and/or elevate privileges by executing malicious content triggered by AppCert DLLs loaded into processes.&lt;br /&gt;['T1204.003']: Monitor executed commands and arguments that may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior.&lt;br /&gt;['T1007']: Monitor executed commands and arguments that could be taken to gather system information related to services. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).&lt;br /&gt;['T1003.007']: Monitor executed commands and arguments that may gather credentials from information stored in the Proc filesystem or &lt;code&gt;/proc&lt;/code&gt;.&lt;br /&gt;['T1059.002']: Monitor executed commands and arguments that may abuse AppleScript for execution. Scripts are likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used.  Actions may be related to network and system information [Discovery](https://attack.mitre.org/tactics/TA0007), [Collection](https://attack.mitre.org/tactics/TA0009), or other scriptable post-compromise behaviors and could be used as indicators of detection leading back to the source script.&lt;br /&gt;['T1222.002']: Many of the commands used to modify ACLs and file/directory ownership are built-in system utilities and may generate a high false positive alert rate, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible. Commonly abused command arguments include &lt;code&gt;chmod +x&lt;/code&gt;, &lt;code&gt;chmod -R 755&lt;/code&gt;, and &lt;code&gt;chmod 777&lt;/code&gt;.(Citation: 20 macOS Common Tools and Techniques)&lt;br /&gt;['T1558']: Monitor executed commands and arguments that may attempt to subvert Kerberos authentication by stealing or forging Kerberos tickets to enable [Pass the Ticket](https://attack.mitre.org/techniques/T1550/003).&lt;br /&gt;['T1136.002']: Monitor executed commands and arguments for actions that are associated with local account creation, such as net user /add /domain.&lt;br /&gt;['T1490']: Use process monitoring to monitor the execution and command line parameters of binaries involved in inhibiting system recovery, such as vssadmin, wbadmin, and bcdedit.&lt;br /&gt;['T1546.008']: Monitor executed commands and arguments that may establish persistence and/or elevate privileges by executing malicious content triggered by accessibility features. Command line invocation of tools capable of modifying the Registry for associated keys are also suspicious. Utility arguments and the binaries themselves should be monitored for changes.&lt;br /&gt;['T1547.013']: Monitor executed commands and arguments that may modify XDG autostart entries to execute programs or commands during system boot.&lt;br /&gt;['T1016']: Monitor executed commands and arguments that may look for details about the network configuration and settings, such as IP and/or MAC addresses, of systems they access or through information discovery of remote systems.&lt;br /&gt;['T1497']: Monitor executed commands and arguments that may employ various means to detect and avoid virtualization and analysis environments. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary's implementation and monitoring required.&lt;br /&gt;['T1564']: Monitor executed commands and arguments that may attempt to hide artifacts associated with their behaviors to evade detection.&lt;br /&gt;['T1136']: Monitor executed commands and arguments for actions that are associated with account creation, such as net user or useradd&lt;br /&gt;['T1547.007']: Monitor executed commands and arguments that may modify plist files to automatically run an application when a user logs in.&lt;br /&gt;['T1218.002']: When executed from the command line or clicked, control.exe will execute the CPL file (ex: &lt;code&gt;control.exe file.cpl&lt;/code&gt;) before [Rundll32](https://attack.mitre.org/techniques/T1218/011) is used to call the CPL's API functions (ex: &lt;code&gt;rundll32.exe shell32.dll,Control_RunDLL file.cpl&lt;/code&gt;). CPL files can be executed directly via the CPL API function with just the latter [Rundll32](https://attack.mitre.org/techniques/T1218/011) command, which may bypass detections and/or execution filters for control.exe.(Citation: TrendMicro CPL Malware Jan 2014)&lt;br /&gt;['T1570']: Monitor executed commands and arguments for actions for abnormal usage of utilities and command-line arguments that may be used in support of remote transfer of files&lt;br /&gt;['T1555.005']: Monitor executed commands and arguments that may acquire user credentials from third-party password managers. (Citation: ise Password Manager February 2019)&lt;br /&gt;['T1039']: Monitor executed commands and arguments for actions that could be taken to collect files from a network share. Remote access tools with built-in features may interact directly with the Windows API to gather and copy to a location. Data may also be acquired and staged through Windows system management tools such as Windows Management Instrumentation and PowerShell.&lt;br /&gt;['T1069']: Monitor executed commands and arguments acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.&lt;br /&gt;['T1497.003']: Monitor executed commands and arguments that may employ various time-based methods to detect and avoid virtualization and analysis environments. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary's implementation and monitoring required.&lt;br /&gt;['T1137.002']: Monitor executed commands and arguments that may abuse the Microsoft Office "Office Test" Registry key to obtain persistence on a compromised system.&lt;br /&gt;['T1564.008']: On Windows systems, monitor for creation of suspicious inbox rules through the use of the &lt;code&gt;New-InboxRule&lt;/code&gt; and &lt;code&gt;Set-InboxRule&lt;/code&gt; PowerShell cmdlets.(Citation: Microsoft BEC Campaign)&lt;br /&gt;['T1021']: Monitor executed commands and arguments that may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to log into a service specifically designed to accept remote connections, such as telnet, SSH, and VNC. The adversary may then perform actions as the logged-on user.&lt;br /&gt;['T1553']: Command monitoring may reveal malicious attempts to modify trust settings, such as the installation of root certificates or modifications to trust attributes/policies applied to files.&lt;br /&gt;['T1563.002']: monitor service creation that uses cmd.exe /k or cmd.exe /c in its arguments to detect RDP session hijacking.&lt;br /&gt;['T1548.002']: Monitor executed commands and arguments that may bypass UAC mechanisms to elevate process privileges on system.&lt;br /&gt;['T1036.003']: Monitor executed commands and arguments for actions that could be taken to gather...&lt;br /&gt;['T1543.003']: Monitor processes and command-line arguments for actions that could create or modify services. Command-line invocation of tools capable of adding or modifying services may be unusual, depending on how systems are typically used in a particular environment. Services may also be modified through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001), so additional logging may need to be configured to gather the appropriate data. Also collect service utility execution and service binary path arguments used for analysis. Service binary paths may even be changed to execute commands or scripts.&lt;br /&gt;['T1217']: Monitor executed commands and arguments for actions that could be taken to gather browser bookmark information. Remote access tools with built-in features may interact directly using APIs to gather information. Information may also be acquired through system management tools such as Windows Management Instrumentation and PowerShell.&lt;br /&gt;['T1135']: Monitor executed commands and arguments that may look for folders and drives shared on remote systems as a means of identifying sources of information to gather as a precursor for Collection and to identify potential systems of interest for Lateral Movement.&lt;br /&gt;['T1567']: Monitor executed commands and arguments that may use an existing, legitimate external Web service to exfiltrate data rather than their primary command and control channel.&lt;br /&gt;['T1202']: Monitor executed commands and arguments to bypass security restrictions that limit the use of command-line interpreters. &lt;br /&gt;['T1561']: Monitor for direct access read/write attempts using the &lt;code&gt;\\\\.\\&lt;/code&gt; notation.(Citation: Microsoft Sysmon v6 May 2017) Monitor for unusual kernel driver installation activity.&lt;br /&gt;['T1059.003']: Monitor executed commands and arguments that may abuse the Windows command shell for execution. Usage of the Windows command shell may be common on administrator, developer, or power user systems depending on job function. If scripting is restricted for normal users, then any attempt to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.&lt;br /&gt;['T1548.003']: Monitor executed commands and arguments that may perform sudo caching and/or use the suoders file to elevate privileges, such as the &lt;code&gt;sudo&lt;/code&gt; command.&lt;br /&gt;['T1480.001']: Monitor executed commands and arguments that may gather the victim's physical location(s) that can be used during targeting. Detecting the use of environmental keying may be difficult depending on the implementation.&lt;br /&gt;['T1546.005']: Monitor executed commands and arguments that may establish persistence by executing malicious content triggered by an interrupt signal.&lt;br /&gt;['T1082']: Monitor executed commands and arguments that may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture.&lt;br /&gt;['T1564.002']: Monitor executed commands and arguments that could be taken to add a new user and subsequently hide it from login screens.&lt;br /&gt;['T1057']: Monitor executed commands and arguments for actions that may attempt to get information about running processes on a system.&lt;br /&gt;['T1110']: Monitor executed commands and arguments that may use brute force techniques to gain access to accounts when passwords are unknown or when password hashes are obtained.&lt;br /&gt;['T1218.010']: Command arguments used before and after the regsvr32.exe invocation may also be useful in determining the origin and purpose of the script or DLL being loaded. (Citation: Carbon Black Squiblydoo Apr 2016)&lt;br /&gt;['T1484']: Monitor executed commands and arguments for modifications to domain trust settings, such as when a user or application modifies the federation settings on the domain or updates domain authentication from Managed to Federated via ActionTypes &lt;code&gt;Set federation settings on domain&lt;/code&gt; and &lt;code&gt;Set domain authentication&lt;/code&gt;.(Citation: Microsoft - Azure Sentinel ADFSDomainTrustMods)(Citation: Microsoft 365 Defender Solorigate)&lt;br /&gt;['T1562.003']: Correlating a user session with a distinct lack of new commands in their &lt;code&gt;.bash_history&lt;/code&gt; can be a clue to suspicious behavior. Monitor for modification of PowerShell command history settings through processes being created with &lt;code&gt;-HistorySaveStyle SaveNothing&lt;/code&gt; command-line arguments and use of the PowerShell commands &lt;code&gt;Set-PSReadlineOption -HistorySaveStyle SaveNothing&lt;/code&gt; and &lt;code&gt;Set-PSReadLineOption -HistorySavePath {File Path}&lt;/code&gt;.&lt;br /&gt;['T1518']: Monitor executed commands and arguments that may attempt to get a listing of software and software versions that are installed on a system or in a cloud environment.&lt;br /&gt;['T1505.004']: Monitor execution and command-line arguments of &lt;code&gt;AppCmd.exe&lt;/code&gt;, which may be abused to install malicious IIS modules.(Citation: Microsoft IIS Modules Overview 2007)(Citation: Unit 42 RGDoor Jan 2018)(Citation: ESET IIS Malware 2021)&lt;br /&gt;['T1552.006']: Monitor executed commands and arguments that may search for SYSVOL data and/or GPP XML files, especially on compromised domain controllers.&lt;br /&gt;['T1040']: Monitor executed commands and arguments for actions that aid in sniffing network traffic to capture information about an environment, including authentication material passed over the network&lt;br /&gt;['T1218.005']: Look for mshta.exe executing raw or obfuscated script within the command-line. Compare recent invocations of mshta.exe with prior history of known good arguments and executed .hta files to determine anomalous and potentially adversarial activity. Command arguments used before and after the mshta.exe invocation may also be useful in determining the origin and purpose of the .hta file being executed.&lt;br /&gt;['T1056.002']: Monitor executed commands and arguments, such as requests for credentials and/or strings related to creating password prompts that may be malicious.(Citation: Spoofing credential dialogs)&lt;br /&gt;['T1505.005']: Monitor executed commands and arguments for potential adversary actions to modify Registry values (ex: &lt;code&gt;reg.exe&lt;/code&gt;) or modify/replace the legitimate &lt;code&gt;termsrv.dll&lt;/code&gt;.&lt;br /&gt;['T1069.002']: Monitor for executed commands and arguments that may attempt to find domain-level groups and permission settings.&lt;br /&gt;['T1562.009']: Monitor executed commands and arguments associated with making configuration changes to boot settings, such as &lt;code&gt;bcdedit.exe&lt;/code&gt; and &lt;code&gt;bootcfg.exe&lt;/code&gt;.(Citation: Microsoft bcdedit 2021)(Citation: Microsoft Bootcfg)(Citation: Sophos Snatch Ransomware 2019)&lt;br /&gt;['T1552.001']: While detecting adversaries accessing these files may be difficult without knowing they exist in the first place, it may be possible to detect adversary use of credentials they have obtained. Monitor executed commands and arguments of executing processes for suspicious words or regular expressions that may indicate searching for a password (for example: password, pwd, login, secure, or credentials). See [Valid Accounts](https://attack.mitre.org/techniques/T1078) for more information.&lt;br /&gt;['T1087.004']: Monitor logs for actions that could be taken to gather information about cloud accounts, including the use of calls to cloud APIs that perform account discovery.

System and network discovery techniques normally occur throughout an operation as an adversary learns the environment, and also to an extent in normal network operations. Therefore discovery data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.&lt;br /&gt;['T1027']: Monitor executed commands and arguments containing indicators of obfuscation and known suspicious syntax such as uninterpreted escape characters like '''^''' and '''"'''. Deobfuscation tools can be used to detect these indicators in files/payloads. (Citation: GitHub Revoke-Obfuscation) (Citation: FireEye Revoke-Obfuscation July 2017) (Citation: GitHub Office-Crackros Aug 2016)&lt;br /&gt;['T1201']: Monitor executed commands and arguments for actions that may attempt to access detailed information about the password policy used within an enterprise network or cloud environment.&lt;br /&gt;['T1547.003']: Monitor executed commands and arguments that may abuse time providers to execute DLLs when the system boots.&lt;br /&gt;['T1555']: Monitor executed commands and arguments that may search for common password storage locations to obtain user credentials.&lt;br /&gt;['T1552.002']: Monitor executed commands and arguments that may search the Registry on compromised systems for insecurely stored credentials.&lt;br /&gt;['T1562.001']: Monitor for the execution of commands and arguments associated with disabling or modification of security software processes or services such as &lt;code&gt;Set-MpPreference-DisableScriptScanning 1&lt;/code&gt; in Windows,&lt;code&gt;sudo spctl --master-disable&lt;/code&gt; in macOS, and &lt;code&gt;setenforce 0&lt;/code&gt; in Linux.&lt;br /&gt;['T1546.002']: Monitor executed commands and arguments of .scr files.&lt;br /&gt;['T1562.004']: Monitor executed commands and arguments associated with disabling or the modification of system firewalls such as &lt;code&gt;netsh advfirewall firewall set rule group="file and printer sharing" new enable=Yes&lt;/code&gt;,&lt;code&gt;ufw disable&lt;/code&gt;, and &lt;code&gt;ufw logging off&lt;/code&gt;.&lt;br /&gt;['T1546.014']: Monitor executed commands and arguments that may gain persistence and elevate privileges by executing malicious content triggered by the Event Monitor Daemon (emond).&lt;br /&gt;['T1074.002']: Monitor executed commands and arguments arguments for actions that could be taken to collect and combine files. Remote access tools with built-in features may interact directly with the Windows API to gather and copy to a location. Data may also be acquired and staged through Windows system management tools such as Windows Management Instrumentation and PowerShell.&lt;br /&gt;['T1486']: Monitor executed commands and arguments for actions involved in data destruction activity, such as vssadmin, wbadmin, and bcdedit&lt;br /&gt;['T1561.002']: Monitor executed commands and arguments that may corrupt or wipe the disk data structures on a hard drive necessary to boot a system; targeting specific critical systems or in large numbers in a network to interrupt availability to system and network resources.&lt;br /&gt;['T1556.005']: Monitor command-line usage for &lt;code&gt;-AllowReversiblePasswordEncryption $true&lt;/code&gt; or other actions that could be related to malicious tampering of user settings (i.e. [Group Policy Modification](https://attack.mitre.org/techniques/T1484/001)). &lt;br /&gt;['T1021.006']: Monitor executed commands and arguments that may invoke a WinRM script to correlate it with other related events.(Citation: Medium Detecting Lateral Movement)&lt;br /&gt;['T1564.001']: Monitor the file system and shell commands for files being created with a leading "." and the Windows command-line use of attrib.exe to add the hidden attribute.&lt;br /&gt;['T1615']: Monitor for suspicious use of &lt;code&gt;gpresult&lt;/code&gt;. Monitor for the use of PowerShell functions such as &lt;code&gt;Get-DomainGPO&lt;/code&gt; and &lt;code&gt;Get-DomainGPOLocalGroup&lt;/code&gt; and processes spawning with command-line arguments containing &lt;code&gt;GPOLocalGroup&lt;/code&gt;.&lt;br /&gt;['T1529']: Monitor executed commands and arguments of binaries involved in shutting down or rebooting systems.&lt;br /&gt;['T1053.006']: Monitor executed commands and arguments the 'systemd-run' utility as it may be used to create timers&lt;br /&gt;['T1137.004']: Monitor executed commands and arguments that may abuse Microsoft Outlook's Home Page feature to obtain persistence on a compromised system. Microsoft has released a PowerShell script to safely gather mail forwarding rules and custom forms in your mail environment as well as steps to interpret the output.(Citation: Microsoft Detect Outlook Forms)&lt;br /&gt;['T1037.002']: Monitor executed commands with arguments to install or modify login hooks.&lt;br /&gt;['T1037.004']: Monitor executed commands and arguments resulting from RC scripts for unusual or unknown applications or behavior&lt;br /&gt;['T1070.004']: Monitor executed commands and arguments for actions that could be utilized to unlink, rename, or delete files.&lt;br /&gt;['T1614']: Monitor executed commands and arguments that may gather information in an attempt to calculate the geographical location of a victim host.&lt;br /&gt;['T1083']: Monitor executed commands and arguments that may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system.&lt;br /&gt;['T1137.003']: Monitor executed commands and arguments that may abuse Microsoft Outlook forms to obtain persistence on a compromised system. Microsoft has released a PowerShell script to safely gather mail forwarding rules and custom forms in your mail environment as well as steps to interpret the output.(Citation: Microsoft Detect Outlook Forms)&lt;br /&gt;['T1543.001']: Ensure Launch Agent's &lt;code&gt; ProgramArguments &lt;/code&gt; key pointing to executables located in the &lt;code&gt;/tmp&lt;/code&gt; or &lt;code&gt;/shared&lt;/code&gt; folders are in alignment with enterprise policy. Ensure all Launch Agents with the &lt;code&gt;RunAtLoad&lt;/code&gt; key set to &lt;code&gt;true&lt;/code&gt; are in alignment with policy.&lt;br /&gt;['T1059']: Monitor command-line arguments for script execution and subsequent behavior. Actions may be related to network and system information Discovery, Collection, or other scriptable post-compromise behaviors and could be used as indicators of detection leading back to the source script. Scripts are likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. &lt;br /&gt;['T1119']: Monitor executed commands and arguments for actions that could be taken to collect internal data.&lt;br /&gt;['T1016.001']: Monitor executed commands and arguments that may check for Internet connectivity on compromised systems.&lt;br /&gt;['T1137.005']: Monitor executed commands and arguments that may abuse Microsoft Outlook rules to obtain persistence on a compromised system. Microsoft has released a PowerShell script to safely gather mail forwarding rules and custom forms in your mail environment as well as steps to interpret the output.(Citation: Microsoft Detect Outlook Forms) This PowerShell script is ineffective in gathering rules with modified PR_RULE_MSG_NAME and PR_RULE_MSG_PROVIDER properties caused by adversaries using a Microsoft Exchange Server Messaging API Editor (MAPI Editor), so only examination with the Exchange Administration tool MFCMapi can reveal these mail forwarding rules.(Citation: Pfammatter - Hidden Inbox Rules)&lt;br /&gt;['T1137.006']: Monitor executed commands and arguments that may abuse Microsoft Office add-ins to obtain persistence on a compromised system. &lt;br /&gt;['T1218.001']: Monitor executed commands and arguments that may forge SAML tokens with any permissions claims and lifetimes if they possess a valid SAML token-signing certificate.(Citation: Microsoft SolarWinds Steps)&lt;br /&gt;['T1012']: Monitor executed commands and arguments for actions that may interact with the Windows Registry to gather information about the system, configuration, and installed software.&lt;br /&gt;['T1003.004']: Monitor executed commands and arguments that may access to a host may attempt to access Local Security Authority (LSA) secrets. Remote access tools may contain built-in features or incorporate existing tools like Mimikatz. PowerShell scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module,(Citation: Powersploit) which may require additional logging features to be configured in the operating system to collect necessary information for analysis.&lt;br /&gt;['T1204']: Monitor the execution of and command-line arguments for applications that may be used by an adversary to gain Initial Access that require user interaction. This includes compression applications, such as those for zip files, that can be used to [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140) in payloads.&lt;br /&gt;['T1543.004']: Some legitimate LaunchDaemons point to unsigned code that could be exploited. For Launch Daemons with the &lt;code&gt;RunAtLoad&lt;/code&gt; parameter set to true, ensure the &lt;code&gt;Program&lt;/code&gt; parameter points to signed code or executables are in alignment with enterprise policy. Some parameters are interchangeable with others, such as &lt;code&gt;Program&lt;/code&gt; and &lt;code&gt;ProgramArguments&lt;/code&gt; parameters but one must be present. (Citation: launchd Keywords for plists)&lt;br /&gt;['T1496']: Monitor executed commands and arguments that may indicate common cryptomining functionality &lt;br /&gt;['T1574.012']: Extra scrutiny should be placed on suspicious modification of Registry keys such as COR_ENABLE_PROFILING, COR_PROFILER, and COR_PROFILER_PATH by command line tools like wmic.exe, setx.exe, and [Reg](https://attack.mitre.org/software/S0075). Monitoring for command-line arguments indicating a change to COR_PROFILER variables may aid in detection.&lt;br /&gt;['T1046']: Monitor executed commands and arguments that may attempt to get a listing of services running on remote hosts, including those that may be vulnerable to remote software exploitation.&lt;br /&gt;['T1222']: Many of the commands used to modify ACLs and file/directory ownership are built-in system utilities and may generate a high false positive alert rate, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible.&lt;br /&gt;['T1115']: Monitor executed commands and arguments to collect data stored in the clipboard from users copying information within or between applications.&lt;br /&gt;['T1087.003']: Monitor for execution of commands and arguments associated with enumeration or information gathering of email addresses and accounts such as &lt;code&gt;Get-AddressList&lt;/code&gt;, &lt;code&gt;Get-GlobalAddressList&lt;/code&gt;, and &lt;code&gt;Get-OfflineAddressBook&lt;/code&gt;.&lt;br /&gt;['T1052']: Monitor executed commands and arguments that may attempt to exfiltrate data via a physical medium, such as a removable drive.&lt;br /&gt;['T1552.003']: While users do typically rely on their history of commands, they often access this history through other utilities like "history" instead of commands like &lt;code&gt;cat ~/.bash_history&lt;/code&gt;.&lt;br /&gt;['T1003.005']: Monitor executed commands and arguments that may attempt to access cached domain credentials used to allow authentication to occur in the event a domain controller is unavailable.(Citation: Microsoft - Cached Creds). Remote access tools may contain built-in features or incorporate existing tools like Mimikatz. PowerShell scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module,(Citation: Powersploit) which may require additional logging features to be configured in the operating system to collect necessary information for analysis.
Detection of compromised https://attack.mitre.org/techniques/T1078 in-use by adversaries may help as well.&lt;br /&gt;['T1546']: Monitor executed commands and arguments that may establish persistence and/or elevate privileges using system mechanisms that trigger execution based on specific events.&lt;br /&gt;['T1036.004']: Monitor executed commands and arguments that may attempt to manipulate the name of a task or service to make it appear legitimate or benign.&lt;br /&gt;['T1059.006']: Monitor systems for abnormal Python usage and python.exe behavior, which could be an indicator of malicious activity. Understanding standard usage patterns is important to avoid a high number of false positives. If scripting is restricted for normal users, then any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent. Scripts are likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Monitor executed commands and arguments that may abuse Python commands and scripts for execution.&lt;br /&gt;['T1053']: Monitor executed commands and arguments that may abuse task scheduling functionality to facilitate initial or recurring execution of malicious code.&lt;br /&gt;['T1087']: Monitor logs and other sources of command execution history for actions that could be taken to gather information about accounts, including the use of calls to cloud APIs that perform account discovery.

System and network discovery techniques normally occur throughout an operation as an adversary learns the environment, and also to an extent in normal network operations. Therefore discovery data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.&lt;br /&gt;['T1480']: Monitor executed commands and arguments that may gather information about the victim's business relationships that can be used during targeting. Detecting the use of guardrails may be difficult depending on the implementation.&lt;br /&gt;['T1176']: Monitor executed commands and arguments for usage of the profiles tool, such as profiles install -type=configuration.&lt;br /&gt;['T1003.001']: Monitor executed commands and arguments that may attempt to access credential material stored in the process memory of the Local Security Authority Subsystem Service (LSASS). Remote access tools may contain built-in features or incorporate existing tools like Mimikatz. PowerShell scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module,(Citation: Powersploit) which may require additional logging features to be configured in the operating system to collect necessary information for analysis.&lt;br /&gt;['T1218.003']: Monitor executed commands and arguments that may gather information about the victim's hosts that can be used during targeting.&lt;br /&gt;['T1136.001']: Monitor executed commands and arguments for actions that are associated with local account creation, such as net user /add , useradd , and dscl -create&lt;br /&gt;['T1021.002']: Monitor executed commands and arguments that connect to remote shares, such as [Net](https://attack.mitre.org/software/S0039), on the command-line interface and Discovery techniques that could be used to find remotely accessible systems.(Citation: Medium Detecting WMI Persistence)&lt;br /&gt;['T1059.001']: If proper execution policy is set, adversaries will likely be able to define their own execution policy if they obtain administrator or system access, either through the Registry or at the command line. This change in policy on a system may be a way to detect malicious use of PowerShell. If PowerShell is not used in an environment, then simply looking for PowerShell execution may detect malicious activity. It is also beneficial to turn on PowerShell logging to gain increased fidelity in what occurs during execution (which is applied to .NET invocations). (Citation: Malware Archaeology PowerShell Cheat Sheet) PowerShell 5.0 introduced enhanced logging capabilities, and some of those features have since been added to PowerShell 4.0. Earlier versions of PowerShell do not have many logging features.(Citation: FireEye PowerShell Logging 2016) An organization can gather PowerShell execution details in a data analytic platform to supplement it with other data.&lt;br /&gt;['T1070.002']: Monitor executed commands and arguments for actions that could be taken to remove or overwrite system logs.&lt;br /&gt;['T1005']: Monitor executed commands and arguments that may search and collect local system sources, such as file systems or local databases, to find files of interest and sensitive data prior to Exfiltration. Remote access tools with built-in features may interact directly with the Windows API to gather data. Data may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).&lt;br /&gt;['T1546.003']: Monitor executed commands and arguments that can be used to register WMI persistence, such as the &lt;code&gt; Register-WmiEvent&lt;/code&gt; [PowerShell](https://attack.mitre.org/techniques/T1059/001) cmdlet (Citation: Microsoft Register-WmiEvent)&lt;br /&gt;['T1518.001']: Monitor executed commands and arguments that may attempt to get a listing of security software, configurations, defensive tools, and sensors that are installed on a system or in a cloud environment.&lt;br /&gt;['T1003.008']: Monitor executed commands and arguments that may attempt to dump the contents of &lt;code&gt;/etc/passwd&lt;/code&gt; and &lt;code&gt;/etc/shadow&lt;/code&gt; to enable offline password cracking.&lt;br /&gt;['T1087.001']: Monitor for execution of commands and arguments associated with enumeration or information gathering of local accounts and groups such as &lt;code&gt;net user&lt;/code&gt;, &lt;code&gt;net account&lt;/code&gt;, &lt;code&gt;net localgroup&lt;/code&gt;, &lt;code&gt;Get-LocalUser&lt;/code&gt;, and &lt;code&gt; dscl&lt;/code&gt;.

System and network discovery techniques normally occur throughout an operation as an adversary learns the environment, and also to an extent in normal network operations. Therefore discovery data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.&lt;br /&gt;['T1036']: Monitor executed commands and arguments that may attempt to manipulate features of their artifacts to make them appear legitimate or benign to users and/or security tools. (Citation: Twitter ItsReallyNick Masquerading Update)&lt;br /&gt;['T1053.003']: Monitor executed atq command and ensure IP addresses stored in the SSH_CONNECTION and SSH_CLIENT variables, machines that created the jobs, are trusted hosts. All at jobs are stored in /var/spool/cron/atjobs/.&lt;br /&gt;['T1114']: Monitor executed processes and command-line arguments for actions that could be taken to gather local email files. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.&lt;br /&gt;['T1120']: Monitor executed commands and arguments that may attempt to gather information about attached peripheral devices and components connected to a computer system.&lt;br /&gt;['T1011']: Monitor executed commands and arguments that may attempt to exfiltrate data over a different network medium than the command and control channel&lt;br /&gt;['T1561.001']: Monitor executed commands and arguments that may erase the contents of storage devices on specific systems or in large numbers in a network to interrupt availability to system and network resources.&lt;br /&gt;['T1124']: Monitor executed commands and arguments for actions that may gather the system time and/or time zone from a local or remote system.&lt;br /&gt;['T1069.001']: Monitor for executed commands and arguments that may attempt to find local system groups and permission settings.&lt;br /&gt;['T1052.001']: Monitor executed commands and arguments that may attempt to exfiltrate data over a USB connected physical device.&lt;br /&gt;['T1564.009']: Monitor executed commands and arguments that are leveraging the use of resource forks, especially those immediately followed by potentially malicious activity such as creating network connections.&lt;br /&gt;['T1070.003']: Monitor executed commands and arguments for actions that could be taken to clear command history, such as &lt;code&gt;Clear-History&lt;/code&gt; on Windows, or to disable writing command history, such as &lt;code&gt;history -c&lt;/code&gt; in bash/zsh.&lt;br /&gt;['T1543']: Command-line invocation of tools capable of modifying services may be unusual, depending on how systems are typically used in a particular environment. Look for abnormal process call trees from known services and for execution of other commands that could relate to Discovery or other adversary techniques.&lt;br /&gt;['T1137']: Monitor executed commands and arguments that may leverage Microsoft Office-based applications for persistence between startups. Microsoft has released a PowerShell script to safely gather mail forwarding rules and custom forms in your mail environment as well as steps to interpret the output.(Citation: Microsoft Detect Outlook Forms) SensePost, whose tool [Ruler](https://attack.mitre.org/software/S0358) can be used to carry out malicious rules, forms, and Home Page attacks, has released a tool to detect Ruler usage.(Citation: SensePost NotRuler)&lt;br /&gt;['T1564.006']: Consider monitoring for commands and arguments that may be atypical for benign use of virtualization software. Usage of virtualization binaries or command-line arguments associated with running a silent installation may be especially suspect (ex. &lt;code&gt;-silent&lt;/code&gt;, &lt;code&gt;-ignore-reboot&lt;/code&gt;), as well as those associated with running a headless (in the background with no UI) virtual instance (ex. &lt;code&gt;VBoxManage startvm $VM --type headless&lt;/code&gt;).(Citation: Shadowbunny VM Defense Evasion) Similarly, monitoring command line arguments which suppress notifications may highlight potentially malicious activity (ex. &lt;code&gt;VBoxManage.exe setextradata global GUI/SuppressMessages "all"&lt;/code&gt;). Monitor for commands which enable hypervisors such as Hyper-V.&lt;br /&gt;['T1567.002']: Monitor executed commands and arguments that may exfiltrate data to a cloud storage service rather than over their primary command and control channel.&lt;br /&gt;['T1114.002']: Monitor executed commands and arguments for actions that may target an Exchange server, Office 365, or Google Workspace to collect sensitive information.&lt;br /&gt;['T1218.007']: Command arguments used before and after the invocation of msiexec.exe may also be useful in determining the origin and purpose of the MSI files or DLLs being executed.&lt;br /&gt;['T1047']: Monitor executed commands and arguments for actions that are used to perform remote behavior&lt;br /&gt;['T1569.002']: Monitor executed commands and arguments that may abuse the Windows service control manager to execute malicious commands or payloads.&lt;br /&gt;['T1006']: Monitor executed commands and arguments that could be taken to copy files from the logical drive and evade common file system protections. Since this technique may also be used through [PowerShell](https://attack.mitre.org/techniques/T1059/001), additional logging of PowerShell scripts is recommended.&lt;br /&gt;['T1614.001']: Monitor executed commands and arguments that may attempt to gather information about the system language of a victim in order to infer the geographical location of that host.&lt;br /&gt;['T1546.015']: Monitor executed commands and arguments that may establish persistence by executing malicious content triggered by hijacked references to Component Object Model (COM) objects.&lt;br /&gt;['T1049']: Monitor executed commands and arguments that may attempt to get a listing of network connections to or from the compromised system they are currently accessing or from remote systems by querying for information over the network. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).&lt;br /&gt;['T1569']: Monitor for command line invocations of tools capable of modifying services that doesn't correspond to normal usage patterns and known software, patch cycles, etc.&lt;br /&gt;['T1059.007']: Scripting execution is likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Monitor processes and command-line arguments for execution and subsequent behavior. Actions may be related to network and system information [Discovery](https://attack.mitre.org/tactics/TA0007), [Collection](https://attack.mitre.org/tactics/TA0009), or other programmable post-compromise behaviors and could be used as indicators of detection leading back to the source. Monitor for execution of JXA through &lt;code&gt;osascript&lt;/code&gt; and usage of &lt;code&gt;OSAScript&lt;/code&gt; API that may be related to other suspicious behavior occurring on the system. &lt;br /&gt;['T1622']: Monitor executed commands and arguments that may employ various means to detect and avoid debugged environments. Detecting actions related to debugger identification may be difficult depending on the adversary's implementation and monitoring required.&lt;br /&gt;['T1485']: Monitor executed commands and arguments for binaries that could be involved in data destruction activity, such as SDelete.&lt;br /&gt;['T1218.004']: Monitor executed commands and arguments used before and after the InstallUtil.exe invocation may also be useful in determining the origin and purpose of the binary being executed.&lt;br /&gt;['T1218']: Monitor executed commands and arguments that may forge credential materials that can be used to gain access to web applications or Internet services.&lt;br /&gt;['T1574']: Monitor executed commands and arguments that may execute their own malicious payloads by hijacking the way operating systems run programs.&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Audit OSX" url="https://www.scip.ch/en/?labs.20150108"/>
            <reference name="Confluence Linux Command  Line" url="https://confluence.atlassian.com/confkb/how-to-enable-command-line-audit-logging-in-linux-956166545.html"/>
            <reference name="Mitre ATT&amp;CK Data Source DS0017" url="https://attack.mitre.org/data-sources/DS0017"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:01.929">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-DS0022" name="File" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>A computer resource object, managed by the I/O system, for storing data (such as images, text, videos, computer programs, or any wide variety of other media).(Citation: Microsoft File Mgmt)&lt;br /&gt;&lt;p&gt;Detailed detections per technique:&lt;/p&gt;&lt;br /&gt;['T1070.002']: Monitor for unexpected deletion of a system log file, typically stored in /var/logs or /Library/Logs. &lt;br /&gt;['T1485']: Monitor for unexpected deletion to a file (ex: Sysmon EID 23) &lt;br /&gt;['T1554']: Monitor for unexpected deletion of  client software binaries to establish persistent access to systems.&lt;br /&gt;['T1070']: Monitor for a file that may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined malware.&lt;br /&gt;['T1070.001']: Monitor for unexpected deletion of Windows event logs (via native binaries) and may also generate an alterable event (Event ID 1102: "The audit log was cleared")&lt;br /&gt;['T1565.003']: Monitor for unexpected deletion of a file in order to manipulate external outcomes or hide activity &lt;br /&gt;['T1490']: The Windows event logs, ex. Event ID 524 indicating a system catalog was deleted, may contain entries associated with suspicious activity.&lt;br /&gt;['T1070.003']: Monitor for unexpected deletion of a command history file, such as ConsoleHost_history.txt, ~/.zsh_history, or ~/.bash_history.&lt;br /&gt;['T1070.004']: Monitor for unexpected deletion of files from the system&lt;br /&gt;['T1552.006']: Monitor for attempts to access SYSVOL that involve searching for XML files.&lt;br /&gt;['T1114.001']: Monitor for unusual processes accessing local email files that may target user email on local systems to collect sensitive information.&lt;br /&gt;['T1074']: Monitor processes that appear to be reading files from disparate locations and writing them to the same directory or file may be an indication of data being staged, especially if they are suspected of performing encryption or compression on the files, such as 7zip, RAR, ZIP, or zlib.&lt;br /&gt;['T1555.004']: Consider monitoring file reads to Vault locations, &lt;code&gt;&amp;percnt;Systemdrive&amp;percnt;&amp;bsol;Users&amp;bsol;&amp;bsol;&amp;lsqb;Username&amp;rsqb;&amp;bsol;AppData&amp;bsol;Local&amp;bsol;Microsoft&amp;bsol;&amp;bsol;&amp;lsqb;Vault&amp;sol;Credentials&amp;rsqb;&amp;bsol;&lt;/code&gt;, for suspicious activity.(Citation: Malwarebytes The Windows Vault)&lt;br /&gt;['T1552.003']: Monitoring when the user's &lt;code&gt;.bash_history&lt;/code&gt; is read can help alert to suspicious activity.&lt;br /&gt;['T1187']: Monitor for unexpected files used to gather credentials when the files are rendered&lt;br /&gt;['T1011.001']: Monitor for files being accessed that could be related to exfiltration, such as file reads by a process that also has an active network connection. Also monitor for and investigate changes to host adapter settings, such as addition and/or replication of communication interfaces. &lt;br /&gt;['T1020']: Monitor for abnormal access to files (i.e. .pdf, .docx, .jpg, etc.), especially sensitive documents, through the use of automated processing after being gathered during Collection.&lt;br /&gt;['T1048.003']: Monitor files viewed in isolation that may steal data by exfiltrating it over a symmetrically encrypted network protocol other than that of the existing command and control channel.&lt;br /&gt;['T1091']: Monitor for unexpected files accessed on removable media.&lt;br /&gt;['T1555.005']: Monitor file reads that may acquire user credentials from third-party password managers.(Citation: ise Password Manager February 2019)&lt;br /&gt;['T1052']: Monitor file access on removable media that may attempt to exfiltrate data via a physical medium, such as a removable drive.&lt;br /&gt;['T1041']: Monitor for suspicious files (i.e. .pdf, .docx, .jpg, etc.) viewed in isolation that may steal data by exfiltrating it over an existing command and control channel.&lt;br /&gt;['T1555.003']: Identify web browser files that contain credentials such as Google Chrome's Login Data database file: &lt;code&gt;AppData\Local\Google\Chrome\User Data\Default\Login Data&lt;/code&gt;. Monitor file read events of web browser files that contain credentials, especially when the reading process is unrelated to the subject web browser.&lt;br /&gt;['T1018']: Monitor for files (such as &lt;code&gt;/etc/hosts&lt;/code&gt;) being accessed that may attempt to get a listing of other systems by IP address, hostname, or other logical identifier on a network that may be used for Lateral Movement from the current system&lt;br /&gt;['T1025']: Monitor for unexpected/abnormal file accesses to removable media (optical disk drive, USB memory, etc.) connected to the compromised system. &lt;br /&gt;['T1048.001']: Monitor for files viewed in isolation that may steal data by exfiltrating it over a symmetrically encrypted network protocol other than that of the existing command and control channel.&lt;br /&gt;['T1003.003']: Monitor for access or copy of the NTDS.dit.&lt;br /&gt;['T1003.002']: Monitor for hash dumpers opening the Security Accounts Manager (SAM) on the local file system (&lt;code&gt;%SystemRoot%/system32/config/SAM&lt;/code&gt;). Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromised [Valid Accounts](https://attack.mitre.org/techniques/T1078) in-use by adversaries may help as well.&lt;br /&gt;['T1003.007']: Monitor for unexpected access to passwords and hashes stored in memory, processes must open a maps file in the /proc filesystem for the process being analyzed. This file is stored under the path &lt;code&gt;/proc/\/maps&lt;/code&gt;, where the &lt;code&gt;\&lt;/code&gt; directory is the unique pid of the program being interrogated for such authentication data. The AuditD monitoring tool, which ships stock in many Linux distributions, can be used to watch for hostile processes opening this file in the proc file system, alerting on the pid, process name, and arguments of such programs.&lt;br /&gt;['T1003.008']: Monitor for files being accessed that may attempt to dump the contents of &lt;code&gt;/etc/passwd&lt;/code&gt; and &lt;code&gt;/etc/shadow&lt;/code&gt; to enable offline password cracking. The AuditD monitoring tool, which ships stock in many Linux distributions, can be used to watch for hostile processes attempting to access &lt;code&gt;/etc/passwd&lt;/code&gt; and &lt;code&gt;/etc/shadow&lt;/code&gt;, alerting on the pid, process name, and arguments of such programs.&lt;br /&gt;['T1555']: Monitor for files being accessed that may search for common password storage locations to obtain user credentials.&lt;br /&gt;['T1567']: Monitor for files being accessed by an existing, legitimate external Web service to exfiltrate data rather than their primary command and control channel.&lt;br /&gt;['T1539']: Monitor for an attempt by a user to gain access to a network or computing resource, often by providing credentials to cloud service management consoles. Some cloud providers, such as AWS, provide distinct log events for login attempts to the management console.&lt;br /&gt;['T1567.002']: Monitor for files being accessed to exfiltrate data to a cloud storage service rather than over their primary command and control channel.&lt;br /&gt;['T1114']: Monitor for unusual processes access of local system email files for Exfiltration, unusual processes connecting to an email server within a network, or unusual access patterns or authentication attempts on a public-facing webmail server may all be indicators of malicious activity.&lt;br /&gt;['T1048']: Monitor for suspicious files (i.e. .pdf, .docx, .jpg, etc.) viewed in isolation that may steal data by exfiltrating it over a different protocol than that of the existing command and control channel.&lt;br /&gt;['T1217']: Monitor for unexpected browser bookmarks viewed in isolation, this showcases part of a chain of behavior that could lead to other activities, such as Collection and Exfiltration, based on the information obtained.&lt;br /&gt;['T1052.001']: Monitor file access on removable media that may attempt to exfiltrate data over a USB connected physical device.&lt;br /&gt;['T1555.001']: Monitor for Keychain files being accessed that may be related to malicious credential collection.&lt;br /&gt;['T1033']: Monitor for hash dumpers opening the Security Accounts Manager (SAM) on the local file system (&lt;code&gt;%SystemRoot%/system32/config/SAM&lt;/code&gt;). Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromised  [Valid Accounts](https://attack.mitre.org/techniques/T1078) in-use by adversaries may help as well.&lt;br /&gt;['T1003']: Monitor for hash dumpers opening the Security Accounts Manager (SAM) on the local file system (&lt;code&gt;%SystemRoot%/system32/config/SAM&lt;/code&gt;). Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromised ( LinkById: T1078) in-use by adversaries may help as well.&lt;br /&gt;['T1119']: Monitor for unexpected files (i.e. .pdf, .docx, .jpg, etc.) viewed for collecting internal data.&lt;br /&gt;['T1039']: Monitor for unexpected files (i.e. .pdf, .docx, .jpg, etc.)  interacting with network shares.&lt;br /&gt;['T1552.004']: Monitor access to files and directories related to cryptographic keys and certificates as a means for potentially detecting access patterns that may indicate collection and exfiltration activity. &lt;br /&gt;['T1558']: Monitor for unexpected processes interacting with lsass.exe.(Citation: Medium Detecting Attempts to Steal Passwords from Memory) Common credential dumpers such as  [Mimikatz](https://attack.mitre.org/software/S0002) access the LSA Subsystem Service (LSASS) process by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details, including Kerberos tickets, are stored. Monitor for unusual processes accessing &lt;code&gt;secrets.ldb&lt;/code&gt; and &lt;code&gt;.secrets.mkey&lt;/code&gt; located in &lt;code&gt;/var/lib/sss/secrets/&lt;/code&gt;.&lt;br /&gt;['T1087']: Monitor access to file resources that contain local accounts and groups information such as &lt;code&gt;/etc/passwd&lt;/code&gt;, &lt;code&gt;/Users&lt;/code&gt; directories, and the SAM database. 

If access requires high privileges, look for non-admin objects (such as users or processes) attempting to access restricted file resources.&lt;br /&gt;['T1552']: Monitor for suspicious file access activity, specifically indications that a process is reading multiple files in a short amount of time and/or using command-line arguments indicative of searching for credential material (ex: regex patterns). These may be indicators of automated/scripted credential access behavior. Monitoring when the user's &lt;code&gt;.bash_history&lt;/code&gt; is read can help alert to suspicious activity. While users do typically rely on their history of commands, they often access this history through other utilities like "history" instead of commands like &lt;code&gt;cat ~/.bash_history&lt;/code&gt;.&lt;br /&gt;['T1011']: Monitor for files being accessed that could be related to exfiltration, such as file reads by a process that also has an active network connection.&lt;br /&gt;['T1567.001']: Monitor for files being accessed to exfiltrate data to a code repository rather than over their primary command and control channel.&lt;br /&gt;['T1087.001']: Monitor access to file resources that contain local accounts and groups information such as &lt;code&gt;/etc/passwd&lt;/code&gt;, &lt;code&gt;/Users&lt;/code&gt; directories, and the Windows SAM database. 

If access requires high privileges, look for non-admin objects (such as users or processes) attempting to access restricted file resources.&lt;br /&gt;['T1005']: Monitor for unexpected/abnormal access to files that may be malicious collection of local data, such as user files (pdf, .docx, .jpg, etc.) or local databases.&lt;br /&gt;['T1552.001']: Monitor for files being accessed that may search local file systems and remote file shares for files containing insecurely stored credentials. While detecting adversaries accessing these files may be difficult without knowing they exist in the first place, it may be possible to detect adversary use of credentials they have obtained. &lt;br /&gt;['T1053.005']: Monitor Windows Task Scheduler stores in %systemroot%\System32\Tasks for change entries related to scheduled tasks that do not correlate with known software, patch cycles, etc.&lt;br /&gt;['T1574.001']: Monitor for changed made to .manifest/.local redirection files, or file systems for moving, renaming, replacing, or modifying DLLs. Changes in the set of DLLs that are loaded by a process (compared with past behavior) that do not correlate with known software, patches, etc., are suspicious.&lt;br /&gt;['T1574.005']: Monitor for changes to binaries and service executables that may normally occur during software updates. &lt;br /&gt;['T1547.009']: Since a shortcut's target path likely will not change, modifications to shortcut files that do not correlate with known software changes, patches, removal, etc., may be suspicious. Analysis should attempt to relate shortcut file change events to other potentially suspicious events based on known adversary behavior such as process launches of unknown executables that make network connections.&lt;br /&gt;['T1037']: Monitor for changes made to files that are modified by unusual accounts outside of normal administration duties.&lt;br /&gt;['T1564.002']: Monitor for changes made to files that may use hidden users to mask the presence of user accounts they create or modify. Monitor for changes made to the &lt;code&gt;/Library/Preferences/com.apple.loginwindow&lt;/code&gt; plist file for unexpected modifications to the &lt;code&gt; Hide500Users&lt;/code&gt; key value on macOS.(Citation: Cybereason OSX Pirrit)&lt;br /&gt;['T1036']: Monitor for changes made to files outside of an update or patch that may attempt to manipulate features of their artifacts to make them appear legitimate or benign to users and/or security tools.&lt;br /&gt;['T1556.004']: Monitor for changes made to the checksum of the operating system file and verifying the image of the operating system in memory.(Citation: Cisco IOS Software Integrity Assurance - Image File Verification)(Citation: Cisco IOS Software Integrity Assurance - Run-Time Memory Verification) Detection of this behavior may be difficult, detection efforts may be focused on closely related adversary behaviors, such as Modify System Image.&lt;br /&gt;['T1600']: File Modification&lt;br /&gt;['T1548.003']: On Linux, auditd can alert every time a user's actual ID and effective ID are different (this is what happens when you sudo). This technique is abusing normal functionality in macOS and Linux systems, but sudo has the ability to log all input and output based on the &lt;code&gt;LOG_INPUT&lt;/code&gt; and &lt;code&gt;LOG_OUTPUT&lt;/code&gt; directives in the &lt;code&gt;/etc/sudoers&lt;/code&gt; file.&lt;br /&gt;['T1543.001']: Launch Agents also require files on disk for persistence which can also be monitored via other file monitoring applications.&lt;br /&gt;['T1053.003']: Monitor for changes made to files for unexpected modifications to access permissions and attributes &lt;br /&gt;['T1070']: Monitor for changes made to a file may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined malware.&lt;br /&gt;['T1056']: Monitor for changes made to files for unexpected modifications to access permissions and attributes  &lt;br /&gt;['T1546.011']: Monitor for changes made to files that may establish persistence and/or elevate privileges by executing malicious content triggered by application shims.&lt;br /&gt;['T1574.010']: Monitor for modification of binaries and service executables that do not occur during a regular software update or an update scheduled by the organization. Modification of files considers actions such as renaming and directory moving.&lt;br /&gt;['T1505']: Monitor for changes made to files that may abuse legitimate extensible development features of servers to establish persistent access to systems.&lt;br /&gt;['T1053.006']: Monitor for changes made to systemd timer unit files for unexpected modification events within the /etc/systemd/system, /usr/lib/systemd/system/, and ~/.config/systemd/user/ directories, as well as associated symbolic links&lt;br /&gt;['T1056.003']: Monitor for changes made to detect changes to files in the Web directory for organization login pages that do not match with authorized updates to the Web server's content.&lt;br /&gt;['T1546.002']: Monitor for changes made to files that may establish persistence by executing malicious content triggered by user inactivity.&lt;br /&gt;['T1546.013']: Locations where &lt;code&gt;profile.ps1&lt;/code&gt; can be stored should be monitored for modifications. (Citation: Malware Archaeology PowerShell Cheat Sheet) Example profile locations include:
* &lt;code&gt;$PsHome\Profile.ps1&lt;/code&gt;
* &lt;code&gt;$PsHome\Microsoft.{HostProgram}_profile.ps1&lt;/code&gt;
* &lt;code&gt;$Home\My Documents\PowerShell\Profile.ps1&lt;/code&gt;
* &lt;code&gt;$Home\My Documents\PowerShell\Microsoft.{HostProgram}_profile.ps1&lt;/code&gt;&lt;br /&gt;['T1564.003']: Monitor for changes made to files that may use hidden windows to conceal malicious activity from the plain sight of users. In MacOS, plist files are ASCII text files with a specific format, so they're relatively easy to parse. File monitoring can check for the &lt;code&gt;apple.awt.UIElement&lt;/code&gt; or any other suspicious plist tag in plist files and flag them.&lt;br /&gt;['T1547.001']: Monitor the start folder for additions or changes. Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including the startup folders. (Citation: TechNet Autoruns)&lt;br /&gt;['T1565.003']: Monitor for unexpected files with manipulated data in order to manipulate external outcomes or hide activity&lt;br /&gt;['T1070.006']: Monitor for unexpected modifications to file timestamps &lt;br /&gt;['T1489']: Monitor for changes made to files that may stop or disable services on a system to render those services unavailable to legitimate users.&lt;br /&gt;['T1564.005']: Detecting the use of a hidden file system may be exceptionally difficult depending on the implementation. Emphasis may be placed on detecting related aspects of the adversary lifecycle, such as how malware interacts with the hidden file system or how a hidden file system is loaded.&lt;br /&gt;['T1037.002']: Monitor for changes to login hook files (&lt;code&gt;/Library/Preferences/com.apple.loginwindow.plist&lt;/code&gt;), especially by unusual accounts outside of normal administration duties.&lt;br /&gt;['T1574.009']: Monitor for changes made to files that may execute their own malicious payloads by hijacking vulnerable file path references.&lt;br /&gt;['T1491.002']: Monitor external websites for unplanned content changes.&lt;br /&gt;['T1486']: Monitor for changes made to files in user directories.&lt;br /&gt;['T1055.009']: Monitor for changes made to /proc files that may inject malicious code into processes via the /proc filesystem in order to evade process-based defenses as well as possibly elevate privileges. Users should not have permission to modify these in most cases. &lt;br /&gt;['T1098']: Monitor for changes made to files related to account settings, such as /etc/ssh/sshd_config and the authorized_keys file for each user on a system.&lt;br /&gt;['T1564.004']: There are many ways to create and interact with ADSs using Windows utilities. Monitor for operations (execution, copies, etc.) with file names that contain colons. This syntax (ex: &lt;code&gt;file.ext:ads[.ext]&lt;/code&gt;) is commonly associated with ADSs. (Citation: Microsoft ADS Mar 2014) (Citation: Oddvar Moe ADS1 Jan 2018) (Citation: Oddvar Moe ADS2 Apr 2018) For a more exhaustive list of utilities that can be used to execute and create ADSs, see https://gist.github.com/api0cradle/cdd2d0d0ec9abb686f0e89306e277b8f.&lt;br /&gt;['T1600.002']: There is no documented method for defenders to directly identify behaviors that reduce encryption key space. Detection efforts may be focused on closely related adversary behaviors, such as Modify System Image and Network Device CLI. Some detection methods require vendor support to aid in investigation.&lt;br /&gt;['T1187']: Monitor for changes made to the .LNK, .SCF, or any other files on systems and within virtual environments that contain resources that point to external network resources &lt;br /&gt;['T1543.004']: Monitor files for changes that may create or modify Launch Daemons to execute malicious payloads as part of persistence.&lt;br /&gt;['T1546.004']: Monitor for changes to &lt;code&gt;/etc/profile&lt;/code&gt; and &lt;code&gt;/etc/profile.d&lt;/code&gt;, these files should only be modified by system administrators. MacOS users can leverage Endpoint Security Framework file events monitoring these specific files.(Citation: ESF_filemonitor)&lt;br /&gt;['T1098.004']: Monitor for changes made to detect changes made to the authorized_keys file for each user on a system. Monitor for changes to and suspicious processes modifiying /etc/ssh/sshd_config.&lt;br /&gt;['T1548']: On Linux, auditd can alert every time a user's actual ID and effective ID are different (this is what happens when you sudo). This technique is abusing normal functionality in macOS and Linux systems, but sudo has the ability to log all input and output based on the &lt;code&gt;LOG_INPUT&lt;/code&gt; and &lt;code&gt;LOG_OUTPUT&lt;/code&gt; directives in the &lt;code&gt;/etc/sudoers&lt;/code&gt; file. Consider monitoring for &lt;code&gt;/usr/libexec/security_authtrampoline&lt;/code&gt; executions which may indicate that AuthorizationExecuteWithPrivileges is being executed. MacOS system logs may also indicate when AuthorizationExecuteWithPrivileges is being called.&lt;br /&gt;['T1037.004']: Monitor for changes made to files for unexpected modifications to RC scripts in the /etc/ directory&lt;br /&gt;['T1554']: Monitor changes to client software that do not correlate with known software or patch cycles.&lt;br /&gt;['T1070.002']: Monitor for changes made to system log files, typically stored in  /var/log or /Library/Logs, for unexpected modifications to access permissions and attributes &lt;br /&gt;['T1055']: Monitor for changes made to files that may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges.&lt;br /&gt;['T1036.003']: Monitor for changes made to files for unexpected modifications to file names that are mismatched between the file name on disk and that of the binary's PE metadata. This is a likely indicator that a binary was renamed after it was compiled.  &lt;br /&gt;['T1547.015']: All login items created via shared file lists are viewable by using the System Preferences GUI or in the &lt;code&gt;~/Library/Application Support/com.apple.backgroundtaskmanagementagent/backgrounditems.btm&lt;/code&gt; file.(Citation: Open Login Items Apple)(Citation: Startup Items Eclectic)(Citation: objsee block blocking login items)(Citation: sentinelone macos persist Jun 2019) These locations should be monitored and audited.&lt;br /&gt;['T1574']: Monitor file systems for moving, renaming, replacing, or modifying DLLs. Changes in the set of DLLs that are loaded by a process (compared with past behavior) that do not correlate with known software, patches, etc., are suspicious. Modifications to or creation of .manifest and .local redirection files that do not correlate with software updates are suspicious.&lt;br /&gt;['T1546']: Monitor for changes made to files that may establish persistence and/or elevate privileges using system mechanisms that trigger execution based on specific events.&lt;br /&gt;['T1556']: Monitor PAM configuration and module paths (ex: /etc/pam.d/) for changes. Use system-integrity tools such as AIDE and monitoring tools such as auditd to monitor PAM files.&lt;br /&gt;['T1137.002']: Monitor for changes made to files that may abuse the Microsoft Office "Office Test" Registry key to obtain persistence on a compromised system.&lt;br /&gt;['T1564']: Monitor for changes made to files that may attempt to hide artifacts associated with their behaviors to evade detection.&lt;br /&gt;['T1547.006']: Monitor for changes made to files that may modify the kernel to automatically execute programs on system boot.&lt;br /&gt;['T1574.006']: Monitor for changes to environment variables and files associated with loading shared libraries such as LD_PRELOAD on Linux and DYLD_INSERT_LIBRARIES on macOS.&lt;br /&gt;['T1553']: Periodically baseline registered SIPs and trust providers (Registry entries and files on disk), specifically looking for new, modified, or non-Microsoft entries.(Citation: SpectorOps Subverting Trust Sept 2017) Also analyze Autoruns data for oddities and anomalies, specifically malicious files attempting persistent execution by hiding within auto-starting locations. Autoruns will hide entries signed by Microsoft or Windows by default, so ensure "Hide Microsoft Entries" and "Hide Windows Entries" are both deselected.(Citation: SpectorOps Subverting Trust Sept 2017)

On macOS, the removal of the &lt;code&gt;com.apple.quarantine&lt;/code&gt; flag by a user instead of the operating system is a suspicious action and should be examined further. Also monitor software update frameworks that may strip this flag when performing updates.&lt;br /&gt;['T1137.006']: Monitor for changes made to files that may abuse Microsoft Office add-ins to obtain persistence on a compromised system.&lt;br /&gt;['T1546.008']: Monitor for changes made to files that may establish persistence and/or elevate privileges by executing malicious content triggered by accessibility features. Changes to accessibility utility binaries or binary paths that do not correlate with known software, patch cycles, etc., are suspicious.&lt;br /&gt;['T1546.006']: Monitor file systems for changes to application binaries and invalid checksums/signatures.&lt;br /&gt;['T1137']: Monitor for changes made to files that may leverage Microsoft Office-based applications for persistence between startups.&lt;br /&gt;['T1553.003']: Periodically baseline registered SIPs and trust providers (Registry entries and files on disk), specifically looking for new, modified, or non-Microsoft entries.(Citation: SpectorOps Subverting Trust Sept 2017) Also analyze Autoruns data for oddities and anomalies, specifically malicious files attempting persistent execution by hiding within auto-starting locations. Autoruns will hide entries signed by Microsoft or Windows by default, so ensure "Hide Microsoft Entries" and "Hide Windows Entries" are both deselected.(Citation: SpectorOps Subverting Trust Sept 2017)&lt;br /&gt;['T1037.003']: Monitor for changes made to files for unexpected modifications to unusual accounts outside of normal administration duties  &lt;br /&gt;['T1569.001']: Every Launch Agent and Launch Daemon must have a corresponding plist file on disk which can be monitored. Plist files are located in the root, system, and users &lt;code&gt;/Library/LaunchAgents&lt;/code&gt; or &lt;code&gt;/Library/LaunchDaemons&lt;/code&gt; folders. [Launch Agent](https://attack.mitre.org/techniques/T1543/001) or [Launch Daemon](https://attack.mitre.org/techniques/T1543/004) with executable paths pointing to /tmp and /Shared folders locations are potentially suspicious.&lt;br /&gt;['T1543']: Monitor for changes to files associated with system-level processes.&lt;br /&gt;['T1569']: Monitor for changes made to files that may abuse system services or daemons to execute commands or programs.&lt;br /&gt;['T1547']: Monitor for changes made to files that may configure system settings to automatically execute a program during system boot or logon to maintain persistence or gain higher-level privileges on compromised systems.&lt;br /&gt;['T1505.005']: Monitor unexpected changes and/or interactions with &lt;code&gt;termsrv.dll&lt;/code&gt;, which is typically stored in &lt;code&gt;%SystemRoot%\System32\&lt;/code&gt;.&lt;br /&gt;['T1546.005']: Monitor for changes made to files that may establish persistence by executing malicious content triggered by an interrupt signal.&lt;br /&gt;['T1543.002']: Systemd service unit files may be detected by auditing file creation and modification events within the &lt;code&gt;/etc/systemd/system&lt;/code&gt;, &lt;code&gt;/usr/lib/systemd/system/&lt;/code&gt;, and &lt;code&gt;/home/&lt;username&gt;/.config/systemd/user/&lt;/code&gt; directories, as well as associated symbolic links&lt;br /&gt;['T1505.003']: Monitor for changes made to files that may backdoor web servers with web shells to establish persistent access to systems.&lt;br /&gt;['T1556.001']: Monitor for changes to functions exported from authentication-related system DLLs (such as cryptdll.dll and samsrv.dll).(Citation: Dell Skeleton)&lt;br /&gt;['T1601.002']: Monitor for changes made to the operating system of a network device because image downgrade may be used in conjunction with  [Patch System Image](https://attack.mitre.org/techniques/T1601/001), it may be appropriate to also verify the integrity of the vendor provided operating system image file.&lt;br /&gt;['T1547.008']: Monitor for changes made to files that may modify or add LSASS drivers to obtain persistence on compromised systems.&lt;br /&gt;['T1553.001']: The removal of the &lt;code&gt;com.apple.quarantine&lt;/code&gt; flag by a user instead of the operating system is a suspicious action and should be examined further. Also monitor software update frameworks that may strip this flag when performing updates.&lt;br /&gt;['T1574.004']: Monitor file systems for moving, renaming, replacing, or modifying dylibs. Changes in the set of dylibs that are loaded by a process (compared to past behavior) that do not correlate with known software, patches, etc., are suspicious. Check the system for multiple dylibs with the same name and monitor which versions have historically been loaded into a process.&lt;br /&gt;['T1485']: Monitor for changes made to a large quantity of files for unexpected modifications in user directories and under C:\Windows\System32\.&lt;br /&gt;['T1037.005']: Monitor for changes made to files for unexpected modifications to /Library/StartupItem folder&lt;br /&gt;['T1647']: Monitor for plist file modification, especially if immediately followed by other suspicious events such as code execution from &lt;code&gt;\~/Library/Scripts&lt;/code&gt; or &lt;code&gt;\~/Library/Preferences&lt;/code&gt;. Also, monitor for significant changes to any path pointers in a modified plist.&lt;br /&gt;['T1574.008']: Monitor for programs metadata modifications such as deletion of the path to an executable since it makes programs vulnerable to this type of technique. Also, monitor modifications of files such as renaming programs using Windows system utilities names.&lt;br /&gt;['T1080']: Monitor for files that write or overwrite many files to a network shared directory may be suspicious.&lt;br /&gt;['T1547.013']: Malicious XDG autostart entries may be detected by auditing file modification events within the &lt;code&gt;/etc/xdg/autostart&lt;/code&gt; and &lt;code&gt;~/.config/autostart&lt;/code&gt; directories. Depending on individual configurations, defenders may need to query the environment variables &lt;code&gt;$XDG_CONFIG_HOME&lt;/code&gt; or &lt;code&gt;$XDG_CONFIG_DIRS&lt;/code&gt; to determine the paths of Autostart entries. Autostart entry files not associated with legitimate packages may be considered suspicious. Suspicious entries can also be identified by comparing entries to a trusted system baseline.&lt;br /&gt;['T1053']: Monitor for changes made to files that may abuse task scheduling functionality to facilitate initial or recurring execution of malicious code.&lt;br /&gt;['T1601.001']: Compare the checksum of the operating system file with the checksum of a known good copy from a trusted source. Some embedded network device platforms may have the capability to calculate the checksum of the file, while others may not. Even for those platforms that have the capability, it is recommended to download a copy of the file to a trusted computer to calculate the checksum with software that is not compromised.https://tools.cisco.com/security/center/resources/integrity_assurance.html#7

Many vendors of embedded network devices can provide advanced debugging support that will allow them to work with device owners to validate the integrity of the operating system running in memory. If a compromise of the operating system is suspected, contact the vendor technical support and seek such services for a more thorough inspection of the current running system. https://tools.cisco.com/security/center/resources/integrity_assurance.html#13&lt;br /&gt;['T1546.014']: Monitor emond rules creation by checking for files modified in &lt;code&gt;/etc/emond.d/rules/&lt;/code&gt; and &lt;code&gt;/private/var/db/emondClients&lt;/code&gt;.&lt;br /&gt;['T1140']: Monitor for changes made to files for unexpected modifications that attempt to hide artifacts.&lt;br /&gt;['T1053.002']: On Windows, monitor Windows Task Scheduler stores in `%systemroot%\System32\Tasks` for change entries related to scheduled tasks, especially those that do not correlate with known software, patch cycles, etc. On Linux and macOS, all [at](https://attack.mitre.org/software/S0110) jobs are stored in &lt;code&gt;/var/spool/cron/atjobs/&lt;/code&gt;.(Citation: rowland linux at 2019)&lt;br /&gt;['T1070.003']: Monitor for changes made to command history files, such as ConsoleHost_history.txt, ~/.zsh_history, or ~/.bash_history, for unexpected modifications to contents, access permissions, and attributes.&lt;br /&gt;['T1505.004']: Monitor for modification of files (especially DLLs on webservers) that could be abused as malicious ISAPI extensions/filters or IIS modules. Changes to &lt;code&gt;%windir%\system32\inetsrv\config\applicationhost.config&lt;/code&gt; could indicate an IIS module installation.(Citation: Microsoft IIS Modules Overview 2007)(Citation: ESET IIS Malware 2021)&lt;br /&gt;['T1491.001']: Monitor internal and websites for unplanned content changes.&lt;br /&gt;['T1137.001']: Monitor for changes made to files that may abuse Microsoft Office templates to obtain persistence on a compromised system. Modification to base templates, like Normal.dotm, should also be investigated since the base templates should likely not contain VBA macros. Changes to the Office macro security settings should also be investigated&lt;br /&gt;['T1547.007']: Monitoring the specific plist files associated with reopening applications can indicate when an application has registered itself to be reopened.&lt;br /&gt;['T1491']: Monitor for changes made to files for unexpected modifications to internal and external websites for unplanned content changes.&lt;br /&gt;['T1564.008']: On MacOS systems, monitor for modifications to the &lt;code&gt;RulesActiveState.plist&lt;/code&gt;, &lt;code&gt;SyncedRules.plist&lt;/code&gt;, &lt;code&gt;UnsyncedRules.plist&lt;/code&gt;, and &lt;code&gt;MessageRules.plist&lt;/code&gt; files.(Citation: MacOS Email Rules)&lt;br /&gt;['T1548.001']: Monitor for changes made to files that may perform shell escapes or exploit vulnerabilities in an application with the setsuid or setgid bits to get code running in a different user's context.&lt;br /&gt;['T1014']: Monitor for changes and the existence of unrecognized DLLs, drivers, devices, services, and to the MBR. (Citation: Wikipedia Rootkit)&lt;br /&gt;['T1601']: Most embedded network devices provide a command to print the version of the currently running operating system. Use this command to query the operating system for its version number and compare it to what is expected for the device in question. Because this method may be used in conjunction with  [Patch System Image](https://attack.mitre.org/techniques/T1601/001), it may be appropriate to also verify the integrity of the vendor provided operating system image file.

Compare the checksum of the operating system file with the checksum of a known good copy from a trusted source. Some embedded network device platforms may have the capability to calculate the checksum of the file, while others may not. Even for those platforms that have the capability, it is recommended to download a copy of the file to a trusted computer to calculate the checksum with software that is not compromised. (Citation: Cisco IOS Software Integrity Assurance - Image File Verification)

Many vendors of embedded network devices can provide advanced debugging support that will allow them to work with device owners to validate the integrity of the operating system running in memory. If a compromise of the operating system is suspected, contact the vendor technical support and seek such services for a more thorough inspection of the current running system.  (Citation: Cisco IOS Software Integrity Assurance - Run-Time Memory Verification)&lt;br /&gt;['T1053.007']: Monitor for newly constructed files by using the logging agents on Kubernetes nodes and retrieve logs from sidecar proxies for application and resource pods to monitor malicious container orchestration job deployments.&lt;br /&gt;['T1574.007']: Monitor for newly constructed files for files named after partial directories and in locations that may be searched for common processes through the environment variable, or otherwise should not be user writable. Also, monitor file creation for programs that are named after Windows system programs or programs commonly executed without a path (such as "findstr," "net," and "python"). If this activity occurs outside of known administration activity, upgrades, installations, or patches, then it may be suspicious.&lt;br /&gt;['T1204.001']: malicious documents and files that are downloaded from a link and executed on the user's computer&lt;br /&gt;['T1137.001']: Monitor for newly constructed files that may abuse Microsoft Office templates to obtain persistence on a compromised system.&lt;br /&gt;['T1137']: Monitor for newly constructed files that may leverage Microsoft Office-based applications for persistence between startups.&lt;br /&gt;['T1218.002']: Monitor for newly constructed files that may forge web cookies that can be used to gain access to web applications or Internet services.&lt;br /&gt;['T1560.002']: Monitor newly constructed files being written with extensions and/or headers associated with compressed or encrypted file types. Detection efforts may focus on follow-on exfiltration activity, where compressed or encrypted files can be detected in transit with a network intrusion detection or data loss prevention system analyzing file headers.&lt;br /&gt;['T1037.002']: Monitor for the creation of and/or changes to login hook files (&lt;code&gt;/Library/Preferences/com.apple.loginwindow.plist&lt;/code&gt;), especially by unusual accounts outside of normal administration duties.&lt;br /&gt;['T1037.004']: Monitor for newly constructed /etc/rc.local file &lt;br /&gt;['T1574.006']: Monitor for newly constructed files that are added to absolute paths of shared libraries such as LD_PRELOAD on Linux and DYLD_INSERT_LIBRARIES on macOS.&lt;br /&gt;['T1566']: Monitor for newly constructed files from a phishing messages to gain access to victim systems.&lt;br /&gt;['T1546.004']: Monitor for newly constructed files that may establish persistence through executing malicious commands triggered by a user's shell. For most Linux and macOS systems, a list of file paths for valid shell options available on a system are located in the &lt;code&gt;/etc/shells&lt;/code&gt; file.&lt;br /&gt;['T1036.007']: Monitor for files written to disk that contain two file extensions, particularly when the second is an executable.&lt;br /&gt;['T1574.005']: Monitor for newly constructed files to match an existing service executable, it could be detected and correlated with other suspicious behavior.  &lt;br /&gt;['T1105']: Monitor for file creation and files transferred into the network&lt;br /&gt;['T1491']: Monitor for newly constructed visual content for internal or external enterprise networks. &lt;br /&gt;['T1037.005']: Monitor for newly constructed files by unusual accounts outside of normal administration duties&lt;br /&gt;['T1074.001']: Monitor publicly writeable directories, central locations, and commonly used staging directories (recycle bin, temp folders, etc.) to regularly check for compressed or encrypted data that may be indicative of staging.&lt;br /&gt;['T1053']: Monitor newly constructed files that may abuse task scheduling functionality to facilitate initial or recurring execution of malicious code.&lt;br /&gt;['T1546.005']: Monitor for newly constructed files that may establish persistence by executing malicious content triggered by an interrupt signal.&lt;br /&gt;['T1505.003']: File monitoring may be used to detect changes to files in the Web directory of a Web server that do not match with updates to the Web server's content and may indicate implantation of a Web shell script.(Citation: NSA Cyber Mitigating Web Shells)&lt;br /&gt;['T1547']: Monitor for newly constructed files that may configure system settings to automatically execute a program during system boot or logon to maintain persistence or gain higher-level privileges on compromised systems.&lt;br /&gt;['T1543.001']: Monitor for newly constructed files that may create or modify launch agents to repeatedly execute malicious payloads as part of persistence.&lt;br /&gt;['T1547.013']: Malicious XDG autostart entries may be detected by auditing file creation events within the &lt;code&gt;/etc/xdg/autostart&lt;/code&gt; and &lt;code&gt;~/.config/autostart&lt;/code&gt; directories. Depending on individual configurations, defenders may need to query the environment variables &lt;code&gt;$XDG_CONFIG_HOME&lt;/code&gt; or &lt;code&gt;$XDG_CONFIG_DIRS&lt;/code&gt; to determine the paths of Autostart entries. Autostart entry files not associated with legitimate packages may be considered suspicious. Suspicious entries can also be identified by comparing entries to a trusted system baseline.&lt;br /&gt;['T1027.004']: Monitor for newly constructed files for payloads&lt;br /&gt;['T1543.004']: Monitor for new files added to the &lt;code&gt;/Library/LaunchDaemons/&lt;/code&gt; folder. The System LaunchDaemons are protected by SIP.&lt;br /&gt;['T1574']: Monitor for newly constructed files that may execute their own malicious payloads by hijacking the way operating systems run programs.&lt;br /&gt;['T1546.002']: Monitor newly constructed files that may establish persistence by executing malicious content triggered by user inactivity.&lt;br /&gt;['T1547.012']: Monitor for newly constructed files that may abuse print processors to run malicious DLLs during system boot for persistence and/or privilege escalation.&lt;br /&gt;['T1574.010']: Monitor for creation of binaries and service executables that do not occur during a regular software update or an update scheduled by the organization. This behavior also considers files that are overwritten.&lt;br /&gt;['T1547.010']: Monitor newly constructed files that may use port monitors to run an attacker supplied DLL during system boot for persistence or privilege escalation.&lt;br /&gt;['T1491.001']: Monitor for newly constructed files that may deface systems internal to an organization in an attempt to intimidate or mislead users.&lt;br /&gt;['T1027']: Detection of file obfuscation is difficult unless artifacts are left behind by the obfuscation process that are uniquely detectable with a signature. If detection of the obfuscation itself is not possible, it may be possible to detect the malicious activity that caused the obfuscated file (for example, the method that was used to write, read, or modify the file on the file system).&lt;br /&gt;['T1564.001']: Monitor the file system and shell commands for files being created with a leading "."&lt;br /&gt;['T1218.001']: Monitor presence and use of CHM files, especially if they are not typically used within an environment.&lt;br /&gt;['T1218']: Monitor for file activity (creations, downloads, modifications, etc.), especially for file types that are not typical within an environment and may be indicative of adversary activity.&lt;br /&gt;['T1556.002']: Monitor for newly constructed files that may register malicious password filter dynamic link libraries (DLLs) into the authentication process to acquire user credentials as they are validated.&lt;br /&gt;['T1556']: Monitor for suspicious additions to the /Library/Security/SecurityAgentPlugins directory.(Citation: Xorrior Authorization Plugins)&lt;br /&gt;['T1204']: Anti-virus can potentially detect malicious documents and files that are downloaded and executed on the user's computer. Endpoint sensing or network sensing can potentially detect malicious events once the file is opened (such as a Microsoft Word document or PDF reaching out to the internet or spawning powershell.exe).&lt;br /&gt;['T1574.009']: Monitor file creation for files named after partial directories and in locations that may be searched for common processes through the environment variable, or otherwise should not be user writable. Also, monitor file creation for programs that are named after Windows system programs or programs commonly executed without a path (such as "findstr," "net," and "python"). If this activity occurs outside of known administration activity, upgrades, installations, or patches, then it may be suspicious.&lt;br /&gt;['T1546']: Monitor newly constructed files that may establish persistence and/or elevate privileges using system mechanisms that trigger execution based on specific events.&lt;br /&gt;['T1491.002']: Monitor for newly constructed files that may deface systems external to an organization in an attempt to deliver messaging, intimidate, or otherwise mislead an organization or users.&lt;br /&gt;['T1546.014']: Monitor emond rules creation by checking for files created in &lt;code&gt;/etc/emond.d/rules/&lt;/code&gt; and &lt;code&gt;/private/var/db/emondClients&lt;/code&gt;.&lt;br /&gt;['T1547.009']: Monitor for LNK files created with a Zone Identifier value greater than 1, which may indicate that the LNK file originated from outside of the network.(Citation: BSidesSLC 2020 - LNK Elastic) Analysis should attempt to relate shortcut creation events to other potentially suspicious events based on known adversary behavior such as process launches of unknown executables that make network connections.&lt;br /&gt;['T1547.006']: Monitor for newly constructed files that may modify the kernel to automatically execute programs on system boot.&lt;br /&gt;['T1187']: Monitor for newly constructed .LNK, .SCF, or any other files on systems and within virtual environments that contain resources that point to external network resources &lt;br /&gt;['T1546.008']: Monitor newly constructed files that may establish persistence and/or elevate privileges by executing malicious content triggered by accessibility features.&lt;br /&gt;['T1547.008']: Monitor newly constructed files that may modify or add LSASS drivers to obtain persistence on compromised systems.&lt;br /&gt;['T1496']: Monitor for common cryptomining files on local systems that may indicate compromise and resource usage&lt;br /&gt;['T1505.004']: Monitor for creation of files (especially DLLs on webservers) that could be abused as malicious ISAPI extensions/filters or IIS modules.&lt;br /&gt;['T1565']: Monitor for newly constructed files in order to manipulate external outcomes or hide activity&lt;br /&gt;['T1505']: Consider monitoring file locations associated with the installation of new application software components such as paths from which applications typically load such extensible components.&lt;br /&gt;['T1218.005']: Monitor use of HTA files. If they are not typically used within an environment then execution of them may be suspicious&lt;br /&gt;['T1566.001']: Monitor for newly constructed files from a spearphishing emails with a malicious attachment in an attempt to gain access to victim systems.&lt;br /&gt;['T1486']: Monitor for newly constructed files in user directories.&lt;br /&gt;['T1574.004']: Monitor for newly constructed dylibs&lt;br /&gt;['T1137.002']: Monitor for newly constructed files that may abuse the Microsoft Office "Office Test" Registry key to obtain persistence on a compromised system.&lt;br /&gt;['T1204.002']: Monitor for newly constructed files that are downloaded and executed on the user's computer. Endpoint sensing or network sensing can potentially detect malicious events once the file is opened (such as a Microsoft Word document or PDF reaching out to the internet or spawning powershell.exe).&lt;br /&gt;['T1543']: Monitor for newly constructed files that may create or modify system-level processes to repeatedly execute malicious payloads as part of persistence.&lt;br /&gt;['T1218.014']: Monitor for creation and use of .msc files. MMC may legitimately be used to call Microsoft-created .msc files, such as &lt;code&gt;services.msc&lt;/code&gt; or &lt;code&gt;eventvwr.msc&lt;/code&gt;. Invoking non-Microsoft .msc files may be an indicator of malicious activity.&lt;br /&gt;['T1037']: Monitor for newly constructed files that may use scripts automatically executed at boot or logon initialization to establish persistence.&lt;br /&gt;['T1574.001']: Monitor newly constructed .manifest and .local redirection files that do not correlate with software updates.&lt;br /&gt;['T1189']: Monitor for newly constructed files written to disk to gain access to a system through a user visiting a website over the normal course of browsing.&lt;br /&gt;['T1564.006']: Monitor for newly constructed files associated with running a virtual instance, such as binary files associated with common virtualization technologies (ex: VirtualBox, VMware, QEMU, Hyper-V).&lt;br /&gt;['T1080']: Monitor for newly constructed files from files that write or overwrite many files to a network shared directory may be suspicious.&lt;br /&gt;['T1574.002']: Monitor for newly constructed files in common folders on the computer system.&lt;br /&gt;['T1564.009']: Monitor for newly constructed files that may abuse resource forks to hide malicious code or executables to evade detection and bypass security applications.&lt;br /&gt;['T1176']: Monitor for newly constructed files and/or all installed extensions maintain a plist file in the /Library/Managed Preferences/username/ directory. Ensure all listed files are in alignment with approved extensions&lt;br /&gt;['T1553.005']: Monitor compressed/archive and image files downloaded from the Internet as the contents may not be tagged with the MOTW. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities.&lt;br /&gt;['T1570']: Monitor newly constructed files to/from a lateral tool transfer &lt;br /&gt;['T1564']: Monitor for newly constructed files that may attempt to hide artifacts associated with their behaviors to evade detection.&lt;br /&gt;['T1546.013']: Locations where &lt;code&gt;profile.ps1&lt;/code&gt; can be stored should be monitored for new profiles. (Citation: Malware Archaeology PowerShell Cheat Sheet) Example profile locations include:
* &lt;code&gt;$PsHome\Profile.ps1&lt;/code&gt;
* &lt;code&gt;$PsHome\Microsoft.{HostProgram}_profile.ps1&lt;/code&gt;
* &lt;code&gt;$Home\My Documents\PowerShell\Profile.ps1&lt;/code&gt;
* &lt;code&gt;$Home\My Documents\PowerShell\Microsoft.{HostProgram}_profile.ps1&lt;/code&gt;&lt;br /&gt;['T1027.006']: Monitor for newly constructed files via JavaScript, developing rules for the different variants, with a combination of different encoding and/or encryption schemes, may be very challenging. Consider monitoring files downloaded from the Internet, possibly by HTML Smuggling, for suspicious activities. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities.&lt;br /&gt;['T1554']: Monitor for newly constructed files that may modify client software binaries to establish persistent access to systems.&lt;br /&gt;['T1091']: Monitor for newly constructed files on removable media&lt;br /&gt;['T1137.006']: Monitor for newly constructed files that may abuse Microsoft Office add-ins to obtain persistence on a compromised system.&lt;br /&gt;['T1564']: Monitor for contextual data about a file, which may include information such as name, the content (ex: signature, headers, or data/media), user/ower, permissions that may attempt to hide artifacts associated with their behaviors to evade detection.&lt;br /&gt;['T1036.005']: Collect file hashes; file names that do not match their expected hash are suspect. Perform file monitoring; files with known names but in unusual locations are suspect. Likewise, files that are modified outside of an update or patch are suspect.&lt;br /&gt;['T1036.002']: Monitor for common formats of RTLO characters within filenames such as \u202E, [U+202E], and %E2%80%AE. Defenders should also check their analysis tools to ensure they do not interpret the RTLO character and instead print the true name of the file containing it.&lt;br /&gt;['T1070']: Monitor for contextual file data that may show signs of deletion or alter generated artifacts on a host system, including logs or captured files such as quarantined malware.&lt;br /&gt;['T1553']: Collect and analyze signing certificate metadata on software that executes within the environment to look for unusual certificate characteristics and outliers.&lt;br /&gt;['T1055.013']: Scan file objects reported during the PsSetCreateProcessNotifyRoutine, (Citation: Microsoft PsSetCreateProcessNotifyRoutine routine) which triggers a callback whenever a process is created or deleted, specifically looking for file objects with enabled write access. (Citation: BlackHat Process Doppelganging Dec 2017) Also consider comparing file objects loaded in memory to the corresponding file on disk. (Citation: hasherezade Process Doppelganging Dec 2017)&lt;br /&gt;['T1546.006']: Changes to binaries that do not line up with application updates or patches are also extremely suspicious.&lt;br /&gt;['T1027.003']: Detection of steganography is difficult unless artifacts are left behind by the obfuscation process that are detectable with a known signature. Look for strings or other signatures left in system artifacts related to decoding steganography.&lt;br /&gt;['T1195.002']: Use verification of distributed binaries through hash checking or other integrity checking mechanisms. Scan downloads for malicious signatures and attempt to test software and updates prior to deployment while taking note of potential suspicious activity.&lt;br /&gt;['T1222.002']: Monitor and investigate attempts to modify ACLs and file/directory ownership. Consider enabling file/directory permission change auditing on folders containing key binary/configuration files.&lt;br /&gt;['T1027.001']: Depending on the method used to pad files, a file-based signature may be capable of detecting padding using a scanning or on-access based tool. When executed, the resulting process from padded files may also exhibit other behavior characteristics of being used to conduct an intrusion such as system and network information Discovery or Lateral Movement, which could be used as event indicators that point to the source file.&lt;br /&gt;['T1546']: Monitor for contextual data about a file, which may include information such as name, the content (ex: signature, headers, or data/media), user/ower, permissions, etc.&lt;br /&gt;['T1564.001']: Monitor for contextual data about a file, which may include information such as name, the content (ex: signature, headers, or data/media), user/ower, permissions may set files and directories to be hidden to evade detection mechanisms.&lt;br /&gt;['T1564.009']: Identify files with the &lt;code&gt;com.apple.ResourceFork&lt;/code&gt; extended attribute and large data amounts stored in resource forks.&lt;br /&gt;['T1070.006']: Monitor for file modifications that collects information on file handle opens and can compare timestamp values&lt;br /&gt;['T1565.003']: Monitor for contextual data about a file, which may include information such as name, the content (ex: signature, headers, or data/media), user/ower, permissions, etc that would aid in the manipulation of data to hide activity&lt;br /&gt;['T1564.007']: If the document is opened with a Graphical User Interface (GUI) the malicious p-code is decompiled and may be viewed. However, if the &lt;code&gt;PROJECT&lt;/code&gt; stream, which specifies the project properties, is modified in a specific way the decompiled VBA code will not be displayed. For example, adding a module name that is undefined to the &lt;code&gt;PROJECT&lt;/code&gt; stream will inhibit attempts of reading the VBA source code through the GUI.(Citation: FireEye VBA stomp Feb 2020)&lt;br /&gt;['T1553.005']: Monitor files (especially those downloaded from untrusted locations) for MOTW attributes. Also consider inspecting and scanning file formats commonly abused to bypass MOTW (ex: .arj, .gzip, .iso, .vhd).&lt;br /&gt;['T1218.011']: Analyze contextual data about executed DLL files, which may include information such as name, the content (ex: signature, headers, or data/media), age, user/ower, permissions, etc.&lt;br /&gt;['T1553.001']: Review &lt;code&gt;false&lt;/code&gt; values under the &lt;code&gt;LSFileQuarantineEnabled&lt;/code&gt; entry in an application's &lt;code&gt;Info.plist&lt;/code&gt; file (required by every application). &lt;code&gt;false&lt;/code&gt; under &lt;code&gt;LSFileQuarantineEnabled&lt;/code&gt; indicates that an application does not use the quarantine flag. Unsandboxed applications with an unspecified &lt;code&gt;LSFileQuarantineEnabled&lt;/code&gt; entry will default to not setting the quarantine flag.

QuarantineEvents is a SQLite database containing a list of all files assigned the &lt;code&gt;com.apple.quarantine&lt;c/ode&gt; attribute, located at &lt;code&gt;~/Library/Preferences/com.apple.LaunchServices.QuarantineEventsV2&lt;/code&gt;. Each event contains the corresponding UUID, timestamp, application, Gatekeeper score, and decision if it was allowed. (Citation: TheEclecticLightCompany Quarantine and the flag)&lt;br /&gt;['T1548']: Monitor the file system for files that have the setuid or setgid bits set. On Linux, auditd can alert every time a user's actual ID and effective ID are different (this is what happens when you sudo).&lt;br /&gt;['T1036']: Collect file hashes; file names that do not match their expected hash are suspect. Perform file monitoring; files with known names but in unusual locations are suspect. Look for indications of common characters that may indicate an attempt to trick users into misidentifying the file type, such as a space as the last character of a file name or the right-to-left override characters"\u202E", "[U+202E]", and "%E2%80%AE".&lt;br /&gt;['T1036.006']: Monitor for spaces at the end of file names, that can easily be checked with file monitoring. From the user's perspective though, this is very hard to notice from within the Finder.app or on the command-line in Terminal.app. Processes executed from binaries containing non-standard extensions in the filename are suspicious.&lt;br /&gt;['T1564.004']: Monitor for contextual data about a file, which may include information such as name, the content (ex: signature, headers, or data/media), user/ower, permissions, may use NTFS file attributes to hide their malicious data in order to evade detection. Forensic techniques exist to identify information stored in NTFS EA. (Citation: Journey into IR ZeroAccess NTFS EA)&lt;br /&gt;['T1027.002']: Use file scanning to look for known software packers or artifacts of packing techniques. Packing is not a definitive indicator of malicious activity, because legitimate software may use packing techniques to reduce binary size or to protect proprietary code.&lt;br /&gt;['T1222']: Monitor and investigate attempts to modify ACLs and file/directory ownership.&lt;br /&gt;['T1548.001']: Monitor the file system for files that have the setuid or setgid bits set.&lt;br /&gt;['T1036.001']: Collect and analyze signing certificate metadata and check signature validity on software that executes within the environment, look for invalid signatures as well as unusual certificate characteristics and outliers.&lt;br /&gt;['T1554']: Collect and analyze signing certificate metadata and check signature validity on software that executes within the environment&lt;br /&gt;['T1036.003']: Collecting and comparing disk and resource filenames for binaries by looking to see if the InternalName, OriginalFilename, and/or ProductName match what is expected could provide useful leads, but may not always be indicative of malicious activity.&lt;br /&gt;['T1222.001']: Consider enabling file/directory permission change auditing on folders containing key binary/configuration files. For example, Windows Security Log events (Event ID 4670) are created when DACLs are modified.&lt;br /&gt;['T1570']: Monitor for alike file hashes or characteristics (ex: filename) that are created on multiple hosts.&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Microsoft File Mgmt" url="https://docs.microsoft.com/en-us/windows/win32/fileio/file-management"/>
            <reference name="Mitre ATT&amp;CK Data Source DS0022" url="https://attack.mitre.org/data-sources/DS0022"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:01.949">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-DS0018" name="Firewall" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>A network security system, running locally on an endpoint or remotely as a service (ex: cloud environment), that monitors and controls incoming/outgoing network traffic based on predefined rules(Citation: AWS Sec Groups VPC)&lt;br /&gt;&lt;p&gt;Detailed detections per technique:&lt;/p&gt;&lt;br /&gt;['T1518']: Monitor for an extracted list of available firewalls and/or their associated settings/rules (ex: Azure Network Firewall CLI Show commands)&lt;br /&gt;['T1562.007']: Monitor for changes in the status of the system firewall such as Windows Security Auditing events 5025 (The Windows firewall service has been stopped) and 5034 (The Windows firewall driver was stopped).&lt;br /&gt;['T1562.004']: Monitor for changes made to firewall rules that might allow remote communication over protocols such as SMD and RDP. Modification of firewall rules might also consider opening local ports and services for different network profiles such as public and domain.&lt;br /&gt;['T1562']: Monitor for changes made to firewall rules for unexpected modifications to allow/block specific network traffic that may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms.&lt;br /&gt;['T1562.007']: Monitor cloud logs for modification or creation of new security groups or firewall rules.&lt;br /&gt;['T1518.001']: Monitor for contextual data about a firewall and activity around it such as name, policy, or status&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="AWS Sec Groups VPC" url="https://docs.aws.amazon.com/vpc/latest/userguide/VPC_SecurityGroups.html"/>
            <reference name="Mitre ATT&amp;CK Data Source DS0018" url="https://attack.mitre.org/datasources/DS0018"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:01.936">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-DS0036" name="Group" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>A collection of multiple user accounts that share the same access rights to the computer and/or network resources and have common security rights(Citation: Amazon IAM Groups)&lt;br /&gt;&lt;p&gt;Detailed detections per technique:&lt;/p&gt;&lt;br /&gt;['T1069.003']: Monitor for an extracted list of available groups and/or their associated setting &lt;br /&gt;['T1069']: Monitor for an extracted list of ACLs of available groups and/or their associated settings.&lt;br /&gt;['T1098.002']: Monitor for unusual Exchange and Office 365 email account permissions changes that may indicate excessively broad permissions (including memberships in privileged groups) being granted to compromised accounts.&lt;br /&gt;['T1098']: Monitor events for changes to account objects and/or permissions on systems and the domain, such as event IDs 4738, 4728 and 4670.&lt;br /&gt;['T1069']: Monitor for contextual data about a group which describes group and activity around it.&lt;br /&gt;['T1069.003']: Contextual data about a group which describes group and activity around it that may attempt to find cloud groups and permission settings. &lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Amazon IAM Groups" url="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_groups.html"/>
            <reference name="Mitre ATT&amp;CK Data Source DS0036" url="https://attack.mitre.org/datasources/DS0036"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:02.021">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-DS0028" name="Logon Session" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>Logon occurring on a system or resource (local, domain, or cloud) to which a user/device is gaining access after successful authentication and authorizaton(Citation: Microsoft Audit Logon Events)&lt;br /&gt;&lt;p&gt;Detailed detections per technique:&lt;/p&gt;&lt;br /&gt;['T1114']: Monitor for unusual login activity from unknown or abnormal locations, especially for privileged accounts (ex: Exchange administrator account). &lt;br /&gt;['T1213']: Monitor for newly constructed logon behavior within Microsoft's SharePoint can be configured to report access to certain pages and documents. (Citation: Microsoft SharePoint Logging) Sharepoint audit logging can also be configured to report when a user shares a resource. (Citation: Sharepoint Sharing Events)The user access logging within Atlassian's Confluence can also be configured to report access to certain pages and documents through AccessLogFilter. (Citation: Atlassian Confluence Logging) Additional log storage and analysis infrastructure will likely be required for more robust detection capabilities.&lt;br /&gt;['T1021.004']: Monitor for user accounts logged into systems that may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to log into remote machines using Secure Shell (SSH). For example, on Linux systems SSH logon activity can be found in the logs located in &lt;code&gt;/var/log/auth.log&lt;/code&gt; or &lt;code&gt;/var/log/secure&lt;/code&gt; depending on the distro you are using.&lt;br /&gt;['T1606.002']: Monitor for logins using SAML tokens which do not have corresponding 4769 and 1200 events in the domain.(Citation: Sygnia Golden SAML) These logins may occur on any on-premises resources as well as from any cloud environment that trusts the certificate.(Citation: Microsoft SolarWinds Customer Guidance)&lt;br /&gt;['T1606.001']: Monitor for anomalous authentication activity, such as logons or other user session activity associated with unknown accounts. Monitor for unexpected and abnormal access to resources, including access of websites and cloud-based applications by the same user in different locations or by different systems that do not match expected configurations.&lt;br /&gt;['T1078.002']: Monitor for suspicious account behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. &lt;br /&gt;['T1556']: Monitor for newly constructed logon behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times (ex: when the user is not present) or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access). Configure robust, consistent account activity audit policies across the enterprise and with externally accessible services.(Citation: TechNet Audit Policy) &lt;br /&gt;['T1550']: Look for suspicious account behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account.&lt;br /&gt;['T1199']: Monitor for newly constructed logon behavior that may breach or otherwise leverage organizations who have access to intended victims.&lt;br /&gt;['T1538']: Monitor for newly constructed logon behavior across cloud service management consoles.&lt;br /&gt;['T1563.002']: Use of RDP may be legitimate, depending on the network environment and how it is used. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior with RDP.&lt;br /&gt;['T1550.002']: Monitor newly created logons and credentials used in events and review for discrepancies. Unusual remote logins that correlate with other suspicious activity (such as writing and executing binaries) may indicate malicious activity.&lt;br /&gt;['T1078']: Monitor for newly constructed logon behavior that may obtain and abuse credentials of existing accounts as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access).&lt;br /&gt;['T1021.001']: Monitor for user accounts logged into systems associated with RDP (ex: Windows EID 4624 Logon Type 10). Other factors, such as access patterns (ex: multiple systems over a relatively short period of time) and activity that occurs after a remote login, may indicate suspicious or malicious behavior with RDP.&lt;br /&gt;['T1213.002']: Monitor for newly constructed logon behavior across Microsoft's SharePoint which can be configured to report access to certain pages and documents. (Citation: Microsoft SharePoint Logging) As information repositories generally have a considerably large user base, detection of malicious use can be non-trivial.&lt;br /&gt;['T1021.002']: Monitor for logon behavior (ex: EID 4624 Logon Type 3) using [Valid Accounts](https://attack.mitre.org/techniques/T1078) to interact with a remote network share using Server Message Block (SMB). The adversary may then perform actions as the logged-on user. Ensure that proper logging of accounts used to log into systems is turned on and centrally collected. Windows logging is able to collect success/failure for accounts that may be used to move laterally and can be collected using tools such as Windows Event Forwarding. (Citation: Lateral Movement Payne)(Citation: Windows Event Forwarding Payne)&lt;br /&gt;['T1556.001']: Monitor for newly constructed logon behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times (ex: when the user is not present) or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access). Configure robust, consistent account activity audit policies across the enterprise and with externally accessible services.(Citation: TechNet Audit Policy)&lt;br /&gt;['T1078.001']: Monitor for newly constructed logon behavior across default accounts that have been activated or logged into. These audits should also include checks on any appliances and applications for default credentials or SSH keys, and if any are discovered, they should be updated immediately.&lt;br /&gt;['T1021.006']: Monitor for user accounts logging into the system via [Valid Accounts](https://attack.mitre.org/techniques/T1078) to interact with remote systems using Windows Remote Management (WinRM). The adversary may then perform actions as the logged-on user. &lt;br /&gt;['T1563']: Monitor for user accounts logged into systems they would not normally access or access patterns to multiple systems over a relatively short period of time.&lt;br /&gt;['T1213.001']: Monitor for newly constructed logon behavior across Atlassian's Confluence which can be configured to report access to certain pages and documents through AccessLogFilter. (Citation: Atlassian Confluence Logging) Additional log storage and analysis infrastructure will likely be required for more robust detection capabilities.&lt;br /&gt;['T1021.005']: Monitor for user accounts logged into systems that may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to remotely control machines using Virtual Network Computing (VNC). For example, on macOS systems &lt;code&gt;log show --predicate 'process = "screensharingd" and eventMessage contains "Authentication:"'&lt;/code&gt; can be used to review incoming VNC connection attempts for suspicious activity.(Citation: Apple Unified Log Analysis Remote Login and Screen Sharing) &lt;br /&gt;['T1563.001']: Monitor for user accounts logged into systems they would not normally access or access patterns to multiple systems over a relatively short period of time. Also monitor user SSH-agent socket files being used by different users.&lt;br /&gt;['T1550.003']: Monitor for newly constructed logon behavior that may "pass the ticket" using stolen Kerberos tickets to move laterally within an environment, bypassing normal system access controls.&lt;br /&gt;['T1114.002']: Monitor for unusual login activity from unknown or abnormal locations, especially for privileged accounts (ex: Exchange administrator account).&lt;br /&gt;['T1213.003']: Monitor for newly constructed logon behavior across code repositories (e.g. Github) which can be configured to report access to certain pages and documents.&lt;br /&gt;['T1078.004']: Monitor for suspicious account behavior across cloud services that share account. &lt;br /&gt;['T1606']: Monitor for anomalous authentication activity, such as logons or other user session activity associated with unknown accounts and/or using SAML tokens which do not have corresponding 4769 and 1200 events in the domain.(Citation: Sygnia Golden SAML). Monitor for unexpected and abnormal access to resources, including access of websites and cloud-based applications by the same user in different locations or by different systems that do not match expected configurations. These logins may occur on any on-premises resources as well as from any cloud environment that trusts the credentials.(Citation: Microsoft SolarWinds Customer Guidance)&lt;br /&gt;['T1185']: Authentication logs can be used to audit logins to specific web applications, but determining malicious logins versus benign logins may be difficult if activity matches typical user behavior.&lt;br /&gt;['T1021']: Monitor for user accounts logged into systems they would not normally access or abnormal access patterns, such as multiple systems over a relatively short period of time. Correlate use of login activity related to remote services with unusual behavior or other malicious or suspicious activity. Adversaries will likely need to learn about an environment and the relationships between systems through Discovery techniques prior to attempting Lateral Movement. For example, in macOS you can review logs for "screensharingd" and "Authentication" event messages. (Citation: Lockboxx ARD 2019)(Citation: Apple Unified Log Analysis Remote Login and Screen Sharing)&lt;br /&gt;['T1556.003']: Monitor for newly constructed logon behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times (ex: when the user is not present) or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access).&lt;br /&gt;['T1621']: Monitor 2FA/MFA application logs for suspicious events such as rapid login attempts with valid credentials.&lt;br /&gt;['T1078.003']: Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access).&lt;br /&gt;['T1621']: Monitor 2FA/MFA application logs for suspicious events such as unusual login attempt source location, mismatch in location of login attempt and smart device approving 2FA/MFA request prompts.&lt;br /&gt;['T1558.001']: Monitor for anomalous Kerberos activity, such as malformed or blank fields in Windows logon/logoff events (Event ID 4624, 4634, 4672). Correlate other security systems with login information (e.g., a user has the KRBTGT account password hash and forges Kerberos ticket-granting tickets). &lt;br /&gt;['T1558']: Enable Audit Kerberos Service Ticket Operations to log Kerberos TGS service ticket requests. Particularly investigate irregular patterns of activity (ex: accounts making numerous requests, Event ID 4769, within a small time frame, especially if they also request RC4 encryption [Type 0x17]).(Citation: Microsoft Detecting Kerberoasting Feb 2018) (Citation: AdSecurity Cracking Kerberos Dec 2015)&lt;br /&gt;['T1606.002']: Consider modifying SAML responses to include custom elements for each service provider. Monitor these custom elements in service provider access logs to detect any anomalous requests.(Citation: Sygnia Golden SAML)&lt;br /&gt;['T1558.002']: Monitor for anomalous Kerberos activity, such as malformed or blank fields in Windows logon/logoff events (Event ID 4624, 4634, 4672).&lt;br /&gt;['T1133']: Follow best practices for detecting adversary use of Valid Accounts for authenticating to remote services. Collect authentication logs and analyze for unusual access patterns, windows of activity, and access outside of normal business hours.&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Microsoft Audit Logon Events" url="https://docs.microsoft.com/en-us/windows/security/threat-protection/auditing/basic-audit-logon-events"/>
            <reference name="Mitre ATT&amp;CK Data Source DS0028" url="https://attack.mitre.org/datasources/DS0028"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:01.977">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-DS0014" name="Pod" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>A single unit of shared resources within a cluster, comprised of one or more containers(Citation: Kube Kubectl)(Citation: Kube Pod)&lt;br /&gt;&lt;p&gt;Detailed detections per technique:&lt;/p&gt;&lt;br /&gt;['T1610']: Monitor for changes made to pods for unexpected modifications to settings and/or control data that may deploy a container into an environment to facilitate execution or evade defenses.&lt;br /&gt;['T1613']: Monitor logs for actions that could be taken to gather information about pods, including the use of discovery API calls by new or unexpected users. Monitor account activity logs to see actions performed and activity associated with the Kubernetes dashboard and other web applications.&lt;br /&gt;['T1610']: Monitor for newly constructed pods that may deploy a container into an environment to facilitate execution or evade defenses.&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Kube Kubectl" url="https://kubernetes.io/docs/reference/kubectl/kubectl/"/>
            <reference name="Kube Pod" url="https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.19/#pod-v1-core"/>
            <reference name="Mitre ATT&amp;CK Data Source DS0014" url="https://attack.mitre.org/datasources/DS0014"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:01.917">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-DS0009" name="Process" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>Instances of computer programs that are being executed by at least one thread. Processes have memory space for process executables, loaded modules (DLLs or shared libraries), and allocated memory regions containing everything from user input to application-specific data structures(Citation: Microsoft Processes and Threads)&lt;br /&gt;&lt;p&gt;Detailed detections per technique:&lt;/p&gt;&lt;br /&gt;['T1055.008']: Monitoring for Linux specific calls such as the ptrace system call should not generate large amounts of data due to their specialized nature, and can be a very effective method to detect some of the common process injection methods.(Citation: ArtOfMemoryForensics) (Citation: GNU Acct) (Citation: RHEL auditd) (Citation: Chokepoint preload rootkits)&lt;br /&gt;['T1055.014']: Monitor for malicious usage of system calls, such as ptrace and mmap, that can be used to attach to, manipulate memory, then redirect a processes' execution path. Monitoring for Linux specific calls such as the ptrace system call should not generate large amounts of data due to their specialized nature, and can be a very effective method to detect some of the common process injection methods.(Citation: ArtOfMemoryForensics)(Citation: GNU Acct)(Citation: RHEL auditd)(Citation: Chokepoint preload rootkits)&lt;br /&gt;['T1112']: Monitor for API calls associated with concealing Registry keys, such as Reghide. (Citation: Microsoft Reghide NOV 2006) Inspect and cleanup malicious hidden Registry entries using Native Windows API calls and/or tools such as Autoruns (Citation: SpectorOps Hiding Reg Jul 2017) and RegDelNull (Citation: Microsoft RegDelNull July 2016). &lt;br /&gt;['T1547']: Monitor for API calls that may configure system settings to automatically execute a program during system boot or logon to maintain persistence or gain higher-level privileges on compromised systems.&lt;br /&gt;['T1087.002']: Monitor for API calls that may attempt to gather information about domain accounts such as type of user, privileges and groups.&lt;br /&gt;['T1033']: Monitor for API calls that may attempt to dump credentials to obtain account login and credential material, normally in the form of a hash or a clear text password, from the operating system and software.&lt;br /&gt;['T1565.002']: Monitor for API calls associated with altering data. Remote access tools with built-in features may interact directly with the Windows API to gather information.&lt;br /&gt;['T1497.003']: Monitor for API calls that may employ various time-based methods to detect and avoid virtualization and analysis environments. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary's implementation and monitoring required.&lt;br /&gt;['T1082']: Monitor for API calls that may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). In cloud-based systems, native logging can be used to identify access to certain APIs and dashboards that may contain system information. Depending on how the environment is used, that data alone may not be useful due to benign use during normal operations.&lt;br /&gt;['T1622']: Monitor for API calls (such as &lt;code&gt;IsDebuggerPresent()&lt;/code&gt;) that may employ various means to detect and avoid debugged environments. Detecting actions related to debugger identification may be difficult depending on the adversary's implementation and monitoring required.&lt;br /&gt;['T1542.002']: Monitor for API calls associated with the use of device drivers and/or provided by SMART (Self-Monitoring, Analysis and Reporting Technology) (Citation: SanDisk SMART) (Citation: SmartMontools) disk monitoring may reveal malicious manipulations of components. Otherwise, this technique may be difficult to detect since malicious activity is taking place on system components possibly outside the purview of OS security and integrity mechanisms.&lt;br /&gt;['T1125']: Detection of this technique may be difficult due to the various APIs that may be used. Telemetry data regarding API use may not be useful depending on how a system is normally used, but may provide context to other potentially malicious activity occurring on a system. Behavior that could indicate technique use include an unknown or unusual process accessing APIs associated with devices or software that interact with the video camera, recording devices, or recording software, and a process periodically writing files to disk that contain video or camera image data.&lt;br /&gt;['T1120']: Monitor for API calls that may attempt to gather information about attached peripheral devices and components connected to a computer system.&lt;br /&gt;['T1057']: Monitor for API calls may attempt to get information about running processes on a system. &lt;br /&gt;['T1055.003']: Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such as &lt;code&gt;CreateRemoteThread&lt;/code&gt;, &lt;code&gt;SuspendThread&lt;/code&gt;/&lt;code&gt;SetThreadContext&lt;/code&gt;/&lt;code&gt;ResumeThread&lt;/code&gt;, and those that can be used to modify memory within another process, such as &lt;code&gt;VirtualAllocEx&lt;/code&gt;/&lt;code&gt;WriteProcessMemory&lt;/code&gt;, may be used for this technique.(Citation: Elastic Process Injection July 2017)&lt;br /&gt;['T1135']: Monitor for API calls that may look for folders and drives shared on remote systems as a means of identifying sources of information to gather as a precursor for Collection and to identify potential systems of interest for Lateral Movement.&lt;br /&gt;['T1574.013']: Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances. for known bad sequence of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such as &lt;code&gt;WriteProcessMemory()&lt;/code&gt; and &lt;code&gt;NtQueryInformationProcess()&lt;/code&gt; with the parameter set to &lt;code&gt;ProcessBasicInformation&lt;/code&gt; may be used for this technique.(Citation: Lazarus APT January 2022)&lt;br /&gt;['T1489']: Remote access tools with built-in features may interact directly with the Windows API to perform these functions outside of typical system utilities. For example, &lt;code&gt;ChangeServiceConfigW&lt;/code&gt; may be used by an adversary to prevent services from starting.(Citation: Talos Olympic Destroyer 2018)&lt;br /&gt;['T1134']: Monitor for API calls, loaded by a payload, for token manipulation only through careful analysis of user network activity, examination of running processes, and correlation with other endpoint and network behavior. There are many Windows API calls a payload can take advantage of to manipulate access tokens (e.g., &lt;code&gt;LogonUser&lt;/code&gt; (Citation: Microsoft LogonUser), &lt;code&gt;DuplicateTokenEx&lt;/code&gt;(Citation: Microsoft DuplicateTokenEx), and &lt;code&gt;ImpersonateLoggedOnUser&lt;/code&gt;(Citation: Microsoft ImpersonateLoggedOnUser)). Please see the referenced Windows API pages for more information.&lt;br /&gt;['T1555.005']: Monitor for API calls that may search for common password storage locations to obtain user credentials.&lt;br /&gt;['T1115']: Monitor API calls that could collect data stored in the clipboard from users copying information within or between applications.&lt;br /&gt;['T1556']: Monitor for calls to &lt;code&gt;OpenProcess&lt;/code&gt; that can be used to manipulate lsass.exe running on a domain controller as well as for malicious modifications to functions exported from authentication-related system DLLs (such as cryptdll.dll and samsrv.dll).(Citation: Dell Skeleton)&lt;br /&gt;['T1070']: Monitor for API calls that may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined malware.&lt;br /&gt;['T1087.001']: Monitor for API calls (such as &lt;code&gt;NetUserEnum()&lt;/code&gt;) that may attempt to gather local accounts information such as type of user, privileges and groups.&lt;br /&gt;['T1056.001']: Monitor for API calls to the SetWindowsHook, GetKeyState, and GetAsyncKeyState.(Citation: Adventures of a Keystroke) and look for common keylogging API calls. API calls alone are not an indicator of keylogging, but may provide behavioral data that is useful when combined with other information such as new files written to disk and unusual processes.&lt;br /&gt;['T1005']: Monitor for API calls that may search local system sources, such as file systems or local databases, to find files of interest and sensitive data prior to Exfiltration. &lt;br /&gt;['T1548']: Also look for any process API calls for behavior that may be indicative of [Process Injection](https://attack.mitre.org/techniques/T1055). Monitoring OS API callbacks for the execution can also be a way to detect this behavior but requires specialized security tooling.&lt;br /&gt;['T1055.004']: Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such as &lt;code&gt;SuspendThread&lt;/code&gt;/&lt;code&gt;SetThreadContext&lt;/code&gt;/&lt;code&gt;ResumeThread&lt;/code&gt;, &lt;code&gt;QueueUserAPC&lt;/code&gt;/&lt;code&gt;NtQueueApcThread&lt;/code&gt;, and those that can be used to modify memory within another process, such as &lt;code&gt;VirtualAllocEx&lt;/code&gt;/&lt;code&gt;WriteProcessMemory&lt;/code&gt;, may be used for this technique.(Citation: Elastic Process Injection July 2017)&lt;br /&gt;['T1134.002']: Monitor for API calls associated with detecting token manipulation only through careful analysis of user activity, examination of running processes, and correlation with other endpoint and network behavior. Analysts can also monitor for use of Windows APIs such as &lt;code&gt;CreateProcessWithTokenW&lt;/code&gt; and correlate activity with other suspicious behavior to reduce false positives that may be due to normal benign use by users and administrators.&lt;br /&gt;['T1546.009']: Monitor and analyze application programming interface (API) calls that are indicative of Registry edits, such as &lt;code&gt;RegCreateKeyEx&lt;/code&gt; and &lt;code&gt;RegSetValueEx&lt;/code&gt;. (Citation: Elastic Process Injection July 2017)&lt;br /&gt;['T1518']: Monitor for API calls that may attempt to get a listing of software and software versions that are installed on a system or in a cloud environment.&lt;br /&gt;['T1497.002']: Monitor for API calls that may employ various means to detect and avoid virtualization and analysis environments. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary's implementation and monitoring required.&lt;br /&gt;['T1055.011']: Monitor for API calls related to enumerating and manipulating EWM such as GetWindowLong (Citation: Microsoft GetWindowLong function) and SetWindowLong (Citation: Microsoft SetWindowLong function). Malware associated with this technique have also used SendNotifyMessage (Citation: Microsoft SendNotifyMessage function) to trigger the associated window procedure and eventual malicious injection. (Citation: Elastic Process Injection July 2017)&lt;br /&gt;['T1012']: Monitor for API calls (such as &lt;code&gt;RegOpenKeyExA&lt;/code&gt;) that may interact with the Windows Registry to gather information about the system, configuration, and installed software. &lt;br /&gt;['T1614']: Remote access tools with built-in features may interact directly with the Windows API, such as calling &lt;code&gt; GetLocaleInfoW&lt;/code&gt; to gather information.(Citation: FBI Ragnar Locker 2020)&lt;br /&gt;['T1555.001']: Monitor for Keychain Services API calls, specifically legacy extensions such as &lt;code&gt;SecKeychainFindInternetPassword&lt;/code&gt;, that may collect Keychain data from a system to acquire credentials.(Citation: Keychain Items Apple Dev API)&lt;br /&gt;['T1106']: Monitoring API calls may generate a significant amount of data and may not be useful for defense unless collected under specific circumstances, since benign use of API functions are common and may be difficult to distinguish from malicious behavior. Correlation of other events with behavior surrounding API function calls using API monitoring will provide additional context to an event that may assist in determining if it is due to malicious behavior. Correlation of activity by process lineage by process ID may be sufficient.&lt;br /&gt;['T1218']: Monitor for API calls that may forge credential materials that can be used to gain access to web applications or Internet services. &lt;br /&gt;['T1070.001']: Monitor for Windows API calls that may clear Windows Event Logs to hide the activity of an intrusion.&lt;br /&gt;['T1611']: Remote access tools with built-in features may interact directly with the Windows API, such as calling &lt;code&gt;GetLocaleInfoW()&lt;/code&gt; to gather system location information.(Citation: FBI Ragnar Locker 2020)&lt;br /&gt;['T1111']: Monitor for API calls associated with polling to intercept keystrokes.&lt;br /&gt;['T1003.001']: Monitor for API calls that may attempt to access credential material stored in the process memory of the Local Security Authority Subsystem Service (LSASS).&lt;br /&gt;['T1049']: Monitor for API calls that may attempt to get a listing of network connections to or from the compromised system they are currently accessing or from remote systems by querying for information over the network.&lt;br /&gt;['T1482']: Monitor for API calls associated with gathering information on domain trust relationships that may be used to identify lateral movement like DSEnumerateDomainTrusts() Win32 API call to spot activity associated with Domain Trust Discovery.(Citation: Harmj0y Domain Trusts) Information may also be acquired through Windows system management tools such as PowerShell. The .NET method GetAllTrustRelationships() can be an indicator of Domain Trust Discovery.(Citation: Microsoft GetAllTrustRelationships)&lt;br /&gt;['T1129']: Monitor for API calls that may execute malicious payloads via loading shared modules.&lt;br /&gt;['T1124']: Monitor for API calls that may gather the system time and/or time zone from a local or remote system. Remote access tools with built-in features may interact directly with the Windows API to gather information.&lt;br /&gt;['T1542']: Monitor for API calls that may abuse Pre-OS Boot mechanisms as a way to establish persistence on a system. Disk check, forensic utilities, and data from device drivers (i.e. API calls) may reveal anomalies that warrant deeper investigation. (Citation: ITWorld Hard Disk Health Dec 2014)&lt;br /&gt;['T1055']: Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such as &lt;code&gt;CreateRemoteThread&lt;/code&gt;, &lt;code&gt;SuspendThread&lt;/code&gt;/&lt;code&gt;SetThreadContext&lt;/code&gt;/&lt;code&gt;ResumeThread&lt;/code&gt;, &lt;code&gt;QueueUserAPC&lt;/code&gt;/&lt;code&gt;NtQueueApcThread&lt;/code&gt;, and those that can be used to modify memory within another process, such as &lt;code&gt;VirtualAllocEx&lt;/code&gt;/&lt;code&gt;WriteProcessMemory&lt;/code&gt;, may be used for this technique.(Citation: Elastic Process Injection July 2017) Monitoring for Linux specific calls such as the ptrace system call should not generate large amounts of data due to their specialized nature, and can be a very effective method to detect some of the common process injection methods.(Citation: ArtOfMemoryForensics) (Citation: GNU Acct) (Citation: RHEL auditd) (Citation: Chokepoint preload rootkits)&lt;br /&gt;['T1055.002']: Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such as &lt;code&gt;CreateRemoteThread&lt;/code&gt; and those that can be used to modify memory within another process, such as &lt;code&gt;VirtualAllocEx&lt;/code&gt;/&lt;code&gt;WriteProcessMemory&lt;/code&gt;, may be used for this technique.(Citation: Elastic Process Injection July 2017)&lt;br /&gt;['T1547.010']: Monitor process API calls to &lt;code&gt;AddMonitor&lt;/code&gt;.(Citation: AddMonitor)&lt;br /&gt;['T1614.001']: Monitor for API calls that may attempt to gather information about the system language of a victim in order to infer the geographical location of that host.&lt;br /&gt;['T1056.004']: Monitor for API calls to the SetWindowsHookEx and SetWinEventHook functions, which install a hook procedure.(Citation: Microsoft Hook Overview)(Citation: Volatility Detecting Hooks Sept 2012) Also consider analyzing hook chains (which hold pointers to hook procedures for each type of hook) using tools(Citation: Volatility Detecting Hooks Sept 2012)(Citation: PreKageo Winhook Jul 2011)(Citation: Jay GetHooks Sept 2011) or by programmatically examining internal kernel structures.(Citation: Zairon Hooking Dec 2006)(Citation: EyeofRa Detecting Hooking June 2017)&lt;br /&gt;['T1548.004']: Monitoring OS API callbacks for the execution can also be a way to detect this behavior but requires specialized security tooling.&lt;br /&gt;['T1555.004']: Consider monitoring API calls such as &lt;code&gt;CredEnumerateA&lt;/code&gt; that may list credentials from the Windows Credential Manager.(Citation: Microsoft CredEnumerate)(Citation: Delpy Mimikatz Crendential Manager)&lt;br /&gt;['T1218.002']: Monitor for API calls that may forge web cookies that can be used to gain access to web applications or Internet services.&lt;br /&gt;['T1620']: Monitor for code artifacts associated with reflectively loading code, such as the abuse of .NET functions such as &lt;code&gt;Assembly.Load()&lt;/code&gt; and [Native API](https://attack.mitre.org/techniques/T1106) functions such as &lt;code&gt;CreateThread()&lt;/code&gt;, &lt;code&gt;memfd_create()&lt;/code&gt;, &lt;code&gt;execve()&lt;/code&gt;, and/or &lt;code&gt;execveat()&lt;/code&gt;.(Citation: 00sec Droppers)(Citation: S1 Old Rat New Tricks)&lt;br /&gt;['T1055.013']: Monitor and analyze calls to &lt;code&gt;CreateTransaction&lt;/code&gt;, &lt;code&gt;CreateFileTransacted&lt;/code&gt;, &lt;code&gt;RollbackTransaction&lt;/code&gt;, and other rarely used functions indicative of TxF activity. Process Doppelganging also invokes an outdated and undocumented implementation of the Windows process loader via calls to &lt;code&gt;NtCreateProcessEx&lt;/code&gt; and &lt;code&gt;NtCreateThreadEx&lt;/code&gt; as well as API calls used to modify memory within another process, such as &lt;code&gt;WriteProcessMemory&lt;/code&gt;. (Citation: BlackHat Process Doppelganging Dec 2017) (Citation: hasherezade Process Doppelganging Dec 2017)&lt;br /&gt;['T1543']: Monitor for API calls that may create or modify system-level processes to repeatedly execute malicious payloads as part of persistence.&lt;br /&gt;['T1556.001']: Monitor for API calls to OpenProcess that can be used to manipulate lsass.exe running on a domain controller&lt;br /&gt;['T1055.015']: Consider monitoring for excessive use of &lt;code&gt;SendMessage&lt;/code&gt; and/or &lt;code&gt;PostMessage&lt;/code&gt; API functions with &lt;code&gt;LVM_SETITEMPOSITION&lt;/code&gt; and/or &lt;code&gt;LVM_GETITEMPOSITION&lt;/code&gt; arguments.

Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such as &lt;code&gt;FindWindow&lt;/code&gt;, &lt;code&gt;FindWindowEx&lt;/code&gt;, &lt;code&gt;EnumWindows&lt;/code&gt;, &lt;code&gt;EnumChildWindows&lt;/code&gt;, and those that can be used to modify memory within another process, such as &lt;code&gt;VirtualAllocEx&lt;/code&gt;/&lt;code&gt;WriteProcessMemory&lt;/code&gt;, may be abused for this technique. &lt;br /&gt;['T1547.012']: Monitor process API calls to &lt;code&gt;AddPrintProcessor&lt;/code&gt; and &lt;code&gt;GetPrintProcessorDirectory&lt;/code&gt;.&lt;br /&gt;['T1016']: Monitor for API calls (such as &lt;code&gt;GetAdaptersInfo()&lt;/code&gt; and &lt;code&gt;GetIpNetTable()&lt;/code&gt;) that may gather details about the network configuration and settings, such as IP and/or MAC addresses.&lt;br /&gt;['T1113']: Monitoring for screen capture behavior will depend on the method used to obtain data from the operating system and write output files. Detection methods could include collecting information from unusual processes using API calls used to obtain image data, and monitoring for image files written to disk, such as &lt;code&gt;CopyFromScreen&lt;/code&gt;, &lt;code&gt;xwd&lt;/code&gt;, or &lt;code&gt;screencapture&lt;/code&gt;.(Citation: CopyFromScreen .NET)(Citation: Antiquated Mac Malware). The sensor data may need to be correlated with other events to identify malicious activity, depending on the legitimacy of this behavior within a given network environment.&lt;br /&gt;['T1564']: Monitor for API calls that may attempt to hide artifacts associated with their behaviors to evade detection.&lt;br /&gt;['T1518.001']: Monitor for API calls that may attempt to get a listing of security software, configurations, defensive tools, and sensors that are installed on a system or in a cloud environment.&lt;br /&gt;['T1056']: Monitor for API calls to SetWindowsHook, GetKeyState, and GetAsyncKeyState (Citation: Adventures of a Keystroke)&lt;br /&gt;['T1010']: Monitor for API calls (such as &lt;code&gt;GetForegroundWindow()&lt;/code&gt;) that may attempt to get a listing of open application windows. &lt;br /&gt;['T1059.002']: Monitor for execution of AppleScript through &lt;code&gt;osascript&lt;/code&gt; and usage of the &lt;code&gt;NSAppleScript&lt;/code&gt; and &lt;code&gt;OSAScript&lt;/code&gt; APIs that may be related to other suspicious behavior occurring on the system.&lt;br /&gt;['T1546.010']: Monitor and analyze application programming interface (API) calls that are indicative of Registry edits such as &lt;code&gt;RegCreateKeyEx&lt;/code&gt; and &lt;code&gt;RegSetValueEx&lt;/code&gt;. (Citation: Elastic Process Injection July 2017)&lt;br /&gt;['T1543.003']: Monitor for API calls that may create or modify Windows services (ex: ` CreateServiceW()`) to repeatedly execute malicious payloads as part of persistence.&lt;br /&gt;['T1083']: Monitor for API calls that may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system.&lt;br /&gt;['T1555.003']: Monitor for API calls that may acquire credentials from web browsers by reading files specific to the target browser.(Citation: Talos Olympic Destroyer 2018)&lt;br /&gt;['T1564.004']: Monitor calls to the &lt;code&gt;ZwSetEaFile&lt;/code&gt; and &lt;code&gt;ZwQueryEaFile&lt;/code&gt; Windows API functions as well as binaries used to interact with EA, (Citation: Oddvar Moe ADS1 Jan 2018) (Citation: Oddvar Moe ADS2 Apr 2018) and consider regularly scanning for the presence of modified information. (Citation: SpectorOps Host-Based Jul 2017)&lt;br /&gt;['T1564.001']: Monitor newly executed processes that may set files and directories to be hidden to evade detection mechanisms.&lt;br /&gt;['T1546.010']: Monitor newly executed processes that may establish persistence and/or elevate privileges by executing malicious content triggered by AppInit DLLs loaded into processes.&lt;br /&gt;['T1490']: Use process monitoring to monitor the execution and command line parameters of binaries involved in inhibiting system recovery, such as vssadmin, wbadmin, and bcdedit.&lt;br /&gt;['T1218.011']: Use process monitoring to monitor the execution and arguments of rundll32.exe. Compare recent invocations of rundll32.exe with prior history of known good arguments and loaded DLLs to determine anomalous and potentially adversarial activity.&lt;br /&gt;['T1489']: Monitor for newly executed processes that may stop or disable services on a system to render those services unavailable to legitimate users.&lt;br /&gt;['T1057']: Monitor for newly executed processes that may attempt to get information about running processes on a system.&lt;br /&gt;['T1547.015']: Monitor processes that start at login for unusual or unknown applications. Usual applications for login items could include what users add to configure their user environment, such as email, chat, or music applications, or what administrators include for organization settings and protections. Check for running applications from login items that also have abnormal behavior, such as establishing network connections.&lt;br /&gt;['T1069']: Monitor for newly constructed processes and/or command-lines for actions that could be taken to gather system and network information. System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.&lt;br /&gt;['T1546.015']: Monitor newly executed processes that may establish persistence by executing malicious content triggered by hijacked references to Component Object Model (COM) objects.&lt;br /&gt;['T1140']: Monitor for newly executed processes that attempt to hide artifacts of an intrusion, such as common archive file applications and extensions (ex: Zip and RAR archive tools), and correlate with other suspicious behavior to reduce false positives from normal user and administrator behavior.&lt;br /&gt;['T1546.001']: Monitor for newly executed processes that may establish persistence by executing malicious content triggered by a file type association.&lt;br /&gt;['T1222.002']: Monitor for newly executed processes that may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files.(Citation: Hybrid Analysis Icacls1 June 2018)(Citation: Hybrid Analysis Icacls2 May 2018)&lt;br /&gt;['T1087.002']: Monitor for processes that can be used to enumerate domain accounts and groups, such as &lt;code&gt;net.exe&lt;/code&gt; and &lt;code&gt;net1.exe&lt;/code&gt;, especially when executed in quick succession.(Citation: Elastic - Koadiac Detection with EQL)
 
Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.&lt;br /&gt;['T1547.009']: Monitor for newly executed processes that may create or edit shortcuts to run a program during system boot or user login.&lt;br /&gt;['T1622']: Monitoring for suspicious processes being spawned that gather a variety of system information or perform other forms of Discovery, especially in a short period of time, may aid in detection. Debugger related system checks will likely occur in the first steps of an operation but may also occur throughout as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained.&lt;br /&gt;['T1611']: Monitor for process activity (such as unexpected processes spawning outside a container and/or on a host) that might indicate an attempt to escape from a privileged container to host. &lt;br /&gt;['T1569.001']: Monitor for newly executed daemons that may abuse launchctl to execute commands or programs.&lt;br /&gt;['T1217']: Monitor newly constructed processes, e.g. browsers, for to gather personal information about users (ex: banking sites, interests, social media, etc.)&lt;br /&gt;['T1546.004']: Monitor newly executed processes that may establish persistence through executing malicious commands triggered by a user's shell.&lt;br /&gt;['T1056']: Monitor for newly executed processes conducting malicious activity &lt;br /&gt;['T1548.004']: Consider monitoring for &lt;code&gt;/usr/libexec/security_authtrampoline&lt;/code&gt; executions which may indicate that &lt;code&gt;AuthorizationExecuteWithPrivileges&lt;/code&gt; is being executed. MacOS system logs may also indicate when &lt;code&gt;AuthorizationExecuteWithPrivileges&lt;/code&gt; is being called.&lt;br /&gt;['T1548']: Monitor for newly executed processes that may circumvent mechanisms designed to control elevate privileges to gain higher-level permissions.&lt;br /&gt;['T1218.012']: Use process monitoring to monitor the execution and arguments of verclsid.exe. Compare recent invocations of verclsid.exe with prior history of known good arguments and loaded files to determine anomalous and potentially adversarial activity. Depending on the environment, it may be unusual for verclsid.exe to have a parent process of a Microsoft Office product. It may also be unusual for verclsid.exe to have any child processes or to make network connections or file modifications.&lt;br /&gt;['T1559']: Monitor for newly executed processes that are associated with abuse of IPC mechanisms&lt;br /&gt;['T1553.001']: Monitor and investigate attempts to modify extended file attributes with utilities such as &lt;code&gt;xattr&lt;/code&gt;. Built-in system utilities may generate high false positive alerts, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible. &lt;br /&gt;['T1059.004']: Monitor for newly executed processes that may abuse Unix shell commands and scripts for execution.&lt;br /&gt;['T1059']: Monitor log files for process execution through command-line and scripting activities. This information can be useful in gaining additional insight to adversaries' actions through how they use native processes or custom tools. Also monitor for loading of modules associated with specific languages.&lt;br /&gt;['T1016.001']: Monitor for executed processes (such as tracert or ping) that may check for Internet connectivity on compromised systems.&lt;br /&gt;['T1574.008']: Monitor for newly executed processes  for process executable paths that are named for partial directories.&lt;br /&gt;['T1137.005']: Monitor newly executed processes that may abuse Microsoft Outlook rules to obtain persistence on a compromised system.&lt;br /&gt;['T1614.001']: Monitor for newly executed processes that may attempt to gather information about the system language of a victim in order to infer the geographical location of that host.&lt;br /&gt;['T1559.002']: Monitor for newly executed processes that may use Windows Dynamic Data Exchange (DDE) to execute arbitrary commands.&lt;br /&gt;['T1518.001']: Monitor newly executed processes that may attempt to get a listing of security software, configurations, defensive tools, and sensors that are installed on a system or in a cloud environment.&lt;br /&gt;['T1482']: Monitor for newly executed processes that may attempt to gather information on domain trust relationships that may be used to identify lateral movement opportunities in Windows multi-domain/forest environments.&lt;br /&gt;['T1505.003']: Web shells can be difficult to detect. Unlike other forms of persistent remote access, they do not initiate connections. The portion of the Web shell that is on the server may be small and innocuous looking. The PHP version of the China Chopper Web shell, for example, is the following short payload: (Citation: Lee 2013)
&lt;code&gt;&lt;?php @eval($_POST['password']);&gt;&lt;/code&gt;
Nevertheless, detection mechanisms exist. Process monitoring may be used to detect Web servers that perform suspicious actions such as spawning cmd.exe or accessing files that are not in the Web directory.(Citation: NSA Cyber Mitigating Web Shells)&lt;br /&gt;['T1543']: New, benign system processes may be created during installation of new software.&lt;br /&gt;['T1574.012']: Monitor for newly executed processes, such as setx.exe, that may abuse of the COR_PROFILER variable, monitor for new suspicious unmanaged profiling DLLs loading into .NET processes shortly after the CLR causing abnormal process behavior.(Citation: Red Canary COR_PROFILER May 2020)&lt;br /&gt;['T1003']: Monitor for newly executed processes that may be indicative of credential dumping. On Windows 8.1 and Windows Server 2012 R2, monitor Windows Logs for LSASS.exe creation to verify that LSASS started as a protected process.&lt;br /&gt;['T1134.004']: Monitor for newly constructed processes and/or command-lines that may abuse mechanisms to evade defenses, such as those blocking processes spawning directly from Office documents, and analysis targeting unusual/potentially malicious parent-child process relationships, such as spoofing the PPID of PowerShell/Rundll32 to be explorer.exe&lt;br /&gt;['T1485']: Monitor for newly executed processes of binaries that could be involved in data destruction activity, such as SDelete.&lt;br /&gt;['T1087.003']: Monitor for newly executed processes, such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001) , with arguments that can be used to enumerate email addresses and accounts.&lt;br /&gt;['T1037.004']: Monitor for newly constructed processes and/or command-lines that  execute /etc/rc.local if present.&lt;br /&gt;['T1069.003']: Monitor newly executed processes that may attempt to find cloud groups and permission settings.&lt;br /&gt;['T1563.001']: Monitor newly executed processes that may hijack a legitimate user's SSH session to move laterally within an environment.&lt;br /&gt;['T1547.014']: Monitor newly executed processes that may achieve persistence by adding a Registry key to the Active Setup of the local machine.&lt;br /&gt;['T1021.004']: Monitor for newly executed processes that may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to log into remote machines using Secure Shell (SSH). For example, on macOS systems &lt;code&gt;log show --predicate 'process = "sshd"'&lt;/code&gt; can be used to review incoming SSH connection attempts for suspicious activity. The command &lt;code&gt;log show --info --predicate 'process = "ssh" or eventMessage contains "ssh"'&lt;/code&gt; can be used to review outgoing SSH connection activity.(Citation: Apple Unified Log Analysis Remote Login and Screen Sharing)&lt;br /&gt;['T1562.009']: Monitor newly executed processes that may abuse Windows safe mode to disable endpoint defenses.&lt;br /&gt;['T1010']: Monitor for newly executed processes that may attempt to get a listing of open application windows. System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.&lt;br /&gt;['T1529']: Monitor for newly executed processes of binaries involved in shutting down or rebooting systems.&lt;br /&gt;['T1136.002']: Monitor newly executed processes associated with account creation, such as net.exe&lt;br /&gt;['T1553.004']: Monitor for processes, such as &lt;code&gt;certmgr.exe&lt;/code&gt; (macOS) or &lt;code&gt;certutil.exe&lt;/code&gt; (Windows), that can be used to install root certificates. A system's root certificates are unlikely to change frequently. Monitor new certificates installed on a system that could be due to malicious activity. (Citation: SpectorOps Code Signing Dec 2017) Check pre-installed certificates on new systems to ensure unnecessary or suspicious certificates are not present. Microsoft provides a list of trustworthy root certificates online and through &lt;code&gt;authroot.stl&lt;/code&gt;. (Citation: SpectorOps Code Signing Dec 2017) The Sysinternals Sigcheck utility can also be used (&lt;code&gt;sigcheck[64].exe -tuv&lt;/code&gt;) to dump the contents of the certificate store and list valid certificates not rooted to the Microsoft Certificate Trust List. (Citation: Microsoft Sigcheck May 2017)&lt;br /&gt;['T1059.001']: Monitor for newly executed processes that may abuse PowerShell commands and scripts for execution.&lt;br /&gt;['T1552.002']: Monitor newly executed processes for applications that can be used to query the Registry, such as [Reg](https://attack.mitre.org/software/S0075), and collect command parameters that may indicate credentials are being searched. Correlate activity with related suspicious behavior that may indicate an active intrusion to reduce false positives.&lt;br /&gt;['T1053']: Monitor for newly executed processes that may abuse task scheduling functionality to facilitate initial or recurring execution of malicious code.&lt;br /&gt;['T1547.003']: Monitor newly executed processes, such as the W32tm.exe utility. (Citation: Microsoft W32Time May 2017) The Sysinternals Autoruns tool may also be used to analyze auto-starting locations, including DLLs listed as time providers. (Citation: TechNet Autoruns)&lt;br /&gt;['T1098']: Monitor for newly constructed processes indicative of modifying account settings, such as those that modify authorized_keys or /etc/ssh/sshd_config files.&lt;br /&gt;['T1098.004']: Monitor for suspicious processes modifying the authorized_keys or /etc/ssh/sshd_config files.&lt;br /&gt;['T1203']: Monitor for abnormal process creations, such as a Command and Scripting Interpreter spawning from a potentially exploited application. Also look for other behavior on the endpoint system that might indicate successful compromise, such as abnormal behavior of browser or Office processes.&lt;br /&gt;['T1052.001']: Monitor for newly executed processes when removable media is mounted &lt;br /&gt;['T1221']: Analyze process behavior to determine if an Office application is performing actions, such as opening network connections, reading files, spawning abnormal child processes (ex: [PowerShell](https://attack.mitre.org/techniques/T1059/001)), or other suspicious actions that could relate to post-compromise behavior.&lt;br /&gt;['T1053.003']: Monitor for newly constructed processes and/or command-lines that executed through scheduled tasks may show up as outlier processes that have not been seen before when compared against historical data. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.&lt;br /&gt;['T1480.001']: Monitoring for suspicious processes being spawned that gather a variety of system information or perform other forms of [Discovery](https://attack.mitre.org/tactics/TA0007), especially in a short period of time, may aid in detection. Detecting the use of environmental keying may be difficult depending on the implementation.&lt;br /&gt;['T1543.004']: Monitor for newly executed processes that may create or modify Launch Daemons to execute malicious payloads as part of persistence.&lt;br /&gt;['T1564.010']: Analyze process behavior to determine if a process is performing actions it usually does not and/or do no align with its logged command-line arguments.

Detection of process argument spoofing may be difficult as adversaries may momentarily modify stored arguments used for malicious execution. These changes may bypass process creation detection and/or later process memory analysis. Consider monitoring for [Process Hollowing](https://attack.mitre.org/techniques/T1055/012), which includes monitoring for process creation (especially those in a suspended state) as well as access and/or modifications of these processes (especially by the parent process) via Windows API calls.(Citation: Nviso Spoof Command Line 2020)(Citation: Mandiant Endpoint Evading 2019)&lt;br /&gt;['T1053.005']: Monitor for newly constructed processes and/or command-lines that execute from the svchost.exe in Windows 10 and the Windows Task Scheduler taskeng.exe for older versions of Windows. (Citation: Twitter Leoloobeek Scheduled Task) If scheduled tasks are not used for persistence, then the adversary is likely to remove the task when the action is complete.&lt;br /&gt;['T1560.001']: Monitor for newly constructed processes and/or command-lines that aid in compression or encrypting data that is collected prior to exfiltration, such as 7-Zip, WinRAR, and WinZip.  &lt;br /&gt;['T1543.003']: Suspicious program execution through services may show up as outlier processes that have not been seen before when compared against historical data. Look for abnormal process call trees from known services and for execution of other commands that could relate to Discovery or other adversary techniques. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.&lt;br /&gt;['T1546.008']: Monitor newly executed processes that may establish persistence and/or elevate privileges by executing malicious content triggered by accessibility features.&lt;br /&gt;['T1037.002']: Monitor for processes and/or command-lines to install or modify login hooks, as well as processes spawned at user login by these hooks.&lt;br /&gt;['T1021.006']: Monitor for newly executed processes that may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to interact with remote systems using Windows Remote Management (WinRM), as well as service processes such as &lt;code&gt;wmiprvse.exe&lt;/code&gt; on destination hosts.&lt;br /&gt;['T1216.001']: Monitor script processes, such as `cscript that may be used to proxy execution of malicious files.&lt;br /&gt;['T1189']: Monitor for newly executed processes to gain access to a system through a user visiting a website over the normal course of browsing.&lt;br /&gt;['T1564.003']: Monitor newly executed processes that may use hidden windows to conceal malicious activity from the plain sight of users.&lt;br /&gt;['T1053.002']: Monitor for newly constructed processes with command-lines that create/modify or are executed from tasks. For example, on Windows tasks may spawn from `svchost.exe` or the Windows Task Scheduler `taskeng.exe` for older OS versions. (Citation: Twitter Leoloobeek Scheduled Task) Suspicious program execution through scheduled tasks may show up as outlier processes that have not been seen before when compared against historical data.&lt;br /&gt;['T1546.005']: Monitor newly executed processes that may establish persistence by executing malicious content triggered by an interrupt signal.&lt;br /&gt;['T1614']: Monitor newly executed processes that may gather information in an attempt to calculate the geographical location of a victim host.&lt;br /&gt;['T1136']: Monitor newly executed processes associated with account creation, such as net.exe &lt;br /&gt;['T1218.005']: Use process monitoring to monitor the execution and arguments of mshta.exe.&lt;br /&gt;['T1037.005']: Monitor for newly constructed processes and/or command-lines that execute during the boot up process to check for unusual or unknown applications and behavior&lt;br /&gt;['T1546.011']: Monitor newly executed processs for sdbinst.exe for potential indications of application shim abuse. 
There are several public tools available that will detect shims that are currently available (Citation: Black Hat 2015 App Shim):
* Shim-Process-Scanner - checks memory of every running process for any shim flags
* Shim-Detector-Lite - detects installation of custom shim databases
* Shim-Guard - monitors registry for any shim installations
* ShimScanner - forensic tool to find active shims in memory
* ShimCacheMem - Volatility plug-in that pulls shim cache from memory (note: shims are only cached after reboot)&lt;br /&gt;['T1497.001']: Virtualization, sandbox, user activity, and related discovery techniques will likely occur in the first steps of an operation but may also occur throughout as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary's implementation and monitoring required. Monitoring for suspicious processes being spawned that gather a variety of system information or perform other forms of Discovery, especially in a short period of time, may aid in detection.&lt;br /&gt;['T1218.001']: Monitor and analyze the execution and arguments of hh.exe. (Citation: MsitPros CHM Aug 2017) Compare recent invocations of hh.exe with prior history of known good arguments to determine anomalous and potentially adversarial activity (ex: obfuscated and/or malicious commands). Non-standard process execution trees may also indicate suspicious or malicious behavior, such as if hh.exe is the parent process for suspicious processes and activity relating to other adversarial techniques.&lt;br /&gt;['T1211']: Monitor for abnormal process creations, such as a Command and Scripting Interpreter spawning from a potentially exploited application. Also look for behavior on the system that might indicate successful compromise, such as abnormal behavior of processes.&lt;br /&gt;['T1091']: Monitor for newly executed processes that execute from removable media after it is mounted or when initiated by a user. If a remote access tool is used in this manner to move laterally, then additional actions are likely to occur after execution, such as opening network connections for Command and Control and system and network information Discovery.&lt;br /&gt;['T1222.001']: Monitor for newly constructed processes and/or command-lines that can interact with the DACLs using built-in Windows commands, such as icacls, cacls, takeown, and attrib, which can grant adversaries higher permissions on specific files and folders.&lt;br /&gt;['T1574']: Monitor processes for unusual activity (e.g., a process that does not use the network begins to do so, abnormal process call trees). Track library metadata, such as a hash, and compare libraries that are loaded at process execution time against previous executions to detect differences that do not correlate with patching or updates.&lt;br /&gt;['T1574.010']: Monitor for newly executed processes that may execute their own malicious payloads by hijacking the binaries used by services.&lt;br /&gt;['T1218.008']: Use process monitoring to monitor the execution and arguments of odbcconf.exe. Compare recent invocations of odbcconf.exe with prior history of known good arguments and loaded DLLs to determine anomalous and potentially adversarial activity.&lt;br /&gt;['T1021.001']: Monitor for newly executed processes (such as &lt;code&gt;mstsc.exe&lt;/code&gt;) that may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to log into a computer using the Remote Desktop Protocol (RDP). The adversary may then perform actions that spawn additional processes as the logged-on user.&lt;br /&gt;['T1615']: Monitor for newly executed processes that may gather information on Group Policy settings to identify paths for privilege escalation, security measures applied within a domain, and to discover patterns in domain objects that can be manipulated or used to blend in the environment.&lt;br /&gt;['T1480']: Monitoring for suspicious processes being spawned that gather a variety of system information or perform other forms of [Discovery](https://attack.mitre.org/tactics/TA0007), especially in a short period of time, may aid in detection. Detecting the use of guardrails may be difficult depending on the implementation.&lt;br /&gt;['T1564']: Monitor newly executed processes that may attempt to hide artifacts associated with their behaviors to evade detection.&lt;br /&gt;['T1021.005']: Monitor for newly executed processes that may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to remotely control machines using Virtual Network Computing (VNC). For example, on macOS systems the &lt;code&gt;screensharingd&lt;/code&gt; process may be related to VNC connection activity.(Citation: Apple Unified Log Analysis Remote Login and Screen Sharing)&lt;br /&gt;['T1563.002']: Consider monitoring processes for tscon.exe usage&lt;br /&gt;['T1059.005']: Monitor for events associated with VB execution, such as Office applications spawning processes, usage of the Windows Script Host (typically cscript.exe or wscript.exe). VB execution is likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used.&lt;br /&gt;['T1574.006']: Monitor for newly executed processes for unusual activity (e.g., a process that does not use the network begins to do so).&lt;br /&gt;['T1497.003']: Time-based evasion will likely occur in the first steps of an operation but may also occur throughout as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary's implementation and monitoring required. Monitoring for suspicious processes being spawned that gather a variety of system information or perform other forms of Discovery, especially in a short period of time, may aid in detection.&lt;br /&gt;['T1087.001']: Monitor for processes that can be used to enumerate user accounts and groups such as &lt;code&gt;net.exe&lt;/code&gt; and &lt;code&gt;net1.exe&lt;/code&gt;, especially when executed in quick succession.(Citation: Elastic - Koadiac Detection with EQL)
 
Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).&lt;br /&gt;['T1546.006']: Monitor processes for those that may be used to modify binary headers.&lt;br /&gt;['T1219']: Monitor for applications and processes related to remote admin tools. Correlate activity with other suspicious behavior that may reduce false positives if these tools are used by legitimate users and administrators. [Domain Fronting](https://attack.mitre.org/techniques/T1090/004) may be used in conjunction to avoid defenses. Adversaries will likely need to deploy and/or install these remote tools to compromised systems. It may be possible to detect or prevent the installation of these tools with host-based solutions.&lt;br /&gt;['T1027.004']: Monitor for newly constructed processes and/or command-lines that look for non-native binary formats and cross-platform compiler and execution frameworks like Mono and determine if they have a legitimate purpose on the system. Typically these should only be used in specific and limited cases, like for software development.&lt;br /&gt;['T1059.007']: Monitor for events associated with scripting execution, such as process activity, usage of the Windows Script Host (typically cscript.exe or wscript.exe), file activity involving scripts&lt;br /&gt;['T1553.006']: Monitor processes and command-line arguments for actions that could be taken to modify the code signing policy of a system, such as &lt;code&gt;bcdedit.exe -set TESTSIGNING ON&lt;/code&gt;. (Citation: Microsoft TESTSIGNING Feb 2021)&lt;br /&gt;['T1555.001']: Monitor processes spawned by command line utilities to manipulate keychains directly, such as &lt;code&gt;security&lt;/code&gt;, combined with arguments to collect passwords, such as &lt;code&gt;dump-keychain -d&lt;/code&gt;.&lt;br /&gt;['T1220']: Use process monitoring to monitor the execution and arguments of msxsl.exe and wmic.exe. (Citation: LOLBAS Wmic) (Citation: Twitter SquiblyTwo Detection APR 2018) Command arguments used before and after the script invocation may also be useful in determining the origin and purpose of the payload being loaded. The presence of msxsl.exe or other utilities that enable proxy execution that are typically used for development, debugging, and reverse engineering on a system that is not used for these purposes may be suspicious.&lt;br /&gt;['T1564.002']: Monitor newly executed processes for actions that could be taken to add a new user and subsequently hide it from login screens.&lt;br /&gt;['T1497.002']: User activity-based checks will likely occur in the first steps of an operation but may also occur throughout as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary's implementation and monitoring required. Monitoring for suspicious processes being spawned that gather a variety of system information or perform other forms of Discovery, especially in a short period of time, may aid in detection.&lt;br /&gt;['T1563']: Monitor newly executed processes that may take control of preexisting sessions with remote services to move laterally in an environment.&lt;br /&gt;['T1547.013']: Monitor newly executed processes that may modify XDG autostart entries to execute programs or commands during system boot.&lt;br /&gt;['T1072']: Monitor for newly executed processes that does not correlate to known good software. Analyze the process execution trees, historical activities from the third-party application (such as what types of files are usually pushed), and the resulting activities or events from the file/binary/script pushed to systems. &lt;br /&gt;['T1120']: Monitor for newly executed processes that may attempt to gather information about attached peripheral devices and components connected to a computer system.&lt;br /&gt;['T1553']: Monitor processes and arguments for malicious attempts to modify trust settings, such as the installation of root certificates or modifications to trust attributes/policies applied to files.&lt;br /&gt;['T1082']: Monitor newly executed processes that may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture.&lt;br /&gt;['T1569']: Monitor newly executed processes that may abuse system services or daemons to execute commands or programs.&lt;br /&gt;['T1609']: Container administration service activities and executed commands can be captured through logging of process execution with command-line arguments on the container as well as within the underlying host.&lt;br /&gt;['T1204.002']: Monitor for newly constructed processes and/or command-lines for applications that may be used by an adversary to gain initial access that require user interaction. This includes compression applications, such as those for zip files, that can be used to Deobfuscate/Decode Files or Information in payloads.&lt;br /&gt;['T1070.005']: Monitor for newly constructed processes and/or command line execution that can be used to remove network share connections via the net.exe process. &lt;br /&gt;['T1546.003']: Monitor newly executed processes that result from the execution of subscriptions (i.e. spawning from the WmiPrvSe.exe WMI Provider Host process).&lt;br /&gt;['T1016']: Monitor for executed processes (such as ipconfig/ifconfig and arp) with arguments that may look for details about the network configuration and settings, such as IP and/or MAC addresses.&lt;br /&gt;['T1647']: Monitor for newly executed processes with arguments that can modify property list (plist) files.&lt;br /&gt;['T1562.010']: Monitor newly executed processes that may downgrade or use a version of system features that may be outdated, vulnerable, and/or does not support updated security controls such as logging.&lt;br /&gt;['T1548.003']: Monitor newly executed processes that may perform sudo caching and/or use the suoders file to elevate privileges.&lt;br /&gt;['T1053.006']: Monitor for newly constructed processes and/or command-lines that will have a parent process of 'systemd', a parent process ID of 1, and will usually execute as the 'root' user.&lt;br /&gt;['T1069.001']: Monitor newly executed processes that may attempt to find local system groups and permission settings.&lt;br /&gt;['T1564.006']: Monitor newly executed processes associated with running a virtual instance, such as those launched from binary files associated with common virtualization technologies (ex: VirtualBox, VMware, QEMU, Hyper-V).&lt;br /&gt;['T1518']: Monitor newly executed processes that may attempt to get a listing of software and software versions that are installed on a system or in a cloud environment.&lt;br /&gt;['T1562.002']: Monitor newly executed processes that may disable Windows event logging to limit data that can be leveraged for detections and audits.&lt;br /&gt;['T1059.002']: Monitor for newly executed processes that may abuse AppleScript for execution. Scripts are likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Actions may be related to network and system information [Discovery](https://attack.mitre.org/tactics/TA0007), [Collection](https://attack.mitre.org/tactics/TA0009), or other scriptable post-compromise behaviors and could be used as indicators of detection leading back to the source script.&lt;br /&gt;['T1202']: Monitor for newly constructed processes and/or command-lines that can be used instead of invoking cmd (i.e. pcalua.exe, winrs.exe, cscript/wscript.exe, hh.exe, or bash.exe)&lt;br /&gt;['T1080']: Monitor processes that are executed from removable media for malicious or abnormal activity such as network connections due to Command and Control and possible network Discovery techniques.&lt;br /&gt;['T1201']: Monitor for newly executed processes that may attempt to access detailed information about the password policy used within an enterprise network or cloud environment.&lt;br /&gt;['T1218.009']: Use process monitoring to monitor the execution and arguments of Regsvcs.exe and Regasm.exe. Compare recent invocations of Regsvcs.exe and Regasm.exe with prior history of known good arguments and executed binaries to determine anomalous and potentially adversarial activity.&lt;br /&gt;['T1112']: Monitor processes and command-line arguments for actions that could be taken to change, conceal, and/or delete information in the Registry. (i.e. reg.exe, regedit.exe) &lt;br /&gt;['T1007']: Monitor for newly executed processes with arguments that may try to get information about registered services. System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.&lt;br /&gt;['T1137.001']: Monitor newly executed processes that may abuse Microsoft Office templates to obtain persistence on a compromised system.&lt;br /&gt;['T1546.009']: Monitor newly executed processes that may establish persistence and/or elevate privileges by executing malicious content triggered by AppCert DLLs loaded into processes.&lt;br /&gt;['T1552']: Monitor newly executed processes that may search compromised systems to find and obtain insecurely stored credentials.&lt;br /&gt;['T1127']: Monitor for abnormal presence of these or other utilities that enable proxy execution that are typically used for development, debugging, and reverse engineering on a system that is not used for these purposes may be suspicious. Use process monitoring to monitor the execution and arguments of from developer utilities that may be abused. Compare recent invocations of those binaries with prior history of known good arguments and executed binaries to determine anomalous and potentially adversarial activity. It is likely that these utilities will be used by software developers or for other software development related tasks, so if it exists and is used outside of that context, then the event may be suspicious.&lt;br /&gt;['T1137']: Monitor newly executed processes that may leverage Microsoft Office-based applications for persistence between startups. Collect process execution information including process IDs (PID) and parent process IDs (PPID) and look for abnormal chains of activity resulting from Office processes. Non-standard process execution trees may also indicate suspicious or malicious behavior. If winword.exe is the parent process for suspicious processes and activity relating to other adversarial techniques, then it could indicate that the application was used maliciously.&lt;br /&gt;['T1218.004']: Use process monitoring to monitor the execution and arguments of InstallUtil.exe. Compare recent invocations of InstallUtil.exe with prior history of known good arguments and executed binaries to determine anomalous and potentially adversarial activity&lt;br /&gt;['T1037.003']: Monitor for newly constructed processes and/or command-lines that execute logon scripts&lt;br /&gt;['T1204']: Monitor for newly executed processes that may be used by an adversary to gain Initial Access that require user interaction. This includes compression applications, such as those for zip files, that can be used to [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140) in payloads.&lt;br /&gt;['T1547.006']: Monitor for newly created processes that may modify the kernel to automatically execute programs on system boot.&lt;br /&gt;['T1561']: Monitor newly executed processes that may wipe or corrupt raw disk data on specific systems or in large numbers in a network to interrupt availability to system and network resources.&lt;br /&gt;['T1505.005']: Monitor processes with arguments that may potentially highlight adversary actions to modify Registry values (ex: &lt;code&gt;reg.exe&lt;/code&gt;) or modify/replace the legitimate &lt;code&gt;termsrv.dll&lt;/code&gt;.&lt;br /&gt;['T1547']: Suspicious program execution as autostart programs may show up as outlier processes that have not been seen before when compared against historical data to increase confidence of malicious activity, data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.&lt;br /&gt;['T1070']: Monitor for newly executed processes that may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined malware.&lt;br /&gt;['T1040']: Monitor for newly executed processes that can aid in sniffing network traffic to capture information about an environment, including authentication material passed over the network &lt;br /&gt;['T1137.004']: Monitor newly executed processes that may abuse Microsoft Outlook's Home Page feature to obtain persistence on a compromised system.&lt;br /&gt;['T1496']: Monitor for common cryptomining software process names that may indicate compromise and resource usage.&lt;br /&gt;['T1176']: Monitor for newly executed processes that could be used to abuse internet browser extensions to establish persistence. &lt;br /&gt;['T1486']: Monitor for newly constructed  processes and/or command-lines involved in data destruction activity, such as vssadmin, wbadmin, and bcdedit.&lt;br /&gt;['T1505']: Process monitoring may be used to detect servers components that perform suspicious actions such as running cmd.exe or accessing files.&lt;br /&gt;['T1548.002']: Monitor newly executed processes, such as &lt;code&gt;eventvwr.exe&lt;/code&gt; and &lt;code&gt;sdclt.exe&lt;/code&gt;, that may bypass UAC mechanisms to elevate process privileges on system.&lt;br /&gt;['T1052']: Monitor for newly executed processes when removable media is mounted.&lt;br /&gt;['T1218.007']: Use process monitoring to monitor the execution and arguments of msiexec.exe. Compare recent invocations of msiexec.exe with prior history of known good arguments and executed MSI files.&lt;br /&gt;['T1543.002']: Suspicious processes or scripts spawned in this manner will have a parent process of 'systemd', a parent process ID of 1, and will usually execute as the 'root' user.&lt;br /&gt;['T1561.002']: Monitor newly executed processes that may corrupt or wipe the disk data structures on a hard drive necessary to boot a system; targeting specific critical systems or in large numbers in a network to interrupt availability to system and network resources.&lt;br /&gt;['T1037']: Monitor for newly executed processes that may use scripts automatically executed at boot or logon initialization to establish persistence.&lt;br /&gt;['T1012']: Monitor for newly executed processes that may interact with the Windows Registry to gather information about the system, configuration, and installed software.&lt;br /&gt;['T1059.006']: Monitor systems for abnormal Python usage and python.exe behavior, which could be an indicator of malicious activity. Understanding standard usage patterns is important to avoid a high number of false positives. If scripting is restricted for normal users, then any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent. Scripts are likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Monitor newly executed processes that may abuse Python commands and scripts for execution.&lt;br /&gt;['T1564.009']: Monitor newly executed processes that may abuse resource forks to hide malicious code or executables to evade detection and bypass security applications.&lt;br /&gt;['T1546.014']: Monitor newly executed processes that may gain persistence and elevate privileges by executing malicious content triggered by the Event Monitor Daemon (emond).&lt;br /&gt;['T1574.005']: Monitor for newly constructed processes to match an existing service executables. &lt;br /&gt;['T1056.002']: Monitor for newly executed processes &lt;br /&gt;['T1574.011']: Monitor suspicious programs execution through services. These processes may show up as outlier processes that have not been seen before when compared against historical data.&lt;br /&gt;['T1047']: Monitor for newly constructed processes and/or command-lines of "wmic"&lt;br /&gt;['T1546.012']: Monitor for abnormal usage of the GFlags tool as well as common processes spawned under abnormal parents and/or with creation flags indicative of debugging such as &lt;code&gt;DEBUG_PROCESS&lt;/code&gt; and &lt;code&gt;DEBUG_ONLY_THIS_PROCESS&lt;/code&gt;. (Citation: Microsoft Dev Blog IFEO Mar 2010)&lt;br /&gt;['T1137.006']: Monitor newly executed processes that may abuse Microsoft Office add-ins to obtain persistence on a compromised system. &lt;br /&gt;['T1218']: Monitor processes and command-line parameters for signed binaries that may be used to proxy execution of malicious files. Compare recent invocations of signed binaries that may be used to proxy execution with prior history of known good arguments and loaded files to determine anomalous and potentially adversarial activity. Legitimate programs used in suspicious ways, like msiexec.exe downloading an MSI file from the Internet, may be indicative of an intrusion. Correlate activity with other suspicious behavior to reduce false positives that may be due to normal benign use by users and administrators.&lt;br /&gt;['T1127.001']: Monitor for newly executed processes of MSBuild.exe. Compare recent invocations of those binaries with prior history of known good arguments and executed binaries to determine anomalous and potentially adversarial activity.&lt;br /&gt;['T1546.013']: Monitor newly executed processes that may gain persistence and elevate privileges by executing malicious content triggered by PowerShell profiles.&lt;br /&gt;['T1135']: Monitor for newly executed processes that may look for folders and drives shared on remote systems as a means of identifying sources of information to gather as a precursor for Collection and to identify potential systems of interest for Lateral Movement.&lt;br /&gt;['T1049']: Monitor for executed processes that may attempt to get a listing of network connections to or from the compromised system they are currently accessing or from remote systems by querying for information over the network.&lt;br /&gt;['T1069.002']: Monitor newly executed processes that may attempt to find domain-level groups and permission settings.&lt;br /&gt;['T1574.002']: Monitor newly constructed processes for unusual activity (e.g., a process that does not use the network begins to do so) as well as the introduction of new files/programs.&lt;br /&gt;['T1555.004']: Monitor newly executed processes of &lt;code&gt;vaultcmd.exe&lt;/code&gt; for suspicious activity, such as listing credentials from the Windows Credentials locker (i.e., &lt;code&gt;vaultcmd /listcreds:"Windows Credentials"&lt;/code&gt;).(Citation: Malwarebytes The Windows Vault)&lt;br /&gt;['T1546.002']: Monitor newly executed processes that may establish persistence by executing malicious content triggered by user inactivity.&lt;br /&gt;['T1137.002']: Monitor newly executed processes that may abuse the Microsoft Office "Office Test" Registry key to obtain persistence on a compromised system.&lt;br /&gt;['T1083']: Monitor newly executed processes that may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system.&lt;br /&gt;['T1570']: Monitor newly constructed processes that assist in lateral tool transfers. &lt;br /&gt;['T1546.007']: It is likely unusual for netsh.exe to have any child processes in most environments. Monitor process executions and investigate any child processes spawned by netsh.exe for malicious behavior.&lt;br /&gt;['T1569.002']: Monitor for newly executed processes that may abuse the Windows service control manager to execute malicious commands or payloads.&lt;br /&gt;['T1218.003']: Use process monitoring to detect and analyze the execution and arguments of CMSTP.exe. Compare recent invocations of CMSTP.exe with prior history of known good arguments and loaded files to determine anomalous and potentially adversarial activity. Sysmon events can also be used to identify potential abuses of CMSTP.exe. Detection strategy may depend on the specific adversary procedure, but potential rules include: (Citation: Endurant CMSTP July 2018)
* To detect loading and execution of local/remote payloads - Event 1 (Process creation) where ParentImage contains CMSTP.exe
* Also monitor for events, such as the creation of processes (Sysmon Event 1), that involve auto-elevated CMSTP COM interfaces such as CMSTPLUA (3E5FC7F9-9A51-4367-9063-A120244FBEC7) and CMLUAUTIL (3E000D72-A845-4CD9-BD83-80C07C3B881F).&lt;br /&gt;['T1562']: Monitor newly executed processes that may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms.&lt;br /&gt;['T1555']: Monitor newly executed processes that may search for common password storage locations to obtain user credentials.&lt;br /&gt;['T1197']: Monitor for newly constructed BITS tasks to enumerate using the BITSAdmin tool (bitsadmin /list /allusers /verbose). &lt;br /&gt;['T1005']: Monitor for newly executed processes that may search local system sources, such as file systems or local databases, to find files of interest and sensitive data prior to Exfiltration.&lt;br /&gt;['T1574.007']: Monitor for newly executed processes for process executable paths that are named for partial directories.&lt;br /&gt;['T1574.009']: Monitor for newly executed processes that may execute their own malicious payloads by hijacking vulnerable file path references.&lt;br /&gt;['T1218.013']: Monitor the execution and arguments of mavinject.exe. Compare recent invocations of mavinject.exe with prior history of known good arguments and injected DLLs to determine anomalous and potentially adversarial activity.&lt;br /&gt;['T1021.003']: Monitor for newly executed processes associated with DCOM activity, especially those invoked by a user different than the one currently logged on. Enumeration of COM objects, via [Query Registry](https://attack.mitre.org/techniques/T1012) or [PowerShell](https://attack.mitre.org/techniques/T1059/001), may also precede malicious use.(Citation: Fireeye Hunting COM June 2019)(Citation: Enigma MMC20 COM Jan 2017)&lt;br /&gt;['T1559.001']: Monitor for newly executed processes that are associated with COM objects, especially those invoked by a user different than the one currently logged on.&lt;br /&gt;['T1134']: Monitor for executed processes that may modify access tokens to operate under a different user or system security context to perform actions and bypass access controls.&lt;br /&gt;['T1018']: Monitor for newly executed processes that can be used to discover remote systems, such as &lt;code&gt;ping.exe&lt;/code&gt; and &lt;code&gt;tracert.exe&lt;/code&gt;, especially when executed in quick succession.(Citation: Elastic - Koadiac Detection with EQL)&lt;br /&gt;['T1561.001']: Monitor newly executed processes that may erase the contents of storage devices on specific systems or in large numbers in a network to interrupt availability to system and network resources.&lt;br /&gt;['T1027']: Monitor for newly executed processes that may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit.&lt;br /&gt;['T1137.003']: Monitor newly executed processes that may abuse Microsoft Outlook forms to obtain persistence on a compromised system.&lt;br /&gt;['T1218.014']: Monitor processes for suspicious or malicious use of MMC. Since MMC is a signed Windows binary, verify use of MMC is legitimate and not malicious.&lt;br /&gt;['T1546']: Tools such as Sysinternals Autoruns can be used to detect changes to execution triggers that could be attempts at persistence. Also look for abnormal process call trees for execution of other commands that could relate to Discovery actions or other techniques.&lt;br /&gt;['T1124']: Monitor for newly executed processes that may gather the system time and/or time zone from a local or remote system.&lt;br /&gt;['T1218.010']: Use process monitoring to monitor the execution and arguments of regsvr32.exe. Compare recent invocations of regsvr32.exe with prior history of known good arguments and loaded files to determine anomalous and potentially adversarial activity.&lt;br /&gt;['T1021']: Monitor for newly executed processes that may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to log into a service specifically designed to accept remote connections, such as RDP, telnet, SSH, and VNC. The adversary may then perform actions that spawn additional processes as the logged-on user.&lt;br /&gt;['T1059.003']: Monitor for newly executed processes that may abuse the Windows command shell for execution.&lt;br /&gt;['T1218.002']: Monitor and analyze activity related to items associated with CPL files, such as the control.exe. Analyze new Control Panel items as well as those present on disk for malicious content. Both executable and CPL formats are compliant Portable Executable (PE) images and can be examined using traditional tools and methods, pending anti-reverse-engineering techniques.(Citation: TrendMicro CPL Malware Jan 2014)&lt;br /&gt;['T1489']: Monitor processes and command-line arguments to see if critical processes are terminated or stop running.&lt;br /&gt;['T1562.001']: Monitor processes for unexpected termination related to security tools/services.
&lt;br /&gt;['T1562']: Monitor for unexpected deletions of a running process (ex: Sysmon EID 5 or Windows EID 4689) that may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms.&lt;br /&gt;['T1056.004']: Verify integrity of live processes by comparing code in memory to that of corresponding static binaries, specifically checking for jumps and other instructions that redirect code flow.&lt;br /&gt;['T1036']: Monitor for file names that are mismatched between the file name on disk and that of the binary's PE metadata, this is a likely indicator that a binary was renamed after it was compiled. &lt;br /&gt;['T1059']: Monitor contextual data about a running process, which may include information such as environment variables, image name, user/owner, or other information that may reveal abuse of system features. For example, consider monitoring for Windows event ID (EID) 400, which shows the version of PowerShell executing in the &lt;code&gt;EngineVersion&lt;/code&gt; field (which may also be relevant to detecting a potential [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)) as well as if PowerShell is running locally or remotely in the &lt;code&gt;HostName&lt;/code&gt; field. Furthermore, EID 400 may indicate the start time and EID 403 indicates the end time of a PowerShell session.(Citation: inv_ps_attacks)&lt;br /&gt;['T1036.005']: Collecting and comparing disk and resource filenames for binaries by looking to see if the InternalName, OriginalFilename, and/or ProductName match what is expected could provide useful leads, but may not always be indicative of malicious activity.&lt;br /&gt;['T1548']: Monitor contextual data about a running process, which may include information such as environment variables, image name, user/owner that may circumvent mechanisms designed to control elevate privileges to gain higher-level permissions.&lt;br /&gt;['T1562.010']: Monitor contextual data about a running process, which may include information such as environment variables, image name, user/owner, or other information that may reveal use of a version of system features that may be outdated, vulnerable, and/or does not support updated security controls such as logging. For example, monitoring for Windows event ID (EID) 400, specifically the &lt;code&gt;EngineVersion&lt;/code&gt; field which shows the version of PowerShell running, may highlight a malicious downgrade attack.(Citation: inv_ps_attacks)&lt;br /&gt;['T1134.004']: Look for inconsistencies between the various fields that store PPID information, such as the EventHeader ProcessId from data collected via Event Tracing for Windows (ETW), Creator Process ID/Name from Windows event logs, and the ProcessID and ParentProcessID (which are also produced from ETW and other utilities such as Task Manager and Process Explorer). The ETW provided EventHeader ProcessId identifies the actual parent process.(Citation: CounterCept PPID Spoofing Dec 2018)&lt;br /&gt;['T1548.003']: Monitor contextual data about a running process, which may include information such as environment variables, image name, user/owner that may perform sudo caching and/or use the suoders file to elevate privileges.&lt;br /&gt;['T1059.001']: Consider monitoring for Windows event ID (EID) 400, which shows the version of PowerShell executing in the &lt;code&gt;EngineVersion&lt;/code&gt; field (which may also be relevant to detecting a potential [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)) as well as if PowerShell is running locally or remotely in the &lt;code&gt;HostName&lt;/code&gt; field. Furthermore, EID 400 may indicate the start time and EID 403 indicates the end time of a PowerShell session.(Citation: inv_ps_attacks)&lt;br /&gt;['T1548.002']: Monitor contextual data about a running process, which may include information such as environment variables, image name, user/owner that may bypass UAC mechanisms to elevate process privileges on system.&lt;br /&gt;['T1134']: Query systems for process and thread token information and look for inconsistencies such as user owns processes impersonating the local SYSTEM account.(Citation: BlackHat Atkinson Winchester Token Manipulation) Look for inconsistencies between the various fields that store PPID information, such as the EventHeader ProcessId from data collected via Event Tracing for Windows (ETW), Creator Process ID/Name from Windows event logs, and the ProcessID and ParentProcessID (which are also produced from ETW and other utilities such as Task Manager and Process Explorer). The ETW provided EventHeader ProcessId identifies the actual parent process.&lt;br /&gt;['T1185']: This may be a difficult technique to detect because adversary traffic may be masked by normal user traffic. Monitor for [Process Injection](https://attack.mitre.org/techniques/T1055) against browser applications.&lt;br /&gt;['T1055.015']: Monitor for changes made to processes that may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges. Analyze process behavior to determine if a process is performing unusual actions, such as opening network connections, reading files, or other suspicious actions that could relate to post-compromise behavior. &lt;br /&gt;['T1055.012']: Monitor for changes made to processes that may inject malicious code into suspended and hollowed processes in order to evade process-based defenses.&lt;br /&gt;['T1055']: Monitor for changes made to processes that may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges.&lt;br /&gt;['T1055.004']: Monitor for changes made to processes that may inject malicious code into processes via the asynchronous procedure call (APC) queue in order to evade process-based defenses as well as possibly elevate privileges.&lt;br /&gt;['T1055.008']: Monitor for changes made to processes that may inject malicious code into processes via ptrace (process trace) system calls in order to evade process-based defenses as well as possibly elevate privileges.&lt;br /&gt;['T1055.003']: Monitor for changes made to processes that may inject malicious code into hijacked processes in order to evade process-based defenses as well as possibly elevate privileges.&lt;br /&gt;['T1055.005']: Monitor for changes made to processes that may inject malicious code into processes via thread local storage (TLS) callbacks in order to evade process-based defenses as well as possibly elevate privileges.&lt;br /&gt;['T1055.002']: Monitor for changes made to processes that may inject portable executables (PE) into processes in order to evade process-based defenses as well as possibly elevate privileges.&lt;br /&gt;['T1055.001']: Monitor for changes made to processes that may inject dynamic-link libraries (DLLs) into processes in order to evade process-based defenses as well as possibly elevate privileges.&lt;br /&gt;['T1556']: Monitor for unexpected processes interacting with authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts.&lt;br /&gt;['T1003.001']: Monitor for unexpected processes interacting with LSASS.exe.(Citation: Medium Detecting Attempts to Steal Passwords from Memory) Common credential dumpers such as Mimikatz access LSASS.exe by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details are stored. Credential dumpers may also use methods for reflective [Process Injection](https://attack.mitre.org/techniques/T1055) to reduce potential indicators of malicious activity.&lt;br /&gt;['T1555.003']: Monitor process execution logs to include PowerShell Transcription focusing on those that perform a combination of behaviors including reading web browser process memory, utilizing regular expressions, and those that contain numerous keywords for common web applications (Gmail, Twitter, Office365, etc.).&lt;br /&gt;['T1539']: Monitor for attempts by programs to inject into or dump browser process memory.&lt;br /&gt;['T1555.005']: Monitor process being accessed that may acquire user credentials from third-party password managers.(Citation: ise Password Manager February 2019)&lt;br /&gt;['T1055.002']: Monitor for processes being viewed that may inject portable executables (PE) into processes in order to evade process-based defenses as well as possibly elevate privileges.&lt;br /&gt;['T1055.008']: Monitor for processes being viewed that may inject malicious code into processes via ptrace (process trace) system calls in order to evade process-based defenses as well as possibly elevate privileges.&lt;br /&gt;['T1055']: Monitor for processes being viewed that may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges.&lt;br /&gt;['T1055.004']: Monitor for processes being viewed that may inject malicious code into processes via the asynchronous procedure call (APC) queue in order to evade process-based defenses as well as possibly elevate privileges.&lt;br /&gt;['T1559.003']: Monitor for processes making abnormal calls to higher privileged processes, such as a user application connecting to a VPN service.(Citation: versprite xpc vpn)&lt;br /&gt;['T1055.001']: Monitor for process being viewed that may inject dynamic-link libraries (DLLs) into processes in order to evade process-based defenses as well as possibly elevate privileges.&lt;br /&gt;['T1556.001']: Monitor for unexpected processes interacting with the authentication process on a domain controller to bypass the typical authentication mechanisms and enable access to accounts.&lt;br /&gt;['T1555']: Monitor for processes being accessed that may search for common password storage locations to obtain user credentials.&lt;br /&gt;['T1055.005']: Monitor for processes being viewed that may inject malicious code into processes via thread local storage (TLS) callbacks in order to evade process-based defenses as well as possibly elevate privileges.&lt;br /&gt;['T1555.002']: Monitor for processes being accessed that may obtain root access (allowing them to read securityd's memory), then they can scan through memory to find the correct sequence of keys in relatively few tries to decrypt the user's logon keychain.&lt;br /&gt;['T1003']: Monitor for unexpected processes interacting with lsass.exe.(Citation: Medium Detecting Attempts to Steal Passwords from Memory) Common credential dumpers such as [Mimikatz](https://attack.mitre.org/software/S0002) access the LSA Subsystem Service (LSASS) process by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details are stored. Credential dumpers may also use methods for reflective [Process Injection](https://attack.mitre.org/techniques/T1055) to reduce potential indicators of malicious activity.
##### Linux
To obtain the passwords and hashes stored in memory, processes must open a maps file in the /proc filesystem for the process being analyzed. This file is stored under the path &lt;code&gt;/proc/&amp;lt;pid&amp;gt;/maps&lt;/code&gt;, where the &lt;code&gt;&amp;lt;pid&amp;gt;&lt;/code&gt; directory is the unique pid of the program being interrogated for such authentication data. The AuditD monitoring tool, which ships stock in many Linux distributions, can be used to watch for hostile processes opening this file in the proc file system, alerting on the pid, process name, and arguments of such programs.&lt;br /&gt;['T1055.012']: Monitor for processes being viewed that may inject malicious code into suspended and hollowed processes in order to evade process-based defenses.&lt;br /&gt;['T1055.003']: Monitor for processes being viewed that may inject malicious code into hijacked processes in order to evade process-based defenses as well as possibly elevate privileges.&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Microsoft Processes and Threads" url="https://docs.microsoft.com/en-us/windows/win32/procthread/processes-and-threads"/>
            <reference name="Mitre ATT&amp;CK Data Source DS0009" url="https://attack.mitre.org/datasources/DS0009"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:01.894">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-DS0002" name="User Account" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>A profile representing a user, device, service, or application used to authenticate and access resources&lt;br /&gt;&lt;p&gt;Detailed detections per technique:&lt;/p&gt;&lt;br /&gt;['T1110.002']:  Monitor for many failed authentication attempts across various accounts that may result from password spraying attempts. It is difficult to detect when hashes are cracked, since this is generally done outside the scope of the target network. (ex: Windows EID 4625 or 5379)&lt;br /&gt;['T1078.002']: Monitor for an attempt by a user to gain access to a network or computing resource, often by the use of domain authentication services, such as the System Security Services Daemon (sssd) on Linux&lt;br /&gt;['T1078.004']: Monitor the activity of cloud accounts to detect abnormal or malicious behavior, such as accessing information outside of the normal function of the account or account usage at atypical hours.&lt;br /&gt;['T1552.007']: It may be possible to detect adversary use of credentials they have obtained such as in [Valid Accounts](https://attack.mitre.org/techniques/T1078).&lt;br /&gt;['T1070']: Monitor for an attempt by a user to gain access to a network or computing resource, often by providing credentials that may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined malware.&lt;br /&gt;['T1550.003']: Audit all Kerberos authentication and credential use events and review for discrepancies. Unusual remote authentication events that correlate with other suspicious activity (such as writing and executing binaries) may indicate malicious activity.&lt;br /&gt;['T1621']: Monitor user account logs for suspicious events: unusual login attempt source location, mismatch in location of login attempt and smart device receiving 2FA/MFA request prompts, and high volume of repeated login attempts, all of which may indicate user's primary credentials have been compromised minus 2FA/MFA mechanism.&lt;br /&gt;['T1212']: Credential resources obtained through exploitation may be detectable in use if they are not normally used or seen.&lt;br /&gt;['T1110']:  Monitor for many failed authentication attempts across various accounts that may result from password spraying attempts. It is difficult to detect when hashes are cracked, since this is generally done outside the scope of the target network.&lt;br /&gt;['T1606.002']: Monitor for user authentication attempts, when requesting access tokens to services, that failed because of Conditional Access Policies (CAP). Some SAML tokens features, such as the location of a user, may not be as easy to claim.&lt;br /&gt;['T1207']: Investigate usage of Kerberos Service Principal Names (SPNs), especially those associated with services (beginning with "GC/") by computers not present in the DC organizational unit (OU). The SPN associated with the Directory Replication Service (DRS) Remote Protocol interface (GUID E3514235-4B06-11D1-AB04-00C04FC2DCD2) can be set without logging.(Citation: ADDSecurity DCShadow Feb 2018) A rogue DC must authenticate as a service using these two SPNs for the replication process to successfully complete.&lt;br /&gt;['T1552.005']: It may be possible to detect adversary use of credentials they have obtained such as in [Valid Accounts](https://attack.mitre.org/techniques/T1078).&lt;br /&gt;['T1078.001']: Monitor for an attempt by a user to gain access to a network or computing resource, often by providing credentials&lt;br /&gt;['T1550.002']: Monitor for user authentication attempts. From a classic Pass-The-Hash perspective, this technique uses a hash through the NTLMv1 / NTLMv2 protocol to authenticate against a compromised endpoint. This technique does not touch Kerberos. Therefore, NTLM LogonType 3 authentications that are not associated to a domain login and are not anonymous logins are suspicious. From an Over-Pass-The-Hash perspective, an adversary wants to exchange the hash for a Kerberos authentication ticket (TGT). One way to do this is by creating a sacrificial logon session with dummy credentials (LogonType 9) and then inject the hash into that session which triggers the Kerberos authentication process.&lt;br /&gt;['T1070.005']: Monitoring for Windows authentication logs are also useful in determining when authenticated network shares are established and by which account, and can be used to correlate network share activity to other events to investigate potentially malicious activity.&lt;br /&gt;['T1078']: Monitor for an attempt by a user that may obtain and abuse credentials of existing accounts as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. &lt;br /&gt;['T1070.003']: Monitor for an attempts by a user to gain access to a network or computing resource, often by providing credentials via remote terminal services, that do not have a corresponding entry in a command history file.&lt;br /&gt;['T1550']: Monitor for an attempt by a user to gain access to a network or computing resource, often by providing credentials that may use alternate authentication material, such as password hashes, Kerberos tickets, and application access tokens, in order to move laterally within an environment and bypass normal system access controls.&lt;br /&gt;['T1538']: Correlate other security systems with login information&lt;br /&gt;['T1552']: Monitor for an attempt by a user to gain access to a network or computing resource, often by providing credentials that may search compromised systems to find and obtain insecurely stored credentials.&lt;br /&gt;['T1564.002']: Monitor for newly constructed user accounts, such as userIDs under 500 on macOS, that may mask the presence of user accounts they create or modify.&lt;br /&gt;['T1136.003']: Monitor for newly constructed user accounts through the collection of usage logs from cloud user and administrator accounts to identify unusual activity in the creation of new accounts and assignment of roles to those accounts. Monitor for accounts assigned to admin roles that go over a certain threshold of known admins.&lt;br /&gt;['T1136.001']: Monitor for newly constructed user accounts through account audits to detect suspicious accounts that may have been created by an adversary. Collect data on account creation within a network or Windows Event ID 4720 (for when a user account is created on a Windows system and domain controller).&lt;br /&gt;['T1564']: Monitor for newly constructed user accounts that may attempt to hide artifacts associated with their behaviors to evade detection.&lt;br /&gt;['T1531']: Monitor for unexpected deletions of user accounts. Windows event logs may designate activity associated with an adversary's attempt to remove an account (ex: Event ID 4726 - A user account was deleted).

Alerting on these Event IDs may generate a high degree of false positives, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible.&lt;br /&gt;['T1098.001']: Monitor Azure Activity Logs for Service Principal and Application modifications. Monitor for the usage of APIs that create or import SSH keys, particularly by unexpected users or accounts such as the root account.&lt;br /&gt;['T1528']: Administrators should set up monitoring to trigger automatic alerts when policy criteria are met. For example, using a Cloud Access Security Broker (CASB), admins can create a "High severity app permissions" policy that generates alerts if apps request high severity permissions or send permissions requests for too many users.
Security analysts can hunt for malicious apps using the tools available in their CASB, identity provider, or resource provider (depending on platform.) For example, they can filter for apps that are authorized by a small number of users, apps requesting high risk permissions, permissions incongruous with the app's purpose, or apps with old "Last authorized" fields. A specific app can be investigated using an activity log displaying activities the app has performed, although some activities may be mis-logged as being performed by the user. App stores can be useful resources to further investigate suspicious apps.
Administrators can set up a variety of logs and leverage audit tools to monitor actions that can be conducted as a result of OAuth 2.0 access. For instance, audit reports enable admins to identify privilege escalation actions such as role creations or policy modifications, which could be actions performed after initial access.&lt;br /&gt;['T1531']: Monitor for changes made to user accounts for unexpected modification of properties, such as passwords or status (enabled/disabled). Windows event logs may designate activity associated with an adversary's attempt to remove access to an account:
Event ID 4723 - An attempt was made to change an account's password
Event ID 4724 - An attempt was made to reset an account's password
Event ID 4725 - A user account was disabled

Alerting on these Event IDs may generate a high degree of false positives, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible.&lt;br /&gt;['T1098.003']: Collect usage logs from cloud administrator accounts to identify unusual activity in the assignment of roles to those accounts. Monitor for accounts assigned to admin roles that go over a certain threshold of known admins.&lt;br /&gt;['T1098.005']: Monitor user accounts for new and suspicious device associations, such as those originating from unusual sources, occurring at unusual times, or following a suspicious login.(Citation: Microsoft DEV-0537) &lt;br /&gt;['T1098.002']: Monitor for unusual Exchange and Office 365 email account permissions changes that may indicate excessively broad permissions being granted to compromised accounts.&lt;br /&gt;['T1098']: Monitor events for changes to account objects and/or permissions on systems and the domain, such as event IDs 4738, 4728 and 4670. Monitor for modification of accounts in correlation with other suspicious activity. Changes may occur at unusual times or from unusual systems. Especially flag events where the subject and target accounts differ or that include additional flags such as changing a password without knowledge of the old password.

Monitor for unusual permissions changes that may indicate excessively broad permissions being granted to compromised accounts.&lt;br /&gt;['T1201']: Monitor for contextual data about an account that may attempt to access detailed information about the password policy used within an enterprise network or cloud environment.&lt;br /&gt;['T1134']: Monitor for contextual data about an account, which may include a username, user ID, environmental data, etc. that may modify access tokens to operate under a different user or system security context to perform actions and bypass access controls.&lt;br /&gt;['T1134.005']: Examine data in user's SID-History attributes&lt;br /&gt;['T1564.002']: Monitor for contextual data about an account, which may include a username, user ID, environmental data that may mask the presence of user accounts they create or modify. On macOS, identify users with an userID under 500 and the &lt;code&gt;Hide500Users&lt;/code&gt; key value in the &lt;code&gt;/Library/Preferences/com.apple.loginwindow&lt;/code&gt; plist file set to &lt;code&gt;TRUE&lt;/code&gt;.(Citation: Cybereason OSX Pirrit)&lt;br /&gt;['T1556.005']: Monitor Fine-Grained Password Policies and regularly audit user accounts and group settings.(Citation: dump_pwd_dcsync)&lt;br /&gt;['T1564']: Monitor for contextual data about an account, which may include a username, user ID, environmental data that may attempt to hide artifacts associated with their behaviors to evade detection.&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Mitre ATT&amp;CK Data Source DS0002" url="https://attack.mitre.org/datasources/DS0002"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:01.890">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-M1018" name="User Account Management" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>Manage the creation, modification, use, and permissions associated to user accounts.&lt;br /&gt;&lt;p&gt;Detailed mitigations per technique:&lt;/p&gt;&lt;br /&gt;['T1580']: Limit permissions to discover cloud infrastructure in accordance with least privilege. Organizations should limit the number of users within the organization with an IAM role that has administrative privileges, strive to reduce all permanent privileged role assignments, and conduct periodic entitlement reviews on IAM users, roles and policies.&lt;br /&gt;['T1159', 'T1543.001']: Restrict user's abilities to create Launch Agents with group policy.&lt;br /&gt;['T1543']: Limit privileges of user accounts and groups so that only authorized administrators can interact with system-level process changes and service configurations.&lt;br /&gt;['T1040']: In cloud environments, ensure that users are not granted permissions to create or modify traffic mirrors unless this is explicitly required.&lt;br /&gt;['T1578']: Limit permissions for creating, deleting, and otherwise altering compute components in accordance with least privilege. Organizations should limit the number of users within the organization with an IAM role that has administrative privileges, strive to reduce all permanent privileged role assignments, and conduct periodic entitlement reviews on IAM users, roles and policies.(Citation: Mandiant M-Trends 2020)&lt;br /&gt;['T1004', 'T1547.004']: Limit the privileges of user accounts so that only authorized administrators can perform Winlogon helper changes.&lt;br /&gt;['T1072']: Ensure that any accounts used by third-party providers to access these systems are traceable to the third-party and are not used throughout the network or used by other third-party providers in the same environment. Ensure there are regular reviews of accounts provisioned to these systems to verify continued business need, and ensure there is governance to trace de-provisioning of access that is no longer required. Ensure proper system and access isolation for critical network systems through use of account privilege separation.&lt;br /&gt;['T1574.010', 'T1574.005']: Limit privileges of user accounts and groups so that only authorized administrators can interact with service changes and service binary target path locations. Deny execution from user directories such as file download directories and temp directories where able.&lt;br /&gt;['T1098.004']: In cloud environments, ensure that only users who explicitly require the permissions to update instance metadata or configurations can do so.&lt;br /&gt;['T1619']: Restrict granting of permissions related to listing objects in cloud storage to necessary accounts.&lt;br /&gt;['T1053']: Limit privileges of user accounts and remediate Privilege Escalation vectors so only authorized administrators can create scheduled tasks on remote systems.&lt;br /&gt;['T1089', 'T1562.001']: Ensure proper user permissions are in place to prevent adversaries from disabling or interfering with security services.&lt;br /&gt;['T1530']: Configure user permissions groups and roles for access to cloud storage.(Citation: Microsoft Azure Storage Security, 2019) Implement strict Identity and Access Management (IAM) controls to prevent access to storage solutions except for the applications, users, and services that require access.(Citation: Amazon S3 Security, 2019) Ensure that temporary access tokens are issued rather than permanent credentials, especially when access is being granted to entities outside of the internal security boundary.(Citation: Amazon  AWS Temporary Security Credentials)&lt;br /&gt;['T1050']: Limit privileges of user accounts and remediate Privilege Escalation vectors so only  authorized administrators can create new services.&lt;br /&gt;['T1610']: Enforce the principle of least privilege by limiting container dashboard access to only the necessary users.&lt;br /&gt;['T1197']: 
Consider limiting access to the BITS interface to specific users or groups.(Citation: Symantec BITS May 2007)&lt;br /&gt;['T1537']: Limit user account and IAM policies to the least privileges required. Consider using temporary credentials for accounts that are only valid for a certain period of time to reduce the effectiveness of compromised accounts.&lt;br /&gt;['T1562.008']: Configure default account policy to enable logging. Manage policies to ensure only necessary users have permissions to make changes to logging policies.&lt;br /&gt;['T1546.003', 'T1084']: By default, only administrators are allowed to connect remotely using WMI; restrict other users that are allowed to connect, or disallow all users from connecting remotely to WMI.&lt;br /&gt;['T1547.009', 'T1023']: Limit permissions for who can create symbolic links in Windows to appropriate groups such as Administrators and necessary groups for virtualization. This can be done through GPO: Computer Configuration &gt; [Policies] &gt; Windows Settings &gt; Security Settings &gt; Local Policies &gt; User Rights Assignment: Create symbolic links. (Citation: UCF STIG Symbolic Links)&lt;br /&gt;['T1578.003']: Limit permissions for deleting new instances in accordance with least privilege. Organizations should limit the number of users within the organization with an IAM role that has administrative privileges, strive to reduce all permanent privileged role assignments, and conduct periodic entitlement reviews on IAM users, roles and policies.(Citation: Mandiant M-Trends 2020)&lt;br /&gt;['T1051']: Ensure that permissions of the Web server process are only what is required by not using built-in accounts; instead, create specific accounts to limit unnecessary access or permissions overlap across multiple systems. (Citation: acunetix Server Secuirty) (Citation: NIST Server Security July 2008)&lt;br /&gt;['T1134', 'T1134.001', 'T1134.003']: An adversary must already have administrator level access on the local system to make full use of this technique; be sure to restrict users and accounts to the least privileges they require.  &lt;br /&gt;['T1163']: Limit privileges of user accounts so only authorized users can edit the rc.common file.&lt;br /&gt;['T1054', 'T1562.006']: Ensure event tracers/forwarders (Citation: Microsoft ETW May 2018), firewall policies, and other associated mechanisms are secured with appropriate permissions and access controls and cannot be manipulated by user accounts.&lt;br /&gt;['T1165']: Appropriate permissions should be applied such that only specific users can edit the startup items so that they can be leveraged for privilege escalation.&lt;br /&gt;['T1543.004', 'T1160', 'T1053.004']: Limit privileges of user accounts and remediate Privilege Escalation vectors so only authorized administrators can create new Launch Daemons.&lt;br /&gt;['T1047']: By default, only administrators are allowed to connect remotely using WMI. Restrict other users who are allowed to connect, or disallow all users to connect remotely to WMI.&lt;br /&gt;['T1609']: Enforce authentication and role-based access control on the container service to restrict users to the least privileges required.(Citation: Kubernetes Hardening Guide)&lt;br /&gt;['T1550.003', 'T1097']: Do not allow a user to be a local administrator for multiple systems.&lt;br /&gt;['T1574']: Limit privileges of user accounts and groups so that only authorized administrators can interact with service changes and service binary target path locations. Deny execution from user directories such as file download directories and temp directories where able.

Ensure that proper permissions and directory access control are set to deny users the ability to write files to the top-level directory &lt;code&gt;C:&lt;/code&gt; and system directories, such as &lt;code&gt;C:\Windows\&lt;/code&gt;, to reduce places where malicious files could be placed for execution.&lt;br /&gt;['T1078']: Regularly audit user accounts for activity and deactivate or remove any that are no longer needed.&lt;br /&gt;['T1053.007']: Limit privileges of user accounts and remediate privilege escalation vectors so only authorized administrators can create container orchestration jobs.&lt;br /&gt;['T1484.001', 'T1484']: Consider implementing WMI and security filtering to further tailor which users and computers a GPO will apply to.(Citation: Wald0 Guide to GPOs)(Citation: Microsoft WMI Filters)(Citation: Microsoft GPO Security Filtering)&lt;br /&gt;['T1547.006']: Use MDM to disable user's ability to install or approve kernel extensions, and ensure all approved kernel extensions are in alignment with policies specified in &lt;code&gt;com.apple.syspolicy.kernel-extension-policy&lt;/code&gt;.(Citation: Apple TN2459 Kernel Extensions)(Citation: MDMProfileConfigMacOS)
&lt;br /&gt;['T1563.002', 'T1021.001', 'T1076', 'T1563']: Limit remote user permissions if remote access is necessary.&lt;br /&gt;['T1569', 'T1569.001']: Prevent users from installing their own launch agents or launch daemons.&lt;br /&gt;['T1501', 'T1543.002']: Limit user access to system utilities such as 'systemctl' to only users who have a legitimate need.&lt;br /&gt;['T1213.002', 'T1213', 'T1213.001']: Enforce the principle of least-privilege. Consider implementing access control mechanisms that include both authentication and authorization.&lt;br /&gt;['T1031', 'T1489']: Limit privileges of user accounts and groups so that only authorized administrators can interact with service changes and service configurations.&lt;br /&gt;['T1021']: Limit the accounts that may use remote services. Limit the permissions for accounts that are at higher risk of compromise; for example, configure SSH so users can only run specific programs.&lt;br /&gt;['T1550.002', 'T1075']: Do not allow a domain user to be in the local administrator group on multiple systems.&lt;br /&gt;['T1562']: Ensure proper user permissions are in place to prevent adversaries from disabling or interfering with security/logging services.&lt;br /&gt;['T1547.013']: Limit privileges of user accounts so only authorized privileged users can create and modify XDG autostart entries.&lt;br /&gt;['T1157']: Prevent users from being able to write files to the search paths for applications.&lt;br /&gt;['T1034']: Ensure that proper permissions and directory access control are set to deny users the ability to write files to the top-level directory &lt;code&gt;C:&lt;/code&gt; and system directories, such as &lt;code&gt;C:\Windows\&lt;/code&gt;, to reduce places where malicious files could be placed for execution.&lt;br /&gt;['T1578.001']: Limit permissions for creating snapshots or backups in accordance with least privilege. Organizations should limit the number of users within the organization with an IAM role that has administrative privileges, strive to reduce all permanent privileged role assignments, and conduct periodic entitlement reviews on IAM users, roles and policies.(Citation: Mandiant M-Trends 2020)&lt;br /&gt;['T1606.002', 'T1606']: Ensure that user accounts with administrative rights follow best practices, including use of privileged access workstations, Just in Time/Just Enough Administration (JIT/JEA), and strong authentication. Reduce the number of users that are members of highly privileged Directory Roles.(Citation: Microsoft SolarWinds Customer Guidance)&lt;br /&gt;['T1134.002']: An adversary must already have administrator level access on the local system to make full use of this technique; be sure to restrict users and accounts to the least privileges they require.&lt;br /&gt;['T1053.005']: Limit privileges of user accounts and remediate Privilege Escalation vectors so only authorized administrators can create scheduled tasks on remote systems. &lt;br /&gt;['T1566.002']: Azure AD Administrators apply limitations upon the ability for users to grant consent to unfamiliar or unverified third-party applications. &lt;br /&gt;['T1110.004', 'T1110']: Proactively reset accounts that are known to be part of breached credentials either immediately, or after detecting bruteforce attempts.&lt;br /&gt;['T1185']: Since browser pivoting requires a high integrity process to launch from, restricting user permissions and addressing Privilege Escalation and [Bypass User Account Control](https://attack.mitre.org/techniques/T1548/002) opportunities can limit the exposure to this technique.&lt;br /&gt;['T1044']: Limit privileges of user accounts and groups so that only authorized administrators can interact with service changes and service binary target path locations. Deny execution from user directories such as file download directories and temp directories where able. (Citation: Seclists Kanthak 7zip Installer)&lt;br /&gt;['T1021.004']: Limit which user accounts are allowed to login via SSH.&lt;br /&gt;['T1562.007']: Ensure least privilege principles are applied to Identity and Access Management (IAM) security policies.(Citation: Expel IO Evil in AWS)&lt;br /&gt;['T1168']: Limit privileges of user accounts and remediate Privilege Escalation vectors so only authorized users can create scheduled jobs.&lt;br /&gt;['T1538']: Enforce the principle of least-privilege by limiting dashboard visibility to only the resources required. This may limit the discovery value of the dashboard in the event of a compromised account.&lt;br /&gt;['T1550']: Enforce the principle of least-privilege. Do not allow a domain user to be in the local administrator group on multiple systems.&lt;br /&gt;['T1053.002']: Limit privileges of user accounts and remediate Privilege Escalation vectors so only authorized administrators can create scheduled tasks on remote systems. In Linux environments, users account-level access to &lt;code&gt;[at](https://attack.mitre.org/software/S0110)&lt;/code&gt; can be managed using &lt;code&gt;at.allow&lt;/code&gt; and &lt;code&gt;at.deny&lt;/code&gt; files. Users listed in the at.allow are enabled to schedule actions using at, whereas users listed in at.deny file disabled from the utility.&lt;br /&gt;['T1053.003']: &lt;code&gt;cron&lt;/code&gt; permissions are controlled by &lt;code&gt;/etc/cron.allow and /etc/cron.deny&lt;/code&gt;. If there is a &lt;code&gt;cron.allow&lt;/code&gt; file, then the user or users that need to use &lt;code&gt;cron&lt;/code&gt; will need to be listed in the file. &lt;code&gt;cron.deny&lt;/code&gt; is used to explicitly disallow users from using cron. If neither files exist, then only the super user is allowed to run cron.&lt;br /&gt;['T1505.003']: Enforce the principle of least privilege by limiting privileges of user accounts so only authorized accounts can modify the web directory.(Citation: NSA and ASD Detect and Prevent Web Shells 2020)&lt;br /&gt;['T1552.007']: Enforce authentication and role-based access control on the container API to restrict users to the least privileges required.(Citation: Kubernetes Hardening Guide)&lt;br /&gt;['T1562.004']: Ensure proper user permissions are in place to prevent adversaries from disabling or modifying firewall settings.&lt;br /&gt;['T1213.003']: Enforce the principle of least-privilege. Consider implementing access control mechanisms that include both authentication and authorization for code repositories.&lt;br /&gt;['T1613']: Enforce the principle of least privilege by limiting dashboard visibility to only the required users.&lt;br /&gt;['T1547.012']: Limit user accounts that can load or unload device drivers by disabling &lt;code&gt;SeLoadDriverPrivilege&lt;/code&gt;.&lt;br /&gt;['T1543.003']: Limit privileges of user accounts and groups so that only authorized administrators can interact with service changes and service configurations. &lt;br /&gt;['T1528']: Enforce role-based access control to limit accounts to the least privileges they require. A Cloud Access Security Broker (CASB) can be used to set usage policies and manage user permissions on cloud applications to prevent access to application access tokens. In Kubernetes applications, set "automountServiceAccountToken: false" in the YAML specification of pods that do not require access to service account tokens.(Citation: Kubernetes Hardening Guide)&lt;br /&gt;['T1053.006']: Limit user access to system utilities such as 'systemctl' or 'systemd-run' to users who have a legitimate need.&lt;br /&gt;['T1152']: Prevent users from installing their own launch agents or launch daemons and instead require them to be pushed out by group policy.&lt;br /&gt;['T1578.002']: Limit permissions for creating new instances in accordance with least privilege. Organizations should limit the number of users within the organization with an IAM role that has administrative privileges, strive to reduce all permanent privileged role assignments, and conduct periodic entitlement reviews on IAM users, roles and policies.(Citation: Mandiant M-Trends 2020)&lt;br /&gt;['T1087.004']: Limit permissions to discover cloud accounts in accordance with least privilege. Organizations should limit the number of users within the organization with an IAM role that has administrative privileges, strive to reduce all permanent privileged role assignments, and conduct periodic entitlement reviews on IAM users, roles and policies.&lt;br /&gt;['T1505']: Enforce the principle of least privilege by limiting privileges of user accounts so only authorized accounts can modify and/or add server software components.(Citation: NSA and ASD Detect and Prevent Web Shells 2020)&lt;br /&gt;['T1562.002']: Ensure proper user permissions are in place to prevent adversaries from disabling or interfering with logging.&lt;br /&gt;['T1059.008']: Use of Authentication, Authorization, and Accounting (AAA) systems will limit actions users can perform and provide a history of user actions to detect unauthorized use and abuse. Ensure least privilege principles are applied to user accounts and groups so that only authorized users can perform configuration changes. (Citation: Cisco IOS Software Integrity Assurance - AAA)&lt;br /&gt;['T1574.012']: Limit the privileges of user accounts so that only authorized administrators can edit system environment variables.&lt;br /&gt;['T1078.004']: Periodically review user accounts and remove those that are inactive or unnecessary. Limit the ability for user accounts to create additional accounts.&lt;br /&gt;['T1053.001']: Users account-level access to &lt;code&gt;[at](https://attack.mitre.org/software/S0110)&lt;/code&gt; can be managed using &lt;code&gt;/etc/at.allow&lt;/code&gt; and &lt;code&gt;/etc/at.deny&lt;/code&gt; files. Users listed in the at.allow are enabled to schedule actions using at, whereas users listed in at.deny file disabled from the utility.&lt;br /&gt;['T1162']: Restrict users from being able to create their own login items.&lt;br /&gt;['T1078']: Ensure users and user groups have appropriate permissions for their roles through Identity and Access Management (IAM) controls. Configure user permissions, groups, and roles for access to cloud-based systems as well. Implement strict IAM controls to prevent access to systems except for the applications, users, and services that require access. Consider using temporary credentials that are only good for a certain period of time in cloud environments to reduce the effectiveness of compromised accounts.&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Mitre ATT&amp;CK Mitigation M1018" url="https://attack.mitre.org/mitigations/M1018"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:02.028">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="account-discovery" name="Account Discovery" desc="" library="">
          <threats>
            <threat ref="T-T1087.004" name="Cloud Account" state="Expose" source="MANUAL" edited="false" owner="JamesRabe" library="" editable="true">
              <desc>Adversaries may attempt to get a listing of cloud accounts. Cloud accounts are those created and configured by an organization for use by users, remote support, services, or for administration of resources within a cloud service provider or SaaS application.&lt;br&gt;&lt;br&gt;With authenticated access there are several tools that can be used to find accounts. The &lt;code&gt;Get-MsolRoleMember&lt;/code&gt; PowerShell cmdlet can be used to obtain account names given a role or permissions group in Office 365.(Citation: Microsoft msolrolemember)(Citation: GitHub Raindance) The Azure CLI (AZ CLI) also provides an interface to obtain user accounts with authenticated access to a domain. The command &lt;code&gt;az ad user list&lt;/code&gt; will list all users within a domain.(Citation: Microsoft AZ CLI)(Citation: Black Hills Red Teaming MS AD Azure, 2018) &lt;br&gt;&lt;br&gt;The AWS command &lt;code&gt;aws iam list-users&lt;/code&gt; may be used to obtain a list of users in the current account while &lt;code&gt;aws iam list-roles&lt;/code&gt; can obtain IAM roles that have a specified path prefix.(Citation: AWS List Roles)(Citation: AWS List Users) In GCP, &lt;code&gt;gcloud iam service-accounts list&lt;/code&gt; and &lt;code&gt;gcloud projects get-iam-policy&lt;/code&gt; may be used to obtain a listing of service accounts and users in a project.(Citation: Google Cloud - IAM Servie Accounts List API)&lt;br&gt;&lt;br&gt;Monitor processes, command-line arguments, and logs for actions that could be taken to gather information about cloud accounts, including the use of calls to cloud APIs that perform account discovery.&lt;br&gt;&lt;br&gt;System and network discovery techniques normally occur throughout an operation as an adversary learns the environment, and also to an extent in normal network operations. Therefore discovery data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references>
                <reference name="AWS List Roles" url="https://docs.aws.amazon.com/cli/latest/reference/iam/list-roles.html"/>
                <reference name="AWS List Users" url="https://docs.aws.amazon.com/cli/latest/reference/iam/list-users.html"/>
                <reference name="Black Hills Red Teaming MS AD Azure, 2018" url="https://www.blackhillsinfosec.com/red-teaming-microsoft-part-1-active-directory-leaks-via-azure/"/>
                <reference name="GitHub Raindance" url="https://github.com/True-Demon/raindance"/>
                <reference name="Google Cloud - IAM Servie Accounts List API" url="https://cloud.google.com/sdk/gcloud/reference/iam/service-accounts/list"/>
                <reference name="Microsoft AZ CLI" url="https://docs.microsoft.com/en-us/cli/azure/ad/user?view=azure-cli-latest"/>
                <reference name="Microsoft msolrolemember" url="https://docs.microsoft.com/en-us/powershell/module/msonline/get-msolrolemember?view=azureadps-1.0"/>
                <reference name="Mitre ATT&amp;CK Technique T1087.004" url="https://attack.mitre.org/techniques/T1087/004"/>
              </references>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-DS0002" mitigation="20"/>
                <countermeasure ref="C-DS0009" mitigation="16"/>
                <countermeasure ref="C-DS0017" mitigation="16"/>
                <countermeasure ref="C-DS0022" mitigation="16"/>
                <countermeasure ref="C-M1018" mitigation="16"/>
                <countermeasure ref="C-M1047" mitigation="16"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="T-T1087.003" name="Email Account" state="Expose" source="MANUAL" edited="false" owner="JamesRabe" library="" editable="true">
              <desc>Adversaries may attempt to get a listing of email addresses and accounts. Adversaries may try to dump Exchange address lists such as global address lists (GALs).(Citation: Microsoft Exchange Address Lists)&lt;br&gt;&lt;br&gt;In on-premises Exchange and Exchange Online, the&lt;code&gt;Get-GlobalAddressList&lt;/code&gt; PowerShell cmdlet can be used to obtain email addresses and accounts from a domain using an authenticated session.(Citation: Microsoft getglobaladdresslist)(Citation: Black Hills Attacking Exchange MailSniper, 2016)&lt;br&gt;&lt;br&gt;In Google Workspace, the GAL is shared with Microsoft Outlook users through the Google Workspace Sync for Microsoft Outlook (GWSMO) service. Additionally, the Google Workspace Directory allows for users to get a listing of other users within the organization.(Citation: Google Workspace Global Access List)&lt;br&gt;&lt;br&gt;System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.&lt;br&gt;&lt;br&gt;Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references>
                <reference name="Black Hills Attacking Exchange MailSniper, 2016" url="https://www.blackhillsinfosec.com/attacking-exchange-with-mailsniper/"/>
                <reference name="Google Workspace Global Access List" url="https://support.google.com/a/answer/166870?hl=en"/>
                <reference name="Microsoft Exchange Address Lists" url="https://docs.microsoft.com/en-us/exchange/email-addresses-and-address-books/address-lists/address-lists?view=exchserver-2019"/>
                <reference name="Microsoft getglobaladdresslist" url="https://docs.microsoft.com/en-us/powershell/module/exchange/email-addresses-and-address-books/get-globaladdresslist"/>
                <reference name="Mitre ATT&amp;CK Technique T1087.003" url="https://attack.mitre.org/techniques/T1087/003"/>
              </references>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-DS0002" mitigation="25"/>
                <countermeasure ref="C-DS0009" mitigation="25"/>
                <countermeasure ref="C-DS0017" mitigation="25"/>
                <countermeasure ref="C-DS0022" mitigation="25"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="cloud-service-dashboard" name="Cloud Service Dashboard" desc="" library="">
          <threats>
            <threat ref="T-T1538" name="Cloud Service Dashboard" state="Expose" source="MANUAL" edited="false" owner="JamesRabe" library="" editable="true">
              <desc>An adversary may use a cloud service dashboard GUI with stolen credentials to gain useful information from an operational cloud environment, such as specific services, resources, and features. For example, the GCP Command Center can be used to view all assets, findings of potential security risks, and to run additional queries, such as finding public IP addresses and open ports.(Citation: Google Command Center Dashboard)&lt;br&gt;&lt;br&gt;Depending on the configuration of the environment, an adversary may be able to enumerate more information via the graphical dashboard than an API. This allows the adversary to gain information without making any API requests.&lt;br&gt;&lt;br&gt;Monitor account activity logs to see actions performed and activity associated with the cloud service management console. Some cloud providers, such as AWS, provide distinct log events for login attempts to the management console.(Citation: AWS Console Sign-in Events)</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references>
                <reference name="AWS Console Sign-in Events" url="https://docs.aws.amazon.com/awscloudtrail/latest/userguide/cloudtrail-event-reference-aws-console-sign-in-events.html"/>
                <reference name="Google Command Center Dashboard" url="https://cloud.google.com/security-command-center/docs/quickstart-scc-dashboard"/>
                <reference name="Mitre ATT&amp;CK Technique T1538" url="https://attack.mitre.org/techniques/T1538"/>
              </references>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-DS0002" mitigation="34"/>
                <countermeasure ref="C-DS0028" mitigation="33"/>
                <countermeasure ref="C-M1018" mitigation="33"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="cloud-service-discovery" name="Cloud Service Discovery" desc="" library="">
          <threats>
            <threat ref="T-T1526" name="Cloud Service Discovery" state="Expose" source="MANUAL" edited="false" owner="JamesRabe" library="" editable="true">
              <desc>An adversary may attempt to enumerate the cloud services running on a system after gaining access. These methods can differ from platform-as-a-service (PaaS), to infrastructure-as-a-service (IaaS), or software-as-a-service (SaaS). Many services exist throughout the various cloud providers and can include Continuous Integration and Continuous Delivery (CI/CD), Lambda Functions, Azure AD, etc. &lt;br&gt;&lt;br&gt;Adversaries may attempt to discover information about the services enabled throughout the environment. Azure tools and APIs, such as the Azure AD Graph API and Azure Resource Manager API, can enumerate resources and services, including applications, management groups, resources and policy definitions, and their relationships that are accessible by an identity.(Citation: Azure - Resource Manager API)(Citation: Azure AD Graph API)&lt;br&gt;&lt;br&gt;Stormspotter is an open source tool for enumerating and constructing a graph for Azure resources and services, and Pacu is an open source AWS exploitation framework that supports several methods for discovering cloud services.(Citation: Azure - Stormspotter)(Citation: GitHub Pacu)&lt;br&gt;&lt;br&gt;Cloud service discovery techniques will likely occur throughout an operation where an adversary is targeting cloud-based systems and services. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.&lt;br&gt;&lt;br&gt;Normal, benign system and network events that look like cloud service discovery may be uncommon, depending on the environment and how they are used. Monitor cloud service usage for anomalous behavior that may indicate adversarial presence within the environment.</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references>
                <reference name="Azure - Resource Manager API" url="https://docs.microsoft.com/en-us/rest/api/resources/"/>
                <reference name="Azure - Stormspotter" url="https://github.com/Azure/Stormspotter"/>
                <reference name="Azure AD Graph API" url="https://docs.microsoft.com/en-us/previous-versions/azure/ad/graph/howto/azure-ad-graph-api-operations-overview"/>
                <reference name="GitHub Pacu" url="https://github.com/RhinoSecurityLabs/pacu"/>
                <reference name="Mitre ATT&amp;CK Technique T1526" url="https://attack.mitre.org/techniques/T1526"/>
              </references>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-DS0025" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="permission-groups-discovery" name="Permission Groups Discovery" desc="" library="">
          <threats>
            <threat ref="T-T1069.003" name="Cloud Groups" state="Expose" source="MANUAL" edited="false" owner="JamesRabe" library="" editable="true">
              <desc>Adversaries may attempt to find cloud groups and permission settings. The knowledge of cloud permission groups can help adversaries determine the particular roles of users and groups within an environment, as well as which users are associated with a particular group.&lt;br&gt;&lt;br&gt;With authenticated access there are several tools that can be used to find permissions groups. The &lt;code&gt;Get-MsolRole&lt;/code&gt; PowerShell cmdlet can be used to obtain roles and permissions groups for Exchange and Office 365 accounts (Citation: Microsoft Msolrole)(Citation: GitHub Raindance).&lt;br&gt;&lt;br&gt;Azure CLI (AZ CLI) and the Google Cloud Identity Provider API also provide interfaces to obtain permissions groups. The command &lt;code&gt;az ad user get-member-groups&lt;/code&gt; will list groups associated to a user account for Azure while the API endpoint &lt;code&gt;GET https://cloudidentity.googleapis.com/v1/groups&lt;/code&gt; lists group resources available to a user for Google.(Citation: Microsoft AZ CLI)(Citation: Black Hills Red Teaming MS AD Azure, 2018)(Citation: Google Cloud Identity API Documentation)&lt;br&gt;&lt;br&gt;Adversaries may attempt to list ACLs for objects to determine the owner and other accounts with access to the object, for example, via the AWS &lt;code&gt;GetBucketAcl&lt;/code&gt; API (Citation: AWS Get Bucket ACL). Using this information an adversary can target accounts with permissions to a given object or leverage accounts they have already compromised to access the object.&lt;br&gt;&lt;br&gt;System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.&lt;br&gt;&lt;br&gt;Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Activity and account logs for the cloud services can also be monitored for suspicious commands that are anomalous compared to a baseline of normal activity.</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references>
                <reference name="AWS Get Bucket ACL" url="https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketAcl.html"/>
                <reference name="Black Hills Red Teaming MS AD Azure, 2018" url="https://www.blackhillsinfosec.com/red-teaming-microsoft-part-1-active-directory-leaks-via-azure/"/>
                <reference name="GitHub Raindance" url="https://github.com/True-Demon/raindance"/>
                <reference name="Google Cloud Identity API Documentation" url="https://cloud.google.com/identity/docs/reference/rest"/>
                <reference name="Microsoft AZ CLI" url="https://docs.microsoft.com/en-us/cli/azure/ad/user?view=azure-cli-latest"/>
                <reference name="Microsoft Msolrole" url="https://docs.microsoft.com/en-us/powershell/module/msonline/get-msolrole?view=azureadps-1.0"/>
                <reference name="Mitre ATT&amp;CK Technique T1069.003" url="https://attack.mitre.org/techniques/T1069/003"/>
              </references>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-DS0009" mitigation="20"/>
                <countermeasure ref="C-DS0014" mitigation="20"/>
                <countermeasure ref="C-DS0015" mitigation="20"/>
                <countermeasure ref="C-DS0017" mitigation="20"/>
                <countermeasure ref="C-DS0036" mitigation="20"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="software-discovery" name="Software Discovery" desc="" library="">
          <threats>
            <threat ref="T-T1518.001" name="Security Software Discovery" state="Expose" source="MANUAL" edited="false" owner="JamesRabe" library="" editable="true">
              <desc>Adversaries may attempt to get a listing of security software, configurations, defensive tools, and sensors that are installed on a system or in a cloud environment. This may include things such as firewall rules and anti-virus. Adversaries may use the information from [Security Software Discovery](https://attack.mitre.org/techniques/T1518/001) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.&lt;br&gt;&lt;br&gt;Example commands that can be used to obtain security software information are [netsh](https://attack.mitre.org/software/S0108), &lt;code&gt;reg query&lt;/code&gt; with [Reg](https://attack.mitre.org/software/S0075), &lt;code&gt;dir&lt;/code&gt; with [cmd](https://attack.mitre.org/software/S0106), and [Tasklist](https://attack.mitre.org/software/S0057), but other indicators of discovery behavior may be more specific to the type of software or security system the adversary is looking for. It is becoming more common to see macOS malware perform checks for LittleSnitch and KnockKnock software.&lt;br&gt;&lt;br&gt;Adversaries may also utilize cloud APIs to discover the configurations of firewall rules within an environment.(Citation: Expel IO Evil in AWS) For example, the permitted IP ranges, ports or user accounts for the inbound/outbound rules of security groups, virtual firewalls established within AWS for EC2 and/or VPC instances, can be revealed by the &lt;code&gt;DescribeSecurityGroups&lt;/code&gt; action with various request parameters. (Citation: DescribeSecurityGroups - Amazon Elastic Compute Cloud)&lt;br&gt;&lt;br&gt;System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained.&lt;br&gt;&lt;br&gt;Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).&lt;br&gt;&lt;br&gt;In cloud environments, additionally monitor logs for the usage of APIs that may be used to gather information about security software configurations within the environment.</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references>
                <reference name="CAPEC-581" url="https://capec.mitre.org/data/definitions/581.html"/>
                <reference name="DescribeSecurityGroups - Amazon Elastic Compute Cloud" url="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSecurityGroups.html"/>
                <reference name="Expel IO Evil in AWS" url="https://expel.io/blog/finding-evil-in-aws/"/>
                <reference name="Mitre ATT&amp;CK Technique T1518.001" url="https://attack.mitre.org/techniques/T1518/001"/>
              </references>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-DS0009" mitigation="34"/>
                <countermeasure ref="C-DS0017" mitigation="33"/>
                <countermeasure ref="C-DS0018" mitigation="33"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="7b62a9de-ca2f-431a-b356-7eca1023d16e" diagramComponentId="3edac36f-26f3-4590-be77-c027f93ff54d" ref="fbc0299d-6342-47c9-86eb-71d572132cd6" name="On Premise" desc="" library="" parentComponentRef="" componentDefinitionRef="empty-component">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="private-secured"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses/>
      <countermeasures/>
      <usecases/>
    </component>
    <component uuid="f31d92af-0aa2-4a6e-86e8-9e4235774233" diagramComponentId="9ce77dc8-f242-4fd9-8750-fff87ba0c6c9" ref="e29bec3b-6337-4dbe-86f3-9eaa11f767e1" name="Execution" desc="" library="" parentComponentRef="f0d54cbd-bb4b-4375-9178-980f6a239855" componentDefinitionRef="execution">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses/>
      <countermeasures/>
      <usecases/>
    </component>
    <component uuid="9a935918-9967-4ba7-a2cd-1df718a53692" diagramComponentId="006bb9f4-28e6-44ae-afd9-524ce7310a4c" ref="ad94771b-97d1-4532-a7af-432759195333" name="Privilege Escalation" desc="" library="" parentComponentRef="62a5a79a-5e2c-4f4b-bf4a-d48751103201" componentDefinitionRef="privilege-escalation">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses/>
      <countermeasures>
        <countermeasure ref="C-DS0028" name="Logon Session" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>Logon occurring on a system or resource (local, domain, or cloud) to which a user/device is gaining access after successful authentication and authorizaton(Citation: Microsoft Audit Logon Events)&lt;br /&gt;&lt;p&gt;Detailed detections per technique:&lt;/p&gt;&lt;br /&gt;['T1114']: Monitor for unusual login activity from unknown or abnormal locations, especially for privileged accounts (ex: Exchange administrator account). &lt;br /&gt;['T1213']: Monitor for newly constructed logon behavior within Microsoft's SharePoint can be configured to report access to certain pages and documents. (Citation: Microsoft SharePoint Logging) Sharepoint audit logging can also be configured to report when a user shares a resource. (Citation: Sharepoint Sharing Events)The user access logging within Atlassian's Confluence can also be configured to report access to certain pages and documents through AccessLogFilter. (Citation: Atlassian Confluence Logging) Additional log storage and analysis infrastructure will likely be required for more robust detection capabilities.&lt;br /&gt;['T1021.004']: Monitor for user accounts logged into systems that may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to log into remote machines using Secure Shell (SSH). For example, on Linux systems SSH logon activity can be found in the logs located in &lt;code&gt;/var/log/auth.log&lt;/code&gt; or &lt;code&gt;/var/log/secure&lt;/code&gt; depending on the distro you are using.&lt;br /&gt;['T1606.002']: Monitor for logins using SAML tokens which do not have corresponding 4769 and 1200 events in the domain.(Citation: Sygnia Golden SAML) These logins may occur on any on-premises resources as well as from any cloud environment that trusts the certificate.(Citation: Microsoft SolarWinds Customer Guidance)&lt;br /&gt;['T1606.001']: Monitor for anomalous authentication activity, such as logons or other user session activity associated with unknown accounts. Monitor for unexpected and abnormal access to resources, including access of websites and cloud-based applications by the same user in different locations or by different systems that do not match expected configurations.&lt;br /&gt;['T1078.002']: Monitor for suspicious account behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. &lt;br /&gt;['T1556']: Monitor for newly constructed logon behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times (ex: when the user is not present) or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access). Configure robust, consistent account activity audit policies across the enterprise and with externally accessible services.(Citation: TechNet Audit Policy) &lt;br /&gt;['T1550']: Look for suspicious account behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account.&lt;br /&gt;['T1199']: Monitor for newly constructed logon behavior that may breach or otherwise leverage organizations who have access to intended victims.&lt;br /&gt;['T1538']: Monitor for newly constructed logon behavior across cloud service management consoles.&lt;br /&gt;['T1563.002']: Use of RDP may be legitimate, depending on the network environment and how it is used. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior with RDP.&lt;br /&gt;['T1550.002']: Monitor newly created logons and credentials used in events and review for discrepancies. Unusual remote logins that correlate with other suspicious activity (such as writing and executing binaries) may indicate malicious activity.&lt;br /&gt;['T1078']: Monitor for newly constructed logon behavior that may obtain and abuse credentials of existing accounts as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access).&lt;br /&gt;['T1021.001']: Monitor for user accounts logged into systems associated with RDP (ex: Windows EID 4624 Logon Type 10). Other factors, such as access patterns (ex: multiple systems over a relatively short period of time) and activity that occurs after a remote login, may indicate suspicious or malicious behavior with RDP.&lt;br /&gt;['T1213.002']: Monitor for newly constructed logon behavior across Microsoft's SharePoint which can be configured to report access to certain pages and documents. (Citation: Microsoft SharePoint Logging) As information repositories generally have a considerably large user base, detection of malicious use can be non-trivial.&lt;br /&gt;['T1021.002']: Monitor for logon behavior (ex: EID 4624 Logon Type 3) using [Valid Accounts](https://attack.mitre.org/techniques/T1078) to interact with a remote network share using Server Message Block (SMB). The adversary may then perform actions as the logged-on user. Ensure that proper logging of accounts used to log into systems is turned on and centrally collected. Windows logging is able to collect success/failure for accounts that may be used to move laterally and can be collected using tools such as Windows Event Forwarding. (Citation: Lateral Movement Payne)(Citation: Windows Event Forwarding Payne)&lt;br /&gt;['T1556.001']: Monitor for newly constructed logon behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times (ex: when the user is not present) or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access). Configure robust, consistent account activity audit policies across the enterprise and with externally accessible services.(Citation: TechNet Audit Policy)&lt;br /&gt;['T1078.001']: Monitor for newly constructed logon behavior across default accounts that have been activated or logged into. These audits should also include checks on any appliances and applications for default credentials or SSH keys, and if any are discovered, they should be updated immediately.&lt;br /&gt;['T1021.006']: Monitor for user accounts logging into the system via [Valid Accounts](https://attack.mitre.org/techniques/T1078) to interact with remote systems using Windows Remote Management (WinRM). The adversary may then perform actions as the logged-on user. &lt;br /&gt;['T1563']: Monitor for user accounts logged into systems they would not normally access or access patterns to multiple systems over a relatively short period of time.&lt;br /&gt;['T1213.001']: Monitor for newly constructed logon behavior across Atlassian's Confluence which can be configured to report access to certain pages and documents through AccessLogFilter. (Citation: Atlassian Confluence Logging) Additional log storage and analysis infrastructure will likely be required for more robust detection capabilities.&lt;br /&gt;['T1021.005']: Monitor for user accounts logged into systems that may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to remotely control machines using Virtual Network Computing (VNC). For example, on macOS systems &lt;code&gt;log show --predicate 'process = "screensharingd" and eventMessage contains "Authentication:"'&lt;/code&gt; can be used to review incoming VNC connection attempts for suspicious activity.(Citation: Apple Unified Log Analysis Remote Login and Screen Sharing) &lt;br /&gt;['T1563.001']: Monitor for user accounts logged into systems they would not normally access or access patterns to multiple systems over a relatively short period of time. Also monitor user SSH-agent socket files being used by different users.&lt;br /&gt;['T1550.003']: Monitor for newly constructed logon behavior that may "pass the ticket" using stolen Kerberos tickets to move laterally within an environment, bypassing normal system access controls.&lt;br /&gt;['T1114.002']: Monitor for unusual login activity from unknown or abnormal locations, especially for privileged accounts (ex: Exchange administrator account).&lt;br /&gt;['T1213.003']: Monitor for newly constructed logon behavior across code repositories (e.g. Github) which can be configured to report access to certain pages and documents.&lt;br /&gt;['T1078.004']: Monitor for suspicious account behavior across cloud services that share account. &lt;br /&gt;['T1606']: Monitor for anomalous authentication activity, such as logons or other user session activity associated with unknown accounts and/or using SAML tokens which do not have corresponding 4769 and 1200 events in the domain.(Citation: Sygnia Golden SAML). Monitor for unexpected and abnormal access to resources, including access of websites and cloud-based applications by the same user in different locations or by different systems that do not match expected configurations. These logins may occur on any on-premises resources as well as from any cloud environment that trusts the credentials.(Citation: Microsoft SolarWinds Customer Guidance)&lt;br /&gt;['T1185']: Authentication logs can be used to audit logins to specific web applications, but determining malicious logins versus benign logins may be difficult if activity matches typical user behavior.&lt;br /&gt;['T1021']: Monitor for user accounts logged into systems they would not normally access or abnormal access patterns, such as multiple systems over a relatively short period of time. Correlate use of login activity related to remote services with unusual behavior or other malicious or suspicious activity. Adversaries will likely need to learn about an environment and the relationships between systems through Discovery techniques prior to attempting Lateral Movement. For example, in macOS you can review logs for "screensharingd" and "Authentication" event messages. (Citation: Lockboxx ARD 2019)(Citation: Apple Unified Log Analysis Remote Login and Screen Sharing)&lt;br /&gt;['T1556.003']: Monitor for newly constructed logon behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times (ex: when the user is not present) or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access).&lt;br /&gt;['T1621']: Monitor 2FA/MFA application logs for suspicious events such as rapid login attempts with valid credentials.&lt;br /&gt;['T1078.003']: Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access).&lt;br /&gt;['T1621']: Monitor 2FA/MFA application logs for suspicious events such as unusual login attempt source location, mismatch in location of login attempt and smart device approving 2FA/MFA request prompts.&lt;br /&gt;['T1558.001']: Monitor for anomalous Kerberos activity, such as malformed or blank fields in Windows logon/logoff events (Event ID 4624, 4634, 4672). Correlate other security systems with login information (e.g., a user has the KRBTGT account password hash and forges Kerberos ticket-granting tickets). &lt;br /&gt;['T1558']: Enable Audit Kerberos Service Ticket Operations to log Kerberos TGS service ticket requests. Particularly investigate irregular patterns of activity (ex: accounts making numerous requests, Event ID 4769, within a small time frame, especially if they also request RC4 encryption [Type 0x17]).(Citation: Microsoft Detecting Kerberoasting Feb 2018) (Citation: AdSecurity Cracking Kerberos Dec 2015)&lt;br /&gt;['T1606.002']: Consider modifying SAML responses to include custom elements for each service provider. Monitor these custom elements in service provider access logs to detect any anomalous requests.(Citation: Sygnia Golden SAML)&lt;br /&gt;['T1558.002']: Monitor for anomalous Kerberos activity, such as malformed or blank fields in Windows logon/logoff events (Event ID 4624, 4634, 4672).&lt;br /&gt;['T1133']: Follow best practices for detecting adversary use of Valid Accounts for authenticating to remote services. Collect authentication logs and analyze for unusual access patterns, windows of activity, and access outside of normal business hours.&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Microsoft Audit Logon Events" url="https://docs.microsoft.com/en-us/windows/security/threat-protection/auditing/basic-audit-logon-events"/>
            <reference name="Mitre ATT&amp;CK Data Source DS0028" url="https://attack.mitre.org/datasources/DS0028"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:01.363">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-M1032" name="Multi-factor Authentication" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>Use two or more pieces of evidence to authenticate to a system; such as username and password in addition to a token from a physical smart card or token generator.&lt;br /&gt;&lt;p&gt;Detailed mitigations per technique:&lt;/p&gt;&lt;br /&gt;['T1098.001']: Use multi-factor authentication for user and privileged accounts. Consider enforcing multi-factor authentication for the &lt;code&gt;CreateKeyPair&lt;/code&gt; and &lt;code&gt;ImportKeyPair&lt;/code&gt; API calls through IAM policies.(Citation: Expel IO Evil in AWS)&lt;br /&gt;['T1040']: Use multi-factor authentication wherever possible.&lt;br /&gt;['T1136.001', 'T1136.002', 'T1136.003', 'T1098', 'T1098.003', 'T1136', 'T1098.002']: Use multi-factor authentication for user and privileged accounts.&lt;br /&gt;['T1556.003']: Integrating multi-factor authentication (MFA) as part of organizational policy can greatly reduce the risk of an adversary gaining control of valid credentials that may be used for additional tactics such as initial access, lateral movement, and collecting information.&lt;br /&gt;['T1556', 'T1556.001']: Integrating multi-factor authentication (MFA) as part of organizational policy can greatly reduce the risk of an adversary gaining control of valid credentials that may be used for additional tactics such as initial access, lateral movement, and collecting information. MFA can also be used to restrict access to cloud resources and APIs. &lt;br /&gt;['T1599', 'T1601', 'T1601.002', 'T1601.001']: Use multi-factor authentication for user and privileged accounts. Most embedded network devices support TACACS+ and/or RADIUS.  Follow vendor prescribed best practices for hardening access control.(Citation: Cisco IOS Software Integrity Assurance - TACACS)&lt;br /&gt;['T1114', 'T1114.002']: Use of multi-factor authentication for public-facing webmail servers is a recommended best practice to minimize the usefulness of usernames and passwords to adversaries.&lt;br /&gt;['T1621']: Implement more secure 2FA/MFA mechanisms in replacement of simple push or one-click 2FA/MFA options. For example, having users enter a one-time code provided by the login screen into the 2FA/MFA application or utilizing other out-of-band 2FA/MFA mechanisms (such as rotating code-based hardware tokens providing rotating codes that need an accompanying user pin) may be more secure. Furthermore, change default configurations and implement limits upon the maximum number of 2FA/MFA request prompts that can be sent to users in period of time.(Citation: MFA Fatigue Attacks - PortSwigger)&lt;br /&gt;['T1076']: Use multi-factor authentication for remote logins. (Citation: Berkley Secure)&lt;br /&gt;['T1078.002', 'T1078']: Integrating multi-factor authentication (MFA) as part of organizational policy can greatly reduce the risk of an adversary gaining control of valid credentials that may be used for additional tactics such as initial access, lateral movement, and collecting information. MFA can also be used to restrict access to cloud resources and APIs.&lt;br /&gt;['T1098.005']: Require multi-factor authentication to register devices in Azure AD.(Citation: Microsoft - Device Registration) Configure multi-factor authentication systems to disallow enrolling new devices for inactive accounts.(Citation: CISA MFA PrintNightmare)&lt;br /&gt;['T1110.003', 'T1110.001', 'T1110', 'T1110.004', 'T1110.002']: Use multi-factor authentication. Where possible, also enable multi-factor authentication on externally facing services.&lt;br /&gt;['T1078.004']: Use multi-factor authentication for cloud accounts, especially privileged accounts. This can be implemented in a variety of forms (e.g. hardware, virtual, SMS), and can also be audited using administrative reporting features.(Citation: AWS - IAM Console Best Practices)&lt;br /&gt;['T1021.004']: Require multi-factor authentication for SSH connections wherever possible, such as password protected SSH keys.&lt;br /&gt;['T1539']: A physical second factor key that uses the target login domain as part of the negotiation protocol will prevent session cookie theft through proxy methods.(Citation: Evilginx 2 July 2018)&lt;br /&gt;['T1599.001', 'T1556.004']: Use multi-factor authentication for user and privileged accounts. Most embedded network devices support TACACS+ and/or RADIUS.  Follow vendor prescribed best practices for hardening access control. (Citation: Cisco IOS Software Integrity Assurance - TACACS)&lt;br /&gt;['T1021.001']: Use multi-factor authentication for remote logins.(Citation: Berkley Secure)&lt;br /&gt;['T1017']: Use multi-factor authentication for accounts used with application deployment software.&lt;br /&gt;['T1072']: Ensure proper system and access isolation for critical network systems through use of multi-factor authentication.&lt;br /&gt;['T1021', 'T1021']: Use multi-factor authentication on remote service logons where possible.&lt;br /&gt;['T1133']: Use strong two-factor or multi-factor authentication for remote service accounts to mitigate an adversary's ability to leverage stolen credentials, but be aware of [Multi-Factor Authentication Interception](https://attack.mitre.org/techniques/T1111) techniques for some two-factor authentication implementations.&lt;br /&gt;['T1530']: Consider using multi-factor authentication to restrict access to resources and cloud storage APIs.(Citation: Amazon S3 Security, 2019)&lt;br /&gt;['T1213.003']: Use multi-factor authentication for logons to code repositories.&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Mitre ATT&amp;CK Mitigation M1032" url="https://attack.mitre.org/mitigations/M1032"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:01.506">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-M1027" name="Password Policies" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>Set and enforce secure password policies for accounts.&lt;br /&gt;&lt;p&gt;Detailed mitigations per technique:&lt;/p&gt;&lt;br /&gt;['T1599.001', 'T1599', 'T1110.004', 'T1110.002', 'T1601', 'T1110.001', 'T1110.003']: Refer to NIST guidelines when creating password policies. (Citation: NIST 800-63-3)&lt;br /&gt;['T1078.004']: Ensure that cloud accounts, particularly privileged accounts, have complex, unique passwords across all systems on the network. Passwords and access keys should be rotated regularly. This limits the amount of time credentials can be used to access resources if a credential is compromised without your knowledge. Cloud service providers may track access key age to help audit and identify keys that may need to be rotated.(Citation: AWS - IAM Console Best Practices)&lt;br /&gt;['T1075']: Ensure that built-in and created local administrator accounts have complex, unique passwords.&lt;br /&gt;['T1556.005', 'T1556']: Ensure that &lt;code&gt;AllowReversiblePasswordEncryption&lt;/code&gt; property is set to disabled unless there are application requirements.(Citation: store_pwd_rev_enc)&lt;br /&gt;['T1552.002', 'T1214']: Do not store credentials within the Registry.&lt;br /&gt;['T1550.003', 'T1097']: Ensure that local administrator accounts have complex, unique passwords.&lt;br /&gt;['T1537']: Consider rotating access keys within a certain number of days to reduce the effectiveness of stolen credentials.&lt;br /&gt;['T1552.004', 'T1145']: Use strong passphrases for private keys to make cracking difficult.&lt;br /&gt;['T1558.002', 'T1558.003', 'T1558']: Ensure strong password length (ideally 25+ characters) and complexity for service accounts and that these passwords periodically expire.(Citation: AdSecurity Cracking Kerberos Dec 2015) Also consider using Group Managed Service Accounts or another third party product such as password vaulting.(Citation: AdSecurity Cracking Kerberos Dec 2015)&lt;br /&gt;['T1003.003', 'T1003.006', 'T1003.002', 'T1003.004', 'T1003', 'T1003.005', 'T1078.003', 'T1003.001']: Ensure that local administrator accounts have complex, unique passwords across all systems on the network.&lt;br /&gt;['T1078']: Applications and appliances that utilize default username and password should be changed immediately after the installation, and before deployment to a production environment. (Citation: US-CERT Alert TA13-175A Risks of Default Passwords on the Internet) When possible, applications that use SSH keys should be updated periodically and properly secured.&lt;br /&gt;['T1552']: Use strong passphrases for private keys to make cracking difficult. Do not store credentials within the Registry. Establish an organizational policy that prohibits password storage in files.&lt;br /&gt;['T1503', 'T1555.003']: Organizations may consider weighing the risk of storing credentials in web browsers. If web browser credential disclosure is a significant concern, technical controls, policy, and user training may be used to prevent storage of credentials in web browsers.&lt;br /&gt;['T1187']: Use strong passwords to increase the difficulty of credential hashes from being cracked if they are obtained.&lt;br /&gt;['T1558.004']: Ensure strong password length (ideally 25+ characters) and complexity for service accounts and that these passwords periodically expire. Also consider using Group Managed Service Accounts or another third party product such as password vaulting. (Citation: AdSecurity Cracking Kerberos Dec 2015)&lt;br /&gt;['T1072']: Verify that account credentials that may be used to access deployment systems are unique and not used throughout the enterprise network.&lt;br /&gt;['T1003.007', 'T1003.008']: Ensure that root accounts have complex, unique passwords across all systems on the network.&lt;br /&gt;['T1078.001']: Applications and appliances that utilize default username and password should be changed immediately after the installation, and before deployment to a production environment. (Citation: US-CERT Alert TA13-175A Risks of Default Passwords on the Internet)&lt;br /&gt;['T1555.001', 'T1142']: The password for the user's login keychain can be changed from the user's login password. This increases the complexity for an adversary because they need to know an additional password.&lt;br /&gt;['T1081', 'T1552.001']: Establish an organizational policy that prohibits password storage in files.&lt;br /&gt;['T1077', 'T1021.002']: Do not reuse local administrator account passwords across systems. Ensure password complexity and uniqueness such that the passwords cannot be cracked or guessed.&lt;br /&gt;['T1563.001', 'T1184']: Ensure SSH key pairs have strong passwords and refrain from using key-store technologies such as ssh-agent unless they are properly protected.&lt;br /&gt;['T1555']: The password for the user's login keychain can be changed from the user's login password. This increases the complexity for an adversary because they need to know an additional password.

Organizations may consider weighing the risk of storing credentials in password stores and web browsers. If system, software, or web browser credential disclosure is a significant concern, technical controls, policy, and user training may be used to prevent storage of credentials in improper locations.&lt;br /&gt;['T1110']: Refer to NIST guidelines when creating password policies.(Citation: NIST 800-63-3)&lt;br /&gt;['T1601.002', 'T1601.001']: Refer to NIST guidelines when creating password policies.  (Citation: NIST 800-63-3)&lt;br /&gt;['T1201']: Ensure only valid password filters are registered. Filter DLLs must be present in Windows installation directory (&lt;code&gt;C:\Windows\System32\&lt;/code&gt; by default) of a domain controller and/or local computer with a corresponding entry in &lt;code&gt;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Lsa\Notification Packages&lt;/code&gt;. (Citation: Microsoft Install Password Filter n.d)&lt;br /&gt;['T1208']: Ensure strong password length (ideally 25+ characters) and complexity for service accounts and that these passwords periodically expire. (Citation: AdSecurity Cracking Kerberos Dec 2015) Also consider using Group Managed Service Accounts or another third party product such as password vaulting. (Citation: AdSecurity Cracking Kerberos Dec 2015)&lt;br /&gt;['T1555.005']: Refer to NIST guidelines when creating password policies for master passwords.(Citation: NIST 800-63-3)&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Mitre ATT&amp;CK Mitigation M1027" url="https://attack.mitre.org/mitigations/M1027"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:01.477">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-M1026" name="Privileged Account Management" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>Manage the creation, modification, use, and permissions associated to privileged accounts, including SYSTEM and root.&lt;br /&gt;&lt;p&gt;Detailed mitigations per technique:&lt;/p&gt;&lt;br /&gt;['T1053.005', 'T1053.002']: Configure the Increase Scheduling Priority option to only allow the Administrators group the rights to schedule a priority process. This can be configured through GPO: Computer Configuration &gt; [Policies] &gt; Windows Settings &gt; Security Settings &gt; Local Policies &gt; User Rights Assignment: Increase scheduling priority. (Citation: TechNet Scheduling Priority)&lt;br /&gt;['T1206']: Setting the &lt;code&gt;timestamp_timeout&lt;/code&gt; to 0 will require the user to input their password every time &lt;code&gt;sudo&lt;/code&gt; is executed.&lt;br /&gt;['T1550.003']: Limit domain admin account permissions to domain controllers and limited servers. Delegate other admin functions to separate accounts.(Citation: ADSecurity AD Kerberos Attacks)&lt;br /&gt;['T1505.004']: Do not allow administrator accounts that have permissions to add IIS components to be used for day-to-day operations that may expose these permissions to potential adversaries and/or other unprivileged systems.&lt;br /&gt;['T1556.005']: Audit domain and local accounts as well as their permission levels routinely to look for situations that could allow an adversary to gain wide access by obtaining credentials of a privileged account.(Citation: TechNet Credential Theft)(Citation: TechNet Least Privilege) These audits should also include if default accounts have been enabled, or if new local accounts are created that have not be authorized. Follow best practices for design and administration of an enterprise network to limit privileged account use across administrative tiers.(Citation: Microsoft Securing Privileged Access)&lt;br /&gt;['T1035', 'T1569.002', 'T1569']: Ensure that permissions disallow services that run at a higher permissions level from being created or interacted with by a user with a lower permission level.&lt;br /&gt;['T1214', 'T1552.002', 'T1552']: If it is necessary that software must store credentials in the Registry, then ensure the associated accounts have limited permissions so they cannot be abused if obtained by an adversary.&lt;br /&gt;['T1505.002', 'T1505.001']: Do not allow administrator accounts that have permissions to add component software on these services to be used for day-to-day operations that may expose them to potential adversaries on unprivileged systems. &lt;br /&gt;['T1075', 'T1550', 'T1550.002']: Limit credential overlap across systems to prevent the damage of credential compromise and reduce the adversary's ability to perform Lateral Movement between systems.&lt;br /&gt;['T1017']: Grant access to application deployment systems only to a limited number of authorized administrators.  Verify that account credentials that may be used to access deployment systems are unique and not used throughout the enterprise network.&lt;br /&gt;['T1169']: By requiring a password, even if an adversary can get terminal access, they must know the password to run anything in the sudoers file.&lt;br /&gt;['T1047', 'T1084']: Prevent credential overlap across systems of administrator and privileged accounts. (Citation: FireEye WMI 2015)&lt;br /&gt;['T1208']: Limit service accounts to minimal required privileges, including membership in privileged groups such as Domain Administrators. (Citation: AdSecurity Cracking Kerberos Dec 2015)&lt;br /&gt;['T1098.003']: Ensure that all accounts use the least privileges they require.&lt;br /&gt;['T1077', 'T1021.002']: Deny remote use of local admin credentials to log into systems. Do not allow domain user accounts to be in the local Administrators group multiple systems.&lt;br /&gt;['T1222.001', 'T1222.002', 'T1222']: Ensure critical system files as well as those known to be abused by adversaries have restrictive permissions and are owned by an appropriately privileged account, especially if access is not required by users nor will inhibit system functionality.&lt;br /&gt;['T1556.003']: Limit access to the root account and prevent users from modifying PAM components through proper privilege separation (ex SELinux, grsecurity, AppArmor, etc.) and limiting Privilege Escalation opportunities.&lt;br /&gt;['T1021.006', 'T1028']: If the service is necessary, lock down critical enclaves with separate WinRM accounts and permissions.&lt;br /&gt;['T1599', 'T1601.001', 'T1601.002', 'T1556.004', 'T1599.001', 'T1601']: Restrict administrator accounts to as few individuals as possible, following least privilege principles.  Prevent credential overlap across systems of administrator and privileged accounts, particularly between network and non-network platforms, such as servers or endpoints.&lt;br /&gt;['T1003.008']: Follow best practices in restricting access to privileged accounts to avoid hostile programs from accessing such sensitive information.&lt;br /&gt;['T1072']: Grant access to application deployment systems only to a limited number of authorized administrators.&lt;br /&gt;['T1553.006']: Limit the usage of local administrator and domain administrator accounts to be used for day-to-day operations that may expose them to potential adversaries.&lt;br /&gt;['T1484']: Use least privilege and protect administrative access to the Domain Controller and Active Directory Federation Services (AD FS) server. Do not create service accounts with administrative privileges.&lt;br /&gt;['T1076', 'T1563.002', 'T1021.001']: Consider removing the local Administrators group from the list of groups allowed to log in through RDP.&lt;br /&gt;['T1547.006', 'T1215']: Limit access to the root account and prevent users from loading kernel modules and extensions through proper privilege separation and limiting Privilege Escalation opportunities.&lt;br /&gt;['T1134.003', 'T1134.002', 'T1134', 'T1134.001']: Limit permissions so that users and user groups cannot create tokens. This setting should be defined for the local system account only. GPO: Computer Configuration &gt; [Policies] &gt; Windows Settings &gt; Security Settings &gt; Local Policies &gt; User Rights Assignment: Create a token object. (Citation: Microsoft Create Token) Also define who can create a process level token to only the local and network service through GPO: Computer Configuration &gt; [Policies] &gt; Windows Settings &gt; Security Settings &gt; Local Policies &gt; User Rights Assignment: Replace a process level token.(Citation: Microsoft Replace Process Token)

Administrators should log in as a standard user but run their tools with administrator privileges using the built-in access token manipulation command &lt;code&gt;runas&lt;/code&gt;.(Citation: Microsoft runas)&lt;br /&gt;['T1542.001', 'T1019']: Prevent adversary access to privileged accounts or access necessary to perform this technique.&lt;br /&gt;['T1078.002']: Audit domain account permission levels routinely to look for situations that could allow an adversary to gain wide access by obtaining credentials of a privileged account. Do not put user or admin domain accounts in the local administrator groups across systems unless they are tightly controlled and use of accounts is segmented, as this is often equivalent to having a local administrator account with the same password on all systems. Follow best practices for design and administration of an enterprise network to limit privileged account use across administrative tiers. Limit credential overlap across systems to prevent access if account credentials are obtained.&lt;br /&gt;['T1190']: Use least privilege for service accounts will limit what permissions the exploited process gets on the rest of the system.&lt;br /&gt;['T1078.004']: Review privileged cloud account permission levels routinely to look for those that could allow an adversary to gain wide access.(Citation: TechNet Credential Theft)(Citation: TechNet Least Privilege) These reviews should also check if new privileged cloud accounts have been created that were not authorized.&lt;br /&gt;['T1078.003']: Audit local accounts permission levels routinely to look for situations that could allow an adversary to gain wide access by obtaining credentials of a privileged account. (Citation: TechNet Credential Theft) (Citation: TechNet Least Privilege) These audits should check if new local accounts are created that have not be authorized. Implementing LAPS may help prevent reuse of local administrator credentials across a domain.(Citation: Microsoft Remote Use of Local)&lt;br /&gt;['T1558.002', 'T1558.003']: Limit service accounts to minimal required privileges, including membership in privileged groups such as Domain Administrators.(Citation: AdSecurity Cracking Kerberos Dec 2015)&lt;br /&gt;['T1612', 'T1611', 'T1053.007', 'T1609']: Ensure containers are not running as root by default. In Kubernetes environments, consider defining a Pod Security Policy that prevents pods from running privileged containers.(Citation: Kubernetes Hardening Guide)&lt;br /&gt;['T1484.002']: Use the principal of least privilege and protect administrative access to domain trusts.&lt;br /&gt;['T1098.002', 'T1098', 'T1136', 'T1136.002']: Do not allow domain administrator accounts to be used for day-to-day operations that may expose them to potential adversaries on unprivileged systems.&lt;br /&gt;['T1003.003', 'T1003.002', 'T1003.001', 'T1003.005', 'T1003.006']: Do not put user or admin domain accounts in the local administrator groups across systems unless they are tightly controlled, as this is often equivalent to having a local administrator account with the same password on all systems. Follow best practices for design and administration of an enterprise network to limit privileged account use across administrative tiers.&lt;br /&gt;['T1542.005']: Use of Authentication, Authorization, and Accounting (AAA) systems will limit actions administrators can perform and provide a history of user actions to detect unauthorized use and abuse. TACACS+ can keep control over which commands administrators are permitted to use through the configuration of authentication and command authorization. (Citation: Cisco IOS Software Integrity Assurance - AAA) (Citation: Cisco IOS Software Integrity Assurance - TACACS)&lt;br /&gt;['T1088', 'T1548.002']: Remove users from the local administrator group on systems.&lt;br /&gt;['T1606', 'T1606.002']: Restrict permissions and access to the AD FS server to only originate from privileged access workstations.(Citation: FireEye ADFS)&lt;br /&gt;['T1559.001', 'T1559']: Modify Registry settings (directly or using Dcomcnfg.exe) in `HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\AppID\\{AppID_GUID}` associated with the process-wide security of individual COM applications.(Citation: Microsoft Process Wide Com Keys)

Modify Registry settings (directly or using Dcomcnfg.exe) in `HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Ole` associated with system-wide security defaults for all COM applications that do no set their own process-wide security.(Citation: Microsoft System Wide Com Keys) (Citation: Microsoft COM ACL)&lt;br /&gt;['T1136.003']: Do not allow privileged accounts to be used for day-to-day operations that may expose them to potential adversaries on unprivileged systems.&lt;br /&gt;['T1218']: Restrict execution of particularly vulnerable binaries to privileged accounts or groups that need to use it to lessen the opportunities for malicious usage.&lt;br /&gt;['T1184', 'T1563.001']: Do not allow remote access via SSH as root or other privileged accounts.&lt;br /&gt;['T1097']: Limit domain admin account permissions to domain controllers and limited servers. Delegate other admin functions to separate accounts. (Citation: ADSecurity AD Kerberos Attacks)&lt;br /&gt;['T1055']: Utilize Yama (ex: /proc/sys/kernel/yama/ptrace_scope) to mitigate ptrace based process injection by restricting the use of ptrace to privileged users only. Other mitigation controls involve the deployment of security kernel modules that provide advanced access control and process restrictions such as SELinux, grsecurity, and AppArmor.&lt;br /&gt;['T1051']: Networks that allow for open development and testing of Web content and allow users to set up their own Web servers on the enterprise network may be particularly vulnerable if the systems and Web servers are not properly secured to limit privileged account use and unauthenticated network share access.&lt;br /&gt;['T1548']: Remove users from the local administrator group on systems.

By requiring a password, even if an adversary can get terminal access, they must know the password to run anything in the sudoers file. Setting the timestamp_timeout to 0 will require the user to input their password every time sudo is executed.&lt;br /&gt;['T1556.001', 'T1078']: Audit domain and local accounts as well as their permission levels routinely to look for situations that could allow an adversary to gain wide access by obtaining credentials of a privileged account. (Citation: TechNet Credential Theft) (Citation: TechNet Least Privilege) These audits should also include if default accounts have been enabled, or if new local accounts are created that have not be authorized. Follow best practices for design and administration of an enterprise network to limit privileged account use across administrative tiers. (Citation: Microsoft Securing Privileged Access)&lt;br /&gt;['T1552.007']: Use the principle of least privilege for privileged accounts such as the service account in Kubernetes.&lt;br /&gt;['T1098.001']: Do not allow domain administrator or root accounts to be used for day-to-day operations that may expose them to potential adversaries on unprivileged systems.&lt;br /&gt;['T1525']: Limit permissions associated with creating and modifying platform images or containers based on the principle of least privilege.&lt;br /&gt;['T1053']: Configure the Increase Scheduling Priority option to only allow the Administrators group the rights to schedule a priority process. This can be can be configured through GPO: Computer Configuration &gt; [Policies] &gt; Windows Settings &gt; Security Settings &gt; Local Policies &gt; User Rights Assignment: Increase scheduling priority. (Citation: TechNet Scheduling Priority)&lt;br /&gt;['T1100']: Audit account and group permissions to ensure that accounts used to manage servers do not overlap with accounts and permissions of users in the internal network that could be acquired through Credential Access and used to log into the Web server and plant a Web shell or pivot from the Web server into the internal network. (Citation: US-CERT Alert TA15-314A Web Shells)&lt;br /&gt;['T1542.003', 'T1067']: Ensure proper permissions are in place to help prevent adversary access to privileged accounts necessary to install a bootkit.&lt;br /&gt;['T1562.009']: Restrict administrator accounts to as few individuals as possible, following least privilege principles, that may be abused to remotely boot a machine in safe mode.(Citation: CyberArk Labs Safe Mode 2016)&lt;br /&gt;['T1175']: Modify Registry settings (directly or using Dcomcnfg.exe) in &lt;code&gt;HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\AppID\\{AppID_GUID}&lt;/code&gt; associated with the process-wide security of individual COM applications.(Citation: Microsoft Process Wide Com Keys)

Modify Registry settings (directly or using Dcomcnfg.exe) in &lt;code&gt;HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Ole&lt;/code&gt; associated with system-wide security defaults for all COM applications that do no set their own process-wide security.(Citation: Microsoft System Wide Com Keys) (Citation: Microsoft COM ACL)&lt;br /&gt;['T1210']: Minimize permissions and access for service accounts to limit impact of exploitation.&lt;br /&gt;['T1003']: Windows:
Do not put user or admin domain accounts in the local administrator groups across systems unless they are tightly controlled, as this is often equivalent to having a local administrator account with the same password on all systems. Follow best practices for design and administration of an enterprise network to limit privileged account use across administrative tiers.(Citation: Microsoft Securing Privileged Access)

Linux:
Scraping the passwords from memory requires root privileges. Follow best practices in restricting access to privileged accounts to avoid hostile programs from accessing such sensitive regions of memory.&lt;br /&gt;['T1558.001']: Limit domain admin account permissions to domain controllers and limited servers. Delegate other admin functions to separate accounts.&lt;br /&gt;['T1546.003']: Prevent credential overlap across systems of administrator and privileged accounts.(Citation: FireEye WMI 2015)&lt;br /&gt;['T1059', 'T1059.001']: When PowerShell is necessary, restrict PowerShell execution policy to administrators. Be aware that there are methods of bypassing the PowerShell execution policy, depending on environment configuration.(Citation: Netspi PowerShell Execution Policy Bypass)&lt;br /&gt;['T1056.003']: Do not allow administrator accounts that have permissions to modify the Web content of organization login portals to be used for day-to-day operations that may expose them to potential adversaries on unprivileged systems.&lt;br /&gt;['T1501', 'T1543.002']: The creation and modification of systemd service unit files is generally reserved for administrators such as the Linux root user and other users with superuser privileges. &lt;br /&gt;['T1086']: When PowerShell is necessary, restrict PowerShell execution policy to administrators. Be aware that there are methods of bypassing the PowerShell execution policy, depending on environment configuration. (Citation: Netspi PowerShell Execution Policy Bypass) &lt;br /&gt;['T1542']: Ensure proper permissions are in place to help prevent adversary access to privileged accounts necessary to perform these actions&lt;br /&gt;['T1495']: Prevent adversary access to privileged accounts or access necessary to replace system firmware.&lt;br /&gt;['T1136.001']: Limit the usage of local administrator accounts to be used for day-to-day operations that may expose them to potential adversaries.&lt;br /&gt;['T1003.004']: Follow best practices for design and administration of an enterprise network to limit privileged account use across administrative tiers.(Citation: Tilbury Windows Credentials)&lt;br /&gt;['T1055.008']: Utilize Yama (ex: /proc/sys/kernel/yama/ptrace_scope) to mitigate ptrace based process injection by restricting the use of ptrace to privileged users only. Other mitigation controls involve the deployment of security kernel modules that provide advanced access control and process restrictions such as SELinux, grsecurity, and AppArmor. &lt;br /&gt;['T1003.007']: Follow best practices in restricting access to privileged accounts to avoid hostile programs from accessing sensitive information.&lt;br /&gt;['T1556']: Audit domain and local accounts as well as their permission levels routinely to look for situations that could allow an adversary to gain wide access by obtaining credentials of a privileged account. (Citation: TechNet Credential Theft) (Citation: TechNet Least Privilege) These audits should also include if default accounts have been enabled, or if new local accounts are created that have not be authorized. Follow best practices for design and administration of an enterprise network to limit privileged account use across administrative tiers. (Citation: Microsoft Securing Privileged Access)

Limit access to the root account and prevent users from modifying protected components through proper privilege separation (ex SELinux, grsecurity, AppArmor, etc.) and limiting Privilege Escalation opportunities.&lt;br /&gt;['T1563']: Do not allow remote access to services as a privileged account unless necessary.&lt;br /&gt;['T1053.006']: Limit access to the root account and prevent users from creating and/or modifying systemd timer unit files. &lt;br /&gt;['T1021.003']: Modify Registry settings (directly or using Dcomcnfg.exe) in `HKEY_LOCAL_MACHINE\SOFTWARE\Classes\AppID\{{AppID_GUID}}` associated with the process-wide security of individual COM applications.(Citation: Microsoft Process Wide Com Keys)

Modify Registry settings (directly or using Dcomcnfg.exe) in `HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Ole` associated with system-wide security defaults for all COM applications that do not set their own process-wide security.(Citation: Microsoft System Wide Com Keys) (Citation: Microsoft COM ACL)&lt;br /&gt;['T1059.008']: Use of Authentication, Authorization, and Accounting (AAA) systems will limit actions administrators can perform and provide a history of user actions to detect unauthorized use and abuse. TACACS+ can keep control over which commands administrators are permitted to use through the configuration of authentication and command authorization(Citation: Cisco IOS Software Integrity Assurance - AAA) (Citation: Cisco IOS Software Integrity Assurance - TACACS)&lt;br /&gt;['T1218.007']: Restrict execution of Msiexec.exe to privileged accounts or groups that need to use it to lessen the opportunities for malicious usage.&lt;br /&gt;['T1505']: Do not allow administrator accounts that have permissions to add component software on these services to be used for day-to-day operations that may expose them to potential adversaries on unprivileged systems.&lt;br /&gt;['T1548.003', 'T1548.003', 'T1548.003']: By requiring a password, even if an adversary can get terminal access, they must know the password to run anything in the sudoers file. Setting the &lt;code&gt;timestamp_timeout&lt;/code&gt; to 0 will require the user to input their password every time &lt;code&gt;sudo&lt;/code&gt; is executed.&lt;br /&gt;['T1558']: Limit domain admin account permissions to domain controllers and limited servers. Delegate other admin functions to separate accounts.

Limit service accounts to minimal required privileges, including membership in privileged groups such as Domain Administrators.(Citation: AdSecurity Cracking Kerberos Dec 2015)&lt;br /&gt;['T1218']: If these binaries are required for use, then restrict execution of them to privileged accounts or groups that need to use them to lessen the opportunities for malicious use.&lt;br /&gt;['T1055']: ###Linux

Utilize Yama to mitigate ptrace based process injection by restricting the use of ptrace to privileged users only. Other mitigation controls involve the deployment of security kernel modules that provide advanced access control and process restrictions such as SELinux, grsecurity, and AppArmor.&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Mitre ATT&amp;CK Mitigation M1026" url="https://attack.mitre.org/mitigations/M1026"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:01.471">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-DS0002" name="User Account" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>A profile representing a user, device, service, or application used to authenticate and access resources&lt;br /&gt;&lt;p&gt;Detailed detections per technique:&lt;/p&gt;&lt;br /&gt;['T1110.002']:  Monitor for many failed authentication attempts across various accounts that may result from password spraying attempts. It is difficult to detect when hashes are cracked, since this is generally done outside the scope of the target network. (ex: Windows EID 4625 or 5379)&lt;br /&gt;['T1078.002']: Monitor for an attempt by a user to gain access to a network or computing resource, often by the use of domain authentication services, such as the System Security Services Daemon (sssd) on Linux&lt;br /&gt;['T1078.004']: Monitor the activity of cloud accounts to detect abnormal or malicious behavior, such as accessing information outside of the normal function of the account or account usage at atypical hours.&lt;br /&gt;['T1552.007']: It may be possible to detect adversary use of credentials they have obtained such as in [Valid Accounts](https://attack.mitre.org/techniques/T1078).&lt;br /&gt;['T1070']: Monitor for an attempt by a user to gain access to a network or computing resource, often by providing credentials that may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined malware.&lt;br /&gt;['T1550.003']: Audit all Kerberos authentication and credential use events and review for discrepancies. Unusual remote authentication events that correlate with other suspicious activity (such as writing and executing binaries) may indicate malicious activity.&lt;br /&gt;['T1621']: Monitor user account logs for suspicious events: unusual login attempt source location, mismatch in location of login attempt and smart device receiving 2FA/MFA request prompts, and high volume of repeated login attempts, all of which may indicate user's primary credentials have been compromised minus 2FA/MFA mechanism.&lt;br /&gt;['T1212']: Credential resources obtained through exploitation may be detectable in use if they are not normally used or seen.&lt;br /&gt;['T1110']:  Monitor for many failed authentication attempts across various accounts that may result from password spraying attempts. It is difficult to detect when hashes are cracked, since this is generally done outside the scope of the target network.&lt;br /&gt;['T1606.002']: Monitor for user authentication attempts, when requesting access tokens to services, that failed because of Conditional Access Policies (CAP). Some SAML tokens features, such as the location of a user, may not be as easy to claim.&lt;br /&gt;['T1207']: Investigate usage of Kerberos Service Principal Names (SPNs), especially those associated with services (beginning with "GC/") by computers not present in the DC organizational unit (OU). The SPN associated with the Directory Replication Service (DRS) Remote Protocol interface (GUID E3514235-4B06-11D1-AB04-00C04FC2DCD2) can be set without logging.(Citation: ADDSecurity DCShadow Feb 2018) A rogue DC must authenticate as a service using these two SPNs for the replication process to successfully complete.&lt;br /&gt;['T1552.005']: It may be possible to detect adversary use of credentials they have obtained such as in [Valid Accounts](https://attack.mitre.org/techniques/T1078).&lt;br /&gt;['T1078.001']: Monitor for an attempt by a user to gain access to a network or computing resource, often by providing credentials&lt;br /&gt;['T1550.002']: Monitor for user authentication attempts. From a classic Pass-The-Hash perspective, this technique uses a hash through the NTLMv1 / NTLMv2 protocol to authenticate against a compromised endpoint. This technique does not touch Kerberos. Therefore, NTLM LogonType 3 authentications that are not associated to a domain login and are not anonymous logins are suspicious. From an Over-Pass-The-Hash perspective, an adversary wants to exchange the hash for a Kerberos authentication ticket (TGT). One way to do this is by creating a sacrificial logon session with dummy credentials (LogonType 9) and then inject the hash into that session which triggers the Kerberos authentication process.&lt;br /&gt;['T1070.005']: Monitoring for Windows authentication logs are also useful in determining when authenticated network shares are established and by which account, and can be used to correlate network share activity to other events to investigate potentially malicious activity.&lt;br /&gt;['T1078']: Monitor for an attempt by a user that may obtain and abuse credentials of existing accounts as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. &lt;br /&gt;['T1070.003']: Monitor for an attempts by a user to gain access to a network or computing resource, often by providing credentials via remote terminal services, that do not have a corresponding entry in a command history file.&lt;br /&gt;['T1550']: Monitor for an attempt by a user to gain access to a network or computing resource, often by providing credentials that may use alternate authentication material, such as password hashes, Kerberos tickets, and application access tokens, in order to move laterally within an environment and bypass normal system access controls.&lt;br /&gt;['T1538']: Correlate other security systems with login information&lt;br /&gt;['T1552']: Monitor for an attempt by a user to gain access to a network or computing resource, often by providing credentials that may search compromised systems to find and obtain insecurely stored credentials.&lt;br /&gt;['T1564.002']: Monitor for newly constructed user accounts, such as userIDs under 500 on macOS, that may mask the presence of user accounts they create or modify.&lt;br /&gt;['T1136.003']: Monitor for newly constructed user accounts through the collection of usage logs from cloud user and administrator accounts to identify unusual activity in the creation of new accounts and assignment of roles to those accounts. Monitor for accounts assigned to admin roles that go over a certain threshold of known admins.&lt;br /&gt;['T1136.001']: Monitor for newly constructed user accounts through account audits to detect suspicious accounts that may have been created by an adversary. Collect data on account creation within a network or Windows Event ID 4720 (for when a user account is created on a Windows system and domain controller).&lt;br /&gt;['T1564']: Monitor for newly constructed user accounts that may attempt to hide artifacts associated with their behaviors to evade detection.&lt;br /&gt;['T1531']: Monitor for unexpected deletions of user accounts. Windows event logs may designate activity associated with an adversary's attempt to remove an account (ex: Event ID 4726 - A user account was deleted).

Alerting on these Event IDs may generate a high degree of false positives, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible.&lt;br /&gt;['T1098.001']: Monitor Azure Activity Logs for Service Principal and Application modifications. Monitor for the usage of APIs that create or import SSH keys, particularly by unexpected users or accounts such as the root account.&lt;br /&gt;['T1528']: Administrators should set up monitoring to trigger automatic alerts when policy criteria are met. For example, using a Cloud Access Security Broker (CASB), admins can create a "High severity app permissions" policy that generates alerts if apps request high severity permissions or send permissions requests for too many users.
Security analysts can hunt for malicious apps using the tools available in their CASB, identity provider, or resource provider (depending on platform.) For example, they can filter for apps that are authorized by a small number of users, apps requesting high risk permissions, permissions incongruous with the app's purpose, or apps with old "Last authorized" fields. A specific app can be investigated using an activity log displaying activities the app has performed, although some activities may be mis-logged as being performed by the user. App stores can be useful resources to further investigate suspicious apps.
Administrators can set up a variety of logs and leverage audit tools to monitor actions that can be conducted as a result of OAuth 2.0 access. For instance, audit reports enable admins to identify privilege escalation actions such as role creations or policy modifications, which could be actions performed after initial access.&lt;br /&gt;['T1531']: Monitor for changes made to user accounts for unexpected modification of properties, such as passwords or status (enabled/disabled). Windows event logs may designate activity associated with an adversary's attempt to remove access to an account:
Event ID 4723 - An attempt was made to change an account's password
Event ID 4724 - An attempt was made to reset an account's password
Event ID 4725 - A user account was disabled

Alerting on these Event IDs may generate a high degree of false positives, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible.&lt;br /&gt;['T1098.003']: Collect usage logs from cloud administrator accounts to identify unusual activity in the assignment of roles to those accounts. Monitor for accounts assigned to admin roles that go over a certain threshold of known admins.&lt;br /&gt;['T1098.005']: Monitor user accounts for new and suspicious device associations, such as those originating from unusual sources, occurring at unusual times, or following a suspicious login.(Citation: Microsoft DEV-0537) &lt;br /&gt;['T1098.002']: Monitor for unusual Exchange and Office 365 email account permissions changes that may indicate excessively broad permissions being granted to compromised accounts.&lt;br /&gt;['T1098']: Monitor events for changes to account objects and/or permissions on systems and the domain, such as event IDs 4738, 4728 and 4670. Monitor for modification of accounts in correlation with other suspicious activity. Changes may occur at unusual times or from unusual systems. Especially flag events where the subject and target accounts differ or that include additional flags such as changing a password without knowledge of the old password.

Monitor for unusual permissions changes that may indicate excessively broad permissions being granted to compromised accounts.&lt;br /&gt;['T1201']: Monitor for contextual data about an account that may attempt to access detailed information about the password policy used within an enterprise network or cloud environment.&lt;br /&gt;['T1134']: Monitor for contextual data about an account, which may include a username, user ID, environmental data, etc. that may modify access tokens to operate under a different user or system security context to perform actions and bypass access controls.&lt;br /&gt;['T1134.005']: Examine data in user's SID-History attributes&lt;br /&gt;['T1564.002']: Monitor for contextual data about an account, which may include a username, user ID, environmental data that may mask the presence of user accounts they create or modify. On macOS, identify users with an userID under 500 and the &lt;code&gt;Hide500Users&lt;/code&gt; key value in the &lt;code&gt;/Library/Preferences/com.apple.loginwindow&lt;/code&gt; plist file set to &lt;code&gt;TRUE&lt;/code&gt;.(Citation: Cybereason OSX Pirrit)&lt;br /&gt;['T1556.005']: Monitor Fine-Grained Password Policies and regularly audit user accounts and group settings.(Citation: dump_pwd_dcsync)&lt;br /&gt;['T1564']: Monitor for contextual data about an account, which may include a username, user ID, environmental data that may attempt to hide artifacts associated with their behaviors to evade detection.&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Mitre ATT&amp;CK Data Source DS0002" url="https://attack.mitre.org/datasources/DS0002"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:01.238">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-M1018" name="User Account Management" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>Manage the creation, modification, use, and permissions associated to user accounts.&lt;br /&gt;&lt;p&gt;Detailed mitigations per technique:&lt;/p&gt;&lt;br /&gt;['T1580']: Limit permissions to discover cloud infrastructure in accordance with least privilege. Organizations should limit the number of users within the organization with an IAM role that has administrative privileges, strive to reduce all permanent privileged role assignments, and conduct periodic entitlement reviews on IAM users, roles and policies.&lt;br /&gt;['T1159', 'T1543.001']: Restrict user's abilities to create Launch Agents with group policy.&lt;br /&gt;['T1543']: Limit privileges of user accounts and groups so that only authorized administrators can interact with system-level process changes and service configurations.&lt;br /&gt;['T1040']: In cloud environments, ensure that users are not granted permissions to create or modify traffic mirrors unless this is explicitly required.&lt;br /&gt;['T1578']: Limit permissions for creating, deleting, and otherwise altering compute components in accordance with least privilege. Organizations should limit the number of users within the organization with an IAM role that has administrative privileges, strive to reduce all permanent privileged role assignments, and conduct periodic entitlement reviews on IAM users, roles and policies.(Citation: Mandiant M-Trends 2020)&lt;br /&gt;['T1004', 'T1547.004']: Limit the privileges of user accounts so that only authorized administrators can perform Winlogon helper changes.&lt;br /&gt;['T1072']: Ensure that any accounts used by third-party providers to access these systems are traceable to the third-party and are not used throughout the network or used by other third-party providers in the same environment. Ensure there are regular reviews of accounts provisioned to these systems to verify continued business need, and ensure there is governance to trace de-provisioning of access that is no longer required. Ensure proper system and access isolation for critical network systems through use of account privilege separation.&lt;br /&gt;['T1574.010', 'T1574.005']: Limit privileges of user accounts and groups so that only authorized administrators can interact with service changes and service binary target path locations. Deny execution from user directories such as file download directories and temp directories where able.&lt;br /&gt;['T1098.004']: In cloud environments, ensure that only users who explicitly require the permissions to update instance metadata or configurations can do so.&lt;br /&gt;['T1619']: Restrict granting of permissions related to listing objects in cloud storage to necessary accounts.&lt;br /&gt;['T1053']: Limit privileges of user accounts and remediate Privilege Escalation vectors so only authorized administrators can create scheduled tasks on remote systems.&lt;br /&gt;['T1089', 'T1562.001']: Ensure proper user permissions are in place to prevent adversaries from disabling or interfering with security services.&lt;br /&gt;['T1530']: Configure user permissions groups and roles for access to cloud storage.(Citation: Microsoft Azure Storage Security, 2019) Implement strict Identity and Access Management (IAM) controls to prevent access to storage solutions except for the applications, users, and services that require access.(Citation: Amazon S3 Security, 2019) Ensure that temporary access tokens are issued rather than permanent credentials, especially when access is being granted to entities outside of the internal security boundary.(Citation: Amazon  AWS Temporary Security Credentials)&lt;br /&gt;['T1050']: Limit privileges of user accounts and remediate Privilege Escalation vectors so only  authorized administrators can create new services.&lt;br /&gt;['T1610']: Enforce the principle of least privilege by limiting container dashboard access to only the necessary users.&lt;br /&gt;['T1197']: 
Consider limiting access to the BITS interface to specific users or groups.(Citation: Symantec BITS May 2007)&lt;br /&gt;['T1537']: Limit user account and IAM policies to the least privileges required. Consider using temporary credentials for accounts that are only valid for a certain period of time to reduce the effectiveness of compromised accounts.&lt;br /&gt;['T1562.008']: Configure default account policy to enable logging. Manage policies to ensure only necessary users have permissions to make changes to logging policies.&lt;br /&gt;['T1546.003', 'T1084']: By default, only administrators are allowed to connect remotely using WMI; restrict other users that are allowed to connect, or disallow all users from connecting remotely to WMI.&lt;br /&gt;['T1547.009', 'T1023']: Limit permissions for who can create symbolic links in Windows to appropriate groups such as Administrators and necessary groups for virtualization. This can be done through GPO: Computer Configuration &gt; [Policies] &gt; Windows Settings &gt; Security Settings &gt; Local Policies &gt; User Rights Assignment: Create symbolic links. (Citation: UCF STIG Symbolic Links)&lt;br /&gt;['T1578.003']: Limit permissions for deleting new instances in accordance with least privilege. Organizations should limit the number of users within the organization with an IAM role that has administrative privileges, strive to reduce all permanent privileged role assignments, and conduct periodic entitlement reviews on IAM users, roles and policies.(Citation: Mandiant M-Trends 2020)&lt;br /&gt;['T1051']: Ensure that permissions of the Web server process are only what is required by not using built-in accounts; instead, create specific accounts to limit unnecessary access or permissions overlap across multiple systems. (Citation: acunetix Server Secuirty) (Citation: NIST Server Security July 2008)&lt;br /&gt;['T1134', 'T1134.001', 'T1134.003']: An adversary must already have administrator level access on the local system to make full use of this technique; be sure to restrict users and accounts to the least privileges they require.  &lt;br /&gt;['T1163']: Limit privileges of user accounts so only authorized users can edit the rc.common file.&lt;br /&gt;['T1054', 'T1562.006']: Ensure event tracers/forwarders (Citation: Microsoft ETW May 2018), firewall policies, and other associated mechanisms are secured with appropriate permissions and access controls and cannot be manipulated by user accounts.&lt;br /&gt;['T1165']: Appropriate permissions should be applied such that only specific users can edit the startup items so that they can be leveraged for privilege escalation.&lt;br /&gt;['T1543.004', 'T1160', 'T1053.004']: Limit privileges of user accounts and remediate Privilege Escalation vectors so only authorized administrators can create new Launch Daemons.&lt;br /&gt;['T1047']: By default, only administrators are allowed to connect remotely using WMI. Restrict other users who are allowed to connect, or disallow all users to connect remotely to WMI.&lt;br /&gt;['T1609']: Enforce authentication and role-based access control on the container service to restrict users to the least privileges required.(Citation: Kubernetes Hardening Guide)&lt;br /&gt;['T1550.003', 'T1097']: Do not allow a user to be a local administrator for multiple systems.&lt;br /&gt;['T1574']: Limit privileges of user accounts and groups so that only authorized administrators can interact with service changes and service binary target path locations. Deny execution from user directories such as file download directories and temp directories where able.

Ensure that proper permissions and directory access control are set to deny users the ability to write files to the top-level directory &lt;code&gt;C:&lt;/code&gt; and system directories, such as &lt;code&gt;C:\Windows\&lt;/code&gt;, to reduce places where malicious files could be placed for execution.&lt;br /&gt;['T1078']: Regularly audit user accounts for activity and deactivate or remove any that are no longer needed.&lt;br /&gt;['T1053.007']: Limit privileges of user accounts and remediate privilege escalation vectors so only authorized administrators can create container orchestration jobs.&lt;br /&gt;['T1484.001', 'T1484']: Consider implementing WMI and security filtering to further tailor which users and computers a GPO will apply to.(Citation: Wald0 Guide to GPOs)(Citation: Microsoft WMI Filters)(Citation: Microsoft GPO Security Filtering)&lt;br /&gt;['T1547.006']: Use MDM to disable user's ability to install or approve kernel extensions, and ensure all approved kernel extensions are in alignment with policies specified in &lt;code&gt;com.apple.syspolicy.kernel-extension-policy&lt;/code&gt;.(Citation: Apple TN2459 Kernel Extensions)(Citation: MDMProfileConfigMacOS)
&lt;br /&gt;['T1563.002', 'T1021.001', 'T1076', 'T1563']: Limit remote user permissions if remote access is necessary.&lt;br /&gt;['T1569', 'T1569.001']: Prevent users from installing their own launch agents or launch daemons.&lt;br /&gt;['T1501', 'T1543.002']: Limit user access to system utilities such as 'systemctl' to only users who have a legitimate need.&lt;br /&gt;['T1213.002', 'T1213', 'T1213.001']: Enforce the principle of least-privilege. Consider implementing access control mechanisms that include both authentication and authorization.&lt;br /&gt;['T1031', 'T1489']: Limit privileges of user accounts and groups so that only authorized administrators can interact with service changes and service configurations.&lt;br /&gt;['T1021']: Limit the accounts that may use remote services. Limit the permissions for accounts that are at higher risk of compromise; for example, configure SSH so users can only run specific programs.&lt;br /&gt;['T1550.002', 'T1075']: Do not allow a domain user to be in the local administrator group on multiple systems.&lt;br /&gt;['T1562']: Ensure proper user permissions are in place to prevent adversaries from disabling or interfering with security/logging services.&lt;br /&gt;['T1547.013']: Limit privileges of user accounts so only authorized privileged users can create and modify XDG autostart entries.&lt;br /&gt;['T1157']: Prevent users from being able to write files to the search paths for applications.&lt;br /&gt;['T1034']: Ensure that proper permissions and directory access control are set to deny users the ability to write files to the top-level directory &lt;code&gt;C:&lt;/code&gt; and system directories, such as &lt;code&gt;C:\Windows\&lt;/code&gt;, to reduce places where malicious files could be placed for execution.&lt;br /&gt;['T1578.001']: Limit permissions for creating snapshots or backups in accordance with least privilege. Organizations should limit the number of users within the organization with an IAM role that has administrative privileges, strive to reduce all permanent privileged role assignments, and conduct periodic entitlement reviews on IAM users, roles and policies.(Citation: Mandiant M-Trends 2020)&lt;br /&gt;['T1606.002', 'T1606']: Ensure that user accounts with administrative rights follow best practices, including use of privileged access workstations, Just in Time/Just Enough Administration (JIT/JEA), and strong authentication. Reduce the number of users that are members of highly privileged Directory Roles.(Citation: Microsoft SolarWinds Customer Guidance)&lt;br /&gt;['T1134.002']: An adversary must already have administrator level access on the local system to make full use of this technique; be sure to restrict users and accounts to the least privileges they require.&lt;br /&gt;['T1053.005']: Limit privileges of user accounts and remediate Privilege Escalation vectors so only authorized administrators can create scheduled tasks on remote systems. &lt;br /&gt;['T1566.002']: Azure AD Administrators apply limitations upon the ability for users to grant consent to unfamiliar or unverified third-party applications. &lt;br /&gt;['T1110.004', 'T1110']: Proactively reset accounts that are known to be part of breached credentials either immediately, or after detecting bruteforce attempts.&lt;br /&gt;['T1185']: Since browser pivoting requires a high integrity process to launch from, restricting user permissions and addressing Privilege Escalation and [Bypass User Account Control](https://attack.mitre.org/techniques/T1548/002) opportunities can limit the exposure to this technique.&lt;br /&gt;['T1044']: Limit privileges of user accounts and groups so that only authorized administrators can interact with service changes and service binary target path locations. Deny execution from user directories such as file download directories and temp directories where able. (Citation: Seclists Kanthak 7zip Installer)&lt;br /&gt;['T1021.004']: Limit which user accounts are allowed to login via SSH.&lt;br /&gt;['T1562.007']: Ensure least privilege principles are applied to Identity and Access Management (IAM) security policies.(Citation: Expel IO Evil in AWS)&lt;br /&gt;['T1168']: Limit privileges of user accounts and remediate Privilege Escalation vectors so only authorized users can create scheduled jobs.&lt;br /&gt;['T1538']: Enforce the principle of least-privilege by limiting dashboard visibility to only the resources required. This may limit the discovery value of the dashboard in the event of a compromised account.&lt;br /&gt;['T1550']: Enforce the principle of least-privilege. Do not allow a domain user to be in the local administrator group on multiple systems.&lt;br /&gt;['T1053.002']: Limit privileges of user accounts and remediate Privilege Escalation vectors so only authorized administrators can create scheduled tasks on remote systems. In Linux environments, users account-level access to &lt;code&gt;[at](https://attack.mitre.org/software/S0110)&lt;/code&gt; can be managed using &lt;code&gt;at.allow&lt;/code&gt; and &lt;code&gt;at.deny&lt;/code&gt; files. Users listed in the at.allow are enabled to schedule actions using at, whereas users listed in at.deny file disabled from the utility.&lt;br /&gt;['T1053.003']: &lt;code&gt;cron&lt;/code&gt; permissions are controlled by &lt;code&gt;/etc/cron.allow and /etc/cron.deny&lt;/code&gt;. If there is a &lt;code&gt;cron.allow&lt;/code&gt; file, then the user or users that need to use &lt;code&gt;cron&lt;/code&gt; will need to be listed in the file. &lt;code&gt;cron.deny&lt;/code&gt; is used to explicitly disallow users from using cron. If neither files exist, then only the super user is allowed to run cron.&lt;br /&gt;['T1505.003']: Enforce the principle of least privilege by limiting privileges of user accounts so only authorized accounts can modify the web directory.(Citation: NSA and ASD Detect and Prevent Web Shells 2020)&lt;br /&gt;['T1552.007']: Enforce authentication and role-based access control on the container API to restrict users to the least privileges required.(Citation: Kubernetes Hardening Guide)&lt;br /&gt;['T1562.004']: Ensure proper user permissions are in place to prevent adversaries from disabling or modifying firewall settings.&lt;br /&gt;['T1213.003']: Enforce the principle of least-privilege. Consider implementing access control mechanisms that include both authentication and authorization for code repositories.&lt;br /&gt;['T1613']: Enforce the principle of least privilege by limiting dashboard visibility to only the required users.&lt;br /&gt;['T1547.012']: Limit user accounts that can load or unload device drivers by disabling &lt;code&gt;SeLoadDriverPrivilege&lt;/code&gt;.&lt;br /&gt;['T1543.003']: Limit privileges of user accounts and groups so that only authorized administrators can interact with service changes and service configurations. &lt;br /&gt;['T1528']: Enforce role-based access control to limit accounts to the least privileges they require. A Cloud Access Security Broker (CASB) can be used to set usage policies and manage user permissions on cloud applications to prevent access to application access tokens. In Kubernetes applications, set "automountServiceAccountToken: false" in the YAML specification of pods that do not require access to service account tokens.(Citation: Kubernetes Hardening Guide)&lt;br /&gt;['T1053.006']: Limit user access to system utilities such as 'systemctl' or 'systemd-run' to users who have a legitimate need.&lt;br /&gt;['T1152']: Prevent users from installing their own launch agents or launch daemons and instead require them to be pushed out by group policy.&lt;br /&gt;['T1578.002']: Limit permissions for creating new instances in accordance with least privilege. Organizations should limit the number of users within the organization with an IAM role that has administrative privileges, strive to reduce all permanent privileged role assignments, and conduct periodic entitlement reviews on IAM users, roles and policies.(Citation: Mandiant M-Trends 2020)&lt;br /&gt;['T1087.004']: Limit permissions to discover cloud accounts in accordance with least privilege. Organizations should limit the number of users within the organization with an IAM role that has administrative privileges, strive to reduce all permanent privileged role assignments, and conduct periodic entitlement reviews on IAM users, roles and policies.&lt;br /&gt;['T1505']: Enforce the principle of least privilege by limiting privileges of user accounts so only authorized accounts can modify and/or add server software components.(Citation: NSA and ASD Detect and Prevent Web Shells 2020)&lt;br /&gt;['T1562.002']: Ensure proper user permissions are in place to prevent adversaries from disabling or interfering with logging.&lt;br /&gt;['T1059.008']: Use of Authentication, Authorization, and Accounting (AAA) systems will limit actions users can perform and provide a history of user actions to detect unauthorized use and abuse. Ensure least privilege principles are applied to user accounts and groups so that only authorized users can perform configuration changes. (Citation: Cisco IOS Software Integrity Assurance - AAA)&lt;br /&gt;['T1574.012']: Limit the privileges of user accounts so that only authorized administrators can edit system environment variables.&lt;br /&gt;['T1078.004']: Periodically review user accounts and remove those that are inactive or unnecessary. Limit the ability for user accounts to create additional accounts.&lt;br /&gt;['T1053.001']: Users account-level access to &lt;code&gt;[at](https://attack.mitre.org/software/S0110)&lt;/code&gt; can be managed using &lt;code&gt;/etc/at.allow&lt;/code&gt; and &lt;code&gt;/etc/at.deny&lt;/code&gt; files. Users listed in the at.allow are enabled to schedule actions using at, whereas users listed in at.deny file disabled from the utility.&lt;br /&gt;['T1162']: Restrict users from being able to create their own login items.&lt;br /&gt;['T1078']: Ensure users and user groups have appropriate permissions for their roles through Identity and Access Management (IAM) controls. Configure user permissions, groups, and roles for access to cloud-based systems as well. Implement strict IAM controls to prevent access to systems except for the applications, users, and services that require access. Consider using temporary credentials that are only good for a certain period of time in cloud environments to reduce the effectiveness of compromised accounts.&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Mitre ATT&amp;CK Mitigation M1018" url="https://attack.mitre.org/mitigations/M1018"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:01.430">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-M1017" name="User Training" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>Train users to be aware of access or manipulation attempts by an adversary to reduce the risk of successful spearphishing, social engineering, and other techniques that involve user interaction.&lt;br /&gt;&lt;p&gt;Detailed mitigations per technique:&lt;/p&gt;&lt;br /&gt;['T1566.003']: Users can be trained to identify social engineering techniques and spearphishing messages with malicious links.&lt;br /&gt;['T1204', 'T1204.001', 'T1204.002']: Use user training as a way to bring awareness to common phishing and spearphishing techniques and how to raise suspicion for potentially malicious events.&lt;br /&gt;['T1213.003']: Develop and publish policies that define acceptable information to be stored in code repositories.&lt;br /&gt;['T1164']: Holding the Shift key while logging in prevents apps from opening automatically. (Citation: Re-Open windows on Mac)&lt;br /&gt;['T1552', 'T1081', 'T1552.001']: Ensure that developers and system administrators are aware of the risk associated with having plaintext passwords in software configuration files that may be left on endpoint systems or servers.&lt;br /&gt;['T1213']: Develop and publish policies that define acceptable information to be stored in repositories.&lt;br /&gt;['T1598', 'T1598.003', 'T1598.001', 'T1598.002']: Users can be trained to identify social engineering techniques and spearphishing attempts.&lt;br /&gt;['T1213.001']: Develop and publish policies that define acceptable information to be stored in Confluence repositories.&lt;br /&gt;['T1078.002', 'T1078.004', 'T1078']: Applications may send push notifications to verify a login as a form of multi-factor authentication (MFA). Train users to only accept valid push notifications and to report suspicious push notifications.&lt;br /&gt;['T1557.002', 'T1557']: Train users to be suspicious about certificate errors. Adversaries may use their own certificates in an attempt to intercept HTTPS traffic. Certificate errors may arise when the application's certificate does not match the one expected by the host.&lt;br /&gt;['T1003.005', 'T1003', 'T1003.003', 'T1003.001', 'T1003.002', 'T1003.004']: Limit credential overlap across accounts and systems by training users and administrators not to use the same password for multiple accounts.&lt;br /&gt;['T1185']: Close all browser sessions regularly and when they are no longer needed.&lt;br /&gt;['T1072']: Have a strict approval policy for use of deployment systems.&lt;br /&gt;['T1204.003']: Train users to be aware of the existence of malicious images and how to avoid deploying instances and containers from them.&lt;br /&gt;['T1192', 'T1194']: Users can be trained to identify social engineering techniques and spearphishing emails with malicious links.&lt;br /&gt;['T1036.007']: Train users to look for double extensions in filenames, and in general use training as a way to bring awareness to common phishing and spearphishing techniques and how to raise suspicion for potentially malicious events.&lt;br /&gt;['T1111']: Remove smart cards when not in use.&lt;br /&gt;['T1528']: Users need to be trained to not authorize third-party applications they don't recognize. The user should pay particular attention to the redirect URL: if the URL is a misspelled or convoluted sequence of words related to an expected service or SaaS application, the website is likely trying to spoof a legitimate service. Users should also be cautious about the permissions they are granting to apps. For example, offline access and access to read emails should excite higher suspicions because adversaries can utilize SaaS APIs to discover credentials and other sensitive communications.&lt;br /&gt;['T1221']: Train users to identify social engineering techniques and spearphishing emails that could be used to deliver malicious documents.&lt;br /&gt;['T1056.002']: Use user training as a way to bring awareness and raise suspicion for potentially malicious events and dialog boxes (ex: Office documents prompting for credentials).&lt;br /&gt;['T1176']: 
Close out all browser sessions when finished using them to prevent any potentially malicious extensions from continuing to run.&lt;br /&gt;['T1566.001', 'T1193']: Users can be trained to identify social engineering techniques and spearphishing emails.&lt;br /&gt;['T1213.002']: Develop and publish policies that define acceptable information to be stored in SharePoint repositories.&lt;br /&gt;['T1566.002']: Users can be trained to identify social engineering techniques and spearphishing emails with malicious links which includes phishing for consent with OAuth 2.0 &lt;br /&gt;['T1566']: Users can be trained to identify social engineering techniques and phishing emails.&lt;br /&gt;['T1547.007']: Holding the Shift key while logging in prevents apps from opening automatically.(Citation: Re-Open windows on Mac)&lt;br /&gt;['T1141']: Use user training as a way to bring awareness and raise suspicion for potentially malicious events (ex: Office documents prompting for credentials).&lt;br /&gt;['T1539']: Train users to identify aspects of phishing attempts where they're asked to enter credentials into a site that has the incorrect domain for the application they are logging into.&lt;br /&gt;['T1621']: Train users to only accept 2FA/MFA requests from login attempts they initiated, to review source location of the login attempt prompting the 2FA/MFA requests, and to report suspicious/unsolicited prompts.&lt;br /&gt;['T1547.011']: Holding the shift key during login prevents apps from opening automatically.(Citation: Re-Open windows on Mac)&lt;br /&gt;['T1162']: Holding the shift key during login prevents apps from opening automatically. (Citation: Re-Open windows on Mac)&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Mitre ATT&amp;CK Mitigation M1017" url="https://attack.mitre.org/mitigations/M1017"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:01.424">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="valid-accounts" name="Valid Accounts" desc="" library="">
          <threats>
            <threat ref="T-T1078.004" name="Cloud Accounts" state="Expose" source="MANUAL" edited="false" owner="JamesRabe" library="" editable="true">
              <desc>Adversaries may obtain and abuse credentials of a cloud account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Cloud accounts are those created and configured by an organization for use by users, remote support, services, or for administration of resources within a cloud service provider or SaaS application. In some cases, cloud accounts may be federated with traditional identity management system, such as Window Active Directory.(Citation: AWS Identity Federation)(Citation: Google Federating GC)(Citation: Microsoft Deploying AD Federation)&lt;br&gt;&lt;br&gt;Compromised credentials for cloud accounts can be used to harvest sensitive data from online storage accounts and databases. Access to cloud accounts can also be abused to gain Initial Access to a network by abusing a [Trusted Relationship](https://attack.mitre.org/techniques/T1199). Similar to [Domain Accounts](https://attack.mitre.org/techniques/T1078/002), compromise of federated cloud accounts may allow adversaries to more easily move laterally within an environment.&lt;br&gt;&lt;br&gt;Once a cloud account is compromised, an adversary may perform [Account Manipulation](https://attack.mitre.org/techniques/T1098) - for example, by adding [Additional Cloud Roles](https://attack.mitre.org/techniques/T1098/003) - to maintain persistence and potentially escalate their privileges.&lt;br&gt;&lt;br&gt;Monitor the activity of cloud accounts to detect abnormal or malicious behavior, such as accessing information outside of the normal function of the account or account usage at atypical hours.</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references>
                <reference name="AWS Identity Federation" url="https://aws.amazon.com/identity/federation/"/>
                <reference name="Google Federating GC" url="https://cloud.google.com/solutions/federating-gcp-with-active-directory-introduction"/>
                <reference name="Microsoft Deploying AD Federation" url="https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/deployment/how-to-connect-fed-azure-adfs"/>
                <reference name="Mitre ATT&amp;CK Technique T1078.004" url="https://attack.mitre.org/techniques/T1078/004"/>
              </references>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-DS0002" mitigation="16"/>
                <countermeasure ref="C-DS0028" mitigation="14"/>
                <countermeasure ref="C-M1017" mitigation="14"/>
                <countermeasure ref="C-M1018" mitigation="14"/>
                <countermeasure ref="C-M1026" mitigation="14"/>
                <countermeasure ref="C-M1027" mitigation="14"/>
                <countermeasure ref="C-M1032" mitigation="14"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="T-T1078.001" name="Default Accounts" state="Expose" source="MANUAL" edited="false" owner="JamesRabe" library="" editable="true">
              <desc>Adversaries may obtain and abuse credentials of a default account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Default accounts are those that are built-into an OS, such as the Guest or Administrator accounts on Windows systems. Default accounts also include default factory/provider set accounts on other types of systems, software, or devices, including the root user account in AWS and the default service account in Kubernetes.(Citation: Microsoft Local Accounts Feb 2019)(Citation: AWS Root User)(Citation: Threat Matrix for Kubernetes)&lt;br&gt;&lt;br&gt;Default accounts are not limited to client machines, rather also include accounts that are preset for equipment such as network devices and computer applications whether they are internal, open source, or commercial. Appliances that come preset with a username and password combination pose a serious threat to organizations that do not change it post installation, as they are easy targets for an adversary. Similarly, adversaries may also utilize publicly disclosed or stolen [Private Keys](https://attack.mitre.org/techniques/T1552/004) or credential materials to legitimately connect to remote environments via [Remote Services](https://attack.mitre.org/techniques/T1021).(Citation: Metasploit SSH Module)&lt;br&gt;&lt;br&gt;Monitor whether default accounts have been activated or logged into. These audits should also include checks on any appliances and applications for default credentials or SSH keys, and if any are discovered, they should be updated immediately.</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references>
                <reference name="AWS Root User" url="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_root-user.html"/>
                <reference name="CAPEC-70" url="https://capec.mitre.org/data/definitions/70.html"/>
                <reference name="Metasploit SSH Module" url="https://github.com/rapid7/metasploit-framework/tree/master/modules/exploits/linux/ssh"/>
                <reference name="Microsoft Local Accounts Feb 2019" url="https://docs.microsoft.com/en-us/windows/security/identity-protection/access-control/local-accounts"/>
                <reference name="Mitre ATT&amp;CK Technique T1078.001" url="https://attack.mitre.org/techniques/T1078/001"/>
                <reference name="Threat Matrix for Kubernetes" url="https://www.microsoft.com/security/blog/2020/04/02/attack-matrix-kubernetes/"/>
              </references>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-DS0002" mitigation="34"/>
                <countermeasure ref="C-DS0028" mitigation="33"/>
                <countermeasure ref="C-M1027" mitigation="33"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="564156ce-ea3e-49fe-92fd-d7d7dbead457" diagramComponentId="799f1864-f917-42b0-ad53-84be083fb4e4" ref="f500e9af-96bf-4d10-abf2-04974ee4dffb" name="Defense Evasion" desc="" library="" parentComponentRef="f0d54cbd-bb4b-4375-9178-980f6a239855" componentDefinitionRef="defense-evasion">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses/>
      <countermeasures>
        <countermeasure ref="C-DS0026" name="Active Directory" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>A database and set of services that allows administrators to manage permissions, access to network resources, and stored data objects (user, group, application, or devices)(Citation: Microsoft AD DS Getting Started)&lt;br /&gt;&lt;p&gt;Detailed detections per technique:&lt;/p&gt;&lt;br /&gt;['T1556.005']: Monitor property changes in Group Policy: &lt;code&gt;Computer Configuration\Windows Settings\Security Settings\Account Policies\Password Policy\Store passwords using reversible encryption&lt;/code&gt;. By default, the property should be set to Disabled.&lt;br /&gt;['T1134.005']: Monitor for changes to account management events on Domain Controllers for successful and failed changes to SID-History. (Citation: AdSecurity SID History Sept 2015) (Citation: Microsoft DsAddSidHistory)&lt;br /&gt;['T1531']: Monitor for changes made to AD settings for unexpected modifications to user accounts, such as deletions or potentially malicious changes to user attributes (credentials, status, etc.).&lt;br /&gt;['T1222.001']: Monitor for changes made to DACLs and file/directory ownership. Many of the commands used to modify DACLs and file/directory ownership are built-in system utilities and may generate a high false positive alert rate, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible.&lt;br /&gt;['T1098']: Monitor for changes to Azure Activity Logs for unexpected modifications to Service Principal and Application.&lt;br /&gt;['T1207']: Leverage AD directory synchronization (DirSync) to monitor changes to directory state using AD replication cookies.(Citation: Microsoft DirSync) (Citation: ADDSecurity DCShadow Feb 2018) Also consider monitoring and alerting on the replication of AD objects (Audit Detailed Directory Service Replication Events 4928 and 4929). (Citation: DCShadow Blog)&lt;br /&gt;['T1037.003']: Monitor for changes made in the Active Directory that may use network logon scripts automatically executed at logon initialization to establish persistence.&lt;br /&gt;['T1484.002']: Monitor for changes made to AD settings for unexpected modifications to domain trust settings, such as when a user or application modifies the federation settings on the domain.&lt;br /&gt;['T1222']: Monitor for changes made to ACLs and file/directory ownership. Many of the commands used to modify ACLs and file/directory ownership are built-in system utilities and may generate a high false positive alert rate, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible.&lt;br /&gt;['T1037']: Monitor for changes made in the Active Directory that may use scripts automatically executed at boot or logon initialization to establish persistence.&lt;br /&gt;['T1098.001']: Monitor for changes to Azure Activity Logs for Service Principal and Application modifications.&lt;br /&gt;['T1134']: Monitor for changes made to AD settings that may modify access tokens to operate under a different user or system security context to perform actions and bypass access controls.&lt;br /&gt;['T1484']: Monitor for unexpected deletion of an active directory object, such as Windows EID 5141.&lt;br /&gt;['T1484']: Monitor for newly constructed active directory objects, such as Windows EID 5137.&lt;br /&gt;['T1098.005']: Monitor for the registration or joining of new device objects in Active Directory.&lt;br /&gt;['T1207']: Baseline and periodically analyze the Configuration partition of the AD schema and alert on creation of nTDSDSA objects.(Citation: DCShadow Blog)&lt;br /&gt;['T1558.001']: Monitor for anomalous Kerberos activity, such as malformed or blank fields in Windows logon/logoff events (Event ID 4769, 4768), RC4 encryption within TGTs, and TGS requests without preceding TGT requests. Monitor the lifetime of TGT tickets for values that differ from the default domain duration. Monitor for indications of Pass the Ticket being used to move laterally.&lt;br /&gt;['T1550']: Monitor requests of new ticket granting ticket or service tickets to a Domain Controller, such as Windows EID 4769 or 4768, that may use alternate authentication material, such as password hashes, Kerberos tickets, and application access tokens, in order to move laterally within an environment and bypass normal system access controls.&lt;br /&gt;['T1550.002']: Monitor requests of new ticket granting ticket or service tickets to a Domain Controller. Windows Security events such as 4768 (A Kerberos authentication ticket (TGT) was requested) and 4769 (A Kerberos service ticket was requested) combined with logon session creation information may be indicative of an overpass the hash attempt.&lt;br /&gt;['T1558.003']: Monitor for anomalous Kerberos activity, such as enabling Audit Kerberos Service Ticket Operations to log Kerberos TGS service ticket requests. Particularly investigate irregular patterns of activity (ex: accounts making numerous requests, Event ID 4769, within a small time frame, especially if they also request RC4 encryption [Type 0x17]).&lt;br /&gt;['T1558.004']: Monitor for anomalous activity, such as enabling Audit Kerberos Service Ticket Operations to log Kerberos TGS service ticket requests. Particularly investigate irregular patterns of activity (ex: accounts making numerous requests, Event ID 4768 and 4769, within a small time frame, especially if they also request RC4 encryption [Type 0x17], pre-authentication not required [Type: 0x0]).&lt;br /&gt;['T1558']: Monitor for anomalous Kerberos activity, such as malformed or blank fields in Windows logon/logoff events (Event ID 4624, 4672, 4634), RC4 encryption within ticket granting tickets (TGTs), and ticket granting service (TGS) requests without preceding TGT requests.(Citation: ADSecurity Detecting Forged Tickets)(Citation: Stealthbits Detect PtT 2019)(Citation: CERT-EU Golden Ticket Protection)Monitor the lifetime of TGT tickets for values that differ from the default domain duration.(Citation: Microsoft Kerberos Golden Ticket) Monitor for indications of [Pass the Ticket](https://attack.mitre.org/techniques/T1550/003) being used to move laterally.&lt;br /&gt;['T1550.003']: Monitor requests of new ticket granting ticket or service tickets to a Domain Controller. Event ID 4769 is generated on the Domain Controller when using a golden ticket after the KRBTGT password has been reset twice, as mentioned in the mitigation section. The status code 0x1F indicates the action has failed due to "Integrity check on decrypted field failed" and indicates misuse by a previously invalidated golden ticket.(Citation: CERT-EU Golden Ticket Protection)&lt;br /&gt;['T1003.006']: Monitor domain controller logs for replication requests and other unscheduled activity possibly associated with DCSync.(Citation: Microsoft DRSR Dec 2017) (Citation: Microsoft GetNCCChanges) (Citation: Samba DRSUAPI) Note: Domain controllers may not log replication requests originating from the default domain controller account.(Citation: Harmj0y DCSync Sept 2015)&lt;br /&gt;['T1033']: Monitor domain controller logs for replication requests and other unscheduled activity possibly associated with DCSync. (Citation: Microsoft DRSR Dec 2017) (Citation: Microsoft GetNCCChanges) (Citation: Samba DRSUAPI) Note: Domain controllers may not log replication requests originating from the default domain controller account. (Citation: Harmj0y DCSync Sept 2015). Monitor for replication requests (Citation: Microsoft SAMR) from IPs not associated with known domain controllers. (Citation: AdSecurity DCSync Sept 2015)&lt;br /&gt;['T1615']: Monitor for abnormal LDAP queries with filters for &lt;code&gt;groupPolicyContainer&lt;/code&gt; and high volumes of LDAP traffic to domain controllers. Windows Event ID 4661 can also be used to detect when a directory service has been accessed.&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Microsoft AD DS Getting Started" url="https://docs.microsoft.com/en-us/windows-server/identity/ad-ds/ad-ds-getting-started"/>
            <reference name="Mitre ATT&amp;CK Data Source DS0026" url="https://attack.mitre.org/datasources/DS0026"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:02.132">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-DS0015" name="Application Log" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>Events collected by third-party services such as mail servers, web applications, or other appliances (not by the native OS or platform)(Citation: Confluence Logs)&lt;br /&gt;&lt;p&gt;Detailed detections per technique:&lt;/p&gt;&lt;br /&gt;['T1189']: Firewalls and proxies can inspect URLs for potentially known-bad domains or parameters. They can also do reputation-based analytics on websites and their requested resources such as how old a domain is, who it's registered to, if it's on a known bad list, or how many other users have connected to it before.&lt;br /&gt;['T1499.002']: Monitor for third-party application logging, messaging, and/or other artifacts that may target the different network services provided by systems to conduct a DoS. In addition to network level detections, endpoint logging and instrumentation can be useful for detection. Attacks targeting web applications may generate logs in the web server, application server, and/or database server that can be used to identify the type of attack, possibly before the impact is felt. Externally monitor the availability of services that may be targeted by an Endpoint DoS.&lt;br /&gt;['T1557']: Monitor application logs for changes to settings and other events associated with network protocols and other services commonly abused for AiTM.(Citation: dhcp_serv_op_events)&lt;br /&gt;['T1137.003']:  Monitor for third-party application logging, messaging, and/or other artifacts that may abuse Microsoft Outlook forms to obtain persistence on a compromised system. SensePost, whose tool [Ruler](https://attack.mitre.org/software/S0358) can be used to carry out malicious rules, forms, and Home Page attacks, has released a tool to detect Ruler usage.(Citation: SensePost NotRuler)&lt;br /&gt;['T1505.003']: Monitor for third-party application logging, messaging, and/or other artifacts that may backdoor web servers with web shells to establish persistent access to systems. Log authentication attempts to the server and any unusual traffic patterns to or from the server and internal network. (Citation: US-CERT Alert TA15-314A Web Shells)&lt;br /&gt;['T1505']: Monitor for third-party application logging, messaging, and/or other artifacts that may abuse legitimate extensible development features of servers to establish persistent access to systems. Consider monitoring application logs for abnormal behavior that may indicate suspicious installation of application software components. Log authentication attempts to the server and any unusual traffic patterns to or from the server and internal network. (Citation: US-CERT Alert TA15-314A Web Shells)&lt;br /&gt;['T1550']: Monitor for third-party application logging, messaging, and/or other artifacts that may use alternate authentication material, such as password hashes, Kerberos tickets, and application access tokens, in order to move laterally within an environment and bypass normal system access controls.&lt;br /&gt;['T1069.003']: Monitor for events collected that may attempt to find cloud groups and permission settings. &lt;br /&gt;['T1491.002']: Monitor for third-party application logging, messaging, and/or other artifacts that may deface systems external to an organization in an attempt to deliver messaging, intimidate, or otherwise mislead an organization or users. &lt;br /&gt;['T1598']: Depending on the specific method of phishing, the detections can vary. Monitor for suspicious email activity, such as numerous accounts receiving messages from a single unusual/unknown sender. Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.(Citation: Microsoft Anti Spoofing)(Citation: ACSC Email Spoofing)
When it comes to following links, monitor for references to uncategorized or known-bad sites. URL inspection within email (including expanding shortened links) can also help detect links leading to known malicious sites.
Monitor social media traffic for suspicious activity, including messages requesting information as well as abnormal file or data transfers (especially those involving unknown, or otherwise suspicious accounts).&lt;br /&gt;['T1499']: Monitor for third-party application logging, messaging, and/or other artifacts that may perform Endpoint Denial of Service (DoS) attacks to degrade or block the availability of services to users. In addition to network level detections, endpoint logging and instrumentation can be useful for detection. Attacks targeting web applications may generate logs in the web server, application server, and/or database server that can be used to identify the type of attack, possibly before the impact is felt. Externally monitor the availability of services that may be targeted by an Endpoint DoS.&lt;br /&gt;['T1204.003']: Monitor for third-party application logging, messaging, and/or other artifacts that may rely on a user running a malicious image to facilitate execution.&lt;br /&gt;['T1598.001']: Monitor social media traffic for suspicious activity, including messages requesting information as well as abnormal file or data transfers (especially those involving unknown, or otherwise suspicious accounts).
Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.
Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.&lt;br /&gt;['T1564']: Monitor for third-party application logging, messaging, and/or other artifacts that may attempt to hide artifacts associated with their behaviors to evade detection. &lt;br /&gt;['T1499.004']: Monitor for third-party application logging, messaging, and/or other artifacts that may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Attacks targeting web applications may generate logs in the web server, application server, and/or database server that can be used to identify the type of attack. Externally monitor the availability of services that may be targeted by an Endpoint DoS.&lt;br /&gt;['T1211']: Exploitation for defense evasion may happen shortly after the system has been compromised to prevent detection during later actions for for additional tools that may be brought in and used. Detecting software exploitation may be difficult depending on the tools available. Software exploits may not always succeed or may cause the exploited process to become unstable or crash. &lt;br /&gt;['T1137']: Monitor for third-party application logging, messaging, and/or other artifacts that may leverage Microsoft Office-based applications for persistence between startups. SensePost, whose tool [Ruler](https://attack.mitre.org/software/S0358) can be used to carry out malicious rules, forms, and Home Page attacks, has released a tool to detect Ruler usage.(Citation: SensePost NotRuler)&lt;br /&gt;['T1566.001']: Monitor for third-party application logging, messaging, and/or other artifacts that may send spearphishing emails with a malicious attachment in an attempt to gain access to victim systems. Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.(Citation: Microsoft Anti Spoofing)(Citation: ACSC Email Spoofing) Anti-virus can potentially detect malicious documents and attachments as they're scanned to be stored on the email server or on the user's computer. Monitor for suspicious descendant process spawning from Microsoft Office and other productivity software.(Citation: Elastic - Koadiac Detection with EQL)&lt;br /&gt;['T1566.002']: Monitor for third-party application logging, messaging, and/or other artifacts that may send spearphishing emails with a malicious link in an attempt to gain access to victim systems. Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.(Citation: Microsoft Anti Spoofing)(Citation: ACSC Email Spoofing) URL inspection within email (including expanding shortened links) can help detect links leading to known malicious sites. Detonation chambers can be used to detect these links and either automatically go to these sites to determine if they're potentially malicious, or wait and capture the content if a user visits the link.&lt;br /&gt;['T1598.003']: Monitor for suspicious email activity, such as numerous accounts receiving messages from a single unusual/unknown sender. Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.(Citation: Microsoft Anti Spoofing)(Citation: ACSC Email Spoofing)
Monitor for references to uncategorized or known-bad sites. URL inspection within email (including expanding shortened links) can also help detect links leading to known malicious sites.&lt;br /&gt;['T1610']: Configuration management databases (CMDB) and other asset management systems may help with the detection of computer systems or network devices that should not exist on a network.&lt;br /&gt;['T1114']: Detection is challenging because all messages forwarded because of an auto-forwarding rule have the same presentation as a manually forwarded message. It is also possible for the user to not be aware of the addition of such an auto-forwarding rule and not suspect that their account has been compromised; email-forwarding rules alone will not affect the normal usage patterns or operations of the email account. Auto-forwarded messages generally contain specific detectable artifacts that may be present in the header; such artifacts would be platform-specific. Examples include &lt;code&gt;X-MS-Exchange-Organization-AutoForwarded&lt;/code&gt; set to true, &lt;code&gt;X-MailFwdBy&lt;/code&gt; and &lt;code&gt;X-Forwarded-To&lt;/code&gt;. The &lt;code&gt;forwardingSMTPAddress&lt;/code&gt; parameter used in a forwarding process that is managed by administrators and not by user actions. All messages for the mailbox are forwarded to the specified SMTP address. However, unlike typical client-side rules, the message does not appear as forwarded in the mailbox; it appears as if it were sent directly to the specified destination mailbox.(Citation: Microsoft Tim McMichael Exchange Mail Forwarding 2) High volumes of emails that bear the &lt;code&gt;X-MS-Exchange-Organization-AutoForwarded&lt;/code&gt; header (indicating auto-forwarding) without a corresponding number of emails that match the appearance of a forwarded message may indicate that further investigation is needed at the administrator level rather than user-level.&lt;br /&gt;['T1534']: Monitor email gateways usually do not scan internal email, but an organization can leverage the journaling-based solution which sends a copy of emails to a security service for offline analysis or incorporate service-integrated solutions using on-premise or API-based integrations to help detect internal spearphishing attacks.(Citation: Trend Micro When Phishing Starts from the Inside 2017)&lt;br /&gt;['T1594']: Monitor for suspicious network traffic that could be indicative of adversary reconnaissance, such as rapid successions of requests indicative of web crawling and/or large quantities of requests originating from a single source (especially if the source is known to be associated with an adversary). Analyzing web metadata may also reveal artifacts that can be attributed to potentially malicious activity, such as referer or user-agent string HTTP/S fields.&lt;br /&gt;['T1137.005']: Monitor for third-party application logging, messaging, and/or other artifacts that may abuse Microsoft Outlook rules to obtain persistence on a compromised system. SensePost, whose tool [Ruler](https://attack.mitre.org/software/S0358) can be used to carry out malicious rules, forms, and Home Page attacks, has released a tool to detect Ruler usage.(Citation: SensePost NotRuler)&lt;br /&gt;['T1213.002']: Monitor for third-party application logging, messaging, and/or other artifacts that may leverage the SharePoint repository as a source to mine valuable information. Monitor access to Microsoft SharePoint repositories performed by privileged users (for example, Active Directory Domain, Enterprise, or Schema Administrators) should be closely monitored and alerted upon, as these types of accounts should generally not be used to access information repositories. If the capability exists, it may be of value to monitor and alert on users that are retrieving and viewing a large number of documents and pages; this behavior may be indicative of programmatic means being used to retrieve all data within the repository. In environments with high-maturity, it may be possible to leverage User-Behavioral Analytics (UBA) platforms to detect and alert on user based anomalies.&lt;br /&gt;['T1110.004']: Monitor authentication logs for system and application login failures of [Valid Accounts](https://attack.mitre.org/techniques/T1078). If authentication failures are high, then there may be a brute force attempt to gain access to a system using legitimate credentials.&lt;br /&gt;['T1491.001']: Monitor for third-party application logging, messaging, and/or other artifacts that may deface systems internal to an organization in an attempt to intimidate or mislead users. &lt;br /&gt;['T1114.003']: Detection is challenging because all messages forwarded because of an auto-forwarding rule have the same presentation as a manually forwarded message. It is also possible for the user to not be aware of the addition of such an auto-forwarding rule and not suspect that their account has been compromised; email-forwarding rules alone will not affect the normal usage patterns or operations of the email account. This is especially true in cases with hidden auto-forwarding rules. This makes it only possible to reliably detect the existence of a hidden auto-forwarding rule by examining message tracking logs or by using a MAPI editor to notice the modified rule property values.(Citation: Pfammatter - Hidden Inbox Rules)
Auto-forwarded messages generally contain specific detectable artifacts that may be present in the header; such artifacts would be platform-specific. Examples include X-MS-Exchange-Organization-AutoForwarded set to true, X-MailFwdBy and X-Forwarded-To. The forwardingSMTPAddress parameter used in a forwarding process that is managed by administrators and not by user actions. All messages for the mailbox are forwarded to the specified SMTP address. However, unlike typical client-side rules, the message does not appear as forwarded in the mailbox; it appears as if it were sent directly to the specified destination mailbox.(Citation: Microsoft Tim McMichael Exchange Mail Forwarding 2) High volumes of emails that bear the X-MS-Exchange-Organization-AutoForwarded header (indicating auto-forwarding) without a corresponding number of emails that match the appearance of a forwarded message may indicate that further investigation is needed at the administrator level rather than user-level.&lt;br /&gt;['T1137.004']: Monitor for third-party application logging, messaging, and/or other artifacts that may abuse Microsoft Outlook's Home Page feature to obtain persistence on a compromised system. SensePost, whose tool [Ruler](https://attack.mitre.org/software/S0358) can be used to carry out malicious rules, forms, and Home Page attacks, has released a tool to detect Ruler usage.(Citation: SensePost NotRuler)&lt;br /&gt;['T1622']: Monitor debugger logs for signs of abnormal and potentially malicious activity.&lt;br /&gt;['T1069']: Monitor for logging, messaging, and other artifacts provided by cloud services.&lt;br /&gt;['T1499.003']: Monitor for third-party application logging, messaging, and/or other artifacts that may target resource intensive features of web applications to cause a denial of service (DoS). In addition to network level detections, endpoint logging and instrumentation can be useful for detection. Attacks targeting web applications may generate logs in the web server, application server, and/or database server that can be used to identify the type of attack, possibly before the impact is felt. Externally monitor the availability of services that may be targeted by an Endpoint DoS.&lt;br /&gt;['T1491']: Monitor for third-party application logging, messaging, and/or other artifacts that may modify visual content available internally or externally to an enterprise network. &lt;br /&gt;['T1213.003']: Monitor for third-party application logging, messaging, and/or other artifacts that may leverage code repositories to collect valuable information. Monitor access to code repositories, especially performed by privileged users such as Active Directory Domain or Enterprise Administrators as these types of accounts should generally not be used to access code repositories. In environments with high-maturity, it may be possible to leverage User-Behavioral Analytics (UBA) platforms to detect and alert on user-based anomalies.&lt;br /&gt;['T1621']: Monitor application logs for suspicious events including repeated MFA failures that may indicate user's primary credentials have been compromised.&lt;br /&gt;['T1072']: Often these third-party applications will have logs of their own that can be collected and correlated with other data from the environment. Ensure that third-party application logs are on-boarded to the enterprise logging system and the logs are regularly reviewed. Audit software deployment logs and look for suspicious or unauthorized activity. A system not typically used to push software to clients that suddenly is used for such a task outside of a known admin function may be suspicious. Monitor account login activity on these applications to detect suspicious/abnormal usage.
Perform application deployment at regular times so that irregular deployment activity stands out.&lt;br /&gt;['T1098.005']: 
Azure AD creates several log entries when new devices are enrolled, which can be monitored for unexpected device registrations.(Citation: AADInternals - BPRT) Additionally, joined devices can be viewed via the Azure AD portal.(Citation: Microsoft Manage Device Identities)&lt;br /&gt;['T1110.002']: Monitor authentication logs for system and application login failures of [Valid Accounts](https://attack.mitre.org/techniques/T1078). It is difficult to detect when hashes are cracked, since this is generally done outside the scope of the target network. Consider focusing efforts on detecting other adversary behavior used to acquire credential materials, such as [OS Credential Dumping](https://attack.mitre.org/techniques/T1003) or [Kerberoasting](https://attack.mitre.org/techniques/T1558/003).&lt;br /&gt;['T1213']: Monitor for third-party application logging, messaging, and/or other artifacts that may leverage information repositories to mine valuable information. Information repositories generally have a considerably large user base, detection of malicious use can be non-trivial. At minimum, access to information repositories performed by privileged users (for example, Active Directory Domain, Enterprise, or Schema Administrators) should be closely monitored and alerted upon, as these types of accounts should generally not be used to access information repositories. If the capability exists, it may be of value to monitor and alert on users that are retrieving and viewing a large number of documents and pages; this behavior may be indicative of programmatic means being used to retrieve all data within the repository. In environments with high-maturity, it may be possible to leverage User-Behavioral Analytics (UBA) platforms to detect and alert on user based anomalies.&lt;br /&gt;['T1505.001']: Monitor for third-party application logging, messaging, and/or other artifacts that may abuse SQL stored procedures to establish persistent access to systems. On a MSSQL Server, consider monitoring for xp_cmdshell usage.(Citation: NetSPI Startup Stored Procedures) Consider enabling audit features that can log malicious startup activities.&lt;br /&gt;['T1203']: Detecting software exploitation may be difficult depending on the tools available. Software exploits may not always succeed or may cause the exploited process to become unstable or crash.&lt;br /&gt;['T1566']: Monitor for third-party application logging, messaging, and/or other artifacts that may send phishing messages to gain access to victim systems. Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.(Citation: Microsoft Anti Spoofing)(Citation: ACSC Email Spoofing) URL inspection within email (including expanding shortened links) can help detect links leading to known malicious sites. Detonation chambers can be used to detect these links and either automatically go to these sites to determine if they're potentially malicious, or wait and capture the content if a user visits the link.&lt;br /&gt;['T1110.003']: Monitor authentication logs for system and application login failures of [Valid Accounts](https://attack.mitre.org/techniques/T1078). Consider the following event IDs:(Citation: Trimarc Detecting Password Spraying)
Domain Controllers: "Audit Logon" (Success &amp; Failure) for event ID 4625.
Domain Controllers: "Audit Kerberos Authentication Service" (Success &amp; Failure) for event ID 4771.
All systems: "Audit Logon" (Success &amp; Failure) for event ID 4648.&lt;br /&gt;['T1098.002']: Enable the UpdateFolderPermissions action for all logon types. The mailbox audit log will forward folder permission modification events to the Unified Audit Log. Create rules to alert on ModifyFolderPermissions operations where the Anonymous or Default user is assigned permissions other than None.

A larger than normal volume of emails sent from an account and similar phishing emails sent from real accounts within a network may be a sign that an account was compromised and attempts to leverage access with modified email permissions is occurring.&lt;br /&gt;['T1598.002']: Monitor for suspicious email activity, such as numerous accounts receiving messages from a single unusual/unknown sender. Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.(Citation: Microsoft Anti Spoofing)(Citation: ACSC Email Spoofing)&lt;br /&gt;['T1566.003']: Monitor for third-party application logging, messaging, and/or other artifacts that may send spearphishing messages via third-party services in an attempt to gain access to victim systems. &lt;br /&gt;['T1550.004']: Monitor for third-party application logging, messaging, and/or other service artifacts that provide context of user authentication to web applications, including cloud-based services. Combine this information with web credentials usage events to identify authentication events that do not fit the organization baseline.&lt;br /&gt;['T1210']: Detecting software exploitation may be difficult depending on the tools available. Software exploits may not always succeed or may cause the exploited process to become unstable or crash. Web Application Firewalls may detect improper inputs attempting exploitation.&lt;br /&gt;['T1557.003']: Monitor Windows logs (ex: EIDs 1341, 1342, 1020, and 1063) for changes to DHCP settings. These may also highlight DHCP issues such as when IP allocations are low or have run out.(Citation: dhcp_serv_op_events)(Citation: solution_monitor_dhcp_scopes)&lt;br /&gt;['T1562.002']: Monitor for third-party application logging, messaging, and/or other artifacts provided by third-party services that may disable Windows event logging to limit data that can be leveraged for detections and audits.&lt;br /&gt;['T1564.008']: Monitor for third-party application logging, messaging, and/or other artifacts that may use email rules to hide inbound emails in a compromised user's mailbox. Monitor email clients and applications for suspicious activity, such as missing messages or abnormal configuration and/or log entries.&lt;br /&gt;['T1505.002']: Monitor for third-party application logging, messaging, and/or other artifacts that may abuse Microsoft transport agents to establish persistent access to systems. Consider monitoring application logs for abnormal behavior that may indicate suspicious installation of application software components.&lt;br /&gt;['T1213.001']: Monitor for third-party application logging, messaging, and/or other artifacts that may leverage Confluence repositories to mine valuable information. Watch for access to Confluence repositories performed by privileged users (for example, Active Directory Domain, Enterprise, or Schema Administrators) as these types of accounts should generally not be used to access information repositories. If the capability exists, it may be of value to monitor and alert on users that are retrieving and viewing a large number of documents and pages; this behavior may be indicative of programmatic means being used to retrieve all data within the repository. In environments with high-maturity, it may be possible to leverage User-Behavioral Analytics (UBA) platforms to detect and alert on user based anomalies.&lt;br /&gt;['T1204']: Monitor for third-party application logging, messaging, and/or other artifacts that may rely upon specific actions by a user in order to gain execution.&lt;br /&gt;['T1133']: When authentication is not required to access an exposed remote service, monitor for follow-on activities such as anomalous external use of the exposed API or application.&lt;br /&gt;['T1027.005']: The first detection of a malicious tool may trigger an anti-virus or other security tool alert. Similar events may also occur at the boundary through network IDS, email scanning appliance, etc. The initial detection should be treated as an indication of a potentially more invasive intrusion. The alerting system should be thoroughly investigated beyond that initial alert for activity that was not detected. Adversaries may continue with an operation, assuming that individual events like an anti-virus detect will not be investigated or that an analyst will not be able to conclusively link that event to other activity occurring on the network.&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Confluence Logs" url="https://confluence.atlassian.com/doc/working-with-confluence-logs-108364721.html"/>
            <reference name="Mitre ATT&amp;CK Data Source DS0015" url="https://attack.mitre.org/datasources/DS0015"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:01.289">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-M1047" name="Audit" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>Perform audits or scans of systems, permissions, insecure software, insecure configurations, etc. to identify potential weaknesses.&lt;br /&gt;&lt;p&gt;Detailed mitigations per technique:&lt;/p&gt;&lt;br /&gt;['T1484']: Identify and correct GPO permissions abuse opportunities (ex: GPO modification privileges) using auditing tools such as [BloodHound](https://attack.mitre.org/software/S0521) (version 1.5.1 and later)(Citation: GitHub Bloodhound).&lt;br /&gt;['T1059.006']: Inventory systems for unauthorized Python installations.&lt;br /&gt;['T1482']: Map the trusts within existing domains/forests and keep trust relationships to a minimum.&lt;br /&gt;['T1053.003']: Review changes to the &lt;code&gt;cron&lt;/code&gt; schedule. &lt;code&gt;cron&lt;/code&gt; execution can be reviewed within the &lt;code&gt;/var/log&lt;/code&gt; directory. To validate the location of the &lt;code&gt;cron&lt;/code&gt; log file, check the syslog config at &lt;code&gt;/etc/rsyslog.conf&lt;/code&gt; or &lt;code&gt;/etc/syslog.conf&lt;/code&gt; &lt;br /&gt;['T1574.005', 'T1574.010']: Use auditing tools capable of detecting file system permissions abuse opportunities on systems within an enterprise and correct them. Toolkits like the PowerSploit framework contain PowerUp modules that can be used to explore systems for service file system permissions weaknesses.(Citation: Powersploit)&lt;br /&gt;['T1076']: Audit the Remote Desktop Users group membership regularly. Remove unnecessary accounts and groups from Remote Desktop Users groups&lt;br /&gt;['T1505.005', 'T1505']: Regularly check component software on critical services that adversaries may target for persistence to verify the integrity of the systems and identify if unexpected changes have been made.&lt;br /&gt;['T1176']:  Ensure extensions that are installed are the intended ones as many malicious extensions will masquerade as legitimate ones.&lt;br /&gt;['T1484.001']: Identify and correct GPO permissions abuse opportunities (ex: GPO modification privileges) using auditing tools such as [BloodHound](https://attack.mitre.org/software/S0521) (version 1.5.1 and later).(Citation: GitHub Bloodhound)&lt;br /&gt;['T1505.001', 'T1505.002']: Regularly check component software on critical services that adversaries may target for persistence to verify the integrity of the systems and identify if unexpected changes have been made. &lt;br /&gt;['T1574.009', 'T1574.008', 'T1574.007']: Find and eliminate path interception weaknesses in program configuration files, scripts, the PATH environment variable, services, and in shortcuts by surrounding PATH variables with quotation marks when functions allow for them. Be aware of the search order Windows uses for executing or loading binaries and use fully qualified paths wherever appropriate.

Clean up old Windows Registry keys when software is uninstalled to avoid keys with no associated legitimate binaries. Periodically search for and correct or report path interception weaknesses on systems that may have been introduced using custom or available tools that report software using insecure path configurations.(Citation: Microsoft CreateProcess)(Citation: Microsoft Dynamic-Link Library Security)(Citation: Vulnerability and Exploit Detector)&lt;br /&gt;['T1044']: Use auditing tools capable of detecting file system permissions abuse opportunities on systems within an enterprise and correct them. Toolkits like the PowerSploit framework contain PowerUp modules that can be used to explore systems for service file system permissions weaknesses. (Citation: Powersploit)&lt;br /&gt;['T1021.001', 'T1563.002']: Audit the Remote Desktop Users group membership regularly. Remove unnecessary accounts and groups from Remote Desktop Users groups.&lt;br /&gt;['T1564.008']: Enterprise email solutions may have monitoring mechanisms that may include the ability to audit inbox rules on a regular basis. 

In an Exchange environment, Administrators can use &lt;code&gt;Get-InboxRule&lt;/code&gt; to discover and remove potentially malicious inbox rules.(Citation: Microsoft Get-InboxRule)&lt;br /&gt;['T1548.002', 'T1548']: Check for common UAC bypass weaknesses on Windows systems to be aware of the risk posture and address issues where appropriate.(Citation: Github UACMe)&lt;br /&gt;['T1558.004']: Kerberos preauthentication is enabled by default. Older protocols might not support preauthentication therefore it is possible to have this setting disabled. Make sure that all accounts have preauthentication whenever possible and audit changes to setting. Windows tools such as PowerShell may be used to easily find which accounts have preauthentication disabled.  (Citation: Microsoft Preauthentication Jul 2012)(Citation: Stealthbits Cracking AS-REP Roasting Jun 2019)&lt;br /&gt;['T1053.002']: Toolkits like the PowerSploit framework contain PowerUp modules that can be used to explore systems for permission weaknesses in scheduled tasks that could be used to escalate privileges. (Citation: Powersploit) Windows operating system also creates a registry key specifically associated with the creation of a scheduled task on the destination host at: Microsoft\Windows NT\CurrentVersion\Schedule\TaskCache\Tree\At1. (Citation: Secureworks - AT.exe Scheduled Task) In Linux and macOS environments, scheduled tasks using &lt;code&gt;[at](https://attack.mitre.org/software/S0110)&lt;/code&gt; can be audited locally, or through centrally collected logging, using syslog, or auditd events from the host. (Citation: Kifarunix - Task Scheduling in Linux)&lt;br /&gt;['T1543.003']: Use auditing tools capable of detecting privilege and service abuse opportunities on systems within an enterprise and correct them. &lt;br /&gt;['T1552.006']: Search SYSVOL for any existing GGPs that may contain credentials and remove them.(Citation: ADSecurity Finding Passwords in SYSVOL)&lt;br /&gt;['T1528']: Administrators should audit all cloud and container accounts to ensure that they are necessary and that the permissions granted to them are appropriate.  Additionally, administrators should perform an audit of all OAuth applications and the permissions they have been granted to access organizational data. This should be done extensively on all applications in order to establish a baseline, followed up on with periodic audits of new or updated applications. Suspicious applications should be investigated and removed.&lt;br /&gt;['T1574']: Use auditing tools capable of detecting hijacking opportunities on systems within an enterprise and correct them. Toolkits like the PowerSploit framework contain PowerUp modules that can be used to explore systems for hijacking weaknesses.(Citation: Powersploit)

Use the program sxstrace.exe that is included with Windows along with manual inspection to check manifest files for side-loading vulnerabilities in software.

Find and eliminate path interception weaknesses in program configuration files, scripts, the PATH environment variable, services, and in shortcuts by surrounding PATH variables with quotation marks when functions allow for them. Be aware of the search order Windows uses for executing or loading binaries and use fully qualified paths wherever appropriate.

Clean up old Windows Registry keys when software is uninstalled to avoid keys with no associated legitimate binaries. Periodically search for and correct or report path interception weaknesses on systems that may have been introduced using custom or available tools that report software using insecure path configurations.(Citation: Microsoft CreateProcess)(Citation: Microsoft Dynamic-Link Library Security)(Citation: Vulnerability and Exploit Detector)&lt;br /&gt;['T1610']: Scan images before deployment, and block those that are not in compliance with security policies. In Kubernetes environments, the admission controller can be used to validate images after a container deployment request is authenticated but before the container is deployed.(Citation: Kubernetes Hardening Guide)&lt;br /&gt;['T1031', 'T1543']: Use auditing tools capable of detecting privilege and service abuse opportunities on systems within an enterprise and correct them.&lt;br /&gt;['T1606.001']: Administrators should perform an audit of all access lists and the permissions they have been granted to access web applications and services. This should be done extensively on all resources in order to establish a baseline, followed up on with periodic audits of new or updated resources. Suspicious accounts/credentials should be investigated and removed.&lt;br /&gt;['T1213.001']: Consider periodic review of accounts and privileges for critical and sensitive Confluence repositories.&lt;br /&gt;['T1566.002']: Audit applications and their permissions to ensure access to data and resources are limited based upon necessity and principle of least privilege.&lt;br /&gt;['T1546.006', 'T1161']: Binaries can also be baselined for what dynamic libraries they require, and if an app requires a new dynamic library that wasn\u2019t included as part of an update, it should be investigated.&lt;br /&gt;['T1213.002']: Consider periodic review of accounts and privileges for critical and sensitive SharePoint repositories.&lt;br /&gt;['T1578.001']: Routinely check user permissions to ensure only the expected users have the capability to create snapshots and backups.&lt;br /&gt;['T1021.005']: Inventory workstations for unauthorized VNC server software.&lt;br /&gt;['T1145', 'T1552.004']: Ensure only authorized keys are allowed access to critical resources and audit access lists regularly.&lt;br /&gt;['T1550.001']: Administrators should audit all cloud and container accounts to ensure that they are necessary and that the permissions granted to them are appropriate. Where possible, the ability to request temporary account tokens on behalf of another accounts should be disabled. Additionally, administrators can leverage audit tools to monitor actions that can be conducted as a result of OAuth 2.0 access. For instance, audit reports enable admins to identify privilege escalation actions such as role creations or policy modifications, which could be actions performed after initial access.&lt;br /&gt;['T1606.002']: Enable advanced auditing on AD FS. Check the success and failure audit options in the AD FS Management snap-in. Enable Audit Application Generated events on the AD FS farm via Group Policy Object.(Citation: FireEye ADFS)&lt;br /&gt;['T1053.004']: Audit logging for &lt;code&gt;launchd&lt;/code&gt; events in MacOS can be reviewed or centrally collected using multiple options, such as syslog, OpenBSM, or OSquery.&lt;br /&gt;['T1087.004']: Routinely check user permissions to ensure only the expected users have the ability to list IAM identities or otherwise discover cloud accounts.&lt;br /&gt;['T1578']: Routinely monitor user permissions to ensure only the expected users have the capability to modify cloud compute infrastructure components.&lt;br /&gt;['T1560.001', 'T1560']: System scans can be performed to identify unauthorized archival utilities.&lt;br /&gt;['T1073', 'T1574.002']: Use the program sxstrace.exe that is included with Windows along with manual inspection to check manifest files for side-loading vulnerabilities in software.&lt;br /&gt;['T1213.003']: Consider periodic reviews of accounts and privileges for critical and sensitive code repositories. Scan code repositories for exposed credentials or other sensitive information.&lt;br /&gt;['T1088']: Check for common UAC bypass weaknesses on Windows systems to be aware of the risk posture and address issues where appropriate. (Citation: Github UACMe)&lt;br /&gt;['T1562.007']: Routinely check account role permissions to ensure only expected users and roles have permission to modify cloud firewalls. &lt;br /&gt;['T1552.002', 'T1214']: Proactively search for credentials within the Registry and attempt to remediate the risk.&lt;br /&gt;['T1053', 'T1053.005']: Toolkits like the PowerSploit framework contain PowerUp modules that can be used to explore systems for permission weaknesses in scheduled tasks that could be used to escalate privileges. (Citation: Powersploit)&lt;br /&gt;['T1505.004']: Regularly check installed IIS components to verify the integrity of the web server and identify if unexpected changes have been made.&lt;br /&gt;['T1562.002']: Consider periodic review of &lt;code&gt;auditpol&lt;/code&gt; settings for Administrator accounts and perform dynamic baselining on SIEM(s) to investigate potential malicious activity. Also ensure that the EventLog service and its threads are properly running.&lt;br /&gt;['T1038']: Use auditing tools capable of detecting DLL search order hijacking opportunities on systems within an enterprise and correct them. Toolkits like the PowerSploit framework contain PowerUp modules that can be used to explore systems for DLL hijacking weaknesses.(Citation: Powersploit)&lt;br /&gt;['T1552']: Preemptively search for files containing passwords or other credentials and take actions to reduce the exposure risk when found.&lt;br /&gt;['T1578.002']: Routinely check user permissions to ensure only the expected users have the capability to create new instances.&lt;br /&gt;['T1034']: Find and eliminate path interception weaknesses in program configuration files, scripts, the PATH environment variable, services, and in shortcuts by surrounding PATH variables with quotation marks when functions allow for them (Citation: Microsoft CreateProcess). Be aware of the search order Windows uses for executing or loading binaries and use fully qualified paths wherever appropriate (Citation: MSDN DLL Security). 

Clean up old Windows Registry keys when software is uninstalled to avoid keys with no associated legitimate binaries. Periodically search for and correct or report path interception weaknesses on systems that may have been introduced using custom or available tools that report software using insecure path configurations. (Citation: Kanthak Sentinel)&lt;br /&gt;['T1542.004']: Periodically check the integrity of system image to ensure it has not been modified. (Citation: Cisco IOS Software Integrity Assurance - Image File Integrity) (Citation: Cisco IOS Software Integrity Assurance - Image File Verification) (Citation: Cisco IOS Software Integrity Assurance - Change Control) &lt;br /&gt;['T1574.001']: Use auditing tools capable of detecting DLL search order hijacking opportunities on systems within an enterprise and correct them. Toolkits like the PowerSploit framework contain PowerUp modules that can be used to explore systems for DLL hijacking weaknesses.(Citation: Powersploit)

Use the program sxstrace.exe that is included with Windows along with manual inspection to check manifest files for side-by-side problems in software.(Citation: Microsoft Sxstrace)&lt;br /&gt;['T1204.003', 'T1612']: Audit images deployed within the environment to ensure they do not contain any malicious components.&lt;br /&gt;['T1578.003']: Routinely check user permissions to ensure only the expected users have the capability to delete new instances.&lt;br /&gt;['T1527']: Administrators can set up a variety of logs and leverage audit tools to monitor actions that can be conducted as a result of OAuth 2.0 access. For instance, audit reports enable admins to identify privilege escalation actions such as role creations or policy modifications, which could be actions performed after initial access.&lt;br /&gt;['T1114.003']: Enterprise email solutions have monitoring mechanisms that may include the ability to audit auto-forwarding rules on a regular basis.

In an Exchange environment, Administrators can use Get-InboxRule to discover and remove potentially malicious auto-forwarding rules.(Citation: Microsoft Tim McMichael Exchange Mail Forwarding 2). In addition to this, a MAPI Editor can be utilized to examine the underlying database structure and discover any modifications/tampering of the properties of auto-forwarding rules.(Citation: Pfammatter - Hidden Inbox Rules)&lt;br /&gt;['T1114']: Enterprise email solutions have monitoring mechanisms that may include the ability to audit auto-forwarding rules on a regular basis.

In an Exchange environment, Administrators can use Get-InboxRule to discover and remove potentially malicious auto-forwarding rules.(Citation: Microsoft Tim McMichael Exchange Mail Forwarding 2) &lt;br /&gt;['T1606']: Administrators should perform an audit of all access lists and the permissions they have been granted to access web applications and services. This should be done extensively on all resources in order to establish a baseline, followed up on with periodic audits of new or updated resources. Suspicious accounts/credentials should be investigated and removed.
 
Enable advanced auditing on ADFS. Check the success and failure audit options in the ADFS Management snap-in. Enable Audit Application Generated events on the AD FS farm via Group Policy Object.(Citation: FireEye ADFS)&lt;br /&gt;['T1552.001', 'T1081']: Preemptively search for files containing passwords and take actions to reduce the exposure risk when found.&lt;br /&gt;['T1530']: Frequently check permissions on cloud storage to ensure proper permissions are set to deny open or unprivileged access to resources.(Citation: Amazon S3 Security, 2019)&lt;br /&gt;['T1543.004']: Use auditing tools capable of detecting folder permissions abuse opportunities on systems, especially reviewing changes made to folders by third-party software.&lt;br /&gt;['T1213']: Consider periodic review of accounts and privileges for critical and sensitive repositories.&lt;br /&gt;['T1542.005']: Periodically check the integrity of the running configuration and system image to ensure they have not been modified. (Citation: Cisco IOS Software Integrity Assurance - Image File Verification) (Citation: Cisco IOS Software Integrity Assurance - Image File Integrity) (Citation: Cisco IOS Software Integrity Assurance - Change Control) &lt;br /&gt;['T1525']: Periodically check the integrity of images and containers used in cloud deployments to ensure they have not been modified to include malicious software.&lt;br /&gt;['T1053.001']: Scheduled tasks using &lt;code&gt;[at](https://attack.mitre.org/software/S0110)&lt;/code&gt; can be audited locally, or through centrally collected logging, using syslog, or auditd events from the host. (Citation: Kifarunix - Task Scheduling in Linux)&lt;br /&gt;['T1078']: Routinely audit source code, application configuration files, open repositories, and public cloud storage for insecure use and storage of credentials.&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Mitre ATT&amp;CK Mitigation M1047" url="https://attack.mitre.org/mitigations/M1047"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:01.580">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-DS0017" name="Command" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>A directive given to a computer program, acting as an interpreter of some kind, in order to perform a specific task(Citation: Confluence Linux Command  Line)(Citation: Audit OSX)&lt;br /&gt;&lt;p&gt;Detailed detections per technique:&lt;/p&gt;&lt;br /&gt;['T1041']: Monitor executed commands and arguments that may steal data by exfiltrating it over an existing command and control channel.&lt;br /&gt;['T1555.003']: Monitor executed commands and arguments that may acquire credentials from web browsers by reading files specific to the target browser.(Citation: Talos Olympic Destroyer 2018)&lt;br /&gt;['T1134.001']: Monitor executed commands and arguments to detect token manipulation by auditing command-line activity. Specifically, analysts should look for use of the runas command. Detailed command-line logging is not enabled by default in Windows.(Citation: Microsoft Command-line Logging)&lt;br /&gt;['T1218.013']: Adversaries may rename abusable binaries to evade detections, but the argument &lt;code&gt;INJECTRUNNING&lt;/code&gt; is required for mavinject.exe to perform [Dynamic-link Library Injection](https://attack.mitre.org/techniques/T1055/001) and may therefore be monitored to alert malicious activity.&lt;br /&gt;['T1548.001']: Monitor for execution of utilities, like chmod, and their command-line arguments to look for setuid or setguid bits being set.&lt;br /&gt;['T1218.011']: Command arguments used with the rundll32.exe invocation may also be useful in determining the origin and purpose of the DLL being loaded.&lt;br /&gt;['T1218.008']: Command arguments used before and after the invocation of odbcconf.exe may also be useful in determining the origin and purpose of the DLL being loaded.&lt;br /&gt;['T1218.009']: Command arguments used before and after Regsvcs.exe or Regasm.exe invocation may also be useful in determining the origin and purpose of the binary being executed.&lt;br /&gt;['T1547.005']: Monitor executed commands and arguments that may abuse security support providers (SSPs) to execute DLLs when the system boots.&lt;br /&gt;['T1218.012']: Command arguments used before and after the invocation of verclsid.exe may also be useful in determining the origin and purpose of the payload being executed.&lt;br /&gt;['T1542.005']: Monitor executed commands and arguments in command history in either the console or as part of the running memory to determine if unauthorized or suspicious commands were used to modify device configuration.&lt;br /&gt;['T1546.001']: Monitor executed commands and arguments that may establish persistence by executing malicious content triggered by a file type association.&lt;br /&gt;['T1564.004']: The Streams tool of Sysinternals can be used to uncover files with ADSs. The &lt;code&gt;dir /r&lt;/code&gt; command can also be used to display ADSs. (Citation: Symantec ADS May 2009) Many PowerShell commands (such as Get-Item, Set-Item, Remove-Item, and Get-ChildItem) can also accept a &lt;code&gt;-stream&lt;/code&gt; parameter to interact with ADSs. (Citation: MalwareBytes ADS July 2015) (Citation: Microsoft ADS Mar 2014)&lt;br /&gt;['T1069.003']: Monitor for executed commands and arguments that may attempt to find cloud groups and permission settings. &lt;br /&gt;['T1087.002']: Monitor for execution of commands and arguments associated with enumeration or information gathering of domain accounts and groups, such as &lt;code&gt;net user /domain&lt;/code&gt; and &lt;code&gt;net group /domain&lt;/code&gt;, &lt;code&gt;dscacheutil -q group&lt;/code&gt;on macOS, and &lt;code&gt;ldapsearch&lt;/code&gt; on Linux.

System and network discovery techniques normally occur throughout an operation as an adversary learns the environment, and also to an extent in normal network operations. Therefore discovery data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.&lt;br /&gt;['T1037.005']: Monitor executed commands and arguments for logon scripts&lt;br /&gt;['T1011.001']: Monitor executed commands and arguments that may attempt to exfiltrate data over Bluetooth rather than the command and control channel.&lt;br /&gt;['T1127']: Monitor executed commands and arguments used before and after invocation of the utilities may also be useful in determining the origin and purpose of the binary being executed.&lt;br /&gt;['T1020']: Monitor executed commands and arguments that may exfiltrate data, such as sensitive documents, through the use of automated processing after being gathered during Collection&lt;br /&gt;['T1547.004']: Monitor executed commands and arguments that may abuse features of Winlogon to execute DLLs and/or executables when a user logs in.&lt;br /&gt;['T1003.003']: Monitor executed commands and arguments that may attempt to access or create a copy of the Active Directory domain database in order to steal credential information, as well as obtain other information about domain members such as devices, users, and access rights. Look for command-lines that invoke attempts to access or copy the NTDS.dit.&lt;br /&gt;['T1484.002']: Monitor executed commands and arguments that updates domain authentication from Managed to Federated via ActionTypes &lt;code&gt;Set federation settings on domain&lt;/code&gt; and &lt;code&gt;Set domain authentication&lt;/code&gt;.(Citation: Microsoft - Azure Sentinel ADFSDomainTrustMods) Monitor for PowerShell commands such as: &lt;code&gt;Update-MSOLFederatedDomain -DomainName: "Federated Domain Name"&lt;/code&gt;, or &lt;code&gt;Update-MSOLFederatedDomain -DomainName: "Federated Domain Name" -supportmultipledomain&lt;/code&gt;.(Citation: Microsoft - Update or Repair Federated domain)&lt;br /&gt;['T1609']: Monitor commands and arguments executed by container services. In Docker, the daemon log provides insight into events at the daemon and container service level. Kubernetes system component logs may also detect activities running in and out of containers in the cluster.&lt;br /&gt;['T1560']: Monitor executed commands and arguments for actions that will aid in compression or encrypting data that is collected prior to exfiltration, such as tar. &lt;br /&gt;['T1033']: Monitor executed commands and arguments that may attempt to dump credentials to obtain account login and credential material, normally in the form of a hash or a clear text password, from the operating system and software. Look for command-lines that invoke AuditD or the Security Accounts Manager (SAM). Remote access tools may contain built-in features or incorporate existing tools like [Mimikatz](https://attack.mitre.org/software/S0002). [PowerShell](https://attack.mitre.org/techniques/T1059/001) scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module, (Citation: Powersploit) which may require additional logging features to be configured in the operating system to collect necessary information for analysis.&lt;br /&gt;['T1547.001']: Monitor executed commands and arguments that may achieve persistence by adding a program to a startup folder or referencing it with a Registry run key.&lt;br /&gt;['T1543.002']: Suspicious systemd services can also be identified by comparing results against a trusted system baseline. Malicious systemd services may be detected by using the systemctl utility to examine system wide services: &lt;code&gt;systemctl list-units --type=service -all&lt;/code&gt;. Auditing the execution and command-line arguments of the 'systemctl' utility, as well related utilities such as &lt;code&gt;/usr/sbin/service&lt;/code&gt; may reveal malicious systemd service execution.&lt;br /&gt;['T1546.007']: Monitor executed commands and arguments that may establish persistence by executing malicious content triggered by Netsh Helper DLLs.&lt;br /&gt;['T1018']: Monitor executed commands and arguments that may attempt to get a listing of other systems by IP address, hostname, or other logical identifier on a network that may be used for Lateral Movement from the current system&lt;br /&gt;['T1070.001']: Monitor executed commands and arguments for actions that would delete Windows event logs (via PowerShell)&lt;br /&gt;['T1053.002']: Monitor executed commands and arguments for actions that could be taken to create/modify tasks. Tasks may also be created through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001), so additional logging may need to be configured to gather the appropriate data.&lt;br /&gt;['T1003.002']: Monitor executed commands and arguments that may attempt to extract credential material from the Security Account Manager (SAM) database either through in-memory techniques or through the Windows Registry where the SAM database is stored.&lt;br /&gt;['T1547.006']: Loading, unloading, and manipulating modules on Linux systems can be detected by monitoring for the following commands: &lt;code&gt;modprobe&lt;/code&gt;, &lt;code&gt;insmod&lt;/code&gt;, &lt;code&gt;lsmod&lt;/code&gt;, &lt;code&gt;rmmod&lt;/code&gt;, or &lt;code&gt;modinfo&lt;/code&gt; (Citation: Linux Loadable Kernel Module Insert and Remove LKMs) Adversaries may run commands on the target system before loading a malicious module in order to ensure that it is properly compiled. (Citation: iDefense Rootkit Overview) Adversaries may also execute commands to identify the exact version of the running Linux kernel and/or download multiple versions of the same .ko (kernel object) files to use the one appropriate for the running system.(Citation: Trend Micro Skidmap) Many LKMs require Linux headers (specific to the target kernel) in order to compile properly. These are typically obtained through the operating systems package manager and installed like a normal package.

On macOS, monitor for execution of &lt;code&gt;kextload&lt;/code&gt; commands and user installed kernel extensions performing abnormal and/or potentially malicious activity (such as creating network connections). Monitor for new rows added in the &lt;code&gt;kext_policy&lt;/code&gt; table. KextPolicy stores a list of user approved (non Apple) kernel extensions and a partial history of loaded kernel modules in a SQLite database, &lt;code&gt;/var/db/SystemPolicyConfiguration/KextPolicy&lt;/code&gt;.(Citation: User Approved Kernel Extension Pike's)(Citation: Purves Kextpocalypse 2)(Citation: Apple Developer Configuration Profile)&lt;br /&gt;['T1552.004']: Monitor executed commands and arguments that may search for private key certificate files on compromised systems for insecurely stored credentials.&lt;br /&gt;['T1489']: Monitor executed commands and arguments that may stop or disable services on a system to render those services unavailable to legitimate users.&lt;br /&gt;['T1216']: Monitor executed commands and arguments for scripts like PubPrn.vbs that may be used to proxy execution of malicious files.&lt;br /&gt;['T1098.004']: Monitor executed commands and arguments to modify the authorized_keys or /etc/ssh/sshd_config files.&lt;br /&gt;['T1552.007']: Establish centralized logging for the activity of container and Kubernetes cluster components. Monitor logs for actions that could be taken to gather credentials to container and cloud infrastructure, including the use of discovery API calls by new or unexpected users and APIs that access Docker logs.&lt;br /&gt;['T1546.013']: Monitor abnormal PowerShell commands, unusual loading of PowerShell drives or modules.&lt;br /&gt;['T1113']: Monitor executed commands and arguments that may attempt to take screen captures of the desktop to gather information over the course of an operation.&lt;br /&gt;['T1547.002']: Monitor executed commands and arguments that may abuse authentication packages to execute DLLs when the system boots.&lt;br /&gt;['T1027.004']: Monitor executed commands and arguments for actions that could be taken to gather common compilers, such as csc.exe and GCC/MinGW, and correlate with other suspicious behavior to reduce false positives from normal user and administrator behavior.&lt;br /&gt;['T1562.006']: Monitor executed commands and arguments that may attempt to block indicators or events typically captured by sensors from being gathered and analyzed.&lt;br /&gt;['T1553.004']: Monitor for commands, such as &lt;code&gt;security add-trusted-cert&lt;/code&gt; (macOS) or &lt;code&gt;certutil -addstore&lt;/code&gt; (Windows), that can be used to install root certificates. A system's root certificates are unlikely to change frequently. Monitor new certificates installed on a system that could be due to malicious activity. (Citation: SpectorOps Code Signing Dec 2017) Check pre-installed certificates on new systems to ensure unnecessary or suspicious certificates are not present. Microsoft provides a list of trustworthy root certificates online and through &lt;code&gt;authroot.stl&lt;/code&gt;. (Citation: SpectorOps Code Signing Dec 2017) The Sysinternals Sigcheck utility can also be used (&lt;code&gt;sigcheck[64].exe -tuv&lt;/code&gt;) to dump the contents of the certificate store and list valid certificates not rooted to the Microsoft Certificate Trust List. (Citation: Microsoft Sigcheck May 2017)&lt;br /&gt;['T1547.014']: Monitor executed commands and arguments that may achieve persistence by adding a Registry key to the Active Setup of the local machine.&lt;br /&gt;['T1114.001']: Monitor executed commands and arguments for actions that could be taken to gather local email files. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.&lt;br /&gt;['T1059.004']: Monitor executed commands and arguments that may abuse Unix shell commands and scripts for execution. Unix shell usage may be common on administrator, developer, or power user systems, depending on job function. If scripting is restricted for normal users, then any attempt to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.&lt;br /&gt;['T1123']: Monitor executed commands and arguments for actions that can leverage a computer's peripheral devices (e.g., microphones and webcams) or applications (e.g., voice and video call services) to capture audio recordings for the purpose of listening into sensitive conversations to gather information.&lt;br /&gt;['T1647']: Monitor for commands with arguments (such as opening common command-line editors) used to modify plist files, especially commonly abused files such as those in &lt;code&gt;\~/LaunchAgents&lt;/code&gt;, &lt;code&gt;\~/Library/Application Support/com.apple.backgroundtaskmanagementagent/backgrounditems.btm&lt;/code&gt;, and an application's &lt;code&gt;Info.plist&lt;/code&gt;.&lt;br /&gt;['T1553.001']: Monitor and investigate attempts to modify extended file attributes with utilities such as &lt;code&gt;xattr&lt;/code&gt;. Built-in system utilities may generate high false positive alerts, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible. &lt;br /&gt;['T1546.010']: Monitor executed commands and arguments that may establish persistence and/or elevate privileges by executing malicious content triggered by AppInit DLLs loaded into processes.&lt;br /&gt;['T1098']: Monitor executed commands and arguments for suspicious commands to modify accounts or account settings (including files such as the authorized_keys or /etc/ssh/sshd_config).

Monitor executed commands and arguments of suspicious commands (such as Add-MailboxPermission) that may be indicative of modifying the permissions of Exchange and other related service settings.&lt;br /&gt;['T1222.001']: Monitor for executed commands and arguments for PowerShell cmdlets that can be used to retrieve or modify file and directory DACLs.&lt;br /&gt;['T1562.010']: Monitor for commands or other activity that may be indicative of attempts to abuse older or deprecated technologies (ex: &lt;code&gt;powershell -v 2&lt;/code&gt;).&lt;br /&gt;['T1112']:  Monitor executed commands and arguments for actions that could be taken to change, conceal, and/or delete information in the Registry. The Registry may also be modified through Windows system management tools such as Windows Management Instrumentation and PowerShell, which may require additional logging features to be configured in the operating system to collect necessary information for analysis.&lt;br /&gt;['T1547']: Monitor executed commands and arguments that may configure system settings to automatically execute a program during system boot or logon to maintain persistence or gain higher-level privileges on compromised systems.&lt;br /&gt;['T1070.005']: Monitor executed commands and arguments of net use commands associated with establishing and removing remote shares over SMB, including following best practices for detection of Windows Admin Shares.&lt;br /&gt;['T1555.001']: Monitor executed commands with arguments that may be used to collect Keychain data from a system to acquire credentials.&lt;br /&gt;['T1574.006']: Monitor executed commands and arguments associated with modifications to variables and files associated with loading shared libraries such as LD_PRELOAD on Linux and DYLD_INSERT_LIBRARIES on macOS.&lt;br /&gt;['T1482']: Monitor executed commands and arguments for actions that could be taken to gather system and network information, such as nltest /domain_trusts. Remote access tools with built-in features may interact directly with the Windows API to gather information.&lt;br /&gt;['T1546.006']: Monitor executed commands and arguments that may establish persistence by executing malicious content triggered by the execution of tainted binaries.&lt;br /&gt;['T1552']: While detecting adversaries accessing credentials may be difficult without knowing they exist in the environment, it may be possible to detect adversary use of credentials they have obtained. Monitor the command-line arguments of executing processes for suspicious words or regular expressions that may indicate searching for a password (for example: password, pwd, login, secure, or credentials). See [Valid Accounts](https://attack.mitre.org/techniques/T1078) for more information.&lt;br /&gt;['T1059.008']: Consider reviewing command history in either the console or as part of the running memory to determine if unauthorized or suspicious commands were used to modify device configuration. (Citation: Cisco IOS Software Integrity Assurance - Command History) Consider comparing a copy of the network device configuration against a known-good version to discover unauthorized changes to the command interpreter. The same process can be accomplished through a comparison of the run-time memory, though this is non-trivial and may require assistance from the vendor.&lt;br /&gt;['T1025']: Monitor executed commands and arguments for actions that could be taken to collect files from a system's connected removable media. For example, data may be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.&lt;br /&gt;['T1555.004']: Monitor executed commands and arguments of &lt;code&gt;vaultcmd.exe&lt;/code&gt; for suspicious activity, such as listing credentials from the Windows Credentials locker (i.e., &lt;code&gt;vaultcmd /listcreds:"Windows Credentials"&lt;/code&gt;).(Citation: Malwarebytes The Windows Vault)&lt;br /&gt;['T1218.014']: Monitor executed commands and arguments that may gather information about the victim's DNS that can be used during targeting.&lt;br /&gt;['T1037']: Monitor executed commands and arguments that may consist of logon scripts for unusual access by abnormal users or at abnormal times.&lt;br /&gt;['T1548']: Monitor executed commands and arguments that may circumvent mechanisms designed to control elevate privileges to gain higher-level permissions.&lt;br /&gt;['T1048.001']: Monitor executed commands and arguments that may steal data by exfiltrating it over a symmetrically encrypted network protocol other than that of the existing command and control channel.&lt;br /&gt;['T1562.002']: Monitor executed commands and arguments for commands that can be used to disable logging. For example, [Wevtutil](https://attack.mitre.org/software/S0645), auditpol, sc stop EventLog, and offensive tooling (such as [Mimikatz](https://attack.mitre.org/software/S0002) and Invoke-Phant0m) may be used to clear logs.(Citation: def_ev_win_event_logging)(Citation: evt_log_tampering)&lt;br /&gt;['T1567.001']: Monitor executed command and arguments that may exfiltrate data to a code repository rather than over their primary command and control channel.&lt;br /&gt;['T1048']: Monitor executed commands and arguments that may steal data by exfiltrating it over a different protocol than that of the existing command and control channel.&lt;br /&gt;['T1564.003']: Monitor executed commands and arguments that may use hidden windows to conceal malicious activity from the plain sight of users. In Windows, enable and configure event logging and PowerShell logging to check for the hidden window style.&lt;br /&gt;['T1555.002']: Monitor executed commands and arguments that may obtain root access (allowing them to read securityd's memory), then they can scan through memory to find the correct sequence of keys in relatively few tries to decrypt the user's logon keychain.&lt;br /&gt;['T1546.004']: Monitor executed commands and arguments that may establish persistence through executing malicious commands triggered by a user's shell.&lt;br /&gt;['T1197']: Monitor executed commands and arguments from the BITSAdmin tool (especially the 'Transfer', 'Create', 'AddFile', 'SetNotifyFlags', 'SetNotifyCmdLine', 'SetMinRetryDelay', 'SetCustomHeaders', and 'Resume' command options)(Citation: Microsoft BITS) Admin logs, PowerShell logs, and the Windows Event log for BITS activity.(Citation: Elastic - Hunting for Persistence Part 1) Also consider investigating more detailed information about jobs by parsing the BITS job database.(Citation: CTU BITS Malware June 2016)&lt;br /&gt;['T1134.002']: Monitor executed commands and arguments to detect token manipulation by auditing command-line activity. Specifically, analysts should look for use of the runas command or similar artifacts. Detailed command-line logging is not enabled by default in Windows.(Citation: Microsoft Command-line Logging)&lt;br /&gt;['T1059.005']: Monitor executed commands and arguments that may abuse Visual Basic (VB) for execution.&lt;br /&gt;['T1553.006']: Monitor for the execution of commands that could modify the code signing policy of a system, such as &lt;code&gt;bcdedit.exe -set TESTSIGNING ON&lt;/code&gt;. (Citation: Microsoft TESTSIGNING Feb 2021)&lt;br /&gt;['T1569.001']: Monitor command-line execution of the &lt;code&gt;launchctl&lt;/code&gt; command immediately followed by abnormal network connections.&lt;br /&gt;['T1070']: Monitor executed commands and arguments that may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined malware.&lt;br /&gt;['T1546.011']: Monitor executed commands and arguments for sdbinst.exe for potential indications of application shim abuse.&lt;br /&gt;['T1563.001']: Monitor executed commands and arguments that may hijack a legitimate user's SSH session to move laterally within an environment.&lt;br /&gt;['T1053.005']: Monitor executed commands and arguments for actions that could be taken to gather tasks may also be created through Windows system management tools such as Windows Management Instrumentation and PowerShell, so additional logging may need to be configured to gather the appropriate data.&lt;br /&gt;['T1562']: Monitor executed commands and arguments that may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms.&lt;br /&gt;['T1010']: Monitor executed commands and arguments for actions that could be taken to gather system and network information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.&lt;br /&gt;['T1137.001']: Monitor executed commands and arguments that may abuse Microsoft Office templates to obtain persistence on a compromised system.&lt;br /&gt;['T1484.001']: Monitor executed commands and arguments that may modify Group Policy Objects (GPOs) to subvert the intended discretionary access controls for a domain, usually with the intention of escalating privileges on the domain.&lt;br /&gt;['T1546.012']: Monitor executed commands and arguments that may establish persistence and/or elevate privileges by executing malicious content triggered by Image File Execution Options (IFEO) debuggers.&lt;br /&gt;['T1134']: Monitor executed commands and arguments for token manipulation by auditing command-line activity. Specifically, analysts should look for use of the &lt;code&gt;runas&lt;/code&gt; command. Detailed command-line logging is not enabled by default in Windows.(Citation: Microsoft Command-line Logging)&lt;br /&gt;['T1563']: Monitor executed commands and arguments that may take control of preexisting sessions with remote services to move laterally in an environment.&lt;br /&gt;['T1574.011']: Monitor for the execution of commands and arguments that can be used for adversaries to modify services' registry keys and values through applications such as Windows Management Instrumentation and PowerShell. Additional logging may need to be configured to gather the appropriate data.&lt;br /&gt;['T1125']: Monitor executed commands and arguments that can leverage a computer's peripheral devices (e.g., integrated cameras or webcams) or applications (e.g., video call services) to capture video recordings for the purpose of gathering information.&lt;br /&gt;['T1546.009']: Monitor executed commands and arguments that may establish persistence and/or elevate privileges by executing malicious content triggered by AppCert DLLs loaded into processes.&lt;br /&gt;['T1204.003']: Monitor executed commands and arguments that may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior.&lt;br /&gt;['T1007']: Monitor executed commands and arguments that could be taken to gather system information related to services. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).&lt;br /&gt;['T1003.007']: Monitor executed commands and arguments that may gather credentials from information stored in the Proc filesystem or &lt;code&gt;/proc&lt;/code&gt;.&lt;br /&gt;['T1059.002']: Monitor executed commands and arguments that may abuse AppleScript for execution. Scripts are likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used.  Actions may be related to network and system information [Discovery](https://attack.mitre.org/tactics/TA0007), [Collection](https://attack.mitre.org/tactics/TA0009), or other scriptable post-compromise behaviors and could be used as indicators of detection leading back to the source script.&lt;br /&gt;['T1222.002']: Many of the commands used to modify ACLs and file/directory ownership are built-in system utilities and may generate a high false positive alert rate, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible. Commonly abused command arguments include &lt;code&gt;chmod +x&lt;/code&gt;, &lt;code&gt;chmod -R 755&lt;/code&gt;, and &lt;code&gt;chmod 777&lt;/code&gt;.(Citation: 20 macOS Common Tools and Techniques)&lt;br /&gt;['T1558']: Monitor executed commands and arguments that may attempt to subvert Kerberos authentication by stealing or forging Kerberos tickets to enable [Pass the Ticket](https://attack.mitre.org/techniques/T1550/003).&lt;br /&gt;['T1136.002']: Monitor executed commands and arguments for actions that are associated with local account creation, such as net user /add /domain.&lt;br /&gt;['T1490']: Use process monitoring to monitor the execution and command line parameters of binaries involved in inhibiting system recovery, such as vssadmin, wbadmin, and bcdedit.&lt;br /&gt;['T1546.008']: Monitor executed commands and arguments that may establish persistence and/or elevate privileges by executing malicious content triggered by accessibility features. Command line invocation of tools capable of modifying the Registry for associated keys are also suspicious. Utility arguments and the binaries themselves should be monitored for changes.&lt;br /&gt;['T1547.013']: Monitor executed commands and arguments that may modify XDG autostart entries to execute programs or commands during system boot.&lt;br /&gt;['T1016']: Monitor executed commands and arguments that may look for details about the network configuration and settings, such as IP and/or MAC addresses, of systems they access or through information discovery of remote systems.&lt;br /&gt;['T1497']: Monitor executed commands and arguments that may employ various means to detect and avoid virtualization and analysis environments. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary's implementation and monitoring required.&lt;br /&gt;['T1564']: Monitor executed commands and arguments that may attempt to hide artifacts associated with their behaviors to evade detection.&lt;br /&gt;['T1136']: Monitor executed commands and arguments for actions that are associated with account creation, such as net user or useradd&lt;br /&gt;['T1547.007']: Monitor executed commands and arguments that may modify plist files to automatically run an application when a user logs in.&lt;br /&gt;['T1218.002']: When executed from the command line or clicked, control.exe will execute the CPL file (ex: &lt;code&gt;control.exe file.cpl&lt;/code&gt;) before [Rundll32](https://attack.mitre.org/techniques/T1218/011) is used to call the CPL's API functions (ex: &lt;code&gt;rundll32.exe shell32.dll,Control_RunDLL file.cpl&lt;/code&gt;). CPL files can be executed directly via the CPL API function with just the latter [Rundll32](https://attack.mitre.org/techniques/T1218/011) command, which may bypass detections and/or execution filters for control.exe.(Citation: TrendMicro CPL Malware Jan 2014)&lt;br /&gt;['T1570']: Monitor executed commands and arguments for actions for abnormal usage of utilities and command-line arguments that may be used in support of remote transfer of files&lt;br /&gt;['T1555.005']: Monitor executed commands and arguments that may acquire user credentials from third-party password managers. (Citation: ise Password Manager February 2019)&lt;br /&gt;['T1039']: Monitor executed commands and arguments for actions that could be taken to collect files from a network share. Remote access tools with built-in features may interact directly with the Windows API to gather and copy to a location. Data may also be acquired and staged through Windows system management tools such as Windows Management Instrumentation and PowerShell.&lt;br /&gt;['T1069']: Monitor executed commands and arguments acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.&lt;br /&gt;['T1497.003']: Monitor executed commands and arguments that may employ various time-based methods to detect and avoid virtualization and analysis environments. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary's implementation and monitoring required.&lt;br /&gt;['T1137.002']: Monitor executed commands and arguments that may abuse the Microsoft Office "Office Test" Registry key to obtain persistence on a compromised system.&lt;br /&gt;['T1564.008']: On Windows systems, monitor for creation of suspicious inbox rules through the use of the &lt;code&gt;New-InboxRule&lt;/code&gt; and &lt;code&gt;Set-InboxRule&lt;/code&gt; PowerShell cmdlets.(Citation: Microsoft BEC Campaign)&lt;br /&gt;['T1021']: Monitor executed commands and arguments that may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to log into a service specifically designed to accept remote connections, such as telnet, SSH, and VNC. The adversary may then perform actions as the logged-on user.&lt;br /&gt;['T1553']: Command monitoring may reveal malicious attempts to modify trust settings, such as the installation of root certificates or modifications to trust attributes/policies applied to files.&lt;br /&gt;['T1563.002']: monitor service creation that uses cmd.exe /k or cmd.exe /c in its arguments to detect RDP session hijacking.&lt;br /&gt;['T1548.002']: Monitor executed commands and arguments that may bypass UAC mechanisms to elevate process privileges on system.&lt;br /&gt;['T1036.003']: Monitor executed commands and arguments for actions that could be taken to gather...&lt;br /&gt;['T1543.003']: Monitor processes and command-line arguments for actions that could create or modify services. Command-line invocation of tools capable of adding or modifying services may be unusual, depending on how systems are typically used in a particular environment. Services may also be modified through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001), so additional logging may need to be configured to gather the appropriate data. Also collect service utility execution and service binary path arguments used for analysis. Service binary paths may even be changed to execute commands or scripts.&lt;br /&gt;['T1217']: Monitor executed commands and arguments for actions that could be taken to gather browser bookmark information. Remote access tools with built-in features may interact directly using APIs to gather information. Information may also be acquired through system management tools such as Windows Management Instrumentation and PowerShell.&lt;br /&gt;['T1135']: Monitor executed commands and arguments that may look for folders and drives shared on remote systems as a means of identifying sources of information to gather as a precursor for Collection and to identify potential systems of interest for Lateral Movement.&lt;br /&gt;['T1567']: Monitor executed commands and arguments that may use an existing, legitimate external Web service to exfiltrate data rather than their primary command and control channel.&lt;br /&gt;['T1202']: Monitor executed commands and arguments to bypass security restrictions that limit the use of command-line interpreters. &lt;br /&gt;['T1561']: Monitor for direct access read/write attempts using the &lt;code&gt;\\\\.\\&lt;/code&gt; notation.(Citation: Microsoft Sysmon v6 May 2017) Monitor for unusual kernel driver installation activity.&lt;br /&gt;['T1059.003']: Monitor executed commands and arguments that may abuse the Windows command shell for execution. Usage of the Windows command shell may be common on administrator, developer, or power user systems depending on job function. If scripting is restricted for normal users, then any attempt to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.&lt;br /&gt;['T1548.003']: Monitor executed commands and arguments that may perform sudo caching and/or use the suoders file to elevate privileges, such as the &lt;code&gt;sudo&lt;/code&gt; command.&lt;br /&gt;['T1480.001']: Monitor executed commands and arguments that may gather the victim's physical location(s) that can be used during targeting. Detecting the use of environmental keying may be difficult depending on the implementation.&lt;br /&gt;['T1546.005']: Monitor executed commands and arguments that may establish persistence by executing malicious content triggered by an interrupt signal.&lt;br /&gt;['T1082']: Monitor executed commands and arguments that may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture.&lt;br /&gt;['T1564.002']: Monitor executed commands and arguments that could be taken to add a new user and subsequently hide it from login screens.&lt;br /&gt;['T1057']: Monitor executed commands and arguments for actions that may attempt to get information about running processes on a system.&lt;br /&gt;['T1110']: Monitor executed commands and arguments that may use brute force techniques to gain access to accounts when passwords are unknown or when password hashes are obtained.&lt;br /&gt;['T1218.010']: Command arguments used before and after the regsvr32.exe invocation may also be useful in determining the origin and purpose of the script or DLL being loaded. (Citation: Carbon Black Squiblydoo Apr 2016)&lt;br /&gt;['T1484']: Monitor executed commands and arguments for modifications to domain trust settings, such as when a user or application modifies the federation settings on the domain or updates domain authentication from Managed to Federated via ActionTypes &lt;code&gt;Set federation settings on domain&lt;/code&gt; and &lt;code&gt;Set domain authentication&lt;/code&gt;.(Citation: Microsoft - Azure Sentinel ADFSDomainTrustMods)(Citation: Microsoft 365 Defender Solorigate)&lt;br /&gt;['T1562.003']: Correlating a user session with a distinct lack of new commands in their &lt;code&gt;.bash_history&lt;/code&gt; can be a clue to suspicious behavior. Monitor for modification of PowerShell command history settings through processes being created with &lt;code&gt;-HistorySaveStyle SaveNothing&lt;/code&gt; command-line arguments and use of the PowerShell commands &lt;code&gt;Set-PSReadlineOption -HistorySaveStyle SaveNothing&lt;/code&gt; and &lt;code&gt;Set-PSReadLineOption -HistorySavePath {File Path}&lt;/code&gt;.&lt;br /&gt;['T1518']: Monitor executed commands and arguments that may attempt to get a listing of software and software versions that are installed on a system or in a cloud environment.&lt;br /&gt;['T1505.004']: Monitor execution and command-line arguments of &lt;code&gt;AppCmd.exe&lt;/code&gt;, which may be abused to install malicious IIS modules.(Citation: Microsoft IIS Modules Overview 2007)(Citation: Unit 42 RGDoor Jan 2018)(Citation: ESET IIS Malware 2021)&lt;br /&gt;['T1552.006']: Monitor executed commands and arguments that may search for SYSVOL data and/or GPP XML files, especially on compromised domain controllers.&lt;br /&gt;['T1040']: Monitor executed commands and arguments for actions that aid in sniffing network traffic to capture information about an environment, including authentication material passed over the network&lt;br /&gt;['T1218.005']: Look for mshta.exe executing raw or obfuscated script within the command-line. Compare recent invocations of mshta.exe with prior history of known good arguments and executed .hta files to determine anomalous and potentially adversarial activity. Command arguments used before and after the mshta.exe invocation may also be useful in determining the origin and purpose of the .hta file being executed.&lt;br /&gt;['T1056.002']: Monitor executed commands and arguments, such as requests for credentials and/or strings related to creating password prompts that may be malicious.(Citation: Spoofing credential dialogs)&lt;br /&gt;['T1505.005']: Monitor executed commands and arguments for potential adversary actions to modify Registry values (ex: &lt;code&gt;reg.exe&lt;/code&gt;) or modify/replace the legitimate &lt;code&gt;termsrv.dll&lt;/code&gt;.&lt;br /&gt;['T1069.002']: Monitor for executed commands and arguments that may attempt to find domain-level groups and permission settings.&lt;br /&gt;['T1562.009']: Monitor executed commands and arguments associated with making configuration changes to boot settings, such as &lt;code&gt;bcdedit.exe&lt;/code&gt; and &lt;code&gt;bootcfg.exe&lt;/code&gt;.(Citation: Microsoft bcdedit 2021)(Citation: Microsoft Bootcfg)(Citation: Sophos Snatch Ransomware 2019)&lt;br /&gt;['T1552.001']: While detecting adversaries accessing these files may be difficult without knowing they exist in the first place, it may be possible to detect adversary use of credentials they have obtained. Monitor executed commands and arguments of executing processes for suspicious words or regular expressions that may indicate searching for a password (for example: password, pwd, login, secure, or credentials). See [Valid Accounts](https://attack.mitre.org/techniques/T1078) for more information.&lt;br /&gt;['T1087.004']: Monitor logs for actions that could be taken to gather information about cloud accounts, including the use of calls to cloud APIs that perform account discovery.

System and network discovery techniques normally occur throughout an operation as an adversary learns the environment, and also to an extent in normal network operations. Therefore discovery data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.&lt;br /&gt;['T1027']: Monitor executed commands and arguments containing indicators of obfuscation and known suspicious syntax such as uninterpreted escape characters like '''^''' and '''"'''. Deobfuscation tools can be used to detect these indicators in files/payloads. (Citation: GitHub Revoke-Obfuscation) (Citation: FireEye Revoke-Obfuscation July 2017) (Citation: GitHub Office-Crackros Aug 2016)&lt;br /&gt;['T1201']: Monitor executed commands and arguments for actions that may attempt to access detailed information about the password policy used within an enterprise network or cloud environment.&lt;br /&gt;['T1547.003']: Monitor executed commands and arguments that may abuse time providers to execute DLLs when the system boots.&lt;br /&gt;['T1555']: Monitor executed commands and arguments that may search for common password storage locations to obtain user credentials.&lt;br /&gt;['T1552.002']: Monitor executed commands and arguments that may search the Registry on compromised systems for insecurely stored credentials.&lt;br /&gt;['T1562.001']: Monitor for the execution of commands and arguments associated with disabling or modification of security software processes or services such as &lt;code&gt;Set-MpPreference-DisableScriptScanning 1&lt;/code&gt; in Windows,&lt;code&gt;sudo spctl --master-disable&lt;/code&gt; in macOS, and &lt;code&gt;setenforce 0&lt;/code&gt; in Linux.&lt;br /&gt;['T1546.002']: Monitor executed commands and arguments of .scr files.&lt;br /&gt;['T1562.004']: Monitor executed commands and arguments associated with disabling or the modification of system firewalls such as &lt;code&gt;netsh advfirewall firewall set rule group="file and printer sharing" new enable=Yes&lt;/code&gt;,&lt;code&gt;ufw disable&lt;/code&gt;, and &lt;code&gt;ufw logging off&lt;/code&gt;.&lt;br /&gt;['T1546.014']: Monitor executed commands and arguments that may gain persistence and elevate privileges by executing malicious content triggered by the Event Monitor Daemon (emond).&lt;br /&gt;['T1074.002']: Monitor executed commands and arguments arguments for actions that could be taken to collect and combine files. Remote access tools with built-in features may interact directly with the Windows API to gather and copy to a location. Data may also be acquired and staged through Windows system management tools such as Windows Management Instrumentation and PowerShell.&lt;br /&gt;['T1486']: Monitor executed commands and arguments for actions involved in data destruction activity, such as vssadmin, wbadmin, and bcdedit&lt;br /&gt;['T1561.002']: Monitor executed commands and arguments that may corrupt or wipe the disk data structures on a hard drive necessary to boot a system; targeting specific critical systems or in large numbers in a network to interrupt availability to system and network resources.&lt;br /&gt;['T1556.005']: Monitor command-line usage for &lt;code&gt;-AllowReversiblePasswordEncryption $true&lt;/code&gt; or other actions that could be related to malicious tampering of user settings (i.e. [Group Policy Modification](https://attack.mitre.org/techniques/T1484/001)). &lt;br /&gt;['T1021.006']: Monitor executed commands and arguments that may invoke a WinRM script to correlate it with other related events.(Citation: Medium Detecting Lateral Movement)&lt;br /&gt;['T1564.001']: Monitor the file system and shell commands for files being created with a leading "." and the Windows command-line use of attrib.exe to add the hidden attribute.&lt;br /&gt;['T1615']: Monitor for suspicious use of &lt;code&gt;gpresult&lt;/code&gt;. Monitor for the use of PowerShell functions such as &lt;code&gt;Get-DomainGPO&lt;/code&gt; and &lt;code&gt;Get-DomainGPOLocalGroup&lt;/code&gt; and processes spawning with command-line arguments containing &lt;code&gt;GPOLocalGroup&lt;/code&gt;.&lt;br /&gt;['T1529']: Monitor executed commands and arguments of binaries involved in shutting down or rebooting systems.&lt;br /&gt;['T1053.006']: Monitor executed commands and arguments the 'systemd-run' utility as it may be used to create timers&lt;br /&gt;['T1137.004']: Monitor executed commands and arguments that may abuse Microsoft Outlook's Home Page feature to obtain persistence on a compromised system. Microsoft has released a PowerShell script to safely gather mail forwarding rules and custom forms in your mail environment as well as steps to interpret the output.(Citation: Microsoft Detect Outlook Forms)&lt;br /&gt;['T1037.002']: Monitor executed commands with arguments to install or modify login hooks.&lt;br /&gt;['T1037.004']: Monitor executed commands and arguments resulting from RC scripts for unusual or unknown applications or behavior&lt;br /&gt;['T1070.004']: Monitor executed commands and arguments for actions that could be utilized to unlink, rename, or delete files.&lt;br /&gt;['T1614']: Monitor executed commands and arguments that may gather information in an attempt to calculate the geographical location of a victim host.&lt;br /&gt;['T1083']: Monitor executed commands and arguments that may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system.&lt;br /&gt;['T1137.003']: Monitor executed commands and arguments that may abuse Microsoft Outlook forms to obtain persistence on a compromised system. Microsoft has released a PowerShell script to safely gather mail forwarding rules and custom forms in your mail environment as well as steps to interpret the output.(Citation: Microsoft Detect Outlook Forms)&lt;br /&gt;['T1543.001']: Ensure Launch Agent's &lt;code&gt; ProgramArguments &lt;/code&gt; key pointing to executables located in the &lt;code&gt;/tmp&lt;/code&gt; or &lt;code&gt;/shared&lt;/code&gt; folders are in alignment with enterprise policy. Ensure all Launch Agents with the &lt;code&gt;RunAtLoad&lt;/code&gt; key set to &lt;code&gt;true&lt;/code&gt; are in alignment with policy.&lt;br /&gt;['T1059']: Monitor command-line arguments for script execution and subsequent behavior. Actions may be related to network and system information Discovery, Collection, or other scriptable post-compromise behaviors and could be used as indicators of detection leading back to the source script. Scripts are likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. &lt;br /&gt;['T1119']: Monitor executed commands and arguments for actions that could be taken to collect internal data.&lt;br /&gt;['T1016.001']: Monitor executed commands and arguments that may check for Internet connectivity on compromised systems.&lt;br /&gt;['T1137.005']: Monitor executed commands and arguments that may abuse Microsoft Outlook rules to obtain persistence on a compromised system. Microsoft has released a PowerShell script to safely gather mail forwarding rules and custom forms in your mail environment as well as steps to interpret the output.(Citation: Microsoft Detect Outlook Forms) This PowerShell script is ineffective in gathering rules with modified PR_RULE_MSG_NAME and PR_RULE_MSG_PROVIDER properties caused by adversaries using a Microsoft Exchange Server Messaging API Editor (MAPI Editor), so only examination with the Exchange Administration tool MFCMapi can reveal these mail forwarding rules.(Citation: Pfammatter - Hidden Inbox Rules)&lt;br /&gt;['T1137.006']: Monitor executed commands and arguments that may abuse Microsoft Office add-ins to obtain persistence on a compromised system. &lt;br /&gt;['T1218.001']: Monitor executed commands and arguments that may forge SAML tokens with any permissions claims and lifetimes if they possess a valid SAML token-signing certificate.(Citation: Microsoft SolarWinds Steps)&lt;br /&gt;['T1012']: Monitor executed commands and arguments for actions that may interact with the Windows Registry to gather information about the system, configuration, and installed software.&lt;br /&gt;['T1003.004']: Monitor executed commands and arguments that may access to a host may attempt to access Local Security Authority (LSA) secrets. Remote access tools may contain built-in features or incorporate existing tools like Mimikatz. PowerShell scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module,(Citation: Powersploit) which may require additional logging features to be configured in the operating system to collect necessary information for analysis.&lt;br /&gt;['T1204']: Monitor the execution of and command-line arguments for applications that may be used by an adversary to gain Initial Access that require user interaction. This includes compression applications, such as those for zip files, that can be used to [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140) in payloads.&lt;br /&gt;['T1543.004']: Some legitimate LaunchDaemons point to unsigned code that could be exploited. For Launch Daemons with the &lt;code&gt;RunAtLoad&lt;/code&gt; parameter set to true, ensure the &lt;code&gt;Program&lt;/code&gt; parameter points to signed code or executables are in alignment with enterprise policy. Some parameters are interchangeable with others, such as &lt;code&gt;Program&lt;/code&gt; and &lt;code&gt;ProgramArguments&lt;/code&gt; parameters but one must be present. (Citation: launchd Keywords for plists)&lt;br /&gt;['T1496']: Monitor executed commands and arguments that may indicate common cryptomining functionality &lt;br /&gt;['T1574.012']: Extra scrutiny should be placed on suspicious modification of Registry keys such as COR_ENABLE_PROFILING, COR_PROFILER, and COR_PROFILER_PATH by command line tools like wmic.exe, setx.exe, and [Reg](https://attack.mitre.org/software/S0075). Monitoring for command-line arguments indicating a change to COR_PROFILER variables may aid in detection.&lt;br /&gt;['T1046']: Monitor executed commands and arguments that may attempt to get a listing of services running on remote hosts, including those that may be vulnerable to remote software exploitation.&lt;br /&gt;['T1222']: Many of the commands used to modify ACLs and file/directory ownership are built-in system utilities and may generate a high false positive alert rate, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible.&lt;br /&gt;['T1115']: Monitor executed commands and arguments to collect data stored in the clipboard from users copying information within or between applications.&lt;br /&gt;['T1087.003']: Monitor for execution of commands and arguments associated with enumeration or information gathering of email addresses and accounts such as &lt;code&gt;Get-AddressList&lt;/code&gt;, &lt;code&gt;Get-GlobalAddressList&lt;/code&gt;, and &lt;code&gt;Get-OfflineAddressBook&lt;/code&gt;.&lt;br /&gt;['T1052']: Monitor executed commands and arguments that may attempt to exfiltrate data via a physical medium, such as a removable drive.&lt;br /&gt;['T1552.003']: While users do typically rely on their history of commands, they often access this history through other utilities like "history" instead of commands like &lt;code&gt;cat ~/.bash_history&lt;/code&gt;.&lt;br /&gt;['T1003.005']: Monitor executed commands and arguments that may attempt to access cached domain credentials used to allow authentication to occur in the event a domain controller is unavailable.(Citation: Microsoft - Cached Creds). Remote access tools may contain built-in features or incorporate existing tools like Mimikatz. PowerShell scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module,(Citation: Powersploit) which may require additional logging features to be configured in the operating system to collect necessary information for analysis.
Detection of compromised https://attack.mitre.org/techniques/T1078 in-use by adversaries may help as well.&lt;br /&gt;['T1546']: Monitor executed commands and arguments that may establish persistence and/or elevate privileges using system mechanisms that trigger execution based on specific events.&lt;br /&gt;['T1036.004']: Monitor executed commands and arguments that may attempt to manipulate the name of a task or service to make it appear legitimate or benign.&lt;br /&gt;['T1059.006']: Monitor systems for abnormal Python usage and python.exe behavior, which could be an indicator of malicious activity. Understanding standard usage patterns is important to avoid a high number of false positives. If scripting is restricted for normal users, then any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent. Scripts are likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Monitor executed commands and arguments that may abuse Python commands and scripts for execution.&lt;br /&gt;['T1053']: Monitor executed commands and arguments that may abuse task scheduling functionality to facilitate initial or recurring execution of malicious code.&lt;br /&gt;['T1087']: Monitor logs and other sources of command execution history for actions that could be taken to gather information about accounts, including the use of calls to cloud APIs that perform account discovery.

System and network discovery techniques normally occur throughout an operation as an adversary learns the environment, and also to an extent in normal network operations. Therefore discovery data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.&lt;br /&gt;['T1480']: Monitor executed commands and arguments that may gather information about the victim's business relationships that can be used during targeting. Detecting the use of guardrails may be difficult depending on the implementation.&lt;br /&gt;['T1176']: Monitor executed commands and arguments for usage of the profiles tool, such as profiles install -type=configuration.&lt;br /&gt;['T1003.001']: Monitor executed commands and arguments that may attempt to access credential material stored in the process memory of the Local Security Authority Subsystem Service (LSASS). Remote access tools may contain built-in features or incorporate existing tools like Mimikatz. PowerShell scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module,(Citation: Powersploit) which may require additional logging features to be configured in the operating system to collect necessary information for analysis.&lt;br /&gt;['T1218.003']: Monitor executed commands and arguments that may gather information about the victim's hosts that can be used during targeting.&lt;br /&gt;['T1136.001']: Monitor executed commands and arguments for actions that are associated with local account creation, such as net user /add , useradd , and dscl -create&lt;br /&gt;['T1021.002']: Monitor executed commands and arguments that connect to remote shares, such as [Net](https://attack.mitre.org/software/S0039), on the command-line interface and Discovery techniques that could be used to find remotely accessible systems.(Citation: Medium Detecting WMI Persistence)&lt;br /&gt;['T1059.001']: If proper execution policy is set, adversaries will likely be able to define their own execution policy if they obtain administrator or system access, either through the Registry or at the command line. This change in policy on a system may be a way to detect malicious use of PowerShell. If PowerShell is not used in an environment, then simply looking for PowerShell execution may detect malicious activity. It is also beneficial to turn on PowerShell logging to gain increased fidelity in what occurs during execution (which is applied to .NET invocations). (Citation: Malware Archaeology PowerShell Cheat Sheet) PowerShell 5.0 introduced enhanced logging capabilities, and some of those features have since been added to PowerShell 4.0. Earlier versions of PowerShell do not have many logging features.(Citation: FireEye PowerShell Logging 2016) An organization can gather PowerShell execution details in a data analytic platform to supplement it with other data.&lt;br /&gt;['T1070.002']: Monitor executed commands and arguments for actions that could be taken to remove or overwrite system logs.&lt;br /&gt;['T1005']: Monitor executed commands and arguments that may search and collect local system sources, such as file systems or local databases, to find files of interest and sensitive data prior to Exfiltration. Remote access tools with built-in features may interact directly with the Windows API to gather data. Data may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).&lt;br /&gt;['T1546.003']: Monitor executed commands and arguments that can be used to register WMI persistence, such as the &lt;code&gt; Register-WmiEvent&lt;/code&gt; [PowerShell](https://attack.mitre.org/techniques/T1059/001) cmdlet (Citation: Microsoft Register-WmiEvent)&lt;br /&gt;['T1518.001']: Monitor executed commands and arguments that may attempt to get a listing of security software, configurations, defensive tools, and sensors that are installed on a system or in a cloud environment.&lt;br /&gt;['T1003.008']: Monitor executed commands and arguments that may attempt to dump the contents of &lt;code&gt;/etc/passwd&lt;/code&gt; and &lt;code&gt;/etc/shadow&lt;/code&gt; to enable offline password cracking.&lt;br /&gt;['T1087.001']: Monitor for execution of commands and arguments associated with enumeration or information gathering of local accounts and groups such as &lt;code&gt;net user&lt;/code&gt;, &lt;code&gt;net account&lt;/code&gt;, &lt;code&gt;net localgroup&lt;/code&gt;, &lt;code&gt;Get-LocalUser&lt;/code&gt;, and &lt;code&gt; dscl&lt;/code&gt;.

System and network discovery techniques normally occur throughout an operation as an adversary learns the environment, and also to an extent in normal network operations. Therefore discovery data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.&lt;br /&gt;['T1036']: Monitor executed commands and arguments that may attempt to manipulate features of their artifacts to make them appear legitimate or benign to users and/or security tools. (Citation: Twitter ItsReallyNick Masquerading Update)&lt;br /&gt;['T1053.003']: Monitor executed atq command and ensure IP addresses stored in the SSH_CONNECTION and SSH_CLIENT variables, machines that created the jobs, are trusted hosts. All at jobs are stored in /var/spool/cron/atjobs/.&lt;br /&gt;['T1114']: Monitor executed processes and command-line arguments for actions that could be taken to gather local email files. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.&lt;br /&gt;['T1120']: Monitor executed commands and arguments that may attempt to gather information about attached peripheral devices and components connected to a computer system.&lt;br /&gt;['T1011']: Monitor executed commands and arguments that may attempt to exfiltrate data over a different network medium than the command and control channel&lt;br /&gt;['T1561.001']: Monitor executed commands and arguments that may erase the contents of storage devices on specific systems or in large numbers in a network to interrupt availability to system and network resources.&lt;br /&gt;['T1124']: Monitor executed commands and arguments for actions that may gather the system time and/or time zone from a local or remote system.&lt;br /&gt;['T1069.001']: Monitor for executed commands and arguments that may attempt to find local system groups and permission settings.&lt;br /&gt;['T1052.001']: Monitor executed commands and arguments that may attempt to exfiltrate data over a USB connected physical device.&lt;br /&gt;['T1564.009']: Monitor executed commands and arguments that are leveraging the use of resource forks, especially those immediately followed by potentially malicious activity such as creating network connections.&lt;br /&gt;['T1070.003']: Monitor executed commands and arguments for actions that could be taken to clear command history, such as &lt;code&gt;Clear-History&lt;/code&gt; on Windows, or to disable writing command history, such as &lt;code&gt;history -c&lt;/code&gt; in bash/zsh.&lt;br /&gt;['T1543']: Command-line invocation of tools capable of modifying services may be unusual, depending on how systems are typically used in a particular environment. Look for abnormal process call trees from known services and for execution of other commands that could relate to Discovery or other adversary techniques.&lt;br /&gt;['T1137']: Monitor executed commands and arguments that may leverage Microsoft Office-based applications for persistence between startups. Microsoft has released a PowerShell script to safely gather mail forwarding rules and custom forms in your mail environment as well as steps to interpret the output.(Citation: Microsoft Detect Outlook Forms) SensePost, whose tool [Ruler](https://attack.mitre.org/software/S0358) can be used to carry out malicious rules, forms, and Home Page attacks, has released a tool to detect Ruler usage.(Citation: SensePost NotRuler)&lt;br /&gt;['T1564.006']: Consider monitoring for commands and arguments that may be atypical for benign use of virtualization software. Usage of virtualization binaries or command-line arguments associated with running a silent installation may be especially suspect (ex. &lt;code&gt;-silent&lt;/code&gt;, &lt;code&gt;-ignore-reboot&lt;/code&gt;), as well as those associated with running a headless (in the background with no UI) virtual instance (ex. &lt;code&gt;VBoxManage startvm $VM --type headless&lt;/code&gt;).(Citation: Shadowbunny VM Defense Evasion) Similarly, monitoring command line arguments which suppress notifications may highlight potentially malicious activity (ex. &lt;code&gt;VBoxManage.exe setextradata global GUI/SuppressMessages "all"&lt;/code&gt;). Monitor for commands which enable hypervisors such as Hyper-V.&lt;br /&gt;['T1567.002']: Monitor executed commands and arguments that may exfiltrate data to a cloud storage service rather than over their primary command and control channel.&lt;br /&gt;['T1114.002']: Monitor executed commands and arguments for actions that may target an Exchange server, Office 365, or Google Workspace to collect sensitive information.&lt;br /&gt;['T1218.007']: Command arguments used before and after the invocation of msiexec.exe may also be useful in determining the origin and purpose of the MSI files or DLLs being executed.&lt;br /&gt;['T1047']: Monitor executed commands and arguments for actions that are used to perform remote behavior&lt;br /&gt;['T1569.002']: Monitor executed commands and arguments that may abuse the Windows service control manager to execute malicious commands or payloads.&lt;br /&gt;['T1006']: Monitor executed commands and arguments that could be taken to copy files from the logical drive and evade common file system protections. Since this technique may also be used through [PowerShell](https://attack.mitre.org/techniques/T1059/001), additional logging of PowerShell scripts is recommended.&lt;br /&gt;['T1614.001']: Monitor executed commands and arguments that may attempt to gather information about the system language of a victim in order to infer the geographical location of that host.&lt;br /&gt;['T1546.015']: Monitor executed commands and arguments that may establish persistence by executing malicious content triggered by hijacked references to Component Object Model (COM) objects.&lt;br /&gt;['T1049']: Monitor executed commands and arguments that may attempt to get a listing of network connections to or from the compromised system they are currently accessing or from remote systems by querying for information over the network. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).&lt;br /&gt;['T1569']: Monitor for command line invocations of tools capable of modifying services that doesn't correspond to normal usage patterns and known software, patch cycles, etc.&lt;br /&gt;['T1059.007']: Scripting execution is likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Monitor processes and command-line arguments for execution and subsequent behavior. Actions may be related to network and system information [Discovery](https://attack.mitre.org/tactics/TA0007), [Collection](https://attack.mitre.org/tactics/TA0009), or other programmable post-compromise behaviors and could be used as indicators of detection leading back to the source. Monitor for execution of JXA through &lt;code&gt;osascript&lt;/code&gt; and usage of &lt;code&gt;OSAScript&lt;/code&gt; API that may be related to other suspicious behavior occurring on the system. &lt;br /&gt;['T1622']: Monitor executed commands and arguments that may employ various means to detect and avoid debugged environments. Detecting actions related to debugger identification may be difficult depending on the adversary's implementation and monitoring required.&lt;br /&gt;['T1485']: Monitor executed commands and arguments for binaries that could be involved in data destruction activity, such as SDelete.&lt;br /&gt;['T1218.004']: Monitor executed commands and arguments used before and after the InstallUtil.exe invocation may also be useful in determining the origin and purpose of the binary being executed.&lt;br /&gt;['T1218']: Monitor executed commands and arguments that may forge credential materials that can be used to gain access to web applications or Internet services.&lt;br /&gt;['T1574']: Monitor executed commands and arguments that may execute their own malicious payloads by hijacking the way operating systems run programs.&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Audit OSX" url="https://www.scip.ch/en/?labs.20150108"/>
            <reference name="Confluence Linux Command  Line" url="https://confluence.atlassian.com/confkb/how-to-enable-command-line-audit-logging-in-linux-956166545.html"/>
            <reference name="Mitre ATT&amp;CK Data Source DS0017" url="https://attack.mitre.org/data-sources/DS0017"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:01.300">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-M1041" name="Encrypt Sensitive Information" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>Protect sensitive information with strong encryption.&lt;br /&gt;&lt;p&gt;Detailed mitigations per technique:&lt;/p&gt;&lt;br /&gt;['T1552', 'T1145', 'T1552.004']: When possible, store keys on separate cryptographic hardware instead of on the local system. &lt;br /&gt;['T1557.002', 'T1557', 'T1040', 'T1020.001']: Ensure that all wired and/or wireless traffic is encrypted appropriately. Use best practices for authentication protocols, such as Kerberos, and ensure web traffic that may contain credentials is protected by SSL/TLS.&lt;br /&gt;['T1070', 'T1070.001', 'T1070.002']: Obfuscate/encrypt event files locally and in transit to avoid giving feedback to an adversary.&lt;br /&gt;['T1602.002']: Configure SNMPv3 to use the highest level of security (authPriv) available.(Citation: US-CERT TA17-156A SNMP Abuse 2017) &lt;br /&gt;['T1003']: Ensure Domain Controller backups are properly secured.&lt;br /&gt;['T1565.002', 'T1493']: Encrypt all important data flows to reduce the impact of tailored modifications on data in transit.&lt;br /&gt;['T1565', 'T1565.001']: Consider encrypting important information to reduce an adversary's ability to perform tailored data modifications.&lt;br /&gt;['T1558', 'T1558.004', 'T1558.003', 'T1558.002']: Enable AES Kerberos encryption (or another stronger encryption algorithm), rather than RC4, where possible.(Citation: AdSecurity Cracking Kerberos Dec 2015)&lt;br /&gt;['T1530']: Encrypt data stored at rest in cloud storage.(Citation: Amazon S3 Security, 2019)(Citation: Microsoft Azure Storage Security, 2019) Managed encryption keys can be rotated by most providers. At a minimum, ensure an incident response plan to storage breach includes rotating the keys and test for impact on client applications.(Citation: Google Cloud Encryption Key Rotation)&lt;br /&gt;['T1492']: Consider encrypting important information to reduce an adversaries ability to perform tailored data modifications.&lt;br /&gt;['T1208']: Enable AES Kerberos encryption (or another stronger encryption algorithm), rather than RC4, where possible. (Citation: AdSecurity Cracking Kerberos Dec 2015)&lt;br /&gt;['T1114.002', 'T1114.003', 'T1114', 'T1114.001']: Use of encryption provides an added layer of security to sensitive information sent over email. Encryption using public key cryptography requires the adversary to obtain the private certificate along with an encryption key to decrypt messages.&lt;br /&gt;['T1602.001', 'T1602']: Configure SNMPv3 to use the highest level of security (authPriv) available.(Citation: US-CERT TA17-156A SNMP Abuse 2017)&lt;br /&gt;['T1119']: Encryption and off-system storage of sensitive information may be one way to mitigate collection of files, but may not stop an adversary from acquiring the information if an intrusion persists over a long period of time and the adversary is able to discover and access the data through other means. Strong passwords should be used on certain encrypted documents that use them to prevent offline cracking through [Brute Force](https://attack.mitre.org/techniques/T1110) techniques.&lt;br /&gt;['T1003.003']: Ensure Domain Controller backups are properly secured.(Citation: Metcalf 2015)&lt;br /&gt;['T1550.001', 'T1527']: File encryption should be enforced across email communications containing sensitive information that may be obtained through access to email services.&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Mitre ATT&amp;CK Mitigation M1041" url="https://attack.mitre.org/mitigations/M1041"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:02.247">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-DS0022" name="File" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>A computer resource object, managed by the I/O system, for storing data (such as images, text, videos, computer programs, or any wide variety of other media).(Citation: Microsoft File Mgmt)&lt;br /&gt;&lt;p&gt;Detailed detections per technique:&lt;/p&gt;&lt;br /&gt;['T1070.002']: Monitor for unexpected deletion of a system log file, typically stored in /var/logs or /Library/Logs. &lt;br /&gt;['T1485']: Monitor for unexpected deletion to a file (ex: Sysmon EID 23) &lt;br /&gt;['T1554']: Monitor for unexpected deletion of  client software binaries to establish persistent access to systems.&lt;br /&gt;['T1070']: Monitor for a file that may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined malware.&lt;br /&gt;['T1070.001']: Monitor for unexpected deletion of Windows event logs (via native binaries) and may also generate an alterable event (Event ID 1102: "The audit log was cleared")&lt;br /&gt;['T1565.003']: Monitor for unexpected deletion of a file in order to manipulate external outcomes or hide activity &lt;br /&gt;['T1490']: The Windows event logs, ex. Event ID 524 indicating a system catalog was deleted, may contain entries associated with suspicious activity.&lt;br /&gt;['T1070.003']: Monitor for unexpected deletion of a command history file, such as ConsoleHost_history.txt, ~/.zsh_history, or ~/.bash_history.&lt;br /&gt;['T1070.004']: Monitor for unexpected deletion of files from the system&lt;br /&gt;['T1552.006']: Monitor for attempts to access SYSVOL that involve searching for XML files.&lt;br /&gt;['T1114.001']: Monitor for unusual processes accessing local email files that may target user email on local systems to collect sensitive information.&lt;br /&gt;['T1074']: Monitor processes that appear to be reading files from disparate locations and writing them to the same directory or file may be an indication of data being staged, especially if they are suspected of performing encryption or compression on the files, such as 7zip, RAR, ZIP, or zlib.&lt;br /&gt;['T1555.004']: Consider monitoring file reads to Vault locations, &lt;code&gt;&amp;percnt;Systemdrive&amp;percnt;&amp;bsol;Users&amp;bsol;&amp;bsol;&amp;lsqb;Username&amp;rsqb;&amp;bsol;AppData&amp;bsol;Local&amp;bsol;Microsoft&amp;bsol;&amp;bsol;&amp;lsqb;Vault&amp;sol;Credentials&amp;rsqb;&amp;bsol;&lt;/code&gt;, for suspicious activity.(Citation: Malwarebytes The Windows Vault)&lt;br /&gt;['T1552.003']: Monitoring when the user's &lt;code&gt;.bash_history&lt;/code&gt; is read can help alert to suspicious activity.&lt;br /&gt;['T1187']: Monitor for unexpected files used to gather credentials when the files are rendered&lt;br /&gt;['T1011.001']: Monitor for files being accessed that could be related to exfiltration, such as file reads by a process that also has an active network connection. Also monitor for and investigate changes to host adapter settings, such as addition and/or replication of communication interfaces. &lt;br /&gt;['T1020']: Monitor for abnormal access to files (i.e. .pdf, .docx, .jpg, etc.), especially sensitive documents, through the use of automated processing after being gathered during Collection.&lt;br /&gt;['T1048.003']: Monitor files viewed in isolation that may steal data by exfiltrating it over a symmetrically encrypted network protocol other than that of the existing command and control channel.&lt;br /&gt;['T1091']: Monitor for unexpected files accessed on removable media.&lt;br /&gt;['T1555.005']: Monitor file reads that may acquire user credentials from third-party password managers.(Citation: ise Password Manager February 2019)&lt;br /&gt;['T1052']: Monitor file access on removable media that may attempt to exfiltrate data via a physical medium, such as a removable drive.&lt;br /&gt;['T1041']: Monitor for suspicious files (i.e. .pdf, .docx, .jpg, etc.) viewed in isolation that may steal data by exfiltrating it over an existing command and control channel.&lt;br /&gt;['T1555.003']: Identify web browser files that contain credentials such as Google Chrome's Login Data database file: &lt;code&gt;AppData\Local\Google\Chrome\User Data\Default\Login Data&lt;/code&gt;. Monitor file read events of web browser files that contain credentials, especially when the reading process is unrelated to the subject web browser.&lt;br /&gt;['T1018']: Monitor for files (such as &lt;code&gt;/etc/hosts&lt;/code&gt;) being accessed that may attempt to get a listing of other systems by IP address, hostname, or other logical identifier on a network that may be used for Lateral Movement from the current system&lt;br /&gt;['T1025']: Monitor for unexpected/abnormal file accesses to removable media (optical disk drive, USB memory, etc.) connected to the compromised system. &lt;br /&gt;['T1048.001']: Monitor for files viewed in isolation that may steal data by exfiltrating it over a symmetrically encrypted network protocol other than that of the existing command and control channel.&lt;br /&gt;['T1003.003']: Monitor for access or copy of the NTDS.dit.&lt;br /&gt;['T1003.002']: Monitor for hash dumpers opening the Security Accounts Manager (SAM) on the local file system (&lt;code&gt;%SystemRoot%/system32/config/SAM&lt;/code&gt;). Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromised [Valid Accounts](https://attack.mitre.org/techniques/T1078) in-use by adversaries may help as well.&lt;br /&gt;['T1003.007']: Monitor for unexpected access to passwords and hashes stored in memory, processes must open a maps file in the /proc filesystem for the process being analyzed. This file is stored under the path &lt;code&gt;/proc/\/maps&lt;/code&gt;, where the &lt;code&gt;\&lt;/code&gt; directory is the unique pid of the program being interrogated for such authentication data. The AuditD monitoring tool, which ships stock in many Linux distributions, can be used to watch for hostile processes opening this file in the proc file system, alerting on the pid, process name, and arguments of such programs.&lt;br /&gt;['T1003.008']: Monitor for files being accessed that may attempt to dump the contents of &lt;code&gt;/etc/passwd&lt;/code&gt; and &lt;code&gt;/etc/shadow&lt;/code&gt; to enable offline password cracking. The AuditD monitoring tool, which ships stock in many Linux distributions, can be used to watch for hostile processes attempting to access &lt;code&gt;/etc/passwd&lt;/code&gt; and &lt;code&gt;/etc/shadow&lt;/code&gt;, alerting on the pid, process name, and arguments of such programs.&lt;br /&gt;['T1555']: Monitor for files being accessed that may search for common password storage locations to obtain user credentials.&lt;br /&gt;['T1567']: Monitor for files being accessed by an existing, legitimate external Web service to exfiltrate data rather than their primary command and control channel.&lt;br /&gt;['T1539']: Monitor for an attempt by a user to gain access to a network or computing resource, often by providing credentials to cloud service management consoles. Some cloud providers, such as AWS, provide distinct log events for login attempts to the management console.&lt;br /&gt;['T1567.002']: Monitor for files being accessed to exfiltrate data to a cloud storage service rather than over their primary command and control channel.&lt;br /&gt;['T1114']: Monitor for unusual processes access of local system email files for Exfiltration, unusual processes connecting to an email server within a network, or unusual access patterns or authentication attempts on a public-facing webmail server may all be indicators of malicious activity.&lt;br /&gt;['T1048']: Monitor for suspicious files (i.e. .pdf, .docx, .jpg, etc.) viewed in isolation that may steal data by exfiltrating it over a different protocol than that of the existing command and control channel.&lt;br /&gt;['T1217']: Monitor for unexpected browser bookmarks viewed in isolation, this showcases part of a chain of behavior that could lead to other activities, such as Collection and Exfiltration, based on the information obtained.&lt;br /&gt;['T1052.001']: Monitor file access on removable media that may attempt to exfiltrate data over a USB connected physical device.&lt;br /&gt;['T1555.001']: Monitor for Keychain files being accessed that may be related to malicious credential collection.&lt;br /&gt;['T1033']: Monitor for hash dumpers opening the Security Accounts Manager (SAM) on the local file system (&lt;code&gt;%SystemRoot%/system32/config/SAM&lt;/code&gt;). Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromised  [Valid Accounts](https://attack.mitre.org/techniques/T1078) in-use by adversaries may help as well.&lt;br /&gt;['T1003']: Monitor for hash dumpers opening the Security Accounts Manager (SAM) on the local file system (&lt;code&gt;%SystemRoot%/system32/config/SAM&lt;/code&gt;). Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromised ( LinkById: T1078) in-use by adversaries may help as well.&lt;br /&gt;['T1119']: Monitor for unexpected files (i.e. .pdf, .docx, .jpg, etc.) viewed for collecting internal data.&lt;br /&gt;['T1039']: Monitor for unexpected files (i.e. .pdf, .docx, .jpg, etc.)  interacting with network shares.&lt;br /&gt;['T1552.004']: Monitor access to files and directories related to cryptographic keys and certificates as a means for potentially detecting access patterns that may indicate collection and exfiltration activity. &lt;br /&gt;['T1558']: Monitor for unexpected processes interacting with lsass.exe.(Citation: Medium Detecting Attempts to Steal Passwords from Memory) Common credential dumpers such as  [Mimikatz](https://attack.mitre.org/software/S0002) access the LSA Subsystem Service (LSASS) process by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details, including Kerberos tickets, are stored. Monitor for unusual processes accessing &lt;code&gt;secrets.ldb&lt;/code&gt; and &lt;code&gt;.secrets.mkey&lt;/code&gt; located in &lt;code&gt;/var/lib/sss/secrets/&lt;/code&gt;.&lt;br /&gt;['T1087']: Monitor access to file resources that contain local accounts and groups information such as &lt;code&gt;/etc/passwd&lt;/code&gt;, &lt;code&gt;/Users&lt;/code&gt; directories, and the SAM database. 

If access requires high privileges, look for non-admin objects (such as users or processes) attempting to access restricted file resources.&lt;br /&gt;['T1552']: Monitor for suspicious file access activity, specifically indications that a process is reading multiple files in a short amount of time and/or using command-line arguments indicative of searching for credential material (ex: regex patterns). These may be indicators of automated/scripted credential access behavior. Monitoring when the user's &lt;code&gt;.bash_history&lt;/code&gt; is read can help alert to suspicious activity. While users do typically rely on their history of commands, they often access this history through other utilities like "history" instead of commands like &lt;code&gt;cat ~/.bash_history&lt;/code&gt;.&lt;br /&gt;['T1011']: Monitor for files being accessed that could be related to exfiltration, such as file reads by a process that also has an active network connection.&lt;br /&gt;['T1567.001']: Monitor for files being accessed to exfiltrate data to a code repository rather than over their primary command and control channel.&lt;br /&gt;['T1087.001']: Monitor access to file resources that contain local accounts and groups information such as &lt;code&gt;/etc/passwd&lt;/code&gt;, &lt;code&gt;/Users&lt;/code&gt; directories, and the Windows SAM database. 

If access requires high privileges, look for non-admin objects (such as users or processes) attempting to access restricted file resources.&lt;br /&gt;['T1005']: Monitor for unexpected/abnormal access to files that may be malicious collection of local data, such as user files (pdf, .docx, .jpg, etc.) or local databases.&lt;br /&gt;['T1552.001']: Monitor for files being accessed that may search local file systems and remote file shares for files containing insecurely stored credentials. While detecting adversaries accessing these files may be difficult without knowing they exist in the first place, it may be possible to detect adversary use of credentials they have obtained. &lt;br /&gt;['T1053.005']: Monitor Windows Task Scheduler stores in %systemroot%\System32\Tasks for change entries related to scheduled tasks that do not correlate with known software, patch cycles, etc.&lt;br /&gt;['T1574.001']: Monitor for changed made to .manifest/.local redirection files, or file systems for moving, renaming, replacing, or modifying DLLs. Changes in the set of DLLs that are loaded by a process (compared with past behavior) that do not correlate with known software, patches, etc., are suspicious.&lt;br /&gt;['T1574.005']: Monitor for changes to binaries and service executables that may normally occur during software updates. &lt;br /&gt;['T1547.009']: Since a shortcut's target path likely will not change, modifications to shortcut files that do not correlate with known software changes, patches, removal, etc., may be suspicious. Analysis should attempt to relate shortcut file change events to other potentially suspicious events based on known adversary behavior such as process launches of unknown executables that make network connections.&lt;br /&gt;['T1037']: Monitor for changes made to files that are modified by unusual accounts outside of normal administration duties.&lt;br /&gt;['T1564.002']: Monitor for changes made to files that may use hidden users to mask the presence of user accounts they create or modify. Monitor for changes made to the &lt;code&gt;/Library/Preferences/com.apple.loginwindow&lt;/code&gt; plist file for unexpected modifications to the &lt;code&gt; Hide500Users&lt;/code&gt; key value on macOS.(Citation: Cybereason OSX Pirrit)&lt;br /&gt;['T1036']: Monitor for changes made to files outside of an update or patch that may attempt to manipulate features of their artifacts to make them appear legitimate or benign to users and/or security tools.&lt;br /&gt;['T1556.004']: Monitor for changes made to the checksum of the operating system file and verifying the image of the operating system in memory.(Citation: Cisco IOS Software Integrity Assurance - Image File Verification)(Citation: Cisco IOS Software Integrity Assurance - Run-Time Memory Verification) Detection of this behavior may be difficult, detection efforts may be focused on closely related adversary behaviors, such as Modify System Image.&lt;br /&gt;['T1600']: File Modification&lt;br /&gt;['T1548.003']: On Linux, auditd can alert every time a user's actual ID and effective ID are different (this is what happens when you sudo). This technique is abusing normal functionality in macOS and Linux systems, but sudo has the ability to log all input and output based on the &lt;code&gt;LOG_INPUT&lt;/code&gt; and &lt;code&gt;LOG_OUTPUT&lt;/code&gt; directives in the &lt;code&gt;/etc/sudoers&lt;/code&gt; file.&lt;br /&gt;['T1543.001']: Launch Agents also require files on disk for persistence which can also be monitored via other file monitoring applications.&lt;br /&gt;['T1053.003']: Monitor for changes made to files for unexpected modifications to access permissions and attributes &lt;br /&gt;['T1070']: Monitor for changes made to a file may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined malware.&lt;br /&gt;['T1056']: Monitor for changes made to files for unexpected modifications to access permissions and attributes  &lt;br /&gt;['T1546.011']: Monitor for changes made to files that may establish persistence and/or elevate privileges by executing malicious content triggered by application shims.&lt;br /&gt;['T1574.010']: Monitor for modification of binaries and service executables that do not occur during a regular software update or an update scheduled by the organization. Modification of files considers actions such as renaming and directory moving.&lt;br /&gt;['T1505']: Monitor for changes made to files that may abuse legitimate extensible development features of servers to establish persistent access to systems.&lt;br /&gt;['T1053.006']: Monitor for changes made to systemd timer unit files for unexpected modification events within the /etc/systemd/system, /usr/lib/systemd/system/, and ~/.config/systemd/user/ directories, as well as associated symbolic links&lt;br /&gt;['T1056.003']: Monitor for changes made to detect changes to files in the Web directory for organization login pages that do not match with authorized updates to the Web server's content.&lt;br /&gt;['T1546.002']: Monitor for changes made to files that may establish persistence by executing malicious content triggered by user inactivity.&lt;br /&gt;['T1546.013']: Locations where &lt;code&gt;profile.ps1&lt;/code&gt; can be stored should be monitored for modifications. (Citation: Malware Archaeology PowerShell Cheat Sheet) Example profile locations include:
* &lt;code&gt;$PsHome\Profile.ps1&lt;/code&gt;
* &lt;code&gt;$PsHome\Microsoft.{HostProgram}_profile.ps1&lt;/code&gt;
* &lt;code&gt;$Home\My Documents\PowerShell\Profile.ps1&lt;/code&gt;
* &lt;code&gt;$Home\My Documents\PowerShell\Microsoft.{HostProgram}_profile.ps1&lt;/code&gt;&lt;br /&gt;['T1564.003']: Monitor for changes made to files that may use hidden windows to conceal malicious activity from the plain sight of users. In MacOS, plist files are ASCII text files with a specific format, so they're relatively easy to parse. File monitoring can check for the &lt;code&gt;apple.awt.UIElement&lt;/code&gt; or any other suspicious plist tag in plist files and flag them.&lt;br /&gt;['T1547.001']: Monitor the start folder for additions or changes. Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including the startup folders. (Citation: TechNet Autoruns)&lt;br /&gt;['T1565.003']: Monitor for unexpected files with manipulated data in order to manipulate external outcomes or hide activity&lt;br /&gt;['T1070.006']: Monitor for unexpected modifications to file timestamps &lt;br /&gt;['T1489']: Monitor for changes made to files that may stop or disable services on a system to render those services unavailable to legitimate users.&lt;br /&gt;['T1564.005']: Detecting the use of a hidden file system may be exceptionally difficult depending on the implementation. Emphasis may be placed on detecting related aspects of the adversary lifecycle, such as how malware interacts with the hidden file system or how a hidden file system is loaded.&lt;br /&gt;['T1037.002']: Monitor for changes to login hook files (&lt;code&gt;/Library/Preferences/com.apple.loginwindow.plist&lt;/code&gt;), especially by unusual accounts outside of normal administration duties.&lt;br /&gt;['T1574.009']: Monitor for changes made to files that may execute their own malicious payloads by hijacking vulnerable file path references.&lt;br /&gt;['T1491.002']: Monitor external websites for unplanned content changes.&lt;br /&gt;['T1486']: Monitor for changes made to files in user directories.&lt;br /&gt;['T1055.009']: Monitor for changes made to /proc files that may inject malicious code into processes via the /proc filesystem in order to evade process-based defenses as well as possibly elevate privileges. Users should not have permission to modify these in most cases. &lt;br /&gt;['T1098']: Monitor for changes made to files related to account settings, such as /etc/ssh/sshd_config and the authorized_keys file for each user on a system.&lt;br /&gt;['T1564.004']: There are many ways to create and interact with ADSs using Windows utilities. Monitor for operations (execution, copies, etc.) with file names that contain colons. This syntax (ex: &lt;code&gt;file.ext:ads[.ext]&lt;/code&gt;) is commonly associated with ADSs. (Citation: Microsoft ADS Mar 2014) (Citation: Oddvar Moe ADS1 Jan 2018) (Citation: Oddvar Moe ADS2 Apr 2018) For a more exhaustive list of utilities that can be used to execute and create ADSs, see https://gist.github.com/api0cradle/cdd2d0d0ec9abb686f0e89306e277b8f.&lt;br /&gt;['T1600.002']: There is no documented method for defenders to directly identify behaviors that reduce encryption key space. Detection efforts may be focused on closely related adversary behaviors, such as Modify System Image and Network Device CLI. Some detection methods require vendor support to aid in investigation.&lt;br /&gt;['T1187']: Monitor for changes made to the .LNK, .SCF, or any other files on systems and within virtual environments that contain resources that point to external network resources &lt;br /&gt;['T1543.004']: Monitor files for changes that may create or modify Launch Daemons to execute malicious payloads as part of persistence.&lt;br /&gt;['T1546.004']: Monitor for changes to &lt;code&gt;/etc/profile&lt;/code&gt; and &lt;code&gt;/etc/profile.d&lt;/code&gt;, these files should only be modified by system administrators. MacOS users can leverage Endpoint Security Framework file events monitoring these specific files.(Citation: ESF_filemonitor)&lt;br /&gt;['T1098.004']: Monitor for changes made to detect changes made to the authorized_keys file for each user on a system. Monitor for changes to and suspicious processes modifiying /etc/ssh/sshd_config.&lt;br /&gt;['T1548']: On Linux, auditd can alert every time a user's actual ID and effective ID are different (this is what happens when you sudo). This technique is abusing normal functionality in macOS and Linux systems, but sudo has the ability to log all input and output based on the &lt;code&gt;LOG_INPUT&lt;/code&gt; and &lt;code&gt;LOG_OUTPUT&lt;/code&gt; directives in the &lt;code&gt;/etc/sudoers&lt;/code&gt; file. Consider monitoring for &lt;code&gt;/usr/libexec/security_authtrampoline&lt;/code&gt; executions which may indicate that AuthorizationExecuteWithPrivileges is being executed. MacOS system logs may also indicate when AuthorizationExecuteWithPrivileges is being called.&lt;br /&gt;['T1037.004']: Monitor for changes made to files for unexpected modifications to RC scripts in the /etc/ directory&lt;br /&gt;['T1554']: Monitor changes to client software that do not correlate with known software or patch cycles.&lt;br /&gt;['T1070.002']: Monitor for changes made to system log files, typically stored in  /var/log or /Library/Logs, for unexpected modifications to access permissions and attributes &lt;br /&gt;['T1055']: Monitor for changes made to files that may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges.&lt;br /&gt;['T1036.003']: Monitor for changes made to files for unexpected modifications to file names that are mismatched between the file name on disk and that of the binary's PE metadata. This is a likely indicator that a binary was renamed after it was compiled.  &lt;br /&gt;['T1547.015']: All login items created via shared file lists are viewable by using the System Preferences GUI or in the &lt;code&gt;~/Library/Application Support/com.apple.backgroundtaskmanagementagent/backgrounditems.btm&lt;/code&gt; file.(Citation: Open Login Items Apple)(Citation: Startup Items Eclectic)(Citation: objsee block blocking login items)(Citation: sentinelone macos persist Jun 2019) These locations should be monitored and audited.&lt;br /&gt;['T1574']: Monitor file systems for moving, renaming, replacing, or modifying DLLs. Changes in the set of DLLs that are loaded by a process (compared with past behavior) that do not correlate with known software, patches, etc., are suspicious. Modifications to or creation of .manifest and .local redirection files that do not correlate with software updates are suspicious.&lt;br /&gt;['T1546']: Monitor for changes made to files that may establish persistence and/or elevate privileges using system mechanisms that trigger execution based on specific events.&lt;br /&gt;['T1556']: Monitor PAM configuration and module paths (ex: /etc/pam.d/) for changes. Use system-integrity tools such as AIDE and monitoring tools such as auditd to monitor PAM files.&lt;br /&gt;['T1137.002']: Monitor for changes made to files that may abuse the Microsoft Office "Office Test" Registry key to obtain persistence on a compromised system.&lt;br /&gt;['T1564']: Monitor for changes made to files that may attempt to hide artifacts associated with their behaviors to evade detection.&lt;br /&gt;['T1547.006']: Monitor for changes made to files that may modify the kernel to automatically execute programs on system boot.&lt;br /&gt;['T1574.006']: Monitor for changes to environment variables and files associated with loading shared libraries such as LD_PRELOAD on Linux and DYLD_INSERT_LIBRARIES on macOS.&lt;br /&gt;['T1553']: Periodically baseline registered SIPs and trust providers (Registry entries and files on disk), specifically looking for new, modified, or non-Microsoft entries.(Citation: SpectorOps Subverting Trust Sept 2017) Also analyze Autoruns data for oddities and anomalies, specifically malicious files attempting persistent execution by hiding within auto-starting locations. Autoruns will hide entries signed by Microsoft or Windows by default, so ensure "Hide Microsoft Entries" and "Hide Windows Entries" are both deselected.(Citation: SpectorOps Subverting Trust Sept 2017)

On macOS, the removal of the &lt;code&gt;com.apple.quarantine&lt;/code&gt; flag by a user instead of the operating system is a suspicious action and should be examined further. Also monitor software update frameworks that may strip this flag when performing updates.&lt;br /&gt;['T1137.006']: Monitor for changes made to files that may abuse Microsoft Office add-ins to obtain persistence on a compromised system.&lt;br /&gt;['T1546.008']: Monitor for changes made to files that may establish persistence and/or elevate privileges by executing malicious content triggered by accessibility features. Changes to accessibility utility binaries or binary paths that do not correlate with known software, patch cycles, etc., are suspicious.&lt;br /&gt;['T1546.006']: Monitor file systems for changes to application binaries and invalid checksums/signatures.&lt;br /&gt;['T1137']: Monitor for changes made to files that may leverage Microsoft Office-based applications for persistence between startups.&lt;br /&gt;['T1553.003']: Periodically baseline registered SIPs and trust providers (Registry entries and files on disk), specifically looking for new, modified, or non-Microsoft entries.(Citation: SpectorOps Subverting Trust Sept 2017) Also analyze Autoruns data for oddities and anomalies, specifically malicious files attempting persistent execution by hiding within auto-starting locations. Autoruns will hide entries signed by Microsoft or Windows by default, so ensure "Hide Microsoft Entries" and "Hide Windows Entries" are both deselected.(Citation: SpectorOps Subverting Trust Sept 2017)&lt;br /&gt;['T1037.003']: Monitor for changes made to files for unexpected modifications to unusual accounts outside of normal administration duties  &lt;br /&gt;['T1569.001']: Every Launch Agent and Launch Daemon must have a corresponding plist file on disk which can be monitored. Plist files are located in the root, system, and users &lt;code&gt;/Library/LaunchAgents&lt;/code&gt; or &lt;code&gt;/Library/LaunchDaemons&lt;/code&gt; folders. [Launch Agent](https://attack.mitre.org/techniques/T1543/001) or [Launch Daemon](https://attack.mitre.org/techniques/T1543/004) with executable paths pointing to /tmp and /Shared folders locations are potentially suspicious.&lt;br /&gt;['T1543']: Monitor for changes to files associated with system-level processes.&lt;br /&gt;['T1569']: Monitor for changes made to files that may abuse system services or daemons to execute commands or programs.&lt;br /&gt;['T1547']: Monitor for changes made to files that may configure system settings to automatically execute a program during system boot or logon to maintain persistence or gain higher-level privileges on compromised systems.&lt;br /&gt;['T1505.005']: Monitor unexpected changes and/or interactions with &lt;code&gt;termsrv.dll&lt;/code&gt;, which is typically stored in &lt;code&gt;%SystemRoot%\System32\&lt;/code&gt;.&lt;br /&gt;['T1546.005']: Monitor for changes made to files that may establish persistence by executing malicious content triggered by an interrupt signal.&lt;br /&gt;['T1543.002']: Systemd service unit files may be detected by auditing file creation and modification events within the &lt;code&gt;/etc/systemd/system&lt;/code&gt;, &lt;code&gt;/usr/lib/systemd/system/&lt;/code&gt;, and &lt;code&gt;/home/&lt;username&gt;/.config/systemd/user/&lt;/code&gt; directories, as well as associated symbolic links&lt;br /&gt;['T1505.003']: Monitor for changes made to files that may backdoor web servers with web shells to establish persistent access to systems.&lt;br /&gt;['T1556.001']: Monitor for changes to functions exported from authentication-related system DLLs (such as cryptdll.dll and samsrv.dll).(Citation: Dell Skeleton)&lt;br /&gt;['T1601.002']: Monitor for changes made to the operating system of a network device because image downgrade may be used in conjunction with  [Patch System Image](https://attack.mitre.org/techniques/T1601/001), it may be appropriate to also verify the integrity of the vendor provided operating system image file.&lt;br /&gt;['T1547.008']: Monitor for changes made to files that may modify or add LSASS drivers to obtain persistence on compromised systems.&lt;br /&gt;['T1553.001']: The removal of the &lt;code&gt;com.apple.quarantine&lt;/code&gt; flag by a user instead of the operating system is a suspicious action and should be examined further. Also monitor software update frameworks that may strip this flag when performing updates.&lt;br /&gt;['T1574.004']: Monitor file systems for moving, renaming, replacing, or modifying dylibs. Changes in the set of dylibs that are loaded by a process (compared to past behavior) that do not correlate with known software, patches, etc., are suspicious. Check the system for multiple dylibs with the same name and monitor which versions have historically been loaded into a process.&lt;br /&gt;['T1485']: Monitor for changes made to a large quantity of files for unexpected modifications in user directories and under C:\Windows\System32\.&lt;br /&gt;['T1037.005']: Monitor for changes made to files for unexpected modifications to /Library/StartupItem folder&lt;br /&gt;['T1647']: Monitor for plist file modification, especially if immediately followed by other suspicious events such as code execution from &lt;code&gt;\~/Library/Scripts&lt;/code&gt; or &lt;code&gt;\~/Library/Preferences&lt;/code&gt;. Also, monitor for significant changes to any path pointers in a modified plist.&lt;br /&gt;['T1574.008']: Monitor for programs metadata modifications such as deletion of the path to an executable since it makes programs vulnerable to this type of technique. Also, monitor modifications of files such as renaming programs using Windows system utilities names.&lt;br /&gt;['T1080']: Monitor for files that write or overwrite many files to a network shared directory may be suspicious.&lt;br /&gt;['T1547.013']: Malicious XDG autostart entries may be detected by auditing file modification events within the &lt;code&gt;/etc/xdg/autostart&lt;/code&gt; and &lt;code&gt;~/.config/autostart&lt;/code&gt; directories. Depending on individual configurations, defenders may need to query the environment variables &lt;code&gt;$XDG_CONFIG_HOME&lt;/code&gt; or &lt;code&gt;$XDG_CONFIG_DIRS&lt;/code&gt; to determine the paths of Autostart entries. Autostart entry files not associated with legitimate packages may be considered suspicious. Suspicious entries can also be identified by comparing entries to a trusted system baseline.&lt;br /&gt;['T1053']: Monitor for changes made to files that may abuse task scheduling functionality to facilitate initial or recurring execution of malicious code.&lt;br /&gt;['T1601.001']: Compare the checksum of the operating system file with the checksum of a known good copy from a trusted source. Some embedded network device platforms may have the capability to calculate the checksum of the file, while others may not. Even for those platforms that have the capability, it is recommended to download a copy of the file to a trusted computer to calculate the checksum with software that is not compromised.https://tools.cisco.com/security/center/resources/integrity_assurance.html#7

Many vendors of embedded network devices can provide advanced debugging support that will allow them to work with device owners to validate the integrity of the operating system running in memory. If a compromise of the operating system is suspected, contact the vendor technical support and seek such services for a more thorough inspection of the current running system. https://tools.cisco.com/security/center/resources/integrity_assurance.html#13&lt;br /&gt;['T1546.014']: Monitor emond rules creation by checking for files modified in &lt;code&gt;/etc/emond.d/rules/&lt;/code&gt; and &lt;code&gt;/private/var/db/emondClients&lt;/code&gt;.&lt;br /&gt;['T1140']: Monitor for changes made to files for unexpected modifications that attempt to hide artifacts.&lt;br /&gt;['T1053.002']: On Windows, monitor Windows Task Scheduler stores in `%systemroot%\System32\Tasks` for change entries related to scheduled tasks, especially those that do not correlate with known software, patch cycles, etc. On Linux and macOS, all [at](https://attack.mitre.org/software/S0110) jobs are stored in &lt;code&gt;/var/spool/cron/atjobs/&lt;/code&gt;.(Citation: rowland linux at 2019)&lt;br /&gt;['T1070.003']: Monitor for changes made to command history files, such as ConsoleHost_history.txt, ~/.zsh_history, or ~/.bash_history, for unexpected modifications to contents, access permissions, and attributes.&lt;br /&gt;['T1505.004']: Monitor for modification of files (especially DLLs on webservers) that could be abused as malicious ISAPI extensions/filters or IIS modules. Changes to &lt;code&gt;%windir%\system32\inetsrv\config\applicationhost.config&lt;/code&gt; could indicate an IIS module installation.(Citation: Microsoft IIS Modules Overview 2007)(Citation: ESET IIS Malware 2021)&lt;br /&gt;['T1491.001']: Monitor internal and websites for unplanned content changes.&lt;br /&gt;['T1137.001']: Monitor for changes made to files that may abuse Microsoft Office templates to obtain persistence on a compromised system. Modification to base templates, like Normal.dotm, should also be investigated since the base templates should likely not contain VBA macros. Changes to the Office macro security settings should also be investigated&lt;br /&gt;['T1547.007']: Monitoring the specific plist files associated with reopening applications can indicate when an application has registered itself to be reopened.&lt;br /&gt;['T1491']: Monitor for changes made to files for unexpected modifications to internal and external websites for unplanned content changes.&lt;br /&gt;['T1564.008']: On MacOS systems, monitor for modifications to the &lt;code&gt;RulesActiveState.plist&lt;/code&gt;, &lt;code&gt;SyncedRules.plist&lt;/code&gt;, &lt;code&gt;UnsyncedRules.plist&lt;/code&gt;, and &lt;code&gt;MessageRules.plist&lt;/code&gt; files.(Citation: MacOS Email Rules)&lt;br /&gt;['T1548.001']: Monitor for changes made to files that may perform shell escapes or exploit vulnerabilities in an application with the setsuid or setgid bits to get code running in a different user's context.&lt;br /&gt;['T1014']: Monitor for changes and the existence of unrecognized DLLs, drivers, devices, services, and to the MBR. (Citation: Wikipedia Rootkit)&lt;br /&gt;['T1601']: Most embedded network devices provide a command to print the version of the currently running operating system. Use this command to query the operating system for its version number and compare it to what is expected for the device in question. Because this method may be used in conjunction with  [Patch System Image](https://attack.mitre.org/techniques/T1601/001), it may be appropriate to also verify the integrity of the vendor provided operating system image file.

Compare the checksum of the operating system file with the checksum of a known good copy from a trusted source. Some embedded network device platforms may have the capability to calculate the checksum of the file, while others may not. Even for those platforms that have the capability, it is recommended to download a copy of the file to a trusted computer to calculate the checksum with software that is not compromised. (Citation: Cisco IOS Software Integrity Assurance - Image File Verification)

Many vendors of embedded network devices can provide advanced debugging support that will allow them to work with device owners to validate the integrity of the operating system running in memory. If a compromise of the operating system is suspected, contact the vendor technical support and seek such services for a more thorough inspection of the current running system.  (Citation: Cisco IOS Software Integrity Assurance - Run-Time Memory Verification)&lt;br /&gt;['T1053.007']: Monitor for newly constructed files by using the logging agents on Kubernetes nodes and retrieve logs from sidecar proxies for application and resource pods to monitor malicious container orchestration job deployments.&lt;br /&gt;['T1574.007']: Monitor for newly constructed files for files named after partial directories and in locations that may be searched for common processes through the environment variable, or otherwise should not be user writable. Also, monitor file creation for programs that are named after Windows system programs or programs commonly executed without a path (such as "findstr," "net," and "python"). If this activity occurs outside of known administration activity, upgrades, installations, or patches, then it may be suspicious.&lt;br /&gt;['T1204.001']: malicious documents and files that are downloaded from a link and executed on the user's computer&lt;br /&gt;['T1137.001']: Monitor for newly constructed files that may abuse Microsoft Office templates to obtain persistence on a compromised system.&lt;br /&gt;['T1137']: Monitor for newly constructed files that may leverage Microsoft Office-based applications for persistence between startups.&lt;br /&gt;['T1218.002']: Monitor for newly constructed files that may forge web cookies that can be used to gain access to web applications or Internet services.&lt;br /&gt;['T1560.002']: Monitor newly constructed files being written with extensions and/or headers associated with compressed or encrypted file types. Detection efforts may focus on follow-on exfiltration activity, where compressed or encrypted files can be detected in transit with a network intrusion detection or data loss prevention system analyzing file headers.&lt;br /&gt;['T1037.002']: Monitor for the creation of and/or changes to login hook files (&lt;code&gt;/Library/Preferences/com.apple.loginwindow.plist&lt;/code&gt;), especially by unusual accounts outside of normal administration duties.&lt;br /&gt;['T1037.004']: Monitor for newly constructed /etc/rc.local file &lt;br /&gt;['T1574.006']: Monitor for newly constructed files that are added to absolute paths of shared libraries such as LD_PRELOAD on Linux and DYLD_INSERT_LIBRARIES on macOS.&lt;br /&gt;['T1566']: Monitor for newly constructed files from a phishing messages to gain access to victim systems.&lt;br /&gt;['T1546.004']: Monitor for newly constructed files that may establish persistence through executing malicious commands triggered by a user's shell. For most Linux and macOS systems, a list of file paths for valid shell options available on a system are located in the &lt;code&gt;/etc/shells&lt;/code&gt; file.&lt;br /&gt;['T1036.007']: Monitor for files written to disk that contain two file extensions, particularly when the second is an executable.&lt;br /&gt;['T1574.005']: Monitor for newly constructed files to match an existing service executable, it could be detected and correlated with other suspicious behavior.  &lt;br /&gt;['T1105']: Monitor for file creation and files transferred into the network&lt;br /&gt;['T1491']: Monitor for newly constructed visual content for internal or external enterprise networks. &lt;br /&gt;['T1037.005']: Monitor for newly constructed files by unusual accounts outside of normal administration duties&lt;br /&gt;['T1074.001']: Monitor publicly writeable directories, central locations, and commonly used staging directories (recycle bin, temp folders, etc.) to regularly check for compressed or encrypted data that may be indicative of staging.&lt;br /&gt;['T1053']: Monitor newly constructed files that may abuse task scheduling functionality to facilitate initial or recurring execution of malicious code.&lt;br /&gt;['T1546.005']: Monitor for newly constructed files that may establish persistence by executing malicious content triggered by an interrupt signal.&lt;br /&gt;['T1505.003']: File monitoring may be used to detect changes to files in the Web directory of a Web server that do not match with updates to the Web server's content and may indicate implantation of a Web shell script.(Citation: NSA Cyber Mitigating Web Shells)&lt;br /&gt;['T1547']: Monitor for newly constructed files that may configure system settings to automatically execute a program during system boot or logon to maintain persistence or gain higher-level privileges on compromised systems.&lt;br /&gt;['T1543.001']: Monitor for newly constructed files that may create or modify launch agents to repeatedly execute malicious payloads as part of persistence.&lt;br /&gt;['T1547.013']: Malicious XDG autostart entries may be detected by auditing file creation events within the &lt;code&gt;/etc/xdg/autostart&lt;/code&gt; and &lt;code&gt;~/.config/autostart&lt;/code&gt; directories. Depending on individual configurations, defenders may need to query the environment variables &lt;code&gt;$XDG_CONFIG_HOME&lt;/code&gt; or &lt;code&gt;$XDG_CONFIG_DIRS&lt;/code&gt; to determine the paths of Autostart entries. Autostart entry files not associated with legitimate packages may be considered suspicious. Suspicious entries can also be identified by comparing entries to a trusted system baseline.&lt;br /&gt;['T1027.004']: Monitor for newly constructed files for payloads&lt;br /&gt;['T1543.004']: Monitor for new files added to the &lt;code&gt;/Library/LaunchDaemons/&lt;/code&gt; folder. The System LaunchDaemons are protected by SIP.&lt;br /&gt;['T1574']: Monitor for newly constructed files that may execute their own malicious payloads by hijacking the way operating systems run programs.&lt;br /&gt;['T1546.002']: Monitor newly constructed files that may establish persistence by executing malicious content triggered by user inactivity.&lt;br /&gt;['T1547.012']: Monitor for newly constructed files that may abuse print processors to run malicious DLLs during system boot for persistence and/or privilege escalation.&lt;br /&gt;['T1574.010']: Monitor for creation of binaries and service executables that do not occur during a regular software update or an update scheduled by the organization. This behavior also considers files that are overwritten.&lt;br /&gt;['T1547.010']: Monitor newly constructed files that may use port monitors to run an attacker supplied DLL during system boot for persistence or privilege escalation.&lt;br /&gt;['T1491.001']: Monitor for newly constructed files that may deface systems internal to an organization in an attempt to intimidate or mislead users.&lt;br /&gt;['T1027']: Detection of file obfuscation is difficult unless artifacts are left behind by the obfuscation process that are uniquely detectable with a signature. If detection of the obfuscation itself is not possible, it may be possible to detect the malicious activity that caused the obfuscated file (for example, the method that was used to write, read, or modify the file on the file system).&lt;br /&gt;['T1564.001']: Monitor the file system and shell commands for files being created with a leading "."&lt;br /&gt;['T1218.001']: Monitor presence and use of CHM files, especially if they are not typically used within an environment.&lt;br /&gt;['T1218']: Monitor for file activity (creations, downloads, modifications, etc.), especially for file types that are not typical within an environment and may be indicative of adversary activity.&lt;br /&gt;['T1556.002']: Monitor for newly constructed files that may register malicious password filter dynamic link libraries (DLLs) into the authentication process to acquire user credentials as they are validated.&lt;br /&gt;['T1556']: Monitor for suspicious additions to the /Library/Security/SecurityAgentPlugins directory.(Citation: Xorrior Authorization Plugins)&lt;br /&gt;['T1204']: Anti-virus can potentially detect malicious documents and files that are downloaded and executed on the user's computer. Endpoint sensing or network sensing can potentially detect malicious events once the file is opened (such as a Microsoft Word document or PDF reaching out to the internet or spawning powershell.exe).&lt;br /&gt;['T1574.009']: Monitor file creation for files named after partial directories and in locations that may be searched for common processes through the environment variable, or otherwise should not be user writable. Also, monitor file creation for programs that are named after Windows system programs or programs commonly executed without a path (such as "findstr," "net," and "python"). If this activity occurs outside of known administration activity, upgrades, installations, or patches, then it may be suspicious.&lt;br /&gt;['T1546']: Monitor newly constructed files that may establish persistence and/or elevate privileges using system mechanisms that trigger execution based on specific events.&lt;br /&gt;['T1491.002']: Monitor for newly constructed files that may deface systems external to an organization in an attempt to deliver messaging, intimidate, or otherwise mislead an organization or users.&lt;br /&gt;['T1546.014']: Monitor emond rules creation by checking for files created in &lt;code&gt;/etc/emond.d/rules/&lt;/code&gt; and &lt;code&gt;/private/var/db/emondClients&lt;/code&gt;.&lt;br /&gt;['T1547.009']: Monitor for LNK files created with a Zone Identifier value greater than 1, which may indicate that the LNK file originated from outside of the network.(Citation: BSidesSLC 2020 - LNK Elastic) Analysis should attempt to relate shortcut creation events to other potentially suspicious events based on known adversary behavior such as process launches of unknown executables that make network connections.&lt;br /&gt;['T1547.006']: Monitor for newly constructed files that may modify the kernel to automatically execute programs on system boot.&lt;br /&gt;['T1187']: Monitor for newly constructed .LNK, .SCF, or any other files on systems and within virtual environments that contain resources that point to external network resources &lt;br /&gt;['T1546.008']: Monitor newly constructed files that may establish persistence and/or elevate privileges by executing malicious content triggered by accessibility features.&lt;br /&gt;['T1547.008']: Monitor newly constructed files that may modify or add LSASS drivers to obtain persistence on compromised systems.&lt;br /&gt;['T1496']: Monitor for common cryptomining files on local systems that may indicate compromise and resource usage&lt;br /&gt;['T1505.004']: Monitor for creation of files (especially DLLs on webservers) that could be abused as malicious ISAPI extensions/filters or IIS modules.&lt;br /&gt;['T1565']: Monitor for newly constructed files in order to manipulate external outcomes or hide activity&lt;br /&gt;['T1505']: Consider monitoring file locations associated with the installation of new application software components such as paths from which applications typically load such extensible components.&lt;br /&gt;['T1218.005']: Monitor use of HTA files. If they are not typically used within an environment then execution of them may be suspicious&lt;br /&gt;['T1566.001']: Monitor for newly constructed files from a spearphishing emails with a malicious attachment in an attempt to gain access to victim systems.&lt;br /&gt;['T1486']: Monitor for newly constructed files in user directories.&lt;br /&gt;['T1574.004']: Monitor for newly constructed dylibs&lt;br /&gt;['T1137.002']: Monitor for newly constructed files that may abuse the Microsoft Office "Office Test" Registry key to obtain persistence on a compromised system.&lt;br /&gt;['T1204.002']: Monitor for newly constructed files that are downloaded and executed on the user's computer. Endpoint sensing or network sensing can potentially detect malicious events once the file is opened (such as a Microsoft Word document or PDF reaching out to the internet or spawning powershell.exe).&lt;br /&gt;['T1543']: Monitor for newly constructed files that may create or modify system-level processes to repeatedly execute malicious payloads as part of persistence.&lt;br /&gt;['T1218.014']: Monitor for creation and use of .msc files. MMC may legitimately be used to call Microsoft-created .msc files, such as &lt;code&gt;services.msc&lt;/code&gt; or &lt;code&gt;eventvwr.msc&lt;/code&gt;. Invoking non-Microsoft .msc files may be an indicator of malicious activity.&lt;br /&gt;['T1037']: Monitor for newly constructed files that may use scripts automatically executed at boot or logon initialization to establish persistence.&lt;br /&gt;['T1574.001']: Monitor newly constructed .manifest and .local redirection files that do not correlate with software updates.&lt;br /&gt;['T1189']: Monitor for newly constructed files written to disk to gain access to a system through a user visiting a website over the normal course of browsing.&lt;br /&gt;['T1564.006']: Monitor for newly constructed files associated with running a virtual instance, such as binary files associated with common virtualization technologies (ex: VirtualBox, VMware, QEMU, Hyper-V).&lt;br /&gt;['T1080']: Monitor for newly constructed files from files that write or overwrite many files to a network shared directory may be suspicious.&lt;br /&gt;['T1574.002']: Monitor for newly constructed files in common folders on the computer system.&lt;br /&gt;['T1564.009']: Monitor for newly constructed files that may abuse resource forks to hide malicious code or executables to evade detection and bypass security applications.&lt;br /&gt;['T1176']: Monitor for newly constructed files and/or all installed extensions maintain a plist file in the /Library/Managed Preferences/username/ directory. Ensure all listed files are in alignment with approved extensions&lt;br /&gt;['T1553.005']: Monitor compressed/archive and image files downloaded from the Internet as the contents may not be tagged with the MOTW. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities.&lt;br /&gt;['T1570']: Monitor newly constructed files to/from a lateral tool transfer &lt;br /&gt;['T1564']: Monitor for newly constructed files that may attempt to hide artifacts associated with their behaviors to evade detection.&lt;br /&gt;['T1546.013']: Locations where &lt;code&gt;profile.ps1&lt;/code&gt; can be stored should be monitored for new profiles. (Citation: Malware Archaeology PowerShell Cheat Sheet) Example profile locations include:
* &lt;code&gt;$PsHome\Profile.ps1&lt;/code&gt;
* &lt;code&gt;$PsHome\Microsoft.{HostProgram}_profile.ps1&lt;/code&gt;
* &lt;code&gt;$Home\My Documents\PowerShell\Profile.ps1&lt;/code&gt;
* &lt;code&gt;$Home\My Documents\PowerShell\Microsoft.{HostProgram}_profile.ps1&lt;/code&gt;&lt;br /&gt;['T1027.006']: Monitor for newly constructed files via JavaScript, developing rules for the different variants, with a combination of different encoding and/or encryption schemes, may be very challenging. Consider monitoring files downloaded from the Internet, possibly by HTML Smuggling, for suspicious activities. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities.&lt;br /&gt;['T1554']: Monitor for newly constructed files that may modify client software binaries to establish persistent access to systems.&lt;br /&gt;['T1091']: Monitor for newly constructed files on removable media&lt;br /&gt;['T1137.006']: Monitor for newly constructed files that may abuse Microsoft Office add-ins to obtain persistence on a compromised system.&lt;br /&gt;['T1564']: Monitor for contextual data about a file, which may include information such as name, the content (ex: signature, headers, or data/media), user/ower, permissions that may attempt to hide artifacts associated with their behaviors to evade detection.&lt;br /&gt;['T1036.005']: Collect file hashes; file names that do not match their expected hash are suspect. Perform file monitoring; files with known names but in unusual locations are suspect. Likewise, files that are modified outside of an update or patch are suspect.&lt;br /&gt;['T1036.002']: Monitor for common formats of RTLO characters within filenames such as \u202E, [U+202E], and %E2%80%AE. Defenders should also check their analysis tools to ensure they do not interpret the RTLO character and instead print the true name of the file containing it.&lt;br /&gt;['T1070']: Monitor for contextual file data that may show signs of deletion or alter generated artifacts on a host system, including logs or captured files such as quarantined malware.&lt;br /&gt;['T1553']: Collect and analyze signing certificate metadata on software that executes within the environment to look for unusual certificate characteristics and outliers.&lt;br /&gt;['T1055.013']: Scan file objects reported during the PsSetCreateProcessNotifyRoutine, (Citation: Microsoft PsSetCreateProcessNotifyRoutine routine) which triggers a callback whenever a process is created or deleted, specifically looking for file objects with enabled write access. (Citation: BlackHat Process Doppelganging Dec 2017) Also consider comparing file objects loaded in memory to the corresponding file on disk. (Citation: hasherezade Process Doppelganging Dec 2017)&lt;br /&gt;['T1546.006']: Changes to binaries that do not line up with application updates or patches are also extremely suspicious.&lt;br /&gt;['T1027.003']: Detection of steganography is difficult unless artifacts are left behind by the obfuscation process that are detectable with a known signature. Look for strings or other signatures left in system artifacts related to decoding steganography.&lt;br /&gt;['T1195.002']: Use verification of distributed binaries through hash checking or other integrity checking mechanisms. Scan downloads for malicious signatures and attempt to test software and updates prior to deployment while taking note of potential suspicious activity.&lt;br /&gt;['T1222.002']: Monitor and investigate attempts to modify ACLs and file/directory ownership. Consider enabling file/directory permission change auditing on folders containing key binary/configuration files.&lt;br /&gt;['T1027.001']: Depending on the method used to pad files, a file-based signature may be capable of detecting padding using a scanning or on-access based tool. When executed, the resulting process from padded files may also exhibit other behavior characteristics of being used to conduct an intrusion such as system and network information Discovery or Lateral Movement, which could be used as event indicators that point to the source file.&lt;br /&gt;['T1546']: Monitor for contextual data about a file, which may include information such as name, the content (ex: signature, headers, or data/media), user/ower, permissions, etc.&lt;br /&gt;['T1564.001']: Monitor for contextual data about a file, which may include information such as name, the content (ex: signature, headers, or data/media), user/ower, permissions may set files and directories to be hidden to evade detection mechanisms.&lt;br /&gt;['T1564.009']: Identify files with the &lt;code&gt;com.apple.ResourceFork&lt;/code&gt; extended attribute and large data amounts stored in resource forks.&lt;br /&gt;['T1070.006']: Monitor for file modifications that collects information on file handle opens and can compare timestamp values&lt;br /&gt;['T1565.003']: Monitor for contextual data about a file, which may include information such as name, the content (ex: signature, headers, or data/media), user/ower, permissions, etc that would aid in the manipulation of data to hide activity&lt;br /&gt;['T1564.007']: If the document is opened with a Graphical User Interface (GUI) the malicious p-code is decompiled and may be viewed. However, if the &lt;code&gt;PROJECT&lt;/code&gt; stream, which specifies the project properties, is modified in a specific way the decompiled VBA code will not be displayed. For example, adding a module name that is undefined to the &lt;code&gt;PROJECT&lt;/code&gt; stream will inhibit attempts of reading the VBA source code through the GUI.(Citation: FireEye VBA stomp Feb 2020)&lt;br /&gt;['T1553.005']: Monitor files (especially those downloaded from untrusted locations) for MOTW attributes. Also consider inspecting and scanning file formats commonly abused to bypass MOTW (ex: .arj, .gzip, .iso, .vhd).&lt;br /&gt;['T1218.011']: Analyze contextual data about executed DLL files, which may include information such as name, the content (ex: signature, headers, or data/media), age, user/ower, permissions, etc.&lt;br /&gt;['T1553.001']: Review &lt;code&gt;false&lt;/code&gt; values under the &lt;code&gt;LSFileQuarantineEnabled&lt;/code&gt; entry in an application's &lt;code&gt;Info.plist&lt;/code&gt; file (required by every application). &lt;code&gt;false&lt;/code&gt; under &lt;code&gt;LSFileQuarantineEnabled&lt;/code&gt; indicates that an application does not use the quarantine flag. Unsandboxed applications with an unspecified &lt;code&gt;LSFileQuarantineEnabled&lt;/code&gt; entry will default to not setting the quarantine flag.

QuarantineEvents is a SQLite database containing a list of all files assigned the &lt;code&gt;com.apple.quarantine&lt;c/ode&gt; attribute, located at &lt;code&gt;~/Library/Preferences/com.apple.LaunchServices.QuarantineEventsV2&lt;/code&gt;. Each event contains the corresponding UUID, timestamp, application, Gatekeeper score, and decision if it was allowed. (Citation: TheEclecticLightCompany Quarantine and the flag)&lt;br /&gt;['T1548']: Monitor the file system for files that have the setuid or setgid bits set. On Linux, auditd can alert every time a user's actual ID and effective ID are different (this is what happens when you sudo).&lt;br /&gt;['T1036']: Collect file hashes; file names that do not match their expected hash are suspect. Perform file monitoring; files with known names but in unusual locations are suspect. Look for indications of common characters that may indicate an attempt to trick users into misidentifying the file type, such as a space as the last character of a file name or the right-to-left override characters"\u202E", "[U+202E]", and "%E2%80%AE".&lt;br /&gt;['T1036.006']: Monitor for spaces at the end of file names, that can easily be checked with file monitoring. From the user's perspective though, this is very hard to notice from within the Finder.app or on the command-line in Terminal.app. Processes executed from binaries containing non-standard extensions in the filename are suspicious.&lt;br /&gt;['T1564.004']: Monitor for contextual data about a file, which may include information such as name, the content (ex: signature, headers, or data/media), user/ower, permissions, may use NTFS file attributes to hide their malicious data in order to evade detection. Forensic techniques exist to identify information stored in NTFS EA. (Citation: Journey into IR ZeroAccess NTFS EA)&lt;br /&gt;['T1027.002']: Use file scanning to look for known software packers or artifacts of packing techniques. Packing is not a definitive indicator of malicious activity, because legitimate software may use packing techniques to reduce binary size or to protect proprietary code.&lt;br /&gt;['T1222']: Monitor and investigate attempts to modify ACLs and file/directory ownership.&lt;br /&gt;['T1548.001']: Monitor the file system for files that have the setuid or setgid bits set.&lt;br /&gt;['T1036.001']: Collect and analyze signing certificate metadata and check signature validity on software that executes within the environment, look for invalid signatures as well as unusual certificate characteristics and outliers.&lt;br /&gt;['T1554']: Collect and analyze signing certificate metadata and check signature validity on software that executes within the environment&lt;br /&gt;['T1036.003']: Collecting and comparing disk and resource filenames for binaries by looking to see if the InternalName, OriginalFilename, and/or ProductName match what is expected could provide useful leads, but may not always be indicative of malicious activity.&lt;br /&gt;['T1222.001']: Consider enabling file/directory permission change auditing on folders containing key binary/configuration files. For example, Windows Security Log events (Event ID 4670) are created when DACLs are modified.&lt;br /&gt;['T1570']: Monitor for alike file hashes or characteristics (ex: filename) that are created on multiple hosts.&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Microsoft File Mgmt" url="https://docs.microsoft.com/en-us/windows/win32/fileio/file-management"/>
            <reference name="Mitre ATT&amp;CK Data Source DS0022" url="https://attack.mitre.org/data-sources/DS0022"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:01.328">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-DS0001" name="Firmware" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>Computer software that provides low-level control for the hardware and device(s) of a host, such as BIOS or UEFI/EFI&lt;br /&gt;&lt;p&gt;Detailed detections per technique:&lt;/p&gt;&lt;br /&gt;['T1542.002']: Monitor for changes that may reveal indicators of malicious firmware such as strings. Also consider comparing components, including hashes of component firmware and behavior, against known good images.&lt;br /&gt;['T1564.005']: Monitor for changes made to firmware for unexpected modifications to settings and/or data that may use a hidden file system to conceal malicious activity from users and security tools. [Bootkit](https://attack.mitre.org/techniques/T1542/003)&lt;br /&gt;['T1014']: Monitor for changes made to firmware for unexpected modifications to settings and/or data that may be used by rootkits to hide the presence of programs, files, network connections, services, drivers, and other system components. Some rootkit protections may be built into anti-virus or operating system software. There are dedicated rootkit detection tools that look for specific types of rootkit behavior. &lt;br /&gt;['T1542.001']: Monitor for changes made to firmware. (Citation: MITRE Trustworthy Firmware Measurement) Dump and inspect BIOS images on vulnerable systems and compare against known good images. (Citation: MITRE Copernicus) Analyze differences to determine if malicious changes have occurred. Log attempts to read/write to BIOS and compare against known patching behavior.
Likewise, EFI modules can be collected and compared against a known-clean list of EFI executable binaries to detect potentially malicious modules. The CHIPSEC framework can be used for analysis to determine if firmware modifications have been performed. (Citation: McAfee CHIPSEC Blog) (Citation: Github CHIPSEC) (Citation: Intel HackingTeam UEFI Rootkit)&lt;br /&gt;['T1542.004']: There are no documented means for defenders to validate the operation of the ROMMON outside of vendor support. If a network device is suspected of being compromised, contact the vendor to assist in further investigation.&lt;br /&gt;['T1564']: Monitor for changes made to firewall rules for unexpected modifications to allow/block specific network traffic that may attempt to hide artifacts associated with their behaviors to evade detection.&lt;br /&gt;['T1495']: Monitor for changes made to the firmware for unexpected modifications to settings and/or data. (Citation: MITRE Trustworthy Firmware Measurement) Log attempts to read/write to BIOS and compare against known patching behavior.&lt;br /&gt;['T1542']: Monitor for changes made on pre-OS boot mechanisms that can be manipulated for malicious purposes. Take snapshots of boot records and firmware and compare against known good images. Log changes to boot records, BIOS, and EFI&lt;br /&gt;['T1542.005']: Monitor for changes to boot information including system uptime, image booted, and startup configuration to determine if results are consistent with expected behavior in the environment.  (Citation: Cisco IOS Software Integrity Assurance - Boot Information) Monitor unusual connections or connection attempts to the device that may specifically target TFTP or other file-sharing protocols.&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Mitre ATT&amp;CK Data Source DS0001" url="https://attack.mitre.org/datasources/DS0001"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:01.234">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-DS0028" name="Logon Session" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>Logon occurring on a system or resource (local, domain, or cloud) to which a user/device is gaining access after successful authentication and authorizaton(Citation: Microsoft Audit Logon Events)&lt;br /&gt;&lt;p&gt;Detailed detections per technique:&lt;/p&gt;&lt;br /&gt;['T1114']: Monitor for unusual login activity from unknown or abnormal locations, especially for privileged accounts (ex: Exchange administrator account). &lt;br /&gt;['T1213']: Monitor for newly constructed logon behavior within Microsoft's SharePoint can be configured to report access to certain pages and documents. (Citation: Microsoft SharePoint Logging) Sharepoint audit logging can also be configured to report when a user shares a resource. (Citation: Sharepoint Sharing Events)The user access logging within Atlassian's Confluence can also be configured to report access to certain pages and documents through AccessLogFilter. (Citation: Atlassian Confluence Logging) Additional log storage and analysis infrastructure will likely be required for more robust detection capabilities.&lt;br /&gt;['T1021.004']: Monitor for user accounts logged into systems that may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to log into remote machines using Secure Shell (SSH). For example, on Linux systems SSH logon activity can be found in the logs located in &lt;code&gt;/var/log/auth.log&lt;/code&gt; or &lt;code&gt;/var/log/secure&lt;/code&gt; depending on the distro you are using.&lt;br /&gt;['T1606.002']: Monitor for logins using SAML tokens which do not have corresponding 4769 and 1200 events in the domain.(Citation: Sygnia Golden SAML) These logins may occur on any on-premises resources as well as from any cloud environment that trusts the certificate.(Citation: Microsoft SolarWinds Customer Guidance)&lt;br /&gt;['T1606.001']: Monitor for anomalous authentication activity, such as logons or other user session activity associated with unknown accounts. Monitor for unexpected and abnormal access to resources, including access of websites and cloud-based applications by the same user in different locations or by different systems that do not match expected configurations.&lt;br /&gt;['T1078.002']: Monitor for suspicious account behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. &lt;br /&gt;['T1556']: Monitor for newly constructed logon behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times (ex: when the user is not present) or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access). Configure robust, consistent account activity audit policies across the enterprise and with externally accessible services.(Citation: TechNet Audit Policy) &lt;br /&gt;['T1550']: Look for suspicious account behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account.&lt;br /&gt;['T1199']: Monitor for newly constructed logon behavior that may breach or otherwise leverage organizations who have access to intended victims.&lt;br /&gt;['T1538']: Monitor for newly constructed logon behavior across cloud service management consoles.&lt;br /&gt;['T1563.002']: Use of RDP may be legitimate, depending on the network environment and how it is used. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior with RDP.&lt;br /&gt;['T1550.002']: Monitor newly created logons and credentials used in events and review for discrepancies. Unusual remote logins that correlate with other suspicious activity (such as writing and executing binaries) may indicate malicious activity.&lt;br /&gt;['T1078']: Monitor for newly constructed logon behavior that may obtain and abuse credentials of existing accounts as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access).&lt;br /&gt;['T1021.001']: Monitor for user accounts logged into systems associated with RDP (ex: Windows EID 4624 Logon Type 10). Other factors, such as access patterns (ex: multiple systems over a relatively short period of time) and activity that occurs after a remote login, may indicate suspicious or malicious behavior with RDP.&lt;br /&gt;['T1213.002']: Monitor for newly constructed logon behavior across Microsoft's SharePoint which can be configured to report access to certain pages and documents. (Citation: Microsoft SharePoint Logging) As information repositories generally have a considerably large user base, detection of malicious use can be non-trivial.&lt;br /&gt;['T1021.002']: Monitor for logon behavior (ex: EID 4624 Logon Type 3) using [Valid Accounts](https://attack.mitre.org/techniques/T1078) to interact with a remote network share using Server Message Block (SMB). The adversary may then perform actions as the logged-on user. Ensure that proper logging of accounts used to log into systems is turned on and centrally collected. Windows logging is able to collect success/failure for accounts that may be used to move laterally and can be collected using tools such as Windows Event Forwarding. (Citation: Lateral Movement Payne)(Citation: Windows Event Forwarding Payne)&lt;br /&gt;['T1556.001']: Monitor for newly constructed logon behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times (ex: when the user is not present) or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access). Configure robust, consistent account activity audit policies across the enterprise and with externally accessible services.(Citation: TechNet Audit Policy)&lt;br /&gt;['T1078.001']: Monitor for newly constructed logon behavior across default accounts that have been activated or logged into. These audits should also include checks on any appliances and applications for default credentials or SSH keys, and if any are discovered, they should be updated immediately.&lt;br /&gt;['T1021.006']: Monitor for user accounts logging into the system via [Valid Accounts](https://attack.mitre.org/techniques/T1078) to interact with remote systems using Windows Remote Management (WinRM). The adversary may then perform actions as the logged-on user. &lt;br /&gt;['T1563']: Monitor for user accounts logged into systems they would not normally access or access patterns to multiple systems over a relatively short period of time.&lt;br /&gt;['T1213.001']: Monitor for newly constructed logon behavior across Atlassian's Confluence which can be configured to report access to certain pages and documents through AccessLogFilter. (Citation: Atlassian Confluence Logging) Additional log storage and analysis infrastructure will likely be required for more robust detection capabilities.&lt;br /&gt;['T1021.005']: Monitor for user accounts logged into systems that may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to remotely control machines using Virtual Network Computing (VNC). For example, on macOS systems &lt;code&gt;log show --predicate 'process = "screensharingd" and eventMessage contains "Authentication:"'&lt;/code&gt; can be used to review incoming VNC connection attempts for suspicious activity.(Citation: Apple Unified Log Analysis Remote Login and Screen Sharing) &lt;br /&gt;['T1563.001']: Monitor for user accounts logged into systems they would not normally access or access patterns to multiple systems over a relatively short period of time. Also monitor user SSH-agent socket files being used by different users.&lt;br /&gt;['T1550.003']: Monitor for newly constructed logon behavior that may "pass the ticket" using stolen Kerberos tickets to move laterally within an environment, bypassing normal system access controls.&lt;br /&gt;['T1114.002']: Monitor for unusual login activity from unknown or abnormal locations, especially for privileged accounts (ex: Exchange administrator account).&lt;br /&gt;['T1213.003']: Monitor for newly constructed logon behavior across code repositories (e.g. Github) which can be configured to report access to certain pages and documents.&lt;br /&gt;['T1078.004']: Monitor for suspicious account behavior across cloud services that share account. &lt;br /&gt;['T1606']: Monitor for anomalous authentication activity, such as logons or other user session activity associated with unknown accounts and/or using SAML tokens which do not have corresponding 4769 and 1200 events in the domain.(Citation: Sygnia Golden SAML). Monitor for unexpected and abnormal access to resources, including access of websites and cloud-based applications by the same user in different locations or by different systems that do not match expected configurations. These logins may occur on any on-premises resources as well as from any cloud environment that trusts the credentials.(Citation: Microsoft SolarWinds Customer Guidance)&lt;br /&gt;['T1185']: Authentication logs can be used to audit logins to specific web applications, but determining malicious logins versus benign logins may be difficult if activity matches typical user behavior.&lt;br /&gt;['T1021']: Monitor for user accounts logged into systems they would not normally access or abnormal access patterns, such as multiple systems over a relatively short period of time. Correlate use of login activity related to remote services with unusual behavior or other malicious or suspicious activity. Adversaries will likely need to learn about an environment and the relationships between systems through Discovery techniques prior to attempting Lateral Movement. For example, in macOS you can review logs for "screensharingd" and "Authentication" event messages. (Citation: Lockboxx ARD 2019)(Citation: Apple Unified Log Analysis Remote Login and Screen Sharing)&lt;br /&gt;['T1556.003']: Monitor for newly constructed logon behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times (ex: when the user is not present) or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access).&lt;br /&gt;['T1621']: Monitor 2FA/MFA application logs for suspicious events such as rapid login attempts with valid credentials.&lt;br /&gt;['T1078.003']: Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access).&lt;br /&gt;['T1621']: Monitor 2FA/MFA application logs for suspicious events such as unusual login attempt source location, mismatch in location of login attempt and smart device approving 2FA/MFA request prompts.&lt;br /&gt;['T1558.001']: Monitor for anomalous Kerberos activity, such as malformed or blank fields in Windows logon/logoff events (Event ID 4624, 4634, 4672). Correlate other security systems with login information (e.g., a user has the KRBTGT account password hash and forges Kerberos ticket-granting tickets). &lt;br /&gt;['T1558']: Enable Audit Kerberos Service Ticket Operations to log Kerberos TGS service ticket requests. Particularly investigate irregular patterns of activity (ex: accounts making numerous requests, Event ID 4769, within a small time frame, especially if they also request RC4 encryption [Type 0x17]).(Citation: Microsoft Detecting Kerberoasting Feb 2018) (Citation: AdSecurity Cracking Kerberos Dec 2015)&lt;br /&gt;['T1606.002']: Consider modifying SAML responses to include custom elements for each service provider. Monitor these custom elements in service provider access logs to detect any anomalous requests.(Citation: Sygnia Golden SAML)&lt;br /&gt;['T1558.002']: Monitor for anomalous Kerberos activity, such as malformed or blank fields in Windows logon/logoff events (Event ID 4624, 4634, 4672).&lt;br /&gt;['T1133']: Follow best practices for detecting adversary use of Valid Accounts for authenticating to remote services. Collect authentication logs and analyze for unusual access patterns, windows of activity, and access outside of normal business hours.&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Microsoft Audit Logon Events" url="https://docs.microsoft.com/en-us/windows/security/threat-protection/auditing/basic-audit-logon-events"/>
            <reference name="Mitre ATT&amp;CK Data Source DS0028" url="https://attack.mitre.org/datasources/DS0028"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:02.138">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-M1032" name="Multi-factor Authentication" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>Use two or more pieces of evidence to authenticate to a system; such as username and password in addition to a token from a physical smart card or token generator.&lt;br /&gt;&lt;p&gt;Detailed mitigations per technique:&lt;/p&gt;&lt;br /&gt;['T1098.001']: Use multi-factor authentication for user and privileged accounts. Consider enforcing multi-factor authentication for the &lt;code&gt;CreateKeyPair&lt;/code&gt; and &lt;code&gt;ImportKeyPair&lt;/code&gt; API calls through IAM policies.(Citation: Expel IO Evil in AWS)&lt;br /&gt;['T1040']: Use multi-factor authentication wherever possible.&lt;br /&gt;['T1136.001', 'T1136.002', 'T1136.003', 'T1098', 'T1098.003', 'T1136', 'T1098.002']: Use multi-factor authentication for user and privileged accounts.&lt;br /&gt;['T1556.003']: Integrating multi-factor authentication (MFA) as part of organizational policy can greatly reduce the risk of an adversary gaining control of valid credentials that may be used for additional tactics such as initial access, lateral movement, and collecting information.&lt;br /&gt;['T1556', 'T1556.001']: Integrating multi-factor authentication (MFA) as part of organizational policy can greatly reduce the risk of an adversary gaining control of valid credentials that may be used for additional tactics such as initial access, lateral movement, and collecting information. MFA can also be used to restrict access to cloud resources and APIs. &lt;br /&gt;['T1599', 'T1601', 'T1601.002', 'T1601.001']: Use multi-factor authentication for user and privileged accounts. Most embedded network devices support TACACS+ and/or RADIUS.  Follow vendor prescribed best practices for hardening access control.(Citation: Cisco IOS Software Integrity Assurance - TACACS)&lt;br /&gt;['T1114', 'T1114.002']: Use of multi-factor authentication for public-facing webmail servers is a recommended best practice to minimize the usefulness of usernames and passwords to adversaries.&lt;br /&gt;['T1621']: Implement more secure 2FA/MFA mechanisms in replacement of simple push or one-click 2FA/MFA options. For example, having users enter a one-time code provided by the login screen into the 2FA/MFA application or utilizing other out-of-band 2FA/MFA mechanisms (such as rotating code-based hardware tokens providing rotating codes that need an accompanying user pin) may be more secure. Furthermore, change default configurations and implement limits upon the maximum number of 2FA/MFA request prompts that can be sent to users in period of time.(Citation: MFA Fatigue Attacks - PortSwigger)&lt;br /&gt;['T1076']: Use multi-factor authentication for remote logins. (Citation: Berkley Secure)&lt;br /&gt;['T1078.002', 'T1078']: Integrating multi-factor authentication (MFA) as part of organizational policy can greatly reduce the risk of an adversary gaining control of valid credentials that may be used for additional tactics such as initial access, lateral movement, and collecting information. MFA can also be used to restrict access to cloud resources and APIs.&lt;br /&gt;['T1098.005']: Require multi-factor authentication to register devices in Azure AD.(Citation: Microsoft - Device Registration) Configure multi-factor authentication systems to disallow enrolling new devices for inactive accounts.(Citation: CISA MFA PrintNightmare)&lt;br /&gt;['T1110.003', 'T1110.001', 'T1110', 'T1110.004', 'T1110.002']: Use multi-factor authentication. Where possible, also enable multi-factor authentication on externally facing services.&lt;br /&gt;['T1078.004']: Use multi-factor authentication for cloud accounts, especially privileged accounts. This can be implemented in a variety of forms (e.g. hardware, virtual, SMS), and can also be audited using administrative reporting features.(Citation: AWS - IAM Console Best Practices)&lt;br /&gt;['T1021.004']: Require multi-factor authentication for SSH connections wherever possible, such as password protected SSH keys.&lt;br /&gt;['T1539']: A physical second factor key that uses the target login domain as part of the negotiation protocol will prevent session cookie theft through proxy methods.(Citation: Evilginx 2 July 2018)&lt;br /&gt;['T1599.001', 'T1556.004']: Use multi-factor authentication for user and privileged accounts. Most embedded network devices support TACACS+ and/or RADIUS.  Follow vendor prescribed best practices for hardening access control. (Citation: Cisco IOS Software Integrity Assurance - TACACS)&lt;br /&gt;['T1021.001']: Use multi-factor authentication for remote logins.(Citation: Berkley Secure)&lt;br /&gt;['T1017']: Use multi-factor authentication for accounts used with application deployment software.&lt;br /&gt;['T1072']: Ensure proper system and access isolation for critical network systems through use of multi-factor authentication.&lt;br /&gt;['T1021', 'T1021']: Use multi-factor authentication on remote service logons where possible.&lt;br /&gt;['T1133']: Use strong two-factor or multi-factor authentication for remote service accounts to mitigate an adversary's ability to leverage stolen credentials, but be aware of [Multi-Factor Authentication Interception](https://attack.mitre.org/techniques/T1111) techniques for some two-factor authentication implementations.&lt;br /&gt;['T1530']: Consider using multi-factor authentication to restrict access to resources and cloud storage APIs.(Citation: Amazon S3 Security, 2019)&lt;br /&gt;['T1213.003']: Use multi-factor authentication for logons to code repositories.&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Mitre ATT&amp;CK Mitigation M1032" url="https://attack.mitre.org/mitigations/M1032"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:01.506">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-M1027" name="Password Policies" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>Set and enforce secure password policies for accounts.&lt;br /&gt;&lt;p&gt;Detailed mitigations per technique:&lt;/p&gt;&lt;br /&gt;['T1599.001', 'T1599', 'T1110.004', 'T1110.002', 'T1601', 'T1110.001', 'T1110.003']: Refer to NIST guidelines when creating password policies. (Citation: NIST 800-63-3)&lt;br /&gt;['T1078.004']: Ensure that cloud accounts, particularly privileged accounts, have complex, unique passwords across all systems on the network. Passwords and access keys should be rotated regularly. This limits the amount of time credentials can be used to access resources if a credential is compromised without your knowledge. Cloud service providers may track access key age to help audit and identify keys that may need to be rotated.(Citation: AWS - IAM Console Best Practices)&lt;br /&gt;['T1075']: Ensure that built-in and created local administrator accounts have complex, unique passwords.&lt;br /&gt;['T1556.005', 'T1556']: Ensure that &lt;code&gt;AllowReversiblePasswordEncryption&lt;/code&gt; property is set to disabled unless there are application requirements.(Citation: store_pwd_rev_enc)&lt;br /&gt;['T1552.002', 'T1214']: Do not store credentials within the Registry.&lt;br /&gt;['T1550.003', 'T1097']: Ensure that local administrator accounts have complex, unique passwords.&lt;br /&gt;['T1537']: Consider rotating access keys within a certain number of days to reduce the effectiveness of stolen credentials.&lt;br /&gt;['T1552.004', 'T1145']: Use strong passphrases for private keys to make cracking difficult.&lt;br /&gt;['T1558.002', 'T1558.003', 'T1558']: Ensure strong password length (ideally 25+ characters) and complexity for service accounts and that these passwords periodically expire.(Citation: AdSecurity Cracking Kerberos Dec 2015) Also consider using Group Managed Service Accounts or another third party product such as password vaulting.(Citation: AdSecurity Cracking Kerberos Dec 2015)&lt;br /&gt;['T1003.003', 'T1003.006', 'T1003.002', 'T1003.004', 'T1003', 'T1003.005', 'T1078.003', 'T1003.001']: Ensure that local administrator accounts have complex, unique passwords across all systems on the network.&lt;br /&gt;['T1078']: Applications and appliances that utilize default username and password should be changed immediately after the installation, and before deployment to a production environment. (Citation: US-CERT Alert TA13-175A Risks of Default Passwords on the Internet) When possible, applications that use SSH keys should be updated periodically and properly secured.&lt;br /&gt;['T1552']: Use strong passphrases for private keys to make cracking difficult. Do not store credentials within the Registry. Establish an organizational policy that prohibits password storage in files.&lt;br /&gt;['T1503', 'T1555.003']: Organizations may consider weighing the risk of storing credentials in web browsers. If web browser credential disclosure is a significant concern, technical controls, policy, and user training may be used to prevent storage of credentials in web browsers.&lt;br /&gt;['T1187']: Use strong passwords to increase the difficulty of credential hashes from being cracked if they are obtained.&lt;br /&gt;['T1558.004']: Ensure strong password length (ideally 25+ characters) and complexity for service accounts and that these passwords periodically expire. Also consider using Group Managed Service Accounts or another third party product such as password vaulting. (Citation: AdSecurity Cracking Kerberos Dec 2015)&lt;br /&gt;['T1072']: Verify that account credentials that may be used to access deployment systems are unique and not used throughout the enterprise network.&lt;br /&gt;['T1003.007', 'T1003.008']: Ensure that root accounts have complex, unique passwords across all systems on the network.&lt;br /&gt;['T1078.001']: Applications and appliances that utilize default username and password should be changed immediately after the installation, and before deployment to a production environment. (Citation: US-CERT Alert TA13-175A Risks of Default Passwords on the Internet)&lt;br /&gt;['T1555.001', 'T1142']: The password for the user's login keychain can be changed from the user's login password. This increases the complexity for an adversary because they need to know an additional password.&lt;br /&gt;['T1081', 'T1552.001']: Establish an organizational policy that prohibits password storage in files.&lt;br /&gt;['T1077', 'T1021.002']: Do not reuse local administrator account passwords across systems. Ensure password complexity and uniqueness such that the passwords cannot be cracked or guessed.&lt;br /&gt;['T1563.001', 'T1184']: Ensure SSH key pairs have strong passwords and refrain from using key-store technologies such as ssh-agent unless they are properly protected.&lt;br /&gt;['T1555']: The password for the user's login keychain can be changed from the user's login password. This increases the complexity for an adversary because they need to know an additional password.

Organizations may consider weighing the risk of storing credentials in password stores and web browsers. If system, software, or web browser credential disclosure is a significant concern, technical controls, policy, and user training may be used to prevent storage of credentials in improper locations.&lt;br /&gt;['T1110']: Refer to NIST guidelines when creating password policies.(Citation: NIST 800-63-3)&lt;br /&gt;['T1601.002', 'T1601.001']: Refer to NIST guidelines when creating password policies.  (Citation: NIST 800-63-3)&lt;br /&gt;['T1201']: Ensure only valid password filters are registered. Filter DLLs must be present in Windows installation directory (&lt;code&gt;C:\Windows\System32\&lt;/code&gt; by default) of a domain controller and/or local computer with a corresponding entry in &lt;code&gt;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Lsa\Notification Packages&lt;/code&gt;. (Citation: Microsoft Install Password Filter n.d)&lt;br /&gt;['T1208']: Ensure strong password length (ideally 25+ characters) and complexity for service accounts and that these passwords periodically expire. (Citation: AdSecurity Cracking Kerberos Dec 2015) Also consider using Group Managed Service Accounts or another third party product such as password vaulting. (Citation: AdSecurity Cracking Kerberos Dec 2015)&lt;br /&gt;['T1555.005']: Refer to NIST guidelines when creating password policies for master passwords.(Citation: NIST 800-63-3)&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Mitre ATT&amp;CK Mitigation M1027" url="https://attack.mitre.org/mitigations/M1027"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:01.477">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-M1026" name="Privileged Account Management" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>Manage the creation, modification, use, and permissions associated to privileged accounts, including SYSTEM and root.&lt;br /&gt;&lt;p&gt;Detailed mitigations per technique:&lt;/p&gt;&lt;br /&gt;['T1053.005', 'T1053.002']: Configure the Increase Scheduling Priority option to only allow the Administrators group the rights to schedule a priority process. This can be configured through GPO: Computer Configuration &gt; [Policies] &gt; Windows Settings &gt; Security Settings &gt; Local Policies &gt; User Rights Assignment: Increase scheduling priority. (Citation: TechNet Scheduling Priority)&lt;br /&gt;['T1206']: Setting the &lt;code&gt;timestamp_timeout&lt;/code&gt; to 0 will require the user to input their password every time &lt;code&gt;sudo&lt;/code&gt; is executed.&lt;br /&gt;['T1550.003']: Limit domain admin account permissions to domain controllers and limited servers. Delegate other admin functions to separate accounts.(Citation: ADSecurity AD Kerberos Attacks)&lt;br /&gt;['T1505.004']: Do not allow administrator accounts that have permissions to add IIS components to be used for day-to-day operations that may expose these permissions to potential adversaries and/or other unprivileged systems.&lt;br /&gt;['T1556.005']: Audit domain and local accounts as well as their permission levels routinely to look for situations that could allow an adversary to gain wide access by obtaining credentials of a privileged account.(Citation: TechNet Credential Theft)(Citation: TechNet Least Privilege) These audits should also include if default accounts have been enabled, or if new local accounts are created that have not be authorized. Follow best practices for design and administration of an enterprise network to limit privileged account use across administrative tiers.(Citation: Microsoft Securing Privileged Access)&lt;br /&gt;['T1035', 'T1569.002', 'T1569']: Ensure that permissions disallow services that run at a higher permissions level from being created or interacted with by a user with a lower permission level.&lt;br /&gt;['T1214', 'T1552.002', 'T1552']: If it is necessary that software must store credentials in the Registry, then ensure the associated accounts have limited permissions so they cannot be abused if obtained by an adversary.&lt;br /&gt;['T1505.002', 'T1505.001']: Do not allow administrator accounts that have permissions to add component software on these services to be used for day-to-day operations that may expose them to potential adversaries on unprivileged systems. &lt;br /&gt;['T1075', 'T1550', 'T1550.002']: Limit credential overlap across systems to prevent the damage of credential compromise and reduce the adversary's ability to perform Lateral Movement between systems.&lt;br /&gt;['T1017']: Grant access to application deployment systems only to a limited number of authorized administrators.  Verify that account credentials that may be used to access deployment systems are unique and not used throughout the enterprise network.&lt;br /&gt;['T1169']: By requiring a password, even if an adversary can get terminal access, they must know the password to run anything in the sudoers file.&lt;br /&gt;['T1047', 'T1084']: Prevent credential overlap across systems of administrator and privileged accounts. (Citation: FireEye WMI 2015)&lt;br /&gt;['T1208']: Limit service accounts to minimal required privileges, including membership in privileged groups such as Domain Administrators. (Citation: AdSecurity Cracking Kerberos Dec 2015)&lt;br /&gt;['T1098.003']: Ensure that all accounts use the least privileges they require.&lt;br /&gt;['T1077', 'T1021.002']: Deny remote use of local admin credentials to log into systems. Do not allow domain user accounts to be in the local Administrators group multiple systems.&lt;br /&gt;['T1222.001', 'T1222.002', 'T1222']: Ensure critical system files as well as those known to be abused by adversaries have restrictive permissions and are owned by an appropriately privileged account, especially if access is not required by users nor will inhibit system functionality.&lt;br /&gt;['T1556.003']: Limit access to the root account and prevent users from modifying PAM components through proper privilege separation (ex SELinux, grsecurity, AppArmor, etc.) and limiting Privilege Escalation opportunities.&lt;br /&gt;['T1021.006', 'T1028']: If the service is necessary, lock down critical enclaves with separate WinRM accounts and permissions.&lt;br /&gt;['T1599', 'T1601.001', 'T1601.002', 'T1556.004', 'T1599.001', 'T1601']: Restrict administrator accounts to as few individuals as possible, following least privilege principles.  Prevent credential overlap across systems of administrator and privileged accounts, particularly between network and non-network platforms, such as servers or endpoints.&lt;br /&gt;['T1003.008']: Follow best practices in restricting access to privileged accounts to avoid hostile programs from accessing such sensitive information.&lt;br /&gt;['T1072']: Grant access to application deployment systems only to a limited number of authorized administrators.&lt;br /&gt;['T1553.006']: Limit the usage of local administrator and domain administrator accounts to be used for day-to-day operations that may expose them to potential adversaries.&lt;br /&gt;['T1484']: Use least privilege and protect administrative access to the Domain Controller and Active Directory Federation Services (AD FS) server. Do not create service accounts with administrative privileges.&lt;br /&gt;['T1076', 'T1563.002', 'T1021.001']: Consider removing the local Administrators group from the list of groups allowed to log in through RDP.&lt;br /&gt;['T1547.006', 'T1215']: Limit access to the root account and prevent users from loading kernel modules and extensions through proper privilege separation and limiting Privilege Escalation opportunities.&lt;br /&gt;['T1134.003', 'T1134.002', 'T1134', 'T1134.001']: Limit permissions so that users and user groups cannot create tokens. This setting should be defined for the local system account only. GPO: Computer Configuration &gt; [Policies] &gt; Windows Settings &gt; Security Settings &gt; Local Policies &gt; User Rights Assignment: Create a token object. (Citation: Microsoft Create Token) Also define who can create a process level token to only the local and network service through GPO: Computer Configuration &gt; [Policies] &gt; Windows Settings &gt; Security Settings &gt; Local Policies &gt; User Rights Assignment: Replace a process level token.(Citation: Microsoft Replace Process Token)

Administrators should log in as a standard user but run their tools with administrator privileges using the built-in access token manipulation command &lt;code&gt;runas&lt;/code&gt;.(Citation: Microsoft runas)&lt;br /&gt;['T1542.001', 'T1019']: Prevent adversary access to privileged accounts or access necessary to perform this technique.&lt;br /&gt;['T1078.002']: Audit domain account permission levels routinely to look for situations that could allow an adversary to gain wide access by obtaining credentials of a privileged account. Do not put user or admin domain accounts in the local administrator groups across systems unless they are tightly controlled and use of accounts is segmented, as this is often equivalent to having a local administrator account with the same password on all systems. Follow best practices for design and administration of an enterprise network to limit privileged account use across administrative tiers. Limit credential overlap across systems to prevent access if account credentials are obtained.&lt;br /&gt;['T1190']: Use least privilege for service accounts will limit what permissions the exploited process gets on the rest of the system.&lt;br /&gt;['T1078.004']: Review privileged cloud account permission levels routinely to look for those that could allow an adversary to gain wide access.(Citation: TechNet Credential Theft)(Citation: TechNet Least Privilege) These reviews should also check if new privileged cloud accounts have been created that were not authorized.&lt;br /&gt;['T1078.003']: Audit local accounts permission levels routinely to look for situations that could allow an adversary to gain wide access by obtaining credentials of a privileged account. (Citation: TechNet Credential Theft) (Citation: TechNet Least Privilege) These audits should check if new local accounts are created that have not be authorized. Implementing LAPS may help prevent reuse of local administrator credentials across a domain.(Citation: Microsoft Remote Use of Local)&lt;br /&gt;['T1558.002', 'T1558.003']: Limit service accounts to minimal required privileges, including membership in privileged groups such as Domain Administrators.(Citation: AdSecurity Cracking Kerberos Dec 2015)&lt;br /&gt;['T1612', 'T1611', 'T1053.007', 'T1609']: Ensure containers are not running as root by default. In Kubernetes environments, consider defining a Pod Security Policy that prevents pods from running privileged containers.(Citation: Kubernetes Hardening Guide)&lt;br /&gt;['T1484.002']: Use the principal of least privilege and protect administrative access to domain trusts.&lt;br /&gt;['T1098.002', 'T1098', 'T1136', 'T1136.002']: Do not allow domain administrator accounts to be used for day-to-day operations that may expose them to potential adversaries on unprivileged systems.&lt;br /&gt;['T1003.003', 'T1003.002', 'T1003.001', 'T1003.005', 'T1003.006']: Do not put user or admin domain accounts in the local administrator groups across systems unless they are tightly controlled, as this is often equivalent to having a local administrator account with the same password on all systems. Follow best practices for design and administration of an enterprise network to limit privileged account use across administrative tiers.&lt;br /&gt;['T1542.005']: Use of Authentication, Authorization, and Accounting (AAA) systems will limit actions administrators can perform and provide a history of user actions to detect unauthorized use and abuse. TACACS+ can keep control over which commands administrators are permitted to use through the configuration of authentication and command authorization. (Citation: Cisco IOS Software Integrity Assurance - AAA) (Citation: Cisco IOS Software Integrity Assurance - TACACS)&lt;br /&gt;['T1088', 'T1548.002']: Remove users from the local administrator group on systems.&lt;br /&gt;['T1606', 'T1606.002']: Restrict permissions and access to the AD FS server to only originate from privileged access workstations.(Citation: FireEye ADFS)&lt;br /&gt;['T1559.001', 'T1559']: Modify Registry settings (directly or using Dcomcnfg.exe) in `HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\AppID\\{AppID_GUID}` associated with the process-wide security of individual COM applications.(Citation: Microsoft Process Wide Com Keys)

Modify Registry settings (directly or using Dcomcnfg.exe) in `HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Ole` associated with system-wide security defaults for all COM applications that do no set their own process-wide security.(Citation: Microsoft System Wide Com Keys) (Citation: Microsoft COM ACL)&lt;br /&gt;['T1136.003']: Do not allow privileged accounts to be used for day-to-day operations that may expose them to potential adversaries on unprivileged systems.&lt;br /&gt;['T1218']: Restrict execution of particularly vulnerable binaries to privileged accounts or groups that need to use it to lessen the opportunities for malicious usage.&lt;br /&gt;['T1184', 'T1563.001']: Do not allow remote access via SSH as root or other privileged accounts.&lt;br /&gt;['T1097']: Limit domain admin account permissions to domain controllers and limited servers. Delegate other admin functions to separate accounts. (Citation: ADSecurity AD Kerberos Attacks)&lt;br /&gt;['T1055']: Utilize Yama (ex: /proc/sys/kernel/yama/ptrace_scope) to mitigate ptrace based process injection by restricting the use of ptrace to privileged users only. Other mitigation controls involve the deployment of security kernel modules that provide advanced access control and process restrictions such as SELinux, grsecurity, and AppArmor.&lt;br /&gt;['T1051']: Networks that allow for open development and testing of Web content and allow users to set up their own Web servers on the enterprise network may be particularly vulnerable if the systems and Web servers are not properly secured to limit privileged account use and unauthenticated network share access.&lt;br /&gt;['T1548']: Remove users from the local administrator group on systems.

By requiring a password, even if an adversary can get terminal access, they must know the password to run anything in the sudoers file. Setting the timestamp_timeout to 0 will require the user to input their password every time sudo is executed.&lt;br /&gt;['T1556.001', 'T1078']: Audit domain and local accounts as well as their permission levels routinely to look for situations that could allow an adversary to gain wide access by obtaining credentials of a privileged account. (Citation: TechNet Credential Theft) (Citation: TechNet Least Privilege) These audits should also include if default accounts have been enabled, or if new local accounts are created that have not be authorized. Follow best practices for design and administration of an enterprise network to limit privileged account use across administrative tiers. (Citation: Microsoft Securing Privileged Access)&lt;br /&gt;['T1552.007']: Use the principle of least privilege for privileged accounts such as the service account in Kubernetes.&lt;br /&gt;['T1098.001']: Do not allow domain administrator or root accounts to be used for day-to-day operations that may expose them to potential adversaries on unprivileged systems.&lt;br /&gt;['T1525']: Limit permissions associated with creating and modifying platform images or containers based on the principle of least privilege.&lt;br /&gt;['T1053']: Configure the Increase Scheduling Priority option to only allow the Administrators group the rights to schedule a priority process. This can be can be configured through GPO: Computer Configuration &gt; [Policies] &gt; Windows Settings &gt; Security Settings &gt; Local Policies &gt; User Rights Assignment: Increase scheduling priority. (Citation: TechNet Scheduling Priority)&lt;br /&gt;['T1100']: Audit account and group permissions to ensure that accounts used to manage servers do not overlap with accounts and permissions of users in the internal network that could be acquired through Credential Access and used to log into the Web server and plant a Web shell or pivot from the Web server into the internal network. (Citation: US-CERT Alert TA15-314A Web Shells)&lt;br /&gt;['T1542.003', 'T1067']: Ensure proper permissions are in place to help prevent adversary access to privileged accounts necessary to install a bootkit.&lt;br /&gt;['T1562.009']: Restrict administrator accounts to as few individuals as possible, following least privilege principles, that may be abused to remotely boot a machine in safe mode.(Citation: CyberArk Labs Safe Mode 2016)&lt;br /&gt;['T1175']: Modify Registry settings (directly or using Dcomcnfg.exe) in &lt;code&gt;HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\AppID\\{AppID_GUID}&lt;/code&gt; associated with the process-wide security of individual COM applications.(Citation: Microsoft Process Wide Com Keys)

Modify Registry settings (directly or using Dcomcnfg.exe) in &lt;code&gt;HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Ole&lt;/code&gt; associated with system-wide security defaults for all COM applications that do no set their own process-wide security.(Citation: Microsoft System Wide Com Keys) (Citation: Microsoft COM ACL)&lt;br /&gt;['T1210']: Minimize permissions and access for service accounts to limit impact of exploitation.&lt;br /&gt;['T1003']: Windows:
Do not put user or admin domain accounts in the local administrator groups across systems unless they are tightly controlled, as this is often equivalent to having a local administrator account with the same password on all systems. Follow best practices for design and administration of an enterprise network to limit privileged account use across administrative tiers.(Citation: Microsoft Securing Privileged Access)

Linux:
Scraping the passwords from memory requires root privileges. Follow best practices in restricting access to privileged accounts to avoid hostile programs from accessing such sensitive regions of memory.&lt;br /&gt;['T1558.001']: Limit domain admin account permissions to domain controllers and limited servers. Delegate other admin functions to separate accounts.&lt;br /&gt;['T1546.003']: Prevent credential overlap across systems of administrator and privileged accounts.(Citation: FireEye WMI 2015)&lt;br /&gt;['T1059', 'T1059.001']: When PowerShell is necessary, restrict PowerShell execution policy to administrators. Be aware that there are methods of bypassing the PowerShell execution policy, depending on environment configuration.(Citation: Netspi PowerShell Execution Policy Bypass)&lt;br /&gt;['T1056.003']: Do not allow administrator accounts that have permissions to modify the Web content of organization login portals to be used for day-to-day operations that may expose them to potential adversaries on unprivileged systems.&lt;br /&gt;['T1501', 'T1543.002']: The creation and modification of systemd service unit files is generally reserved for administrators such as the Linux root user and other users with superuser privileges. &lt;br /&gt;['T1086']: When PowerShell is necessary, restrict PowerShell execution policy to administrators. Be aware that there are methods of bypassing the PowerShell execution policy, depending on environment configuration. (Citation: Netspi PowerShell Execution Policy Bypass) &lt;br /&gt;['T1542']: Ensure proper permissions are in place to help prevent adversary access to privileged accounts necessary to perform these actions&lt;br /&gt;['T1495']: Prevent adversary access to privileged accounts or access necessary to replace system firmware.&lt;br /&gt;['T1136.001']: Limit the usage of local administrator accounts to be used for day-to-day operations that may expose them to potential adversaries.&lt;br /&gt;['T1003.004']: Follow best practices for design and administration of an enterprise network to limit privileged account use across administrative tiers.(Citation: Tilbury Windows Credentials)&lt;br /&gt;['T1055.008']: Utilize Yama (ex: /proc/sys/kernel/yama/ptrace_scope) to mitigate ptrace based process injection by restricting the use of ptrace to privileged users only. Other mitigation controls involve the deployment of security kernel modules that provide advanced access control and process restrictions such as SELinux, grsecurity, and AppArmor. &lt;br /&gt;['T1003.007']: Follow best practices in restricting access to privileged accounts to avoid hostile programs from accessing sensitive information.&lt;br /&gt;['T1556']: Audit domain and local accounts as well as their permission levels routinely to look for situations that could allow an adversary to gain wide access by obtaining credentials of a privileged account. (Citation: TechNet Credential Theft) (Citation: TechNet Least Privilege) These audits should also include if default accounts have been enabled, or if new local accounts are created that have not be authorized. Follow best practices for design and administration of an enterprise network to limit privileged account use across administrative tiers. (Citation: Microsoft Securing Privileged Access)

Limit access to the root account and prevent users from modifying protected components through proper privilege separation (ex SELinux, grsecurity, AppArmor, etc.) and limiting Privilege Escalation opportunities.&lt;br /&gt;['T1563']: Do not allow remote access to services as a privileged account unless necessary.&lt;br /&gt;['T1053.006']: Limit access to the root account and prevent users from creating and/or modifying systemd timer unit files. &lt;br /&gt;['T1021.003']: Modify Registry settings (directly or using Dcomcnfg.exe) in `HKEY_LOCAL_MACHINE\SOFTWARE\Classes\AppID\{{AppID_GUID}}` associated with the process-wide security of individual COM applications.(Citation: Microsoft Process Wide Com Keys)

Modify Registry settings (directly or using Dcomcnfg.exe) in `HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Ole` associated with system-wide security defaults for all COM applications that do not set their own process-wide security.(Citation: Microsoft System Wide Com Keys) (Citation: Microsoft COM ACL)&lt;br /&gt;['T1059.008']: Use of Authentication, Authorization, and Accounting (AAA) systems will limit actions administrators can perform and provide a history of user actions to detect unauthorized use and abuse. TACACS+ can keep control over which commands administrators are permitted to use through the configuration of authentication and command authorization(Citation: Cisco IOS Software Integrity Assurance - AAA) (Citation: Cisco IOS Software Integrity Assurance - TACACS)&lt;br /&gt;['T1218.007']: Restrict execution of Msiexec.exe to privileged accounts or groups that need to use it to lessen the opportunities for malicious usage.&lt;br /&gt;['T1505']: Do not allow administrator accounts that have permissions to add component software on these services to be used for day-to-day operations that may expose them to potential adversaries on unprivileged systems.&lt;br /&gt;['T1548.003', 'T1548.003', 'T1548.003']: By requiring a password, even if an adversary can get terminal access, they must know the password to run anything in the sudoers file. Setting the &lt;code&gt;timestamp_timeout&lt;/code&gt; to 0 will require the user to input their password every time &lt;code&gt;sudo&lt;/code&gt; is executed.&lt;br /&gt;['T1558']: Limit domain admin account permissions to domain controllers and limited servers. Delegate other admin functions to separate accounts.

Limit service accounts to minimal required privileges, including membership in privileged groups such as Domain Administrators.(Citation: AdSecurity Cracking Kerberos Dec 2015)&lt;br /&gt;['T1218']: If these binaries are required for use, then restrict execution of them to privileged accounts or groups that need to use them to lessen the opportunities for malicious use.&lt;br /&gt;['T1055']: ###Linux

Utilize Yama to mitigate ptrace based process injection by restricting the use of ptrace to privileged users only. Other mitigation controls involve the deployment of security kernel modules that provide advanced access control and process restrictions such as SELinux, grsecurity, and AppArmor.&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Mitre ATT&amp;CK Mitigation M1026" url="https://attack.mitre.org/mitigations/M1026"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:01.471">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-DS0009" name="Process" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>Instances of computer programs that are being executed by at least one thread. Processes have memory space for process executables, loaded modules (DLLs or shared libraries), and allocated memory regions containing everything from user input to application-specific data structures(Citation: Microsoft Processes and Threads)&lt;br /&gt;&lt;p&gt;Detailed detections per technique:&lt;/p&gt;&lt;br /&gt;['T1055.008']: Monitoring for Linux specific calls such as the ptrace system call should not generate large amounts of data due to their specialized nature, and can be a very effective method to detect some of the common process injection methods.(Citation: ArtOfMemoryForensics) (Citation: GNU Acct) (Citation: RHEL auditd) (Citation: Chokepoint preload rootkits)&lt;br /&gt;['T1055.014']: Monitor for malicious usage of system calls, such as ptrace and mmap, that can be used to attach to, manipulate memory, then redirect a processes' execution path. Monitoring for Linux specific calls such as the ptrace system call should not generate large amounts of data due to their specialized nature, and can be a very effective method to detect some of the common process injection methods.(Citation: ArtOfMemoryForensics)(Citation: GNU Acct)(Citation: RHEL auditd)(Citation: Chokepoint preload rootkits)&lt;br /&gt;['T1112']: Monitor for API calls associated with concealing Registry keys, such as Reghide. (Citation: Microsoft Reghide NOV 2006) Inspect and cleanup malicious hidden Registry entries using Native Windows API calls and/or tools such as Autoruns (Citation: SpectorOps Hiding Reg Jul 2017) and RegDelNull (Citation: Microsoft RegDelNull July 2016). &lt;br /&gt;['T1547']: Monitor for API calls that may configure system settings to automatically execute a program during system boot or logon to maintain persistence or gain higher-level privileges on compromised systems.&lt;br /&gt;['T1087.002']: Monitor for API calls that may attempt to gather information about domain accounts such as type of user, privileges and groups.&lt;br /&gt;['T1033']: Monitor for API calls that may attempt to dump credentials to obtain account login and credential material, normally in the form of a hash or a clear text password, from the operating system and software.&lt;br /&gt;['T1565.002']: Monitor for API calls associated with altering data. Remote access tools with built-in features may interact directly with the Windows API to gather information.&lt;br /&gt;['T1497.003']: Monitor for API calls that may employ various time-based methods to detect and avoid virtualization and analysis environments. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary's implementation and monitoring required.&lt;br /&gt;['T1082']: Monitor for API calls that may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). In cloud-based systems, native logging can be used to identify access to certain APIs and dashboards that may contain system information. Depending on how the environment is used, that data alone may not be useful due to benign use during normal operations.&lt;br /&gt;['T1622']: Monitor for API calls (such as &lt;code&gt;IsDebuggerPresent()&lt;/code&gt;) that may employ various means to detect and avoid debugged environments. Detecting actions related to debugger identification may be difficult depending on the adversary's implementation and monitoring required.&lt;br /&gt;['T1542.002']: Monitor for API calls associated with the use of device drivers and/or provided by SMART (Self-Monitoring, Analysis and Reporting Technology) (Citation: SanDisk SMART) (Citation: SmartMontools) disk monitoring may reveal malicious manipulations of components. Otherwise, this technique may be difficult to detect since malicious activity is taking place on system components possibly outside the purview of OS security and integrity mechanisms.&lt;br /&gt;['T1125']: Detection of this technique may be difficult due to the various APIs that may be used. Telemetry data regarding API use may not be useful depending on how a system is normally used, but may provide context to other potentially malicious activity occurring on a system. Behavior that could indicate technique use include an unknown or unusual process accessing APIs associated with devices or software that interact with the video camera, recording devices, or recording software, and a process periodically writing files to disk that contain video or camera image data.&lt;br /&gt;['T1120']: Monitor for API calls that may attempt to gather information about attached peripheral devices and components connected to a computer system.&lt;br /&gt;['T1057']: Monitor for API calls may attempt to get information about running processes on a system. &lt;br /&gt;['T1055.003']: Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such as &lt;code&gt;CreateRemoteThread&lt;/code&gt;, &lt;code&gt;SuspendThread&lt;/code&gt;/&lt;code&gt;SetThreadContext&lt;/code&gt;/&lt;code&gt;ResumeThread&lt;/code&gt;, and those that can be used to modify memory within another process, such as &lt;code&gt;VirtualAllocEx&lt;/code&gt;/&lt;code&gt;WriteProcessMemory&lt;/code&gt;, may be used for this technique.(Citation: Elastic Process Injection July 2017)&lt;br /&gt;['T1135']: Monitor for API calls that may look for folders and drives shared on remote systems as a means of identifying sources of information to gather as a precursor for Collection and to identify potential systems of interest for Lateral Movement.&lt;br /&gt;['T1574.013']: Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances. for known bad sequence of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such as &lt;code&gt;WriteProcessMemory()&lt;/code&gt; and &lt;code&gt;NtQueryInformationProcess()&lt;/code&gt; with the parameter set to &lt;code&gt;ProcessBasicInformation&lt;/code&gt; may be used for this technique.(Citation: Lazarus APT January 2022)&lt;br /&gt;['T1489']: Remote access tools with built-in features may interact directly with the Windows API to perform these functions outside of typical system utilities. For example, &lt;code&gt;ChangeServiceConfigW&lt;/code&gt; may be used by an adversary to prevent services from starting.(Citation: Talos Olympic Destroyer 2018)&lt;br /&gt;['T1134']: Monitor for API calls, loaded by a payload, for token manipulation only through careful analysis of user network activity, examination of running processes, and correlation with other endpoint and network behavior. There are many Windows API calls a payload can take advantage of to manipulate access tokens (e.g., &lt;code&gt;LogonUser&lt;/code&gt; (Citation: Microsoft LogonUser), &lt;code&gt;DuplicateTokenEx&lt;/code&gt;(Citation: Microsoft DuplicateTokenEx), and &lt;code&gt;ImpersonateLoggedOnUser&lt;/code&gt;(Citation: Microsoft ImpersonateLoggedOnUser)). Please see the referenced Windows API pages for more information.&lt;br /&gt;['T1555.005']: Monitor for API calls that may search for common password storage locations to obtain user credentials.&lt;br /&gt;['T1115']: Monitor API calls that could collect data stored in the clipboard from users copying information within or between applications.&lt;br /&gt;['T1556']: Monitor for calls to &lt;code&gt;OpenProcess&lt;/code&gt; that can be used to manipulate lsass.exe running on a domain controller as well as for malicious modifications to functions exported from authentication-related system DLLs (such as cryptdll.dll and samsrv.dll).(Citation: Dell Skeleton)&lt;br /&gt;['T1070']: Monitor for API calls that may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined malware.&lt;br /&gt;['T1087.001']: Monitor for API calls (such as &lt;code&gt;NetUserEnum()&lt;/code&gt;) that may attempt to gather local accounts information such as type of user, privileges and groups.&lt;br /&gt;['T1056.001']: Monitor for API calls to the SetWindowsHook, GetKeyState, and GetAsyncKeyState.(Citation: Adventures of a Keystroke) and look for common keylogging API calls. API calls alone are not an indicator of keylogging, but may provide behavioral data that is useful when combined with other information such as new files written to disk and unusual processes.&lt;br /&gt;['T1005']: Monitor for API calls that may search local system sources, such as file systems or local databases, to find files of interest and sensitive data prior to Exfiltration. &lt;br /&gt;['T1548']: Also look for any process API calls for behavior that may be indicative of [Process Injection](https://attack.mitre.org/techniques/T1055). Monitoring OS API callbacks for the execution can also be a way to detect this behavior but requires specialized security tooling.&lt;br /&gt;['T1055.004']: Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such as &lt;code&gt;SuspendThread&lt;/code&gt;/&lt;code&gt;SetThreadContext&lt;/code&gt;/&lt;code&gt;ResumeThread&lt;/code&gt;, &lt;code&gt;QueueUserAPC&lt;/code&gt;/&lt;code&gt;NtQueueApcThread&lt;/code&gt;, and those that can be used to modify memory within another process, such as &lt;code&gt;VirtualAllocEx&lt;/code&gt;/&lt;code&gt;WriteProcessMemory&lt;/code&gt;, may be used for this technique.(Citation: Elastic Process Injection July 2017)&lt;br /&gt;['T1134.002']: Monitor for API calls associated with detecting token manipulation only through careful analysis of user activity, examination of running processes, and correlation with other endpoint and network behavior. Analysts can also monitor for use of Windows APIs such as &lt;code&gt;CreateProcessWithTokenW&lt;/code&gt; and correlate activity with other suspicious behavior to reduce false positives that may be due to normal benign use by users and administrators.&lt;br /&gt;['T1546.009']: Monitor and analyze application programming interface (API) calls that are indicative of Registry edits, such as &lt;code&gt;RegCreateKeyEx&lt;/code&gt; and &lt;code&gt;RegSetValueEx&lt;/code&gt;. (Citation: Elastic Process Injection July 2017)&lt;br /&gt;['T1518']: Monitor for API calls that may attempt to get a listing of software and software versions that are installed on a system or in a cloud environment.&lt;br /&gt;['T1497.002']: Monitor for API calls that may employ various means to detect and avoid virtualization and analysis environments. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary's implementation and monitoring required.&lt;br /&gt;['T1055.011']: Monitor for API calls related to enumerating and manipulating EWM such as GetWindowLong (Citation: Microsoft GetWindowLong function) and SetWindowLong (Citation: Microsoft SetWindowLong function). Malware associated with this technique have also used SendNotifyMessage (Citation: Microsoft SendNotifyMessage function) to trigger the associated window procedure and eventual malicious injection. (Citation: Elastic Process Injection July 2017)&lt;br /&gt;['T1012']: Monitor for API calls (such as &lt;code&gt;RegOpenKeyExA&lt;/code&gt;) that may interact with the Windows Registry to gather information about the system, configuration, and installed software. &lt;br /&gt;['T1614']: Remote access tools with built-in features may interact directly with the Windows API, such as calling &lt;code&gt; GetLocaleInfoW&lt;/code&gt; to gather information.(Citation: FBI Ragnar Locker 2020)&lt;br /&gt;['T1555.001']: Monitor for Keychain Services API calls, specifically legacy extensions such as &lt;code&gt;SecKeychainFindInternetPassword&lt;/code&gt;, that may collect Keychain data from a system to acquire credentials.(Citation: Keychain Items Apple Dev API)&lt;br /&gt;['T1106']: Monitoring API calls may generate a significant amount of data and may not be useful for defense unless collected under specific circumstances, since benign use of API functions are common and may be difficult to distinguish from malicious behavior. Correlation of other events with behavior surrounding API function calls using API monitoring will provide additional context to an event that may assist in determining if it is due to malicious behavior. Correlation of activity by process lineage by process ID may be sufficient.&lt;br /&gt;['T1218']: Monitor for API calls that may forge credential materials that can be used to gain access to web applications or Internet services. &lt;br /&gt;['T1070.001']: Monitor for Windows API calls that may clear Windows Event Logs to hide the activity of an intrusion.&lt;br /&gt;['T1611']: Remote access tools with built-in features may interact directly with the Windows API, such as calling &lt;code&gt;GetLocaleInfoW()&lt;/code&gt; to gather system location information.(Citation: FBI Ragnar Locker 2020)&lt;br /&gt;['T1111']: Monitor for API calls associated with polling to intercept keystrokes.&lt;br /&gt;['T1003.001']: Monitor for API calls that may attempt to access credential material stored in the process memory of the Local Security Authority Subsystem Service (LSASS).&lt;br /&gt;['T1049']: Monitor for API calls that may attempt to get a listing of network connections to or from the compromised system they are currently accessing or from remote systems by querying for information over the network.&lt;br /&gt;['T1482']: Monitor for API calls associated with gathering information on domain trust relationships that may be used to identify lateral movement like DSEnumerateDomainTrusts() Win32 API call to spot activity associated with Domain Trust Discovery.(Citation: Harmj0y Domain Trusts) Information may also be acquired through Windows system management tools such as PowerShell. The .NET method GetAllTrustRelationships() can be an indicator of Domain Trust Discovery.(Citation: Microsoft GetAllTrustRelationships)&lt;br /&gt;['T1129']: Monitor for API calls that may execute malicious payloads via loading shared modules.&lt;br /&gt;['T1124']: Monitor for API calls that may gather the system time and/or time zone from a local or remote system. Remote access tools with built-in features may interact directly with the Windows API to gather information.&lt;br /&gt;['T1542']: Monitor for API calls that may abuse Pre-OS Boot mechanisms as a way to establish persistence on a system. Disk check, forensic utilities, and data from device drivers (i.e. API calls) may reveal anomalies that warrant deeper investigation. (Citation: ITWorld Hard Disk Health Dec 2014)&lt;br /&gt;['T1055']: Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such as &lt;code&gt;CreateRemoteThread&lt;/code&gt;, &lt;code&gt;SuspendThread&lt;/code&gt;/&lt;code&gt;SetThreadContext&lt;/code&gt;/&lt;code&gt;ResumeThread&lt;/code&gt;, &lt;code&gt;QueueUserAPC&lt;/code&gt;/&lt;code&gt;NtQueueApcThread&lt;/code&gt;, and those that can be used to modify memory within another process, such as &lt;code&gt;VirtualAllocEx&lt;/code&gt;/&lt;code&gt;WriteProcessMemory&lt;/code&gt;, may be used for this technique.(Citation: Elastic Process Injection July 2017) Monitoring for Linux specific calls such as the ptrace system call should not generate large amounts of data due to their specialized nature, and can be a very effective method to detect some of the common process injection methods.(Citation: ArtOfMemoryForensics) (Citation: GNU Acct) (Citation: RHEL auditd) (Citation: Chokepoint preload rootkits)&lt;br /&gt;['T1055.002']: Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such as &lt;code&gt;CreateRemoteThread&lt;/code&gt; and those that can be used to modify memory within another process, such as &lt;code&gt;VirtualAllocEx&lt;/code&gt;/&lt;code&gt;WriteProcessMemory&lt;/code&gt;, may be used for this technique.(Citation: Elastic Process Injection July 2017)&lt;br /&gt;['T1547.010']: Monitor process API calls to &lt;code&gt;AddMonitor&lt;/code&gt;.(Citation: AddMonitor)&lt;br /&gt;['T1614.001']: Monitor for API calls that may attempt to gather information about the system language of a victim in order to infer the geographical location of that host.&lt;br /&gt;['T1056.004']: Monitor for API calls to the SetWindowsHookEx and SetWinEventHook functions, which install a hook procedure.(Citation: Microsoft Hook Overview)(Citation: Volatility Detecting Hooks Sept 2012) Also consider analyzing hook chains (which hold pointers to hook procedures for each type of hook) using tools(Citation: Volatility Detecting Hooks Sept 2012)(Citation: PreKageo Winhook Jul 2011)(Citation: Jay GetHooks Sept 2011) or by programmatically examining internal kernel structures.(Citation: Zairon Hooking Dec 2006)(Citation: EyeofRa Detecting Hooking June 2017)&lt;br /&gt;['T1548.004']: Monitoring OS API callbacks for the execution can also be a way to detect this behavior but requires specialized security tooling.&lt;br /&gt;['T1555.004']: Consider monitoring API calls such as &lt;code&gt;CredEnumerateA&lt;/code&gt; that may list credentials from the Windows Credential Manager.(Citation: Microsoft CredEnumerate)(Citation: Delpy Mimikatz Crendential Manager)&lt;br /&gt;['T1218.002']: Monitor for API calls that may forge web cookies that can be used to gain access to web applications or Internet services.&lt;br /&gt;['T1620']: Monitor for code artifacts associated with reflectively loading code, such as the abuse of .NET functions such as &lt;code&gt;Assembly.Load()&lt;/code&gt; and [Native API](https://attack.mitre.org/techniques/T1106) functions such as &lt;code&gt;CreateThread()&lt;/code&gt;, &lt;code&gt;memfd_create()&lt;/code&gt;, &lt;code&gt;execve()&lt;/code&gt;, and/or &lt;code&gt;execveat()&lt;/code&gt;.(Citation: 00sec Droppers)(Citation: S1 Old Rat New Tricks)&lt;br /&gt;['T1055.013']: Monitor and analyze calls to &lt;code&gt;CreateTransaction&lt;/code&gt;, &lt;code&gt;CreateFileTransacted&lt;/code&gt;, &lt;code&gt;RollbackTransaction&lt;/code&gt;, and other rarely used functions indicative of TxF activity. Process Doppelganging also invokes an outdated and undocumented implementation of the Windows process loader via calls to &lt;code&gt;NtCreateProcessEx&lt;/code&gt; and &lt;code&gt;NtCreateThreadEx&lt;/code&gt; as well as API calls used to modify memory within another process, such as &lt;code&gt;WriteProcessMemory&lt;/code&gt;. (Citation: BlackHat Process Doppelganging Dec 2017) (Citation: hasherezade Process Doppelganging Dec 2017)&lt;br /&gt;['T1543']: Monitor for API calls that may create or modify system-level processes to repeatedly execute malicious payloads as part of persistence.&lt;br /&gt;['T1556.001']: Monitor for API calls to OpenProcess that can be used to manipulate lsass.exe running on a domain controller&lt;br /&gt;['T1055.015']: Consider monitoring for excessive use of &lt;code&gt;SendMessage&lt;/code&gt; and/or &lt;code&gt;PostMessage&lt;/code&gt; API functions with &lt;code&gt;LVM_SETITEMPOSITION&lt;/code&gt; and/or &lt;code&gt;LVM_GETITEMPOSITION&lt;/code&gt; arguments.

Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such as &lt;code&gt;FindWindow&lt;/code&gt;, &lt;code&gt;FindWindowEx&lt;/code&gt;, &lt;code&gt;EnumWindows&lt;/code&gt;, &lt;code&gt;EnumChildWindows&lt;/code&gt;, and those that can be used to modify memory within another process, such as &lt;code&gt;VirtualAllocEx&lt;/code&gt;/&lt;code&gt;WriteProcessMemory&lt;/code&gt;, may be abused for this technique. &lt;br /&gt;['T1547.012']: Monitor process API calls to &lt;code&gt;AddPrintProcessor&lt;/code&gt; and &lt;code&gt;GetPrintProcessorDirectory&lt;/code&gt;.&lt;br /&gt;['T1016']: Monitor for API calls (such as &lt;code&gt;GetAdaptersInfo()&lt;/code&gt; and &lt;code&gt;GetIpNetTable()&lt;/code&gt;) that may gather details about the network configuration and settings, such as IP and/or MAC addresses.&lt;br /&gt;['T1113']: Monitoring for screen capture behavior will depend on the method used to obtain data from the operating system and write output files. Detection methods could include collecting information from unusual processes using API calls used to obtain image data, and monitoring for image files written to disk, such as &lt;code&gt;CopyFromScreen&lt;/code&gt;, &lt;code&gt;xwd&lt;/code&gt;, or &lt;code&gt;screencapture&lt;/code&gt;.(Citation: CopyFromScreen .NET)(Citation: Antiquated Mac Malware). The sensor data may need to be correlated with other events to identify malicious activity, depending on the legitimacy of this behavior within a given network environment.&lt;br /&gt;['T1564']: Monitor for API calls that may attempt to hide artifacts associated with their behaviors to evade detection.&lt;br /&gt;['T1518.001']: Monitor for API calls that may attempt to get a listing of security software, configurations, defensive tools, and sensors that are installed on a system or in a cloud environment.&lt;br /&gt;['T1056']: Monitor for API calls to SetWindowsHook, GetKeyState, and GetAsyncKeyState (Citation: Adventures of a Keystroke)&lt;br /&gt;['T1010']: Monitor for API calls (such as &lt;code&gt;GetForegroundWindow()&lt;/code&gt;) that may attempt to get a listing of open application windows. &lt;br /&gt;['T1059.002']: Monitor for execution of AppleScript through &lt;code&gt;osascript&lt;/code&gt; and usage of the &lt;code&gt;NSAppleScript&lt;/code&gt; and &lt;code&gt;OSAScript&lt;/code&gt; APIs that may be related to other suspicious behavior occurring on the system.&lt;br /&gt;['T1546.010']: Monitor and analyze application programming interface (API) calls that are indicative of Registry edits such as &lt;code&gt;RegCreateKeyEx&lt;/code&gt; and &lt;code&gt;RegSetValueEx&lt;/code&gt;. (Citation: Elastic Process Injection July 2017)&lt;br /&gt;['T1543.003']: Monitor for API calls that may create or modify Windows services (ex: ` CreateServiceW()`) to repeatedly execute malicious payloads as part of persistence.&lt;br /&gt;['T1083']: Monitor for API calls that may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system.&lt;br /&gt;['T1555.003']: Monitor for API calls that may acquire credentials from web browsers by reading files specific to the target browser.(Citation: Talos Olympic Destroyer 2018)&lt;br /&gt;['T1564.004']: Monitor calls to the &lt;code&gt;ZwSetEaFile&lt;/code&gt; and &lt;code&gt;ZwQueryEaFile&lt;/code&gt; Windows API functions as well as binaries used to interact with EA, (Citation: Oddvar Moe ADS1 Jan 2018) (Citation: Oddvar Moe ADS2 Apr 2018) and consider regularly scanning for the presence of modified information. (Citation: SpectorOps Host-Based Jul 2017)&lt;br /&gt;['T1564.001']: Monitor newly executed processes that may set files and directories to be hidden to evade detection mechanisms.&lt;br /&gt;['T1546.010']: Monitor newly executed processes that may establish persistence and/or elevate privileges by executing malicious content triggered by AppInit DLLs loaded into processes.&lt;br /&gt;['T1490']: Use process monitoring to monitor the execution and command line parameters of binaries involved in inhibiting system recovery, such as vssadmin, wbadmin, and bcdedit.&lt;br /&gt;['T1218.011']: Use process monitoring to monitor the execution and arguments of rundll32.exe. Compare recent invocations of rundll32.exe with prior history of known good arguments and loaded DLLs to determine anomalous and potentially adversarial activity.&lt;br /&gt;['T1489']: Monitor for newly executed processes that may stop or disable services on a system to render those services unavailable to legitimate users.&lt;br /&gt;['T1057']: Monitor for newly executed processes that may attempt to get information about running processes on a system.&lt;br /&gt;['T1547.015']: Monitor processes that start at login for unusual or unknown applications. Usual applications for login items could include what users add to configure their user environment, such as email, chat, or music applications, or what administrators include for organization settings and protections. Check for running applications from login items that also have abnormal behavior, such as establishing network connections.&lt;br /&gt;['T1069']: Monitor for newly constructed processes and/or command-lines for actions that could be taken to gather system and network information. System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.&lt;br /&gt;['T1546.015']: Monitor newly executed processes that may establish persistence by executing malicious content triggered by hijacked references to Component Object Model (COM) objects.&lt;br /&gt;['T1140']: Monitor for newly executed processes that attempt to hide artifacts of an intrusion, such as common archive file applications and extensions (ex: Zip and RAR archive tools), and correlate with other suspicious behavior to reduce false positives from normal user and administrator behavior.&lt;br /&gt;['T1546.001']: Monitor for newly executed processes that may establish persistence by executing malicious content triggered by a file type association.&lt;br /&gt;['T1222.002']: Monitor for newly executed processes that may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files.(Citation: Hybrid Analysis Icacls1 June 2018)(Citation: Hybrid Analysis Icacls2 May 2018)&lt;br /&gt;['T1087.002']: Monitor for processes that can be used to enumerate domain accounts and groups, such as &lt;code&gt;net.exe&lt;/code&gt; and &lt;code&gt;net1.exe&lt;/code&gt;, especially when executed in quick succession.(Citation: Elastic - Koadiac Detection with EQL)
 
Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.&lt;br /&gt;['T1547.009']: Monitor for newly executed processes that may create or edit shortcuts to run a program during system boot or user login.&lt;br /&gt;['T1622']: Monitoring for suspicious processes being spawned that gather a variety of system information or perform other forms of Discovery, especially in a short period of time, may aid in detection. Debugger related system checks will likely occur in the first steps of an operation but may also occur throughout as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained.&lt;br /&gt;['T1611']: Monitor for process activity (such as unexpected processes spawning outside a container and/or on a host) that might indicate an attempt to escape from a privileged container to host. &lt;br /&gt;['T1569.001']: Monitor for newly executed daemons that may abuse launchctl to execute commands or programs.&lt;br /&gt;['T1217']: Monitor newly constructed processes, e.g. browsers, for to gather personal information about users (ex: banking sites, interests, social media, etc.)&lt;br /&gt;['T1546.004']: Monitor newly executed processes that may establish persistence through executing malicious commands triggered by a user's shell.&lt;br /&gt;['T1056']: Monitor for newly executed processes conducting malicious activity &lt;br /&gt;['T1548.004']: Consider monitoring for &lt;code&gt;/usr/libexec/security_authtrampoline&lt;/code&gt; executions which may indicate that &lt;code&gt;AuthorizationExecuteWithPrivileges&lt;/code&gt; is being executed. MacOS system logs may also indicate when &lt;code&gt;AuthorizationExecuteWithPrivileges&lt;/code&gt; is being called.&lt;br /&gt;['T1548']: Monitor for newly executed processes that may circumvent mechanisms designed to control elevate privileges to gain higher-level permissions.&lt;br /&gt;['T1218.012']: Use process monitoring to monitor the execution and arguments of verclsid.exe. Compare recent invocations of verclsid.exe with prior history of known good arguments and loaded files to determine anomalous and potentially adversarial activity. Depending on the environment, it may be unusual for verclsid.exe to have a parent process of a Microsoft Office product. It may also be unusual for verclsid.exe to have any child processes or to make network connections or file modifications.&lt;br /&gt;['T1559']: Monitor for newly executed processes that are associated with abuse of IPC mechanisms&lt;br /&gt;['T1553.001']: Monitor and investigate attempts to modify extended file attributes with utilities such as &lt;code&gt;xattr&lt;/code&gt;. Built-in system utilities may generate high false positive alerts, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible. &lt;br /&gt;['T1059.004']: Monitor for newly executed processes that may abuse Unix shell commands and scripts for execution.&lt;br /&gt;['T1059']: Monitor log files for process execution through command-line and scripting activities. This information can be useful in gaining additional insight to adversaries' actions through how they use native processes or custom tools. Also monitor for loading of modules associated with specific languages.&lt;br /&gt;['T1016.001']: Monitor for executed processes (such as tracert or ping) that may check for Internet connectivity on compromised systems.&lt;br /&gt;['T1574.008']: Monitor for newly executed processes  for process executable paths that are named for partial directories.&lt;br /&gt;['T1137.005']: Monitor newly executed processes that may abuse Microsoft Outlook rules to obtain persistence on a compromised system.&lt;br /&gt;['T1614.001']: Monitor for newly executed processes that may attempt to gather information about the system language of a victim in order to infer the geographical location of that host.&lt;br /&gt;['T1559.002']: Monitor for newly executed processes that may use Windows Dynamic Data Exchange (DDE) to execute arbitrary commands.&lt;br /&gt;['T1518.001']: Monitor newly executed processes that may attempt to get a listing of security software, configurations, defensive tools, and sensors that are installed on a system or in a cloud environment.&lt;br /&gt;['T1482']: Monitor for newly executed processes that may attempt to gather information on domain trust relationships that may be used to identify lateral movement opportunities in Windows multi-domain/forest environments.&lt;br /&gt;['T1505.003']: Web shells can be difficult to detect. Unlike other forms of persistent remote access, they do not initiate connections. The portion of the Web shell that is on the server may be small and innocuous looking. The PHP version of the China Chopper Web shell, for example, is the following short payload: (Citation: Lee 2013)
&lt;code&gt;&lt;?php @eval($_POST['password']);&gt;&lt;/code&gt;
Nevertheless, detection mechanisms exist. Process monitoring may be used to detect Web servers that perform suspicious actions such as spawning cmd.exe or accessing files that are not in the Web directory.(Citation: NSA Cyber Mitigating Web Shells)&lt;br /&gt;['T1543']: New, benign system processes may be created during installation of new software.&lt;br /&gt;['T1574.012']: Monitor for newly executed processes, such as setx.exe, that may abuse of the COR_PROFILER variable, monitor for new suspicious unmanaged profiling DLLs loading into .NET processes shortly after the CLR causing abnormal process behavior.(Citation: Red Canary COR_PROFILER May 2020)&lt;br /&gt;['T1003']: Monitor for newly executed processes that may be indicative of credential dumping. On Windows 8.1 and Windows Server 2012 R2, monitor Windows Logs for LSASS.exe creation to verify that LSASS started as a protected process.&lt;br /&gt;['T1134.004']: Monitor for newly constructed processes and/or command-lines that may abuse mechanisms to evade defenses, such as those blocking processes spawning directly from Office documents, and analysis targeting unusual/potentially malicious parent-child process relationships, such as spoofing the PPID of PowerShell/Rundll32 to be explorer.exe&lt;br /&gt;['T1485']: Monitor for newly executed processes of binaries that could be involved in data destruction activity, such as SDelete.&lt;br /&gt;['T1087.003']: Monitor for newly executed processes, such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001) , with arguments that can be used to enumerate email addresses and accounts.&lt;br /&gt;['T1037.004']: Monitor for newly constructed processes and/or command-lines that  execute /etc/rc.local if present.&lt;br /&gt;['T1069.003']: Monitor newly executed processes that may attempt to find cloud groups and permission settings.&lt;br /&gt;['T1563.001']: Monitor newly executed processes that may hijack a legitimate user's SSH session to move laterally within an environment.&lt;br /&gt;['T1547.014']: Monitor newly executed processes that may achieve persistence by adding a Registry key to the Active Setup of the local machine.&lt;br /&gt;['T1021.004']: Monitor for newly executed processes that may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to log into remote machines using Secure Shell (SSH). For example, on macOS systems &lt;code&gt;log show --predicate 'process = "sshd"'&lt;/code&gt; can be used to review incoming SSH connection attempts for suspicious activity. The command &lt;code&gt;log show --info --predicate 'process = "ssh" or eventMessage contains "ssh"'&lt;/code&gt; can be used to review outgoing SSH connection activity.(Citation: Apple Unified Log Analysis Remote Login and Screen Sharing)&lt;br /&gt;['T1562.009']: Monitor newly executed processes that may abuse Windows safe mode to disable endpoint defenses.&lt;br /&gt;['T1010']: Monitor for newly executed processes that may attempt to get a listing of open application windows. System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.&lt;br /&gt;['T1529']: Monitor for newly executed processes of binaries involved in shutting down or rebooting systems.&lt;br /&gt;['T1136.002']: Monitor newly executed processes associated with account creation, such as net.exe&lt;br /&gt;['T1553.004']: Monitor for processes, such as &lt;code&gt;certmgr.exe&lt;/code&gt; (macOS) or &lt;code&gt;certutil.exe&lt;/code&gt; (Windows), that can be used to install root certificates. A system's root certificates are unlikely to change frequently. Monitor new certificates installed on a system that could be due to malicious activity. (Citation: SpectorOps Code Signing Dec 2017) Check pre-installed certificates on new systems to ensure unnecessary or suspicious certificates are not present. Microsoft provides a list of trustworthy root certificates online and through &lt;code&gt;authroot.stl&lt;/code&gt;. (Citation: SpectorOps Code Signing Dec 2017) The Sysinternals Sigcheck utility can also be used (&lt;code&gt;sigcheck[64].exe -tuv&lt;/code&gt;) to dump the contents of the certificate store and list valid certificates not rooted to the Microsoft Certificate Trust List. (Citation: Microsoft Sigcheck May 2017)&lt;br /&gt;['T1059.001']: Monitor for newly executed processes that may abuse PowerShell commands and scripts for execution.&lt;br /&gt;['T1552.002']: Monitor newly executed processes for applications that can be used to query the Registry, such as [Reg](https://attack.mitre.org/software/S0075), and collect command parameters that may indicate credentials are being searched. Correlate activity with related suspicious behavior that may indicate an active intrusion to reduce false positives.&lt;br /&gt;['T1053']: Monitor for newly executed processes that may abuse task scheduling functionality to facilitate initial or recurring execution of malicious code.&lt;br /&gt;['T1547.003']: Monitor newly executed processes, such as the W32tm.exe utility. (Citation: Microsoft W32Time May 2017) The Sysinternals Autoruns tool may also be used to analyze auto-starting locations, including DLLs listed as time providers. (Citation: TechNet Autoruns)&lt;br /&gt;['T1098']: Monitor for newly constructed processes indicative of modifying account settings, such as those that modify authorized_keys or /etc/ssh/sshd_config files.&lt;br /&gt;['T1098.004']: Monitor for suspicious processes modifying the authorized_keys or /etc/ssh/sshd_config files.&lt;br /&gt;['T1203']: Monitor for abnormal process creations, such as a Command and Scripting Interpreter spawning from a potentially exploited application. Also look for other behavior on the endpoint system that might indicate successful compromise, such as abnormal behavior of browser or Office processes.&lt;br /&gt;['T1052.001']: Monitor for newly executed processes when removable media is mounted &lt;br /&gt;['T1221']: Analyze process behavior to determine if an Office application is performing actions, such as opening network connections, reading files, spawning abnormal child processes (ex: [PowerShell](https://attack.mitre.org/techniques/T1059/001)), or other suspicious actions that could relate to post-compromise behavior.&lt;br /&gt;['T1053.003']: Monitor for newly constructed processes and/or command-lines that executed through scheduled tasks may show up as outlier processes that have not been seen before when compared against historical data. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.&lt;br /&gt;['T1480.001']: Monitoring for suspicious processes being spawned that gather a variety of system information or perform other forms of [Discovery](https://attack.mitre.org/tactics/TA0007), especially in a short period of time, may aid in detection. Detecting the use of environmental keying may be difficult depending on the implementation.&lt;br /&gt;['T1543.004']: Monitor for newly executed processes that may create or modify Launch Daemons to execute malicious payloads as part of persistence.&lt;br /&gt;['T1564.010']: Analyze process behavior to determine if a process is performing actions it usually does not and/or do no align with its logged command-line arguments.

Detection of process argument spoofing may be difficult as adversaries may momentarily modify stored arguments used for malicious execution. These changes may bypass process creation detection and/or later process memory analysis. Consider monitoring for [Process Hollowing](https://attack.mitre.org/techniques/T1055/012), which includes monitoring for process creation (especially those in a suspended state) as well as access and/or modifications of these processes (especially by the parent process) via Windows API calls.(Citation: Nviso Spoof Command Line 2020)(Citation: Mandiant Endpoint Evading 2019)&lt;br /&gt;['T1053.005']: Monitor for newly constructed processes and/or command-lines that execute from the svchost.exe in Windows 10 and the Windows Task Scheduler taskeng.exe for older versions of Windows. (Citation: Twitter Leoloobeek Scheduled Task) If scheduled tasks are not used for persistence, then the adversary is likely to remove the task when the action is complete.&lt;br /&gt;['T1560.001']: Monitor for newly constructed processes and/or command-lines that aid in compression or encrypting data that is collected prior to exfiltration, such as 7-Zip, WinRAR, and WinZip.  &lt;br /&gt;['T1543.003']: Suspicious program execution through services may show up as outlier processes that have not been seen before when compared against historical data. Look for abnormal process call trees from known services and for execution of other commands that could relate to Discovery or other adversary techniques. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.&lt;br /&gt;['T1546.008']: Monitor newly executed processes that may establish persistence and/or elevate privileges by executing malicious content triggered by accessibility features.&lt;br /&gt;['T1037.002']: Monitor for processes and/or command-lines to install or modify login hooks, as well as processes spawned at user login by these hooks.&lt;br /&gt;['T1021.006']: Monitor for newly executed processes that may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to interact with remote systems using Windows Remote Management (WinRM), as well as service processes such as &lt;code&gt;wmiprvse.exe&lt;/code&gt; on destination hosts.&lt;br /&gt;['T1216.001']: Monitor script processes, such as `cscript that may be used to proxy execution of malicious files.&lt;br /&gt;['T1189']: Monitor for newly executed processes to gain access to a system through a user visiting a website over the normal course of browsing.&lt;br /&gt;['T1564.003']: Monitor newly executed processes that may use hidden windows to conceal malicious activity from the plain sight of users.&lt;br /&gt;['T1053.002']: Monitor for newly constructed processes with command-lines that create/modify or are executed from tasks. For example, on Windows tasks may spawn from `svchost.exe` or the Windows Task Scheduler `taskeng.exe` for older OS versions. (Citation: Twitter Leoloobeek Scheduled Task) Suspicious program execution through scheduled tasks may show up as outlier processes that have not been seen before when compared against historical data.&lt;br /&gt;['T1546.005']: Monitor newly executed processes that may establish persistence by executing malicious content triggered by an interrupt signal.&lt;br /&gt;['T1614']: Monitor newly executed processes that may gather information in an attempt to calculate the geographical location of a victim host.&lt;br /&gt;['T1136']: Monitor newly executed processes associated with account creation, such as net.exe &lt;br /&gt;['T1218.005']: Use process monitoring to monitor the execution and arguments of mshta.exe.&lt;br /&gt;['T1037.005']: Monitor for newly constructed processes and/or command-lines that execute during the boot up process to check for unusual or unknown applications and behavior&lt;br /&gt;['T1546.011']: Monitor newly executed processs for sdbinst.exe for potential indications of application shim abuse. 
There are several public tools available that will detect shims that are currently available (Citation: Black Hat 2015 App Shim):
* Shim-Process-Scanner - checks memory of every running process for any shim flags
* Shim-Detector-Lite - detects installation of custom shim databases
* Shim-Guard - monitors registry for any shim installations
* ShimScanner - forensic tool to find active shims in memory
* ShimCacheMem - Volatility plug-in that pulls shim cache from memory (note: shims are only cached after reboot)&lt;br /&gt;['T1497.001']: Virtualization, sandbox, user activity, and related discovery techniques will likely occur in the first steps of an operation but may also occur throughout as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary's implementation and monitoring required. Monitoring for suspicious processes being spawned that gather a variety of system information or perform other forms of Discovery, especially in a short period of time, may aid in detection.&lt;br /&gt;['T1218.001']: Monitor and analyze the execution and arguments of hh.exe. (Citation: MsitPros CHM Aug 2017) Compare recent invocations of hh.exe with prior history of known good arguments to determine anomalous and potentially adversarial activity (ex: obfuscated and/or malicious commands). Non-standard process execution trees may also indicate suspicious or malicious behavior, such as if hh.exe is the parent process for suspicious processes and activity relating to other adversarial techniques.&lt;br /&gt;['T1211']: Monitor for abnormal process creations, such as a Command and Scripting Interpreter spawning from a potentially exploited application. Also look for behavior on the system that might indicate successful compromise, such as abnormal behavior of processes.&lt;br /&gt;['T1091']: Monitor for newly executed processes that execute from removable media after it is mounted or when initiated by a user. If a remote access tool is used in this manner to move laterally, then additional actions are likely to occur after execution, such as opening network connections for Command and Control and system and network information Discovery.&lt;br /&gt;['T1222.001']: Monitor for newly constructed processes and/or command-lines that can interact with the DACLs using built-in Windows commands, such as icacls, cacls, takeown, and attrib, which can grant adversaries higher permissions on specific files and folders.&lt;br /&gt;['T1574']: Monitor processes for unusual activity (e.g., a process that does not use the network begins to do so, abnormal process call trees). Track library metadata, such as a hash, and compare libraries that are loaded at process execution time against previous executions to detect differences that do not correlate with patching or updates.&lt;br /&gt;['T1574.010']: Monitor for newly executed processes that may execute their own malicious payloads by hijacking the binaries used by services.&lt;br /&gt;['T1218.008']: Use process monitoring to monitor the execution and arguments of odbcconf.exe. Compare recent invocations of odbcconf.exe with prior history of known good arguments and loaded DLLs to determine anomalous and potentially adversarial activity.&lt;br /&gt;['T1021.001']: Monitor for newly executed processes (such as &lt;code&gt;mstsc.exe&lt;/code&gt;) that may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to log into a computer using the Remote Desktop Protocol (RDP). The adversary may then perform actions that spawn additional processes as the logged-on user.&lt;br /&gt;['T1615']: Monitor for newly executed processes that may gather information on Group Policy settings to identify paths for privilege escalation, security measures applied within a domain, and to discover patterns in domain objects that can be manipulated or used to blend in the environment.&lt;br /&gt;['T1480']: Monitoring for suspicious processes being spawned that gather a variety of system information or perform other forms of [Discovery](https://attack.mitre.org/tactics/TA0007), especially in a short period of time, may aid in detection. Detecting the use of guardrails may be difficult depending on the implementation.&lt;br /&gt;['T1564']: Monitor newly executed processes that may attempt to hide artifacts associated with their behaviors to evade detection.&lt;br /&gt;['T1021.005']: Monitor for newly executed processes that may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to remotely control machines using Virtual Network Computing (VNC). For example, on macOS systems the &lt;code&gt;screensharingd&lt;/code&gt; process may be related to VNC connection activity.(Citation: Apple Unified Log Analysis Remote Login and Screen Sharing)&lt;br /&gt;['T1563.002']: Consider monitoring processes for tscon.exe usage&lt;br /&gt;['T1059.005']: Monitor for events associated with VB execution, such as Office applications spawning processes, usage of the Windows Script Host (typically cscript.exe or wscript.exe). VB execution is likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used.&lt;br /&gt;['T1574.006']: Monitor for newly executed processes for unusual activity (e.g., a process that does not use the network begins to do so).&lt;br /&gt;['T1497.003']: Time-based evasion will likely occur in the first steps of an operation but may also occur throughout as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary's implementation and monitoring required. Monitoring for suspicious processes being spawned that gather a variety of system information or perform other forms of Discovery, especially in a short period of time, may aid in detection.&lt;br /&gt;['T1087.001']: Monitor for processes that can be used to enumerate user accounts and groups such as &lt;code&gt;net.exe&lt;/code&gt; and &lt;code&gt;net1.exe&lt;/code&gt;, especially when executed in quick succession.(Citation: Elastic - Koadiac Detection with EQL)
 
Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).&lt;br /&gt;['T1546.006']: Monitor processes for those that may be used to modify binary headers.&lt;br /&gt;['T1219']: Monitor for applications and processes related to remote admin tools. Correlate activity with other suspicious behavior that may reduce false positives if these tools are used by legitimate users and administrators. [Domain Fronting](https://attack.mitre.org/techniques/T1090/004) may be used in conjunction to avoid defenses. Adversaries will likely need to deploy and/or install these remote tools to compromised systems. It may be possible to detect or prevent the installation of these tools with host-based solutions.&lt;br /&gt;['T1027.004']: Monitor for newly constructed processes and/or command-lines that look for non-native binary formats and cross-platform compiler and execution frameworks like Mono and determine if they have a legitimate purpose on the system. Typically these should only be used in specific and limited cases, like for software development.&lt;br /&gt;['T1059.007']: Monitor for events associated with scripting execution, such as process activity, usage of the Windows Script Host (typically cscript.exe or wscript.exe), file activity involving scripts&lt;br /&gt;['T1553.006']: Monitor processes and command-line arguments for actions that could be taken to modify the code signing policy of a system, such as &lt;code&gt;bcdedit.exe -set TESTSIGNING ON&lt;/code&gt;. (Citation: Microsoft TESTSIGNING Feb 2021)&lt;br /&gt;['T1555.001']: Monitor processes spawned by command line utilities to manipulate keychains directly, such as &lt;code&gt;security&lt;/code&gt;, combined with arguments to collect passwords, such as &lt;code&gt;dump-keychain -d&lt;/code&gt;.&lt;br /&gt;['T1220']: Use process monitoring to monitor the execution and arguments of msxsl.exe and wmic.exe. (Citation: LOLBAS Wmic) (Citation: Twitter SquiblyTwo Detection APR 2018) Command arguments used before and after the script invocation may also be useful in determining the origin and purpose of the payload being loaded. The presence of msxsl.exe or other utilities that enable proxy execution that are typically used for development, debugging, and reverse engineering on a system that is not used for these purposes may be suspicious.&lt;br /&gt;['T1564.002']: Monitor newly executed processes for actions that could be taken to add a new user and subsequently hide it from login screens.&lt;br /&gt;['T1497.002']: User activity-based checks will likely occur in the first steps of an operation but may also occur throughout as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary's implementation and monitoring required. Monitoring for suspicious processes being spawned that gather a variety of system information or perform other forms of Discovery, especially in a short period of time, may aid in detection.&lt;br /&gt;['T1563']: Monitor newly executed processes that may take control of preexisting sessions with remote services to move laterally in an environment.&lt;br /&gt;['T1547.013']: Monitor newly executed processes that may modify XDG autostart entries to execute programs or commands during system boot.&lt;br /&gt;['T1072']: Monitor for newly executed processes that does not correlate to known good software. Analyze the process execution trees, historical activities from the third-party application (such as what types of files are usually pushed), and the resulting activities or events from the file/binary/script pushed to systems. &lt;br /&gt;['T1120']: Monitor for newly executed processes that may attempt to gather information about attached peripheral devices and components connected to a computer system.&lt;br /&gt;['T1553']: Monitor processes and arguments for malicious attempts to modify trust settings, such as the installation of root certificates or modifications to trust attributes/policies applied to files.&lt;br /&gt;['T1082']: Monitor newly executed processes that may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture.&lt;br /&gt;['T1569']: Monitor newly executed processes that may abuse system services or daemons to execute commands or programs.&lt;br /&gt;['T1609']: Container administration service activities and executed commands can be captured through logging of process execution with command-line arguments on the container as well as within the underlying host.&lt;br /&gt;['T1204.002']: Monitor for newly constructed processes and/or command-lines for applications that may be used by an adversary to gain initial access that require user interaction. This includes compression applications, such as those for zip files, that can be used to Deobfuscate/Decode Files or Information in payloads.&lt;br /&gt;['T1070.005']: Monitor for newly constructed processes and/or command line execution that can be used to remove network share connections via the net.exe process. &lt;br /&gt;['T1546.003']: Monitor newly executed processes that result from the execution of subscriptions (i.e. spawning from the WmiPrvSe.exe WMI Provider Host process).&lt;br /&gt;['T1016']: Monitor for executed processes (such as ipconfig/ifconfig and arp) with arguments that may look for details about the network configuration and settings, such as IP and/or MAC addresses.&lt;br /&gt;['T1647']: Monitor for newly executed processes with arguments that can modify property list (plist) files.&lt;br /&gt;['T1562.010']: Monitor newly executed processes that may downgrade or use a version of system features that may be outdated, vulnerable, and/or does not support updated security controls such as logging.&lt;br /&gt;['T1548.003']: Monitor newly executed processes that may perform sudo caching and/or use the suoders file to elevate privileges.&lt;br /&gt;['T1053.006']: Monitor for newly constructed processes and/or command-lines that will have a parent process of 'systemd', a parent process ID of 1, and will usually execute as the 'root' user.&lt;br /&gt;['T1069.001']: Monitor newly executed processes that may attempt to find local system groups and permission settings.&lt;br /&gt;['T1564.006']: Monitor newly executed processes associated with running a virtual instance, such as those launched from binary files associated with common virtualization technologies (ex: VirtualBox, VMware, QEMU, Hyper-V).&lt;br /&gt;['T1518']: Monitor newly executed processes that may attempt to get a listing of software and software versions that are installed on a system or in a cloud environment.&lt;br /&gt;['T1562.002']: Monitor newly executed processes that may disable Windows event logging to limit data that can be leveraged for detections and audits.&lt;br /&gt;['T1059.002']: Monitor for newly executed processes that may abuse AppleScript for execution. Scripts are likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Actions may be related to network and system information [Discovery](https://attack.mitre.org/tactics/TA0007), [Collection](https://attack.mitre.org/tactics/TA0009), or other scriptable post-compromise behaviors and could be used as indicators of detection leading back to the source script.&lt;br /&gt;['T1202']: Monitor for newly constructed processes and/or command-lines that can be used instead of invoking cmd (i.e. pcalua.exe, winrs.exe, cscript/wscript.exe, hh.exe, or bash.exe)&lt;br /&gt;['T1080']: Monitor processes that are executed from removable media for malicious or abnormal activity such as network connections due to Command and Control and possible network Discovery techniques.&lt;br /&gt;['T1201']: Monitor for newly executed processes that may attempt to access detailed information about the password policy used within an enterprise network or cloud environment.&lt;br /&gt;['T1218.009']: Use process monitoring to monitor the execution and arguments of Regsvcs.exe and Regasm.exe. Compare recent invocations of Regsvcs.exe and Regasm.exe with prior history of known good arguments and executed binaries to determine anomalous and potentially adversarial activity.&lt;br /&gt;['T1112']: Monitor processes and command-line arguments for actions that could be taken to change, conceal, and/or delete information in the Registry. (i.e. reg.exe, regedit.exe) &lt;br /&gt;['T1007']: Monitor for newly executed processes with arguments that may try to get information about registered services. System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.&lt;br /&gt;['T1137.001']: Monitor newly executed processes that may abuse Microsoft Office templates to obtain persistence on a compromised system.&lt;br /&gt;['T1546.009']: Monitor newly executed processes that may establish persistence and/or elevate privileges by executing malicious content triggered by AppCert DLLs loaded into processes.&lt;br /&gt;['T1552']: Monitor newly executed processes that may search compromised systems to find and obtain insecurely stored credentials.&lt;br /&gt;['T1127']: Monitor for abnormal presence of these or other utilities that enable proxy execution that are typically used for development, debugging, and reverse engineering on a system that is not used for these purposes may be suspicious. Use process monitoring to monitor the execution and arguments of from developer utilities that may be abused. Compare recent invocations of those binaries with prior history of known good arguments and executed binaries to determine anomalous and potentially adversarial activity. It is likely that these utilities will be used by software developers or for other software development related tasks, so if it exists and is used outside of that context, then the event may be suspicious.&lt;br /&gt;['T1137']: Monitor newly executed processes that may leverage Microsoft Office-based applications for persistence between startups. Collect process execution information including process IDs (PID) and parent process IDs (PPID) and look for abnormal chains of activity resulting from Office processes. Non-standard process execution trees may also indicate suspicious or malicious behavior. If winword.exe is the parent process for suspicious processes and activity relating to other adversarial techniques, then it could indicate that the application was used maliciously.&lt;br /&gt;['T1218.004']: Use process monitoring to monitor the execution and arguments of InstallUtil.exe. Compare recent invocations of InstallUtil.exe with prior history of known good arguments and executed binaries to determine anomalous and potentially adversarial activity&lt;br /&gt;['T1037.003']: Monitor for newly constructed processes and/or command-lines that execute logon scripts&lt;br /&gt;['T1204']: Monitor for newly executed processes that may be used by an adversary to gain Initial Access that require user interaction. This includes compression applications, such as those for zip files, that can be used to [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140) in payloads.&lt;br /&gt;['T1547.006']: Monitor for newly created processes that may modify the kernel to automatically execute programs on system boot.&lt;br /&gt;['T1561']: Monitor newly executed processes that may wipe or corrupt raw disk data on specific systems or in large numbers in a network to interrupt availability to system and network resources.&lt;br /&gt;['T1505.005']: Monitor processes with arguments that may potentially highlight adversary actions to modify Registry values (ex: &lt;code&gt;reg.exe&lt;/code&gt;) or modify/replace the legitimate &lt;code&gt;termsrv.dll&lt;/code&gt;.&lt;br /&gt;['T1547']: Suspicious program execution as autostart programs may show up as outlier processes that have not been seen before when compared against historical data to increase confidence of malicious activity, data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.&lt;br /&gt;['T1070']: Monitor for newly executed processes that may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined malware.&lt;br /&gt;['T1040']: Monitor for newly executed processes that can aid in sniffing network traffic to capture information about an environment, including authentication material passed over the network &lt;br /&gt;['T1137.004']: Monitor newly executed processes that may abuse Microsoft Outlook's Home Page feature to obtain persistence on a compromised system.&lt;br /&gt;['T1496']: Monitor for common cryptomining software process names that may indicate compromise and resource usage.&lt;br /&gt;['T1176']: Monitor for newly executed processes that could be used to abuse internet browser extensions to establish persistence. &lt;br /&gt;['T1486']: Monitor for newly constructed  processes and/or command-lines involved in data destruction activity, such as vssadmin, wbadmin, and bcdedit.&lt;br /&gt;['T1505']: Process monitoring may be used to detect servers components that perform suspicious actions such as running cmd.exe or accessing files.&lt;br /&gt;['T1548.002']: Monitor newly executed processes, such as &lt;code&gt;eventvwr.exe&lt;/code&gt; and &lt;code&gt;sdclt.exe&lt;/code&gt;, that may bypass UAC mechanisms to elevate process privileges on system.&lt;br /&gt;['T1052']: Monitor for newly executed processes when removable media is mounted.&lt;br /&gt;['T1218.007']: Use process monitoring to monitor the execution and arguments of msiexec.exe. Compare recent invocations of msiexec.exe with prior history of known good arguments and executed MSI files.&lt;br /&gt;['T1543.002']: Suspicious processes or scripts spawned in this manner will have a parent process of 'systemd', a parent process ID of 1, and will usually execute as the 'root' user.&lt;br /&gt;['T1561.002']: Monitor newly executed processes that may corrupt or wipe the disk data structures on a hard drive necessary to boot a system; targeting specific critical systems or in large numbers in a network to interrupt availability to system and network resources.&lt;br /&gt;['T1037']: Monitor for newly executed processes that may use scripts automatically executed at boot or logon initialization to establish persistence.&lt;br /&gt;['T1012']: Monitor for newly executed processes that may interact with the Windows Registry to gather information about the system, configuration, and installed software.&lt;br /&gt;['T1059.006']: Monitor systems for abnormal Python usage and python.exe behavior, which could be an indicator of malicious activity. Understanding standard usage patterns is important to avoid a high number of false positives. If scripting is restricted for normal users, then any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent. Scripts are likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Monitor newly executed processes that may abuse Python commands and scripts for execution.&lt;br /&gt;['T1564.009']: Monitor newly executed processes that may abuse resource forks to hide malicious code or executables to evade detection and bypass security applications.&lt;br /&gt;['T1546.014']: Monitor newly executed processes that may gain persistence and elevate privileges by executing malicious content triggered by the Event Monitor Daemon (emond).&lt;br /&gt;['T1574.005']: Monitor for newly constructed processes to match an existing service executables. &lt;br /&gt;['T1056.002']: Monitor for newly executed processes &lt;br /&gt;['T1574.011']: Monitor suspicious programs execution through services. These processes may show up as outlier processes that have not been seen before when compared against historical data.&lt;br /&gt;['T1047']: Monitor for newly constructed processes and/or command-lines of "wmic"&lt;br /&gt;['T1546.012']: Monitor for abnormal usage of the GFlags tool as well as common processes spawned under abnormal parents and/or with creation flags indicative of debugging such as &lt;code&gt;DEBUG_PROCESS&lt;/code&gt; and &lt;code&gt;DEBUG_ONLY_THIS_PROCESS&lt;/code&gt;. (Citation: Microsoft Dev Blog IFEO Mar 2010)&lt;br /&gt;['T1137.006']: Monitor newly executed processes that may abuse Microsoft Office add-ins to obtain persistence on a compromised system. &lt;br /&gt;['T1218']: Monitor processes and command-line parameters for signed binaries that may be used to proxy execution of malicious files. Compare recent invocations of signed binaries that may be used to proxy execution with prior history of known good arguments and loaded files to determine anomalous and potentially adversarial activity. Legitimate programs used in suspicious ways, like msiexec.exe downloading an MSI file from the Internet, may be indicative of an intrusion. Correlate activity with other suspicious behavior to reduce false positives that may be due to normal benign use by users and administrators.&lt;br /&gt;['T1127.001']: Monitor for newly executed processes of MSBuild.exe. Compare recent invocations of those binaries with prior history of known good arguments and executed binaries to determine anomalous and potentially adversarial activity.&lt;br /&gt;['T1546.013']: Monitor newly executed processes that may gain persistence and elevate privileges by executing malicious content triggered by PowerShell profiles.&lt;br /&gt;['T1135']: Monitor for newly executed processes that may look for folders and drives shared on remote systems as a means of identifying sources of information to gather as a precursor for Collection and to identify potential systems of interest for Lateral Movement.&lt;br /&gt;['T1049']: Monitor for executed processes that may attempt to get a listing of network connections to or from the compromised system they are currently accessing or from remote systems by querying for information over the network.&lt;br /&gt;['T1069.002']: Monitor newly executed processes that may attempt to find domain-level groups and permission settings.&lt;br /&gt;['T1574.002']: Monitor newly constructed processes for unusual activity (e.g., a process that does not use the network begins to do so) as well as the introduction of new files/programs.&lt;br /&gt;['T1555.004']: Monitor newly executed processes of &lt;code&gt;vaultcmd.exe&lt;/code&gt; for suspicious activity, such as listing credentials from the Windows Credentials locker (i.e., &lt;code&gt;vaultcmd /listcreds:"Windows Credentials"&lt;/code&gt;).(Citation: Malwarebytes The Windows Vault)&lt;br /&gt;['T1546.002']: Monitor newly executed processes that may establish persistence by executing malicious content triggered by user inactivity.&lt;br /&gt;['T1137.002']: Monitor newly executed processes that may abuse the Microsoft Office "Office Test" Registry key to obtain persistence on a compromised system.&lt;br /&gt;['T1083']: Monitor newly executed processes that may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system.&lt;br /&gt;['T1570']: Monitor newly constructed processes that assist in lateral tool transfers. &lt;br /&gt;['T1546.007']: It is likely unusual for netsh.exe to have any child processes in most environments. Monitor process executions and investigate any child processes spawned by netsh.exe for malicious behavior.&lt;br /&gt;['T1569.002']: Monitor for newly executed processes that may abuse the Windows service control manager to execute malicious commands or payloads.&lt;br /&gt;['T1218.003']: Use process monitoring to detect and analyze the execution and arguments of CMSTP.exe. Compare recent invocations of CMSTP.exe with prior history of known good arguments and loaded files to determine anomalous and potentially adversarial activity. Sysmon events can also be used to identify potential abuses of CMSTP.exe. Detection strategy may depend on the specific adversary procedure, but potential rules include: (Citation: Endurant CMSTP July 2018)
* To detect loading and execution of local/remote payloads - Event 1 (Process creation) where ParentImage contains CMSTP.exe
* Also monitor for events, such as the creation of processes (Sysmon Event 1), that involve auto-elevated CMSTP COM interfaces such as CMSTPLUA (3E5FC7F9-9A51-4367-9063-A120244FBEC7) and CMLUAUTIL (3E000D72-A845-4CD9-BD83-80C07C3B881F).&lt;br /&gt;['T1562']: Monitor newly executed processes that may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms.&lt;br /&gt;['T1555']: Monitor newly executed processes that may search for common password storage locations to obtain user credentials.&lt;br /&gt;['T1197']: Monitor for newly constructed BITS tasks to enumerate using the BITSAdmin tool (bitsadmin /list /allusers /verbose). &lt;br /&gt;['T1005']: Monitor for newly executed processes that may search local system sources, such as file systems or local databases, to find files of interest and sensitive data prior to Exfiltration.&lt;br /&gt;['T1574.007']: Monitor for newly executed processes for process executable paths that are named for partial directories.&lt;br /&gt;['T1574.009']: Monitor for newly executed processes that may execute their own malicious payloads by hijacking vulnerable file path references.&lt;br /&gt;['T1218.013']: Monitor the execution and arguments of mavinject.exe. Compare recent invocations of mavinject.exe with prior history of known good arguments and injected DLLs to determine anomalous and potentially adversarial activity.&lt;br /&gt;['T1021.003']: Monitor for newly executed processes associated with DCOM activity, especially those invoked by a user different than the one currently logged on. Enumeration of COM objects, via [Query Registry](https://attack.mitre.org/techniques/T1012) or [PowerShell](https://attack.mitre.org/techniques/T1059/001), may also precede malicious use.(Citation: Fireeye Hunting COM June 2019)(Citation: Enigma MMC20 COM Jan 2017)&lt;br /&gt;['T1559.001']: Monitor for newly executed processes that are associated with COM objects, especially those invoked by a user different than the one currently logged on.&lt;br /&gt;['T1134']: Monitor for executed processes that may modify access tokens to operate under a different user or system security context to perform actions and bypass access controls.&lt;br /&gt;['T1018']: Monitor for newly executed processes that can be used to discover remote systems, such as &lt;code&gt;ping.exe&lt;/code&gt; and &lt;code&gt;tracert.exe&lt;/code&gt;, especially when executed in quick succession.(Citation: Elastic - Koadiac Detection with EQL)&lt;br /&gt;['T1561.001']: Monitor newly executed processes that may erase the contents of storage devices on specific systems or in large numbers in a network to interrupt availability to system and network resources.&lt;br /&gt;['T1027']: Monitor for newly executed processes that may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit.&lt;br /&gt;['T1137.003']: Monitor newly executed processes that may abuse Microsoft Outlook forms to obtain persistence on a compromised system.&lt;br /&gt;['T1218.014']: Monitor processes for suspicious or malicious use of MMC. Since MMC is a signed Windows binary, verify use of MMC is legitimate and not malicious.&lt;br /&gt;['T1546']: Tools such as Sysinternals Autoruns can be used to detect changes to execution triggers that could be attempts at persistence. Also look for abnormal process call trees for execution of other commands that could relate to Discovery actions or other techniques.&lt;br /&gt;['T1124']: Monitor for newly executed processes that may gather the system time and/or time zone from a local or remote system.&lt;br /&gt;['T1218.010']: Use process monitoring to monitor the execution and arguments of regsvr32.exe. Compare recent invocations of regsvr32.exe with prior history of known good arguments and loaded files to determine anomalous and potentially adversarial activity.&lt;br /&gt;['T1021']: Monitor for newly executed processes that may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to log into a service specifically designed to accept remote connections, such as RDP, telnet, SSH, and VNC. The adversary may then perform actions that spawn additional processes as the logged-on user.&lt;br /&gt;['T1059.003']: Monitor for newly executed processes that may abuse the Windows command shell for execution.&lt;br /&gt;['T1218.002']: Monitor and analyze activity related to items associated with CPL files, such as the control.exe. Analyze new Control Panel items as well as those present on disk for malicious content. Both executable and CPL formats are compliant Portable Executable (PE) images and can be examined using traditional tools and methods, pending anti-reverse-engineering techniques.(Citation: TrendMicro CPL Malware Jan 2014)&lt;br /&gt;['T1489']: Monitor processes and command-line arguments to see if critical processes are terminated or stop running.&lt;br /&gt;['T1562.001']: Monitor processes for unexpected termination related to security tools/services.
&lt;br /&gt;['T1562']: Monitor for unexpected deletions of a running process (ex: Sysmon EID 5 or Windows EID 4689) that may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms.&lt;br /&gt;['T1056.004']: Verify integrity of live processes by comparing code in memory to that of corresponding static binaries, specifically checking for jumps and other instructions that redirect code flow.&lt;br /&gt;['T1036']: Monitor for file names that are mismatched between the file name on disk and that of the binary's PE metadata, this is a likely indicator that a binary was renamed after it was compiled. &lt;br /&gt;['T1059']: Monitor contextual data about a running process, which may include information such as environment variables, image name, user/owner, or other information that may reveal abuse of system features. For example, consider monitoring for Windows event ID (EID) 400, which shows the version of PowerShell executing in the &lt;code&gt;EngineVersion&lt;/code&gt; field (which may also be relevant to detecting a potential [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)) as well as if PowerShell is running locally or remotely in the &lt;code&gt;HostName&lt;/code&gt; field. Furthermore, EID 400 may indicate the start time and EID 403 indicates the end time of a PowerShell session.(Citation: inv_ps_attacks)&lt;br /&gt;['T1036.005']: Collecting and comparing disk and resource filenames for binaries by looking to see if the InternalName, OriginalFilename, and/or ProductName match what is expected could provide useful leads, but may not always be indicative of malicious activity.&lt;br /&gt;['T1548']: Monitor contextual data about a running process, which may include information such as environment variables, image name, user/owner that may circumvent mechanisms designed to control elevate privileges to gain higher-level permissions.&lt;br /&gt;['T1562.010']: Monitor contextual data about a running process, which may include information such as environment variables, image name, user/owner, or other information that may reveal use of a version of system features that may be outdated, vulnerable, and/or does not support updated security controls such as logging. For example, monitoring for Windows event ID (EID) 400, specifically the &lt;code&gt;EngineVersion&lt;/code&gt; field which shows the version of PowerShell running, may highlight a malicious downgrade attack.(Citation: inv_ps_attacks)&lt;br /&gt;['T1134.004']: Look for inconsistencies between the various fields that store PPID information, such as the EventHeader ProcessId from data collected via Event Tracing for Windows (ETW), Creator Process ID/Name from Windows event logs, and the ProcessID and ParentProcessID (which are also produced from ETW and other utilities such as Task Manager and Process Explorer). The ETW provided EventHeader ProcessId identifies the actual parent process.(Citation: CounterCept PPID Spoofing Dec 2018)&lt;br /&gt;['T1548.003']: Monitor contextual data about a running process, which may include information such as environment variables, image name, user/owner that may perform sudo caching and/or use the suoders file to elevate privileges.&lt;br /&gt;['T1059.001']: Consider monitoring for Windows event ID (EID) 400, which shows the version of PowerShell executing in the &lt;code&gt;EngineVersion&lt;/code&gt; field (which may also be relevant to detecting a potential [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)) as well as if PowerShell is running locally or remotely in the &lt;code&gt;HostName&lt;/code&gt; field. Furthermore, EID 400 may indicate the start time and EID 403 indicates the end time of a PowerShell session.(Citation: inv_ps_attacks)&lt;br /&gt;['T1548.002']: Monitor contextual data about a running process, which may include information such as environment variables, image name, user/owner that may bypass UAC mechanisms to elevate process privileges on system.&lt;br /&gt;['T1134']: Query systems for process and thread token information and look for inconsistencies such as user owns processes impersonating the local SYSTEM account.(Citation: BlackHat Atkinson Winchester Token Manipulation) Look for inconsistencies between the various fields that store PPID information, such as the EventHeader ProcessId from data collected via Event Tracing for Windows (ETW), Creator Process ID/Name from Windows event logs, and the ProcessID and ParentProcessID (which are also produced from ETW and other utilities such as Task Manager and Process Explorer). The ETW provided EventHeader ProcessId identifies the actual parent process.&lt;br /&gt;['T1185']: This may be a difficult technique to detect because adversary traffic may be masked by normal user traffic. Monitor for [Process Injection](https://attack.mitre.org/techniques/T1055) against browser applications.&lt;br /&gt;['T1055.015']: Monitor for changes made to processes that may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges. Analyze process behavior to determine if a process is performing unusual actions, such as opening network connections, reading files, or other suspicious actions that could relate to post-compromise behavior. &lt;br /&gt;['T1055.012']: Monitor for changes made to processes that may inject malicious code into suspended and hollowed processes in order to evade process-based defenses.&lt;br /&gt;['T1055']: Monitor for changes made to processes that may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges.&lt;br /&gt;['T1055.004']: Monitor for changes made to processes that may inject malicious code into processes via the asynchronous procedure call (APC) queue in order to evade process-based defenses as well as possibly elevate privileges.&lt;br /&gt;['T1055.008']: Monitor for changes made to processes that may inject malicious code into processes via ptrace (process trace) system calls in order to evade process-based defenses as well as possibly elevate privileges.&lt;br /&gt;['T1055.003']: Monitor for changes made to processes that may inject malicious code into hijacked processes in order to evade process-based defenses as well as possibly elevate privileges.&lt;br /&gt;['T1055.005']: Monitor for changes made to processes that may inject malicious code into processes via thread local storage (TLS) callbacks in order to evade process-based defenses as well as possibly elevate privileges.&lt;br /&gt;['T1055.002']: Monitor for changes made to processes that may inject portable executables (PE) into processes in order to evade process-based defenses as well as possibly elevate privileges.&lt;br /&gt;['T1055.001']: Monitor for changes made to processes that may inject dynamic-link libraries (DLLs) into processes in order to evade process-based defenses as well as possibly elevate privileges.&lt;br /&gt;['T1556']: Monitor for unexpected processes interacting with authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts.&lt;br /&gt;['T1003.001']: Monitor for unexpected processes interacting with LSASS.exe.(Citation: Medium Detecting Attempts to Steal Passwords from Memory) Common credential dumpers such as Mimikatz access LSASS.exe by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details are stored. Credential dumpers may also use methods for reflective [Process Injection](https://attack.mitre.org/techniques/T1055) to reduce potential indicators of malicious activity.&lt;br /&gt;['T1555.003']: Monitor process execution logs to include PowerShell Transcription focusing on those that perform a combination of behaviors including reading web browser process memory, utilizing regular expressions, and those that contain numerous keywords for common web applications (Gmail, Twitter, Office365, etc.).&lt;br /&gt;['T1539']: Monitor for attempts by programs to inject into or dump browser process memory.&lt;br /&gt;['T1555.005']: Monitor process being accessed that may acquire user credentials from third-party password managers.(Citation: ise Password Manager February 2019)&lt;br /&gt;['T1055.002']: Monitor for processes being viewed that may inject portable executables (PE) into processes in order to evade process-based defenses as well as possibly elevate privileges.&lt;br /&gt;['T1055.008']: Monitor for processes being viewed that may inject malicious code into processes via ptrace (process trace) system calls in order to evade process-based defenses as well as possibly elevate privileges.&lt;br /&gt;['T1055']: Monitor for processes being viewed that may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges.&lt;br /&gt;['T1055.004']: Monitor for processes being viewed that may inject malicious code into processes via the asynchronous procedure call (APC) queue in order to evade process-based defenses as well as possibly elevate privileges.&lt;br /&gt;['T1559.003']: Monitor for processes making abnormal calls to higher privileged processes, such as a user application connecting to a VPN service.(Citation: versprite xpc vpn)&lt;br /&gt;['T1055.001']: Monitor for process being viewed that may inject dynamic-link libraries (DLLs) into processes in order to evade process-based defenses as well as possibly elevate privileges.&lt;br /&gt;['T1556.001']: Monitor for unexpected processes interacting with the authentication process on a domain controller to bypass the typical authentication mechanisms and enable access to accounts.&lt;br /&gt;['T1555']: Monitor for processes being accessed that may search for common password storage locations to obtain user credentials.&lt;br /&gt;['T1055.005']: Monitor for processes being viewed that may inject malicious code into processes via thread local storage (TLS) callbacks in order to evade process-based defenses as well as possibly elevate privileges.&lt;br /&gt;['T1555.002']: Monitor for processes being accessed that may obtain root access (allowing them to read securityd's memory), then they can scan through memory to find the correct sequence of keys in relatively few tries to decrypt the user's logon keychain.&lt;br /&gt;['T1003']: Monitor for unexpected processes interacting with lsass.exe.(Citation: Medium Detecting Attempts to Steal Passwords from Memory) Common credential dumpers such as [Mimikatz](https://attack.mitre.org/software/S0002) access the LSA Subsystem Service (LSASS) process by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details are stored. Credential dumpers may also use methods for reflective [Process Injection](https://attack.mitre.org/techniques/T1055) to reduce potential indicators of malicious activity.
##### Linux
To obtain the passwords and hashes stored in memory, processes must open a maps file in the /proc filesystem for the process being analyzed. This file is stored under the path &lt;code&gt;/proc/&amp;lt;pid&amp;gt;/maps&lt;/code&gt;, where the &lt;code&gt;&amp;lt;pid&amp;gt;&lt;/code&gt; directory is the unique pid of the program being interrogated for such authentication data. The AuditD monitoring tool, which ships stock in many Linux distributions, can be used to watch for hostile processes opening this file in the proc file system, alerting on the pid, process name, and arguments of such programs.&lt;br /&gt;['T1055.012']: Monitor for processes being viewed that may inject malicious code into suspended and hollowed processes in order to evade process-based defenses.&lt;br /&gt;['T1055.003']: Monitor for processes being viewed that may inject malicious code into hijacked processes in order to evade process-based defenses as well as possibly elevate privileges.&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Microsoft Processes and Threads" url="https://docs.microsoft.com/en-us/windows/win32/procthread/processes-and-threads"/>
            <reference name="Mitre ATT&amp;CK Data Source DS0009" url="https://attack.mitre.org/datasources/DS0009"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:01.259">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-M1021" name="Restrict Web-Based Content" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>Restrict use of certain websites, block downloads/attachments, block Javascript, restrict browser extensions, etc.&lt;br /&gt;&lt;p&gt;Detailed mitigations per technique:&lt;/p&gt;&lt;br /&gt;['T1102.002', 'T1102.001', 'T1102', 'T1102.003']: Web proxies can be used to enforce external network communication policy that prevents use of unauthorized external services.&lt;br /&gt;['T1566.002', 'T1192']: Determine if certain websites that can be used for spearphishing are necessary for business operations and consider blocking access if activity cannot be monitored well or if it poses a significant risk.&lt;br /&gt;['T1528']: Administrators can block end-user consent to OAuth applications, disabling users from authorizing third-party apps through OAuth 2.0 and forcing administrative consent for all requests. They can also block end-user registration of applications by their users, to reduce risk. A Cloud Access Security Broker can also be used to ban applications.

Azure offers a couple of enterprise policy settings in the Azure Management Portal that may help:

"Users -&gt; User settings -&gt; App registrations: Users can register applications" can be set to "no" to prevent users from registering new applications. 
"Enterprise applications -&gt; User settings -&gt; Enterprise applications: Users can consent to apps accessing company data on their behalf" can be set to "no" to prevent users from consenting to allow third-party multi-tenant applications&lt;br /&gt;['T1527']: Update corporate policies to restrict what types of third-party applications may be added to any online service or tool that is linked to the company's information, accounts or network (example: Google, Microsoft, Dropbox, Basecamp, GitHub). However, rather than providing high-level guidance on this, be extremely specific-include a list of pre-approved applications and deny all others not on the list. Administrators may also block end-user consent through administrative portals, such as the Azure Portal, disabling users from authorizing third-party apps through OAuth and forcing administrative consent.(Citation: Microsoft Azure AD Admin Consent)&lt;br /&gt;['T1223']: Consider blocking download/transfer and execution of potentially uncommon file types known to be used in adversary campaigns, such as CHM files.&lt;br /&gt;['T1218.001']: Consider blocking download/transfer and execution of potentially uncommon file types known to be used in adversary campaigns, such as CHM files&lt;br /&gt;['T1483', 'T1568.002']: In some cases a local DNS sinkhole may be used to help prevent DGA-based command and control at a reduced cost.&lt;br /&gt;['T1568']: In some cases a local DNS sinkhole may be used to help prevent behaviors associated with dynamic resolution.&lt;br /&gt;['T1204', 'T1204.001']: If a link is being visited by a user, block unknown or unused files in transit by default that should not be downloaded or by policy from suspicious sites as a best practice to prevent some vectors, such as .scr, .exe, .pif, .cpl, etc. Some download scanning devices can open and analyze compressed and encrypted formats, such as zip and rar that may be used to conceal malicious files.&lt;br /&gt;['T1189']: For malicious code served up through ads, adblockers can help prevent that code from executing in the first place.

Script blocking extensions can help prevent the execution of JavaScript that may commonly be used during the exploitation process.&lt;br /&gt;['T1566.003', 'T1194']: Determine if certain social media sites, personal webmail services, or other service that can be used for spearphishing is necessary for business operations and consider blocking access if activity cannot be monitored well or if it poses a significant risk.&lt;br /&gt;['T1193']: Block unknown or unused attachments by default that should not be transmitted over email as a best practice to prevent some vectors, such as .scr, .exe, .pif, .cpl, etc. Some email scanning devices can open and analyze compressed and encrypted formats, such as zip and rar that may be used to conceal malicious attachments in [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027).&lt;br /&gt;['T1567', 'T1567.002', 'T1567.001']: Web proxies can be used to enforce an external network communication policy that prevents use of unauthorized external services.&lt;br /&gt;['T1550.001']: Update corporate policies to restrict what types of third-party applications may be added to any online service or tool that is linked to the company's information, accounts or network (e.g., Google, Microsoft, Dropbox, Basecamp, GitHub). However, rather than providing high-level guidance on this, be extremely specific-include a list of per-approved applications and deny all others not on the list. Administrators may also block end-user consent through administrative portals, such as the Azure Portal, disabling users from authorizing third-party apps through OAuth and forcing administrative consent.(Citation: Microsoft Azure AD Admin Consent)&lt;br /&gt;['T1566']: Determine if certain websites or attachment types (ex: .scr, .exe, .pif, .cpl, etc.) that can be used for phishing are necessary for business operations and consider blocking access if activity cannot be monitored well or if it poses a significant risk.&lt;br /&gt;['T1059.005', 'T1059']: Script blocking extensions can help prevent the execution of scripts and HTA files that may commonly be used during the exploitation process. For malicious code served up through ads, adblockers can help prevent that code from executing in the first place.&lt;br /&gt;['T1059.007']: Script blocking extensions can help prevent the execution of JavaScript and HTA files that may commonly be used during the exploitation process. For malicious code served up through ads, adblockers can help prevent that code from executing in the first place.&lt;br /&gt;['T1566.001']: Block unknown or unused attachments by default that should not be transmitted over email as a best practice to prevent some vectors, such as .scr, .exe, .pif, .cpl, etc. Some email scanning devices can open and analyze compressed and encrypted formats, such as zip and rar that may be used to conceal malicious attachments.&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Mitre ATT&amp;CK Mitigation M1021" url="https://attack.mitre.org/mitigations/M1021"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:02.178">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-DS0012" name="Script" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>A file or stream containing a list of commands, allowing them to be launched in sequence(Citation: Microsoft PowerShell Logging)(Citation: FireEye PowerShell Logging)(Citation: Microsoft AMSI)&lt;br /&gt;&lt;p&gt;Detailed detections per technique:&lt;/p&gt;&lt;br /&gt;['T1560.002']: Monitor for any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent. &lt;br /&gt;['T1620']: Similarly, AMSI / ETW traces can be used to identify signs of arbitrary code execution from within the memory of potentially compromised processes.(Citation: MDSec Detecting DOTNET)(Citation: Introducing Donut)&lt;br /&gt;['T1562']: Monitor for any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.&lt;br /&gt;['T1005']: Monitor for any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.  Data may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).&lt;br /&gt;['T1564.007']: Detection efforts should be placed finding differences between VBA source code and p-code.(Citation: Walmart Roberts Oct 2018) VBA code can be extracted from p-code before execution with tools such as the pcodedmp disassembler. The oletools toolkit leverages the pcodedmp disassembler to detect VBA stomping by comparing keywords present in the VBA source code and p-code.(Citation: pcodedmp Bontchev)(Citation: oletools toolkit)&lt;br /&gt;['T1559.001']: Monitor for any attempts to enable scripts running on a system would be considered suspicious. Enumeration of COM objects, via [Query Registry](https://attack.mitre.org/techniques/T1012) or [PowerShell](https://attack.mitre.org/techniques/T1059/001), may also proceed malicious use.(Citation: Fireeye Hunting COM June 2019)(Citation: Enigma MMC20 COM Jan 2017)&lt;br /&gt;['T1559.002']: Monitor for any attempts to enable scripts running on a system would be considered suspicious. OLE and Office Open XML files can be scanned for 'DDEAUTO', 'DDE', and other strings indicative of DDE execution.https://blog.nviso.be/2017/10/11/detecting-dde-in-ms-office-documents/&lt;br /&gt;['T1556.005']: Consider monitoring and/or blocking suspicious execution of Active Directory PowerShell modules, such as &lt;code&gt;Set-ADUser&lt;/code&gt; and &lt;code&gt;Set-ADAccountControl&lt;/code&gt;, that change account configurations.&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="FireEye PowerShell Logging" url="https://www.fireeye.com/blog/threat-research/2016/02/greater_visibilityt.html"/>
            <reference name="Microsoft AMSI" url="https://docs.microsoft.com/en-us/windows/win32/amsi/antimalware-scan-interface-portal"/>
            <reference name="Microsoft PowerShell Logging" url="https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_logging_windows?view=powershell-7"/>
            <reference name="Mitre ATT&amp;CK Data Source DS0012" url="https://attack.mitre.org/datasources/DS0012"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:01.271">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-DS0019" name="Service" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>A computer process that is configured to execute continuously in the background and perform system tasks, in some cases before any user has logged in(Citation: Microsoft Services)(Citation: Linux Services Run Levels)&lt;br /&gt;&lt;p&gt;Detailed detections per technique:&lt;/p&gt;&lt;br /&gt;['T1574.005']: Monitor for abnormal process call trees from typical processes and services and for execution of other commands that could relate to Discovery or other adversary techniques. &lt;br /&gt;['T1574']: Look for changes to binaries and service executables that may normally occur during software updates. If an executable is written, renamed, and/or moved to match an existing service executable, it could be detected and correlated with other suspicious behavior. Hashing of binaries and service executables could be used to detect replacement against historical data.&lt;br /&gt;['T1562.001']: Monitor for telemetry that provides context of security software services being disabled or modified.&lt;br /&gt;['T1562']: Monitor contextual data about a service/daemon, which may include information such as name, service executable, start type that that may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms.&lt;br /&gt;['T1036']: Monitor for contextual data about a service/daemon, which may include information such as name, service executable, start type, etc.&lt;br /&gt;['T1490']: Monitor the status of services involved in system recovery.&lt;br /&gt;['T1489']: Alterations to the service binary path or the service startup type changed to disabled may be suspicious.&lt;br /&gt;['T1574.010']: Hashing of binaries and service executables could be used to detect replacement against historical data.&lt;br /&gt;['T1197']: BITS runs as a service and its status can be checked with the Sc query utility (&lt;code&gt;sc query bits&lt;/code&gt;).(Citation: Microsoft Issues with BITS July 2011)&lt;br /&gt;['T1021.006']: Monitor use of WinRM within an environment by tracking service execution. If it is not normally used or is disabled, then this may be an indicator of suspicious behavior.&lt;br /&gt;['T1036.004']: Monitor for changes made to services for unexpected modifications to names, descriptions, and/or start types&lt;br /&gt;['T1543']: Monitor for newly constructed services/daemons that may create or modify system-level processes to repeatedly execute malicious payloads as part of persistence. &lt;br /&gt;['T1557.001']: Monitor for newly constructed services/daemons through Windows event logs for event IDs 4697 and 7045. (Citation: Secure Ideas SMB Relay) Deploy an LLMNR/NBT-NS spoofing detection tool.(Citation: GitHub Conveigh)&lt;br /&gt;['T1036']: Monitor for newly constructed services/daemons that may attempt to manipulate features of their artifacts to make them appear legitimate or benign to users and/or security tools.&lt;br /&gt;['T1569.001']: Monitor for newly constructed services/daemons to execute commands or programs.&lt;br /&gt;['T1543.003']: Creation of new services may generate an alterable event (ex: Event ID 4697 and/or 7045 (Citation: Microsoft 4697 APR 2017)(Citation: Microsoft Windows Event Forwarding FEB 2018)), especially those associated with unknown/abnormal drivers. New, benign services may be created during installation of new software.&lt;br /&gt;['T1036.004']: Monitor for newly constructed services/daemons. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.&lt;br /&gt;['T1564.006']: Monitor for newly constructed services/daemons that may carry out malicious operations using a virtual instance to avoid detection. Consider monitoring for new [Windows Service](https://attack.mitre.org/techniques/T1543/003), with respect to virtualization software.&lt;br /&gt;['T1564']: Monitor for newly constructed services/daemons that may attempt to hide artifacts associated with their behaviors to evade detection.&lt;br /&gt;['T1543.001']: Monitor Launch Agent creation through additional plist files and utilities such as Objective-See's KnockKnock application. &lt;br /&gt;['T1569.002']: Monitor newly constructed services that abuse control manager to execute malicious commands or payloads.&lt;br /&gt;['T1543.002']: Monitor for new constructed systemd services to repeatedly execute malicious payloads as part of persistence.&lt;br /&gt;['T1557']: Monitor for newly constructed services/daemons through Windows event logs for event IDs 4697 and 7045.&lt;br /&gt;['T1543.004']: Monitor for newly constructed services may create or modify Launch Daemons to execute malicious payloads as part of persistence.&lt;br /&gt;['T1543.001']: Monitor for changes made to launch agents to repeatedly execute malicious payloads as part of persistence.&lt;br /&gt;['T1543']: Monitor for changes to system processes that do not correlate with known software, patch cycles, etc., including by comparing results against a trusted system baseline.&lt;br /&gt;['T1574.011']: Modification to existing services should not occur frequently. If a service binary path or failure parameters are changed to values that are not typical for that service and does not correlate with software updates, then it may be due to malicious activity.&lt;br /&gt;['T1543.004']: Monitor services for changes made to Launch Daemons to execute malicious payloads as part of persistence.&lt;br /&gt;['T1543.002']: Analyze the contents of &lt;code&gt;.service&lt;/code&gt; files present on the file system and ensure that they refer to legitimate, expected executables.&lt;br /&gt;['T1543.003']: Monitor for changes made to Windows services to repeatedly execute malicious payloads as part of persistence.&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Linux Services Run Levels" url="https://www.linux.com/news/introduction-services-runlevels-and-rcd-scripts/"/>
            <reference name="Microsoft Services" url="https://docs.microsoft.com/en-us/dotnet/framework/windows-services/introduction-to-windows-service-applications"/>
            <reference name="Mitre ATT&amp;CK Data Source DS0019" url="https://attack.mitre.org/datasources/DS0019"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:01.314">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-M1054" name="Software Configuration" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>Implement configuration changes to software (other than the operating system) to mitigate security risks associated to how the software operates.&lt;br /&gt;&lt;p&gt;Detailed mitigations per technique:&lt;/p&gt;&lt;br /&gt;['T1566.002', 'T1598', 'T1566', 'T1566.001', 'T1598.002', 'T1598.003']: Use anti-spoofing and email authentication mechanisms to filter messages based on validity checks of the sender domain (using SPF) and integrity of messages (using DKIM). Enabling these mechanisms within an organization (through policies such as DMARC) may enable recipients (intra-org and cross domain) to perform similar message filtering and validation.(Citation: Microsoft Anti Spoofing)(Citation: ACSC Email Spoofing)&lt;br /&gt;['T1550.004', 'T1539', 'T1506']: Configure browsers or tasks to regularly delete persistent cookies.&lt;br /&gt;['T1602.001', 'T1602']: Allowlist MIB objects and implement SNMP views.(Citation: Cisco Securing SNMP)&lt;br /&gt;['T1553.004', 'T1553']: HTTP Public Key Pinning (HPKP) is one method to mitigate potential [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) situations where and adversary uses a mis-issued or fraudulent certificate to intercept encrypted communications by enforcing use of an expected certificate. (Citation: Wikipedia HPKP)&lt;br /&gt;['T1137.002']: Create the Registry key used to execute it and set the permissions to "Read Control" to prevent easy access to the key without administrator permissions or requiring Privilege Escalation.(Citation: Palo Alto Office Test Sofacy)&lt;br /&gt;['T1559', 'T1559.002', 'T1173']: Consider disabling embedded files in Office programs, such as OneNote, that do not work with Protected View.(Citation: Enigma Reviving DDE Jan 2018)(Citation: GitHub Disable DDEAUTO Oct 2017)&lt;br /&gt;['T1535']: Cloud service providers may allow customers to deactivate unused regions.(Citation: CloudSploit - Unused AWS Regions)&lt;br /&gt;['T1562.006', 'T1054']: Consider automatically relaunching forwarding mechanisms at recurring intervals (ex: temporal, on-logon, etc.) as well as applying appropriate change management to firewall rules and other related system configurations.&lt;br /&gt;['T1130']: HTTP Public Key Pinning (HPKP) is one method to mitigate potential man-in-the-middle situations where and adversary uses a mis-issued or fraudulent certificate to intercept encrypted communications by enforcing use of an expected certificate. (Citation: Wikipedia HPKP)&lt;br /&gt;['T1602.002']: Allowlist MIB objects and implement SNMP views. Disable Smart Install (SMI) if not used.(Citation: Cisco Securing SNMP)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018) &lt;br /&gt;['T1504']: Avoid PowerShell profiles if not needed. Use the &lt;code&gt;-No Profile&lt;/code&gt; flag with when executing PowerShell scripts remotely to prevent local profiles and scripts from being executed. &lt;br /&gt;['T1546.013']: Avoid PowerShell profiles if not needed. Use the -No Profile flag with when executing PowerShell scripts remotely to prevent local profiles and scripts from being executed.&lt;br /&gt;['T1555.005']: Consider re-locking password managers after a short timeout to limit the time plaintext credentials live in memory from decrypted databases.&lt;br /&gt;['T1606']: Configure browsers/applications to regularly delete persistent web credentials (such as cookies).&lt;br /&gt;['T1606.001']: Configure browsers/applications to regularly delete persistent web cookies.&lt;br /&gt;['T1137']: For the Office Test method, create the Registry key used to execute it and set the permissions to "Read Control" to prevent easy access to the key without administrator permissions or requiring Privilege Escalation. (Citation: Palo Alto Office Test Sofacy)&lt;br /&gt;['T1562.009']: Ensure that endpoint defenses run in safe mode.(Citation: CyberArk Labs Safe Mode 2016)&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Mitre ATT&amp;CK Mitigation M1054" url="https://attack.mitre.org/mitigations/M1054"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:02.280">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-DS0002" name="User Account" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>A profile representing a user, device, service, or application used to authenticate and access resources&lt;br /&gt;&lt;p&gt;Detailed detections per technique:&lt;/p&gt;&lt;br /&gt;['T1110.002']:  Monitor for many failed authentication attempts across various accounts that may result from password spraying attempts. It is difficult to detect when hashes are cracked, since this is generally done outside the scope of the target network. (ex: Windows EID 4625 or 5379)&lt;br /&gt;['T1078.002']: Monitor for an attempt by a user to gain access to a network or computing resource, often by the use of domain authentication services, such as the System Security Services Daemon (sssd) on Linux&lt;br /&gt;['T1078.004']: Monitor the activity of cloud accounts to detect abnormal or malicious behavior, such as accessing information outside of the normal function of the account or account usage at atypical hours.&lt;br /&gt;['T1552.007']: It may be possible to detect adversary use of credentials they have obtained such as in [Valid Accounts](https://attack.mitre.org/techniques/T1078).&lt;br /&gt;['T1070']: Monitor for an attempt by a user to gain access to a network or computing resource, often by providing credentials that may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined malware.&lt;br /&gt;['T1550.003']: Audit all Kerberos authentication and credential use events and review for discrepancies. Unusual remote authentication events that correlate with other suspicious activity (such as writing and executing binaries) may indicate malicious activity.&lt;br /&gt;['T1621']: Monitor user account logs for suspicious events: unusual login attempt source location, mismatch in location of login attempt and smart device receiving 2FA/MFA request prompts, and high volume of repeated login attempts, all of which may indicate user's primary credentials have been compromised minus 2FA/MFA mechanism.&lt;br /&gt;['T1212']: Credential resources obtained through exploitation may be detectable in use if they are not normally used or seen.&lt;br /&gt;['T1110']:  Monitor for many failed authentication attempts across various accounts that may result from password spraying attempts. It is difficult to detect when hashes are cracked, since this is generally done outside the scope of the target network.&lt;br /&gt;['T1606.002']: Monitor for user authentication attempts, when requesting access tokens to services, that failed because of Conditional Access Policies (CAP). Some SAML tokens features, such as the location of a user, may not be as easy to claim.&lt;br /&gt;['T1207']: Investigate usage of Kerberos Service Principal Names (SPNs), especially those associated with services (beginning with "GC/") by computers not present in the DC organizational unit (OU). The SPN associated with the Directory Replication Service (DRS) Remote Protocol interface (GUID E3514235-4B06-11D1-AB04-00C04FC2DCD2) can be set without logging.(Citation: ADDSecurity DCShadow Feb 2018) A rogue DC must authenticate as a service using these two SPNs for the replication process to successfully complete.&lt;br /&gt;['T1552.005']: It may be possible to detect adversary use of credentials they have obtained such as in [Valid Accounts](https://attack.mitre.org/techniques/T1078).&lt;br /&gt;['T1078.001']: Monitor for an attempt by a user to gain access to a network or computing resource, often by providing credentials&lt;br /&gt;['T1550.002']: Monitor for user authentication attempts. From a classic Pass-The-Hash perspective, this technique uses a hash through the NTLMv1 / NTLMv2 protocol to authenticate against a compromised endpoint. This technique does not touch Kerberos. Therefore, NTLM LogonType 3 authentications that are not associated to a domain login and are not anonymous logins are suspicious. From an Over-Pass-The-Hash perspective, an adversary wants to exchange the hash for a Kerberos authentication ticket (TGT). One way to do this is by creating a sacrificial logon session with dummy credentials (LogonType 9) and then inject the hash into that session which triggers the Kerberos authentication process.&lt;br /&gt;['T1070.005']: Monitoring for Windows authentication logs are also useful in determining when authenticated network shares are established and by which account, and can be used to correlate network share activity to other events to investigate potentially malicious activity.&lt;br /&gt;['T1078']: Monitor for an attempt by a user that may obtain and abuse credentials of existing accounts as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. &lt;br /&gt;['T1070.003']: Monitor for an attempts by a user to gain access to a network or computing resource, often by providing credentials via remote terminal services, that do not have a corresponding entry in a command history file.&lt;br /&gt;['T1550']: Monitor for an attempt by a user to gain access to a network or computing resource, often by providing credentials that may use alternate authentication material, such as password hashes, Kerberos tickets, and application access tokens, in order to move laterally within an environment and bypass normal system access controls.&lt;br /&gt;['T1538']: Correlate other security systems with login information&lt;br /&gt;['T1552']: Monitor for an attempt by a user to gain access to a network or computing resource, often by providing credentials that may search compromised systems to find and obtain insecurely stored credentials.&lt;br /&gt;['T1564.002']: Monitor for newly constructed user accounts, such as userIDs under 500 on macOS, that may mask the presence of user accounts they create or modify.&lt;br /&gt;['T1136.003']: Monitor for newly constructed user accounts through the collection of usage logs from cloud user and administrator accounts to identify unusual activity in the creation of new accounts and assignment of roles to those accounts. Monitor for accounts assigned to admin roles that go over a certain threshold of known admins.&lt;br /&gt;['T1136.001']: Monitor for newly constructed user accounts through account audits to detect suspicious accounts that may have been created by an adversary. Collect data on account creation within a network or Windows Event ID 4720 (for when a user account is created on a Windows system and domain controller).&lt;br /&gt;['T1564']: Monitor for newly constructed user accounts that may attempt to hide artifacts associated with their behaviors to evade detection.&lt;br /&gt;['T1531']: Monitor for unexpected deletions of user accounts. Windows event logs may designate activity associated with an adversary's attempt to remove an account (ex: Event ID 4726 - A user account was deleted).

Alerting on these Event IDs may generate a high degree of false positives, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible.&lt;br /&gt;['T1098.001']: Monitor Azure Activity Logs for Service Principal and Application modifications. Monitor for the usage of APIs that create or import SSH keys, particularly by unexpected users or accounts such as the root account.&lt;br /&gt;['T1528']: Administrators should set up monitoring to trigger automatic alerts when policy criteria are met. For example, using a Cloud Access Security Broker (CASB), admins can create a "High severity app permissions" policy that generates alerts if apps request high severity permissions or send permissions requests for too many users.
Security analysts can hunt for malicious apps using the tools available in their CASB, identity provider, or resource provider (depending on platform.) For example, they can filter for apps that are authorized by a small number of users, apps requesting high risk permissions, permissions incongruous with the app's purpose, or apps with old "Last authorized" fields. A specific app can be investigated using an activity log displaying activities the app has performed, although some activities may be mis-logged as being performed by the user. App stores can be useful resources to further investigate suspicious apps.
Administrators can set up a variety of logs and leverage audit tools to monitor actions that can be conducted as a result of OAuth 2.0 access. For instance, audit reports enable admins to identify privilege escalation actions such as role creations or policy modifications, which could be actions performed after initial access.&lt;br /&gt;['T1531']: Monitor for changes made to user accounts for unexpected modification of properties, such as passwords or status (enabled/disabled). Windows event logs may designate activity associated with an adversary's attempt to remove access to an account:
Event ID 4723 - An attempt was made to change an account's password
Event ID 4724 - An attempt was made to reset an account's password
Event ID 4725 - A user account was disabled

Alerting on these Event IDs may generate a high degree of false positives, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible.&lt;br /&gt;['T1098.003']: Collect usage logs from cloud administrator accounts to identify unusual activity in the assignment of roles to those accounts. Monitor for accounts assigned to admin roles that go over a certain threshold of known admins.&lt;br /&gt;['T1098.005']: Monitor user accounts for new and suspicious device associations, such as those originating from unusual sources, occurring at unusual times, or following a suspicious login.(Citation: Microsoft DEV-0537) &lt;br /&gt;['T1098.002']: Monitor for unusual Exchange and Office 365 email account permissions changes that may indicate excessively broad permissions being granted to compromised accounts.&lt;br /&gt;['T1098']: Monitor events for changes to account objects and/or permissions on systems and the domain, such as event IDs 4738, 4728 and 4670. Monitor for modification of accounts in correlation with other suspicious activity. Changes may occur at unusual times or from unusual systems. Especially flag events where the subject and target accounts differ or that include additional flags such as changing a password without knowledge of the old password.

Monitor for unusual permissions changes that may indicate excessively broad permissions being granted to compromised accounts.&lt;br /&gt;['T1201']: Monitor for contextual data about an account that may attempt to access detailed information about the password policy used within an enterprise network or cloud environment.&lt;br /&gt;['T1134']: Monitor for contextual data about an account, which may include a username, user ID, environmental data, etc. that may modify access tokens to operate under a different user or system security context to perform actions and bypass access controls.&lt;br /&gt;['T1134.005']: Examine data in user's SID-History attributes&lt;br /&gt;['T1564.002']: Monitor for contextual data about an account, which may include a username, user ID, environmental data that may mask the presence of user accounts they create or modify. On macOS, identify users with an userID under 500 and the &lt;code&gt;Hide500Users&lt;/code&gt; key value in the &lt;code&gt;/Library/Preferences/com.apple.loginwindow&lt;/code&gt; plist file set to &lt;code&gt;TRUE&lt;/code&gt;.(Citation: Cybereason OSX Pirrit)&lt;br /&gt;['T1556.005']: Monitor Fine-Grained Password Policies and regularly audit user accounts and group settings.(Citation: dump_pwd_dcsync)&lt;br /&gt;['T1564']: Monitor for contextual data about an account, which may include a username, user ID, environmental data that may attempt to hide artifacts associated with their behaviors to evade detection.&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Mitre ATT&amp;CK Data Source DS0002" url="https://attack.mitre.org/datasources/DS0002"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:01.238">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-M1018" name="User Account Management" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>Manage the creation, modification, use, and permissions associated to user accounts.&lt;br /&gt;&lt;p&gt;Detailed mitigations per technique:&lt;/p&gt;&lt;br /&gt;['T1580']: Limit permissions to discover cloud infrastructure in accordance with least privilege. Organizations should limit the number of users within the organization with an IAM role that has administrative privileges, strive to reduce all permanent privileged role assignments, and conduct periodic entitlement reviews on IAM users, roles and policies.&lt;br /&gt;['T1159', 'T1543.001']: Restrict user's abilities to create Launch Agents with group policy.&lt;br /&gt;['T1543']: Limit privileges of user accounts and groups so that only authorized administrators can interact with system-level process changes and service configurations.&lt;br /&gt;['T1040']: In cloud environments, ensure that users are not granted permissions to create or modify traffic mirrors unless this is explicitly required.&lt;br /&gt;['T1578']: Limit permissions for creating, deleting, and otherwise altering compute components in accordance with least privilege. Organizations should limit the number of users within the organization with an IAM role that has administrative privileges, strive to reduce all permanent privileged role assignments, and conduct periodic entitlement reviews on IAM users, roles and policies.(Citation: Mandiant M-Trends 2020)&lt;br /&gt;['T1004', 'T1547.004']: Limit the privileges of user accounts so that only authorized administrators can perform Winlogon helper changes.&lt;br /&gt;['T1072']: Ensure that any accounts used by third-party providers to access these systems are traceable to the third-party and are not used throughout the network or used by other third-party providers in the same environment. Ensure there are regular reviews of accounts provisioned to these systems to verify continued business need, and ensure there is governance to trace de-provisioning of access that is no longer required. Ensure proper system and access isolation for critical network systems through use of account privilege separation.&lt;br /&gt;['T1574.010', 'T1574.005']: Limit privileges of user accounts and groups so that only authorized administrators can interact with service changes and service binary target path locations. Deny execution from user directories such as file download directories and temp directories where able.&lt;br /&gt;['T1098.004']: In cloud environments, ensure that only users who explicitly require the permissions to update instance metadata or configurations can do so.&lt;br /&gt;['T1619']: Restrict granting of permissions related to listing objects in cloud storage to necessary accounts.&lt;br /&gt;['T1053']: Limit privileges of user accounts and remediate Privilege Escalation vectors so only authorized administrators can create scheduled tasks on remote systems.&lt;br /&gt;['T1089', 'T1562.001']: Ensure proper user permissions are in place to prevent adversaries from disabling or interfering with security services.&lt;br /&gt;['T1530']: Configure user permissions groups and roles for access to cloud storage.(Citation: Microsoft Azure Storage Security, 2019) Implement strict Identity and Access Management (IAM) controls to prevent access to storage solutions except for the applications, users, and services that require access.(Citation: Amazon S3 Security, 2019) Ensure that temporary access tokens are issued rather than permanent credentials, especially when access is being granted to entities outside of the internal security boundary.(Citation: Amazon  AWS Temporary Security Credentials)&lt;br /&gt;['T1050']: Limit privileges of user accounts and remediate Privilege Escalation vectors so only  authorized administrators can create new services.&lt;br /&gt;['T1610']: Enforce the principle of least privilege by limiting container dashboard access to only the necessary users.&lt;br /&gt;['T1197']: 
Consider limiting access to the BITS interface to specific users or groups.(Citation: Symantec BITS May 2007)&lt;br /&gt;['T1537']: Limit user account and IAM policies to the least privileges required. Consider using temporary credentials for accounts that are only valid for a certain period of time to reduce the effectiveness of compromised accounts.&lt;br /&gt;['T1562.008']: Configure default account policy to enable logging. Manage policies to ensure only necessary users have permissions to make changes to logging policies.&lt;br /&gt;['T1546.003', 'T1084']: By default, only administrators are allowed to connect remotely using WMI; restrict other users that are allowed to connect, or disallow all users from connecting remotely to WMI.&lt;br /&gt;['T1547.009', 'T1023']: Limit permissions for who can create symbolic links in Windows to appropriate groups such as Administrators and necessary groups for virtualization. This can be done through GPO: Computer Configuration &gt; [Policies] &gt; Windows Settings &gt; Security Settings &gt; Local Policies &gt; User Rights Assignment: Create symbolic links. (Citation: UCF STIG Symbolic Links)&lt;br /&gt;['T1578.003']: Limit permissions for deleting new instances in accordance with least privilege. Organizations should limit the number of users within the organization with an IAM role that has administrative privileges, strive to reduce all permanent privileged role assignments, and conduct periodic entitlement reviews on IAM users, roles and policies.(Citation: Mandiant M-Trends 2020)&lt;br /&gt;['T1051']: Ensure that permissions of the Web server process are only what is required by not using built-in accounts; instead, create specific accounts to limit unnecessary access or permissions overlap across multiple systems. (Citation: acunetix Server Secuirty) (Citation: NIST Server Security July 2008)&lt;br /&gt;['T1134', 'T1134.001', 'T1134.003']: An adversary must already have administrator level access on the local system to make full use of this technique; be sure to restrict users and accounts to the least privileges they require.  &lt;br /&gt;['T1163']: Limit privileges of user accounts so only authorized users can edit the rc.common file.&lt;br /&gt;['T1054', 'T1562.006']: Ensure event tracers/forwarders (Citation: Microsoft ETW May 2018), firewall policies, and other associated mechanisms are secured with appropriate permissions and access controls and cannot be manipulated by user accounts.&lt;br /&gt;['T1165']: Appropriate permissions should be applied such that only specific users can edit the startup items so that they can be leveraged for privilege escalation.&lt;br /&gt;['T1543.004', 'T1160', 'T1053.004']: Limit privileges of user accounts and remediate Privilege Escalation vectors so only authorized administrators can create new Launch Daemons.&lt;br /&gt;['T1047']: By default, only administrators are allowed to connect remotely using WMI. Restrict other users who are allowed to connect, or disallow all users to connect remotely to WMI.&lt;br /&gt;['T1609']: Enforce authentication and role-based access control on the container service to restrict users to the least privileges required.(Citation: Kubernetes Hardening Guide)&lt;br /&gt;['T1550.003', 'T1097']: Do not allow a user to be a local administrator for multiple systems.&lt;br /&gt;['T1574']: Limit privileges of user accounts and groups so that only authorized administrators can interact with service changes and service binary target path locations. Deny execution from user directories such as file download directories and temp directories where able.

Ensure that proper permissions and directory access control are set to deny users the ability to write files to the top-level directory &lt;code&gt;C:&lt;/code&gt; and system directories, such as &lt;code&gt;C:\Windows\&lt;/code&gt;, to reduce places where malicious files could be placed for execution.&lt;br /&gt;['T1078']: Regularly audit user accounts for activity and deactivate or remove any that are no longer needed.&lt;br /&gt;['T1053.007']: Limit privileges of user accounts and remediate privilege escalation vectors so only authorized administrators can create container orchestration jobs.&lt;br /&gt;['T1484.001', 'T1484']: Consider implementing WMI and security filtering to further tailor which users and computers a GPO will apply to.(Citation: Wald0 Guide to GPOs)(Citation: Microsoft WMI Filters)(Citation: Microsoft GPO Security Filtering)&lt;br /&gt;['T1547.006']: Use MDM to disable user's ability to install or approve kernel extensions, and ensure all approved kernel extensions are in alignment with policies specified in &lt;code&gt;com.apple.syspolicy.kernel-extension-policy&lt;/code&gt;.(Citation: Apple TN2459 Kernel Extensions)(Citation: MDMProfileConfigMacOS)
&lt;br /&gt;['T1563.002', 'T1021.001', 'T1076', 'T1563']: Limit remote user permissions if remote access is necessary.&lt;br /&gt;['T1569', 'T1569.001']: Prevent users from installing their own launch agents or launch daemons.&lt;br /&gt;['T1501', 'T1543.002']: Limit user access to system utilities such as 'systemctl' to only users who have a legitimate need.&lt;br /&gt;['T1213.002', 'T1213', 'T1213.001']: Enforce the principle of least-privilege. Consider implementing access control mechanisms that include both authentication and authorization.&lt;br /&gt;['T1031', 'T1489']: Limit privileges of user accounts and groups so that only authorized administrators can interact with service changes and service configurations.&lt;br /&gt;['T1021']: Limit the accounts that may use remote services. Limit the permissions for accounts that are at higher risk of compromise; for example, configure SSH so users can only run specific programs.&lt;br /&gt;['T1550.002', 'T1075']: Do not allow a domain user to be in the local administrator group on multiple systems.&lt;br /&gt;['T1562']: Ensure proper user permissions are in place to prevent adversaries from disabling or interfering with security/logging services.&lt;br /&gt;['T1547.013']: Limit privileges of user accounts so only authorized privileged users can create and modify XDG autostart entries.&lt;br /&gt;['T1157']: Prevent users from being able to write files to the search paths for applications.&lt;br /&gt;['T1034']: Ensure that proper permissions and directory access control are set to deny users the ability to write files to the top-level directory &lt;code&gt;C:&lt;/code&gt; and system directories, such as &lt;code&gt;C:\Windows\&lt;/code&gt;, to reduce places where malicious files could be placed for execution.&lt;br /&gt;['T1578.001']: Limit permissions for creating snapshots or backups in accordance with least privilege. Organizations should limit the number of users within the organization with an IAM role that has administrative privileges, strive to reduce all permanent privileged role assignments, and conduct periodic entitlement reviews on IAM users, roles and policies.(Citation: Mandiant M-Trends 2020)&lt;br /&gt;['T1606.002', 'T1606']: Ensure that user accounts with administrative rights follow best practices, including use of privileged access workstations, Just in Time/Just Enough Administration (JIT/JEA), and strong authentication. Reduce the number of users that are members of highly privileged Directory Roles.(Citation: Microsoft SolarWinds Customer Guidance)&lt;br /&gt;['T1134.002']: An adversary must already have administrator level access on the local system to make full use of this technique; be sure to restrict users and accounts to the least privileges they require.&lt;br /&gt;['T1053.005']: Limit privileges of user accounts and remediate Privilege Escalation vectors so only authorized administrators can create scheduled tasks on remote systems. &lt;br /&gt;['T1566.002']: Azure AD Administrators apply limitations upon the ability for users to grant consent to unfamiliar or unverified third-party applications. &lt;br /&gt;['T1110.004', 'T1110']: Proactively reset accounts that are known to be part of breached credentials either immediately, or after detecting bruteforce attempts.&lt;br /&gt;['T1185']: Since browser pivoting requires a high integrity process to launch from, restricting user permissions and addressing Privilege Escalation and [Bypass User Account Control](https://attack.mitre.org/techniques/T1548/002) opportunities can limit the exposure to this technique.&lt;br /&gt;['T1044']: Limit privileges of user accounts and groups so that only authorized administrators can interact with service changes and service binary target path locations. Deny execution from user directories such as file download directories and temp directories where able. (Citation: Seclists Kanthak 7zip Installer)&lt;br /&gt;['T1021.004']: Limit which user accounts are allowed to login via SSH.&lt;br /&gt;['T1562.007']: Ensure least privilege principles are applied to Identity and Access Management (IAM) security policies.(Citation: Expel IO Evil in AWS)&lt;br /&gt;['T1168']: Limit privileges of user accounts and remediate Privilege Escalation vectors so only authorized users can create scheduled jobs.&lt;br /&gt;['T1538']: Enforce the principle of least-privilege by limiting dashboard visibility to only the resources required. This may limit the discovery value of the dashboard in the event of a compromised account.&lt;br /&gt;['T1550']: Enforce the principle of least-privilege. Do not allow a domain user to be in the local administrator group on multiple systems.&lt;br /&gt;['T1053.002']: Limit privileges of user accounts and remediate Privilege Escalation vectors so only authorized administrators can create scheduled tasks on remote systems. In Linux environments, users account-level access to &lt;code&gt;[at](https://attack.mitre.org/software/S0110)&lt;/code&gt; can be managed using &lt;code&gt;at.allow&lt;/code&gt; and &lt;code&gt;at.deny&lt;/code&gt; files. Users listed in the at.allow are enabled to schedule actions using at, whereas users listed in at.deny file disabled from the utility.&lt;br /&gt;['T1053.003']: &lt;code&gt;cron&lt;/code&gt; permissions are controlled by &lt;code&gt;/etc/cron.allow and /etc/cron.deny&lt;/code&gt;. If there is a &lt;code&gt;cron.allow&lt;/code&gt; file, then the user or users that need to use &lt;code&gt;cron&lt;/code&gt; will need to be listed in the file. &lt;code&gt;cron.deny&lt;/code&gt; is used to explicitly disallow users from using cron. If neither files exist, then only the super user is allowed to run cron.&lt;br /&gt;['T1505.003']: Enforce the principle of least privilege by limiting privileges of user accounts so only authorized accounts can modify the web directory.(Citation: NSA and ASD Detect and Prevent Web Shells 2020)&lt;br /&gt;['T1552.007']: Enforce authentication and role-based access control on the container API to restrict users to the least privileges required.(Citation: Kubernetes Hardening Guide)&lt;br /&gt;['T1562.004']: Ensure proper user permissions are in place to prevent adversaries from disabling or modifying firewall settings.&lt;br /&gt;['T1213.003']: Enforce the principle of least-privilege. Consider implementing access control mechanisms that include both authentication and authorization for code repositories.&lt;br /&gt;['T1613']: Enforce the principle of least privilege by limiting dashboard visibility to only the required users.&lt;br /&gt;['T1547.012']: Limit user accounts that can load or unload device drivers by disabling &lt;code&gt;SeLoadDriverPrivilege&lt;/code&gt;.&lt;br /&gt;['T1543.003']: Limit privileges of user accounts and groups so that only authorized administrators can interact with service changes and service configurations. &lt;br /&gt;['T1528']: Enforce role-based access control to limit accounts to the least privileges they require. A Cloud Access Security Broker (CASB) can be used to set usage policies and manage user permissions on cloud applications to prevent access to application access tokens. In Kubernetes applications, set "automountServiceAccountToken: false" in the YAML specification of pods that do not require access to service account tokens.(Citation: Kubernetes Hardening Guide)&lt;br /&gt;['T1053.006']: Limit user access to system utilities such as 'systemctl' or 'systemd-run' to users who have a legitimate need.&lt;br /&gt;['T1152']: Prevent users from installing their own launch agents or launch daemons and instead require them to be pushed out by group policy.&lt;br /&gt;['T1578.002']: Limit permissions for creating new instances in accordance with least privilege. Organizations should limit the number of users within the organization with an IAM role that has administrative privileges, strive to reduce all permanent privileged role assignments, and conduct periodic entitlement reviews on IAM users, roles and policies.(Citation: Mandiant M-Trends 2020)&lt;br /&gt;['T1087.004']: Limit permissions to discover cloud accounts in accordance with least privilege. Organizations should limit the number of users within the organization with an IAM role that has administrative privileges, strive to reduce all permanent privileged role assignments, and conduct periodic entitlement reviews on IAM users, roles and policies.&lt;br /&gt;['T1505']: Enforce the principle of least privilege by limiting privileges of user accounts so only authorized accounts can modify and/or add server software components.(Citation: NSA and ASD Detect and Prevent Web Shells 2020)&lt;br /&gt;['T1562.002']: Ensure proper user permissions are in place to prevent adversaries from disabling or interfering with logging.&lt;br /&gt;['T1059.008']: Use of Authentication, Authorization, and Accounting (AAA) systems will limit actions users can perform and provide a history of user actions to detect unauthorized use and abuse. Ensure least privilege principles are applied to user accounts and groups so that only authorized users can perform configuration changes. (Citation: Cisco IOS Software Integrity Assurance - AAA)&lt;br /&gt;['T1574.012']: Limit the privileges of user accounts so that only authorized administrators can edit system environment variables.&lt;br /&gt;['T1078.004']: Periodically review user accounts and remove those that are inactive or unnecessary. Limit the ability for user accounts to create additional accounts.&lt;br /&gt;['T1053.001']: Users account-level access to &lt;code&gt;[at](https://attack.mitre.org/software/S0110)&lt;/code&gt; can be managed using &lt;code&gt;/etc/at.allow&lt;/code&gt; and &lt;code&gt;/etc/at.deny&lt;/code&gt; files. Users listed in the at.allow are enabled to schedule actions using at, whereas users listed in at.deny file disabled from the utility.&lt;br /&gt;['T1162']: Restrict users from being able to create their own login items.&lt;br /&gt;['T1078']: Ensure users and user groups have appropriate permissions for their roles through Identity and Access Management (IAM) controls. Configure user permissions, groups, and roles for access to cloud-based systems as well. Implement strict IAM controls to prevent access to systems except for the applications, users, and services that require access. Consider using temporary credentials that are only good for a certain period of time in cloud environments to reduce the effectiveness of compromised accounts.&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Mitre ATT&amp;CK Mitigation M1018" url="https://attack.mitre.org/mitigations/M1018"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:01.430">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-M1017" name="User Training" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>Train users to be aware of access or manipulation attempts by an adversary to reduce the risk of successful spearphishing, social engineering, and other techniques that involve user interaction.&lt;br /&gt;&lt;p&gt;Detailed mitigations per technique:&lt;/p&gt;&lt;br /&gt;['T1566.003']: Users can be trained to identify social engineering techniques and spearphishing messages with malicious links.&lt;br /&gt;['T1204', 'T1204.001', 'T1204.002']: Use user training as a way to bring awareness to common phishing and spearphishing techniques and how to raise suspicion for potentially malicious events.&lt;br /&gt;['T1213.003']: Develop and publish policies that define acceptable information to be stored in code repositories.&lt;br /&gt;['T1164']: Holding the Shift key while logging in prevents apps from opening automatically. (Citation: Re-Open windows on Mac)&lt;br /&gt;['T1552', 'T1081', 'T1552.001']: Ensure that developers and system administrators are aware of the risk associated with having plaintext passwords in software configuration files that may be left on endpoint systems or servers.&lt;br /&gt;['T1213']: Develop and publish policies that define acceptable information to be stored in repositories.&lt;br /&gt;['T1598', 'T1598.003', 'T1598.001', 'T1598.002']: Users can be trained to identify social engineering techniques and spearphishing attempts.&lt;br /&gt;['T1213.001']: Develop and publish policies that define acceptable information to be stored in Confluence repositories.&lt;br /&gt;['T1078.002', 'T1078.004', 'T1078']: Applications may send push notifications to verify a login as a form of multi-factor authentication (MFA). Train users to only accept valid push notifications and to report suspicious push notifications.&lt;br /&gt;['T1557.002', 'T1557']: Train users to be suspicious about certificate errors. Adversaries may use their own certificates in an attempt to intercept HTTPS traffic. Certificate errors may arise when the application's certificate does not match the one expected by the host.&lt;br /&gt;['T1003.005', 'T1003', 'T1003.003', 'T1003.001', 'T1003.002', 'T1003.004']: Limit credential overlap across accounts and systems by training users and administrators not to use the same password for multiple accounts.&lt;br /&gt;['T1185']: Close all browser sessions regularly and when they are no longer needed.&lt;br /&gt;['T1072']: Have a strict approval policy for use of deployment systems.&lt;br /&gt;['T1204.003']: Train users to be aware of the existence of malicious images and how to avoid deploying instances and containers from them.&lt;br /&gt;['T1192', 'T1194']: Users can be trained to identify social engineering techniques and spearphishing emails with malicious links.&lt;br /&gt;['T1036.007']: Train users to look for double extensions in filenames, and in general use training as a way to bring awareness to common phishing and spearphishing techniques and how to raise suspicion for potentially malicious events.&lt;br /&gt;['T1111']: Remove smart cards when not in use.&lt;br /&gt;['T1528']: Users need to be trained to not authorize third-party applications they don't recognize. The user should pay particular attention to the redirect URL: if the URL is a misspelled or convoluted sequence of words related to an expected service or SaaS application, the website is likely trying to spoof a legitimate service. Users should also be cautious about the permissions they are granting to apps. For example, offline access and access to read emails should excite higher suspicions because adversaries can utilize SaaS APIs to discover credentials and other sensitive communications.&lt;br /&gt;['T1221']: Train users to identify social engineering techniques and spearphishing emails that could be used to deliver malicious documents.&lt;br /&gt;['T1056.002']: Use user training as a way to bring awareness and raise suspicion for potentially malicious events and dialog boxes (ex: Office documents prompting for credentials).&lt;br /&gt;['T1176']: 
Close out all browser sessions when finished using them to prevent any potentially malicious extensions from continuing to run.&lt;br /&gt;['T1566.001', 'T1193']: Users can be trained to identify social engineering techniques and spearphishing emails.&lt;br /&gt;['T1213.002']: Develop and publish policies that define acceptable information to be stored in SharePoint repositories.&lt;br /&gt;['T1566.002']: Users can be trained to identify social engineering techniques and spearphishing emails with malicious links which includes phishing for consent with OAuth 2.0 &lt;br /&gt;['T1566']: Users can be trained to identify social engineering techniques and phishing emails.&lt;br /&gt;['T1547.007']: Holding the Shift key while logging in prevents apps from opening automatically.(Citation: Re-Open windows on Mac)&lt;br /&gt;['T1141']: Use user training as a way to bring awareness and raise suspicion for potentially malicious events (ex: Office documents prompting for credentials).&lt;br /&gt;['T1539']: Train users to identify aspects of phishing attempts where they're asked to enter credentials into a site that has the incorrect domain for the application they are logging into.&lt;br /&gt;['T1621']: Train users to only accept 2FA/MFA requests from login attempts they initiated, to review source location of the login attempt prompting the 2FA/MFA requests, and to report suspicious/unsolicited prompts.&lt;br /&gt;['T1547.011']: Holding the shift key during login prevents apps from opening automatically.(Citation: Re-Open windows on Mac)&lt;br /&gt;['T1162']: Holding the shift key during login prevents apps from opening automatically. (Citation: Re-Open windows on Mac)&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Mitre ATT&amp;CK Mitigation M1017" url="https://attack.mitre.org/mitigations/M1017"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:01.424">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-DS0006" name="Web Credential" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>Credential material, such as session cookies or tokens, used to authenticate to web applications and services(Citation: Medium Authentication Tokens)(Citation: Auth0 Access Tokens)&lt;br /&gt;&lt;p&gt;Detailed detections per technique:&lt;/p&gt;&lt;br /&gt;['T1606.002']: Monitor for the use of access tokens to access services such as email that were created using SAML tokens which do not have corresponding 1202 events (i.e. "The Federation Service validated a new credential") in the domain.(Citation: Sygnia Golden SAML)&lt;br /&gt;['T1606']: Monitor for the use of Access Tokens to access services such as Email that were created using SAML tokens which do not have corresponding 1202 events in the domain.(Citation: Sygnia Golden SAML)&lt;br /&gt;['T1550.001']: Monitor the use of application access tokens to interact with resources or services that do not fit the organization baseline. For example, an application, that is not meant to read emails, is now accessing users' mail boxes and, potentially, exfiltrating sensitive data.&lt;br /&gt;['T1550']: Monitor for an attempt by a user to gain access to a network or computing resource by providing web credentials (ex: Windows EID 1202) that may use alternate authentication material, such as password hashes, Kerberos tickets, and application access tokens, in order to move laterally within an environment and bypass normal system access controls.&lt;br /&gt;['T1606.001']: Monitor for the usage of unexpected or unusual cookies to access resources and services. Forged web cookies may be associated with unknown accounts and could be the result of compromised secrets such as passwords or [Private Keys](https://attack.mitre.org/techniques/T1552/004).&lt;br /&gt;['T1550.004']: Monitor for anomalous access of websites and cloud-based applications by the same user in different locations or by different systems that do not match expected configurations.&lt;br /&gt;['T1606.002']: Monitor for creation of access tokens using SAML tokens which do not have corresponding 4769 and 1200 events in the domain.(Citation: Sygnia Golden SAML)&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Auth0 Access Tokens" url="https://auth0.com/docs/tokens/access-tokens"/>
            <reference name="Medium Authentication Tokens" url="https://medium.com/@sherryhsu/session-vs-token-based-authentication-11a6c5ac45e4"/>
            <reference name="Mitre ATT&amp;CK Data Source DS0006" url="https://attack.mitre.org/datasources/DS0006"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:02.091">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-DS0024" name="Windows Registry" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>A Windows OS hierarchical database that stores much of the information and settings for software programs, hardware devices, user preferences, and operating-system configurations(Citation: Microsoft Registry)&lt;br /&gt;&lt;p&gt;Detailed detections per technique:&lt;/p&gt;&lt;br /&gt;['T1112']: Monitor for changes made to windows registry keys or values. Consider enabling Registry Auditing on specific keys to produce an alertable event (Event ID 4657) whenever a value is changed (though this may not trigger when values are created with Reghide or other evasive methods). (Citation: Microsoft 4657 APR 2017) Changes to Registry entries that load software on Windows startup that do not correlate with known software, patch cycles, etc., are suspicious, as are additions or changes to files within the startup folder. Changes could also include new services and modification of existing binary paths to point to malicious files. If a change to a service-related entry occurs, then it will likely be followed by a local or remote service start or restart to execute the file.&lt;br /&gt;['T1548.002']: Some UAC bypass methods rely on modifying specific, user-accessible Registry settings. For example:
* The &lt;code&gt;eventvwr.exe&lt;/code&gt; bypass uses the &lt;code&gt;[HKEY_CURRENT_USER]\Software\Classes\mscfile\shell\open\command&lt;/code&gt; Registry key.(Citation: enigma0x3 Fileless UAC Bypass)
* The &lt;code&gt;sdclt.exe&lt;/code&gt; bypass uses the &lt;code&gt;[HKEY_CURRENT_USER]\Software\Microsoft\Windows\CurrentVersion\App Paths\control.exe&lt;/code&gt; and &lt;code&gt;[HKEY_CURRENT_USER]\Software\Classes\exefile\shell\runas\command\isolatedCommand&lt;/code&gt; Registry keys.(Citation: enigma0x3 sdclt app paths)(Citation: enigma0x3 sdclt bypass)
Analysts should monitor these Registry settings for unauthorized changes.&lt;br /&gt;['T1574.011']: Monitor for modification of Registry keys and values used by services such as HKLM\SYSTEM\CurrentControlSet\Services that may allow adversaries to launch their own code when a service starts.&lt;br /&gt;['T1543.003']: Look for changes to service Registry entries that do not correlate with known software, patch cycles, etc. Service information is stored in the Registry at &lt;code&gt;HKLM\SYSTEM\CurrentControlSet\Services&lt;/code&gt;. Changes to the binary path and the service startup type changed from manual or disabled to automatic, if it does not typically do so, may be suspicious. Tools such as Sysinternals Autoruns may also be used to detect system service changes that could be attempts at persistence.(Citation: TechNet Autoruns)&lt;br /&gt;['T1547.010']: Monitor Registry writes to &lt;code&gt;HKLM\SYSTEM\CurrentControlSet\Control\Print\Monitors&lt;/code&gt;. Run the Autoruns utility, which checks for this Registry key as a persistence mechanism (Citation: TechNet Autoruns)&lt;br /&gt;['T1556.002']: Monitor for changes to Registry entries for password filters (ex: HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Lsa\Notification Packages) and correlate then investigate the DLL files these files reference.&lt;br /&gt;['T1569']: Monitor for changes made to windows registry keys and/or values that may abuse system services or daemons to execute commands or programs.&lt;br /&gt;['T1489']: Monitor for changes made to windows registry keys and/or values that may stop or disable services on a system to render those services unavailable to legitimate users.&lt;br /&gt;['T1569.002']: Monitor for changes made to windows registry keys and/or values that may abuse the Windows service control manager to execute malicious commands or payloads.&lt;br /&gt;['T1547.012']: Monitor Registry writes to &lt;code&gt;HKLM\SYSTEM\ControlSet001\Control\Print\Environments\\[Windows architecture]\Print Processors\\[user defined]\\Driver&lt;/code&gt; or &lt;code&gt;HKLM\SYSTEM\CurrentControlSet\Control\Print\Environments\\[Windows architecture]\Print Processors\\[user defined]\Driver&lt;/code&gt; as they pertain to print processor installations.&lt;br /&gt;['T1546.007']: Monitor the &lt;code&gt;HKLM\SOFTWARE\Microsoft\Netsh&lt;/code&gt; registry key for any new or suspicious entries that do not correlate with known system files or benign software. (Citation: Demaske Netsh Persistence)&lt;br /&gt;['T1546.011']: Monitor for changes to windows registry keys and/or values that may establish persistence and/or elevate privileges by executing malicious content triggered by application shims.&lt;br /&gt;['T1547.002']: Monitor the Registry for changes to the LSA Registry keys. Windows 8.1 and Windows Server 2012 R2 may generate events when unsigned DLLs try to load into the LSA by setting the Registry key &lt;code&gt;HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\LSASS.exe&lt;/code&gt; with AuditLevel = 8. (Citation: Graeber 2014) (Citation: Microsoft Configure LSA)&lt;br /&gt;['T1074.001']: Consider monitoring accesses and modifications to local storage repositories (such as the Windows Registry), especially from suspicious processes that could be related to malicious data collection.&lt;br /&gt;['T1564.006']: Monitor for changes made to Windows Registry keys and/or values that may be the result of using a virtual instance to avoid detection. For example, if virtualization software is installed by the adversary the Registry may provide detection opportunities. &lt;br /&gt;['T1564.005']: Monitor for changes made to windows registry keys and/or values that may use a hidden file system to conceal malicious activity from users and security tools.&lt;br /&gt;['T1490']: Monitor the registry for changes associated with system recovery features (ex: the creation of &lt;code&gt;HKEY_CURRENT_USER\Software\Policies\Microsoft\PreviousVersions\DisableLocalPage&lt;/code&gt;).&lt;br /&gt;['T1562.004']: Monitor for changes made to windows Registry keys and/or values that adversaries might use to disable or modify System Firewall settings such as HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\SharedAccess\Parameters\FirewallPolicy.&lt;br /&gt;['T1218']: Monitor for changes made to Windows Registry keys and/or values that may forge credential materials that can be used to gain access to web applications or Internet services.&lt;br /&gt;['T1574']: Monitor for changes made to windows registry keys and/or values that may execute their own malicious payloads by hijacking the way operating systems run programs.&lt;br /&gt;['T1137.001']: Collect events related to Registry key modification for keys that could be used for Office-based persistence.(Citation: CrowdStrike Outlook Forms)(Citation: Outlook Today Home Page)&lt;br /&gt;['T1137.006']: Audit the Registry entries relevant for enabling add-ins.(Citation: GlobalDotName Jun 2019)(Citation: MRWLabs Office Persistence Add-ins)&lt;br /&gt;['T1218.002']: Inventory Control Panel items to locate unregistered and potentially malicious files present on systems:
* Executable format registered Control Panel items will have a globally unique identifier (GUID) and registration Registry entries in &lt;code&gt;HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\ControlPanel\NameSpace&lt;/code&gt; and &lt;code&gt;HKEY_CLASSES_ROOT\CLSID\{GUID}&lt;/code&gt;. These entries may contain information about the Control Panel item such as its display name, path to the local file, and the command executed when opened in the Control Panel. (Citation: Microsoft Implementing CPL)
* CPL format registered Control Panel items stored in the System32 directory are automatically shown in the Control Panel. Other Control Panel items will have registration entries in the &lt;code&gt;CPLs&lt;/code&gt; and &lt;code&gt;Extended Properties&lt;/code&gt; Registry keys of &lt;code&gt;HKEY_LOCAL_MACHINE or HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Control Panel&lt;/code&gt;. These entries may include information such as a GUID, path to the local file, and a canonical name used to launch the file programmatically (&lt;code&gt; WinExec("c:\windows\system32\control.exe {Canonical_Name}", SW_NORMAL);&lt;/code&gt;) or from a command line (&lt;code&gt;control.exe /name {Canonical_Name}&lt;/code&gt;).(Citation: Microsoft Implementing CPL)
* Some Control Panel items are extensible via Shell extensions registered in &lt;code&gt;HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Controls Folder\{name}\Shellex\PropertySheetHandlers&lt;/code&gt; where {name} is the predefined name of the system item.(Citation: Microsoft Implementing CPL)&lt;br /&gt;['T1553.004']: Monitoring changes to the Windows Registry may reveal malicious root certificate installation. Installed root certificates are located in the Registry under &lt;code&gt;HKLM\SOFTWARE\Microsoft\EnterpriseCertificates\Root\Certificates\&lt;/code&gt; and &lt;/code&gt;[HKLM or HKCU]\Software[\Policies\]\Microsoft\SystemCertificates\Root\Certificates\&lt;/code&gt;. There are a subset of root certificates that are consistent across Windows systems and can be used for comparison: (Citation: Tripwire AppUNBlocker)
* 18F7C1FCC3090203FD5BAA2F861A754976C8DD25
* 245C97DF7514E7CF2DF8BE72AE957B9E04741E85
* 3B1EFD3A66EA28B16697394703A72CA340A05BD5
* 7F88CD7223F3C813818C994614A89C99FA3B5247
* 8F43288AD272F3103B6FB1428485EA3014C0BCFE
* A43489159A520F0D93D032CCAF37E7FE20A8B419
* BE36A4562FB2EE05DBB3D32323ADF445084ED656
* CDD4EEAE6000AC7F40C3802C171E30148030C072&lt;br /&gt;['T1564.002']: Monitor for changes made to windows registry key or values for unexpected modifications of the &lt;code&gt;HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon\SpecialAccounts\UserList&lt;/code&gt; key.&lt;br /&gt;['T1553.006']: Consider monitoring for modifications made to Registry keys associated with code signing policies, such as &lt;code&gt;HKCU\Software\Policies\Microsoft\Windows NT\Driver Signing&lt;/code&gt;. Modifications to the code signing policy of a system are likely to be rare.&lt;br /&gt;['T1553.003']: Enable the Registry Global Object Access Auditing (Citation: Microsoft Registry Auditing Aug 2016) setting in the Advanced Security Audit policy to apply a global system access control list (SACL) and event auditing on modifications to Registry values (sub)keys related to SIPs and trust providers:(Citation: Microsoft Audit Registry July 2012)
* &lt;code&gt;HKLM\SOFTWARE\Microsoft\Cryptography\OID&lt;/code&gt;
* &lt;code&gt;HKLM\SOFTWARE\WOW6432Node\Microsoft\Cryptography\OID&lt;/code&gt;
* &lt;code&gt;HKLM\SOFTWARE\Microsoft\Cryptography\Providers\Trust&lt;/code&gt;
* &lt;code&gt;HKLM\SOFTWARE\WOW6432Node\Microsoft\Cryptography\Providers\Trust&lt;/code&gt;

**Note:** As part of this technique, adversaries may attempt to manually edit these Registry keys (ex: Regedit) or utilize the legitimate registration process using [Regsvr32](https://attack.mitre.org/techniques/T1218/010).(Citation: SpectorOps Subverting Trust Sept 2017)

Periodically baseline registered SIPs and trust providers (Registry entries and files on disk), specifically looking for new, modified, or non-Microsoft entries.(Citation: SpectorOps Subverting Trust Sept 2017)&lt;br /&gt;['T1056']: Monitor for changes made to windows registry keys or values for unexpected modifications&lt;br /&gt;['T1546.012']: Monitor Registry values associated with IFEOs, as well as silent process exit monitoring, for modifications that do not correlate with known software, patch cycles, etc.&lt;br /&gt;['T1137']: Many Office-related persistence mechanisms require changes to the Registry and for binaries, files, or scripts to be written to disk or existing files modified to include malicious scripts. Collect events related to Registry key creation and modification for keys that could be used for Office-based persistence.(Citation: CrowdStrike Outlook Forms)(Citation: Outlook Today Home Page)&lt;br /&gt;['T1574.007']: Monitor for modifications of PATH environment variable Registry keys such as &lt;code&gt;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Session Manager\Environment\Path&lt;/code&gt;. An adversary can add a new directory or list of directories before other locations where programs can be executed from.&lt;br /&gt;['T1557']: Monitor HKLM\Software\Policies\Microsoft\Windows NT\DNSClient for changes to the "EnableMulticast" DWORD value. A value of "0" indicates LLMNR is disabled.&lt;br /&gt;['T1562.009']: Monitor modifications to Registry data associated with enabling safe mode. For example, a service can be forced to start on safe mode boot by adding a &lt;code&gt;\*&lt;/code&gt; in front of the "Startup" value name: &lt;code&gt;HKLM\Software\Microsoft\Windows\CurrentVersion\Run\["\*Startup"="{Path}"]&lt;/code&gt; or by adding a key to &lt;code&gt;HKLM\SYSTEM\CurrentControlSet\Control\SafeBoot\Minimal&lt;/code&gt;.(Citation: BleepingComputer REvil 2021)(Citation: Sophos Snatch Ransomware 2019)&lt;br /&gt;['T1547.014']: Monitor Registry key modifications to &lt;code&gt;HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Active Setup\Installed Components\&lt;/code&gt;.
Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing the Active Setup Registry locations and startup folders.(Citation: TechNet Autoruns) Suspicious program execution as startup programs may show up as outlier processes that have not been seen before when compared against historical data.&lt;br /&gt;['T1547']: Monitor for modifications of mechanisms that could be used to trigger autostart execution, such as relevant additions to the Registry.&lt;br /&gt;['T1543']: Monitor for changes to windows registry keys and/or values that may create or modify system-level processes to repeatedly execute malicious payloads as part of persistence.&lt;br /&gt;['T1574.012']: For detecting system and user scope abuse of the COR_PROFILER variable, monitor the Registry for changes to COR_ENABLE_PROFILING, COR_PROFILER, and COR_PROFILER_PATH that correspond to system and user environment variables that do not correlate to known developer tools.&lt;br /&gt;['T1562.001']: Monitor for changes made to Windows Registry keys and/or values related to services and startup programs that correspond to security tools such as HKLM:\SOFTWARE\Policies\Microsoft\Windows Defender.&lt;br /&gt;['T1546.001']: Collect and analyze changes to Registry keys that associate file extensions to default applications for execution and correlate with unknown process launch activity or unusual file types for that process. User file association preferences are stored under &lt;code&gt; [HKEY_CURRENT_USER]\Software\Microsoft\Windows\CurrentVersion\Explorer\FileExts&lt;/code&gt; and override associations configured under &lt;code&gt;[HKEY_CLASSES_ROOT]&lt;/code&gt;. Changes to a user's preference will occur under this entry's subkeys.&lt;br /&gt;['T1546.009']: Monitor the AppCertDLLs Registry value for modifications that do not correlate with known software, patch cycles, etc.&lt;br /&gt;['T1546']: Monitor for changes made to windows registry keys and/or values that may establish persistence and/or elevate privileges using system mechanisms that trigger execution based on specific events.&lt;br /&gt;['T1137.002']: Monitor for changes made to the Office Test Registry key. Collect events related to Registry key modification for keys that could be used for Office-based persistence. Since v13.52, Autoruns can detect tasks set up using the Office Test Registry key.(Citation: Palo Alto Office Test Sofacy)&lt;br /&gt;['T1562.006']: To detect changes in ETW you can also monitor the registry key which contains configurations for all ETW event providers: &lt;code&gt;HKLM\SYSTEM\CurrentControlSet\Control\WMI\Autologger\AUTOLOGGER_NAME\{PROVIDER_GUID}&lt;/code&gt;&lt;br /&gt;['T1564']: Monitor for changes made to windows registry keys and/or values that may attempt to hide artifacts associated with their behaviors to evade detection.&lt;br /&gt;['T1505.005']: Monitor for changes to Registry keys associated with &lt;code&gt;ServiceDll&lt;/code&gt; and other subkey values under &lt;code&gt;HKLM\System\CurrentControlSet\services\TermService\Parameters\&lt;/code&gt;.&lt;br /&gt;['T1546.010']: Monitor the AppInit_DLLs Registry values for modifications that do not correlate with known software, patch cycles, etc.&lt;br /&gt;['T1548']: There are many ways to perform UAC bypasses when a user is in the local administrator group on a system, so it may be difficult to target detection on all variations. Efforts should likely be placed on mitigation and collecting enough information on process launches and actions that could be performed before and after a UAC bypass is performed. Some UAC bypass methods rely on modifying specific, user-accessible Registry settings. Analysts should monitor Registry settings for unauthorized changes.&lt;br /&gt;['T1547.005']: Monitor the Registry for changes to the SSP Registry keys. Windows 8.1 and Windows Server 2012 R2 may generate events when unsigned SSP DLLs try to load into the LSA by setting the Registry key &lt;code&gt;HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\LSASS.exe&lt;/code&gt; with AuditLevel = 8. (Citation: Graeber 2014) (Citation: Microsoft Configure LSA)&lt;br /&gt;['T1547.003']: Monitor for changes made to windows registry keys and/or values modifying W32Time information in the Registry.&lt;br /&gt;['T1546.008']: Monitor Registry keys within &lt;code&gt;HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options&lt;/code&gt;.&lt;br /&gt;['T1546.002']: Monitor changes to screensaver configuration changes in the Registry that may not correlate with typical user behavior. Tools such as Sysinternals Autoruns can be used to detect changes to the screensaver binary path in the Registry.&lt;br /&gt;['T1111']: Monitor for changes to windows registry keys or values that may target multi-factor authentication mechanisms, such as smart cards, to gain access to credentials that can be used to access systems, services, and network resources.&lt;br /&gt;['T1546.015']: There are opportunities to detect COM hijacking by searching for Registry references that have been replaced and through Registry operations (ex: [Reg](https://attack.mitre.org/software/S0075)) replacing known binary paths with unknown paths or otherwise malicious content. Even though some third-party applications define user COM objects, the presence of objects within HKEY_CURRENT_USER\Software\Classes\CLSID\ may be anomalous and should be investigated since user objects will be loaded prior to machine objects in HKEY_LOCAL_MACHINE\SOFTWARE\Classes\CLSID\.(Citation: Elastic COM Hijacking) Registry entries for existing COM objects may change infrequently. When an entry with a known good path and binary is replaced or changed to an unusual value to point to an unknown binary in a new location, then it may indicate suspicious behavior and should be investigated.&lt;br /&gt;['T1547.001']: Monitor Registry for changes to run keys that do not correlate with known software, patch cycles, etc. Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing the run keys' Registry locations. (Citation: TechNet Autoruns)&lt;br /&gt;['T1547.004']: Monitor for changes to Registry entries associated with Winlogon that do not correlate with known software, patch cycles, etc. Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing current Winlogon helper values. (Citation: TechNet Autoruns)&lt;br /&gt;['T1562']: Monitor Registry edits for modifications to services and startup programs that correspond to security tools.&lt;br /&gt;['T1070']: Monitor for changes made to windows registry keys or values that may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined malware.&lt;br /&gt;['T1553']: Monitoring changes to the Windows Registry may reveal malicious attempts to modify trust settings, such as the installation of root certificates. Installed root certificates are located in the Registry under &lt;code&gt;HKLM\SOFTWARE\Microsoft\EnterpriseCertificates\Root\Certificates\&lt;/code&gt; and &lt;/code&gt;[HKLM or HKCU]\Software[\Policies\]\Microsoft\SystemCertificates\Root\Certificates\&lt;/code&gt;. There are a subset of root certificates that are consistent across Windows systems and can be used for comparison: (Citation: Tripwire AppUNBlocker) Also consider enabling the Registry Global Object Access Auditing (Citation: Microsoft Registry Auditing Aug 2016) setting in the Advanced Security Audit policy to apply a global system access control list (SACL) and event auditing on modifications to Registry values (sub)keys related to SIPs and trust providers:(Citation: Microsoft Audit Registry July 2012) &lt;br /&gt;['T1552']: Monitor for unexpected windows registry key being accessed that may search compromised systems to find and obtain insecurely stored credentials.&lt;br /&gt;['T1003.002']: Monitor for the SAM registry key dump being created to access stored account password hashes. Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromised https://attack.mitre.org/techniques/T1078 in-use by adversaries may help as well.&lt;br /&gt;['T1012']: Monitor for unexpected process interactions with the Windows Registry (i.e. reads) that may be related to gathering information.&lt;br /&gt;['T1003']: Monitor for the SAM registry key being accessed that may attempt to dump credentials to obtain account login and credential material, normally in the form of a hash or a clear text password, from the operating system and software.&lt;br /&gt;['T1003.004']: Monitor for the LSA secrets are stored in the registry at &lt;code&gt;HKEY_LOCAL_MACHINE\SECURITY\Policy\Secrets&lt;/code&gt; being accessed&lt;br /&gt;['T1614.001']: Monitor for access to windows registry keys that may attempt to gather information about the system language of a victim in order to infer the geographical location of that host.&lt;br /&gt;['T1552.002']: Monitor for unexpected windows registry key being accessed that may search the Registry on compromised systems for insecurely stored credentials.&lt;br /&gt;['T1112']: Monitor for unexpected deletion of windows registry keys to hide configuration information, remove information as part of cleaning up, or as part of other techniques to aid in persistence and execution. &lt;br /&gt;['T1562']: Monitor for unexpected deletion of windows registry keys that that may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms.&lt;br /&gt;['T1562.001']: Monitor for deletion of Windows Registry keys and/or values related to services and startup programs that correspond to security tools such as HKLM:\SOFTWARE\Microsoft\AMSI\Providers.&lt;br /&gt;['T1070']: Monitor windows registry keys that may be deleted or alter generated artifacts on a host system, including logs or captured files such as quarantined malware.&lt;br /&gt;['T1562.009']: Monitor Registry creation for services that may start on safe mode. For example, a program can be forced to start on safe mode boot by adding a &lt;code&gt;\*&lt;/code&gt; in front of the "Startup" value name: &lt;code&gt;HKLM\Software\Microsoft\Windows\CurrentVersion\Run\["\*Startup"="{Path}"]&lt;/code&gt; or by adding a key to &lt;code&gt;HKLM\SYSTEM\CurrentControlSet\Control\SafeBoot\Minimal&lt;/code&gt;.(Citation: BleepingComputer REvil 2021)(Citation: Sophos Snatch Ransomware 2019)&lt;br /&gt;['T1037']: Monitor for newly constructed windows registry keys that may use scripts automatically executed at boot or logon initialization to establish persistence.&lt;br /&gt;['T1137.002']: Monitor for the creation of the Office Test Registry key. Collect events related to Registry key creation for keys that could be used for Office-based persistence. Since v13.52, Autoruns can detect tasks set up using the Office Test Registry key.(Citation: Palo Alto Office Test Sofacy)&lt;br /&gt;['T1547.014']: Monitor Registry key additions to &lt;code&gt;HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Active Setup\Installed Components\&lt;/code&gt;.
Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing the Active Setup Registry locations and startup folders.(Citation: TechNet Autoruns) Suspicious program execution as startup programs may show up as outlier processes that have not been seen before when compared against historical data.&lt;br /&gt;['T1553']: Monitoring the creation of (sub)keys within the Windows Registry may reveal malicious attempts to modify trust settings, such as the installation of root certificates. Installed root certificates are located in the Registry under &lt;code&gt;HKLM\SOFTWARE\Microsoft\EnterpriseCertificates\Root\Certificates\&lt;/code&gt; and &lt;/code&gt;[HKLM or HKCU]\Software[\Policies\]\Microsoft\SystemCertificates\Root\Certificates\&lt;/code&gt;. There are a subset of root certificates that are consistent across Windows systems and can be used for comparison: (Citation: Tripwire AppUNBlocker)
* 18F7C1FCC3090203FD5BAA2F861A754976C8DD25
* 245C97DF7514E7CF2DF8BE72AE957B9E04741E85
* 3B1EFD3A66EA28B16697394703A72CA340A05BD5
* 7F88CD7223F3C813818C994614A89C99FA3B5247
* 8F43288AD272F3103B6FB1428485EA3014C0BCFE
* A43489159A520F0D93D032CCAF37E7FE20A8B419
* BE36A4562FB2EE05DBB3D32323ADF445084ED656
* CDD4EEAE6000AC7F40C3802C171E30148030C072&lt;br /&gt;['T1553.004']: Monitoring the creation of (sub)keys within the Windows Registry may reveal malicious root certificate installation. Installed root certificates are located in the Registry under &lt;code&gt;HKLM\SOFTWARE\Microsoft\EnterpriseCertificates\Root\Certificates\&lt;/code&gt; and &lt;/code&gt;[HKLM or HKCU]\Software[\Policies\]\Microsoft\SystemCertificates\Root\Certificates\&lt;/code&gt;. There are a subset of root certificates that are consistent across Windows systems and can be used for comparison: (Citation: Tripwire AppUNBlocker)
* 18F7C1FCC3090203FD5BAA2F861A754976C8DD25
* 245C97DF7514E7CF2DF8BE72AE957B9E04741E85
* 3B1EFD3A66EA28B16697394703A72CA340A05BD5
* 7F88CD7223F3C813818C994614A89C99FA3B5247
* 8F43288AD272F3103B6FB1428485EA3014C0BCFE
* A43489159A520F0D93D032CCAF37E7FE20A8B419
* BE36A4562FB2EE05DBB3D32323ADF445084ED656
* CDD4EEAE6000AC7F40C3802C171E30148030C072&lt;br /&gt;['T1547']: Monitor for additions of mechanisms that could be used to trigger autostart execution, such as relevant additions to the Registry.&lt;br /&gt;['T1112']: Monitor for newly constructed registry keys or values to aid in persistence and execution. &lt;br /&gt;['T1543.003']: Monitor for new constructed windows registry keys that may create or modify Windows services to repeatedly execute malicious payloads as part of persistence.&lt;br /&gt;['T1176']: Monitor for any new items written to the Registry or PE files written to disk. That may correlate with browser extension installation.&lt;br /&gt;['T1543']: Monitor for newly constructed windows registry keys that may create or modify system-level processes to repeatedly execute malicious payloads as part of persistence.&lt;br /&gt;['T1562.002']: Monitor the addition of the MiniNT registry key in HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control, which may disable Event Viewer.(Citation: def_ev_win_event_logging)&lt;br /&gt;['T1547.001']: Monitor for newly created windows registry keys that may achieve persistence by adding a program to a startup folder or referencing it with a Registry run key.&lt;br /&gt;['T1137.001']: Collect events related to Registry key creation for keys that could be used for Office-based persistence.(Citation: CrowdStrike Outlook Forms)(Citation: Outlook Today Home Page)&lt;br /&gt;['T1037.001']: Monitor for the creation/modification to Registry keys associated with Windows logon scrips, nameley &lt;code&gt;HKCU\Environment\UserInitMprLogonScript&lt;/code&gt;.&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Microsoft Registry" url="https://docs.microsoft.com/en-us/windows/win32/sysinfo/registry"/>
            <reference name="Mitre ATT&amp;CK Data Source DS0024" url="https://attack.mitre.org/datasources/DS0024"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:01.335">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="hide-artifacts" name="Hide Artifacts" desc="" library="">
          <threats>
            <threat ref="T-T1564.008" name="Email Hiding Rules" state="Expose" source="MANUAL" edited="false" owner="JamesRabe" library="" editable="true">
              <desc>Adversaries may use email rules to hide inbound emails in a compromised user's mailbox. Many email clients allow users to create inbox rules for various email functions, including moving emails to other folders, marking emails as read, or deleting emails. Rules may be created or modified within email clients or through external features such as the &lt;code&gt;New-InboxRule&lt;/code&gt; or &lt;code&gt;Set-InboxRule&lt;/code&gt; [PowerShell](https://attack.mitre.org/techniques/T1059/001) cmdlets on Windows systems.(Citation: Microsoft Inbox Rules)(Citation: MacOS Email Rules)(Citation: Microsoft New-InboxRule)(Citation: Microsoft Set-InboxRule)&lt;br&gt;&lt;br&gt;Adversaries may utilize email rules within a compromised user's mailbox to delete and/or move emails to less noticeable folders. Adversaries may do this to hide security alerts, C2 communication, or responses to [Internal Spearphishing](https://attack.mitre.org/techniques/T1534) emails sent from the compromised account.&lt;br&gt;&lt;br&gt;Any user or administrator within the organization (or adversary with valid credentials) may be able to create rules to automatically move or delete emails. These rules can be abused to impair/delay detection had the email content been immediately seen by a user or defender. Malicious rules commonly filter out emails based on key words (such as &lt;code&gt;malware&lt;/code&gt;, &lt;code&gt;suspicious&lt;/code&gt;, &lt;code&gt;phish&lt;/code&gt;, and &lt;code&gt;hack&lt;/code&gt;) found in message bodies and subject lines. (Citation: Microsoft Cloud App Security)&lt;br&gt;&lt;br&gt;Monitor email clients and applications for suspicious activity, such as missing messages or abnormal configuration and/or log entries.&lt;br&gt;&lt;br&gt;On Windows systems, monitor for creation of suspicious inbox rules through the use of the &lt;code&gt;New-InboxRule&lt;/code&gt; and &lt;code&gt;Set-InboxRule&lt;/code&gt; PowerShell cmdlets.(Citation: Microsoft BEC Campaign) On MacOS systems, monitor for modifications to the &lt;code&gt;RulesActiveState.plist&lt;/code&gt;, &lt;code&gt;SyncedRules.plist&lt;/code&gt;, &lt;code&gt;UnsyncedRules.plist&lt;/code&gt;, and &lt;code&gt;MessageRules.plist&lt;/code&gt; files.(Citation: MacOS Email Rules)</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references>
                <reference name="MacOS Email Rules" url="https://support.apple.com/guide/mail/use-rules-to-manage-emails-you-receive-mlhlp1017/mac"/>
                <reference name="Microsoft BEC Campaign" url="https://www.microsoft.com/security/blog/2021/06/14/behind-the-scenes-of-business-email-compromise-using-cross-domain-threat-data-to-disrupt-a-large-bec-infrastructure/"/>
                <reference name="Microsoft Cloud App Security" url="https://techcommunity.microsoft.com/t5/security-compliance-and-identity/rule-your-inbox-with-microsoft-cloud-app-security/ba-p/299154"/>
                <reference name="Microsoft Inbox Rules" url="https://support.microsoft.com/en-us/office/manage-email-messages-by-using-rules-c24f5dea-9465-4df4-ad17-a50704d66c59"/>
                <reference name="Microsoft New-InboxRule" url="https://docs.microsoft.com/en-us/powershell/module/exchange/new-inboxrule?view=exchange-ps"/>
                <reference name="Microsoft Set-InboxRule" url="https://docs.microsoft.com/en-us/powershell/module/exchange/set-inboxrule?view=exchange-ps"/>
                <reference name="Mitre ATT&amp;CK Technique T1564.008" url="https://attack.mitre.org/techniques/T1564/008"/>
              </references>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-DS0001" mitigation="10"/>
                <countermeasure ref="C-DS0002" mitigation="10"/>
                <countermeasure ref="C-DS0009" mitigation="10"/>
                <countermeasure ref="C-DS0012" mitigation="10"/>
                <countermeasure ref="C-DS0015" mitigation="10"/>
                <countermeasure ref="C-DS0017" mitigation="10"/>
                <countermeasure ref="C-DS0019" mitigation="10"/>
                <countermeasure ref="C-DS0022" mitigation="10"/>
                <countermeasure ref="C-DS0024" mitigation="10"/>
                <countermeasure ref="C-M1047" mitigation="10"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="user-alternate-authentication-token" name="User Alternate Authentication Token" desc="" library="">
          <threats>
            <threat ref="T-T1550.001" name="Application Access Token" state="Expose" source="MANUAL" edited="false" owner="JamesRabe" library="" editable="true">
              <desc>Adversaries may use stolen application access tokens to bypass the typical authentication process and access restricted accounts, information, or services on remote systems. These tokens are typically stolen from users or services and used in lieu of login credentials.&lt;br&gt;&lt;br&gt;Application access tokens are used to make authorized API requests on behalf of a user or service and are commonly used as a way to access resources in cloud and container-based applications and software-as-a-service (SaaS).(Citation: Auth0 - Why You Should Always Use Access Tokens to Secure APIs Sept 2019) &lt;br&gt;&lt;br&gt;In AWS and GCP environments, adversaries can trigger a request for a short-lived access token with the privileges of another user account.(Citation: Google Cloud Service Account Credentials)(Citation: AWS Temporary Security Credentials) The adversary can then use this token to request data or perform actions the original account could not. If permissions for this feature are misconfigured - for example, by allowing all users to request a token for a particular account - an adversary may be able to gain initial access to a Cloud Account or escalate their privileges.(Citation: Rhino Security Labs Enumerating AWS Roles)&lt;br&gt;&lt;br&gt;OAuth is one commonly implemented framework that issues tokens to users for access to systems. These frameworks are used collaboratively to verify the user and determine what actions the user is allowed to perform. Once identity is established, the token allows actions to be authorized, without passing the actual credentials of the user. Therefore, compromise of the token can grant the adversary access to resources of other sites through a malicious application.(Citation: okta)&lt;br&gt;&lt;br&gt;For example, with a cloud-based email service once an OAuth access token is granted to a malicious application, it can potentially gain long-term access to features of the user account if a "refresh" token enabling background access is awarded.(Citation: Microsoft Identity Platform Access 2019) With an OAuth access token an adversary can use the user-granted REST API to perform functions such as email searching and contact enumeration.(Citation: Staaldraad Phishing with OAuth 2017)&lt;br&gt;&lt;br&gt;Compromised access tokens may be used as an initial step in compromising other services. For example, if a token grants access to a victim's primary email, the adversary may be able to extend access to all other services which the target subscribes by triggering forgotten password routines. Direct API access through a token negates the effectiveness of a second authentication factor and may be immune to intuitive countermeasures like changing passwords. Access abuse over an API channel can be difficult to detect even from the service provider end, as the access can still align well with a legitimate workflow.&lt;br&gt;&lt;br&gt;Monitor access token activity for abnormal use and permissions granted to unusual or suspicious applications and APIs. Additionally, administrators should review logs for calls to the AWS Security Token Service (STS) and usage of GCP service accounts in order to identify anomalous actions.(Citation: AWS Logging IAM Calls)(Citation: GCP Monitoring Service Account Usage)</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references>
                <reference name="AWS Logging IAM Calls" url="https://docs.aws.amazon.com/IAM/latest/UserGuide/cloudtrail-integration.html"/>
                <reference name="AWS Temporary Security Credentials" url="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html"/>
                <reference name="Auth0 - Why You Should Always Use Access Tokens to Secure APIs Sept 2019" url="https://auth0.com/blog/why-should-use-accesstokens-to-secure-an-api/"/>
                <reference name="CAPEC-593" url="https://capec.mitre.org/data/definitions/593.html"/>
                <reference name="GCP Monitoring Service Account Usage" url="https://cloud.google.com/iam/docs/service-account-monitoring"/>
                <reference name="Google Cloud Service Account Credentials" url="https://cloud.google.com/iam/docs/creating-short-lived-service-account-credentials"/>
                <reference name="Microsoft Identity Platform Access 2019" url="https://docs.microsoft.com/en-us/azure/active-directory/develop/access-tokens"/>
                <reference name="Mitre ATT&amp;CK Technique T1550.001" url="https://attack.mitre.org/techniques/T1550/001"/>
                <reference name="Rhino Security Labs Enumerating AWS Roles" url="https://rhinosecuritylabs.com/aws/assume-worst-aws-assume-role-enumeration"/>
                <reference name="Staaldraad Phishing with OAuth 2017" url="https://staaldraad.github.io/2017/08/02/o356-phishing-with-oauth/"/>
                <reference name="okta" url="https://developer.okta.com/blog/2018/06/20/what-happens-if-your-jwt-is-stolen"/>
              </references>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-DS0002" mitigation="16"/>
                <countermeasure ref="C-DS0006" mitigation="12"/>
                <countermeasure ref="C-DS0015" mitigation="12"/>
                <countermeasure ref="C-DS0026" mitigation="12"/>
                <countermeasure ref="C-DS0028" mitigation="12"/>
                <countermeasure ref="C-M1021" mitigation="12"/>
                <countermeasure ref="C-M1041" mitigation="12"/>
                <countermeasure ref="C-M1047" mitigation="12"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="T-T1550.004" name="Web Session Cookie" state="Expose" source="MANUAL" edited="false" owner="JamesRabe" library="" editable="true">
              <desc>Adversaries can use stolen session cookies to authenticate to web applications and services. This technique bypasses some multi-factor authentication protocols since the session is already authenticated.(Citation: Pass The Cookie)&lt;br&gt;&lt;br&gt;Authentication cookies are commonly used in web applications, including cloud-based services, after a user has authenticated to the service so credentials are not passed and re-authentication does not need to occur as frequently. Cookies are often valid for an extended period of time, even if the web application is not actively used. After the cookie is obtained through [Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539) or [Web Cookies](https://attack.mitre.org/techniques/T1606/001), the adversary may then import the cookie into a browser they control and is then able to use the site or application as the user for as long as the session cookie is active. Once logged into the site, an adversary can access sensitive information, read email, or perform actions that the victim account has permissions to perform.&lt;br&gt;&lt;br&gt;There have been examples of malware targeting session cookies to bypass multi-factor authentication systems.(Citation: Unit 42 Mac Crypto Cookies January 2019)&lt;br&gt;&lt;br&gt;Monitor for anomalous access of websites and cloud-based applications by the same user in different locations or by different systems that do not match expected configurations.</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references>
                <reference name="CAPEC-60" url="https://capec.mitre.org/data/definitions/60.html"/>
                <reference name="Mitre ATT&amp;CK Technique T1550.004" url="https://attack.mitre.org/techniques/T1550/004"/>
                <reference name="Pass The Cookie" url="https://wunderwuzzi23.github.io/blog/passthecookie.html"/>
                <reference name="Unit 42 Mac Crypto Cookies January 2019" url="https://unit42.paloaltonetworks.com/mac-malware-steals-cryptocurrency-exchanges-cookies/"/>
              </references>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-DS0002" mitigation="20"/>
                <countermeasure ref="C-DS0006" mitigation="16"/>
                <countermeasure ref="C-DS0015" mitigation="16"/>
                <countermeasure ref="C-DS0026" mitigation="16"/>
                <countermeasure ref="C-DS0028" mitigation="16"/>
                <countermeasure ref="C-M1054" mitigation="16"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="valid-accounts" name="Valid Accounts" desc="" library="">
          <threats>
            <threat ref="T-T1078.004" name="Cloud Accounts" state="Expose" source="MANUAL" edited="false" owner="JamesRabe" library="" editable="true">
              <desc>Adversaries may obtain and abuse credentials of a cloud account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Cloud accounts are those created and configured by an organization for use by users, remote support, services, or for administration of resources within a cloud service provider or SaaS application. In some cases, cloud accounts may be federated with traditional identity management system, such as Window Active Directory.(Citation: AWS Identity Federation)(Citation: Google Federating GC)(Citation: Microsoft Deploying AD Federation)&lt;br&gt;&lt;br&gt;Compromised credentials for cloud accounts can be used to harvest sensitive data from online storage accounts and databases. Access to cloud accounts can also be abused to gain Initial Access to a network by abusing a [Trusted Relationship](https://attack.mitre.org/techniques/T1199). Similar to [Domain Accounts](https://attack.mitre.org/techniques/T1078/002), compromise of federated cloud accounts may allow adversaries to more easily move laterally within an environment.&lt;br&gt;&lt;br&gt;Once a cloud account is compromised, an adversary may perform [Account Manipulation](https://attack.mitre.org/techniques/T1098) - for example, by adding [Additional Cloud Roles](https://attack.mitre.org/techniques/T1098/003) - to maintain persistence and potentially escalate their privileges.&lt;br&gt;&lt;br&gt;Monitor the activity of cloud accounts to detect abnormal or malicious behavior, such as accessing information outside of the normal function of the account or account usage at atypical hours.</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references>
                <reference name="AWS Identity Federation" url="https://aws.amazon.com/identity/federation/"/>
                <reference name="Google Federating GC" url="https://cloud.google.com/solutions/federating-gcp-with-active-directory-introduction"/>
                <reference name="Microsoft Deploying AD Federation" url="https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/deployment/how-to-connect-fed-azure-adfs"/>
                <reference name="Mitre ATT&amp;CK Technique T1078.004" url="https://attack.mitre.org/techniques/T1078/004"/>
              </references>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-DS0002" mitigation="16"/>
                <countermeasure ref="C-DS0028" mitigation="14"/>
                <countermeasure ref="C-M1017" mitigation="14"/>
                <countermeasure ref="C-M1018" mitigation="14"/>
                <countermeasure ref="C-M1026" mitigation="14"/>
                <countermeasure ref="C-M1027" mitigation="14"/>
                <countermeasure ref="C-M1032" mitigation="14"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="T-T1078.001" name="Default Accounts" state="Expose" source="MANUAL" edited="false" owner="JamesRabe" library="" editable="true">
              <desc>Adversaries may obtain and abuse credentials of a default account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Default accounts are those that are built-into an OS, such as the Guest or Administrator accounts on Windows systems. Default accounts also include default factory/provider set accounts on other types of systems, software, or devices, including the root user account in AWS and the default service account in Kubernetes.(Citation: Microsoft Local Accounts Feb 2019)(Citation: AWS Root User)(Citation: Threat Matrix for Kubernetes)&lt;br&gt;&lt;br&gt;Default accounts are not limited to client machines, rather also include accounts that are preset for equipment such as network devices and computer applications whether they are internal, open source, or commercial. Appliances that come preset with a username and password combination pose a serious threat to organizations that do not change it post installation, as they are easy targets for an adversary. Similarly, adversaries may also utilize publicly disclosed or stolen [Private Keys](https://attack.mitre.org/techniques/T1552/004) or credential materials to legitimately connect to remote environments via [Remote Services](https://attack.mitre.org/techniques/T1021).(Citation: Metasploit SSH Module)&lt;br&gt;&lt;br&gt;Monitor whether default accounts have been activated or logged into. These audits should also include checks on any appliances and applications for default credentials or SSH keys, and if any are discovered, they should be updated immediately.</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references>
                <reference name="AWS Root User" url="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_root-user.html"/>
                <reference name="CAPEC-70" url="https://capec.mitre.org/data/definitions/70.html"/>
                <reference name="Metasploit SSH Module" url="https://github.com/rapid7/metasploit-framework/tree/master/modules/exploits/linux/ssh"/>
                <reference name="Microsoft Local Accounts Feb 2019" url="https://docs.microsoft.com/en-us/windows/security/identity-protection/access-control/local-accounts"/>
                <reference name="Mitre ATT&amp;CK Technique T1078.001" url="https://attack.mitre.org/techniques/T1078/001"/>
                <reference name="Threat Matrix for Kubernetes" url="https://www.microsoft.com/security/blog/2020/04/02/attack-matrix-kubernetes/"/>
              </references>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-DS0002" mitigation="34"/>
                <countermeasure ref="C-DS0028" mitigation="33"/>
                <countermeasure ref="C-M1027" mitigation="33"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="0b9cc71e-592d-4416-b184-759bd75b5a69" diagramComponentId="05afa943-8535-49ed-ace1-e65ba240503f" ref="3a2b46eb-8b98-4fe3-82ee-97586b353916" name="Credential Access" desc="" library="" parentComponentRef="62a5a79a-5e2c-4f4b-bf4a-d48751103201" componentDefinitionRef="credential-access">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses/>
      <countermeasures>
        <countermeasure ref="C-M1036" name="Account Use Policies" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>Configure features related to account use like login attempt lockouts, specific login times, etc.&lt;br /&gt;&lt;p&gt;Detailed mitigations per technique:&lt;/p&gt;&lt;br /&gt;['T1110.004', 'T1110.001', 'T1110', 'T1110.003']: Set account lockout policies after a certain number of failed login attempts to prevent passwords from being guessed. Too strict a policy may create a denial of service condition and render environments un-usable, with all accounts used in the brute force being locked-out.&lt;br /&gt;['T1621']: Enable account restrictions to prevent login attempts, and the subsequent 2FA/MFA service requests, from being initiated from suspicious locations or when the source of the login attempts do not match the location of the 2FA/MFA smart device.&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Mitre ATT&amp;CK Mitigation M1036" url="https://attack.mitre.org/mitigations/M1036"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:01.816">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-M1015" name="Active Directory Configuration" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>Configure Active Directory to prevent use of certain techniques; use SID Filtering, etc.&lt;br /&gt;&lt;p&gt;Detailed mitigations per technique:&lt;/p&gt;&lt;br /&gt;['T1558', 'T1558.001']: For containing the impact of a previously generated golden ticket, reset the built-in KRBTGT account password twice, which will invalidate any existing golden tickets that have been created with the KRBTGT hash and other Kerberos tickets derived from it. For each domain, change the KRBTGT account password once, force replication, and then change the password a second time. Consider rotating the KRBTGT account password every 180 days.(Citation: STIG krbtgt reset)&lt;br /&gt;['T1072']: Ensure proper system and access isolation for critical network systems through use of group policy.&lt;br /&gt;['T1097']: For containing the impact of a previously generated golden ticket, reset the built-in KRBTGT account password twice, which will invalidate any existing golden tickets that have been created with the KRBTGT hash and other Kerberos tickets derived from it.(Citation: CERT-EU Golden Ticket Protection)&lt;br /&gt;['T1552', 'T1552.006', 'T1081']: Remove vulnerable Group Policy Preferences.(Citation: Microsoft MS14-025)&lt;br /&gt;['T1134.005']: Clean up SID-History attributes after legitimate account migration is complete.

Consider applying SID Filtering to interforest trusts, such as forest trusts and external trusts, to exclude SID-History from requests to access domain resources. SID Filtering ensures that any authentication requests over a trust only contain SIDs of security principals from the trusted domain (i.e preventing the trusted domain from claiming a user has membership in groups outside of the domain).

SID Filtering of forest trusts is enabled by default, but may have been disabled in some cases to allow a child domain to transitively access forest trusts. SID Filtering of external trusts is automatically enabled on all created external trusts using Server 2003 or later domain controllers. (Citation: Microsoft Trust Considerations Nov 2014) (Citation: Microsoft SID Filtering Quarantining Jan 2009) However note that SID Filtering is not automatically applied to legacy trusts or may have been deliberately disabled to allow inter-domain access to resources.

SID Filtering can be applied by: (Citation: Microsoft Netdom Trust Sept 2012)

* Disabling SIDHistory on forest trusts using the netdom tool (&lt;code&gt;netdom trust /domain: /EnableSIDHistory:no&lt;/code&gt; on the domain controller)

* Applying SID Filter Quarantining to external trusts using the netdom tool (&lt;code&gt;netdom trust &lt;TrustingDomainName&gt; /domain:&lt;TrustedDomainName&gt; /quarantine:yes&lt;/code&gt; on the domain controller)

* Applying SID Filtering to domain trusts within a single forest is not recommended as it is an unsupported configuration and can cause breaking changes. (Citation: Microsoft Netdom Trust Sept 2012) (Citation: AdSecurity Kerberos GT Aug 2015) If a domain within a forest is untrustworthy then it should not be a member of the forest. In this situation it is necessary to first split the trusted and untrusted domains into separate forests where SID Filtering can be applied to an interforest trust&lt;br /&gt;['T1606.002']: For containing the impact of a previously forged SAML token, rotate the token-signing AD FS certificate in rapid succession twice, which will invalidate any tokens generated using the previous certificate.(Citation: Mandiant Defend UNC2452 White Paper)&lt;br /&gt;['T1003.005']: Consider adding users to the "Protected Users" Active Directory security group. This can help limit the caching of users' plaintext credentials.(Citation: Microsoft Protected Users Security Group)&lt;br /&gt;['T1178']: Clean up SID-History attributes after legitimate account migration is complete.

Consider applying SID Filtering to interforest trusts, such as forest trusts and external trusts, to exclude SID-History from requests to access domain resources. SID Filtering ensures that any authentication requests over a trust only contain SIDs of security principals from the trusted domain (i.e preventing the trusted domain from claiming a user has membership in groups outside of the domain).

SID Filtering of forest trusts is enabled by default, but may have been disabled in some cases to allow a child domain to transitively access forest trusts. SID Filtering of external trusts is automatically enabled on all created external trusts using Server 2003 or later domain controllers. (Citation: Microsoft Trust Considerations Nov 2014) (Citation: Microsoft SID Filtering Quarantining Jan 2009) However note that SID Filtering is not automatically applied to legacy trusts or may have been deliberately disabled to allow inter-domain access to resources.

SID Filtering can be applied by: (Citation: Microsoft Netdom Trust Sept 2012)

* Disabling SIDHistory on forest trusts using the netdom tool (netdom trust /domain: /EnableSIDHistory:no on the domain controller)

* Applying SID Filter Quarantining to external trusts using the netdom tool (&lt;code&gt;netdom trust &lt;TrustingDomainName&gt; /domain:&lt;TrustedDomainName&gt; /quarantine:yes&lt;/code&gt; on the domain controller)

* Applying SID Filtering to domain trusts within a single forest is not recommended as it is an unsupported configuration and can cause breaking changes. (Citation: Microsoft Netdom Trust Sept 2012) (Citation: AdSecurity Kerberos GT Aug 2015) If a domain within a forest is untrustworthy then it should not be a member of the forest. In this situation it is necessary to first split the trusted and untrusted domains into separate forests where SID Filtering can be applied to an interforest trust&lt;br /&gt;['T1003.006']: Manage the access control list for "Replicating Directory Changes" and other permissions associated with domain controller replication.(Citation: ADSecurity Mimikatz DCSync)(Citation: Microsoft Replication ACL)&lt;br /&gt;['T1550.003']: To contain the impact of a previously generated golden ticket, reset the built-in KRBTGT account password twice, which will invalidate any existing golden tickets that have been created with the KRBTGT hash and other Kerberos tickets derived from it.(Citation: ADSecurity Kerberos and KRBTGT) For each domain, change the KRBTGT account password once, force replication, and then change the password a second time. Consider rotating the KRBTGT account password every 180 days.(Citation: STIG krbtgt reset)&lt;br /&gt;['T1003']: 
Manage the access control list for "Replicating Directory Changes" and other permissions associated with domain controller replication. (Citation: AdSecurity DCSync Sept 2015) (Citation: Microsoft Replication ACL) Consider adding users to the "Protected Users" Active Directory security group. This can help limit the caching of users' plaintext credentials.(Citation: Microsoft Protected Users Security Group)&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Mitre ATT&amp;CK Mitigation M1015" url="https://attack.mitre.org/mitigations/M1015"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:01.731">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-DS0015" name="Application Log" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>Events collected by third-party services such as mail servers, web applications, or other appliances (not by the native OS or platform)(Citation: Confluence Logs)&lt;br /&gt;&lt;p&gt;Detailed detections per technique:&lt;/p&gt;&lt;br /&gt;['T1189']: Firewalls and proxies can inspect URLs for potentially known-bad domains or parameters. They can also do reputation-based analytics on websites and their requested resources such as how old a domain is, who it's registered to, if it's on a known bad list, or how many other users have connected to it before.&lt;br /&gt;['T1499.002']: Monitor for third-party application logging, messaging, and/or other artifacts that may target the different network services provided by systems to conduct a DoS. In addition to network level detections, endpoint logging and instrumentation can be useful for detection. Attacks targeting web applications may generate logs in the web server, application server, and/or database server that can be used to identify the type of attack, possibly before the impact is felt. Externally monitor the availability of services that may be targeted by an Endpoint DoS.&lt;br /&gt;['T1557']: Monitor application logs for changes to settings and other events associated with network protocols and other services commonly abused for AiTM.(Citation: dhcp_serv_op_events)&lt;br /&gt;['T1137.003']:  Monitor for third-party application logging, messaging, and/or other artifacts that may abuse Microsoft Outlook forms to obtain persistence on a compromised system. SensePost, whose tool [Ruler](https://attack.mitre.org/software/S0358) can be used to carry out malicious rules, forms, and Home Page attacks, has released a tool to detect Ruler usage.(Citation: SensePost NotRuler)&lt;br /&gt;['T1505.003']: Monitor for third-party application logging, messaging, and/or other artifacts that may backdoor web servers with web shells to establish persistent access to systems. Log authentication attempts to the server and any unusual traffic patterns to or from the server and internal network. (Citation: US-CERT Alert TA15-314A Web Shells)&lt;br /&gt;['T1505']: Monitor for third-party application logging, messaging, and/or other artifacts that may abuse legitimate extensible development features of servers to establish persistent access to systems. Consider monitoring application logs for abnormal behavior that may indicate suspicious installation of application software components. Log authentication attempts to the server and any unusual traffic patterns to or from the server and internal network. (Citation: US-CERT Alert TA15-314A Web Shells)&lt;br /&gt;['T1550']: Monitor for third-party application logging, messaging, and/or other artifacts that may use alternate authentication material, such as password hashes, Kerberos tickets, and application access tokens, in order to move laterally within an environment and bypass normal system access controls.&lt;br /&gt;['T1069.003']: Monitor for events collected that may attempt to find cloud groups and permission settings. &lt;br /&gt;['T1491.002']: Monitor for third-party application logging, messaging, and/or other artifacts that may deface systems external to an organization in an attempt to deliver messaging, intimidate, or otherwise mislead an organization or users. &lt;br /&gt;['T1598']: Depending on the specific method of phishing, the detections can vary. Monitor for suspicious email activity, such as numerous accounts receiving messages from a single unusual/unknown sender. Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.(Citation: Microsoft Anti Spoofing)(Citation: ACSC Email Spoofing)
When it comes to following links, monitor for references to uncategorized or known-bad sites. URL inspection within email (including expanding shortened links) can also help detect links leading to known malicious sites.
Monitor social media traffic for suspicious activity, including messages requesting information as well as abnormal file or data transfers (especially those involving unknown, or otherwise suspicious accounts).&lt;br /&gt;['T1499']: Monitor for third-party application logging, messaging, and/or other artifacts that may perform Endpoint Denial of Service (DoS) attacks to degrade or block the availability of services to users. In addition to network level detections, endpoint logging and instrumentation can be useful for detection. Attacks targeting web applications may generate logs in the web server, application server, and/or database server that can be used to identify the type of attack, possibly before the impact is felt. Externally monitor the availability of services that may be targeted by an Endpoint DoS.&lt;br /&gt;['T1204.003']: Monitor for third-party application logging, messaging, and/or other artifacts that may rely on a user running a malicious image to facilitate execution.&lt;br /&gt;['T1598.001']: Monitor social media traffic for suspicious activity, including messages requesting information as well as abnormal file or data transfers (especially those involving unknown, or otherwise suspicious accounts).
Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.
Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.&lt;br /&gt;['T1564']: Monitor for third-party application logging, messaging, and/or other artifacts that may attempt to hide artifacts associated with their behaviors to evade detection. &lt;br /&gt;['T1499.004']: Monitor for third-party application logging, messaging, and/or other artifacts that may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Attacks targeting web applications may generate logs in the web server, application server, and/or database server that can be used to identify the type of attack. Externally monitor the availability of services that may be targeted by an Endpoint DoS.&lt;br /&gt;['T1211']: Exploitation for defense evasion may happen shortly after the system has been compromised to prevent detection during later actions for for additional tools that may be brought in and used. Detecting software exploitation may be difficult depending on the tools available. Software exploits may not always succeed or may cause the exploited process to become unstable or crash. &lt;br /&gt;['T1137']: Monitor for third-party application logging, messaging, and/or other artifacts that may leverage Microsoft Office-based applications for persistence between startups. SensePost, whose tool [Ruler](https://attack.mitre.org/software/S0358) can be used to carry out malicious rules, forms, and Home Page attacks, has released a tool to detect Ruler usage.(Citation: SensePost NotRuler)&lt;br /&gt;['T1566.001']: Monitor for third-party application logging, messaging, and/or other artifacts that may send spearphishing emails with a malicious attachment in an attempt to gain access to victim systems. Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.(Citation: Microsoft Anti Spoofing)(Citation: ACSC Email Spoofing) Anti-virus can potentially detect malicious documents and attachments as they're scanned to be stored on the email server or on the user's computer. Monitor for suspicious descendant process spawning from Microsoft Office and other productivity software.(Citation: Elastic - Koadiac Detection with EQL)&lt;br /&gt;['T1566.002']: Monitor for third-party application logging, messaging, and/or other artifacts that may send spearphishing emails with a malicious link in an attempt to gain access to victim systems. Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.(Citation: Microsoft Anti Spoofing)(Citation: ACSC Email Spoofing) URL inspection within email (including expanding shortened links) can help detect links leading to known malicious sites. Detonation chambers can be used to detect these links and either automatically go to these sites to determine if they're potentially malicious, or wait and capture the content if a user visits the link.&lt;br /&gt;['T1598.003']: Monitor for suspicious email activity, such as numerous accounts receiving messages from a single unusual/unknown sender. Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.(Citation: Microsoft Anti Spoofing)(Citation: ACSC Email Spoofing)
Monitor for references to uncategorized or known-bad sites. URL inspection within email (including expanding shortened links) can also help detect links leading to known malicious sites.&lt;br /&gt;['T1610']: Configuration management databases (CMDB) and other asset management systems may help with the detection of computer systems or network devices that should not exist on a network.&lt;br /&gt;['T1114']: Detection is challenging because all messages forwarded because of an auto-forwarding rule have the same presentation as a manually forwarded message. It is also possible for the user to not be aware of the addition of such an auto-forwarding rule and not suspect that their account has been compromised; email-forwarding rules alone will not affect the normal usage patterns or operations of the email account. Auto-forwarded messages generally contain specific detectable artifacts that may be present in the header; such artifacts would be platform-specific. Examples include &lt;code&gt;X-MS-Exchange-Organization-AutoForwarded&lt;/code&gt; set to true, &lt;code&gt;X-MailFwdBy&lt;/code&gt; and &lt;code&gt;X-Forwarded-To&lt;/code&gt;. The &lt;code&gt;forwardingSMTPAddress&lt;/code&gt; parameter used in a forwarding process that is managed by administrators and not by user actions. All messages for the mailbox are forwarded to the specified SMTP address. However, unlike typical client-side rules, the message does not appear as forwarded in the mailbox; it appears as if it were sent directly to the specified destination mailbox.(Citation: Microsoft Tim McMichael Exchange Mail Forwarding 2) High volumes of emails that bear the &lt;code&gt;X-MS-Exchange-Organization-AutoForwarded&lt;/code&gt; header (indicating auto-forwarding) without a corresponding number of emails that match the appearance of a forwarded message may indicate that further investigation is needed at the administrator level rather than user-level.&lt;br /&gt;['T1534']: Monitor email gateways usually do not scan internal email, but an organization can leverage the journaling-based solution which sends a copy of emails to a security service for offline analysis or incorporate service-integrated solutions using on-premise or API-based integrations to help detect internal spearphishing attacks.(Citation: Trend Micro When Phishing Starts from the Inside 2017)&lt;br /&gt;['T1594']: Monitor for suspicious network traffic that could be indicative of adversary reconnaissance, such as rapid successions of requests indicative of web crawling and/or large quantities of requests originating from a single source (especially if the source is known to be associated with an adversary). Analyzing web metadata may also reveal artifacts that can be attributed to potentially malicious activity, such as referer or user-agent string HTTP/S fields.&lt;br /&gt;['T1137.005']: Monitor for third-party application logging, messaging, and/or other artifacts that may abuse Microsoft Outlook rules to obtain persistence on a compromised system. SensePost, whose tool [Ruler](https://attack.mitre.org/software/S0358) can be used to carry out malicious rules, forms, and Home Page attacks, has released a tool to detect Ruler usage.(Citation: SensePost NotRuler)&lt;br /&gt;['T1213.002']: Monitor for third-party application logging, messaging, and/or other artifacts that may leverage the SharePoint repository as a source to mine valuable information. Monitor access to Microsoft SharePoint repositories performed by privileged users (for example, Active Directory Domain, Enterprise, or Schema Administrators) should be closely monitored and alerted upon, as these types of accounts should generally not be used to access information repositories. If the capability exists, it may be of value to monitor and alert on users that are retrieving and viewing a large number of documents and pages; this behavior may be indicative of programmatic means being used to retrieve all data within the repository. In environments with high-maturity, it may be possible to leverage User-Behavioral Analytics (UBA) platforms to detect and alert on user based anomalies.&lt;br /&gt;['T1110.004']: Monitor authentication logs for system and application login failures of [Valid Accounts](https://attack.mitre.org/techniques/T1078). If authentication failures are high, then there may be a brute force attempt to gain access to a system using legitimate credentials.&lt;br /&gt;['T1491.001']: Monitor for third-party application logging, messaging, and/or other artifacts that may deface systems internal to an organization in an attempt to intimidate or mislead users. &lt;br /&gt;['T1114.003']: Detection is challenging because all messages forwarded because of an auto-forwarding rule have the same presentation as a manually forwarded message. It is also possible for the user to not be aware of the addition of such an auto-forwarding rule and not suspect that their account has been compromised; email-forwarding rules alone will not affect the normal usage patterns or operations of the email account. This is especially true in cases with hidden auto-forwarding rules. This makes it only possible to reliably detect the existence of a hidden auto-forwarding rule by examining message tracking logs or by using a MAPI editor to notice the modified rule property values.(Citation: Pfammatter - Hidden Inbox Rules)
Auto-forwarded messages generally contain specific detectable artifacts that may be present in the header; such artifacts would be platform-specific. Examples include X-MS-Exchange-Organization-AutoForwarded set to true, X-MailFwdBy and X-Forwarded-To. The forwardingSMTPAddress parameter used in a forwarding process that is managed by administrators and not by user actions. All messages for the mailbox are forwarded to the specified SMTP address. However, unlike typical client-side rules, the message does not appear as forwarded in the mailbox; it appears as if it were sent directly to the specified destination mailbox.(Citation: Microsoft Tim McMichael Exchange Mail Forwarding 2) High volumes of emails that bear the X-MS-Exchange-Organization-AutoForwarded header (indicating auto-forwarding) without a corresponding number of emails that match the appearance of a forwarded message may indicate that further investigation is needed at the administrator level rather than user-level.&lt;br /&gt;['T1137.004']: Monitor for third-party application logging, messaging, and/or other artifacts that may abuse Microsoft Outlook's Home Page feature to obtain persistence on a compromised system. SensePost, whose tool [Ruler](https://attack.mitre.org/software/S0358) can be used to carry out malicious rules, forms, and Home Page attacks, has released a tool to detect Ruler usage.(Citation: SensePost NotRuler)&lt;br /&gt;['T1622']: Monitor debugger logs for signs of abnormal and potentially malicious activity.&lt;br /&gt;['T1069']: Monitor for logging, messaging, and other artifacts provided by cloud services.&lt;br /&gt;['T1499.003']: Monitor for third-party application logging, messaging, and/or other artifacts that may target resource intensive features of web applications to cause a denial of service (DoS). In addition to network level detections, endpoint logging and instrumentation can be useful for detection. Attacks targeting web applications may generate logs in the web server, application server, and/or database server that can be used to identify the type of attack, possibly before the impact is felt. Externally monitor the availability of services that may be targeted by an Endpoint DoS.&lt;br /&gt;['T1491']: Monitor for third-party application logging, messaging, and/or other artifacts that may modify visual content available internally or externally to an enterprise network. &lt;br /&gt;['T1213.003']: Monitor for third-party application logging, messaging, and/or other artifacts that may leverage code repositories to collect valuable information. Monitor access to code repositories, especially performed by privileged users such as Active Directory Domain or Enterprise Administrators as these types of accounts should generally not be used to access code repositories. In environments with high-maturity, it may be possible to leverage User-Behavioral Analytics (UBA) platforms to detect and alert on user-based anomalies.&lt;br /&gt;['T1621']: Monitor application logs for suspicious events including repeated MFA failures that may indicate user's primary credentials have been compromised.&lt;br /&gt;['T1072']: Often these third-party applications will have logs of their own that can be collected and correlated with other data from the environment. Ensure that third-party application logs are on-boarded to the enterprise logging system and the logs are regularly reviewed. Audit software deployment logs and look for suspicious or unauthorized activity. A system not typically used to push software to clients that suddenly is used for such a task outside of a known admin function may be suspicious. Monitor account login activity on these applications to detect suspicious/abnormal usage.
Perform application deployment at regular times so that irregular deployment activity stands out.&lt;br /&gt;['T1098.005']: 
Azure AD creates several log entries when new devices are enrolled, which can be monitored for unexpected device registrations.(Citation: AADInternals - BPRT) Additionally, joined devices can be viewed via the Azure AD portal.(Citation: Microsoft Manage Device Identities)&lt;br /&gt;['T1110.002']: Monitor authentication logs for system and application login failures of [Valid Accounts](https://attack.mitre.org/techniques/T1078). It is difficult to detect when hashes are cracked, since this is generally done outside the scope of the target network. Consider focusing efforts on detecting other adversary behavior used to acquire credential materials, such as [OS Credential Dumping](https://attack.mitre.org/techniques/T1003) or [Kerberoasting](https://attack.mitre.org/techniques/T1558/003).&lt;br /&gt;['T1213']: Monitor for third-party application logging, messaging, and/or other artifacts that may leverage information repositories to mine valuable information. Information repositories generally have a considerably large user base, detection of malicious use can be non-trivial. At minimum, access to information repositories performed by privileged users (for example, Active Directory Domain, Enterprise, or Schema Administrators) should be closely monitored and alerted upon, as these types of accounts should generally not be used to access information repositories. If the capability exists, it may be of value to monitor and alert on users that are retrieving and viewing a large number of documents and pages; this behavior may be indicative of programmatic means being used to retrieve all data within the repository. In environments with high-maturity, it may be possible to leverage User-Behavioral Analytics (UBA) platforms to detect and alert on user based anomalies.&lt;br /&gt;['T1505.001']: Monitor for third-party application logging, messaging, and/or other artifacts that may abuse SQL stored procedures to establish persistent access to systems. On a MSSQL Server, consider monitoring for xp_cmdshell usage.(Citation: NetSPI Startup Stored Procedures) Consider enabling audit features that can log malicious startup activities.&lt;br /&gt;['T1203']: Detecting software exploitation may be difficult depending on the tools available. Software exploits may not always succeed or may cause the exploited process to become unstable or crash.&lt;br /&gt;['T1566']: Monitor for third-party application logging, messaging, and/or other artifacts that may send phishing messages to gain access to victim systems. Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.(Citation: Microsoft Anti Spoofing)(Citation: ACSC Email Spoofing) URL inspection within email (including expanding shortened links) can help detect links leading to known malicious sites. Detonation chambers can be used to detect these links and either automatically go to these sites to determine if they're potentially malicious, or wait and capture the content if a user visits the link.&lt;br /&gt;['T1110.003']: Monitor authentication logs for system and application login failures of [Valid Accounts](https://attack.mitre.org/techniques/T1078). Consider the following event IDs:(Citation: Trimarc Detecting Password Spraying)
Domain Controllers: "Audit Logon" (Success &amp; Failure) for event ID 4625.
Domain Controllers: "Audit Kerberos Authentication Service" (Success &amp; Failure) for event ID 4771.
All systems: "Audit Logon" (Success &amp; Failure) for event ID 4648.&lt;br /&gt;['T1098.002']: Enable the UpdateFolderPermissions action for all logon types. The mailbox audit log will forward folder permission modification events to the Unified Audit Log. Create rules to alert on ModifyFolderPermissions operations where the Anonymous or Default user is assigned permissions other than None.

A larger than normal volume of emails sent from an account and similar phishing emails sent from real accounts within a network may be a sign that an account was compromised and attempts to leverage access with modified email permissions is occurring.&lt;br /&gt;['T1598.002']: Monitor for suspicious email activity, such as numerous accounts receiving messages from a single unusual/unknown sender. Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.(Citation: Microsoft Anti Spoofing)(Citation: ACSC Email Spoofing)&lt;br /&gt;['T1566.003']: Monitor for third-party application logging, messaging, and/or other artifacts that may send spearphishing messages via third-party services in an attempt to gain access to victim systems. &lt;br /&gt;['T1550.004']: Monitor for third-party application logging, messaging, and/or other service artifacts that provide context of user authentication to web applications, including cloud-based services. Combine this information with web credentials usage events to identify authentication events that do not fit the organization baseline.&lt;br /&gt;['T1210']: Detecting software exploitation may be difficult depending on the tools available. Software exploits may not always succeed or may cause the exploited process to become unstable or crash. Web Application Firewalls may detect improper inputs attempting exploitation.&lt;br /&gt;['T1557.003']: Monitor Windows logs (ex: EIDs 1341, 1342, 1020, and 1063) for changes to DHCP settings. These may also highlight DHCP issues such as when IP allocations are low or have run out.(Citation: dhcp_serv_op_events)(Citation: solution_monitor_dhcp_scopes)&lt;br /&gt;['T1562.002']: Monitor for third-party application logging, messaging, and/or other artifacts provided by third-party services that may disable Windows event logging to limit data that can be leveraged for detections and audits.&lt;br /&gt;['T1564.008']: Monitor for third-party application logging, messaging, and/or other artifacts that may use email rules to hide inbound emails in a compromised user's mailbox. Monitor email clients and applications for suspicious activity, such as missing messages or abnormal configuration and/or log entries.&lt;br /&gt;['T1505.002']: Monitor for third-party application logging, messaging, and/or other artifacts that may abuse Microsoft transport agents to establish persistent access to systems. Consider monitoring application logs for abnormal behavior that may indicate suspicious installation of application software components.&lt;br /&gt;['T1213.001']: Monitor for third-party application logging, messaging, and/or other artifacts that may leverage Confluence repositories to mine valuable information. Watch for access to Confluence repositories performed by privileged users (for example, Active Directory Domain, Enterprise, or Schema Administrators) as these types of accounts should generally not be used to access information repositories. If the capability exists, it may be of value to monitor and alert on users that are retrieving and viewing a large number of documents and pages; this behavior may be indicative of programmatic means being used to retrieve all data within the repository. In environments with high-maturity, it may be possible to leverage User-Behavioral Analytics (UBA) platforms to detect and alert on user based anomalies.&lt;br /&gt;['T1204']: Monitor for third-party application logging, messaging, and/or other artifacts that may rely upon specific actions by a user in order to gain execution.&lt;br /&gt;['T1133']: When authentication is not required to access an exposed remote service, monitor for follow-on activities such as anomalous external use of the exposed API or application.&lt;br /&gt;['T1027.005']: The first detection of a malicious tool may trigger an anti-virus or other security tool alert. Similar events may also occur at the boundary through network IDS, email scanning appliance, etc. The initial detection should be treated as an indication of a potentially more invasive intrusion. The alerting system should be thoroughly investigated beyond that initial alert for activity that was not detected. Adversaries may continue with an operation, assuming that individual events like an anti-virus detect will not be investigated or that an analyst will not be able to conclusively link that event to other activity occurring on the network.&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Confluence Logs" url="https://confluence.atlassian.com/doc/working-with-confluence-logs-108364721.html"/>
            <reference name="Mitre ATT&amp;CK Data Source DS0015" url="https://attack.mitre.org/datasources/DS0015"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:01.668">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-M1047" name="Audit" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>Perform audits or scans of systems, permissions, insecure software, insecure configurations, etc. to identify potential weaknesses.&lt;br /&gt;&lt;p&gt;Detailed mitigations per technique:&lt;/p&gt;&lt;br /&gt;['T1484']: Identify and correct GPO permissions abuse opportunities (ex: GPO modification privileges) using auditing tools such as [BloodHound](https://attack.mitre.org/software/S0521) (version 1.5.1 and later)(Citation: GitHub Bloodhound).&lt;br /&gt;['T1059.006']: Inventory systems for unauthorized Python installations.&lt;br /&gt;['T1482']: Map the trusts within existing domains/forests and keep trust relationships to a minimum.&lt;br /&gt;['T1053.003']: Review changes to the &lt;code&gt;cron&lt;/code&gt; schedule. &lt;code&gt;cron&lt;/code&gt; execution can be reviewed within the &lt;code&gt;/var/log&lt;/code&gt; directory. To validate the location of the &lt;code&gt;cron&lt;/code&gt; log file, check the syslog config at &lt;code&gt;/etc/rsyslog.conf&lt;/code&gt; or &lt;code&gt;/etc/syslog.conf&lt;/code&gt; &lt;br /&gt;['T1574.005', 'T1574.010']: Use auditing tools capable of detecting file system permissions abuse opportunities on systems within an enterprise and correct them. Toolkits like the PowerSploit framework contain PowerUp modules that can be used to explore systems for service file system permissions weaknesses.(Citation: Powersploit)&lt;br /&gt;['T1076']: Audit the Remote Desktop Users group membership regularly. Remove unnecessary accounts and groups from Remote Desktop Users groups&lt;br /&gt;['T1505.005', 'T1505']: Regularly check component software on critical services that adversaries may target for persistence to verify the integrity of the systems and identify if unexpected changes have been made.&lt;br /&gt;['T1176']:  Ensure extensions that are installed are the intended ones as many malicious extensions will masquerade as legitimate ones.&lt;br /&gt;['T1484.001']: Identify and correct GPO permissions abuse opportunities (ex: GPO modification privileges) using auditing tools such as [BloodHound](https://attack.mitre.org/software/S0521) (version 1.5.1 and later).(Citation: GitHub Bloodhound)&lt;br /&gt;['T1505.001', 'T1505.002']: Regularly check component software on critical services that adversaries may target for persistence to verify the integrity of the systems and identify if unexpected changes have been made. &lt;br /&gt;['T1574.009', 'T1574.008', 'T1574.007']: Find and eliminate path interception weaknesses in program configuration files, scripts, the PATH environment variable, services, and in shortcuts by surrounding PATH variables with quotation marks when functions allow for them. Be aware of the search order Windows uses for executing or loading binaries and use fully qualified paths wherever appropriate.

Clean up old Windows Registry keys when software is uninstalled to avoid keys with no associated legitimate binaries. Periodically search for and correct or report path interception weaknesses on systems that may have been introduced using custom or available tools that report software using insecure path configurations.(Citation: Microsoft CreateProcess)(Citation: Microsoft Dynamic-Link Library Security)(Citation: Vulnerability and Exploit Detector)&lt;br /&gt;['T1044']: Use auditing tools capable of detecting file system permissions abuse opportunities on systems within an enterprise and correct them. Toolkits like the PowerSploit framework contain PowerUp modules that can be used to explore systems for service file system permissions weaknesses. (Citation: Powersploit)&lt;br /&gt;['T1021.001', 'T1563.002']: Audit the Remote Desktop Users group membership regularly. Remove unnecessary accounts and groups from Remote Desktop Users groups.&lt;br /&gt;['T1564.008']: Enterprise email solutions may have monitoring mechanisms that may include the ability to audit inbox rules on a regular basis. 

In an Exchange environment, Administrators can use &lt;code&gt;Get-InboxRule&lt;/code&gt; to discover and remove potentially malicious inbox rules.(Citation: Microsoft Get-InboxRule)&lt;br /&gt;['T1548.002', 'T1548']: Check for common UAC bypass weaknesses on Windows systems to be aware of the risk posture and address issues where appropriate.(Citation: Github UACMe)&lt;br /&gt;['T1558.004']: Kerberos preauthentication is enabled by default. Older protocols might not support preauthentication therefore it is possible to have this setting disabled. Make sure that all accounts have preauthentication whenever possible and audit changes to setting. Windows tools such as PowerShell may be used to easily find which accounts have preauthentication disabled.  (Citation: Microsoft Preauthentication Jul 2012)(Citation: Stealthbits Cracking AS-REP Roasting Jun 2019)&lt;br /&gt;['T1053.002']: Toolkits like the PowerSploit framework contain PowerUp modules that can be used to explore systems for permission weaknesses in scheduled tasks that could be used to escalate privileges. (Citation: Powersploit) Windows operating system also creates a registry key specifically associated with the creation of a scheduled task on the destination host at: Microsoft\Windows NT\CurrentVersion\Schedule\TaskCache\Tree\At1. (Citation: Secureworks - AT.exe Scheduled Task) In Linux and macOS environments, scheduled tasks using &lt;code&gt;[at](https://attack.mitre.org/software/S0110)&lt;/code&gt; can be audited locally, or through centrally collected logging, using syslog, or auditd events from the host. (Citation: Kifarunix - Task Scheduling in Linux)&lt;br /&gt;['T1543.003']: Use auditing tools capable of detecting privilege and service abuse opportunities on systems within an enterprise and correct them. &lt;br /&gt;['T1552.006']: Search SYSVOL for any existing GGPs that may contain credentials and remove them.(Citation: ADSecurity Finding Passwords in SYSVOL)&lt;br /&gt;['T1528']: Administrators should audit all cloud and container accounts to ensure that they are necessary and that the permissions granted to them are appropriate.  Additionally, administrators should perform an audit of all OAuth applications and the permissions they have been granted to access organizational data. This should be done extensively on all applications in order to establish a baseline, followed up on with periodic audits of new or updated applications. Suspicious applications should be investigated and removed.&lt;br /&gt;['T1574']: Use auditing tools capable of detecting hijacking opportunities on systems within an enterprise and correct them. Toolkits like the PowerSploit framework contain PowerUp modules that can be used to explore systems for hijacking weaknesses.(Citation: Powersploit)

Use the program sxstrace.exe that is included with Windows along with manual inspection to check manifest files for side-loading vulnerabilities in software.

Find and eliminate path interception weaknesses in program configuration files, scripts, the PATH environment variable, services, and in shortcuts by surrounding PATH variables with quotation marks when functions allow for them. Be aware of the search order Windows uses for executing or loading binaries and use fully qualified paths wherever appropriate.

Clean up old Windows Registry keys when software is uninstalled to avoid keys with no associated legitimate binaries. Periodically search for and correct or report path interception weaknesses on systems that may have been introduced using custom or available tools that report software using insecure path configurations.(Citation: Microsoft CreateProcess)(Citation: Microsoft Dynamic-Link Library Security)(Citation: Vulnerability and Exploit Detector)&lt;br /&gt;['T1610']: Scan images before deployment, and block those that are not in compliance with security policies. In Kubernetes environments, the admission controller can be used to validate images after a container deployment request is authenticated but before the container is deployed.(Citation: Kubernetes Hardening Guide)&lt;br /&gt;['T1031', 'T1543']: Use auditing tools capable of detecting privilege and service abuse opportunities on systems within an enterprise and correct them.&lt;br /&gt;['T1606.001']: Administrators should perform an audit of all access lists and the permissions they have been granted to access web applications and services. This should be done extensively on all resources in order to establish a baseline, followed up on with periodic audits of new or updated resources. Suspicious accounts/credentials should be investigated and removed.&lt;br /&gt;['T1213.001']: Consider periodic review of accounts and privileges for critical and sensitive Confluence repositories.&lt;br /&gt;['T1566.002']: Audit applications and their permissions to ensure access to data and resources are limited based upon necessity and principle of least privilege.&lt;br /&gt;['T1546.006', 'T1161']: Binaries can also be baselined for what dynamic libraries they require, and if an app requires a new dynamic library that wasn\u2019t included as part of an update, it should be investigated.&lt;br /&gt;['T1213.002']: Consider periodic review of accounts and privileges for critical and sensitive SharePoint repositories.&lt;br /&gt;['T1578.001']: Routinely check user permissions to ensure only the expected users have the capability to create snapshots and backups.&lt;br /&gt;['T1021.005']: Inventory workstations for unauthorized VNC server software.&lt;br /&gt;['T1145', 'T1552.004']: Ensure only authorized keys are allowed access to critical resources and audit access lists regularly.&lt;br /&gt;['T1550.001']: Administrators should audit all cloud and container accounts to ensure that they are necessary and that the permissions granted to them are appropriate. Where possible, the ability to request temporary account tokens on behalf of another accounts should be disabled. Additionally, administrators can leverage audit tools to monitor actions that can be conducted as a result of OAuth 2.0 access. For instance, audit reports enable admins to identify privilege escalation actions such as role creations or policy modifications, which could be actions performed after initial access.&lt;br /&gt;['T1606.002']: Enable advanced auditing on AD FS. Check the success and failure audit options in the AD FS Management snap-in. Enable Audit Application Generated events on the AD FS farm via Group Policy Object.(Citation: FireEye ADFS)&lt;br /&gt;['T1053.004']: Audit logging for &lt;code&gt;launchd&lt;/code&gt; events in MacOS can be reviewed or centrally collected using multiple options, such as syslog, OpenBSM, or OSquery.&lt;br /&gt;['T1087.004']: Routinely check user permissions to ensure only the expected users have the ability to list IAM identities or otherwise discover cloud accounts.&lt;br /&gt;['T1578']: Routinely monitor user permissions to ensure only the expected users have the capability to modify cloud compute infrastructure components.&lt;br /&gt;['T1560.001', 'T1560']: System scans can be performed to identify unauthorized archival utilities.&lt;br /&gt;['T1073', 'T1574.002']: Use the program sxstrace.exe that is included with Windows along with manual inspection to check manifest files for side-loading vulnerabilities in software.&lt;br /&gt;['T1213.003']: Consider periodic reviews of accounts and privileges for critical and sensitive code repositories. Scan code repositories for exposed credentials or other sensitive information.&lt;br /&gt;['T1088']: Check for common UAC bypass weaknesses on Windows systems to be aware of the risk posture and address issues where appropriate. (Citation: Github UACMe)&lt;br /&gt;['T1562.007']: Routinely check account role permissions to ensure only expected users and roles have permission to modify cloud firewalls. &lt;br /&gt;['T1552.002', 'T1214']: Proactively search for credentials within the Registry and attempt to remediate the risk.&lt;br /&gt;['T1053', 'T1053.005']: Toolkits like the PowerSploit framework contain PowerUp modules that can be used to explore systems for permission weaknesses in scheduled tasks that could be used to escalate privileges. (Citation: Powersploit)&lt;br /&gt;['T1505.004']: Regularly check installed IIS components to verify the integrity of the web server and identify if unexpected changes have been made.&lt;br /&gt;['T1562.002']: Consider periodic review of &lt;code&gt;auditpol&lt;/code&gt; settings for Administrator accounts and perform dynamic baselining on SIEM(s) to investigate potential malicious activity. Also ensure that the EventLog service and its threads are properly running.&lt;br /&gt;['T1038']: Use auditing tools capable of detecting DLL search order hijacking opportunities on systems within an enterprise and correct them. Toolkits like the PowerSploit framework contain PowerUp modules that can be used to explore systems for DLL hijacking weaknesses.(Citation: Powersploit)&lt;br /&gt;['T1552']: Preemptively search for files containing passwords or other credentials and take actions to reduce the exposure risk when found.&lt;br /&gt;['T1578.002']: Routinely check user permissions to ensure only the expected users have the capability to create new instances.&lt;br /&gt;['T1034']: Find and eliminate path interception weaknesses in program configuration files, scripts, the PATH environment variable, services, and in shortcuts by surrounding PATH variables with quotation marks when functions allow for them (Citation: Microsoft CreateProcess). Be aware of the search order Windows uses for executing or loading binaries and use fully qualified paths wherever appropriate (Citation: MSDN DLL Security). 

Clean up old Windows Registry keys when software is uninstalled to avoid keys with no associated legitimate binaries. Periodically search for and correct or report path interception weaknesses on systems that may have been introduced using custom or available tools that report software using insecure path configurations. (Citation: Kanthak Sentinel)&lt;br /&gt;['T1542.004']: Periodically check the integrity of system image to ensure it has not been modified. (Citation: Cisco IOS Software Integrity Assurance - Image File Integrity) (Citation: Cisco IOS Software Integrity Assurance - Image File Verification) (Citation: Cisco IOS Software Integrity Assurance - Change Control) &lt;br /&gt;['T1574.001']: Use auditing tools capable of detecting DLL search order hijacking opportunities on systems within an enterprise and correct them. Toolkits like the PowerSploit framework contain PowerUp modules that can be used to explore systems for DLL hijacking weaknesses.(Citation: Powersploit)

Use the program sxstrace.exe that is included with Windows along with manual inspection to check manifest files for side-by-side problems in software.(Citation: Microsoft Sxstrace)&lt;br /&gt;['T1204.003', 'T1612']: Audit images deployed within the environment to ensure they do not contain any malicious components.&lt;br /&gt;['T1578.003']: Routinely check user permissions to ensure only the expected users have the capability to delete new instances.&lt;br /&gt;['T1527']: Administrators can set up a variety of logs and leverage audit tools to monitor actions that can be conducted as a result of OAuth 2.0 access. For instance, audit reports enable admins to identify privilege escalation actions such as role creations or policy modifications, which could be actions performed after initial access.&lt;br /&gt;['T1114.003']: Enterprise email solutions have monitoring mechanisms that may include the ability to audit auto-forwarding rules on a regular basis.

In an Exchange environment, Administrators can use Get-InboxRule to discover and remove potentially malicious auto-forwarding rules.(Citation: Microsoft Tim McMichael Exchange Mail Forwarding 2). In addition to this, a MAPI Editor can be utilized to examine the underlying database structure and discover any modifications/tampering of the properties of auto-forwarding rules.(Citation: Pfammatter - Hidden Inbox Rules)&lt;br /&gt;['T1114']: Enterprise email solutions have monitoring mechanisms that may include the ability to audit auto-forwarding rules on a regular basis.

In an Exchange environment, Administrators can use Get-InboxRule to discover and remove potentially malicious auto-forwarding rules.(Citation: Microsoft Tim McMichael Exchange Mail Forwarding 2) &lt;br /&gt;['T1606']: Administrators should perform an audit of all access lists and the permissions they have been granted to access web applications and services. This should be done extensively on all resources in order to establish a baseline, followed up on with periodic audits of new or updated resources. Suspicious accounts/credentials should be investigated and removed.
 
Enable advanced auditing on ADFS. Check the success and failure audit options in the ADFS Management snap-in. Enable Audit Application Generated events on the AD FS farm via Group Policy Object.(Citation: FireEye ADFS)&lt;br /&gt;['T1552.001', 'T1081']: Preemptively search for files containing passwords and take actions to reduce the exposure risk when found.&lt;br /&gt;['T1530']: Frequently check permissions on cloud storage to ensure proper permissions are set to deny open or unprivileged access to resources.(Citation: Amazon S3 Security, 2019)&lt;br /&gt;['T1543.004']: Use auditing tools capable of detecting folder permissions abuse opportunities on systems, especially reviewing changes made to folders by third-party software.&lt;br /&gt;['T1213']: Consider periodic review of accounts and privileges for critical and sensitive repositories.&lt;br /&gt;['T1542.005']: Periodically check the integrity of the running configuration and system image to ensure they have not been modified. (Citation: Cisco IOS Software Integrity Assurance - Image File Verification) (Citation: Cisco IOS Software Integrity Assurance - Image File Integrity) (Citation: Cisco IOS Software Integrity Assurance - Change Control) &lt;br /&gt;['T1525']: Periodically check the integrity of images and containers used in cloud deployments to ensure they have not been modified to include malicious software.&lt;br /&gt;['T1053.001']: Scheduled tasks using &lt;code&gt;[at](https://attack.mitre.org/software/S0110)&lt;/code&gt; can be audited locally, or through centrally collected logging, using syslog, or auditd events from the host. (Citation: Kifarunix - Task Scheduling in Linux)&lt;br /&gt;['T1078']: Routinely audit source code, application configuration files, open repositories, and public cloud storage for insecure use and storage of credentials.&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Mitre ATT&amp;CK Mitigation M1047" url="https://attack.mitre.org/mitigations/M1047"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:01.854">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-DS0017" name="Command" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>A directive given to a computer program, acting as an interpreter of some kind, in order to perform a specific task(Citation: Confluence Linux Command  Line)(Citation: Audit OSX)&lt;br /&gt;&lt;p&gt;Detailed detections per technique:&lt;/p&gt;&lt;br /&gt;['T1041']: Monitor executed commands and arguments that may steal data by exfiltrating it over an existing command and control channel.&lt;br /&gt;['T1555.003']: Monitor executed commands and arguments that may acquire credentials from web browsers by reading files specific to the target browser.(Citation: Talos Olympic Destroyer 2018)&lt;br /&gt;['T1134.001']: Monitor executed commands and arguments to detect token manipulation by auditing command-line activity. Specifically, analysts should look for use of the runas command. Detailed command-line logging is not enabled by default in Windows.(Citation: Microsoft Command-line Logging)&lt;br /&gt;['T1218.013']: Adversaries may rename abusable binaries to evade detections, but the argument &lt;code&gt;INJECTRUNNING&lt;/code&gt; is required for mavinject.exe to perform [Dynamic-link Library Injection](https://attack.mitre.org/techniques/T1055/001) and may therefore be monitored to alert malicious activity.&lt;br /&gt;['T1548.001']: Monitor for execution of utilities, like chmod, and their command-line arguments to look for setuid or setguid bits being set.&lt;br /&gt;['T1218.011']: Command arguments used with the rundll32.exe invocation may also be useful in determining the origin and purpose of the DLL being loaded.&lt;br /&gt;['T1218.008']: Command arguments used before and after the invocation of odbcconf.exe may also be useful in determining the origin and purpose of the DLL being loaded.&lt;br /&gt;['T1218.009']: Command arguments used before and after Regsvcs.exe or Regasm.exe invocation may also be useful in determining the origin and purpose of the binary being executed.&lt;br /&gt;['T1547.005']: Monitor executed commands and arguments that may abuse security support providers (SSPs) to execute DLLs when the system boots.&lt;br /&gt;['T1218.012']: Command arguments used before and after the invocation of verclsid.exe may also be useful in determining the origin and purpose of the payload being executed.&lt;br /&gt;['T1542.005']: Monitor executed commands and arguments in command history in either the console or as part of the running memory to determine if unauthorized or suspicious commands were used to modify device configuration.&lt;br /&gt;['T1546.001']: Monitor executed commands and arguments that may establish persistence by executing malicious content triggered by a file type association.&lt;br /&gt;['T1564.004']: The Streams tool of Sysinternals can be used to uncover files with ADSs. The &lt;code&gt;dir /r&lt;/code&gt; command can also be used to display ADSs. (Citation: Symantec ADS May 2009) Many PowerShell commands (such as Get-Item, Set-Item, Remove-Item, and Get-ChildItem) can also accept a &lt;code&gt;-stream&lt;/code&gt; parameter to interact with ADSs. (Citation: MalwareBytes ADS July 2015) (Citation: Microsoft ADS Mar 2014)&lt;br /&gt;['T1069.003']: Monitor for executed commands and arguments that may attempt to find cloud groups and permission settings. &lt;br /&gt;['T1087.002']: Monitor for execution of commands and arguments associated with enumeration or information gathering of domain accounts and groups, such as &lt;code&gt;net user /domain&lt;/code&gt; and &lt;code&gt;net group /domain&lt;/code&gt;, &lt;code&gt;dscacheutil -q group&lt;/code&gt;on macOS, and &lt;code&gt;ldapsearch&lt;/code&gt; on Linux.

System and network discovery techniques normally occur throughout an operation as an adversary learns the environment, and also to an extent in normal network operations. Therefore discovery data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.&lt;br /&gt;['T1037.005']: Monitor executed commands and arguments for logon scripts&lt;br /&gt;['T1011.001']: Monitor executed commands and arguments that may attempt to exfiltrate data over Bluetooth rather than the command and control channel.&lt;br /&gt;['T1127']: Monitor executed commands and arguments used before and after invocation of the utilities may also be useful in determining the origin and purpose of the binary being executed.&lt;br /&gt;['T1020']: Monitor executed commands and arguments that may exfiltrate data, such as sensitive documents, through the use of automated processing after being gathered during Collection&lt;br /&gt;['T1547.004']: Monitor executed commands and arguments that may abuse features of Winlogon to execute DLLs and/or executables when a user logs in.&lt;br /&gt;['T1003.003']: Monitor executed commands and arguments that may attempt to access or create a copy of the Active Directory domain database in order to steal credential information, as well as obtain other information about domain members such as devices, users, and access rights. Look for command-lines that invoke attempts to access or copy the NTDS.dit.&lt;br /&gt;['T1484.002']: Monitor executed commands and arguments that updates domain authentication from Managed to Federated via ActionTypes &lt;code&gt;Set federation settings on domain&lt;/code&gt; and &lt;code&gt;Set domain authentication&lt;/code&gt;.(Citation: Microsoft - Azure Sentinel ADFSDomainTrustMods) Monitor for PowerShell commands such as: &lt;code&gt;Update-MSOLFederatedDomain -DomainName: "Federated Domain Name"&lt;/code&gt;, or &lt;code&gt;Update-MSOLFederatedDomain -DomainName: "Federated Domain Name" -supportmultipledomain&lt;/code&gt;.(Citation: Microsoft - Update or Repair Federated domain)&lt;br /&gt;['T1609']: Monitor commands and arguments executed by container services. In Docker, the daemon log provides insight into events at the daemon and container service level. Kubernetes system component logs may also detect activities running in and out of containers in the cluster.&lt;br /&gt;['T1560']: Monitor executed commands and arguments for actions that will aid in compression or encrypting data that is collected prior to exfiltration, such as tar. &lt;br /&gt;['T1033']: Monitor executed commands and arguments that may attempt to dump credentials to obtain account login and credential material, normally in the form of a hash or a clear text password, from the operating system and software. Look for command-lines that invoke AuditD or the Security Accounts Manager (SAM). Remote access tools may contain built-in features or incorporate existing tools like [Mimikatz](https://attack.mitre.org/software/S0002). [PowerShell](https://attack.mitre.org/techniques/T1059/001) scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module, (Citation: Powersploit) which may require additional logging features to be configured in the operating system to collect necessary information for analysis.&lt;br /&gt;['T1547.001']: Monitor executed commands and arguments that may achieve persistence by adding a program to a startup folder or referencing it with a Registry run key.&lt;br /&gt;['T1543.002']: Suspicious systemd services can also be identified by comparing results against a trusted system baseline. Malicious systemd services may be detected by using the systemctl utility to examine system wide services: &lt;code&gt;systemctl list-units --type=service -all&lt;/code&gt;. Auditing the execution and command-line arguments of the 'systemctl' utility, as well related utilities such as &lt;code&gt;/usr/sbin/service&lt;/code&gt; may reveal malicious systemd service execution.&lt;br /&gt;['T1546.007']: Monitor executed commands and arguments that may establish persistence by executing malicious content triggered by Netsh Helper DLLs.&lt;br /&gt;['T1018']: Monitor executed commands and arguments that may attempt to get a listing of other systems by IP address, hostname, or other logical identifier on a network that may be used for Lateral Movement from the current system&lt;br /&gt;['T1070.001']: Monitor executed commands and arguments for actions that would delete Windows event logs (via PowerShell)&lt;br /&gt;['T1053.002']: Monitor executed commands and arguments for actions that could be taken to create/modify tasks. Tasks may also be created through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001), so additional logging may need to be configured to gather the appropriate data.&lt;br /&gt;['T1003.002']: Monitor executed commands and arguments that may attempt to extract credential material from the Security Account Manager (SAM) database either through in-memory techniques or through the Windows Registry where the SAM database is stored.&lt;br /&gt;['T1547.006']: Loading, unloading, and manipulating modules on Linux systems can be detected by monitoring for the following commands: &lt;code&gt;modprobe&lt;/code&gt;, &lt;code&gt;insmod&lt;/code&gt;, &lt;code&gt;lsmod&lt;/code&gt;, &lt;code&gt;rmmod&lt;/code&gt;, or &lt;code&gt;modinfo&lt;/code&gt; (Citation: Linux Loadable Kernel Module Insert and Remove LKMs) Adversaries may run commands on the target system before loading a malicious module in order to ensure that it is properly compiled. (Citation: iDefense Rootkit Overview) Adversaries may also execute commands to identify the exact version of the running Linux kernel and/or download multiple versions of the same .ko (kernel object) files to use the one appropriate for the running system.(Citation: Trend Micro Skidmap) Many LKMs require Linux headers (specific to the target kernel) in order to compile properly. These are typically obtained through the operating systems package manager and installed like a normal package.

On macOS, monitor for execution of &lt;code&gt;kextload&lt;/code&gt; commands and user installed kernel extensions performing abnormal and/or potentially malicious activity (such as creating network connections). Monitor for new rows added in the &lt;code&gt;kext_policy&lt;/code&gt; table. KextPolicy stores a list of user approved (non Apple) kernel extensions and a partial history of loaded kernel modules in a SQLite database, &lt;code&gt;/var/db/SystemPolicyConfiguration/KextPolicy&lt;/code&gt;.(Citation: User Approved Kernel Extension Pike's)(Citation: Purves Kextpocalypse 2)(Citation: Apple Developer Configuration Profile)&lt;br /&gt;['T1552.004']: Monitor executed commands and arguments that may search for private key certificate files on compromised systems for insecurely stored credentials.&lt;br /&gt;['T1489']: Monitor executed commands and arguments that may stop or disable services on a system to render those services unavailable to legitimate users.&lt;br /&gt;['T1216']: Monitor executed commands and arguments for scripts like PubPrn.vbs that may be used to proxy execution of malicious files.&lt;br /&gt;['T1098.004']: Monitor executed commands and arguments to modify the authorized_keys or /etc/ssh/sshd_config files.&lt;br /&gt;['T1552.007']: Establish centralized logging for the activity of container and Kubernetes cluster components. Monitor logs for actions that could be taken to gather credentials to container and cloud infrastructure, including the use of discovery API calls by new or unexpected users and APIs that access Docker logs.&lt;br /&gt;['T1546.013']: Monitor abnormal PowerShell commands, unusual loading of PowerShell drives or modules.&lt;br /&gt;['T1113']: Monitor executed commands and arguments that may attempt to take screen captures of the desktop to gather information over the course of an operation.&lt;br /&gt;['T1547.002']: Monitor executed commands and arguments that may abuse authentication packages to execute DLLs when the system boots.&lt;br /&gt;['T1027.004']: Monitor executed commands and arguments for actions that could be taken to gather common compilers, such as csc.exe and GCC/MinGW, and correlate with other suspicious behavior to reduce false positives from normal user and administrator behavior.&lt;br /&gt;['T1562.006']: Monitor executed commands and arguments that may attempt to block indicators or events typically captured by sensors from being gathered and analyzed.&lt;br /&gt;['T1553.004']: Monitor for commands, such as &lt;code&gt;security add-trusted-cert&lt;/code&gt; (macOS) or &lt;code&gt;certutil -addstore&lt;/code&gt; (Windows), that can be used to install root certificates. A system's root certificates are unlikely to change frequently. Monitor new certificates installed on a system that could be due to malicious activity. (Citation: SpectorOps Code Signing Dec 2017) Check pre-installed certificates on new systems to ensure unnecessary or suspicious certificates are not present. Microsoft provides a list of trustworthy root certificates online and through &lt;code&gt;authroot.stl&lt;/code&gt;. (Citation: SpectorOps Code Signing Dec 2017) The Sysinternals Sigcheck utility can also be used (&lt;code&gt;sigcheck[64].exe -tuv&lt;/code&gt;) to dump the contents of the certificate store and list valid certificates not rooted to the Microsoft Certificate Trust List. (Citation: Microsoft Sigcheck May 2017)&lt;br /&gt;['T1547.014']: Monitor executed commands and arguments that may achieve persistence by adding a Registry key to the Active Setup of the local machine.&lt;br /&gt;['T1114.001']: Monitor executed commands and arguments for actions that could be taken to gather local email files. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.&lt;br /&gt;['T1059.004']: Monitor executed commands and arguments that may abuse Unix shell commands and scripts for execution. Unix shell usage may be common on administrator, developer, or power user systems, depending on job function. If scripting is restricted for normal users, then any attempt to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.&lt;br /&gt;['T1123']: Monitor executed commands and arguments for actions that can leverage a computer's peripheral devices (e.g., microphones and webcams) or applications (e.g., voice and video call services) to capture audio recordings for the purpose of listening into sensitive conversations to gather information.&lt;br /&gt;['T1647']: Monitor for commands with arguments (such as opening common command-line editors) used to modify plist files, especially commonly abused files such as those in &lt;code&gt;\~/LaunchAgents&lt;/code&gt;, &lt;code&gt;\~/Library/Application Support/com.apple.backgroundtaskmanagementagent/backgrounditems.btm&lt;/code&gt;, and an application's &lt;code&gt;Info.plist&lt;/code&gt;.&lt;br /&gt;['T1553.001']: Monitor and investigate attempts to modify extended file attributes with utilities such as &lt;code&gt;xattr&lt;/code&gt;. Built-in system utilities may generate high false positive alerts, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible. &lt;br /&gt;['T1546.010']: Monitor executed commands and arguments that may establish persistence and/or elevate privileges by executing malicious content triggered by AppInit DLLs loaded into processes.&lt;br /&gt;['T1098']: Monitor executed commands and arguments for suspicious commands to modify accounts or account settings (including files such as the authorized_keys or /etc/ssh/sshd_config).

Monitor executed commands and arguments of suspicious commands (such as Add-MailboxPermission) that may be indicative of modifying the permissions of Exchange and other related service settings.&lt;br /&gt;['T1222.001']: Monitor for executed commands and arguments for PowerShell cmdlets that can be used to retrieve or modify file and directory DACLs.&lt;br /&gt;['T1562.010']: Monitor for commands or other activity that may be indicative of attempts to abuse older or deprecated technologies (ex: &lt;code&gt;powershell -v 2&lt;/code&gt;).&lt;br /&gt;['T1112']:  Monitor executed commands and arguments for actions that could be taken to change, conceal, and/or delete information in the Registry. The Registry may also be modified through Windows system management tools such as Windows Management Instrumentation and PowerShell, which may require additional logging features to be configured in the operating system to collect necessary information for analysis.&lt;br /&gt;['T1547']: Monitor executed commands and arguments that may configure system settings to automatically execute a program during system boot or logon to maintain persistence or gain higher-level privileges on compromised systems.&lt;br /&gt;['T1070.005']: Monitor executed commands and arguments of net use commands associated with establishing and removing remote shares over SMB, including following best practices for detection of Windows Admin Shares.&lt;br /&gt;['T1555.001']: Monitor executed commands with arguments that may be used to collect Keychain data from a system to acquire credentials.&lt;br /&gt;['T1574.006']: Monitor executed commands and arguments associated with modifications to variables and files associated with loading shared libraries such as LD_PRELOAD on Linux and DYLD_INSERT_LIBRARIES on macOS.&lt;br /&gt;['T1482']: Monitor executed commands and arguments for actions that could be taken to gather system and network information, such as nltest /domain_trusts. Remote access tools with built-in features may interact directly with the Windows API to gather information.&lt;br /&gt;['T1546.006']: Monitor executed commands and arguments that may establish persistence by executing malicious content triggered by the execution of tainted binaries.&lt;br /&gt;['T1552']: While detecting adversaries accessing credentials may be difficult without knowing they exist in the environment, it may be possible to detect adversary use of credentials they have obtained. Monitor the command-line arguments of executing processes for suspicious words or regular expressions that may indicate searching for a password (for example: password, pwd, login, secure, or credentials). See [Valid Accounts](https://attack.mitre.org/techniques/T1078) for more information.&lt;br /&gt;['T1059.008']: Consider reviewing command history in either the console or as part of the running memory to determine if unauthorized or suspicious commands were used to modify device configuration. (Citation: Cisco IOS Software Integrity Assurance - Command History) Consider comparing a copy of the network device configuration against a known-good version to discover unauthorized changes to the command interpreter. The same process can be accomplished through a comparison of the run-time memory, though this is non-trivial and may require assistance from the vendor.&lt;br /&gt;['T1025']: Monitor executed commands and arguments for actions that could be taken to collect files from a system's connected removable media. For example, data may be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.&lt;br /&gt;['T1555.004']: Monitor executed commands and arguments of &lt;code&gt;vaultcmd.exe&lt;/code&gt; for suspicious activity, such as listing credentials from the Windows Credentials locker (i.e., &lt;code&gt;vaultcmd /listcreds:"Windows Credentials"&lt;/code&gt;).(Citation: Malwarebytes The Windows Vault)&lt;br /&gt;['T1218.014']: Monitor executed commands and arguments that may gather information about the victim's DNS that can be used during targeting.&lt;br /&gt;['T1037']: Monitor executed commands and arguments that may consist of logon scripts for unusual access by abnormal users or at abnormal times.&lt;br /&gt;['T1548']: Monitor executed commands and arguments that may circumvent mechanisms designed to control elevate privileges to gain higher-level permissions.&lt;br /&gt;['T1048.001']: Monitor executed commands and arguments that may steal data by exfiltrating it over a symmetrically encrypted network protocol other than that of the existing command and control channel.&lt;br /&gt;['T1562.002']: Monitor executed commands and arguments for commands that can be used to disable logging. For example, [Wevtutil](https://attack.mitre.org/software/S0645), auditpol, sc stop EventLog, and offensive tooling (such as [Mimikatz](https://attack.mitre.org/software/S0002) and Invoke-Phant0m) may be used to clear logs.(Citation: def_ev_win_event_logging)(Citation: evt_log_tampering)&lt;br /&gt;['T1567.001']: Monitor executed command and arguments that may exfiltrate data to a code repository rather than over their primary command and control channel.&lt;br /&gt;['T1048']: Monitor executed commands and arguments that may steal data by exfiltrating it over a different protocol than that of the existing command and control channel.&lt;br /&gt;['T1564.003']: Monitor executed commands and arguments that may use hidden windows to conceal malicious activity from the plain sight of users. In Windows, enable and configure event logging and PowerShell logging to check for the hidden window style.&lt;br /&gt;['T1555.002']: Monitor executed commands and arguments that may obtain root access (allowing them to read securityd's memory), then they can scan through memory to find the correct sequence of keys in relatively few tries to decrypt the user's logon keychain.&lt;br /&gt;['T1546.004']: Monitor executed commands and arguments that may establish persistence through executing malicious commands triggered by a user's shell.&lt;br /&gt;['T1197']: Monitor executed commands and arguments from the BITSAdmin tool (especially the 'Transfer', 'Create', 'AddFile', 'SetNotifyFlags', 'SetNotifyCmdLine', 'SetMinRetryDelay', 'SetCustomHeaders', and 'Resume' command options)(Citation: Microsoft BITS) Admin logs, PowerShell logs, and the Windows Event log for BITS activity.(Citation: Elastic - Hunting for Persistence Part 1) Also consider investigating more detailed information about jobs by parsing the BITS job database.(Citation: CTU BITS Malware June 2016)&lt;br /&gt;['T1134.002']: Monitor executed commands and arguments to detect token manipulation by auditing command-line activity. Specifically, analysts should look for use of the runas command or similar artifacts. Detailed command-line logging is not enabled by default in Windows.(Citation: Microsoft Command-line Logging)&lt;br /&gt;['T1059.005']: Monitor executed commands and arguments that may abuse Visual Basic (VB) for execution.&lt;br /&gt;['T1553.006']: Monitor for the execution of commands that could modify the code signing policy of a system, such as &lt;code&gt;bcdedit.exe -set TESTSIGNING ON&lt;/code&gt;. (Citation: Microsoft TESTSIGNING Feb 2021)&lt;br /&gt;['T1569.001']: Monitor command-line execution of the &lt;code&gt;launchctl&lt;/code&gt; command immediately followed by abnormal network connections.&lt;br /&gt;['T1070']: Monitor executed commands and arguments that may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined malware.&lt;br /&gt;['T1546.011']: Monitor executed commands and arguments for sdbinst.exe for potential indications of application shim abuse.&lt;br /&gt;['T1563.001']: Monitor executed commands and arguments that may hijack a legitimate user's SSH session to move laterally within an environment.&lt;br /&gt;['T1053.005']: Monitor executed commands and arguments for actions that could be taken to gather tasks may also be created through Windows system management tools such as Windows Management Instrumentation and PowerShell, so additional logging may need to be configured to gather the appropriate data.&lt;br /&gt;['T1562']: Monitor executed commands and arguments that may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms.&lt;br /&gt;['T1010']: Monitor executed commands and arguments for actions that could be taken to gather system and network information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.&lt;br /&gt;['T1137.001']: Monitor executed commands and arguments that may abuse Microsoft Office templates to obtain persistence on a compromised system.&lt;br /&gt;['T1484.001']: Monitor executed commands and arguments that may modify Group Policy Objects (GPOs) to subvert the intended discretionary access controls for a domain, usually with the intention of escalating privileges on the domain.&lt;br /&gt;['T1546.012']: Monitor executed commands and arguments that may establish persistence and/or elevate privileges by executing malicious content triggered by Image File Execution Options (IFEO) debuggers.&lt;br /&gt;['T1134']: Monitor executed commands and arguments for token manipulation by auditing command-line activity. Specifically, analysts should look for use of the &lt;code&gt;runas&lt;/code&gt; command. Detailed command-line logging is not enabled by default in Windows.(Citation: Microsoft Command-line Logging)&lt;br /&gt;['T1563']: Monitor executed commands and arguments that may take control of preexisting sessions with remote services to move laterally in an environment.&lt;br /&gt;['T1574.011']: Monitor for the execution of commands and arguments that can be used for adversaries to modify services' registry keys and values through applications such as Windows Management Instrumentation and PowerShell. Additional logging may need to be configured to gather the appropriate data.&lt;br /&gt;['T1125']: Monitor executed commands and arguments that can leverage a computer's peripheral devices (e.g., integrated cameras or webcams) or applications (e.g., video call services) to capture video recordings for the purpose of gathering information.&lt;br /&gt;['T1546.009']: Monitor executed commands and arguments that may establish persistence and/or elevate privileges by executing malicious content triggered by AppCert DLLs loaded into processes.&lt;br /&gt;['T1204.003']: Monitor executed commands and arguments that may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior.&lt;br /&gt;['T1007']: Monitor executed commands and arguments that could be taken to gather system information related to services. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).&lt;br /&gt;['T1003.007']: Monitor executed commands and arguments that may gather credentials from information stored in the Proc filesystem or &lt;code&gt;/proc&lt;/code&gt;.&lt;br /&gt;['T1059.002']: Monitor executed commands and arguments that may abuse AppleScript for execution. Scripts are likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used.  Actions may be related to network and system information [Discovery](https://attack.mitre.org/tactics/TA0007), [Collection](https://attack.mitre.org/tactics/TA0009), or other scriptable post-compromise behaviors and could be used as indicators of detection leading back to the source script.&lt;br /&gt;['T1222.002']: Many of the commands used to modify ACLs and file/directory ownership are built-in system utilities and may generate a high false positive alert rate, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible. Commonly abused command arguments include &lt;code&gt;chmod +x&lt;/code&gt;, &lt;code&gt;chmod -R 755&lt;/code&gt;, and &lt;code&gt;chmod 777&lt;/code&gt;.(Citation: 20 macOS Common Tools and Techniques)&lt;br /&gt;['T1558']: Monitor executed commands and arguments that may attempt to subvert Kerberos authentication by stealing or forging Kerberos tickets to enable [Pass the Ticket](https://attack.mitre.org/techniques/T1550/003).&lt;br /&gt;['T1136.002']: Monitor executed commands and arguments for actions that are associated with local account creation, such as net user /add /domain.&lt;br /&gt;['T1490']: Use process monitoring to monitor the execution and command line parameters of binaries involved in inhibiting system recovery, such as vssadmin, wbadmin, and bcdedit.&lt;br /&gt;['T1546.008']: Monitor executed commands and arguments that may establish persistence and/or elevate privileges by executing malicious content triggered by accessibility features. Command line invocation of tools capable of modifying the Registry for associated keys are also suspicious. Utility arguments and the binaries themselves should be monitored for changes.&lt;br /&gt;['T1547.013']: Monitor executed commands and arguments that may modify XDG autostart entries to execute programs or commands during system boot.&lt;br /&gt;['T1016']: Monitor executed commands and arguments that may look for details about the network configuration and settings, such as IP and/or MAC addresses, of systems they access or through information discovery of remote systems.&lt;br /&gt;['T1497']: Monitor executed commands and arguments that may employ various means to detect and avoid virtualization and analysis environments. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary's implementation and monitoring required.&lt;br /&gt;['T1564']: Monitor executed commands and arguments that may attempt to hide artifacts associated with their behaviors to evade detection.&lt;br /&gt;['T1136']: Monitor executed commands and arguments for actions that are associated with account creation, such as net user or useradd&lt;br /&gt;['T1547.007']: Monitor executed commands and arguments that may modify plist files to automatically run an application when a user logs in.&lt;br /&gt;['T1218.002']: When executed from the command line or clicked, control.exe will execute the CPL file (ex: &lt;code&gt;control.exe file.cpl&lt;/code&gt;) before [Rundll32](https://attack.mitre.org/techniques/T1218/011) is used to call the CPL's API functions (ex: &lt;code&gt;rundll32.exe shell32.dll,Control_RunDLL file.cpl&lt;/code&gt;). CPL files can be executed directly via the CPL API function with just the latter [Rundll32](https://attack.mitre.org/techniques/T1218/011) command, which may bypass detections and/or execution filters for control.exe.(Citation: TrendMicro CPL Malware Jan 2014)&lt;br /&gt;['T1570']: Monitor executed commands and arguments for actions for abnormal usage of utilities and command-line arguments that may be used in support of remote transfer of files&lt;br /&gt;['T1555.005']: Monitor executed commands and arguments that may acquire user credentials from third-party password managers. (Citation: ise Password Manager February 2019)&lt;br /&gt;['T1039']: Monitor executed commands and arguments for actions that could be taken to collect files from a network share. Remote access tools with built-in features may interact directly with the Windows API to gather and copy to a location. Data may also be acquired and staged through Windows system management tools such as Windows Management Instrumentation and PowerShell.&lt;br /&gt;['T1069']: Monitor executed commands and arguments acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.&lt;br /&gt;['T1497.003']: Monitor executed commands and arguments that may employ various time-based methods to detect and avoid virtualization and analysis environments. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary's implementation and monitoring required.&lt;br /&gt;['T1137.002']: Monitor executed commands and arguments that may abuse the Microsoft Office "Office Test" Registry key to obtain persistence on a compromised system.&lt;br /&gt;['T1564.008']: On Windows systems, monitor for creation of suspicious inbox rules through the use of the &lt;code&gt;New-InboxRule&lt;/code&gt; and &lt;code&gt;Set-InboxRule&lt;/code&gt; PowerShell cmdlets.(Citation: Microsoft BEC Campaign)&lt;br /&gt;['T1021']: Monitor executed commands and arguments that may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to log into a service specifically designed to accept remote connections, such as telnet, SSH, and VNC. The adversary may then perform actions as the logged-on user.&lt;br /&gt;['T1553']: Command monitoring may reveal malicious attempts to modify trust settings, such as the installation of root certificates or modifications to trust attributes/policies applied to files.&lt;br /&gt;['T1563.002']: monitor service creation that uses cmd.exe /k or cmd.exe /c in its arguments to detect RDP session hijacking.&lt;br /&gt;['T1548.002']: Monitor executed commands and arguments that may bypass UAC mechanisms to elevate process privileges on system.&lt;br /&gt;['T1036.003']: Monitor executed commands and arguments for actions that could be taken to gather...&lt;br /&gt;['T1543.003']: Monitor processes and command-line arguments for actions that could create or modify services. Command-line invocation of tools capable of adding or modifying services may be unusual, depending on how systems are typically used in a particular environment. Services may also be modified through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001), so additional logging may need to be configured to gather the appropriate data. Also collect service utility execution and service binary path arguments used for analysis. Service binary paths may even be changed to execute commands or scripts.&lt;br /&gt;['T1217']: Monitor executed commands and arguments for actions that could be taken to gather browser bookmark information. Remote access tools with built-in features may interact directly using APIs to gather information. Information may also be acquired through system management tools such as Windows Management Instrumentation and PowerShell.&lt;br /&gt;['T1135']: Monitor executed commands and arguments that may look for folders and drives shared on remote systems as a means of identifying sources of information to gather as a precursor for Collection and to identify potential systems of interest for Lateral Movement.&lt;br /&gt;['T1567']: Monitor executed commands and arguments that may use an existing, legitimate external Web service to exfiltrate data rather than their primary command and control channel.&lt;br /&gt;['T1202']: Monitor executed commands and arguments to bypass security restrictions that limit the use of command-line interpreters. &lt;br /&gt;['T1561']: Monitor for direct access read/write attempts using the &lt;code&gt;\\\\.\\&lt;/code&gt; notation.(Citation: Microsoft Sysmon v6 May 2017) Monitor for unusual kernel driver installation activity.&lt;br /&gt;['T1059.003']: Monitor executed commands and arguments that may abuse the Windows command shell for execution. Usage of the Windows command shell may be common on administrator, developer, or power user systems depending on job function. If scripting is restricted for normal users, then any attempt to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.&lt;br /&gt;['T1548.003']: Monitor executed commands and arguments that may perform sudo caching and/or use the suoders file to elevate privileges, such as the &lt;code&gt;sudo&lt;/code&gt; command.&lt;br /&gt;['T1480.001']: Monitor executed commands and arguments that may gather the victim's physical location(s) that can be used during targeting. Detecting the use of environmental keying may be difficult depending on the implementation.&lt;br /&gt;['T1546.005']: Monitor executed commands and arguments that may establish persistence by executing malicious content triggered by an interrupt signal.&lt;br /&gt;['T1082']: Monitor executed commands and arguments that may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture.&lt;br /&gt;['T1564.002']: Monitor executed commands and arguments that could be taken to add a new user and subsequently hide it from login screens.&lt;br /&gt;['T1057']: Monitor executed commands and arguments for actions that may attempt to get information about running processes on a system.&lt;br /&gt;['T1110']: Monitor executed commands and arguments that may use brute force techniques to gain access to accounts when passwords are unknown or when password hashes are obtained.&lt;br /&gt;['T1218.010']: Command arguments used before and after the regsvr32.exe invocation may also be useful in determining the origin and purpose of the script or DLL being loaded. (Citation: Carbon Black Squiblydoo Apr 2016)&lt;br /&gt;['T1484']: Monitor executed commands and arguments for modifications to domain trust settings, such as when a user or application modifies the federation settings on the domain or updates domain authentication from Managed to Federated via ActionTypes &lt;code&gt;Set federation settings on domain&lt;/code&gt; and &lt;code&gt;Set domain authentication&lt;/code&gt;.(Citation: Microsoft - Azure Sentinel ADFSDomainTrustMods)(Citation: Microsoft 365 Defender Solorigate)&lt;br /&gt;['T1562.003']: Correlating a user session with a distinct lack of new commands in their &lt;code&gt;.bash_history&lt;/code&gt; can be a clue to suspicious behavior. Monitor for modification of PowerShell command history settings through processes being created with &lt;code&gt;-HistorySaveStyle SaveNothing&lt;/code&gt; command-line arguments and use of the PowerShell commands &lt;code&gt;Set-PSReadlineOption -HistorySaveStyle SaveNothing&lt;/code&gt; and &lt;code&gt;Set-PSReadLineOption -HistorySavePath {File Path}&lt;/code&gt;.&lt;br /&gt;['T1518']: Monitor executed commands and arguments that may attempt to get a listing of software and software versions that are installed on a system or in a cloud environment.&lt;br /&gt;['T1505.004']: Monitor execution and command-line arguments of &lt;code&gt;AppCmd.exe&lt;/code&gt;, which may be abused to install malicious IIS modules.(Citation: Microsoft IIS Modules Overview 2007)(Citation: Unit 42 RGDoor Jan 2018)(Citation: ESET IIS Malware 2021)&lt;br /&gt;['T1552.006']: Monitor executed commands and arguments that may search for SYSVOL data and/or GPP XML files, especially on compromised domain controllers.&lt;br /&gt;['T1040']: Monitor executed commands and arguments for actions that aid in sniffing network traffic to capture information about an environment, including authentication material passed over the network&lt;br /&gt;['T1218.005']: Look for mshta.exe executing raw or obfuscated script within the command-line. Compare recent invocations of mshta.exe with prior history of known good arguments and executed .hta files to determine anomalous and potentially adversarial activity. Command arguments used before and after the mshta.exe invocation may also be useful in determining the origin and purpose of the .hta file being executed.&lt;br /&gt;['T1056.002']: Monitor executed commands and arguments, such as requests for credentials and/or strings related to creating password prompts that may be malicious.(Citation: Spoofing credential dialogs)&lt;br /&gt;['T1505.005']: Monitor executed commands and arguments for potential adversary actions to modify Registry values (ex: &lt;code&gt;reg.exe&lt;/code&gt;) or modify/replace the legitimate &lt;code&gt;termsrv.dll&lt;/code&gt;.&lt;br /&gt;['T1069.002']: Monitor for executed commands and arguments that may attempt to find domain-level groups and permission settings.&lt;br /&gt;['T1562.009']: Monitor executed commands and arguments associated with making configuration changes to boot settings, such as &lt;code&gt;bcdedit.exe&lt;/code&gt; and &lt;code&gt;bootcfg.exe&lt;/code&gt;.(Citation: Microsoft bcdedit 2021)(Citation: Microsoft Bootcfg)(Citation: Sophos Snatch Ransomware 2019)&lt;br /&gt;['T1552.001']: While detecting adversaries accessing these files may be difficult without knowing they exist in the first place, it may be possible to detect adversary use of credentials they have obtained. Monitor executed commands and arguments of executing processes for suspicious words or regular expressions that may indicate searching for a password (for example: password, pwd, login, secure, or credentials). See [Valid Accounts](https://attack.mitre.org/techniques/T1078) for more information.&lt;br /&gt;['T1087.004']: Monitor logs for actions that could be taken to gather information about cloud accounts, including the use of calls to cloud APIs that perform account discovery.

System and network discovery techniques normally occur throughout an operation as an adversary learns the environment, and also to an extent in normal network operations. Therefore discovery data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.&lt;br /&gt;['T1027']: Monitor executed commands and arguments containing indicators of obfuscation and known suspicious syntax such as uninterpreted escape characters like '''^''' and '''"'''. Deobfuscation tools can be used to detect these indicators in files/payloads. (Citation: GitHub Revoke-Obfuscation) (Citation: FireEye Revoke-Obfuscation July 2017) (Citation: GitHub Office-Crackros Aug 2016)&lt;br /&gt;['T1201']: Monitor executed commands and arguments for actions that may attempt to access detailed information about the password policy used within an enterprise network or cloud environment.&lt;br /&gt;['T1547.003']: Monitor executed commands and arguments that may abuse time providers to execute DLLs when the system boots.&lt;br /&gt;['T1555']: Monitor executed commands and arguments that may search for common password storage locations to obtain user credentials.&lt;br /&gt;['T1552.002']: Monitor executed commands and arguments that may search the Registry on compromised systems for insecurely stored credentials.&lt;br /&gt;['T1562.001']: Monitor for the execution of commands and arguments associated with disabling or modification of security software processes or services such as &lt;code&gt;Set-MpPreference-DisableScriptScanning 1&lt;/code&gt; in Windows,&lt;code&gt;sudo spctl --master-disable&lt;/code&gt; in macOS, and &lt;code&gt;setenforce 0&lt;/code&gt; in Linux.&lt;br /&gt;['T1546.002']: Monitor executed commands and arguments of .scr files.&lt;br /&gt;['T1562.004']: Monitor executed commands and arguments associated with disabling or the modification of system firewalls such as &lt;code&gt;netsh advfirewall firewall set rule group="file and printer sharing" new enable=Yes&lt;/code&gt;,&lt;code&gt;ufw disable&lt;/code&gt;, and &lt;code&gt;ufw logging off&lt;/code&gt;.&lt;br /&gt;['T1546.014']: Monitor executed commands and arguments that may gain persistence and elevate privileges by executing malicious content triggered by the Event Monitor Daemon (emond).&lt;br /&gt;['T1074.002']: Monitor executed commands and arguments arguments for actions that could be taken to collect and combine files. Remote access tools with built-in features may interact directly with the Windows API to gather and copy to a location. Data may also be acquired and staged through Windows system management tools such as Windows Management Instrumentation and PowerShell.&lt;br /&gt;['T1486']: Monitor executed commands and arguments for actions involved in data destruction activity, such as vssadmin, wbadmin, and bcdedit&lt;br /&gt;['T1561.002']: Monitor executed commands and arguments that may corrupt or wipe the disk data structures on a hard drive necessary to boot a system; targeting specific critical systems or in large numbers in a network to interrupt availability to system and network resources.&lt;br /&gt;['T1556.005']: Monitor command-line usage for &lt;code&gt;-AllowReversiblePasswordEncryption $true&lt;/code&gt; or other actions that could be related to malicious tampering of user settings (i.e. [Group Policy Modification](https://attack.mitre.org/techniques/T1484/001)). &lt;br /&gt;['T1021.006']: Monitor executed commands and arguments that may invoke a WinRM script to correlate it with other related events.(Citation: Medium Detecting Lateral Movement)&lt;br /&gt;['T1564.001']: Monitor the file system and shell commands for files being created with a leading "." and the Windows command-line use of attrib.exe to add the hidden attribute.&lt;br /&gt;['T1615']: Monitor for suspicious use of &lt;code&gt;gpresult&lt;/code&gt;. Monitor for the use of PowerShell functions such as &lt;code&gt;Get-DomainGPO&lt;/code&gt; and &lt;code&gt;Get-DomainGPOLocalGroup&lt;/code&gt; and processes spawning with command-line arguments containing &lt;code&gt;GPOLocalGroup&lt;/code&gt;.&lt;br /&gt;['T1529']: Monitor executed commands and arguments of binaries involved in shutting down or rebooting systems.&lt;br /&gt;['T1053.006']: Monitor executed commands and arguments the 'systemd-run' utility as it may be used to create timers&lt;br /&gt;['T1137.004']: Monitor executed commands and arguments that may abuse Microsoft Outlook's Home Page feature to obtain persistence on a compromised system. Microsoft has released a PowerShell script to safely gather mail forwarding rules and custom forms in your mail environment as well as steps to interpret the output.(Citation: Microsoft Detect Outlook Forms)&lt;br /&gt;['T1037.002']: Monitor executed commands with arguments to install or modify login hooks.&lt;br /&gt;['T1037.004']: Monitor executed commands and arguments resulting from RC scripts for unusual or unknown applications or behavior&lt;br /&gt;['T1070.004']: Monitor executed commands and arguments for actions that could be utilized to unlink, rename, or delete files.&lt;br /&gt;['T1614']: Monitor executed commands and arguments that may gather information in an attempt to calculate the geographical location of a victim host.&lt;br /&gt;['T1083']: Monitor executed commands and arguments that may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system.&lt;br /&gt;['T1137.003']: Monitor executed commands and arguments that may abuse Microsoft Outlook forms to obtain persistence on a compromised system. Microsoft has released a PowerShell script to safely gather mail forwarding rules and custom forms in your mail environment as well as steps to interpret the output.(Citation: Microsoft Detect Outlook Forms)&lt;br /&gt;['T1543.001']: Ensure Launch Agent's &lt;code&gt; ProgramArguments &lt;/code&gt; key pointing to executables located in the &lt;code&gt;/tmp&lt;/code&gt; or &lt;code&gt;/shared&lt;/code&gt; folders are in alignment with enterprise policy. Ensure all Launch Agents with the &lt;code&gt;RunAtLoad&lt;/code&gt; key set to &lt;code&gt;true&lt;/code&gt; are in alignment with policy.&lt;br /&gt;['T1059']: Monitor command-line arguments for script execution and subsequent behavior. Actions may be related to network and system information Discovery, Collection, or other scriptable post-compromise behaviors and could be used as indicators of detection leading back to the source script. Scripts are likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. &lt;br /&gt;['T1119']: Monitor executed commands and arguments for actions that could be taken to collect internal data.&lt;br /&gt;['T1016.001']: Monitor executed commands and arguments that may check for Internet connectivity on compromised systems.&lt;br /&gt;['T1137.005']: Monitor executed commands and arguments that may abuse Microsoft Outlook rules to obtain persistence on a compromised system. Microsoft has released a PowerShell script to safely gather mail forwarding rules and custom forms in your mail environment as well as steps to interpret the output.(Citation: Microsoft Detect Outlook Forms) This PowerShell script is ineffective in gathering rules with modified PR_RULE_MSG_NAME and PR_RULE_MSG_PROVIDER properties caused by adversaries using a Microsoft Exchange Server Messaging API Editor (MAPI Editor), so only examination with the Exchange Administration tool MFCMapi can reveal these mail forwarding rules.(Citation: Pfammatter - Hidden Inbox Rules)&lt;br /&gt;['T1137.006']: Monitor executed commands and arguments that may abuse Microsoft Office add-ins to obtain persistence on a compromised system. &lt;br /&gt;['T1218.001']: Monitor executed commands and arguments that may forge SAML tokens with any permissions claims and lifetimes if they possess a valid SAML token-signing certificate.(Citation: Microsoft SolarWinds Steps)&lt;br /&gt;['T1012']: Monitor executed commands and arguments for actions that may interact with the Windows Registry to gather information about the system, configuration, and installed software.&lt;br /&gt;['T1003.004']: Monitor executed commands and arguments that may access to a host may attempt to access Local Security Authority (LSA) secrets. Remote access tools may contain built-in features or incorporate existing tools like Mimikatz. PowerShell scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module,(Citation: Powersploit) which may require additional logging features to be configured in the operating system to collect necessary information for analysis.&lt;br /&gt;['T1204']: Monitor the execution of and command-line arguments for applications that may be used by an adversary to gain Initial Access that require user interaction. This includes compression applications, such as those for zip files, that can be used to [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140) in payloads.&lt;br /&gt;['T1543.004']: Some legitimate LaunchDaemons point to unsigned code that could be exploited. For Launch Daemons with the &lt;code&gt;RunAtLoad&lt;/code&gt; parameter set to true, ensure the &lt;code&gt;Program&lt;/code&gt; parameter points to signed code or executables are in alignment with enterprise policy. Some parameters are interchangeable with others, such as &lt;code&gt;Program&lt;/code&gt; and &lt;code&gt;ProgramArguments&lt;/code&gt; parameters but one must be present. (Citation: launchd Keywords for plists)&lt;br /&gt;['T1496']: Monitor executed commands and arguments that may indicate common cryptomining functionality &lt;br /&gt;['T1574.012']: Extra scrutiny should be placed on suspicious modification of Registry keys such as COR_ENABLE_PROFILING, COR_PROFILER, and COR_PROFILER_PATH by command line tools like wmic.exe, setx.exe, and [Reg](https://attack.mitre.org/software/S0075). Monitoring for command-line arguments indicating a change to COR_PROFILER variables may aid in detection.&lt;br /&gt;['T1046']: Monitor executed commands and arguments that may attempt to get a listing of services running on remote hosts, including those that may be vulnerable to remote software exploitation.&lt;br /&gt;['T1222']: Many of the commands used to modify ACLs and file/directory ownership are built-in system utilities and may generate a high false positive alert rate, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible.&lt;br /&gt;['T1115']: Monitor executed commands and arguments to collect data stored in the clipboard from users copying information within or between applications.&lt;br /&gt;['T1087.003']: Monitor for execution of commands and arguments associated with enumeration or information gathering of email addresses and accounts such as &lt;code&gt;Get-AddressList&lt;/code&gt;, &lt;code&gt;Get-GlobalAddressList&lt;/code&gt;, and &lt;code&gt;Get-OfflineAddressBook&lt;/code&gt;.&lt;br /&gt;['T1052']: Monitor executed commands and arguments that may attempt to exfiltrate data via a physical medium, such as a removable drive.&lt;br /&gt;['T1552.003']: While users do typically rely on their history of commands, they often access this history through other utilities like "history" instead of commands like &lt;code&gt;cat ~/.bash_history&lt;/code&gt;.&lt;br /&gt;['T1003.005']: Monitor executed commands and arguments that may attempt to access cached domain credentials used to allow authentication to occur in the event a domain controller is unavailable.(Citation: Microsoft - Cached Creds). Remote access tools may contain built-in features or incorporate existing tools like Mimikatz. PowerShell scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module,(Citation: Powersploit) which may require additional logging features to be configured in the operating system to collect necessary information for analysis.
Detection of compromised https://attack.mitre.org/techniques/T1078 in-use by adversaries may help as well.&lt;br /&gt;['T1546']: Monitor executed commands and arguments that may establish persistence and/or elevate privileges using system mechanisms that trigger execution based on specific events.&lt;br /&gt;['T1036.004']: Monitor executed commands and arguments that may attempt to manipulate the name of a task or service to make it appear legitimate or benign.&lt;br /&gt;['T1059.006']: Monitor systems for abnormal Python usage and python.exe behavior, which could be an indicator of malicious activity. Understanding standard usage patterns is important to avoid a high number of false positives. If scripting is restricted for normal users, then any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent. Scripts are likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Monitor executed commands and arguments that may abuse Python commands and scripts for execution.&lt;br /&gt;['T1053']: Monitor executed commands and arguments that may abuse task scheduling functionality to facilitate initial or recurring execution of malicious code.&lt;br /&gt;['T1087']: Monitor logs and other sources of command execution history for actions that could be taken to gather information about accounts, including the use of calls to cloud APIs that perform account discovery.

System and network discovery techniques normally occur throughout an operation as an adversary learns the environment, and also to an extent in normal network operations. Therefore discovery data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.&lt;br /&gt;['T1480']: Monitor executed commands and arguments that may gather information about the victim's business relationships that can be used during targeting. Detecting the use of guardrails may be difficult depending on the implementation.&lt;br /&gt;['T1176']: Monitor executed commands and arguments for usage of the profiles tool, such as profiles install -type=configuration.&lt;br /&gt;['T1003.001']: Monitor executed commands and arguments that may attempt to access credential material stored in the process memory of the Local Security Authority Subsystem Service (LSASS). Remote access tools may contain built-in features or incorporate existing tools like Mimikatz. PowerShell scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module,(Citation: Powersploit) which may require additional logging features to be configured in the operating system to collect necessary information for analysis.&lt;br /&gt;['T1218.003']: Monitor executed commands and arguments that may gather information about the victim's hosts that can be used during targeting.&lt;br /&gt;['T1136.001']: Monitor executed commands and arguments for actions that are associated with local account creation, such as net user /add , useradd , and dscl -create&lt;br /&gt;['T1021.002']: Monitor executed commands and arguments that connect to remote shares, such as [Net](https://attack.mitre.org/software/S0039), on the command-line interface and Discovery techniques that could be used to find remotely accessible systems.(Citation: Medium Detecting WMI Persistence)&lt;br /&gt;['T1059.001']: If proper execution policy is set, adversaries will likely be able to define their own execution policy if they obtain administrator or system access, either through the Registry or at the command line. This change in policy on a system may be a way to detect malicious use of PowerShell. If PowerShell is not used in an environment, then simply looking for PowerShell execution may detect malicious activity. It is also beneficial to turn on PowerShell logging to gain increased fidelity in what occurs during execution (which is applied to .NET invocations). (Citation: Malware Archaeology PowerShell Cheat Sheet) PowerShell 5.0 introduced enhanced logging capabilities, and some of those features have since been added to PowerShell 4.0. Earlier versions of PowerShell do not have many logging features.(Citation: FireEye PowerShell Logging 2016) An organization can gather PowerShell execution details in a data analytic platform to supplement it with other data.&lt;br /&gt;['T1070.002']: Monitor executed commands and arguments for actions that could be taken to remove or overwrite system logs.&lt;br /&gt;['T1005']: Monitor executed commands and arguments that may search and collect local system sources, such as file systems or local databases, to find files of interest and sensitive data prior to Exfiltration. Remote access tools with built-in features may interact directly with the Windows API to gather data. Data may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).&lt;br /&gt;['T1546.003']: Monitor executed commands and arguments that can be used to register WMI persistence, such as the &lt;code&gt; Register-WmiEvent&lt;/code&gt; [PowerShell](https://attack.mitre.org/techniques/T1059/001) cmdlet (Citation: Microsoft Register-WmiEvent)&lt;br /&gt;['T1518.001']: Monitor executed commands and arguments that may attempt to get a listing of security software, configurations, defensive tools, and sensors that are installed on a system or in a cloud environment.&lt;br /&gt;['T1003.008']: Monitor executed commands and arguments that may attempt to dump the contents of &lt;code&gt;/etc/passwd&lt;/code&gt; and &lt;code&gt;/etc/shadow&lt;/code&gt; to enable offline password cracking.&lt;br /&gt;['T1087.001']: Monitor for execution of commands and arguments associated with enumeration or information gathering of local accounts and groups such as &lt;code&gt;net user&lt;/code&gt;, &lt;code&gt;net account&lt;/code&gt;, &lt;code&gt;net localgroup&lt;/code&gt;, &lt;code&gt;Get-LocalUser&lt;/code&gt;, and &lt;code&gt; dscl&lt;/code&gt;.

System and network discovery techniques normally occur throughout an operation as an adversary learns the environment, and also to an extent in normal network operations. Therefore discovery data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.&lt;br /&gt;['T1036']: Monitor executed commands and arguments that may attempt to manipulate features of their artifacts to make them appear legitimate or benign to users and/or security tools. (Citation: Twitter ItsReallyNick Masquerading Update)&lt;br /&gt;['T1053.003']: Monitor executed atq command and ensure IP addresses stored in the SSH_CONNECTION and SSH_CLIENT variables, machines that created the jobs, are trusted hosts. All at jobs are stored in /var/spool/cron/atjobs/.&lt;br /&gt;['T1114']: Monitor executed processes and command-line arguments for actions that could be taken to gather local email files. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.&lt;br /&gt;['T1120']: Monitor executed commands and arguments that may attempt to gather information about attached peripheral devices and components connected to a computer system.&lt;br /&gt;['T1011']: Monitor executed commands and arguments that may attempt to exfiltrate data over a different network medium than the command and control channel&lt;br /&gt;['T1561.001']: Monitor executed commands and arguments that may erase the contents of storage devices on specific systems or in large numbers in a network to interrupt availability to system and network resources.&lt;br /&gt;['T1124']: Monitor executed commands and arguments for actions that may gather the system time and/or time zone from a local or remote system.&lt;br /&gt;['T1069.001']: Monitor for executed commands and arguments that may attempt to find local system groups and permission settings.&lt;br /&gt;['T1052.001']: Monitor executed commands and arguments that may attempt to exfiltrate data over a USB connected physical device.&lt;br /&gt;['T1564.009']: Monitor executed commands and arguments that are leveraging the use of resource forks, especially those immediately followed by potentially malicious activity such as creating network connections.&lt;br /&gt;['T1070.003']: Monitor executed commands and arguments for actions that could be taken to clear command history, such as &lt;code&gt;Clear-History&lt;/code&gt; on Windows, or to disable writing command history, such as &lt;code&gt;history -c&lt;/code&gt; in bash/zsh.&lt;br /&gt;['T1543']: Command-line invocation of tools capable of modifying services may be unusual, depending on how systems are typically used in a particular environment. Look for abnormal process call trees from known services and for execution of other commands that could relate to Discovery or other adversary techniques.&lt;br /&gt;['T1137']: Monitor executed commands and arguments that may leverage Microsoft Office-based applications for persistence between startups. Microsoft has released a PowerShell script to safely gather mail forwarding rules and custom forms in your mail environment as well as steps to interpret the output.(Citation: Microsoft Detect Outlook Forms) SensePost, whose tool [Ruler](https://attack.mitre.org/software/S0358) can be used to carry out malicious rules, forms, and Home Page attacks, has released a tool to detect Ruler usage.(Citation: SensePost NotRuler)&lt;br /&gt;['T1564.006']: Consider monitoring for commands and arguments that may be atypical for benign use of virtualization software. Usage of virtualization binaries or command-line arguments associated with running a silent installation may be especially suspect (ex. &lt;code&gt;-silent&lt;/code&gt;, &lt;code&gt;-ignore-reboot&lt;/code&gt;), as well as those associated with running a headless (in the background with no UI) virtual instance (ex. &lt;code&gt;VBoxManage startvm $VM --type headless&lt;/code&gt;).(Citation: Shadowbunny VM Defense Evasion) Similarly, monitoring command line arguments which suppress notifications may highlight potentially malicious activity (ex. &lt;code&gt;VBoxManage.exe setextradata global GUI/SuppressMessages "all"&lt;/code&gt;). Monitor for commands which enable hypervisors such as Hyper-V.&lt;br /&gt;['T1567.002']: Monitor executed commands and arguments that may exfiltrate data to a cloud storage service rather than over their primary command and control channel.&lt;br /&gt;['T1114.002']: Monitor executed commands and arguments for actions that may target an Exchange server, Office 365, or Google Workspace to collect sensitive information.&lt;br /&gt;['T1218.007']: Command arguments used before and after the invocation of msiexec.exe may also be useful in determining the origin and purpose of the MSI files or DLLs being executed.&lt;br /&gt;['T1047']: Monitor executed commands and arguments for actions that are used to perform remote behavior&lt;br /&gt;['T1569.002']: Monitor executed commands and arguments that may abuse the Windows service control manager to execute malicious commands or payloads.&lt;br /&gt;['T1006']: Monitor executed commands and arguments that could be taken to copy files from the logical drive and evade common file system protections. Since this technique may also be used through [PowerShell](https://attack.mitre.org/techniques/T1059/001), additional logging of PowerShell scripts is recommended.&lt;br /&gt;['T1614.001']: Monitor executed commands and arguments that may attempt to gather information about the system language of a victim in order to infer the geographical location of that host.&lt;br /&gt;['T1546.015']: Monitor executed commands and arguments that may establish persistence by executing malicious content triggered by hijacked references to Component Object Model (COM) objects.&lt;br /&gt;['T1049']: Monitor executed commands and arguments that may attempt to get a listing of network connections to or from the compromised system they are currently accessing or from remote systems by querying for information over the network. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).&lt;br /&gt;['T1569']: Monitor for command line invocations of tools capable of modifying services that doesn't correspond to normal usage patterns and known software, patch cycles, etc.&lt;br /&gt;['T1059.007']: Scripting execution is likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Monitor processes and command-line arguments for execution and subsequent behavior. Actions may be related to network and system information [Discovery](https://attack.mitre.org/tactics/TA0007), [Collection](https://attack.mitre.org/tactics/TA0009), or other programmable post-compromise behaviors and could be used as indicators of detection leading back to the source. Monitor for execution of JXA through &lt;code&gt;osascript&lt;/code&gt; and usage of &lt;code&gt;OSAScript&lt;/code&gt; API that may be related to other suspicious behavior occurring on the system. &lt;br /&gt;['T1622']: Monitor executed commands and arguments that may employ various means to detect and avoid debugged environments. Detecting actions related to debugger identification may be difficult depending on the adversary's implementation and monitoring required.&lt;br /&gt;['T1485']: Monitor executed commands and arguments for binaries that could be involved in data destruction activity, such as SDelete.&lt;br /&gt;['T1218.004']: Monitor executed commands and arguments used before and after the InstallUtil.exe invocation may also be useful in determining the origin and purpose of the binary being executed.&lt;br /&gt;['T1218']: Monitor executed commands and arguments that may forge credential materials that can be used to gain access to web applications or Internet services.&lt;br /&gt;['T1574']: Monitor executed commands and arguments that may execute their own malicious payloads by hijacking the way operating systems run programs.&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Audit OSX" url="https://www.scip.ch/en/?labs.20150108"/>
            <reference name="Confluence Linux Command  Line" url="https://confluence.atlassian.com/confkb/how-to-enable-command-line-audit-logging-in-linux-956166545.html"/>
            <reference name="Mitre ATT&amp;CK Data Source DS0017" url="https://attack.mitre.org/data-sources/DS0017"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:01.674">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-DS0022" name="File" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>A computer resource object, managed by the I/O system, for storing data (such as images, text, videos, computer programs, or any wide variety of other media).(Citation: Microsoft File Mgmt)&lt;br /&gt;&lt;p&gt;Detailed detections per technique:&lt;/p&gt;&lt;br /&gt;['T1070.002']: Monitor for unexpected deletion of a system log file, typically stored in /var/logs or /Library/Logs. &lt;br /&gt;['T1485']: Monitor for unexpected deletion to a file (ex: Sysmon EID 23) &lt;br /&gt;['T1554']: Monitor for unexpected deletion of  client software binaries to establish persistent access to systems.&lt;br /&gt;['T1070']: Monitor for a file that may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined malware.&lt;br /&gt;['T1070.001']: Monitor for unexpected deletion of Windows event logs (via native binaries) and may also generate an alterable event (Event ID 1102: "The audit log was cleared")&lt;br /&gt;['T1565.003']: Monitor for unexpected deletion of a file in order to manipulate external outcomes or hide activity &lt;br /&gt;['T1490']: The Windows event logs, ex. Event ID 524 indicating a system catalog was deleted, may contain entries associated with suspicious activity.&lt;br /&gt;['T1070.003']: Monitor for unexpected deletion of a command history file, such as ConsoleHost_history.txt, ~/.zsh_history, or ~/.bash_history.&lt;br /&gt;['T1070.004']: Monitor for unexpected deletion of files from the system&lt;br /&gt;['T1552.006']: Monitor for attempts to access SYSVOL that involve searching for XML files.&lt;br /&gt;['T1114.001']: Monitor for unusual processes accessing local email files that may target user email on local systems to collect sensitive information.&lt;br /&gt;['T1074']: Monitor processes that appear to be reading files from disparate locations and writing them to the same directory or file may be an indication of data being staged, especially if they are suspected of performing encryption or compression on the files, such as 7zip, RAR, ZIP, or zlib.&lt;br /&gt;['T1555.004']: Consider monitoring file reads to Vault locations, &lt;code&gt;&amp;percnt;Systemdrive&amp;percnt;&amp;bsol;Users&amp;bsol;&amp;bsol;&amp;lsqb;Username&amp;rsqb;&amp;bsol;AppData&amp;bsol;Local&amp;bsol;Microsoft&amp;bsol;&amp;bsol;&amp;lsqb;Vault&amp;sol;Credentials&amp;rsqb;&amp;bsol;&lt;/code&gt;, for suspicious activity.(Citation: Malwarebytes The Windows Vault)&lt;br /&gt;['T1552.003']: Monitoring when the user's &lt;code&gt;.bash_history&lt;/code&gt; is read can help alert to suspicious activity.&lt;br /&gt;['T1187']: Monitor for unexpected files used to gather credentials when the files are rendered&lt;br /&gt;['T1011.001']: Monitor for files being accessed that could be related to exfiltration, such as file reads by a process that also has an active network connection. Also monitor for and investigate changes to host adapter settings, such as addition and/or replication of communication interfaces. &lt;br /&gt;['T1020']: Monitor for abnormal access to files (i.e. .pdf, .docx, .jpg, etc.), especially sensitive documents, through the use of automated processing after being gathered during Collection.&lt;br /&gt;['T1048.003']: Monitor files viewed in isolation that may steal data by exfiltrating it over a symmetrically encrypted network protocol other than that of the existing command and control channel.&lt;br /&gt;['T1091']: Monitor for unexpected files accessed on removable media.&lt;br /&gt;['T1555.005']: Monitor file reads that may acquire user credentials from third-party password managers.(Citation: ise Password Manager February 2019)&lt;br /&gt;['T1052']: Monitor file access on removable media that may attempt to exfiltrate data via a physical medium, such as a removable drive.&lt;br /&gt;['T1041']: Monitor for suspicious files (i.e. .pdf, .docx, .jpg, etc.) viewed in isolation that may steal data by exfiltrating it over an existing command and control channel.&lt;br /&gt;['T1555.003']: Identify web browser files that contain credentials such as Google Chrome's Login Data database file: &lt;code&gt;AppData\Local\Google\Chrome\User Data\Default\Login Data&lt;/code&gt;. Monitor file read events of web browser files that contain credentials, especially when the reading process is unrelated to the subject web browser.&lt;br /&gt;['T1018']: Monitor for files (such as &lt;code&gt;/etc/hosts&lt;/code&gt;) being accessed that may attempt to get a listing of other systems by IP address, hostname, or other logical identifier on a network that may be used for Lateral Movement from the current system&lt;br /&gt;['T1025']: Monitor for unexpected/abnormal file accesses to removable media (optical disk drive, USB memory, etc.) connected to the compromised system. &lt;br /&gt;['T1048.001']: Monitor for files viewed in isolation that may steal data by exfiltrating it over a symmetrically encrypted network protocol other than that of the existing command and control channel.&lt;br /&gt;['T1003.003']: Monitor for access or copy of the NTDS.dit.&lt;br /&gt;['T1003.002']: Monitor for hash dumpers opening the Security Accounts Manager (SAM) on the local file system (&lt;code&gt;%SystemRoot%/system32/config/SAM&lt;/code&gt;). Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromised [Valid Accounts](https://attack.mitre.org/techniques/T1078) in-use by adversaries may help as well.&lt;br /&gt;['T1003.007']: Monitor for unexpected access to passwords and hashes stored in memory, processes must open a maps file in the /proc filesystem for the process being analyzed. This file is stored under the path &lt;code&gt;/proc/\/maps&lt;/code&gt;, where the &lt;code&gt;\&lt;/code&gt; directory is the unique pid of the program being interrogated for such authentication data. The AuditD monitoring tool, which ships stock in many Linux distributions, can be used to watch for hostile processes opening this file in the proc file system, alerting on the pid, process name, and arguments of such programs.&lt;br /&gt;['T1003.008']: Monitor for files being accessed that may attempt to dump the contents of &lt;code&gt;/etc/passwd&lt;/code&gt; and &lt;code&gt;/etc/shadow&lt;/code&gt; to enable offline password cracking. The AuditD monitoring tool, which ships stock in many Linux distributions, can be used to watch for hostile processes attempting to access &lt;code&gt;/etc/passwd&lt;/code&gt; and &lt;code&gt;/etc/shadow&lt;/code&gt;, alerting on the pid, process name, and arguments of such programs.&lt;br /&gt;['T1555']: Monitor for files being accessed that may search for common password storage locations to obtain user credentials.&lt;br /&gt;['T1567']: Monitor for files being accessed by an existing, legitimate external Web service to exfiltrate data rather than their primary command and control channel.&lt;br /&gt;['T1539']: Monitor for an attempt by a user to gain access to a network or computing resource, often by providing credentials to cloud service management consoles. Some cloud providers, such as AWS, provide distinct log events for login attempts to the management console.&lt;br /&gt;['T1567.002']: Monitor for files being accessed to exfiltrate data to a cloud storage service rather than over their primary command and control channel.&lt;br /&gt;['T1114']: Monitor for unusual processes access of local system email files for Exfiltration, unusual processes connecting to an email server within a network, or unusual access patterns or authentication attempts on a public-facing webmail server may all be indicators of malicious activity.&lt;br /&gt;['T1048']: Monitor for suspicious files (i.e. .pdf, .docx, .jpg, etc.) viewed in isolation that may steal data by exfiltrating it over a different protocol than that of the existing command and control channel.&lt;br /&gt;['T1217']: Monitor for unexpected browser bookmarks viewed in isolation, this showcases part of a chain of behavior that could lead to other activities, such as Collection and Exfiltration, based on the information obtained.&lt;br /&gt;['T1052.001']: Monitor file access on removable media that may attempt to exfiltrate data over a USB connected physical device.&lt;br /&gt;['T1555.001']: Monitor for Keychain files being accessed that may be related to malicious credential collection.&lt;br /&gt;['T1033']: Monitor for hash dumpers opening the Security Accounts Manager (SAM) on the local file system (&lt;code&gt;%SystemRoot%/system32/config/SAM&lt;/code&gt;). Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromised  [Valid Accounts](https://attack.mitre.org/techniques/T1078) in-use by adversaries may help as well.&lt;br /&gt;['T1003']: Monitor for hash dumpers opening the Security Accounts Manager (SAM) on the local file system (&lt;code&gt;%SystemRoot%/system32/config/SAM&lt;/code&gt;). Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromised ( LinkById: T1078) in-use by adversaries may help as well.&lt;br /&gt;['T1119']: Monitor for unexpected files (i.e. .pdf, .docx, .jpg, etc.) viewed for collecting internal data.&lt;br /&gt;['T1039']: Monitor for unexpected files (i.e. .pdf, .docx, .jpg, etc.)  interacting with network shares.&lt;br /&gt;['T1552.004']: Monitor access to files and directories related to cryptographic keys and certificates as a means for potentially detecting access patterns that may indicate collection and exfiltration activity. &lt;br /&gt;['T1558']: Monitor for unexpected processes interacting with lsass.exe.(Citation: Medium Detecting Attempts to Steal Passwords from Memory) Common credential dumpers such as  [Mimikatz](https://attack.mitre.org/software/S0002) access the LSA Subsystem Service (LSASS) process by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details, including Kerberos tickets, are stored. Monitor for unusual processes accessing &lt;code&gt;secrets.ldb&lt;/code&gt; and &lt;code&gt;.secrets.mkey&lt;/code&gt; located in &lt;code&gt;/var/lib/sss/secrets/&lt;/code&gt;.&lt;br /&gt;['T1087']: Monitor access to file resources that contain local accounts and groups information such as &lt;code&gt;/etc/passwd&lt;/code&gt;, &lt;code&gt;/Users&lt;/code&gt; directories, and the SAM database. 

If access requires high privileges, look for non-admin objects (such as users or processes) attempting to access restricted file resources.&lt;br /&gt;['T1552']: Monitor for suspicious file access activity, specifically indications that a process is reading multiple files in a short amount of time and/or using command-line arguments indicative of searching for credential material (ex: regex patterns). These may be indicators of automated/scripted credential access behavior. Monitoring when the user's &lt;code&gt;.bash_history&lt;/code&gt; is read can help alert to suspicious activity. While users do typically rely on their history of commands, they often access this history through other utilities like "history" instead of commands like &lt;code&gt;cat ~/.bash_history&lt;/code&gt;.&lt;br /&gt;['T1011']: Monitor for files being accessed that could be related to exfiltration, such as file reads by a process that also has an active network connection.&lt;br /&gt;['T1567.001']: Monitor for files being accessed to exfiltrate data to a code repository rather than over their primary command and control channel.&lt;br /&gt;['T1087.001']: Monitor access to file resources that contain local accounts and groups information such as &lt;code&gt;/etc/passwd&lt;/code&gt;, &lt;code&gt;/Users&lt;/code&gt; directories, and the Windows SAM database. 

If access requires high privileges, look for non-admin objects (such as users or processes) attempting to access restricted file resources.&lt;br /&gt;['T1005']: Monitor for unexpected/abnormal access to files that may be malicious collection of local data, such as user files (pdf, .docx, .jpg, etc.) or local databases.&lt;br /&gt;['T1552.001']: Monitor for files being accessed that may search local file systems and remote file shares for files containing insecurely stored credentials. While detecting adversaries accessing these files may be difficult without knowing they exist in the first place, it may be possible to detect adversary use of credentials they have obtained. &lt;br /&gt;['T1053.005']: Monitor Windows Task Scheduler stores in %systemroot%\System32\Tasks for change entries related to scheduled tasks that do not correlate with known software, patch cycles, etc.&lt;br /&gt;['T1574.001']: Monitor for changed made to .manifest/.local redirection files, or file systems for moving, renaming, replacing, or modifying DLLs. Changes in the set of DLLs that are loaded by a process (compared with past behavior) that do not correlate with known software, patches, etc., are suspicious.&lt;br /&gt;['T1574.005']: Monitor for changes to binaries and service executables that may normally occur during software updates. &lt;br /&gt;['T1547.009']: Since a shortcut's target path likely will not change, modifications to shortcut files that do not correlate with known software changes, patches, removal, etc., may be suspicious. Analysis should attempt to relate shortcut file change events to other potentially suspicious events based on known adversary behavior such as process launches of unknown executables that make network connections.&lt;br /&gt;['T1037']: Monitor for changes made to files that are modified by unusual accounts outside of normal administration duties.&lt;br /&gt;['T1564.002']: Monitor for changes made to files that may use hidden users to mask the presence of user accounts they create or modify. Monitor for changes made to the &lt;code&gt;/Library/Preferences/com.apple.loginwindow&lt;/code&gt; plist file for unexpected modifications to the &lt;code&gt; Hide500Users&lt;/code&gt; key value on macOS.(Citation: Cybereason OSX Pirrit)&lt;br /&gt;['T1036']: Monitor for changes made to files outside of an update or patch that may attempt to manipulate features of their artifacts to make them appear legitimate or benign to users and/or security tools.&lt;br /&gt;['T1556.004']: Monitor for changes made to the checksum of the operating system file and verifying the image of the operating system in memory.(Citation: Cisco IOS Software Integrity Assurance - Image File Verification)(Citation: Cisco IOS Software Integrity Assurance - Run-Time Memory Verification) Detection of this behavior may be difficult, detection efforts may be focused on closely related adversary behaviors, such as Modify System Image.&lt;br /&gt;['T1600']: File Modification&lt;br /&gt;['T1548.003']: On Linux, auditd can alert every time a user's actual ID and effective ID are different (this is what happens when you sudo). This technique is abusing normal functionality in macOS and Linux systems, but sudo has the ability to log all input and output based on the &lt;code&gt;LOG_INPUT&lt;/code&gt; and &lt;code&gt;LOG_OUTPUT&lt;/code&gt; directives in the &lt;code&gt;/etc/sudoers&lt;/code&gt; file.&lt;br /&gt;['T1543.001']: Launch Agents also require files on disk for persistence which can also be monitored via other file monitoring applications.&lt;br /&gt;['T1053.003']: Monitor for changes made to files for unexpected modifications to access permissions and attributes &lt;br /&gt;['T1070']: Monitor for changes made to a file may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined malware.&lt;br /&gt;['T1056']: Monitor for changes made to files for unexpected modifications to access permissions and attributes  &lt;br /&gt;['T1546.011']: Monitor for changes made to files that may establish persistence and/or elevate privileges by executing malicious content triggered by application shims.&lt;br /&gt;['T1574.010']: Monitor for modification of binaries and service executables that do not occur during a regular software update or an update scheduled by the organization. Modification of files considers actions such as renaming and directory moving.&lt;br /&gt;['T1505']: Monitor for changes made to files that may abuse legitimate extensible development features of servers to establish persistent access to systems.&lt;br /&gt;['T1053.006']: Monitor for changes made to systemd timer unit files for unexpected modification events within the /etc/systemd/system, /usr/lib/systemd/system/, and ~/.config/systemd/user/ directories, as well as associated symbolic links&lt;br /&gt;['T1056.003']: Monitor for changes made to detect changes to files in the Web directory for organization login pages that do not match with authorized updates to the Web server's content.&lt;br /&gt;['T1546.002']: Monitor for changes made to files that may establish persistence by executing malicious content triggered by user inactivity.&lt;br /&gt;['T1546.013']: Locations where &lt;code&gt;profile.ps1&lt;/code&gt; can be stored should be monitored for modifications. (Citation: Malware Archaeology PowerShell Cheat Sheet) Example profile locations include:
* &lt;code&gt;$PsHome\Profile.ps1&lt;/code&gt;
* &lt;code&gt;$PsHome\Microsoft.{HostProgram}_profile.ps1&lt;/code&gt;
* &lt;code&gt;$Home\My Documents\PowerShell\Profile.ps1&lt;/code&gt;
* &lt;code&gt;$Home\My Documents\PowerShell\Microsoft.{HostProgram}_profile.ps1&lt;/code&gt;&lt;br /&gt;['T1564.003']: Monitor for changes made to files that may use hidden windows to conceal malicious activity from the plain sight of users. In MacOS, plist files are ASCII text files with a specific format, so they're relatively easy to parse. File monitoring can check for the &lt;code&gt;apple.awt.UIElement&lt;/code&gt; or any other suspicious plist tag in plist files and flag them.&lt;br /&gt;['T1547.001']: Monitor the start folder for additions or changes. Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including the startup folders. (Citation: TechNet Autoruns)&lt;br /&gt;['T1565.003']: Monitor for unexpected files with manipulated data in order to manipulate external outcomes or hide activity&lt;br /&gt;['T1070.006']: Monitor for unexpected modifications to file timestamps &lt;br /&gt;['T1489']: Monitor for changes made to files that may stop or disable services on a system to render those services unavailable to legitimate users.&lt;br /&gt;['T1564.005']: Detecting the use of a hidden file system may be exceptionally difficult depending on the implementation. Emphasis may be placed on detecting related aspects of the adversary lifecycle, such as how malware interacts with the hidden file system or how a hidden file system is loaded.&lt;br /&gt;['T1037.002']: Monitor for changes to login hook files (&lt;code&gt;/Library/Preferences/com.apple.loginwindow.plist&lt;/code&gt;), especially by unusual accounts outside of normal administration duties.&lt;br /&gt;['T1574.009']: Monitor for changes made to files that may execute their own malicious payloads by hijacking vulnerable file path references.&lt;br /&gt;['T1491.002']: Monitor external websites for unplanned content changes.&lt;br /&gt;['T1486']: Monitor for changes made to files in user directories.&lt;br /&gt;['T1055.009']: Monitor for changes made to /proc files that may inject malicious code into processes via the /proc filesystem in order to evade process-based defenses as well as possibly elevate privileges. Users should not have permission to modify these in most cases. &lt;br /&gt;['T1098']: Monitor for changes made to files related to account settings, such as /etc/ssh/sshd_config and the authorized_keys file for each user on a system.&lt;br /&gt;['T1564.004']: There are many ways to create and interact with ADSs using Windows utilities. Monitor for operations (execution, copies, etc.) with file names that contain colons. This syntax (ex: &lt;code&gt;file.ext:ads[.ext]&lt;/code&gt;) is commonly associated with ADSs. (Citation: Microsoft ADS Mar 2014) (Citation: Oddvar Moe ADS1 Jan 2018) (Citation: Oddvar Moe ADS2 Apr 2018) For a more exhaustive list of utilities that can be used to execute and create ADSs, see https://gist.github.com/api0cradle/cdd2d0d0ec9abb686f0e89306e277b8f.&lt;br /&gt;['T1600.002']: There is no documented method for defenders to directly identify behaviors that reduce encryption key space. Detection efforts may be focused on closely related adversary behaviors, such as Modify System Image and Network Device CLI. Some detection methods require vendor support to aid in investigation.&lt;br /&gt;['T1187']: Monitor for changes made to the .LNK, .SCF, or any other files on systems and within virtual environments that contain resources that point to external network resources &lt;br /&gt;['T1543.004']: Monitor files for changes that may create or modify Launch Daemons to execute malicious payloads as part of persistence.&lt;br /&gt;['T1546.004']: Monitor for changes to &lt;code&gt;/etc/profile&lt;/code&gt; and &lt;code&gt;/etc/profile.d&lt;/code&gt;, these files should only be modified by system administrators. MacOS users can leverage Endpoint Security Framework file events monitoring these specific files.(Citation: ESF_filemonitor)&lt;br /&gt;['T1098.004']: Monitor for changes made to detect changes made to the authorized_keys file for each user on a system. Monitor for changes to and suspicious processes modifiying /etc/ssh/sshd_config.&lt;br /&gt;['T1548']: On Linux, auditd can alert every time a user's actual ID and effective ID are different (this is what happens when you sudo). This technique is abusing normal functionality in macOS and Linux systems, but sudo has the ability to log all input and output based on the &lt;code&gt;LOG_INPUT&lt;/code&gt; and &lt;code&gt;LOG_OUTPUT&lt;/code&gt; directives in the &lt;code&gt;/etc/sudoers&lt;/code&gt; file. Consider monitoring for &lt;code&gt;/usr/libexec/security_authtrampoline&lt;/code&gt; executions which may indicate that AuthorizationExecuteWithPrivileges is being executed. MacOS system logs may also indicate when AuthorizationExecuteWithPrivileges is being called.&lt;br /&gt;['T1037.004']: Monitor for changes made to files for unexpected modifications to RC scripts in the /etc/ directory&lt;br /&gt;['T1554']: Monitor changes to client software that do not correlate with known software or patch cycles.&lt;br /&gt;['T1070.002']: Monitor for changes made to system log files, typically stored in  /var/log or /Library/Logs, for unexpected modifications to access permissions and attributes &lt;br /&gt;['T1055']: Monitor for changes made to files that may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges.&lt;br /&gt;['T1036.003']: Monitor for changes made to files for unexpected modifications to file names that are mismatched between the file name on disk and that of the binary's PE metadata. This is a likely indicator that a binary was renamed after it was compiled.  &lt;br /&gt;['T1547.015']: All login items created via shared file lists are viewable by using the System Preferences GUI or in the &lt;code&gt;~/Library/Application Support/com.apple.backgroundtaskmanagementagent/backgrounditems.btm&lt;/code&gt; file.(Citation: Open Login Items Apple)(Citation: Startup Items Eclectic)(Citation: objsee block blocking login items)(Citation: sentinelone macos persist Jun 2019) These locations should be monitored and audited.&lt;br /&gt;['T1574']: Monitor file systems for moving, renaming, replacing, or modifying DLLs. Changes in the set of DLLs that are loaded by a process (compared with past behavior) that do not correlate with known software, patches, etc., are suspicious. Modifications to or creation of .manifest and .local redirection files that do not correlate with software updates are suspicious.&lt;br /&gt;['T1546']: Monitor for changes made to files that may establish persistence and/or elevate privileges using system mechanisms that trigger execution based on specific events.&lt;br /&gt;['T1556']: Monitor PAM configuration and module paths (ex: /etc/pam.d/) for changes. Use system-integrity tools such as AIDE and monitoring tools such as auditd to monitor PAM files.&lt;br /&gt;['T1137.002']: Monitor for changes made to files that may abuse the Microsoft Office "Office Test" Registry key to obtain persistence on a compromised system.&lt;br /&gt;['T1564']: Monitor for changes made to files that may attempt to hide artifacts associated with their behaviors to evade detection.&lt;br /&gt;['T1547.006']: Monitor for changes made to files that may modify the kernel to automatically execute programs on system boot.&lt;br /&gt;['T1574.006']: Monitor for changes to environment variables and files associated with loading shared libraries such as LD_PRELOAD on Linux and DYLD_INSERT_LIBRARIES on macOS.&lt;br /&gt;['T1553']: Periodically baseline registered SIPs and trust providers (Registry entries and files on disk), specifically looking for new, modified, or non-Microsoft entries.(Citation: SpectorOps Subverting Trust Sept 2017) Also analyze Autoruns data for oddities and anomalies, specifically malicious files attempting persistent execution by hiding within auto-starting locations. Autoruns will hide entries signed by Microsoft or Windows by default, so ensure "Hide Microsoft Entries" and "Hide Windows Entries" are both deselected.(Citation: SpectorOps Subverting Trust Sept 2017)

On macOS, the removal of the &lt;code&gt;com.apple.quarantine&lt;/code&gt; flag by a user instead of the operating system is a suspicious action and should be examined further. Also monitor software update frameworks that may strip this flag when performing updates.&lt;br /&gt;['T1137.006']: Monitor for changes made to files that may abuse Microsoft Office add-ins to obtain persistence on a compromised system.&lt;br /&gt;['T1546.008']: Monitor for changes made to files that may establish persistence and/or elevate privileges by executing malicious content triggered by accessibility features. Changes to accessibility utility binaries or binary paths that do not correlate with known software, patch cycles, etc., are suspicious.&lt;br /&gt;['T1546.006']: Monitor file systems for changes to application binaries and invalid checksums/signatures.&lt;br /&gt;['T1137']: Monitor for changes made to files that may leverage Microsoft Office-based applications for persistence between startups.&lt;br /&gt;['T1553.003']: Periodically baseline registered SIPs and trust providers (Registry entries and files on disk), specifically looking for new, modified, or non-Microsoft entries.(Citation: SpectorOps Subverting Trust Sept 2017) Also analyze Autoruns data for oddities and anomalies, specifically malicious files attempting persistent execution by hiding within auto-starting locations. Autoruns will hide entries signed by Microsoft or Windows by default, so ensure "Hide Microsoft Entries" and "Hide Windows Entries" are both deselected.(Citation: SpectorOps Subverting Trust Sept 2017)&lt;br /&gt;['T1037.003']: Monitor for changes made to files for unexpected modifications to unusual accounts outside of normal administration duties  &lt;br /&gt;['T1569.001']: Every Launch Agent and Launch Daemon must have a corresponding plist file on disk which can be monitored. Plist files are located in the root, system, and users &lt;code&gt;/Library/LaunchAgents&lt;/code&gt; or &lt;code&gt;/Library/LaunchDaemons&lt;/code&gt; folders. [Launch Agent](https://attack.mitre.org/techniques/T1543/001) or [Launch Daemon](https://attack.mitre.org/techniques/T1543/004) with executable paths pointing to /tmp and /Shared folders locations are potentially suspicious.&lt;br /&gt;['T1543']: Monitor for changes to files associated with system-level processes.&lt;br /&gt;['T1569']: Monitor for changes made to files that may abuse system services or daemons to execute commands or programs.&lt;br /&gt;['T1547']: Monitor for changes made to files that may configure system settings to automatically execute a program during system boot or logon to maintain persistence or gain higher-level privileges on compromised systems.&lt;br /&gt;['T1505.005']: Monitor unexpected changes and/or interactions with &lt;code&gt;termsrv.dll&lt;/code&gt;, which is typically stored in &lt;code&gt;%SystemRoot%\System32\&lt;/code&gt;.&lt;br /&gt;['T1546.005']: Monitor for changes made to files that may establish persistence by executing malicious content triggered by an interrupt signal.&lt;br /&gt;['T1543.002']: Systemd service unit files may be detected by auditing file creation and modification events within the &lt;code&gt;/etc/systemd/system&lt;/code&gt;, &lt;code&gt;/usr/lib/systemd/system/&lt;/code&gt;, and &lt;code&gt;/home/&lt;username&gt;/.config/systemd/user/&lt;/code&gt; directories, as well as associated symbolic links&lt;br /&gt;['T1505.003']: Monitor for changes made to files that may backdoor web servers with web shells to establish persistent access to systems.&lt;br /&gt;['T1556.001']: Monitor for changes to functions exported from authentication-related system DLLs (such as cryptdll.dll and samsrv.dll).(Citation: Dell Skeleton)&lt;br /&gt;['T1601.002']: Monitor for changes made to the operating system of a network device because image downgrade may be used in conjunction with  [Patch System Image](https://attack.mitre.org/techniques/T1601/001), it may be appropriate to also verify the integrity of the vendor provided operating system image file.&lt;br /&gt;['T1547.008']: Monitor for changes made to files that may modify or add LSASS drivers to obtain persistence on compromised systems.&lt;br /&gt;['T1553.001']: The removal of the &lt;code&gt;com.apple.quarantine&lt;/code&gt; flag by a user instead of the operating system is a suspicious action and should be examined further. Also monitor software update frameworks that may strip this flag when performing updates.&lt;br /&gt;['T1574.004']: Monitor file systems for moving, renaming, replacing, or modifying dylibs. Changes in the set of dylibs that are loaded by a process (compared to past behavior) that do not correlate with known software, patches, etc., are suspicious. Check the system for multiple dylibs with the same name and monitor which versions have historically been loaded into a process.&lt;br /&gt;['T1485']: Monitor for changes made to a large quantity of files for unexpected modifications in user directories and under C:\Windows\System32\.&lt;br /&gt;['T1037.005']: Monitor for changes made to files for unexpected modifications to /Library/StartupItem folder&lt;br /&gt;['T1647']: Monitor for plist file modification, especially if immediately followed by other suspicious events such as code execution from &lt;code&gt;\~/Library/Scripts&lt;/code&gt; or &lt;code&gt;\~/Library/Preferences&lt;/code&gt;. Also, monitor for significant changes to any path pointers in a modified plist.&lt;br /&gt;['T1574.008']: Monitor for programs metadata modifications such as deletion of the path to an executable since it makes programs vulnerable to this type of technique. Also, monitor modifications of files such as renaming programs using Windows system utilities names.&lt;br /&gt;['T1080']: Monitor for files that write or overwrite many files to a network shared directory may be suspicious.&lt;br /&gt;['T1547.013']: Malicious XDG autostart entries may be detected by auditing file modification events within the &lt;code&gt;/etc/xdg/autostart&lt;/code&gt; and &lt;code&gt;~/.config/autostart&lt;/code&gt; directories. Depending on individual configurations, defenders may need to query the environment variables &lt;code&gt;$XDG_CONFIG_HOME&lt;/code&gt; or &lt;code&gt;$XDG_CONFIG_DIRS&lt;/code&gt; to determine the paths of Autostart entries. Autostart entry files not associated with legitimate packages may be considered suspicious. Suspicious entries can also be identified by comparing entries to a trusted system baseline.&lt;br /&gt;['T1053']: Monitor for changes made to files that may abuse task scheduling functionality to facilitate initial or recurring execution of malicious code.&lt;br /&gt;['T1601.001']: Compare the checksum of the operating system file with the checksum of a known good copy from a trusted source. Some embedded network device platforms may have the capability to calculate the checksum of the file, while others may not. Even for those platforms that have the capability, it is recommended to download a copy of the file to a trusted computer to calculate the checksum with software that is not compromised.https://tools.cisco.com/security/center/resources/integrity_assurance.html#7

Many vendors of embedded network devices can provide advanced debugging support that will allow them to work with device owners to validate the integrity of the operating system running in memory. If a compromise of the operating system is suspected, contact the vendor technical support and seek such services for a more thorough inspection of the current running system. https://tools.cisco.com/security/center/resources/integrity_assurance.html#13&lt;br /&gt;['T1546.014']: Monitor emond rules creation by checking for files modified in &lt;code&gt;/etc/emond.d/rules/&lt;/code&gt; and &lt;code&gt;/private/var/db/emondClients&lt;/code&gt;.&lt;br /&gt;['T1140']: Monitor for changes made to files for unexpected modifications that attempt to hide artifacts.&lt;br /&gt;['T1053.002']: On Windows, monitor Windows Task Scheduler stores in `%systemroot%\System32\Tasks` for change entries related to scheduled tasks, especially those that do not correlate with known software, patch cycles, etc. On Linux and macOS, all [at](https://attack.mitre.org/software/S0110) jobs are stored in &lt;code&gt;/var/spool/cron/atjobs/&lt;/code&gt;.(Citation: rowland linux at 2019)&lt;br /&gt;['T1070.003']: Monitor for changes made to command history files, such as ConsoleHost_history.txt, ~/.zsh_history, or ~/.bash_history, for unexpected modifications to contents, access permissions, and attributes.&lt;br /&gt;['T1505.004']: Monitor for modification of files (especially DLLs on webservers) that could be abused as malicious ISAPI extensions/filters or IIS modules. Changes to &lt;code&gt;%windir%\system32\inetsrv\config\applicationhost.config&lt;/code&gt; could indicate an IIS module installation.(Citation: Microsoft IIS Modules Overview 2007)(Citation: ESET IIS Malware 2021)&lt;br /&gt;['T1491.001']: Monitor internal and websites for unplanned content changes.&lt;br /&gt;['T1137.001']: Monitor for changes made to files that may abuse Microsoft Office templates to obtain persistence on a compromised system. Modification to base templates, like Normal.dotm, should also be investigated since the base templates should likely not contain VBA macros. Changes to the Office macro security settings should also be investigated&lt;br /&gt;['T1547.007']: Monitoring the specific plist files associated with reopening applications can indicate when an application has registered itself to be reopened.&lt;br /&gt;['T1491']: Monitor for changes made to files for unexpected modifications to internal and external websites for unplanned content changes.&lt;br /&gt;['T1564.008']: On MacOS systems, monitor for modifications to the &lt;code&gt;RulesActiveState.plist&lt;/code&gt;, &lt;code&gt;SyncedRules.plist&lt;/code&gt;, &lt;code&gt;UnsyncedRules.plist&lt;/code&gt;, and &lt;code&gt;MessageRules.plist&lt;/code&gt; files.(Citation: MacOS Email Rules)&lt;br /&gt;['T1548.001']: Monitor for changes made to files that may perform shell escapes or exploit vulnerabilities in an application with the setsuid or setgid bits to get code running in a different user's context.&lt;br /&gt;['T1014']: Monitor for changes and the existence of unrecognized DLLs, drivers, devices, services, and to the MBR. (Citation: Wikipedia Rootkit)&lt;br /&gt;['T1601']: Most embedded network devices provide a command to print the version of the currently running operating system. Use this command to query the operating system for its version number and compare it to what is expected for the device in question. Because this method may be used in conjunction with  [Patch System Image](https://attack.mitre.org/techniques/T1601/001), it may be appropriate to also verify the integrity of the vendor provided operating system image file.

Compare the checksum of the operating system file with the checksum of a known good copy from a trusted source. Some embedded network device platforms may have the capability to calculate the checksum of the file, while others may not. Even for those platforms that have the capability, it is recommended to download a copy of the file to a trusted computer to calculate the checksum with software that is not compromised. (Citation: Cisco IOS Software Integrity Assurance - Image File Verification)

Many vendors of embedded network devices can provide advanced debugging support that will allow them to work with device owners to validate the integrity of the operating system running in memory. If a compromise of the operating system is suspected, contact the vendor technical support and seek such services for a more thorough inspection of the current running system.  (Citation: Cisco IOS Software Integrity Assurance - Run-Time Memory Verification)&lt;br /&gt;['T1053.007']: Monitor for newly constructed files by using the logging agents on Kubernetes nodes and retrieve logs from sidecar proxies for application and resource pods to monitor malicious container orchestration job deployments.&lt;br /&gt;['T1574.007']: Monitor for newly constructed files for files named after partial directories and in locations that may be searched for common processes through the environment variable, or otherwise should not be user writable. Also, monitor file creation for programs that are named after Windows system programs or programs commonly executed without a path (such as "findstr," "net," and "python"). If this activity occurs outside of known administration activity, upgrades, installations, or patches, then it may be suspicious.&lt;br /&gt;['T1204.001']: malicious documents and files that are downloaded from a link and executed on the user's computer&lt;br /&gt;['T1137.001']: Monitor for newly constructed files that may abuse Microsoft Office templates to obtain persistence on a compromised system.&lt;br /&gt;['T1137']: Monitor for newly constructed files that may leverage Microsoft Office-based applications for persistence between startups.&lt;br /&gt;['T1218.002']: Monitor for newly constructed files that may forge web cookies that can be used to gain access to web applications or Internet services.&lt;br /&gt;['T1560.002']: Monitor newly constructed files being written with extensions and/or headers associated with compressed or encrypted file types. Detection efforts may focus on follow-on exfiltration activity, where compressed or encrypted files can be detected in transit with a network intrusion detection or data loss prevention system analyzing file headers.&lt;br /&gt;['T1037.002']: Monitor for the creation of and/or changes to login hook files (&lt;code&gt;/Library/Preferences/com.apple.loginwindow.plist&lt;/code&gt;), especially by unusual accounts outside of normal administration duties.&lt;br /&gt;['T1037.004']: Monitor for newly constructed /etc/rc.local file &lt;br /&gt;['T1574.006']: Monitor for newly constructed files that are added to absolute paths of shared libraries such as LD_PRELOAD on Linux and DYLD_INSERT_LIBRARIES on macOS.&lt;br /&gt;['T1566']: Monitor for newly constructed files from a phishing messages to gain access to victim systems.&lt;br /&gt;['T1546.004']: Monitor for newly constructed files that may establish persistence through executing malicious commands triggered by a user's shell. For most Linux and macOS systems, a list of file paths for valid shell options available on a system are located in the &lt;code&gt;/etc/shells&lt;/code&gt; file.&lt;br /&gt;['T1036.007']: Monitor for files written to disk that contain two file extensions, particularly when the second is an executable.&lt;br /&gt;['T1574.005']: Monitor for newly constructed files to match an existing service executable, it could be detected and correlated with other suspicious behavior.  &lt;br /&gt;['T1105']: Monitor for file creation and files transferred into the network&lt;br /&gt;['T1491']: Monitor for newly constructed visual content for internal or external enterprise networks. &lt;br /&gt;['T1037.005']: Monitor for newly constructed files by unusual accounts outside of normal administration duties&lt;br /&gt;['T1074.001']: Monitor publicly writeable directories, central locations, and commonly used staging directories (recycle bin, temp folders, etc.) to regularly check for compressed or encrypted data that may be indicative of staging.&lt;br /&gt;['T1053']: Monitor newly constructed files that may abuse task scheduling functionality to facilitate initial or recurring execution of malicious code.&lt;br /&gt;['T1546.005']: Monitor for newly constructed files that may establish persistence by executing malicious content triggered by an interrupt signal.&lt;br /&gt;['T1505.003']: File monitoring may be used to detect changes to files in the Web directory of a Web server that do not match with updates to the Web server's content and may indicate implantation of a Web shell script.(Citation: NSA Cyber Mitigating Web Shells)&lt;br /&gt;['T1547']: Monitor for newly constructed files that may configure system settings to automatically execute a program during system boot or logon to maintain persistence or gain higher-level privileges on compromised systems.&lt;br /&gt;['T1543.001']: Monitor for newly constructed files that may create or modify launch agents to repeatedly execute malicious payloads as part of persistence.&lt;br /&gt;['T1547.013']: Malicious XDG autostart entries may be detected by auditing file creation events within the &lt;code&gt;/etc/xdg/autostart&lt;/code&gt; and &lt;code&gt;~/.config/autostart&lt;/code&gt; directories. Depending on individual configurations, defenders may need to query the environment variables &lt;code&gt;$XDG_CONFIG_HOME&lt;/code&gt; or &lt;code&gt;$XDG_CONFIG_DIRS&lt;/code&gt; to determine the paths of Autostart entries. Autostart entry files not associated with legitimate packages may be considered suspicious. Suspicious entries can also be identified by comparing entries to a trusted system baseline.&lt;br /&gt;['T1027.004']: Monitor for newly constructed files for payloads&lt;br /&gt;['T1543.004']: Monitor for new files added to the &lt;code&gt;/Library/LaunchDaemons/&lt;/code&gt; folder. The System LaunchDaemons are protected by SIP.&lt;br /&gt;['T1574']: Monitor for newly constructed files that may execute their own malicious payloads by hijacking the way operating systems run programs.&lt;br /&gt;['T1546.002']: Monitor newly constructed files that may establish persistence by executing malicious content triggered by user inactivity.&lt;br /&gt;['T1547.012']: Monitor for newly constructed files that may abuse print processors to run malicious DLLs during system boot for persistence and/or privilege escalation.&lt;br /&gt;['T1574.010']: Monitor for creation of binaries and service executables that do not occur during a regular software update or an update scheduled by the organization. This behavior also considers files that are overwritten.&lt;br /&gt;['T1547.010']: Monitor newly constructed files that may use port monitors to run an attacker supplied DLL during system boot for persistence or privilege escalation.&lt;br /&gt;['T1491.001']: Monitor for newly constructed files that may deface systems internal to an organization in an attempt to intimidate or mislead users.&lt;br /&gt;['T1027']: Detection of file obfuscation is difficult unless artifacts are left behind by the obfuscation process that are uniquely detectable with a signature. If detection of the obfuscation itself is not possible, it may be possible to detect the malicious activity that caused the obfuscated file (for example, the method that was used to write, read, or modify the file on the file system).&lt;br /&gt;['T1564.001']: Monitor the file system and shell commands for files being created with a leading "."&lt;br /&gt;['T1218.001']: Monitor presence and use of CHM files, especially if they are not typically used within an environment.&lt;br /&gt;['T1218']: Monitor for file activity (creations, downloads, modifications, etc.), especially for file types that are not typical within an environment and may be indicative of adversary activity.&lt;br /&gt;['T1556.002']: Monitor for newly constructed files that may register malicious password filter dynamic link libraries (DLLs) into the authentication process to acquire user credentials as they are validated.&lt;br /&gt;['T1556']: Monitor for suspicious additions to the /Library/Security/SecurityAgentPlugins directory.(Citation: Xorrior Authorization Plugins)&lt;br /&gt;['T1204']: Anti-virus can potentially detect malicious documents and files that are downloaded and executed on the user's computer. Endpoint sensing or network sensing can potentially detect malicious events once the file is opened (such as a Microsoft Word document or PDF reaching out to the internet or spawning powershell.exe).&lt;br /&gt;['T1574.009']: Monitor file creation for files named after partial directories and in locations that may be searched for common processes through the environment variable, or otherwise should not be user writable. Also, monitor file creation for programs that are named after Windows system programs or programs commonly executed without a path (such as "findstr," "net," and "python"). If this activity occurs outside of known administration activity, upgrades, installations, or patches, then it may be suspicious.&lt;br /&gt;['T1546']: Monitor newly constructed files that may establish persistence and/or elevate privileges using system mechanisms that trigger execution based on specific events.&lt;br /&gt;['T1491.002']: Monitor for newly constructed files that may deface systems external to an organization in an attempt to deliver messaging, intimidate, or otherwise mislead an organization or users.&lt;br /&gt;['T1546.014']: Monitor emond rules creation by checking for files created in &lt;code&gt;/etc/emond.d/rules/&lt;/code&gt; and &lt;code&gt;/private/var/db/emondClients&lt;/code&gt;.&lt;br /&gt;['T1547.009']: Monitor for LNK files created with a Zone Identifier value greater than 1, which may indicate that the LNK file originated from outside of the network.(Citation: BSidesSLC 2020 - LNK Elastic) Analysis should attempt to relate shortcut creation events to other potentially suspicious events based on known adversary behavior such as process launches of unknown executables that make network connections.&lt;br /&gt;['T1547.006']: Monitor for newly constructed files that may modify the kernel to automatically execute programs on system boot.&lt;br /&gt;['T1187']: Monitor for newly constructed .LNK, .SCF, or any other files on systems and within virtual environments that contain resources that point to external network resources &lt;br /&gt;['T1546.008']: Monitor newly constructed files that may establish persistence and/or elevate privileges by executing malicious content triggered by accessibility features.&lt;br /&gt;['T1547.008']: Monitor newly constructed files that may modify or add LSASS drivers to obtain persistence on compromised systems.&lt;br /&gt;['T1496']: Monitor for common cryptomining files on local systems that may indicate compromise and resource usage&lt;br /&gt;['T1505.004']: Monitor for creation of files (especially DLLs on webservers) that could be abused as malicious ISAPI extensions/filters or IIS modules.&lt;br /&gt;['T1565']: Monitor for newly constructed files in order to manipulate external outcomes or hide activity&lt;br /&gt;['T1505']: Consider monitoring file locations associated with the installation of new application software components such as paths from which applications typically load such extensible components.&lt;br /&gt;['T1218.005']: Monitor use of HTA files. If they are not typically used within an environment then execution of them may be suspicious&lt;br /&gt;['T1566.001']: Monitor for newly constructed files from a spearphishing emails with a malicious attachment in an attempt to gain access to victim systems.&lt;br /&gt;['T1486']: Monitor for newly constructed files in user directories.&lt;br /&gt;['T1574.004']: Monitor for newly constructed dylibs&lt;br /&gt;['T1137.002']: Monitor for newly constructed files that may abuse the Microsoft Office "Office Test" Registry key to obtain persistence on a compromised system.&lt;br /&gt;['T1204.002']: Monitor for newly constructed files that are downloaded and executed on the user's computer. Endpoint sensing or network sensing can potentially detect malicious events once the file is opened (such as a Microsoft Word document or PDF reaching out to the internet or spawning powershell.exe).&lt;br /&gt;['T1543']: Monitor for newly constructed files that may create or modify system-level processes to repeatedly execute malicious payloads as part of persistence.&lt;br /&gt;['T1218.014']: Monitor for creation and use of .msc files. MMC may legitimately be used to call Microsoft-created .msc files, such as &lt;code&gt;services.msc&lt;/code&gt; or &lt;code&gt;eventvwr.msc&lt;/code&gt;. Invoking non-Microsoft .msc files may be an indicator of malicious activity.&lt;br /&gt;['T1037']: Monitor for newly constructed files that may use scripts automatically executed at boot or logon initialization to establish persistence.&lt;br /&gt;['T1574.001']: Monitor newly constructed .manifest and .local redirection files that do not correlate with software updates.&lt;br /&gt;['T1189']: Monitor for newly constructed files written to disk to gain access to a system through a user visiting a website over the normal course of browsing.&lt;br /&gt;['T1564.006']: Monitor for newly constructed files associated with running a virtual instance, such as binary files associated with common virtualization technologies (ex: VirtualBox, VMware, QEMU, Hyper-V).&lt;br /&gt;['T1080']: Monitor for newly constructed files from files that write or overwrite many files to a network shared directory may be suspicious.&lt;br /&gt;['T1574.002']: Monitor for newly constructed files in common folders on the computer system.&lt;br /&gt;['T1564.009']: Monitor for newly constructed files that may abuse resource forks to hide malicious code or executables to evade detection and bypass security applications.&lt;br /&gt;['T1176']: Monitor for newly constructed files and/or all installed extensions maintain a plist file in the /Library/Managed Preferences/username/ directory. Ensure all listed files are in alignment with approved extensions&lt;br /&gt;['T1553.005']: Monitor compressed/archive and image files downloaded from the Internet as the contents may not be tagged with the MOTW. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities.&lt;br /&gt;['T1570']: Monitor newly constructed files to/from a lateral tool transfer &lt;br /&gt;['T1564']: Monitor for newly constructed files that may attempt to hide artifacts associated with their behaviors to evade detection.&lt;br /&gt;['T1546.013']: Locations where &lt;code&gt;profile.ps1&lt;/code&gt; can be stored should be monitored for new profiles. (Citation: Malware Archaeology PowerShell Cheat Sheet) Example profile locations include:
* &lt;code&gt;$PsHome\Profile.ps1&lt;/code&gt;
* &lt;code&gt;$PsHome\Microsoft.{HostProgram}_profile.ps1&lt;/code&gt;
* &lt;code&gt;$Home\My Documents\PowerShell\Profile.ps1&lt;/code&gt;
* &lt;code&gt;$Home\My Documents\PowerShell\Microsoft.{HostProgram}_profile.ps1&lt;/code&gt;&lt;br /&gt;['T1027.006']: Monitor for newly constructed files via JavaScript, developing rules for the different variants, with a combination of different encoding and/or encryption schemes, may be very challenging. Consider monitoring files downloaded from the Internet, possibly by HTML Smuggling, for suspicious activities. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities.&lt;br /&gt;['T1554']: Monitor for newly constructed files that may modify client software binaries to establish persistent access to systems.&lt;br /&gt;['T1091']: Monitor for newly constructed files on removable media&lt;br /&gt;['T1137.006']: Monitor for newly constructed files that may abuse Microsoft Office add-ins to obtain persistence on a compromised system.&lt;br /&gt;['T1564']: Monitor for contextual data about a file, which may include information such as name, the content (ex: signature, headers, or data/media), user/ower, permissions that may attempt to hide artifacts associated with their behaviors to evade detection.&lt;br /&gt;['T1036.005']: Collect file hashes; file names that do not match their expected hash are suspect. Perform file monitoring; files with known names but in unusual locations are suspect. Likewise, files that are modified outside of an update or patch are suspect.&lt;br /&gt;['T1036.002']: Monitor for common formats of RTLO characters within filenames such as \u202E, [U+202E], and %E2%80%AE. Defenders should also check their analysis tools to ensure they do not interpret the RTLO character and instead print the true name of the file containing it.&lt;br /&gt;['T1070']: Monitor for contextual file data that may show signs of deletion or alter generated artifacts on a host system, including logs or captured files such as quarantined malware.&lt;br /&gt;['T1553']: Collect and analyze signing certificate metadata on software that executes within the environment to look for unusual certificate characteristics and outliers.&lt;br /&gt;['T1055.013']: Scan file objects reported during the PsSetCreateProcessNotifyRoutine, (Citation: Microsoft PsSetCreateProcessNotifyRoutine routine) which triggers a callback whenever a process is created or deleted, specifically looking for file objects with enabled write access. (Citation: BlackHat Process Doppelganging Dec 2017) Also consider comparing file objects loaded in memory to the corresponding file on disk. (Citation: hasherezade Process Doppelganging Dec 2017)&lt;br /&gt;['T1546.006']: Changes to binaries that do not line up with application updates or patches are also extremely suspicious.&lt;br /&gt;['T1027.003']: Detection of steganography is difficult unless artifacts are left behind by the obfuscation process that are detectable with a known signature. Look for strings or other signatures left in system artifacts related to decoding steganography.&lt;br /&gt;['T1195.002']: Use verification of distributed binaries through hash checking or other integrity checking mechanisms. Scan downloads for malicious signatures and attempt to test software and updates prior to deployment while taking note of potential suspicious activity.&lt;br /&gt;['T1222.002']: Monitor and investigate attempts to modify ACLs and file/directory ownership. Consider enabling file/directory permission change auditing on folders containing key binary/configuration files.&lt;br /&gt;['T1027.001']: Depending on the method used to pad files, a file-based signature may be capable of detecting padding using a scanning or on-access based tool. When executed, the resulting process from padded files may also exhibit other behavior characteristics of being used to conduct an intrusion such as system and network information Discovery or Lateral Movement, which could be used as event indicators that point to the source file.&lt;br /&gt;['T1546']: Monitor for contextual data about a file, which may include information such as name, the content (ex: signature, headers, or data/media), user/ower, permissions, etc.&lt;br /&gt;['T1564.001']: Monitor for contextual data about a file, which may include information such as name, the content (ex: signature, headers, or data/media), user/ower, permissions may set files and directories to be hidden to evade detection mechanisms.&lt;br /&gt;['T1564.009']: Identify files with the &lt;code&gt;com.apple.ResourceFork&lt;/code&gt; extended attribute and large data amounts stored in resource forks.&lt;br /&gt;['T1070.006']: Monitor for file modifications that collects information on file handle opens and can compare timestamp values&lt;br /&gt;['T1565.003']: Monitor for contextual data about a file, which may include information such as name, the content (ex: signature, headers, or data/media), user/ower, permissions, etc that would aid in the manipulation of data to hide activity&lt;br /&gt;['T1564.007']: If the document is opened with a Graphical User Interface (GUI) the malicious p-code is decompiled and may be viewed. However, if the &lt;code&gt;PROJECT&lt;/code&gt; stream, which specifies the project properties, is modified in a specific way the decompiled VBA code will not be displayed. For example, adding a module name that is undefined to the &lt;code&gt;PROJECT&lt;/code&gt; stream will inhibit attempts of reading the VBA source code through the GUI.(Citation: FireEye VBA stomp Feb 2020)&lt;br /&gt;['T1553.005']: Monitor files (especially those downloaded from untrusted locations) for MOTW attributes. Also consider inspecting and scanning file formats commonly abused to bypass MOTW (ex: .arj, .gzip, .iso, .vhd).&lt;br /&gt;['T1218.011']: Analyze contextual data about executed DLL files, which may include information such as name, the content (ex: signature, headers, or data/media), age, user/ower, permissions, etc.&lt;br /&gt;['T1553.001']: Review &lt;code&gt;false&lt;/code&gt; values under the &lt;code&gt;LSFileQuarantineEnabled&lt;/code&gt; entry in an application's &lt;code&gt;Info.plist&lt;/code&gt; file (required by every application). &lt;code&gt;false&lt;/code&gt; under &lt;code&gt;LSFileQuarantineEnabled&lt;/code&gt; indicates that an application does not use the quarantine flag. Unsandboxed applications with an unspecified &lt;code&gt;LSFileQuarantineEnabled&lt;/code&gt; entry will default to not setting the quarantine flag.

QuarantineEvents is a SQLite database containing a list of all files assigned the &lt;code&gt;com.apple.quarantine&lt;c/ode&gt; attribute, located at &lt;code&gt;~/Library/Preferences/com.apple.LaunchServices.QuarantineEventsV2&lt;/code&gt;. Each event contains the corresponding UUID, timestamp, application, Gatekeeper score, and decision if it was allowed. (Citation: TheEclecticLightCompany Quarantine and the flag)&lt;br /&gt;['T1548']: Monitor the file system for files that have the setuid or setgid bits set. On Linux, auditd can alert every time a user's actual ID and effective ID are different (this is what happens when you sudo).&lt;br /&gt;['T1036']: Collect file hashes; file names that do not match their expected hash are suspect. Perform file monitoring; files with known names but in unusual locations are suspect. Look for indications of common characters that may indicate an attempt to trick users into misidentifying the file type, such as a space as the last character of a file name or the right-to-left override characters"\u202E", "[U+202E]", and "%E2%80%AE".&lt;br /&gt;['T1036.006']: Monitor for spaces at the end of file names, that can easily be checked with file monitoring. From the user's perspective though, this is very hard to notice from within the Finder.app or on the command-line in Terminal.app. Processes executed from binaries containing non-standard extensions in the filename are suspicious.&lt;br /&gt;['T1564.004']: Monitor for contextual data about a file, which may include information such as name, the content (ex: signature, headers, or data/media), user/ower, permissions, may use NTFS file attributes to hide their malicious data in order to evade detection. Forensic techniques exist to identify information stored in NTFS EA. (Citation: Journey into IR ZeroAccess NTFS EA)&lt;br /&gt;['T1027.002']: Use file scanning to look for known software packers or artifacts of packing techniques. Packing is not a definitive indicator of malicious activity, because legitimate software may use packing techniques to reduce binary size or to protect proprietary code.&lt;br /&gt;['T1222']: Monitor and investigate attempts to modify ACLs and file/directory ownership.&lt;br /&gt;['T1548.001']: Monitor the file system for files that have the setuid or setgid bits set.&lt;br /&gt;['T1036.001']: Collect and analyze signing certificate metadata and check signature validity on software that executes within the environment, look for invalid signatures as well as unusual certificate characteristics and outliers.&lt;br /&gt;['T1554']: Collect and analyze signing certificate metadata and check signature validity on software that executes within the environment&lt;br /&gt;['T1036.003']: Collecting and comparing disk and resource filenames for binaries by looking to see if the InternalName, OriginalFilename, and/or ProductName match what is expected could provide useful leads, but may not always be indicative of malicious activity.&lt;br /&gt;['T1222.001']: Consider enabling file/directory permission change auditing on folders containing key binary/configuration files. For example, Windows Security Log events (Event ID 4670) are created when DACLs are modified.&lt;br /&gt;['T1570']: Monitor for alike file hashes or characteristics (ex: filename) that are created on multiple hosts.&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Microsoft File Mgmt" url="https://docs.microsoft.com/en-us/windows/win32/fileio/file-management"/>
            <reference name="Mitre ATT&amp;CK Data Source DS0022" url="https://attack.mitre.org/data-sources/DS0022"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:01.689">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-DS0028" name="Logon Session" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>Logon occurring on a system or resource (local, domain, or cloud) to which a user/device is gaining access after successful authentication and authorizaton(Citation: Microsoft Audit Logon Events)&lt;br /&gt;&lt;p&gt;Detailed detections per technique:&lt;/p&gt;&lt;br /&gt;['T1114']: Monitor for unusual login activity from unknown or abnormal locations, especially for privileged accounts (ex: Exchange administrator account). &lt;br /&gt;['T1213']: Monitor for newly constructed logon behavior within Microsoft's SharePoint can be configured to report access to certain pages and documents. (Citation: Microsoft SharePoint Logging) Sharepoint audit logging can also be configured to report when a user shares a resource. (Citation: Sharepoint Sharing Events)The user access logging within Atlassian's Confluence can also be configured to report access to certain pages and documents through AccessLogFilter. (Citation: Atlassian Confluence Logging) Additional log storage and analysis infrastructure will likely be required for more robust detection capabilities.&lt;br /&gt;['T1021.004']: Monitor for user accounts logged into systems that may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to log into remote machines using Secure Shell (SSH). For example, on Linux systems SSH logon activity can be found in the logs located in &lt;code&gt;/var/log/auth.log&lt;/code&gt; or &lt;code&gt;/var/log/secure&lt;/code&gt; depending on the distro you are using.&lt;br /&gt;['T1606.002']: Monitor for logins using SAML tokens which do not have corresponding 4769 and 1200 events in the domain.(Citation: Sygnia Golden SAML) These logins may occur on any on-premises resources as well as from any cloud environment that trusts the certificate.(Citation: Microsoft SolarWinds Customer Guidance)&lt;br /&gt;['T1606.001']: Monitor for anomalous authentication activity, such as logons or other user session activity associated with unknown accounts. Monitor for unexpected and abnormal access to resources, including access of websites and cloud-based applications by the same user in different locations or by different systems that do not match expected configurations.&lt;br /&gt;['T1078.002']: Monitor for suspicious account behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. &lt;br /&gt;['T1556']: Monitor for newly constructed logon behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times (ex: when the user is not present) or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access). Configure robust, consistent account activity audit policies across the enterprise and with externally accessible services.(Citation: TechNet Audit Policy) &lt;br /&gt;['T1550']: Look for suspicious account behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account.&lt;br /&gt;['T1199']: Monitor for newly constructed logon behavior that may breach or otherwise leverage organizations who have access to intended victims.&lt;br /&gt;['T1538']: Monitor for newly constructed logon behavior across cloud service management consoles.&lt;br /&gt;['T1563.002']: Use of RDP may be legitimate, depending on the network environment and how it is used. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior with RDP.&lt;br /&gt;['T1550.002']: Monitor newly created logons and credentials used in events and review for discrepancies. Unusual remote logins that correlate with other suspicious activity (such as writing and executing binaries) may indicate malicious activity.&lt;br /&gt;['T1078']: Monitor for newly constructed logon behavior that may obtain and abuse credentials of existing accounts as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access).&lt;br /&gt;['T1021.001']: Monitor for user accounts logged into systems associated with RDP (ex: Windows EID 4624 Logon Type 10). Other factors, such as access patterns (ex: multiple systems over a relatively short period of time) and activity that occurs after a remote login, may indicate suspicious or malicious behavior with RDP.&lt;br /&gt;['T1213.002']: Monitor for newly constructed logon behavior across Microsoft's SharePoint which can be configured to report access to certain pages and documents. (Citation: Microsoft SharePoint Logging) As information repositories generally have a considerably large user base, detection of malicious use can be non-trivial.&lt;br /&gt;['T1021.002']: Monitor for logon behavior (ex: EID 4624 Logon Type 3) using [Valid Accounts](https://attack.mitre.org/techniques/T1078) to interact with a remote network share using Server Message Block (SMB). The adversary may then perform actions as the logged-on user. Ensure that proper logging of accounts used to log into systems is turned on and centrally collected. Windows logging is able to collect success/failure for accounts that may be used to move laterally and can be collected using tools such as Windows Event Forwarding. (Citation: Lateral Movement Payne)(Citation: Windows Event Forwarding Payne)&lt;br /&gt;['T1556.001']: Monitor for newly constructed logon behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times (ex: when the user is not present) or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access). Configure robust, consistent account activity audit policies across the enterprise and with externally accessible services.(Citation: TechNet Audit Policy)&lt;br /&gt;['T1078.001']: Monitor for newly constructed logon behavior across default accounts that have been activated or logged into. These audits should also include checks on any appliances and applications for default credentials or SSH keys, and if any are discovered, they should be updated immediately.&lt;br /&gt;['T1021.006']: Monitor for user accounts logging into the system via [Valid Accounts](https://attack.mitre.org/techniques/T1078) to interact with remote systems using Windows Remote Management (WinRM). The adversary may then perform actions as the logged-on user. &lt;br /&gt;['T1563']: Monitor for user accounts logged into systems they would not normally access or access patterns to multiple systems over a relatively short period of time.&lt;br /&gt;['T1213.001']: Monitor for newly constructed logon behavior across Atlassian's Confluence which can be configured to report access to certain pages and documents through AccessLogFilter. (Citation: Atlassian Confluence Logging) Additional log storage and analysis infrastructure will likely be required for more robust detection capabilities.&lt;br /&gt;['T1021.005']: Monitor for user accounts logged into systems that may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to remotely control machines using Virtual Network Computing (VNC). For example, on macOS systems &lt;code&gt;log show --predicate 'process = "screensharingd" and eventMessage contains "Authentication:"'&lt;/code&gt; can be used to review incoming VNC connection attempts for suspicious activity.(Citation: Apple Unified Log Analysis Remote Login and Screen Sharing) &lt;br /&gt;['T1563.001']: Monitor for user accounts logged into systems they would not normally access or access patterns to multiple systems over a relatively short period of time. Also monitor user SSH-agent socket files being used by different users.&lt;br /&gt;['T1550.003']: Monitor for newly constructed logon behavior that may "pass the ticket" using stolen Kerberos tickets to move laterally within an environment, bypassing normal system access controls.&lt;br /&gt;['T1114.002']: Monitor for unusual login activity from unknown or abnormal locations, especially for privileged accounts (ex: Exchange administrator account).&lt;br /&gt;['T1213.003']: Monitor for newly constructed logon behavior across code repositories (e.g. Github) which can be configured to report access to certain pages and documents.&lt;br /&gt;['T1078.004']: Monitor for suspicious account behavior across cloud services that share account. &lt;br /&gt;['T1606']: Monitor for anomalous authentication activity, such as logons or other user session activity associated with unknown accounts and/or using SAML tokens which do not have corresponding 4769 and 1200 events in the domain.(Citation: Sygnia Golden SAML). Monitor for unexpected and abnormal access to resources, including access of websites and cloud-based applications by the same user in different locations or by different systems that do not match expected configurations. These logins may occur on any on-premises resources as well as from any cloud environment that trusts the credentials.(Citation: Microsoft SolarWinds Customer Guidance)&lt;br /&gt;['T1185']: Authentication logs can be used to audit logins to specific web applications, but determining malicious logins versus benign logins may be difficult if activity matches typical user behavior.&lt;br /&gt;['T1021']: Monitor for user accounts logged into systems they would not normally access or abnormal access patterns, such as multiple systems over a relatively short period of time. Correlate use of login activity related to remote services with unusual behavior or other malicious or suspicious activity. Adversaries will likely need to learn about an environment and the relationships between systems through Discovery techniques prior to attempting Lateral Movement. For example, in macOS you can review logs for "screensharingd" and "Authentication" event messages. (Citation: Lockboxx ARD 2019)(Citation: Apple Unified Log Analysis Remote Login and Screen Sharing)&lt;br /&gt;['T1556.003']: Monitor for newly constructed logon behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times (ex: when the user is not present) or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access).&lt;br /&gt;['T1621']: Monitor 2FA/MFA application logs for suspicious events such as rapid login attempts with valid credentials.&lt;br /&gt;['T1078.003']: Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access).&lt;br /&gt;['T1621']: Monitor 2FA/MFA application logs for suspicious events such as unusual login attempt source location, mismatch in location of login attempt and smart device approving 2FA/MFA request prompts.&lt;br /&gt;['T1558.001']: Monitor for anomalous Kerberos activity, such as malformed or blank fields in Windows logon/logoff events (Event ID 4624, 4634, 4672). Correlate other security systems with login information (e.g., a user has the KRBTGT account password hash and forges Kerberos ticket-granting tickets). &lt;br /&gt;['T1558']: Enable Audit Kerberos Service Ticket Operations to log Kerberos TGS service ticket requests. Particularly investigate irregular patterns of activity (ex: accounts making numerous requests, Event ID 4769, within a small time frame, especially if they also request RC4 encryption [Type 0x17]).(Citation: Microsoft Detecting Kerberoasting Feb 2018) (Citation: AdSecurity Cracking Kerberos Dec 2015)&lt;br /&gt;['T1606.002']: Consider modifying SAML responses to include custom elements for each service provider. Monitor these custom elements in service provider access logs to detect any anomalous requests.(Citation: Sygnia Golden SAML)&lt;br /&gt;['T1558.002']: Monitor for anomalous Kerberos activity, such as malformed or blank fields in Windows logon/logoff events (Event ID 4624, 4634, 4672).&lt;br /&gt;['T1133']: Follow best practices for detecting adversary use of Valid Accounts for authenticating to remote services. Collect authentication logs and analyze for unusual access patterns, windows of activity, and access outside of normal business hours.&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Microsoft Audit Logon Events" url="https://docs.microsoft.com/en-us/windows/security/threat-protection/auditing/basic-audit-logon-events"/>
            <reference name="Mitre ATT&amp;CK Data Source DS0028" url="https://attack.mitre.org/datasources/DS0028"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:01.718">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-M1032" name="Multi-factor Authentication" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>Use two or more pieces of evidence to authenticate to a system; such as username and password in addition to a token from a physical smart card or token generator.&lt;br /&gt;&lt;p&gt;Detailed mitigations per technique:&lt;/p&gt;&lt;br /&gt;['T1098.001']: Use multi-factor authentication for user and privileged accounts. Consider enforcing multi-factor authentication for the &lt;code&gt;CreateKeyPair&lt;/code&gt; and &lt;code&gt;ImportKeyPair&lt;/code&gt; API calls through IAM policies.(Citation: Expel IO Evil in AWS)&lt;br /&gt;['T1040']: Use multi-factor authentication wherever possible.&lt;br /&gt;['T1136.001', 'T1136.002', 'T1136.003', 'T1098', 'T1098.003', 'T1136', 'T1098.002']: Use multi-factor authentication for user and privileged accounts.&lt;br /&gt;['T1556.003']: Integrating multi-factor authentication (MFA) as part of organizational policy can greatly reduce the risk of an adversary gaining control of valid credentials that may be used for additional tactics such as initial access, lateral movement, and collecting information.&lt;br /&gt;['T1556', 'T1556.001']: Integrating multi-factor authentication (MFA) as part of organizational policy can greatly reduce the risk of an adversary gaining control of valid credentials that may be used for additional tactics such as initial access, lateral movement, and collecting information. MFA can also be used to restrict access to cloud resources and APIs. &lt;br /&gt;['T1599', 'T1601', 'T1601.002', 'T1601.001']: Use multi-factor authentication for user and privileged accounts. Most embedded network devices support TACACS+ and/or RADIUS.  Follow vendor prescribed best practices for hardening access control.(Citation: Cisco IOS Software Integrity Assurance - TACACS)&lt;br /&gt;['T1114', 'T1114.002']: Use of multi-factor authentication for public-facing webmail servers is a recommended best practice to minimize the usefulness of usernames and passwords to adversaries.&lt;br /&gt;['T1621']: Implement more secure 2FA/MFA mechanisms in replacement of simple push or one-click 2FA/MFA options. For example, having users enter a one-time code provided by the login screen into the 2FA/MFA application or utilizing other out-of-band 2FA/MFA mechanisms (such as rotating code-based hardware tokens providing rotating codes that need an accompanying user pin) may be more secure. Furthermore, change default configurations and implement limits upon the maximum number of 2FA/MFA request prompts that can be sent to users in period of time.(Citation: MFA Fatigue Attacks - PortSwigger)&lt;br /&gt;['T1076']: Use multi-factor authentication for remote logins. (Citation: Berkley Secure)&lt;br /&gt;['T1078.002', 'T1078']: Integrating multi-factor authentication (MFA) as part of organizational policy can greatly reduce the risk of an adversary gaining control of valid credentials that may be used for additional tactics such as initial access, lateral movement, and collecting information. MFA can also be used to restrict access to cloud resources and APIs.&lt;br /&gt;['T1098.005']: Require multi-factor authentication to register devices in Azure AD.(Citation: Microsoft - Device Registration) Configure multi-factor authentication systems to disallow enrolling new devices for inactive accounts.(Citation: CISA MFA PrintNightmare)&lt;br /&gt;['T1110.003', 'T1110.001', 'T1110', 'T1110.004', 'T1110.002']: Use multi-factor authentication. Where possible, also enable multi-factor authentication on externally facing services.&lt;br /&gt;['T1078.004']: Use multi-factor authentication for cloud accounts, especially privileged accounts. This can be implemented in a variety of forms (e.g. hardware, virtual, SMS), and can also be audited using administrative reporting features.(Citation: AWS - IAM Console Best Practices)&lt;br /&gt;['T1021.004']: Require multi-factor authentication for SSH connections wherever possible, such as password protected SSH keys.&lt;br /&gt;['T1539']: A physical second factor key that uses the target login domain as part of the negotiation protocol will prevent session cookie theft through proxy methods.(Citation: Evilginx 2 July 2018)&lt;br /&gt;['T1599.001', 'T1556.004']: Use multi-factor authentication for user and privileged accounts. Most embedded network devices support TACACS+ and/or RADIUS.  Follow vendor prescribed best practices for hardening access control. (Citation: Cisco IOS Software Integrity Assurance - TACACS)&lt;br /&gt;['T1021.001']: Use multi-factor authentication for remote logins.(Citation: Berkley Secure)&lt;br /&gt;['T1017']: Use multi-factor authentication for accounts used with application deployment software.&lt;br /&gt;['T1072']: Ensure proper system and access isolation for critical network systems through use of multi-factor authentication.&lt;br /&gt;['T1021', 'T1021']: Use multi-factor authentication on remote service logons where possible.&lt;br /&gt;['T1133']: Use strong two-factor or multi-factor authentication for remote service accounts to mitigate an adversary's ability to leverage stolen credentials, but be aware of [Multi-Factor Authentication Interception](https://attack.mitre.org/techniques/T1111) techniques for some two-factor authentication implementations.&lt;br /&gt;['T1530']: Consider using multi-factor authentication to restrict access to resources and cloud storage APIs.(Citation: Amazon S3 Security, 2019)&lt;br /&gt;['T1213.003']: Use multi-factor authentication for logons to code repositories.&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Mitre ATT&amp;CK Mitigation M1032" url="https://attack.mitre.org/mitigations/M1032"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:01.803">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-M1027" name="Password Policies" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>Set and enforce secure password policies for accounts.&lt;br /&gt;&lt;p&gt;Detailed mitigations per technique:&lt;/p&gt;&lt;br /&gt;['T1599.001', 'T1599', 'T1110.004', 'T1110.002', 'T1601', 'T1110.001', 'T1110.003']: Refer to NIST guidelines when creating password policies. (Citation: NIST 800-63-3)&lt;br /&gt;['T1078.004']: Ensure that cloud accounts, particularly privileged accounts, have complex, unique passwords across all systems on the network. Passwords and access keys should be rotated regularly. This limits the amount of time credentials can be used to access resources if a credential is compromised without your knowledge. Cloud service providers may track access key age to help audit and identify keys that may need to be rotated.(Citation: AWS - IAM Console Best Practices)&lt;br /&gt;['T1075']: Ensure that built-in and created local administrator accounts have complex, unique passwords.&lt;br /&gt;['T1556.005', 'T1556']: Ensure that &lt;code&gt;AllowReversiblePasswordEncryption&lt;/code&gt; property is set to disabled unless there are application requirements.(Citation: store_pwd_rev_enc)&lt;br /&gt;['T1552.002', 'T1214']: Do not store credentials within the Registry.&lt;br /&gt;['T1550.003', 'T1097']: Ensure that local administrator accounts have complex, unique passwords.&lt;br /&gt;['T1537']: Consider rotating access keys within a certain number of days to reduce the effectiveness of stolen credentials.&lt;br /&gt;['T1552.004', 'T1145']: Use strong passphrases for private keys to make cracking difficult.&lt;br /&gt;['T1558.002', 'T1558.003', 'T1558']: Ensure strong password length (ideally 25+ characters) and complexity for service accounts and that these passwords periodically expire.(Citation: AdSecurity Cracking Kerberos Dec 2015) Also consider using Group Managed Service Accounts or another third party product such as password vaulting.(Citation: AdSecurity Cracking Kerberos Dec 2015)&lt;br /&gt;['T1003.003', 'T1003.006', 'T1003.002', 'T1003.004', 'T1003', 'T1003.005', 'T1078.003', 'T1003.001']: Ensure that local administrator accounts have complex, unique passwords across all systems on the network.&lt;br /&gt;['T1078']: Applications and appliances that utilize default username and password should be changed immediately after the installation, and before deployment to a production environment. (Citation: US-CERT Alert TA13-175A Risks of Default Passwords on the Internet) When possible, applications that use SSH keys should be updated periodically and properly secured.&lt;br /&gt;['T1552']: Use strong passphrases for private keys to make cracking difficult. Do not store credentials within the Registry. Establish an organizational policy that prohibits password storage in files.&lt;br /&gt;['T1503', 'T1555.003']: Organizations may consider weighing the risk of storing credentials in web browsers. If web browser credential disclosure is a significant concern, technical controls, policy, and user training may be used to prevent storage of credentials in web browsers.&lt;br /&gt;['T1187']: Use strong passwords to increase the difficulty of credential hashes from being cracked if they are obtained.&lt;br /&gt;['T1558.004']: Ensure strong password length (ideally 25+ characters) and complexity for service accounts and that these passwords periodically expire. Also consider using Group Managed Service Accounts or another third party product such as password vaulting. (Citation: AdSecurity Cracking Kerberos Dec 2015)&lt;br /&gt;['T1072']: Verify that account credentials that may be used to access deployment systems are unique and not used throughout the enterprise network.&lt;br /&gt;['T1003.007', 'T1003.008']: Ensure that root accounts have complex, unique passwords across all systems on the network.&lt;br /&gt;['T1078.001']: Applications and appliances that utilize default username and password should be changed immediately after the installation, and before deployment to a production environment. (Citation: US-CERT Alert TA13-175A Risks of Default Passwords on the Internet)&lt;br /&gt;['T1555.001', 'T1142']: The password for the user's login keychain can be changed from the user's login password. This increases the complexity for an adversary because they need to know an additional password.&lt;br /&gt;['T1081', 'T1552.001']: Establish an organizational policy that prohibits password storage in files.&lt;br /&gt;['T1077', 'T1021.002']: Do not reuse local administrator account passwords across systems. Ensure password complexity and uniqueness such that the passwords cannot be cracked or guessed.&lt;br /&gt;['T1563.001', 'T1184']: Ensure SSH key pairs have strong passwords and refrain from using key-store technologies such as ssh-agent unless they are properly protected.&lt;br /&gt;['T1555']: The password for the user's login keychain can be changed from the user's login password. This increases the complexity for an adversary because they need to know an additional password.

Organizations may consider weighing the risk of storing credentials in password stores and web browsers. If system, software, or web browser credential disclosure is a significant concern, technical controls, policy, and user training may be used to prevent storage of credentials in improper locations.&lt;br /&gt;['T1110']: Refer to NIST guidelines when creating password policies.(Citation: NIST 800-63-3)&lt;br /&gt;['T1601.002', 'T1601.001']: Refer to NIST guidelines when creating password policies.  (Citation: NIST 800-63-3)&lt;br /&gt;['T1201']: Ensure only valid password filters are registered. Filter DLLs must be present in Windows installation directory (&lt;code&gt;C:\Windows\System32\&lt;/code&gt; by default) of a domain controller and/or local computer with a corresponding entry in &lt;code&gt;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Lsa\Notification Packages&lt;/code&gt;. (Citation: Microsoft Install Password Filter n.d)&lt;br /&gt;['T1208']: Ensure strong password length (ideally 25+ characters) and complexity for service accounts and that these passwords periodically expire. (Citation: AdSecurity Cracking Kerberos Dec 2015) Also consider using Group Managed Service Accounts or another third party product such as password vaulting. (Citation: AdSecurity Cracking Kerberos Dec 2015)&lt;br /&gt;['T1555.005']: Refer to NIST guidelines when creating password policies for master passwords.(Citation: NIST 800-63-3)&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Mitre ATT&amp;CK Mitigation M1027" url="https://attack.mitre.org/mitigations/M1027"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:01.778">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-M1026" name="Privileged Account Management" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>Manage the creation, modification, use, and permissions associated to privileged accounts, including SYSTEM and root.&lt;br /&gt;&lt;p&gt;Detailed mitigations per technique:&lt;/p&gt;&lt;br /&gt;['T1053.005', 'T1053.002']: Configure the Increase Scheduling Priority option to only allow the Administrators group the rights to schedule a priority process. This can be configured through GPO: Computer Configuration &gt; [Policies] &gt; Windows Settings &gt; Security Settings &gt; Local Policies &gt; User Rights Assignment: Increase scheduling priority. (Citation: TechNet Scheduling Priority)&lt;br /&gt;['T1206']: Setting the &lt;code&gt;timestamp_timeout&lt;/code&gt; to 0 will require the user to input their password every time &lt;code&gt;sudo&lt;/code&gt; is executed.&lt;br /&gt;['T1550.003']: Limit domain admin account permissions to domain controllers and limited servers. Delegate other admin functions to separate accounts.(Citation: ADSecurity AD Kerberos Attacks)&lt;br /&gt;['T1505.004']: Do not allow administrator accounts that have permissions to add IIS components to be used for day-to-day operations that may expose these permissions to potential adversaries and/or other unprivileged systems.&lt;br /&gt;['T1556.005']: Audit domain and local accounts as well as their permission levels routinely to look for situations that could allow an adversary to gain wide access by obtaining credentials of a privileged account.(Citation: TechNet Credential Theft)(Citation: TechNet Least Privilege) These audits should also include if default accounts have been enabled, or if new local accounts are created that have not be authorized. Follow best practices for design and administration of an enterprise network to limit privileged account use across administrative tiers.(Citation: Microsoft Securing Privileged Access)&lt;br /&gt;['T1035', 'T1569.002', 'T1569']: Ensure that permissions disallow services that run at a higher permissions level from being created or interacted with by a user with a lower permission level.&lt;br /&gt;['T1214', 'T1552.002', 'T1552']: If it is necessary that software must store credentials in the Registry, then ensure the associated accounts have limited permissions so they cannot be abused if obtained by an adversary.&lt;br /&gt;['T1505.002', 'T1505.001']: Do not allow administrator accounts that have permissions to add component software on these services to be used for day-to-day operations that may expose them to potential adversaries on unprivileged systems. &lt;br /&gt;['T1075', 'T1550', 'T1550.002']: Limit credential overlap across systems to prevent the damage of credential compromise and reduce the adversary's ability to perform Lateral Movement between systems.&lt;br /&gt;['T1017']: Grant access to application deployment systems only to a limited number of authorized administrators.  Verify that account credentials that may be used to access deployment systems are unique and not used throughout the enterprise network.&lt;br /&gt;['T1169']: By requiring a password, even if an adversary can get terminal access, they must know the password to run anything in the sudoers file.&lt;br /&gt;['T1047', 'T1084']: Prevent credential overlap across systems of administrator and privileged accounts. (Citation: FireEye WMI 2015)&lt;br /&gt;['T1208']: Limit service accounts to minimal required privileges, including membership in privileged groups such as Domain Administrators. (Citation: AdSecurity Cracking Kerberos Dec 2015)&lt;br /&gt;['T1098.003']: Ensure that all accounts use the least privileges they require.&lt;br /&gt;['T1077', 'T1021.002']: Deny remote use of local admin credentials to log into systems. Do not allow domain user accounts to be in the local Administrators group multiple systems.&lt;br /&gt;['T1222.001', 'T1222.002', 'T1222']: Ensure critical system files as well as those known to be abused by adversaries have restrictive permissions and are owned by an appropriately privileged account, especially if access is not required by users nor will inhibit system functionality.&lt;br /&gt;['T1556.003']: Limit access to the root account and prevent users from modifying PAM components through proper privilege separation (ex SELinux, grsecurity, AppArmor, etc.) and limiting Privilege Escalation opportunities.&lt;br /&gt;['T1021.006', 'T1028']: If the service is necessary, lock down critical enclaves with separate WinRM accounts and permissions.&lt;br /&gt;['T1599', 'T1601.001', 'T1601.002', 'T1556.004', 'T1599.001', 'T1601']: Restrict administrator accounts to as few individuals as possible, following least privilege principles.  Prevent credential overlap across systems of administrator and privileged accounts, particularly between network and non-network platforms, such as servers or endpoints.&lt;br /&gt;['T1003.008']: Follow best practices in restricting access to privileged accounts to avoid hostile programs from accessing such sensitive information.&lt;br /&gt;['T1072']: Grant access to application deployment systems only to a limited number of authorized administrators.&lt;br /&gt;['T1553.006']: Limit the usage of local administrator and domain administrator accounts to be used for day-to-day operations that may expose them to potential adversaries.&lt;br /&gt;['T1484']: Use least privilege and protect administrative access to the Domain Controller and Active Directory Federation Services (AD FS) server. Do not create service accounts with administrative privileges.&lt;br /&gt;['T1076', 'T1563.002', 'T1021.001']: Consider removing the local Administrators group from the list of groups allowed to log in through RDP.&lt;br /&gt;['T1547.006', 'T1215']: Limit access to the root account and prevent users from loading kernel modules and extensions through proper privilege separation and limiting Privilege Escalation opportunities.&lt;br /&gt;['T1134.003', 'T1134.002', 'T1134', 'T1134.001']: Limit permissions so that users and user groups cannot create tokens. This setting should be defined for the local system account only. GPO: Computer Configuration &gt; [Policies] &gt; Windows Settings &gt; Security Settings &gt; Local Policies &gt; User Rights Assignment: Create a token object. (Citation: Microsoft Create Token) Also define who can create a process level token to only the local and network service through GPO: Computer Configuration &gt; [Policies] &gt; Windows Settings &gt; Security Settings &gt; Local Policies &gt; User Rights Assignment: Replace a process level token.(Citation: Microsoft Replace Process Token)

Administrators should log in as a standard user but run their tools with administrator privileges using the built-in access token manipulation command &lt;code&gt;runas&lt;/code&gt;.(Citation: Microsoft runas)&lt;br /&gt;['T1542.001', 'T1019']: Prevent adversary access to privileged accounts or access necessary to perform this technique.&lt;br /&gt;['T1078.002']: Audit domain account permission levels routinely to look for situations that could allow an adversary to gain wide access by obtaining credentials of a privileged account. Do not put user or admin domain accounts in the local administrator groups across systems unless they are tightly controlled and use of accounts is segmented, as this is often equivalent to having a local administrator account with the same password on all systems. Follow best practices for design and administration of an enterprise network to limit privileged account use across administrative tiers. Limit credential overlap across systems to prevent access if account credentials are obtained.&lt;br /&gt;['T1190']: Use least privilege for service accounts will limit what permissions the exploited process gets on the rest of the system.&lt;br /&gt;['T1078.004']: Review privileged cloud account permission levels routinely to look for those that could allow an adversary to gain wide access.(Citation: TechNet Credential Theft)(Citation: TechNet Least Privilege) These reviews should also check if new privileged cloud accounts have been created that were not authorized.&lt;br /&gt;['T1078.003']: Audit local accounts permission levels routinely to look for situations that could allow an adversary to gain wide access by obtaining credentials of a privileged account. (Citation: TechNet Credential Theft) (Citation: TechNet Least Privilege) These audits should check if new local accounts are created that have not be authorized. Implementing LAPS may help prevent reuse of local administrator credentials across a domain.(Citation: Microsoft Remote Use of Local)&lt;br /&gt;['T1558.002', 'T1558.003']: Limit service accounts to minimal required privileges, including membership in privileged groups such as Domain Administrators.(Citation: AdSecurity Cracking Kerberos Dec 2015)&lt;br /&gt;['T1612', 'T1611', 'T1053.007', 'T1609']: Ensure containers are not running as root by default. In Kubernetes environments, consider defining a Pod Security Policy that prevents pods from running privileged containers.(Citation: Kubernetes Hardening Guide)&lt;br /&gt;['T1484.002']: Use the principal of least privilege and protect administrative access to domain trusts.&lt;br /&gt;['T1098.002', 'T1098', 'T1136', 'T1136.002']: Do not allow domain administrator accounts to be used for day-to-day operations that may expose them to potential adversaries on unprivileged systems.&lt;br /&gt;['T1003.003', 'T1003.002', 'T1003.001', 'T1003.005', 'T1003.006']: Do not put user or admin domain accounts in the local administrator groups across systems unless they are tightly controlled, as this is often equivalent to having a local administrator account with the same password on all systems. Follow best practices for design and administration of an enterprise network to limit privileged account use across administrative tiers.&lt;br /&gt;['T1542.005']: Use of Authentication, Authorization, and Accounting (AAA) systems will limit actions administrators can perform and provide a history of user actions to detect unauthorized use and abuse. TACACS+ can keep control over which commands administrators are permitted to use through the configuration of authentication and command authorization. (Citation: Cisco IOS Software Integrity Assurance - AAA) (Citation: Cisco IOS Software Integrity Assurance - TACACS)&lt;br /&gt;['T1088', 'T1548.002']: Remove users from the local administrator group on systems.&lt;br /&gt;['T1606', 'T1606.002']: Restrict permissions and access to the AD FS server to only originate from privileged access workstations.(Citation: FireEye ADFS)&lt;br /&gt;['T1559.001', 'T1559']: Modify Registry settings (directly or using Dcomcnfg.exe) in `HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\AppID\\{AppID_GUID}` associated with the process-wide security of individual COM applications.(Citation: Microsoft Process Wide Com Keys)

Modify Registry settings (directly or using Dcomcnfg.exe) in `HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Ole` associated with system-wide security defaults for all COM applications that do no set their own process-wide security.(Citation: Microsoft System Wide Com Keys) (Citation: Microsoft COM ACL)&lt;br /&gt;['T1136.003']: Do not allow privileged accounts to be used for day-to-day operations that may expose them to potential adversaries on unprivileged systems.&lt;br /&gt;['T1218']: Restrict execution of particularly vulnerable binaries to privileged accounts or groups that need to use it to lessen the opportunities for malicious usage.&lt;br /&gt;['T1184', 'T1563.001']: Do not allow remote access via SSH as root or other privileged accounts.&lt;br /&gt;['T1097']: Limit domain admin account permissions to domain controllers and limited servers. Delegate other admin functions to separate accounts. (Citation: ADSecurity AD Kerberos Attacks)&lt;br /&gt;['T1055']: Utilize Yama (ex: /proc/sys/kernel/yama/ptrace_scope) to mitigate ptrace based process injection by restricting the use of ptrace to privileged users only. Other mitigation controls involve the deployment of security kernel modules that provide advanced access control and process restrictions such as SELinux, grsecurity, and AppArmor.&lt;br /&gt;['T1051']: Networks that allow for open development and testing of Web content and allow users to set up their own Web servers on the enterprise network may be particularly vulnerable if the systems and Web servers are not properly secured to limit privileged account use and unauthenticated network share access.&lt;br /&gt;['T1548']: Remove users from the local administrator group on systems.

By requiring a password, even if an adversary can get terminal access, they must know the password to run anything in the sudoers file. Setting the timestamp_timeout to 0 will require the user to input their password every time sudo is executed.&lt;br /&gt;['T1556.001', 'T1078']: Audit domain and local accounts as well as their permission levels routinely to look for situations that could allow an adversary to gain wide access by obtaining credentials of a privileged account. (Citation: TechNet Credential Theft) (Citation: TechNet Least Privilege) These audits should also include if default accounts have been enabled, or if new local accounts are created that have not be authorized. Follow best practices for design and administration of an enterprise network to limit privileged account use across administrative tiers. (Citation: Microsoft Securing Privileged Access)&lt;br /&gt;['T1552.007']: Use the principle of least privilege for privileged accounts such as the service account in Kubernetes.&lt;br /&gt;['T1098.001']: Do not allow domain administrator or root accounts to be used for day-to-day operations that may expose them to potential adversaries on unprivileged systems.&lt;br /&gt;['T1525']: Limit permissions associated with creating and modifying platform images or containers based on the principle of least privilege.&lt;br /&gt;['T1053']: Configure the Increase Scheduling Priority option to only allow the Administrators group the rights to schedule a priority process. This can be can be configured through GPO: Computer Configuration &gt; [Policies] &gt; Windows Settings &gt; Security Settings &gt; Local Policies &gt; User Rights Assignment: Increase scheduling priority. (Citation: TechNet Scheduling Priority)&lt;br /&gt;['T1100']: Audit account and group permissions to ensure that accounts used to manage servers do not overlap with accounts and permissions of users in the internal network that could be acquired through Credential Access and used to log into the Web server and plant a Web shell or pivot from the Web server into the internal network. (Citation: US-CERT Alert TA15-314A Web Shells)&lt;br /&gt;['T1542.003', 'T1067']: Ensure proper permissions are in place to help prevent adversary access to privileged accounts necessary to install a bootkit.&lt;br /&gt;['T1562.009']: Restrict administrator accounts to as few individuals as possible, following least privilege principles, that may be abused to remotely boot a machine in safe mode.(Citation: CyberArk Labs Safe Mode 2016)&lt;br /&gt;['T1175']: Modify Registry settings (directly or using Dcomcnfg.exe) in &lt;code&gt;HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\AppID\\{AppID_GUID}&lt;/code&gt; associated with the process-wide security of individual COM applications.(Citation: Microsoft Process Wide Com Keys)

Modify Registry settings (directly or using Dcomcnfg.exe) in &lt;code&gt;HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Ole&lt;/code&gt; associated with system-wide security defaults for all COM applications that do no set their own process-wide security.(Citation: Microsoft System Wide Com Keys) (Citation: Microsoft COM ACL)&lt;br /&gt;['T1210']: Minimize permissions and access for service accounts to limit impact of exploitation.&lt;br /&gt;['T1003']: Windows:
Do not put user or admin domain accounts in the local administrator groups across systems unless they are tightly controlled, as this is often equivalent to having a local administrator account with the same password on all systems. Follow best practices for design and administration of an enterprise network to limit privileged account use across administrative tiers.(Citation: Microsoft Securing Privileged Access)

Linux:
Scraping the passwords from memory requires root privileges. Follow best practices in restricting access to privileged accounts to avoid hostile programs from accessing such sensitive regions of memory.&lt;br /&gt;['T1558.001']: Limit domain admin account permissions to domain controllers and limited servers. Delegate other admin functions to separate accounts.&lt;br /&gt;['T1546.003']: Prevent credential overlap across systems of administrator and privileged accounts.(Citation: FireEye WMI 2015)&lt;br /&gt;['T1059', 'T1059.001']: When PowerShell is necessary, restrict PowerShell execution policy to administrators. Be aware that there are methods of bypassing the PowerShell execution policy, depending on environment configuration.(Citation: Netspi PowerShell Execution Policy Bypass)&lt;br /&gt;['T1056.003']: Do not allow administrator accounts that have permissions to modify the Web content of organization login portals to be used for day-to-day operations that may expose them to potential adversaries on unprivileged systems.&lt;br /&gt;['T1501', 'T1543.002']: The creation and modification of systemd service unit files is generally reserved for administrators such as the Linux root user and other users with superuser privileges. &lt;br /&gt;['T1086']: When PowerShell is necessary, restrict PowerShell execution policy to administrators. Be aware that there are methods of bypassing the PowerShell execution policy, depending on environment configuration. (Citation: Netspi PowerShell Execution Policy Bypass) &lt;br /&gt;['T1542']: Ensure proper permissions are in place to help prevent adversary access to privileged accounts necessary to perform these actions&lt;br /&gt;['T1495']: Prevent adversary access to privileged accounts or access necessary to replace system firmware.&lt;br /&gt;['T1136.001']: Limit the usage of local administrator accounts to be used for day-to-day operations that may expose them to potential adversaries.&lt;br /&gt;['T1003.004']: Follow best practices for design and administration of an enterprise network to limit privileged account use across administrative tiers.(Citation: Tilbury Windows Credentials)&lt;br /&gt;['T1055.008']: Utilize Yama (ex: /proc/sys/kernel/yama/ptrace_scope) to mitigate ptrace based process injection by restricting the use of ptrace to privileged users only. Other mitigation controls involve the deployment of security kernel modules that provide advanced access control and process restrictions such as SELinux, grsecurity, and AppArmor. &lt;br /&gt;['T1003.007']: Follow best practices in restricting access to privileged accounts to avoid hostile programs from accessing sensitive information.&lt;br /&gt;['T1556']: Audit domain and local accounts as well as their permission levels routinely to look for situations that could allow an adversary to gain wide access by obtaining credentials of a privileged account. (Citation: TechNet Credential Theft) (Citation: TechNet Least Privilege) These audits should also include if default accounts have been enabled, or if new local accounts are created that have not be authorized. Follow best practices for design and administration of an enterprise network to limit privileged account use across administrative tiers. (Citation: Microsoft Securing Privileged Access)

Limit access to the root account and prevent users from modifying protected components through proper privilege separation (ex SELinux, grsecurity, AppArmor, etc.) and limiting Privilege Escalation opportunities.&lt;br /&gt;['T1563']: Do not allow remote access to services as a privileged account unless necessary.&lt;br /&gt;['T1053.006']: Limit access to the root account and prevent users from creating and/or modifying systemd timer unit files. &lt;br /&gt;['T1021.003']: Modify Registry settings (directly or using Dcomcnfg.exe) in `HKEY_LOCAL_MACHINE\SOFTWARE\Classes\AppID\{{AppID_GUID}}` associated with the process-wide security of individual COM applications.(Citation: Microsoft Process Wide Com Keys)

Modify Registry settings (directly or using Dcomcnfg.exe) in `HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Ole` associated with system-wide security defaults for all COM applications that do not set their own process-wide security.(Citation: Microsoft System Wide Com Keys) (Citation: Microsoft COM ACL)&lt;br /&gt;['T1059.008']: Use of Authentication, Authorization, and Accounting (AAA) systems will limit actions administrators can perform and provide a history of user actions to detect unauthorized use and abuse. TACACS+ can keep control over which commands administrators are permitted to use through the configuration of authentication and command authorization(Citation: Cisco IOS Software Integrity Assurance - AAA) (Citation: Cisco IOS Software Integrity Assurance - TACACS)&lt;br /&gt;['T1218.007']: Restrict execution of Msiexec.exe to privileged accounts or groups that need to use it to lessen the opportunities for malicious usage.&lt;br /&gt;['T1505']: Do not allow administrator accounts that have permissions to add component software on these services to be used for day-to-day operations that may expose them to potential adversaries on unprivileged systems.&lt;br /&gt;['T1548.003', 'T1548.003', 'T1548.003']: By requiring a password, even if an adversary can get terminal access, they must know the password to run anything in the sudoers file. Setting the &lt;code&gt;timestamp_timeout&lt;/code&gt; to 0 will require the user to input their password every time &lt;code&gt;sudo&lt;/code&gt; is executed.&lt;br /&gt;['T1558']: Limit domain admin account permissions to domain controllers and limited servers. Delegate other admin functions to separate accounts.

Limit service accounts to minimal required privileges, including membership in privileged groups such as Domain Administrators.(Citation: AdSecurity Cracking Kerberos Dec 2015)&lt;br /&gt;['T1218']: If these binaries are required for use, then restrict execution of them to privileged accounts or groups that need to use them to lessen the opportunities for malicious use.&lt;br /&gt;['T1055']: ###Linux

Utilize Yama to mitigate ptrace based process injection by restricting the use of ptrace to privileged users only. Other mitigation controls involve the deployment of security kernel modules that provide advanced access control and process restrictions such as SELinux, grsecurity, and AppArmor.&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Mitre ATT&amp;CK Mitigation M1026" url="https://attack.mitre.org/mitigations/M1026"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:01.772">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-DS0009" name="Process" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>Instances of computer programs that are being executed by at least one thread. Processes have memory space for process executables, loaded modules (DLLs or shared libraries), and allocated memory regions containing everything from user input to application-specific data structures(Citation: Microsoft Processes and Threads)&lt;br /&gt;&lt;p&gt;Detailed detections per technique:&lt;/p&gt;&lt;br /&gt;['T1055.008']: Monitoring for Linux specific calls such as the ptrace system call should not generate large amounts of data due to their specialized nature, and can be a very effective method to detect some of the common process injection methods.(Citation: ArtOfMemoryForensics) (Citation: GNU Acct) (Citation: RHEL auditd) (Citation: Chokepoint preload rootkits)&lt;br /&gt;['T1055.014']: Monitor for malicious usage of system calls, such as ptrace and mmap, that can be used to attach to, manipulate memory, then redirect a processes' execution path. Monitoring for Linux specific calls such as the ptrace system call should not generate large amounts of data due to their specialized nature, and can be a very effective method to detect some of the common process injection methods.(Citation: ArtOfMemoryForensics)(Citation: GNU Acct)(Citation: RHEL auditd)(Citation: Chokepoint preload rootkits)&lt;br /&gt;['T1112']: Monitor for API calls associated with concealing Registry keys, such as Reghide. (Citation: Microsoft Reghide NOV 2006) Inspect and cleanup malicious hidden Registry entries using Native Windows API calls and/or tools such as Autoruns (Citation: SpectorOps Hiding Reg Jul 2017) and RegDelNull (Citation: Microsoft RegDelNull July 2016). &lt;br /&gt;['T1547']: Monitor for API calls that may configure system settings to automatically execute a program during system boot or logon to maintain persistence or gain higher-level privileges on compromised systems.&lt;br /&gt;['T1087.002']: Monitor for API calls that may attempt to gather information about domain accounts such as type of user, privileges and groups.&lt;br /&gt;['T1033']: Monitor for API calls that may attempt to dump credentials to obtain account login and credential material, normally in the form of a hash or a clear text password, from the operating system and software.&lt;br /&gt;['T1565.002']: Monitor for API calls associated with altering data. Remote access tools with built-in features may interact directly with the Windows API to gather information.&lt;br /&gt;['T1497.003']: Monitor for API calls that may employ various time-based methods to detect and avoid virtualization and analysis environments. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary's implementation and monitoring required.&lt;br /&gt;['T1082']: Monitor for API calls that may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). In cloud-based systems, native logging can be used to identify access to certain APIs and dashboards that may contain system information. Depending on how the environment is used, that data alone may not be useful due to benign use during normal operations.&lt;br /&gt;['T1622']: Monitor for API calls (such as &lt;code&gt;IsDebuggerPresent()&lt;/code&gt;) that may employ various means to detect and avoid debugged environments. Detecting actions related to debugger identification may be difficult depending on the adversary's implementation and monitoring required.&lt;br /&gt;['T1542.002']: Monitor for API calls associated with the use of device drivers and/or provided by SMART (Self-Monitoring, Analysis and Reporting Technology) (Citation: SanDisk SMART) (Citation: SmartMontools) disk monitoring may reveal malicious manipulations of components. Otherwise, this technique may be difficult to detect since malicious activity is taking place on system components possibly outside the purview of OS security and integrity mechanisms.&lt;br /&gt;['T1125']: Detection of this technique may be difficult due to the various APIs that may be used. Telemetry data regarding API use may not be useful depending on how a system is normally used, but may provide context to other potentially malicious activity occurring on a system. Behavior that could indicate technique use include an unknown or unusual process accessing APIs associated with devices or software that interact with the video camera, recording devices, or recording software, and a process periodically writing files to disk that contain video or camera image data.&lt;br /&gt;['T1120']: Monitor for API calls that may attempt to gather information about attached peripheral devices and components connected to a computer system.&lt;br /&gt;['T1057']: Monitor for API calls may attempt to get information about running processes on a system. &lt;br /&gt;['T1055.003']: Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such as &lt;code&gt;CreateRemoteThread&lt;/code&gt;, &lt;code&gt;SuspendThread&lt;/code&gt;/&lt;code&gt;SetThreadContext&lt;/code&gt;/&lt;code&gt;ResumeThread&lt;/code&gt;, and those that can be used to modify memory within another process, such as &lt;code&gt;VirtualAllocEx&lt;/code&gt;/&lt;code&gt;WriteProcessMemory&lt;/code&gt;, may be used for this technique.(Citation: Elastic Process Injection July 2017)&lt;br /&gt;['T1135']: Monitor for API calls that may look for folders and drives shared on remote systems as a means of identifying sources of information to gather as a precursor for Collection and to identify potential systems of interest for Lateral Movement.&lt;br /&gt;['T1574.013']: Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances. for known bad sequence of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such as &lt;code&gt;WriteProcessMemory()&lt;/code&gt; and &lt;code&gt;NtQueryInformationProcess()&lt;/code&gt; with the parameter set to &lt;code&gt;ProcessBasicInformation&lt;/code&gt; may be used for this technique.(Citation: Lazarus APT January 2022)&lt;br /&gt;['T1489']: Remote access tools with built-in features may interact directly with the Windows API to perform these functions outside of typical system utilities. For example, &lt;code&gt;ChangeServiceConfigW&lt;/code&gt; may be used by an adversary to prevent services from starting.(Citation: Talos Olympic Destroyer 2018)&lt;br /&gt;['T1134']: Monitor for API calls, loaded by a payload, for token manipulation only through careful analysis of user network activity, examination of running processes, and correlation with other endpoint and network behavior. There are many Windows API calls a payload can take advantage of to manipulate access tokens (e.g., &lt;code&gt;LogonUser&lt;/code&gt; (Citation: Microsoft LogonUser), &lt;code&gt;DuplicateTokenEx&lt;/code&gt;(Citation: Microsoft DuplicateTokenEx), and &lt;code&gt;ImpersonateLoggedOnUser&lt;/code&gt;(Citation: Microsoft ImpersonateLoggedOnUser)). Please see the referenced Windows API pages for more information.&lt;br /&gt;['T1555.005']: Monitor for API calls that may search for common password storage locations to obtain user credentials.&lt;br /&gt;['T1115']: Monitor API calls that could collect data stored in the clipboard from users copying information within or between applications.&lt;br /&gt;['T1556']: Monitor for calls to &lt;code&gt;OpenProcess&lt;/code&gt; that can be used to manipulate lsass.exe running on a domain controller as well as for malicious modifications to functions exported from authentication-related system DLLs (such as cryptdll.dll and samsrv.dll).(Citation: Dell Skeleton)&lt;br /&gt;['T1070']: Monitor for API calls that may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined malware.&lt;br /&gt;['T1087.001']: Monitor for API calls (such as &lt;code&gt;NetUserEnum()&lt;/code&gt;) that may attempt to gather local accounts information such as type of user, privileges and groups.&lt;br /&gt;['T1056.001']: Monitor for API calls to the SetWindowsHook, GetKeyState, and GetAsyncKeyState.(Citation: Adventures of a Keystroke) and look for common keylogging API calls. API calls alone are not an indicator of keylogging, but may provide behavioral data that is useful when combined with other information such as new files written to disk and unusual processes.&lt;br /&gt;['T1005']: Monitor for API calls that may search local system sources, such as file systems or local databases, to find files of interest and sensitive data prior to Exfiltration. &lt;br /&gt;['T1548']: Also look for any process API calls for behavior that may be indicative of [Process Injection](https://attack.mitre.org/techniques/T1055). Monitoring OS API callbacks for the execution can also be a way to detect this behavior but requires specialized security tooling.&lt;br /&gt;['T1055.004']: Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such as &lt;code&gt;SuspendThread&lt;/code&gt;/&lt;code&gt;SetThreadContext&lt;/code&gt;/&lt;code&gt;ResumeThread&lt;/code&gt;, &lt;code&gt;QueueUserAPC&lt;/code&gt;/&lt;code&gt;NtQueueApcThread&lt;/code&gt;, and those that can be used to modify memory within another process, such as &lt;code&gt;VirtualAllocEx&lt;/code&gt;/&lt;code&gt;WriteProcessMemory&lt;/code&gt;, may be used for this technique.(Citation: Elastic Process Injection July 2017)&lt;br /&gt;['T1134.002']: Monitor for API calls associated with detecting token manipulation only through careful analysis of user activity, examination of running processes, and correlation with other endpoint and network behavior. Analysts can also monitor for use of Windows APIs such as &lt;code&gt;CreateProcessWithTokenW&lt;/code&gt; and correlate activity with other suspicious behavior to reduce false positives that may be due to normal benign use by users and administrators.&lt;br /&gt;['T1546.009']: Monitor and analyze application programming interface (API) calls that are indicative of Registry edits, such as &lt;code&gt;RegCreateKeyEx&lt;/code&gt; and &lt;code&gt;RegSetValueEx&lt;/code&gt;. (Citation: Elastic Process Injection July 2017)&lt;br /&gt;['T1518']: Monitor for API calls that may attempt to get a listing of software and software versions that are installed on a system or in a cloud environment.&lt;br /&gt;['T1497.002']: Monitor for API calls that may employ various means to detect and avoid virtualization and analysis environments. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary's implementation and monitoring required.&lt;br /&gt;['T1055.011']: Monitor for API calls related to enumerating and manipulating EWM such as GetWindowLong (Citation: Microsoft GetWindowLong function) and SetWindowLong (Citation: Microsoft SetWindowLong function). Malware associated with this technique have also used SendNotifyMessage (Citation: Microsoft SendNotifyMessage function) to trigger the associated window procedure and eventual malicious injection. (Citation: Elastic Process Injection July 2017)&lt;br /&gt;['T1012']: Monitor for API calls (such as &lt;code&gt;RegOpenKeyExA&lt;/code&gt;) that may interact with the Windows Registry to gather information about the system, configuration, and installed software. &lt;br /&gt;['T1614']: Remote access tools with built-in features may interact directly with the Windows API, such as calling &lt;code&gt; GetLocaleInfoW&lt;/code&gt; to gather information.(Citation: FBI Ragnar Locker 2020)&lt;br /&gt;['T1555.001']: Monitor for Keychain Services API calls, specifically legacy extensions such as &lt;code&gt;SecKeychainFindInternetPassword&lt;/code&gt;, that may collect Keychain data from a system to acquire credentials.(Citation: Keychain Items Apple Dev API)&lt;br /&gt;['T1106']: Monitoring API calls may generate a significant amount of data and may not be useful for defense unless collected under specific circumstances, since benign use of API functions are common and may be difficult to distinguish from malicious behavior. Correlation of other events with behavior surrounding API function calls using API monitoring will provide additional context to an event that may assist in determining if it is due to malicious behavior. Correlation of activity by process lineage by process ID may be sufficient.&lt;br /&gt;['T1218']: Monitor for API calls that may forge credential materials that can be used to gain access to web applications or Internet services. &lt;br /&gt;['T1070.001']: Monitor for Windows API calls that may clear Windows Event Logs to hide the activity of an intrusion.&lt;br /&gt;['T1611']: Remote access tools with built-in features may interact directly with the Windows API, such as calling &lt;code&gt;GetLocaleInfoW()&lt;/code&gt; to gather system location information.(Citation: FBI Ragnar Locker 2020)&lt;br /&gt;['T1111']: Monitor for API calls associated with polling to intercept keystrokes.&lt;br /&gt;['T1003.001']: Monitor for API calls that may attempt to access credential material stored in the process memory of the Local Security Authority Subsystem Service (LSASS).&lt;br /&gt;['T1049']: Monitor for API calls that may attempt to get a listing of network connections to or from the compromised system they are currently accessing or from remote systems by querying for information over the network.&lt;br /&gt;['T1482']: Monitor for API calls associated with gathering information on domain trust relationships that may be used to identify lateral movement like DSEnumerateDomainTrusts() Win32 API call to spot activity associated with Domain Trust Discovery.(Citation: Harmj0y Domain Trusts) Information may also be acquired through Windows system management tools such as PowerShell. The .NET method GetAllTrustRelationships() can be an indicator of Domain Trust Discovery.(Citation: Microsoft GetAllTrustRelationships)&lt;br /&gt;['T1129']: Monitor for API calls that may execute malicious payloads via loading shared modules.&lt;br /&gt;['T1124']: Monitor for API calls that may gather the system time and/or time zone from a local or remote system. Remote access tools with built-in features may interact directly with the Windows API to gather information.&lt;br /&gt;['T1542']: Monitor for API calls that may abuse Pre-OS Boot mechanisms as a way to establish persistence on a system. Disk check, forensic utilities, and data from device drivers (i.e. API calls) may reveal anomalies that warrant deeper investigation. (Citation: ITWorld Hard Disk Health Dec 2014)&lt;br /&gt;['T1055']: Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such as &lt;code&gt;CreateRemoteThread&lt;/code&gt;, &lt;code&gt;SuspendThread&lt;/code&gt;/&lt;code&gt;SetThreadContext&lt;/code&gt;/&lt;code&gt;ResumeThread&lt;/code&gt;, &lt;code&gt;QueueUserAPC&lt;/code&gt;/&lt;code&gt;NtQueueApcThread&lt;/code&gt;, and those that can be used to modify memory within another process, such as &lt;code&gt;VirtualAllocEx&lt;/code&gt;/&lt;code&gt;WriteProcessMemory&lt;/code&gt;, may be used for this technique.(Citation: Elastic Process Injection July 2017) Monitoring for Linux specific calls such as the ptrace system call should not generate large amounts of data due to their specialized nature, and can be a very effective method to detect some of the common process injection methods.(Citation: ArtOfMemoryForensics) (Citation: GNU Acct) (Citation: RHEL auditd) (Citation: Chokepoint preload rootkits)&lt;br /&gt;['T1055.002']: Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such as &lt;code&gt;CreateRemoteThread&lt;/code&gt; and those that can be used to modify memory within another process, such as &lt;code&gt;VirtualAllocEx&lt;/code&gt;/&lt;code&gt;WriteProcessMemory&lt;/code&gt;, may be used for this technique.(Citation: Elastic Process Injection July 2017)&lt;br /&gt;['T1547.010']: Monitor process API calls to &lt;code&gt;AddMonitor&lt;/code&gt;.(Citation: AddMonitor)&lt;br /&gt;['T1614.001']: Monitor for API calls that may attempt to gather information about the system language of a victim in order to infer the geographical location of that host.&lt;br /&gt;['T1056.004']: Monitor for API calls to the SetWindowsHookEx and SetWinEventHook functions, which install a hook procedure.(Citation: Microsoft Hook Overview)(Citation: Volatility Detecting Hooks Sept 2012) Also consider analyzing hook chains (which hold pointers to hook procedures for each type of hook) using tools(Citation: Volatility Detecting Hooks Sept 2012)(Citation: PreKageo Winhook Jul 2011)(Citation: Jay GetHooks Sept 2011) or by programmatically examining internal kernel structures.(Citation: Zairon Hooking Dec 2006)(Citation: EyeofRa Detecting Hooking June 2017)&lt;br /&gt;['T1548.004']: Monitoring OS API callbacks for the execution can also be a way to detect this behavior but requires specialized security tooling.&lt;br /&gt;['T1555.004']: Consider monitoring API calls such as &lt;code&gt;CredEnumerateA&lt;/code&gt; that may list credentials from the Windows Credential Manager.(Citation: Microsoft CredEnumerate)(Citation: Delpy Mimikatz Crendential Manager)&lt;br /&gt;['T1218.002']: Monitor for API calls that may forge web cookies that can be used to gain access to web applications or Internet services.&lt;br /&gt;['T1620']: Monitor for code artifacts associated with reflectively loading code, such as the abuse of .NET functions such as &lt;code&gt;Assembly.Load()&lt;/code&gt; and [Native API](https://attack.mitre.org/techniques/T1106) functions such as &lt;code&gt;CreateThread()&lt;/code&gt;, &lt;code&gt;memfd_create()&lt;/code&gt;, &lt;code&gt;execve()&lt;/code&gt;, and/or &lt;code&gt;execveat()&lt;/code&gt;.(Citation: 00sec Droppers)(Citation: S1 Old Rat New Tricks)&lt;br /&gt;['T1055.013']: Monitor and analyze calls to &lt;code&gt;CreateTransaction&lt;/code&gt;, &lt;code&gt;CreateFileTransacted&lt;/code&gt;, &lt;code&gt;RollbackTransaction&lt;/code&gt;, and other rarely used functions indicative of TxF activity. Process Doppelganging also invokes an outdated and undocumented implementation of the Windows process loader via calls to &lt;code&gt;NtCreateProcessEx&lt;/code&gt; and &lt;code&gt;NtCreateThreadEx&lt;/code&gt; as well as API calls used to modify memory within another process, such as &lt;code&gt;WriteProcessMemory&lt;/code&gt;. (Citation: BlackHat Process Doppelganging Dec 2017) (Citation: hasherezade Process Doppelganging Dec 2017)&lt;br /&gt;['T1543']: Monitor for API calls that may create or modify system-level processes to repeatedly execute malicious payloads as part of persistence.&lt;br /&gt;['T1556.001']: Monitor for API calls to OpenProcess that can be used to manipulate lsass.exe running on a domain controller&lt;br /&gt;['T1055.015']: Consider monitoring for excessive use of &lt;code&gt;SendMessage&lt;/code&gt; and/or &lt;code&gt;PostMessage&lt;/code&gt; API functions with &lt;code&gt;LVM_SETITEMPOSITION&lt;/code&gt; and/or &lt;code&gt;LVM_GETITEMPOSITION&lt;/code&gt; arguments.

Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such as &lt;code&gt;FindWindow&lt;/code&gt;, &lt;code&gt;FindWindowEx&lt;/code&gt;, &lt;code&gt;EnumWindows&lt;/code&gt;, &lt;code&gt;EnumChildWindows&lt;/code&gt;, and those that can be used to modify memory within another process, such as &lt;code&gt;VirtualAllocEx&lt;/code&gt;/&lt;code&gt;WriteProcessMemory&lt;/code&gt;, may be abused for this technique. &lt;br /&gt;['T1547.012']: Monitor process API calls to &lt;code&gt;AddPrintProcessor&lt;/code&gt; and &lt;code&gt;GetPrintProcessorDirectory&lt;/code&gt;.&lt;br /&gt;['T1016']: Monitor for API calls (such as &lt;code&gt;GetAdaptersInfo()&lt;/code&gt; and &lt;code&gt;GetIpNetTable()&lt;/code&gt;) that may gather details about the network configuration and settings, such as IP and/or MAC addresses.&lt;br /&gt;['T1113']: Monitoring for screen capture behavior will depend on the method used to obtain data from the operating system and write output files. Detection methods could include collecting information from unusual processes using API calls used to obtain image data, and monitoring for image files written to disk, such as &lt;code&gt;CopyFromScreen&lt;/code&gt;, &lt;code&gt;xwd&lt;/code&gt;, or &lt;code&gt;screencapture&lt;/code&gt;.(Citation: CopyFromScreen .NET)(Citation: Antiquated Mac Malware). The sensor data may need to be correlated with other events to identify malicious activity, depending on the legitimacy of this behavior within a given network environment.&lt;br /&gt;['T1564']: Monitor for API calls that may attempt to hide artifacts associated with their behaviors to evade detection.&lt;br /&gt;['T1518.001']: Monitor for API calls that may attempt to get a listing of security software, configurations, defensive tools, and sensors that are installed on a system or in a cloud environment.&lt;br /&gt;['T1056']: Monitor for API calls to SetWindowsHook, GetKeyState, and GetAsyncKeyState (Citation: Adventures of a Keystroke)&lt;br /&gt;['T1010']: Monitor for API calls (such as &lt;code&gt;GetForegroundWindow()&lt;/code&gt;) that may attempt to get a listing of open application windows. &lt;br /&gt;['T1059.002']: Monitor for execution of AppleScript through &lt;code&gt;osascript&lt;/code&gt; and usage of the &lt;code&gt;NSAppleScript&lt;/code&gt; and &lt;code&gt;OSAScript&lt;/code&gt; APIs that may be related to other suspicious behavior occurring on the system.&lt;br /&gt;['T1546.010']: Monitor and analyze application programming interface (API) calls that are indicative of Registry edits such as &lt;code&gt;RegCreateKeyEx&lt;/code&gt; and &lt;code&gt;RegSetValueEx&lt;/code&gt;. (Citation: Elastic Process Injection July 2017)&lt;br /&gt;['T1543.003']: Monitor for API calls that may create or modify Windows services (ex: ` CreateServiceW()`) to repeatedly execute malicious payloads as part of persistence.&lt;br /&gt;['T1083']: Monitor for API calls that may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system.&lt;br /&gt;['T1555.003']: Monitor for API calls that may acquire credentials from web browsers by reading files specific to the target browser.(Citation: Talos Olympic Destroyer 2018)&lt;br /&gt;['T1564.004']: Monitor calls to the &lt;code&gt;ZwSetEaFile&lt;/code&gt; and &lt;code&gt;ZwQueryEaFile&lt;/code&gt; Windows API functions as well as binaries used to interact with EA, (Citation: Oddvar Moe ADS1 Jan 2018) (Citation: Oddvar Moe ADS2 Apr 2018) and consider regularly scanning for the presence of modified information. (Citation: SpectorOps Host-Based Jul 2017)&lt;br /&gt;['T1564.001']: Monitor newly executed processes that may set files and directories to be hidden to evade detection mechanisms.&lt;br /&gt;['T1546.010']: Monitor newly executed processes that may establish persistence and/or elevate privileges by executing malicious content triggered by AppInit DLLs loaded into processes.&lt;br /&gt;['T1490']: Use process monitoring to monitor the execution and command line parameters of binaries involved in inhibiting system recovery, such as vssadmin, wbadmin, and bcdedit.&lt;br /&gt;['T1218.011']: Use process monitoring to monitor the execution and arguments of rundll32.exe. Compare recent invocations of rundll32.exe with prior history of known good arguments and loaded DLLs to determine anomalous and potentially adversarial activity.&lt;br /&gt;['T1489']: Monitor for newly executed processes that may stop or disable services on a system to render those services unavailable to legitimate users.&lt;br /&gt;['T1057']: Monitor for newly executed processes that may attempt to get information about running processes on a system.&lt;br /&gt;['T1547.015']: Monitor processes that start at login for unusual or unknown applications. Usual applications for login items could include what users add to configure their user environment, such as email, chat, or music applications, or what administrators include for organization settings and protections. Check for running applications from login items that also have abnormal behavior, such as establishing network connections.&lt;br /&gt;['T1069']: Monitor for newly constructed processes and/or command-lines for actions that could be taken to gather system and network information. System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.&lt;br /&gt;['T1546.015']: Monitor newly executed processes that may establish persistence by executing malicious content triggered by hijacked references to Component Object Model (COM) objects.&lt;br /&gt;['T1140']: Monitor for newly executed processes that attempt to hide artifacts of an intrusion, such as common archive file applications and extensions (ex: Zip and RAR archive tools), and correlate with other suspicious behavior to reduce false positives from normal user and administrator behavior.&lt;br /&gt;['T1546.001']: Monitor for newly executed processes that may establish persistence by executing malicious content triggered by a file type association.&lt;br /&gt;['T1222.002']: Monitor for newly executed processes that may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files.(Citation: Hybrid Analysis Icacls1 June 2018)(Citation: Hybrid Analysis Icacls2 May 2018)&lt;br /&gt;['T1087.002']: Monitor for processes that can be used to enumerate domain accounts and groups, such as &lt;code&gt;net.exe&lt;/code&gt; and &lt;code&gt;net1.exe&lt;/code&gt;, especially when executed in quick succession.(Citation: Elastic - Koadiac Detection with EQL)
 
Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.&lt;br /&gt;['T1547.009']: Monitor for newly executed processes that may create or edit shortcuts to run a program during system boot or user login.&lt;br /&gt;['T1622']: Monitoring for suspicious processes being spawned that gather a variety of system information or perform other forms of Discovery, especially in a short period of time, may aid in detection. Debugger related system checks will likely occur in the first steps of an operation but may also occur throughout as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained.&lt;br /&gt;['T1611']: Monitor for process activity (such as unexpected processes spawning outside a container and/or on a host) that might indicate an attempt to escape from a privileged container to host. &lt;br /&gt;['T1569.001']: Monitor for newly executed daemons that may abuse launchctl to execute commands or programs.&lt;br /&gt;['T1217']: Monitor newly constructed processes, e.g. browsers, for to gather personal information about users (ex: banking sites, interests, social media, etc.)&lt;br /&gt;['T1546.004']: Monitor newly executed processes that may establish persistence through executing malicious commands triggered by a user's shell.&lt;br /&gt;['T1056']: Monitor for newly executed processes conducting malicious activity &lt;br /&gt;['T1548.004']: Consider monitoring for &lt;code&gt;/usr/libexec/security_authtrampoline&lt;/code&gt; executions which may indicate that &lt;code&gt;AuthorizationExecuteWithPrivileges&lt;/code&gt; is being executed. MacOS system logs may also indicate when &lt;code&gt;AuthorizationExecuteWithPrivileges&lt;/code&gt; is being called.&lt;br /&gt;['T1548']: Monitor for newly executed processes that may circumvent mechanisms designed to control elevate privileges to gain higher-level permissions.&lt;br /&gt;['T1218.012']: Use process monitoring to monitor the execution and arguments of verclsid.exe. Compare recent invocations of verclsid.exe with prior history of known good arguments and loaded files to determine anomalous and potentially adversarial activity. Depending on the environment, it may be unusual for verclsid.exe to have a parent process of a Microsoft Office product. It may also be unusual for verclsid.exe to have any child processes or to make network connections or file modifications.&lt;br /&gt;['T1559']: Monitor for newly executed processes that are associated with abuse of IPC mechanisms&lt;br /&gt;['T1553.001']: Monitor and investigate attempts to modify extended file attributes with utilities such as &lt;code&gt;xattr&lt;/code&gt;. Built-in system utilities may generate high false positive alerts, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible. &lt;br /&gt;['T1059.004']: Monitor for newly executed processes that may abuse Unix shell commands and scripts for execution.&lt;br /&gt;['T1059']: Monitor log files for process execution through command-line and scripting activities. This information can be useful in gaining additional insight to adversaries' actions through how they use native processes or custom tools. Also monitor for loading of modules associated with specific languages.&lt;br /&gt;['T1016.001']: Monitor for executed processes (such as tracert or ping) that may check for Internet connectivity on compromised systems.&lt;br /&gt;['T1574.008']: Monitor for newly executed processes  for process executable paths that are named for partial directories.&lt;br /&gt;['T1137.005']: Monitor newly executed processes that may abuse Microsoft Outlook rules to obtain persistence on a compromised system.&lt;br /&gt;['T1614.001']: Monitor for newly executed processes that may attempt to gather information about the system language of a victim in order to infer the geographical location of that host.&lt;br /&gt;['T1559.002']: Monitor for newly executed processes that may use Windows Dynamic Data Exchange (DDE) to execute arbitrary commands.&lt;br /&gt;['T1518.001']: Monitor newly executed processes that may attempt to get a listing of security software, configurations, defensive tools, and sensors that are installed on a system or in a cloud environment.&lt;br /&gt;['T1482']: Monitor for newly executed processes that may attempt to gather information on domain trust relationships that may be used to identify lateral movement opportunities in Windows multi-domain/forest environments.&lt;br /&gt;['T1505.003']: Web shells can be difficult to detect. Unlike other forms of persistent remote access, they do not initiate connections. The portion of the Web shell that is on the server may be small and innocuous looking. The PHP version of the China Chopper Web shell, for example, is the following short payload: (Citation: Lee 2013)
&lt;code&gt;&lt;?php @eval($_POST['password']);&gt;&lt;/code&gt;
Nevertheless, detection mechanisms exist. Process monitoring may be used to detect Web servers that perform suspicious actions such as spawning cmd.exe or accessing files that are not in the Web directory.(Citation: NSA Cyber Mitigating Web Shells)&lt;br /&gt;['T1543']: New, benign system processes may be created during installation of new software.&lt;br /&gt;['T1574.012']: Monitor for newly executed processes, such as setx.exe, that may abuse of the COR_PROFILER variable, monitor for new suspicious unmanaged profiling DLLs loading into .NET processes shortly after the CLR causing abnormal process behavior.(Citation: Red Canary COR_PROFILER May 2020)&lt;br /&gt;['T1003']: Monitor for newly executed processes that may be indicative of credential dumping. On Windows 8.1 and Windows Server 2012 R2, monitor Windows Logs for LSASS.exe creation to verify that LSASS started as a protected process.&lt;br /&gt;['T1134.004']: Monitor for newly constructed processes and/or command-lines that may abuse mechanisms to evade defenses, such as those blocking processes spawning directly from Office documents, and analysis targeting unusual/potentially malicious parent-child process relationships, such as spoofing the PPID of PowerShell/Rundll32 to be explorer.exe&lt;br /&gt;['T1485']: Monitor for newly executed processes of binaries that could be involved in data destruction activity, such as SDelete.&lt;br /&gt;['T1087.003']: Monitor for newly executed processes, such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001) , with arguments that can be used to enumerate email addresses and accounts.&lt;br /&gt;['T1037.004']: Monitor for newly constructed processes and/or command-lines that  execute /etc/rc.local if present.&lt;br /&gt;['T1069.003']: Monitor newly executed processes that may attempt to find cloud groups and permission settings.&lt;br /&gt;['T1563.001']: Monitor newly executed processes that may hijack a legitimate user's SSH session to move laterally within an environment.&lt;br /&gt;['T1547.014']: Monitor newly executed processes that may achieve persistence by adding a Registry key to the Active Setup of the local machine.&lt;br /&gt;['T1021.004']: Monitor for newly executed processes that may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to log into remote machines using Secure Shell (SSH). For example, on macOS systems &lt;code&gt;log show --predicate 'process = "sshd"'&lt;/code&gt; can be used to review incoming SSH connection attempts for suspicious activity. The command &lt;code&gt;log show --info --predicate 'process = "ssh" or eventMessage contains "ssh"'&lt;/code&gt; can be used to review outgoing SSH connection activity.(Citation: Apple Unified Log Analysis Remote Login and Screen Sharing)&lt;br /&gt;['T1562.009']: Monitor newly executed processes that may abuse Windows safe mode to disable endpoint defenses.&lt;br /&gt;['T1010']: Monitor for newly executed processes that may attempt to get a listing of open application windows. System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.&lt;br /&gt;['T1529']: Monitor for newly executed processes of binaries involved in shutting down or rebooting systems.&lt;br /&gt;['T1136.002']: Monitor newly executed processes associated with account creation, such as net.exe&lt;br /&gt;['T1553.004']: Monitor for processes, such as &lt;code&gt;certmgr.exe&lt;/code&gt; (macOS) or &lt;code&gt;certutil.exe&lt;/code&gt; (Windows), that can be used to install root certificates. A system's root certificates are unlikely to change frequently. Monitor new certificates installed on a system that could be due to malicious activity. (Citation: SpectorOps Code Signing Dec 2017) Check pre-installed certificates on new systems to ensure unnecessary or suspicious certificates are not present. Microsoft provides a list of trustworthy root certificates online and through &lt;code&gt;authroot.stl&lt;/code&gt;. (Citation: SpectorOps Code Signing Dec 2017) The Sysinternals Sigcheck utility can also be used (&lt;code&gt;sigcheck[64].exe -tuv&lt;/code&gt;) to dump the contents of the certificate store and list valid certificates not rooted to the Microsoft Certificate Trust List. (Citation: Microsoft Sigcheck May 2017)&lt;br /&gt;['T1059.001']: Monitor for newly executed processes that may abuse PowerShell commands and scripts for execution.&lt;br /&gt;['T1552.002']: Monitor newly executed processes for applications that can be used to query the Registry, such as [Reg](https://attack.mitre.org/software/S0075), and collect command parameters that may indicate credentials are being searched. Correlate activity with related suspicious behavior that may indicate an active intrusion to reduce false positives.&lt;br /&gt;['T1053']: Monitor for newly executed processes that may abuse task scheduling functionality to facilitate initial or recurring execution of malicious code.&lt;br /&gt;['T1547.003']: Monitor newly executed processes, such as the W32tm.exe utility. (Citation: Microsoft W32Time May 2017) The Sysinternals Autoruns tool may also be used to analyze auto-starting locations, including DLLs listed as time providers. (Citation: TechNet Autoruns)&lt;br /&gt;['T1098']: Monitor for newly constructed processes indicative of modifying account settings, such as those that modify authorized_keys or /etc/ssh/sshd_config files.&lt;br /&gt;['T1098.004']: Monitor for suspicious processes modifying the authorized_keys or /etc/ssh/sshd_config files.&lt;br /&gt;['T1203']: Monitor for abnormal process creations, such as a Command and Scripting Interpreter spawning from a potentially exploited application. Also look for other behavior on the endpoint system that might indicate successful compromise, such as abnormal behavior of browser or Office processes.&lt;br /&gt;['T1052.001']: Monitor for newly executed processes when removable media is mounted &lt;br /&gt;['T1221']: Analyze process behavior to determine if an Office application is performing actions, such as opening network connections, reading files, spawning abnormal child processes (ex: [PowerShell](https://attack.mitre.org/techniques/T1059/001)), or other suspicious actions that could relate to post-compromise behavior.&lt;br /&gt;['T1053.003']: Monitor for newly constructed processes and/or command-lines that executed through scheduled tasks may show up as outlier processes that have not been seen before when compared against historical data. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.&lt;br /&gt;['T1480.001']: Monitoring for suspicious processes being spawned that gather a variety of system information or perform other forms of [Discovery](https://attack.mitre.org/tactics/TA0007), especially in a short period of time, may aid in detection. Detecting the use of environmental keying may be difficult depending on the implementation.&lt;br /&gt;['T1543.004']: Monitor for newly executed processes that may create or modify Launch Daemons to execute malicious payloads as part of persistence.&lt;br /&gt;['T1564.010']: Analyze process behavior to determine if a process is performing actions it usually does not and/or do no align with its logged command-line arguments.

Detection of process argument spoofing may be difficult as adversaries may momentarily modify stored arguments used for malicious execution. These changes may bypass process creation detection and/or later process memory analysis. Consider monitoring for [Process Hollowing](https://attack.mitre.org/techniques/T1055/012), which includes monitoring for process creation (especially those in a suspended state) as well as access and/or modifications of these processes (especially by the parent process) via Windows API calls.(Citation: Nviso Spoof Command Line 2020)(Citation: Mandiant Endpoint Evading 2019)&lt;br /&gt;['T1053.005']: Monitor for newly constructed processes and/or command-lines that execute from the svchost.exe in Windows 10 and the Windows Task Scheduler taskeng.exe for older versions of Windows. (Citation: Twitter Leoloobeek Scheduled Task) If scheduled tasks are not used for persistence, then the adversary is likely to remove the task when the action is complete.&lt;br /&gt;['T1560.001']: Monitor for newly constructed processes and/or command-lines that aid in compression or encrypting data that is collected prior to exfiltration, such as 7-Zip, WinRAR, and WinZip.  &lt;br /&gt;['T1543.003']: Suspicious program execution through services may show up as outlier processes that have not been seen before when compared against historical data. Look for abnormal process call trees from known services and for execution of other commands that could relate to Discovery or other adversary techniques. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.&lt;br /&gt;['T1546.008']: Monitor newly executed processes that may establish persistence and/or elevate privileges by executing malicious content triggered by accessibility features.&lt;br /&gt;['T1037.002']: Monitor for processes and/or command-lines to install or modify login hooks, as well as processes spawned at user login by these hooks.&lt;br /&gt;['T1021.006']: Monitor for newly executed processes that may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to interact with remote systems using Windows Remote Management (WinRM), as well as service processes such as &lt;code&gt;wmiprvse.exe&lt;/code&gt; on destination hosts.&lt;br /&gt;['T1216.001']: Monitor script processes, such as `cscript that may be used to proxy execution of malicious files.&lt;br /&gt;['T1189']: Monitor for newly executed processes to gain access to a system through a user visiting a website over the normal course of browsing.&lt;br /&gt;['T1564.003']: Monitor newly executed processes that may use hidden windows to conceal malicious activity from the plain sight of users.&lt;br /&gt;['T1053.002']: Monitor for newly constructed processes with command-lines that create/modify or are executed from tasks. For example, on Windows tasks may spawn from `svchost.exe` or the Windows Task Scheduler `taskeng.exe` for older OS versions. (Citation: Twitter Leoloobeek Scheduled Task) Suspicious program execution through scheduled tasks may show up as outlier processes that have not been seen before when compared against historical data.&lt;br /&gt;['T1546.005']: Monitor newly executed processes that may establish persistence by executing malicious content triggered by an interrupt signal.&lt;br /&gt;['T1614']: Monitor newly executed processes that may gather information in an attempt to calculate the geographical location of a victim host.&lt;br /&gt;['T1136']: Monitor newly executed processes associated with account creation, such as net.exe &lt;br /&gt;['T1218.005']: Use process monitoring to monitor the execution and arguments of mshta.exe.&lt;br /&gt;['T1037.005']: Monitor for newly constructed processes and/or command-lines that execute during the boot up process to check for unusual or unknown applications and behavior&lt;br /&gt;['T1546.011']: Monitor newly executed processs for sdbinst.exe for potential indications of application shim abuse. 
There are several public tools available that will detect shims that are currently available (Citation: Black Hat 2015 App Shim):
* Shim-Process-Scanner - checks memory of every running process for any shim flags
* Shim-Detector-Lite - detects installation of custom shim databases
* Shim-Guard - monitors registry for any shim installations
* ShimScanner - forensic tool to find active shims in memory
* ShimCacheMem - Volatility plug-in that pulls shim cache from memory (note: shims are only cached after reboot)&lt;br /&gt;['T1497.001']: Virtualization, sandbox, user activity, and related discovery techniques will likely occur in the first steps of an operation but may also occur throughout as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary's implementation and monitoring required. Monitoring for suspicious processes being spawned that gather a variety of system information or perform other forms of Discovery, especially in a short period of time, may aid in detection.&lt;br /&gt;['T1218.001']: Monitor and analyze the execution and arguments of hh.exe. (Citation: MsitPros CHM Aug 2017) Compare recent invocations of hh.exe with prior history of known good arguments to determine anomalous and potentially adversarial activity (ex: obfuscated and/or malicious commands). Non-standard process execution trees may also indicate suspicious or malicious behavior, such as if hh.exe is the parent process for suspicious processes and activity relating to other adversarial techniques.&lt;br /&gt;['T1211']: Monitor for abnormal process creations, such as a Command and Scripting Interpreter spawning from a potentially exploited application. Also look for behavior on the system that might indicate successful compromise, such as abnormal behavior of processes.&lt;br /&gt;['T1091']: Monitor for newly executed processes that execute from removable media after it is mounted or when initiated by a user. If a remote access tool is used in this manner to move laterally, then additional actions are likely to occur after execution, such as opening network connections for Command and Control and system and network information Discovery.&lt;br /&gt;['T1222.001']: Monitor for newly constructed processes and/or command-lines that can interact with the DACLs using built-in Windows commands, such as icacls, cacls, takeown, and attrib, which can grant adversaries higher permissions on specific files and folders.&lt;br /&gt;['T1574']: Monitor processes for unusual activity (e.g., a process that does not use the network begins to do so, abnormal process call trees). Track library metadata, such as a hash, and compare libraries that are loaded at process execution time against previous executions to detect differences that do not correlate with patching or updates.&lt;br /&gt;['T1574.010']: Monitor for newly executed processes that may execute their own malicious payloads by hijacking the binaries used by services.&lt;br /&gt;['T1218.008']: Use process monitoring to monitor the execution and arguments of odbcconf.exe. Compare recent invocations of odbcconf.exe with prior history of known good arguments and loaded DLLs to determine anomalous and potentially adversarial activity.&lt;br /&gt;['T1021.001']: Monitor for newly executed processes (such as &lt;code&gt;mstsc.exe&lt;/code&gt;) that may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to log into a computer using the Remote Desktop Protocol (RDP). The adversary may then perform actions that spawn additional processes as the logged-on user.&lt;br /&gt;['T1615']: Monitor for newly executed processes that may gather information on Group Policy settings to identify paths for privilege escalation, security measures applied within a domain, and to discover patterns in domain objects that can be manipulated or used to blend in the environment.&lt;br /&gt;['T1480']: Monitoring for suspicious processes being spawned that gather a variety of system information or perform other forms of [Discovery](https://attack.mitre.org/tactics/TA0007), especially in a short period of time, may aid in detection. Detecting the use of guardrails may be difficult depending on the implementation.&lt;br /&gt;['T1564']: Monitor newly executed processes that may attempt to hide artifacts associated with their behaviors to evade detection.&lt;br /&gt;['T1021.005']: Monitor for newly executed processes that may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to remotely control machines using Virtual Network Computing (VNC). For example, on macOS systems the &lt;code&gt;screensharingd&lt;/code&gt; process may be related to VNC connection activity.(Citation: Apple Unified Log Analysis Remote Login and Screen Sharing)&lt;br /&gt;['T1563.002']: Consider monitoring processes for tscon.exe usage&lt;br /&gt;['T1059.005']: Monitor for events associated with VB execution, such as Office applications spawning processes, usage of the Windows Script Host (typically cscript.exe or wscript.exe). VB execution is likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used.&lt;br /&gt;['T1574.006']: Monitor for newly executed processes for unusual activity (e.g., a process that does not use the network begins to do so).&lt;br /&gt;['T1497.003']: Time-based evasion will likely occur in the first steps of an operation but may also occur throughout as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary's implementation and monitoring required. Monitoring for suspicious processes being spawned that gather a variety of system information or perform other forms of Discovery, especially in a short period of time, may aid in detection.&lt;br /&gt;['T1087.001']: Monitor for processes that can be used to enumerate user accounts and groups such as &lt;code&gt;net.exe&lt;/code&gt; and &lt;code&gt;net1.exe&lt;/code&gt;, especially when executed in quick succession.(Citation: Elastic - Koadiac Detection with EQL)
 
Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).&lt;br /&gt;['T1546.006']: Monitor processes for those that may be used to modify binary headers.&lt;br /&gt;['T1219']: Monitor for applications and processes related to remote admin tools. Correlate activity with other suspicious behavior that may reduce false positives if these tools are used by legitimate users and administrators. [Domain Fronting](https://attack.mitre.org/techniques/T1090/004) may be used in conjunction to avoid defenses. Adversaries will likely need to deploy and/or install these remote tools to compromised systems. It may be possible to detect or prevent the installation of these tools with host-based solutions.&lt;br /&gt;['T1027.004']: Monitor for newly constructed processes and/or command-lines that look for non-native binary formats and cross-platform compiler and execution frameworks like Mono and determine if they have a legitimate purpose on the system. Typically these should only be used in specific and limited cases, like for software development.&lt;br /&gt;['T1059.007']: Monitor for events associated with scripting execution, such as process activity, usage of the Windows Script Host (typically cscript.exe or wscript.exe), file activity involving scripts&lt;br /&gt;['T1553.006']: Monitor processes and command-line arguments for actions that could be taken to modify the code signing policy of a system, such as &lt;code&gt;bcdedit.exe -set TESTSIGNING ON&lt;/code&gt;. (Citation: Microsoft TESTSIGNING Feb 2021)&lt;br /&gt;['T1555.001']: Monitor processes spawned by command line utilities to manipulate keychains directly, such as &lt;code&gt;security&lt;/code&gt;, combined with arguments to collect passwords, such as &lt;code&gt;dump-keychain -d&lt;/code&gt;.&lt;br /&gt;['T1220']: Use process monitoring to monitor the execution and arguments of msxsl.exe and wmic.exe. (Citation: LOLBAS Wmic) (Citation: Twitter SquiblyTwo Detection APR 2018) Command arguments used before and after the script invocation may also be useful in determining the origin and purpose of the payload being loaded. The presence of msxsl.exe or other utilities that enable proxy execution that are typically used for development, debugging, and reverse engineering on a system that is not used for these purposes may be suspicious.&lt;br /&gt;['T1564.002']: Monitor newly executed processes for actions that could be taken to add a new user and subsequently hide it from login screens.&lt;br /&gt;['T1497.002']: User activity-based checks will likely occur in the first steps of an operation but may also occur throughout as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary's implementation and monitoring required. Monitoring for suspicious processes being spawned that gather a variety of system information or perform other forms of Discovery, especially in a short period of time, may aid in detection.&lt;br /&gt;['T1563']: Monitor newly executed processes that may take control of preexisting sessions with remote services to move laterally in an environment.&lt;br /&gt;['T1547.013']: Monitor newly executed processes that may modify XDG autostart entries to execute programs or commands during system boot.&lt;br /&gt;['T1072']: Monitor for newly executed processes that does not correlate to known good software. Analyze the process execution trees, historical activities from the third-party application (such as what types of files are usually pushed), and the resulting activities or events from the file/binary/script pushed to systems. &lt;br /&gt;['T1120']: Monitor for newly executed processes that may attempt to gather information about attached peripheral devices and components connected to a computer system.&lt;br /&gt;['T1553']: Monitor processes and arguments for malicious attempts to modify trust settings, such as the installation of root certificates or modifications to trust attributes/policies applied to files.&lt;br /&gt;['T1082']: Monitor newly executed processes that may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture.&lt;br /&gt;['T1569']: Monitor newly executed processes that may abuse system services or daemons to execute commands or programs.&lt;br /&gt;['T1609']: Container administration service activities and executed commands can be captured through logging of process execution with command-line arguments on the container as well as within the underlying host.&lt;br /&gt;['T1204.002']: Monitor for newly constructed processes and/or command-lines for applications that may be used by an adversary to gain initial access that require user interaction. This includes compression applications, such as those for zip files, that can be used to Deobfuscate/Decode Files or Information in payloads.&lt;br /&gt;['T1070.005']: Monitor for newly constructed processes and/or command line execution that can be used to remove network share connections via the net.exe process. &lt;br /&gt;['T1546.003']: Monitor newly executed processes that result from the execution of subscriptions (i.e. spawning from the WmiPrvSe.exe WMI Provider Host process).&lt;br /&gt;['T1016']: Monitor for executed processes (such as ipconfig/ifconfig and arp) with arguments that may look for details about the network configuration and settings, such as IP and/or MAC addresses.&lt;br /&gt;['T1647']: Monitor for newly executed processes with arguments that can modify property list (plist) files.&lt;br /&gt;['T1562.010']: Monitor newly executed processes that may downgrade or use a version of system features that may be outdated, vulnerable, and/or does not support updated security controls such as logging.&lt;br /&gt;['T1548.003']: Monitor newly executed processes that may perform sudo caching and/or use the suoders file to elevate privileges.&lt;br /&gt;['T1053.006']: Monitor for newly constructed processes and/or command-lines that will have a parent process of 'systemd', a parent process ID of 1, and will usually execute as the 'root' user.&lt;br /&gt;['T1069.001']: Monitor newly executed processes that may attempt to find local system groups and permission settings.&lt;br /&gt;['T1564.006']: Monitor newly executed processes associated with running a virtual instance, such as those launched from binary files associated with common virtualization technologies (ex: VirtualBox, VMware, QEMU, Hyper-V).&lt;br /&gt;['T1518']: Monitor newly executed processes that may attempt to get a listing of software and software versions that are installed on a system or in a cloud environment.&lt;br /&gt;['T1562.002']: Monitor newly executed processes that may disable Windows event logging to limit data that can be leveraged for detections and audits.&lt;br /&gt;['T1059.002']: Monitor for newly executed processes that may abuse AppleScript for execution. Scripts are likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Actions may be related to network and system information [Discovery](https://attack.mitre.org/tactics/TA0007), [Collection](https://attack.mitre.org/tactics/TA0009), or other scriptable post-compromise behaviors and could be used as indicators of detection leading back to the source script.&lt;br /&gt;['T1202']: Monitor for newly constructed processes and/or command-lines that can be used instead of invoking cmd (i.e. pcalua.exe, winrs.exe, cscript/wscript.exe, hh.exe, or bash.exe)&lt;br /&gt;['T1080']: Monitor processes that are executed from removable media for malicious or abnormal activity such as network connections due to Command and Control and possible network Discovery techniques.&lt;br /&gt;['T1201']: Monitor for newly executed processes that may attempt to access detailed information about the password policy used within an enterprise network or cloud environment.&lt;br /&gt;['T1218.009']: Use process monitoring to monitor the execution and arguments of Regsvcs.exe and Regasm.exe. Compare recent invocations of Regsvcs.exe and Regasm.exe with prior history of known good arguments and executed binaries to determine anomalous and potentially adversarial activity.&lt;br /&gt;['T1112']: Monitor processes and command-line arguments for actions that could be taken to change, conceal, and/or delete information in the Registry. (i.e. reg.exe, regedit.exe) &lt;br /&gt;['T1007']: Monitor for newly executed processes with arguments that may try to get information about registered services. System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.&lt;br /&gt;['T1137.001']: Monitor newly executed processes that may abuse Microsoft Office templates to obtain persistence on a compromised system.&lt;br /&gt;['T1546.009']: Monitor newly executed processes that may establish persistence and/or elevate privileges by executing malicious content triggered by AppCert DLLs loaded into processes.&lt;br /&gt;['T1552']: Monitor newly executed processes that may search compromised systems to find and obtain insecurely stored credentials.&lt;br /&gt;['T1127']: Monitor for abnormal presence of these or other utilities that enable proxy execution that are typically used for development, debugging, and reverse engineering on a system that is not used for these purposes may be suspicious. Use process monitoring to monitor the execution and arguments of from developer utilities that may be abused. Compare recent invocations of those binaries with prior history of known good arguments and executed binaries to determine anomalous and potentially adversarial activity. It is likely that these utilities will be used by software developers or for other software development related tasks, so if it exists and is used outside of that context, then the event may be suspicious.&lt;br /&gt;['T1137']: Monitor newly executed processes that may leverage Microsoft Office-based applications for persistence between startups. Collect process execution information including process IDs (PID) and parent process IDs (PPID) and look for abnormal chains of activity resulting from Office processes. Non-standard process execution trees may also indicate suspicious or malicious behavior. If winword.exe is the parent process for suspicious processes and activity relating to other adversarial techniques, then it could indicate that the application was used maliciously.&lt;br /&gt;['T1218.004']: Use process monitoring to monitor the execution and arguments of InstallUtil.exe. Compare recent invocations of InstallUtil.exe with prior history of known good arguments and executed binaries to determine anomalous and potentially adversarial activity&lt;br /&gt;['T1037.003']: Monitor for newly constructed processes and/or command-lines that execute logon scripts&lt;br /&gt;['T1204']: Monitor for newly executed processes that may be used by an adversary to gain Initial Access that require user interaction. This includes compression applications, such as those for zip files, that can be used to [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140) in payloads.&lt;br /&gt;['T1547.006']: Monitor for newly created processes that may modify the kernel to automatically execute programs on system boot.&lt;br /&gt;['T1561']: Monitor newly executed processes that may wipe or corrupt raw disk data on specific systems or in large numbers in a network to interrupt availability to system and network resources.&lt;br /&gt;['T1505.005']: Monitor processes with arguments that may potentially highlight adversary actions to modify Registry values (ex: &lt;code&gt;reg.exe&lt;/code&gt;) or modify/replace the legitimate &lt;code&gt;termsrv.dll&lt;/code&gt;.&lt;br /&gt;['T1547']: Suspicious program execution as autostart programs may show up as outlier processes that have not been seen before when compared against historical data to increase confidence of malicious activity, data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.&lt;br /&gt;['T1070']: Monitor for newly executed processes that may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined malware.&lt;br /&gt;['T1040']: Monitor for newly executed processes that can aid in sniffing network traffic to capture information about an environment, including authentication material passed over the network &lt;br /&gt;['T1137.004']: Monitor newly executed processes that may abuse Microsoft Outlook's Home Page feature to obtain persistence on a compromised system.&lt;br /&gt;['T1496']: Monitor for common cryptomining software process names that may indicate compromise and resource usage.&lt;br /&gt;['T1176']: Monitor for newly executed processes that could be used to abuse internet browser extensions to establish persistence. &lt;br /&gt;['T1486']: Monitor for newly constructed  processes and/or command-lines involved in data destruction activity, such as vssadmin, wbadmin, and bcdedit.&lt;br /&gt;['T1505']: Process monitoring may be used to detect servers components that perform suspicious actions such as running cmd.exe or accessing files.&lt;br /&gt;['T1548.002']: Monitor newly executed processes, such as &lt;code&gt;eventvwr.exe&lt;/code&gt; and &lt;code&gt;sdclt.exe&lt;/code&gt;, that may bypass UAC mechanisms to elevate process privileges on system.&lt;br /&gt;['T1052']: Monitor for newly executed processes when removable media is mounted.&lt;br /&gt;['T1218.007']: Use process monitoring to monitor the execution and arguments of msiexec.exe. Compare recent invocations of msiexec.exe with prior history of known good arguments and executed MSI files.&lt;br /&gt;['T1543.002']: Suspicious processes or scripts spawned in this manner will have a parent process of 'systemd', a parent process ID of 1, and will usually execute as the 'root' user.&lt;br /&gt;['T1561.002']: Monitor newly executed processes that may corrupt or wipe the disk data structures on a hard drive necessary to boot a system; targeting specific critical systems or in large numbers in a network to interrupt availability to system and network resources.&lt;br /&gt;['T1037']: Monitor for newly executed processes that may use scripts automatically executed at boot or logon initialization to establish persistence.&lt;br /&gt;['T1012']: Monitor for newly executed processes that may interact with the Windows Registry to gather information about the system, configuration, and installed software.&lt;br /&gt;['T1059.006']: Monitor systems for abnormal Python usage and python.exe behavior, which could be an indicator of malicious activity. Understanding standard usage patterns is important to avoid a high number of false positives. If scripting is restricted for normal users, then any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent. Scripts are likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Monitor newly executed processes that may abuse Python commands and scripts for execution.&lt;br /&gt;['T1564.009']: Monitor newly executed processes that may abuse resource forks to hide malicious code or executables to evade detection and bypass security applications.&lt;br /&gt;['T1546.014']: Monitor newly executed processes that may gain persistence and elevate privileges by executing malicious content triggered by the Event Monitor Daemon (emond).&lt;br /&gt;['T1574.005']: Monitor for newly constructed processes to match an existing service executables. &lt;br /&gt;['T1056.002']: Monitor for newly executed processes &lt;br /&gt;['T1574.011']: Monitor suspicious programs execution through services. These processes may show up as outlier processes that have not been seen before when compared against historical data.&lt;br /&gt;['T1047']: Monitor for newly constructed processes and/or command-lines of "wmic"&lt;br /&gt;['T1546.012']: Monitor for abnormal usage of the GFlags tool as well as common processes spawned under abnormal parents and/or with creation flags indicative of debugging such as &lt;code&gt;DEBUG_PROCESS&lt;/code&gt; and &lt;code&gt;DEBUG_ONLY_THIS_PROCESS&lt;/code&gt;. (Citation: Microsoft Dev Blog IFEO Mar 2010)&lt;br /&gt;['T1137.006']: Monitor newly executed processes that may abuse Microsoft Office add-ins to obtain persistence on a compromised system. &lt;br /&gt;['T1218']: Monitor processes and command-line parameters for signed binaries that may be used to proxy execution of malicious files. Compare recent invocations of signed binaries that may be used to proxy execution with prior history of known good arguments and loaded files to determine anomalous and potentially adversarial activity. Legitimate programs used in suspicious ways, like msiexec.exe downloading an MSI file from the Internet, may be indicative of an intrusion. Correlate activity with other suspicious behavior to reduce false positives that may be due to normal benign use by users and administrators.&lt;br /&gt;['T1127.001']: Monitor for newly executed processes of MSBuild.exe. Compare recent invocations of those binaries with prior history of known good arguments and executed binaries to determine anomalous and potentially adversarial activity.&lt;br /&gt;['T1546.013']: Monitor newly executed processes that may gain persistence and elevate privileges by executing malicious content triggered by PowerShell profiles.&lt;br /&gt;['T1135']: Monitor for newly executed processes that may look for folders and drives shared on remote systems as a means of identifying sources of information to gather as a precursor for Collection and to identify potential systems of interest for Lateral Movement.&lt;br /&gt;['T1049']: Monitor for executed processes that may attempt to get a listing of network connections to or from the compromised system they are currently accessing or from remote systems by querying for information over the network.&lt;br /&gt;['T1069.002']: Monitor newly executed processes that may attempt to find domain-level groups and permission settings.&lt;br /&gt;['T1574.002']: Monitor newly constructed processes for unusual activity (e.g., a process that does not use the network begins to do so) as well as the introduction of new files/programs.&lt;br /&gt;['T1555.004']: Monitor newly executed processes of &lt;code&gt;vaultcmd.exe&lt;/code&gt; for suspicious activity, such as listing credentials from the Windows Credentials locker (i.e., &lt;code&gt;vaultcmd /listcreds:"Windows Credentials"&lt;/code&gt;).(Citation: Malwarebytes The Windows Vault)&lt;br /&gt;['T1546.002']: Monitor newly executed processes that may establish persistence by executing malicious content triggered by user inactivity.&lt;br /&gt;['T1137.002']: Monitor newly executed processes that may abuse the Microsoft Office "Office Test" Registry key to obtain persistence on a compromised system.&lt;br /&gt;['T1083']: Monitor newly executed processes that may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system.&lt;br /&gt;['T1570']: Monitor newly constructed processes that assist in lateral tool transfers. &lt;br /&gt;['T1546.007']: It is likely unusual for netsh.exe to have any child processes in most environments. Monitor process executions and investigate any child processes spawned by netsh.exe for malicious behavior.&lt;br /&gt;['T1569.002']: Monitor for newly executed processes that may abuse the Windows service control manager to execute malicious commands or payloads.&lt;br /&gt;['T1218.003']: Use process monitoring to detect and analyze the execution and arguments of CMSTP.exe. Compare recent invocations of CMSTP.exe with prior history of known good arguments and loaded files to determine anomalous and potentially adversarial activity. Sysmon events can also be used to identify potential abuses of CMSTP.exe. Detection strategy may depend on the specific adversary procedure, but potential rules include: (Citation: Endurant CMSTP July 2018)
* To detect loading and execution of local/remote payloads - Event 1 (Process creation) where ParentImage contains CMSTP.exe
* Also monitor for events, such as the creation of processes (Sysmon Event 1), that involve auto-elevated CMSTP COM interfaces such as CMSTPLUA (3E5FC7F9-9A51-4367-9063-A120244FBEC7) and CMLUAUTIL (3E000D72-A845-4CD9-BD83-80C07C3B881F).&lt;br /&gt;['T1562']: Monitor newly executed processes that may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms.&lt;br /&gt;['T1555']: Monitor newly executed processes that may search for common password storage locations to obtain user credentials.&lt;br /&gt;['T1197']: Monitor for newly constructed BITS tasks to enumerate using the BITSAdmin tool (bitsadmin /list /allusers /verbose). &lt;br /&gt;['T1005']: Monitor for newly executed processes that may search local system sources, such as file systems or local databases, to find files of interest and sensitive data prior to Exfiltration.&lt;br /&gt;['T1574.007']: Monitor for newly executed processes for process executable paths that are named for partial directories.&lt;br /&gt;['T1574.009']: Monitor for newly executed processes that may execute their own malicious payloads by hijacking vulnerable file path references.&lt;br /&gt;['T1218.013']: Monitor the execution and arguments of mavinject.exe. Compare recent invocations of mavinject.exe with prior history of known good arguments and injected DLLs to determine anomalous and potentially adversarial activity.&lt;br /&gt;['T1021.003']: Monitor for newly executed processes associated with DCOM activity, especially those invoked by a user different than the one currently logged on. Enumeration of COM objects, via [Query Registry](https://attack.mitre.org/techniques/T1012) or [PowerShell](https://attack.mitre.org/techniques/T1059/001), may also precede malicious use.(Citation: Fireeye Hunting COM June 2019)(Citation: Enigma MMC20 COM Jan 2017)&lt;br /&gt;['T1559.001']: Monitor for newly executed processes that are associated with COM objects, especially those invoked by a user different than the one currently logged on.&lt;br /&gt;['T1134']: Monitor for executed processes that may modify access tokens to operate under a different user or system security context to perform actions and bypass access controls.&lt;br /&gt;['T1018']: Monitor for newly executed processes that can be used to discover remote systems, such as &lt;code&gt;ping.exe&lt;/code&gt; and &lt;code&gt;tracert.exe&lt;/code&gt;, especially when executed in quick succession.(Citation: Elastic - Koadiac Detection with EQL)&lt;br /&gt;['T1561.001']: Monitor newly executed processes that may erase the contents of storage devices on specific systems or in large numbers in a network to interrupt availability to system and network resources.&lt;br /&gt;['T1027']: Monitor for newly executed processes that may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit.&lt;br /&gt;['T1137.003']: Monitor newly executed processes that may abuse Microsoft Outlook forms to obtain persistence on a compromised system.&lt;br /&gt;['T1218.014']: Monitor processes for suspicious or malicious use of MMC. Since MMC is a signed Windows binary, verify use of MMC is legitimate and not malicious.&lt;br /&gt;['T1546']: Tools such as Sysinternals Autoruns can be used to detect changes to execution triggers that could be attempts at persistence. Also look for abnormal process call trees for execution of other commands that could relate to Discovery actions or other techniques.&lt;br /&gt;['T1124']: Monitor for newly executed processes that may gather the system time and/or time zone from a local or remote system.&lt;br /&gt;['T1218.010']: Use process monitoring to monitor the execution and arguments of regsvr32.exe. Compare recent invocations of regsvr32.exe with prior history of known good arguments and loaded files to determine anomalous and potentially adversarial activity.&lt;br /&gt;['T1021']: Monitor for newly executed processes that may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to log into a service specifically designed to accept remote connections, such as RDP, telnet, SSH, and VNC. The adversary may then perform actions that spawn additional processes as the logged-on user.&lt;br /&gt;['T1059.003']: Monitor for newly executed processes that may abuse the Windows command shell for execution.&lt;br /&gt;['T1218.002']: Monitor and analyze activity related to items associated with CPL files, such as the control.exe. Analyze new Control Panel items as well as those present on disk for malicious content. Both executable and CPL formats are compliant Portable Executable (PE) images and can be examined using traditional tools and methods, pending anti-reverse-engineering techniques.(Citation: TrendMicro CPL Malware Jan 2014)&lt;br /&gt;['T1489']: Monitor processes and command-line arguments to see if critical processes are terminated or stop running.&lt;br /&gt;['T1562.001']: Monitor processes for unexpected termination related to security tools/services.
&lt;br /&gt;['T1562']: Monitor for unexpected deletions of a running process (ex: Sysmon EID 5 or Windows EID 4689) that may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms.&lt;br /&gt;['T1056.004']: Verify integrity of live processes by comparing code in memory to that of corresponding static binaries, specifically checking for jumps and other instructions that redirect code flow.&lt;br /&gt;['T1036']: Monitor for file names that are mismatched between the file name on disk and that of the binary's PE metadata, this is a likely indicator that a binary was renamed after it was compiled. &lt;br /&gt;['T1059']: Monitor contextual data about a running process, which may include information such as environment variables, image name, user/owner, or other information that may reveal abuse of system features. For example, consider monitoring for Windows event ID (EID) 400, which shows the version of PowerShell executing in the &lt;code&gt;EngineVersion&lt;/code&gt; field (which may also be relevant to detecting a potential [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)) as well as if PowerShell is running locally or remotely in the &lt;code&gt;HostName&lt;/code&gt; field. Furthermore, EID 400 may indicate the start time and EID 403 indicates the end time of a PowerShell session.(Citation: inv_ps_attacks)&lt;br /&gt;['T1036.005']: Collecting and comparing disk and resource filenames for binaries by looking to see if the InternalName, OriginalFilename, and/or ProductName match what is expected could provide useful leads, but may not always be indicative of malicious activity.&lt;br /&gt;['T1548']: Monitor contextual data about a running process, which may include information such as environment variables, image name, user/owner that may circumvent mechanisms designed to control elevate privileges to gain higher-level permissions.&lt;br /&gt;['T1562.010']: Monitor contextual data about a running process, which may include information such as environment variables, image name, user/owner, or other information that may reveal use of a version of system features that may be outdated, vulnerable, and/or does not support updated security controls such as logging. For example, monitoring for Windows event ID (EID) 400, specifically the &lt;code&gt;EngineVersion&lt;/code&gt; field which shows the version of PowerShell running, may highlight a malicious downgrade attack.(Citation: inv_ps_attacks)&lt;br /&gt;['T1134.004']: Look for inconsistencies between the various fields that store PPID information, such as the EventHeader ProcessId from data collected via Event Tracing for Windows (ETW), Creator Process ID/Name from Windows event logs, and the ProcessID and ParentProcessID (which are also produced from ETW and other utilities such as Task Manager and Process Explorer). The ETW provided EventHeader ProcessId identifies the actual parent process.(Citation: CounterCept PPID Spoofing Dec 2018)&lt;br /&gt;['T1548.003']: Monitor contextual data about a running process, which may include information such as environment variables, image name, user/owner that may perform sudo caching and/or use the suoders file to elevate privileges.&lt;br /&gt;['T1059.001']: Consider monitoring for Windows event ID (EID) 400, which shows the version of PowerShell executing in the &lt;code&gt;EngineVersion&lt;/code&gt; field (which may also be relevant to detecting a potential [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)) as well as if PowerShell is running locally or remotely in the &lt;code&gt;HostName&lt;/code&gt; field. Furthermore, EID 400 may indicate the start time and EID 403 indicates the end time of a PowerShell session.(Citation: inv_ps_attacks)&lt;br /&gt;['T1548.002']: Monitor contextual data about a running process, which may include information such as environment variables, image name, user/owner that may bypass UAC mechanisms to elevate process privileges on system.&lt;br /&gt;['T1134']: Query systems for process and thread token information and look for inconsistencies such as user owns processes impersonating the local SYSTEM account.(Citation: BlackHat Atkinson Winchester Token Manipulation) Look for inconsistencies between the various fields that store PPID information, such as the EventHeader ProcessId from data collected via Event Tracing for Windows (ETW), Creator Process ID/Name from Windows event logs, and the ProcessID and ParentProcessID (which are also produced from ETW and other utilities such as Task Manager and Process Explorer). The ETW provided EventHeader ProcessId identifies the actual parent process.&lt;br /&gt;['T1185']: This may be a difficult technique to detect because adversary traffic may be masked by normal user traffic. Monitor for [Process Injection](https://attack.mitre.org/techniques/T1055) against browser applications.&lt;br /&gt;['T1055.015']: Monitor for changes made to processes that may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges. Analyze process behavior to determine if a process is performing unusual actions, such as opening network connections, reading files, or other suspicious actions that could relate to post-compromise behavior. &lt;br /&gt;['T1055.012']: Monitor for changes made to processes that may inject malicious code into suspended and hollowed processes in order to evade process-based defenses.&lt;br /&gt;['T1055']: Monitor for changes made to processes that may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges.&lt;br /&gt;['T1055.004']: Monitor for changes made to processes that may inject malicious code into processes via the asynchronous procedure call (APC) queue in order to evade process-based defenses as well as possibly elevate privileges.&lt;br /&gt;['T1055.008']: Monitor for changes made to processes that may inject malicious code into processes via ptrace (process trace) system calls in order to evade process-based defenses as well as possibly elevate privileges.&lt;br /&gt;['T1055.003']: Monitor for changes made to processes that may inject malicious code into hijacked processes in order to evade process-based defenses as well as possibly elevate privileges.&lt;br /&gt;['T1055.005']: Monitor for changes made to processes that may inject malicious code into processes via thread local storage (TLS) callbacks in order to evade process-based defenses as well as possibly elevate privileges.&lt;br /&gt;['T1055.002']: Monitor for changes made to processes that may inject portable executables (PE) into processes in order to evade process-based defenses as well as possibly elevate privileges.&lt;br /&gt;['T1055.001']: Monitor for changes made to processes that may inject dynamic-link libraries (DLLs) into processes in order to evade process-based defenses as well as possibly elevate privileges.&lt;br /&gt;['T1556']: Monitor for unexpected processes interacting with authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts.&lt;br /&gt;['T1003.001']: Monitor for unexpected processes interacting with LSASS.exe.(Citation: Medium Detecting Attempts to Steal Passwords from Memory) Common credential dumpers such as Mimikatz access LSASS.exe by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details are stored. Credential dumpers may also use methods for reflective [Process Injection](https://attack.mitre.org/techniques/T1055) to reduce potential indicators of malicious activity.&lt;br /&gt;['T1555.003']: Monitor process execution logs to include PowerShell Transcription focusing on those that perform a combination of behaviors including reading web browser process memory, utilizing regular expressions, and those that contain numerous keywords for common web applications (Gmail, Twitter, Office365, etc.).&lt;br /&gt;['T1539']: Monitor for attempts by programs to inject into or dump browser process memory.&lt;br /&gt;['T1555.005']: Monitor process being accessed that may acquire user credentials from third-party password managers.(Citation: ise Password Manager February 2019)&lt;br /&gt;['T1055.002']: Monitor for processes being viewed that may inject portable executables (PE) into processes in order to evade process-based defenses as well as possibly elevate privileges.&lt;br /&gt;['T1055.008']: Monitor for processes being viewed that may inject malicious code into processes via ptrace (process trace) system calls in order to evade process-based defenses as well as possibly elevate privileges.&lt;br /&gt;['T1055']: Monitor for processes being viewed that may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges.&lt;br /&gt;['T1055.004']: Monitor for processes being viewed that may inject malicious code into processes via the asynchronous procedure call (APC) queue in order to evade process-based defenses as well as possibly elevate privileges.&lt;br /&gt;['T1559.003']: Monitor for processes making abnormal calls to higher privileged processes, such as a user application connecting to a VPN service.(Citation: versprite xpc vpn)&lt;br /&gt;['T1055.001']: Monitor for process being viewed that may inject dynamic-link libraries (DLLs) into processes in order to evade process-based defenses as well as possibly elevate privileges.&lt;br /&gt;['T1556.001']: Monitor for unexpected processes interacting with the authentication process on a domain controller to bypass the typical authentication mechanisms and enable access to accounts.&lt;br /&gt;['T1555']: Monitor for processes being accessed that may search for common password storage locations to obtain user credentials.&lt;br /&gt;['T1055.005']: Monitor for processes being viewed that may inject malicious code into processes via thread local storage (TLS) callbacks in order to evade process-based defenses as well as possibly elevate privileges.&lt;br /&gt;['T1555.002']: Monitor for processes being accessed that may obtain root access (allowing them to read securityd's memory), then they can scan through memory to find the correct sequence of keys in relatively few tries to decrypt the user's logon keychain.&lt;br /&gt;['T1003']: Monitor for unexpected processes interacting with lsass.exe.(Citation: Medium Detecting Attempts to Steal Passwords from Memory) Common credential dumpers such as [Mimikatz](https://attack.mitre.org/software/S0002) access the LSA Subsystem Service (LSASS) process by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details are stored. Credential dumpers may also use methods for reflective [Process Injection](https://attack.mitre.org/techniques/T1055) to reduce potential indicators of malicious activity.
##### Linux
To obtain the passwords and hashes stored in memory, processes must open a maps file in the /proc filesystem for the process being analyzed. This file is stored under the path &lt;code&gt;/proc/&amp;lt;pid&amp;gt;/maps&lt;/code&gt;, where the &lt;code&gt;&amp;lt;pid&amp;gt;&lt;/code&gt; directory is the unique pid of the program being interrogated for such authentication data. The AuditD monitoring tool, which ships stock in many Linux distributions, can be used to watch for hostile processes opening this file in the proc file system, alerting on the pid, process name, and arguments of such programs.&lt;br /&gt;['T1055.012']: Monitor for processes being viewed that may inject malicious code into suspended and hollowed processes in order to evade process-based defenses.&lt;br /&gt;['T1055.003']: Monitor for processes being viewed that may inject malicious code into hijacked processes in order to evade process-based defenses as well as possibly elevate privileges.&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Microsoft Processes and Threads" url="https://docs.microsoft.com/en-us/windows/win32/procthread/processes-and-threads"/>
            <reference name="Mitre ATT&amp;CK Data Source DS0009" url="https://attack.mitre.org/datasources/DS0009"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:01.655">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-M1021" name="Restrict Web-Based Content" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>Restrict use of certain websites, block downloads/attachments, block Javascript, restrict browser extensions, etc.&lt;br /&gt;&lt;p&gt;Detailed mitigations per technique:&lt;/p&gt;&lt;br /&gt;['T1102.002', 'T1102.001', 'T1102', 'T1102.003']: Web proxies can be used to enforce external network communication policy that prevents use of unauthorized external services.&lt;br /&gt;['T1566.002', 'T1192']: Determine if certain websites that can be used for spearphishing are necessary for business operations and consider blocking access if activity cannot be monitored well or if it poses a significant risk.&lt;br /&gt;['T1528']: Administrators can block end-user consent to OAuth applications, disabling users from authorizing third-party apps through OAuth 2.0 and forcing administrative consent for all requests. They can also block end-user registration of applications by their users, to reduce risk. A Cloud Access Security Broker can also be used to ban applications.

Azure offers a couple of enterprise policy settings in the Azure Management Portal that may help:

"Users -&gt; User settings -&gt; App registrations: Users can register applications" can be set to "no" to prevent users from registering new applications. 
"Enterprise applications -&gt; User settings -&gt; Enterprise applications: Users can consent to apps accessing company data on their behalf" can be set to "no" to prevent users from consenting to allow third-party multi-tenant applications&lt;br /&gt;['T1527']: Update corporate policies to restrict what types of third-party applications may be added to any online service or tool that is linked to the company's information, accounts or network (example: Google, Microsoft, Dropbox, Basecamp, GitHub). However, rather than providing high-level guidance on this, be extremely specific-include a list of pre-approved applications and deny all others not on the list. Administrators may also block end-user consent through administrative portals, such as the Azure Portal, disabling users from authorizing third-party apps through OAuth and forcing administrative consent.(Citation: Microsoft Azure AD Admin Consent)&lt;br /&gt;['T1223']: Consider blocking download/transfer and execution of potentially uncommon file types known to be used in adversary campaigns, such as CHM files.&lt;br /&gt;['T1218.001']: Consider blocking download/transfer and execution of potentially uncommon file types known to be used in adversary campaigns, such as CHM files&lt;br /&gt;['T1483', 'T1568.002']: In some cases a local DNS sinkhole may be used to help prevent DGA-based command and control at a reduced cost.&lt;br /&gt;['T1568']: In some cases a local DNS sinkhole may be used to help prevent behaviors associated with dynamic resolution.&lt;br /&gt;['T1204', 'T1204.001']: If a link is being visited by a user, block unknown or unused files in transit by default that should not be downloaded or by policy from suspicious sites as a best practice to prevent some vectors, such as .scr, .exe, .pif, .cpl, etc. Some download scanning devices can open and analyze compressed and encrypted formats, such as zip and rar that may be used to conceal malicious files.&lt;br /&gt;['T1189']: For malicious code served up through ads, adblockers can help prevent that code from executing in the first place.

Script blocking extensions can help prevent the execution of JavaScript that may commonly be used during the exploitation process.&lt;br /&gt;['T1566.003', 'T1194']: Determine if certain social media sites, personal webmail services, or other service that can be used for spearphishing is necessary for business operations and consider blocking access if activity cannot be monitored well or if it poses a significant risk.&lt;br /&gt;['T1193']: Block unknown or unused attachments by default that should not be transmitted over email as a best practice to prevent some vectors, such as .scr, .exe, .pif, .cpl, etc. Some email scanning devices can open and analyze compressed and encrypted formats, such as zip and rar that may be used to conceal malicious attachments in [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027).&lt;br /&gt;['T1567', 'T1567.002', 'T1567.001']: Web proxies can be used to enforce an external network communication policy that prevents use of unauthorized external services.&lt;br /&gt;['T1550.001']: Update corporate policies to restrict what types of third-party applications may be added to any online service or tool that is linked to the company's information, accounts or network (e.g., Google, Microsoft, Dropbox, Basecamp, GitHub). However, rather than providing high-level guidance on this, be extremely specific-include a list of per-approved applications and deny all others not on the list. Administrators may also block end-user consent through administrative portals, such as the Azure Portal, disabling users from authorizing third-party apps through OAuth and forcing administrative consent.(Citation: Microsoft Azure AD Admin Consent)&lt;br /&gt;['T1566']: Determine if certain websites or attachment types (ex: .scr, .exe, .pif, .cpl, etc.) that can be used for phishing are necessary for business operations and consider blocking access if activity cannot be monitored well or if it poses a significant risk.&lt;br /&gt;['T1059.005', 'T1059']: Script blocking extensions can help prevent the execution of scripts and HTA files that may commonly be used during the exploitation process. For malicious code served up through ads, adblockers can help prevent that code from executing in the first place.&lt;br /&gt;['T1059.007']: Script blocking extensions can help prevent the execution of JavaScript and HTA files that may commonly be used during the exploitation process. For malicious code served up through ads, adblockers can help prevent that code from executing in the first place.&lt;br /&gt;['T1566.001']: Block unknown or unused attachments by default that should not be transmitted over email as a best practice to prevent some vectors, such as .scr, .exe, .pif, .cpl, etc. Some email scanning devices can open and analyze compressed and encrypted formats, such as zip and rar that may be used to conceal malicious attachments.&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Mitre ATT&amp;CK Mitigation M1021" url="https://attack.mitre.org/mitigations/M1021"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:01.754">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-M1054" name="Software Configuration" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>Implement configuration changes to software (other than the operating system) to mitigate security risks associated to how the software operates.&lt;br /&gt;&lt;p&gt;Detailed mitigations per technique:&lt;/p&gt;&lt;br /&gt;['T1566.002', 'T1598', 'T1566', 'T1566.001', 'T1598.002', 'T1598.003']: Use anti-spoofing and email authentication mechanisms to filter messages based on validity checks of the sender domain (using SPF) and integrity of messages (using DKIM). Enabling these mechanisms within an organization (through policies such as DMARC) may enable recipients (intra-org and cross domain) to perform similar message filtering and validation.(Citation: Microsoft Anti Spoofing)(Citation: ACSC Email Spoofing)&lt;br /&gt;['T1550.004', 'T1539', 'T1506']: Configure browsers or tasks to regularly delete persistent cookies.&lt;br /&gt;['T1602.001', 'T1602']: Allowlist MIB objects and implement SNMP views.(Citation: Cisco Securing SNMP)&lt;br /&gt;['T1553.004', 'T1553']: HTTP Public Key Pinning (HPKP) is one method to mitigate potential [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) situations where and adversary uses a mis-issued or fraudulent certificate to intercept encrypted communications by enforcing use of an expected certificate. (Citation: Wikipedia HPKP)&lt;br /&gt;['T1137.002']: Create the Registry key used to execute it and set the permissions to "Read Control" to prevent easy access to the key without administrator permissions or requiring Privilege Escalation.(Citation: Palo Alto Office Test Sofacy)&lt;br /&gt;['T1559', 'T1559.002', 'T1173']: Consider disabling embedded files in Office programs, such as OneNote, that do not work with Protected View.(Citation: Enigma Reviving DDE Jan 2018)(Citation: GitHub Disable DDEAUTO Oct 2017)&lt;br /&gt;['T1535']: Cloud service providers may allow customers to deactivate unused regions.(Citation: CloudSploit - Unused AWS Regions)&lt;br /&gt;['T1562.006', 'T1054']: Consider automatically relaunching forwarding mechanisms at recurring intervals (ex: temporal, on-logon, etc.) as well as applying appropriate change management to firewall rules and other related system configurations.&lt;br /&gt;['T1130']: HTTP Public Key Pinning (HPKP) is one method to mitigate potential man-in-the-middle situations where and adversary uses a mis-issued or fraudulent certificate to intercept encrypted communications by enforcing use of an expected certificate. (Citation: Wikipedia HPKP)&lt;br /&gt;['T1602.002']: Allowlist MIB objects and implement SNMP views. Disable Smart Install (SMI) if not used.(Citation: Cisco Securing SNMP)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018) &lt;br /&gt;['T1504']: Avoid PowerShell profiles if not needed. Use the &lt;code&gt;-No Profile&lt;/code&gt; flag with when executing PowerShell scripts remotely to prevent local profiles and scripts from being executed. &lt;br /&gt;['T1546.013']: Avoid PowerShell profiles if not needed. Use the -No Profile flag with when executing PowerShell scripts remotely to prevent local profiles and scripts from being executed.&lt;br /&gt;['T1555.005']: Consider re-locking password managers after a short timeout to limit the time plaintext credentials live in memory from decrypted databases.&lt;br /&gt;['T1606']: Configure browsers/applications to regularly delete persistent web credentials (such as cookies).&lt;br /&gt;['T1606.001']: Configure browsers/applications to regularly delete persistent web cookies.&lt;br /&gt;['T1137']: For the Office Test method, create the Registry key used to execute it and set the permissions to "Read Control" to prevent easy access to the key without administrator permissions or requiring Privilege Escalation. (Citation: Palo Alto Office Test Sofacy)&lt;br /&gt;['T1562.009']: Ensure that endpoint defenses run in safe mode.(Citation: CyberArk Labs Safe Mode 2016)&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Mitre ATT&amp;CK Mitigation M1054" url="https://attack.mitre.org/mitigations/M1054"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:01.878">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-M1051" name="Update Software" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>Perform regular software updates to mitigate exploitation risk.&lt;br /&gt;&lt;p&gt;Detailed mitigations per technique:&lt;/p&gt;&lt;br /&gt;['T1550.002']: Apply patch KB2871997 to Windows 7 and higher systems to limit the default access of accounts in the local administrator group.(Citation: NSA Spotting) &lt;br /&gt;['T1073', 'T1574.002', 'T1574']: Update software regularly to include patches that fix DLL side-loading vulnerabilities.&lt;br /&gt;['T1552', 'T1552.006']: Apply patch KB2962486 which prevents credentials from being stored in GPPs.(Citation: ADSecurity Finding Passwords in SYSVOL)(Citation: MS14-025)&lt;br /&gt;['T1548.002']: Consider updating Windows to the latest version and patch level to utilize the latest protective measures against UAC bypass.(Citation: Github UACMe)&lt;br /&gt;['T1103', 'T1546.010']: Upgrade to Windows 8 or later and enable secure boot.&lt;br /&gt;['T1602.001', 'T1602', 'T1602.002']: Keep system images and software updated and migrate to SNMPv3.(Citation: Cisco Blog Legacy Device Attacks)&lt;br /&gt;['T1068', 'T1212', 'T1211', 'T1210']: Update software regularly by employing patch management for internal enterprise endpoints and servers.&lt;br /&gt;['T1555.005']: Update password managers regularly by employing patch management for internal enterprise endpoints and servers.&lt;br /&gt;['T1495']: Patch the BIOS and other firmware as necessary to prevent successful use of known vulnerabilities.&lt;br /&gt;['T1110.001']: Upgrade management services to the latest supported and compatible version.  Specifically, any version providing increased password complexity or policy enforcement preventing default or weak passwords. &lt;br /&gt;['T1019', 'T1542', 'T1542.001']: Patch the BIOS and EFI as necessary.&lt;br /&gt;['T1072', 'T1017']: Patch deployment systems regularly to prevent potential remote access through [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068).&lt;br /&gt;['T1137.004', 'T1137', 'T1137.005', 'T1137.003']: For the Outlook methods, blocking macros may be ineffective as the Visual Basic engine used for these features is separate from the macro scripting engine.(Citation: SensePost Outlook Forms) Microsoft has released patches to try to address each issue. Ensure KB3191938 which blocks Outlook Visual Basic and displays a malicious code warning, KB4011091 which disables custom forms by default, and KB4011162 which removes the legacy Home Page feature, are applied to systems.(Citation: SensePost Outlook Home Page)&lt;br /&gt;['T1189']: Ensure all browsers and plugins kept updated can help prevent the exploit phase of this technique. Use modern browsers with security features turned on.&lt;br /&gt;['T1075']: Apply patch KB2871997 to Windows 7 and higher systems to limit the default access of accounts in the local administrator group. &lt;br /&gt;['T1176']: Ensure operating systems and browsers are using the most current version. &lt;br /&gt;['T1195.001', 'T1195']: A patch management process should be implemented to check unused dependencies, unmaintained and/or previously vulnerable dependencies, unnecessary features, components, files, and documentation.&lt;br /&gt;['T1542.002']: Perform regular firmware updates to mitigate risks of exploitation and/or abuse.&lt;br /&gt;['T1100']: Ensure that externally facing Web servers are patched regularly to prevent adversary access through [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068) to gain remote code access or through file inclusion weaknesses that may allow adversaries to upload files or scripts that are automatically served as Web pages.&lt;br /&gt;['T1190']: Update software regularly by employing patch management for externally exposed applications.&lt;br /&gt;['T1195.002']: A patch management process should be implemented to check unused applications, unmaintained and/or previously vulnerable software, unnecessary features, components, files, and documentation.&lt;br /&gt;['T1546.011']: Microsoft released an optional patch update - KB3045645 - that will remove the "auto-elevate" flag within the sdbinst.exe. This will prevent use of application shimming to bypass UAC.&lt;br /&gt;['T1138']: Microsoft released an optional patch update - KB3045645 - that will remove the "auto-elevate" flag within the sdbinst.exe. This will prevent use of application shimming to bypass UAC. &lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Mitre ATT&amp;CK Mitigation M1051" url="https://attack.mitre.org/mitigations/M1051"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:01.872">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-DS0002" name="User Account" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>A profile representing a user, device, service, or application used to authenticate and access resources&lt;br /&gt;&lt;p&gt;Detailed detections per technique:&lt;/p&gt;&lt;br /&gt;['T1110.002']:  Monitor for many failed authentication attempts across various accounts that may result from password spraying attempts. It is difficult to detect when hashes are cracked, since this is generally done outside the scope of the target network. (ex: Windows EID 4625 or 5379)&lt;br /&gt;['T1078.002']: Monitor for an attempt by a user to gain access to a network or computing resource, often by the use of domain authentication services, such as the System Security Services Daemon (sssd) on Linux&lt;br /&gt;['T1078.004']: Monitor the activity of cloud accounts to detect abnormal or malicious behavior, such as accessing information outside of the normal function of the account or account usage at atypical hours.&lt;br /&gt;['T1552.007']: It may be possible to detect adversary use of credentials they have obtained such as in [Valid Accounts](https://attack.mitre.org/techniques/T1078).&lt;br /&gt;['T1070']: Monitor for an attempt by a user to gain access to a network or computing resource, often by providing credentials that may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined malware.&lt;br /&gt;['T1550.003']: Audit all Kerberos authentication and credential use events and review for discrepancies. Unusual remote authentication events that correlate with other suspicious activity (such as writing and executing binaries) may indicate malicious activity.&lt;br /&gt;['T1621']: Monitor user account logs for suspicious events: unusual login attempt source location, mismatch in location of login attempt and smart device receiving 2FA/MFA request prompts, and high volume of repeated login attempts, all of which may indicate user's primary credentials have been compromised minus 2FA/MFA mechanism.&lt;br /&gt;['T1212']: Credential resources obtained through exploitation may be detectable in use if they are not normally used or seen.&lt;br /&gt;['T1110']:  Monitor for many failed authentication attempts across various accounts that may result from password spraying attempts. It is difficult to detect when hashes are cracked, since this is generally done outside the scope of the target network.&lt;br /&gt;['T1606.002']: Monitor for user authentication attempts, when requesting access tokens to services, that failed because of Conditional Access Policies (CAP). Some SAML tokens features, such as the location of a user, may not be as easy to claim.&lt;br /&gt;['T1207']: Investigate usage of Kerberos Service Principal Names (SPNs), especially those associated with services (beginning with "GC/") by computers not present in the DC organizational unit (OU). The SPN associated with the Directory Replication Service (DRS) Remote Protocol interface (GUID E3514235-4B06-11D1-AB04-00C04FC2DCD2) can be set without logging.(Citation: ADDSecurity DCShadow Feb 2018) A rogue DC must authenticate as a service using these two SPNs for the replication process to successfully complete.&lt;br /&gt;['T1552.005']: It may be possible to detect adversary use of credentials they have obtained such as in [Valid Accounts](https://attack.mitre.org/techniques/T1078).&lt;br /&gt;['T1078.001']: Monitor for an attempt by a user to gain access to a network or computing resource, often by providing credentials&lt;br /&gt;['T1550.002']: Monitor for user authentication attempts. From a classic Pass-The-Hash perspective, this technique uses a hash through the NTLMv1 / NTLMv2 protocol to authenticate against a compromised endpoint. This technique does not touch Kerberos. Therefore, NTLM LogonType 3 authentications that are not associated to a domain login and are not anonymous logins are suspicious. From an Over-Pass-The-Hash perspective, an adversary wants to exchange the hash for a Kerberos authentication ticket (TGT). One way to do this is by creating a sacrificial logon session with dummy credentials (LogonType 9) and then inject the hash into that session which triggers the Kerberos authentication process.&lt;br /&gt;['T1070.005']: Monitoring for Windows authentication logs are also useful in determining when authenticated network shares are established and by which account, and can be used to correlate network share activity to other events to investigate potentially malicious activity.&lt;br /&gt;['T1078']: Monitor for an attempt by a user that may obtain and abuse credentials of existing accounts as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. &lt;br /&gt;['T1070.003']: Monitor for an attempts by a user to gain access to a network or computing resource, often by providing credentials via remote terminal services, that do not have a corresponding entry in a command history file.&lt;br /&gt;['T1550']: Monitor for an attempt by a user to gain access to a network or computing resource, often by providing credentials that may use alternate authentication material, such as password hashes, Kerberos tickets, and application access tokens, in order to move laterally within an environment and bypass normal system access controls.&lt;br /&gt;['T1538']: Correlate other security systems with login information&lt;br /&gt;['T1552']: Monitor for an attempt by a user to gain access to a network or computing resource, often by providing credentials that may search compromised systems to find and obtain insecurely stored credentials.&lt;br /&gt;['T1564.002']: Monitor for newly constructed user accounts, such as userIDs under 500 on macOS, that may mask the presence of user accounts they create or modify.&lt;br /&gt;['T1136.003']: Monitor for newly constructed user accounts through the collection of usage logs from cloud user and administrator accounts to identify unusual activity in the creation of new accounts and assignment of roles to those accounts. Monitor for accounts assigned to admin roles that go over a certain threshold of known admins.&lt;br /&gt;['T1136.001']: Monitor for newly constructed user accounts through account audits to detect suspicious accounts that may have been created by an adversary. Collect data on account creation within a network or Windows Event ID 4720 (for when a user account is created on a Windows system and domain controller).&lt;br /&gt;['T1564']: Monitor for newly constructed user accounts that may attempt to hide artifacts associated with their behaviors to evade detection.&lt;br /&gt;['T1531']: Monitor for unexpected deletions of user accounts. Windows event logs may designate activity associated with an adversary's attempt to remove an account (ex: Event ID 4726 - A user account was deleted).

Alerting on these Event IDs may generate a high degree of false positives, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible.&lt;br /&gt;['T1098.001']: Monitor Azure Activity Logs for Service Principal and Application modifications. Monitor for the usage of APIs that create or import SSH keys, particularly by unexpected users or accounts such as the root account.&lt;br /&gt;['T1528']: Administrators should set up monitoring to trigger automatic alerts when policy criteria are met. For example, using a Cloud Access Security Broker (CASB), admins can create a "High severity app permissions" policy that generates alerts if apps request high severity permissions or send permissions requests for too many users.
Security analysts can hunt for malicious apps using the tools available in their CASB, identity provider, or resource provider (depending on platform.) For example, they can filter for apps that are authorized by a small number of users, apps requesting high risk permissions, permissions incongruous with the app's purpose, or apps with old "Last authorized" fields. A specific app can be investigated using an activity log displaying activities the app has performed, although some activities may be mis-logged as being performed by the user. App stores can be useful resources to further investigate suspicious apps.
Administrators can set up a variety of logs and leverage audit tools to monitor actions that can be conducted as a result of OAuth 2.0 access. For instance, audit reports enable admins to identify privilege escalation actions such as role creations or policy modifications, which could be actions performed after initial access.&lt;br /&gt;['T1531']: Monitor for changes made to user accounts for unexpected modification of properties, such as passwords or status (enabled/disabled). Windows event logs may designate activity associated with an adversary's attempt to remove access to an account:
Event ID 4723 - An attempt was made to change an account's password
Event ID 4724 - An attempt was made to reset an account's password
Event ID 4725 - A user account was disabled

Alerting on these Event IDs may generate a high degree of false positives, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible.&lt;br /&gt;['T1098.003']: Collect usage logs from cloud administrator accounts to identify unusual activity in the assignment of roles to those accounts. Monitor for accounts assigned to admin roles that go over a certain threshold of known admins.&lt;br /&gt;['T1098.005']: Monitor user accounts for new and suspicious device associations, such as those originating from unusual sources, occurring at unusual times, or following a suspicious login.(Citation: Microsoft DEV-0537) &lt;br /&gt;['T1098.002']: Monitor for unusual Exchange and Office 365 email account permissions changes that may indicate excessively broad permissions being granted to compromised accounts.&lt;br /&gt;['T1098']: Monitor events for changes to account objects and/or permissions on systems and the domain, such as event IDs 4738, 4728 and 4670. Monitor for modification of accounts in correlation with other suspicious activity. Changes may occur at unusual times or from unusual systems. Especially flag events where the subject and target accounts differ or that include additional flags such as changing a password without knowledge of the old password.

Monitor for unusual permissions changes that may indicate excessively broad permissions being granted to compromised accounts.&lt;br /&gt;['T1201']: Monitor for contextual data about an account that may attempt to access detailed information about the password policy used within an enterprise network or cloud environment.&lt;br /&gt;['T1134']: Monitor for contextual data about an account, which may include a username, user ID, environmental data, etc. that may modify access tokens to operate under a different user or system security context to perform actions and bypass access controls.&lt;br /&gt;['T1134.005']: Examine data in user's SID-History attributes&lt;br /&gt;['T1564.002']: Monitor for contextual data about an account, which may include a username, user ID, environmental data that may mask the presence of user accounts they create or modify. On macOS, identify users with an userID under 500 and the &lt;code&gt;Hide500Users&lt;/code&gt; key value in the &lt;code&gt;/Library/Preferences/com.apple.loginwindow&lt;/code&gt; plist file set to &lt;code&gt;TRUE&lt;/code&gt;.(Citation: Cybereason OSX Pirrit)&lt;br /&gt;['T1556.005']: Monitor Fine-Grained Password Policies and regularly audit user accounts and group settings.(Citation: dump_pwd_dcsync)&lt;br /&gt;['T1564']: Monitor for contextual data about an account, which may include a username, user ID, environmental data that may attempt to hide artifacts associated with their behaviors to evade detection.&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Mitre ATT&amp;CK Data Source DS0002" url="https://attack.mitre.org/datasources/DS0002"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:01.643">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-M1018" name="User Account Management" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>Manage the creation, modification, use, and permissions associated to user accounts.&lt;br /&gt;&lt;p&gt;Detailed mitigations per technique:&lt;/p&gt;&lt;br /&gt;['T1580']: Limit permissions to discover cloud infrastructure in accordance with least privilege. Organizations should limit the number of users within the organization with an IAM role that has administrative privileges, strive to reduce all permanent privileged role assignments, and conduct periodic entitlement reviews on IAM users, roles and policies.&lt;br /&gt;['T1159', 'T1543.001']: Restrict user's abilities to create Launch Agents with group policy.&lt;br /&gt;['T1543']: Limit privileges of user accounts and groups so that only authorized administrators can interact with system-level process changes and service configurations.&lt;br /&gt;['T1040']: In cloud environments, ensure that users are not granted permissions to create or modify traffic mirrors unless this is explicitly required.&lt;br /&gt;['T1578']: Limit permissions for creating, deleting, and otherwise altering compute components in accordance with least privilege. Organizations should limit the number of users within the organization with an IAM role that has administrative privileges, strive to reduce all permanent privileged role assignments, and conduct periodic entitlement reviews on IAM users, roles and policies.(Citation: Mandiant M-Trends 2020)&lt;br /&gt;['T1004', 'T1547.004']: Limit the privileges of user accounts so that only authorized administrators can perform Winlogon helper changes.&lt;br /&gt;['T1072']: Ensure that any accounts used by third-party providers to access these systems are traceable to the third-party and are not used throughout the network or used by other third-party providers in the same environment. Ensure there are regular reviews of accounts provisioned to these systems to verify continued business need, and ensure there is governance to trace de-provisioning of access that is no longer required. Ensure proper system and access isolation for critical network systems through use of account privilege separation.&lt;br /&gt;['T1574.010', 'T1574.005']: Limit privileges of user accounts and groups so that only authorized administrators can interact with service changes and service binary target path locations. Deny execution from user directories such as file download directories and temp directories where able.&lt;br /&gt;['T1098.004']: In cloud environments, ensure that only users who explicitly require the permissions to update instance metadata or configurations can do so.&lt;br /&gt;['T1619']: Restrict granting of permissions related to listing objects in cloud storage to necessary accounts.&lt;br /&gt;['T1053']: Limit privileges of user accounts and remediate Privilege Escalation vectors so only authorized administrators can create scheduled tasks on remote systems.&lt;br /&gt;['T1089', 'T1562.001']: Ensure proper user permissions are in place to prevent adversaries from disabling or interfering with security services.&lt;br /&gt;['T1530']: Configure user permissions groups and roles for access to cloud storage.(Citation: Microsoft Azure Storage Security, 2019) Implement strict Identity and Access Management (IAM) controls to prevent access to storage solutions except for the applications, users, and services that require access.(Citation: Amazon S3 Security, 2019) Ensure that temporary access tokens are issued rather than permanent credentials, especially when access is being granted to entities outside of the internal security boundary.(Citation: Amazon  AWS Temporary Security Credentials)&lt;br /&gt;['T1050']: Limit privileges of user accounts and remediate Privilege Escalation vectors so only  authorized administrators can create new services.&lt;br /&gt;['T1610']: Enforce the principle of least privilege by limiting container dashboard access to only the necessary users.&lt;br /&gt;['T1197']: 
Consider limiting access to the BITS interface to specific users or groups.(Citation: Symantec BITS May 2007)&lt;br /&gt;['T1537']: Limit user account and IAM policies to the least privileges required. Consider using temporary credentials for accounts that are only valid for a certain period of time to reduce the effectiveness of compromised accounts.&lt;br /&gt;['T1562.008']: Configure default account policy to enable logging. Manage policies to ensure only necessary users have permissions to make changes to logging policies.&lt;br /&gt;['T1546.003', 'T1084']: By default, only administrators are allowed to connect remotely using WMI; restrict other users that are allowed to connect, or disallow all users from connecting remotely to WMI.&lt;br /&gt;['T1547.009', 'T1023']: Limit permissions for who can create symbolic links in Windows to appropriate groups such as Administrators and necessary groups for virtualization. This can be done through GPO: Computer Configuration &gt; [Policies] &gt; Windows Settings &gt; Security Settings &gt; Local Policies &gt; User Rights Assignment: Create symbolic links. (Citation: UCF STIG Symbolic Links)&lt;br /&gt;['T1578.003']: Limit permissions for deleting new instances in accordance with least privilege. Organizations should limit the number of users within the organization with an IAM role that has administrative privileges, strive to reduce all permanent privileged role assignments, and conduct periodic entitlement reviews on IAM users, roles and policies.(Citation: Mandiant M-Trends 2020)&lt;br /&gt;['T1051']: Ensure that permissions of the Web server process are only what is required by not using built-in accounts; instead, create specific accounts to limit unnecessary access or permissions overlap across multiple systems. (Citation: acunetix Server Secuirty) (Citation: NIST Server Security July 2008)&lt;br /&gt;['T1134', 'T1134.001', 'T1134.003']: An adversary must already have administrator level access on the local system to make full use of this technique; be sure to restrict users and accounts to the least privileges they require.  &lt;br /&gt;['T1163']: Limit privileges of user accounts so only authorized users can edit the rc.common file.&lt;br /&gt;['T1054', 'T1562.006']: Ensure event tracers/forwarders (Citation: Microsoft ETW May 2018), firewall policies, and other associated mechanisms are secured with appropriate permissions and access controls and cannot be manipulated by user accounts.&lt;br /&gt;['T1165']: Appropriate permissions should be applied such that only specific users can edit the startup items so that they can be leveraged for privilege escalation.&lt;br /&gt;['T1543.004', 'T1160', 'T1053.004']: Limit privileges of user accounts and remediate Privilege Escalation vectors so only authorized administrators can create new Launch Daemons.&lt;br /&gt;['T1047']: By default, only administrators are allowed to connect remotely using WMI. Restrict other users who are allowed to connect, or disallow all users to connect remotely to WMI.&lt;br /&gt;['T1609']: Enforce authentication and role-based access control on the container service to restrict users to the least privileges required.(Citation: Kubernetes Hardening Guide)&lt;br /&gt;['T1550.003', 'T1097']: Do not allow a user to be a local administrator for multiple systems.&lt;br /&gt;['T1574']: Limit privileges of user accounts and groups so that only authorized administrators can interact with service changes and service binary target path locations. Deny execution from user directories such as file download directories and temp directories where able.

Ensure that proper permissions and directory access control are set to deny users the ability to write files to the top-level directory &lt;code&gt;C:&lt;/code&gt; and system directories, such as &lt;code&gt;C:\Windows\&lt;/code&gt;, to reduce places where malicious files could be placed for execution.&lt;br /&gt;['T1078']: Regularly audit user accounts for activity and deactivate or remove any that are no longer needed.&lt;br /&gt;['T1053.007']: Limit privileges of user accounts and remediate privilege escalation vectors so only authorized administrators can create container orchestration jobs.&lt;br /&gt;['T1484.001', 'T1484']: Consider implementing WMI and security filtering to further tailor which users and computers a GPO will apply to.(Citation: Wald0 Guide to GPOs)(Citation: Microsoft WMI Filters)(Citation: Microsoft GPO Security Filtering)&lt;br /&gt;['T1547.006']: Use MDM to disable user's ability to install or approve kernel extensions, and ensure all approved kernel extensions are in alignment with policies specified in &lt;code&gt;com.apple.syspolicy.kernel-extension-policy&lt;/code&gt;.(Citation: Apple TN2459 Kernel Extensions)(Citation: MDMProfileConfigMacOS)
&lt;br /&gt;['T1563.002', 'T1021.001', 'T1076', 'T1563']: Limit remote user permissions if remote access is necessary.&lt;br /&gt;['T1569', 'T1569.001']: Prevent users from installing their own launch agents or launch daemons.&lt;br /&gt;['T1501', 'T1543.002']: Limit user access to system utilities such as 'systemctl' to only users who have a legitimate need.&lt;br /&gt;['T1213.002', 'T1213', 'T1213.001']: Enforce the principle of least-privilege. Consider implementing access control mechanisms that include both authentication and authorization.&lt;br /&gt;['T1031', 'T1489']: Limit privileges of user accounts and groups so that only authorized administrators can interact with service changes and service configurations.&lt;br /&gt;['T1021']: Limit the accounts that may use remote services. Limit the permissions for accounts that are at higher risk of compromise; for example, configure SSH so users can only run specific programs.&lt;br /&gt;['T1550.002', 'T1075']: Do not allow a domain user to be in the local administrator group on multiple systems.&lt;br /&gt;['T1562']: Ensure proper user permissions are in place to prevent adversaries from disabling or interfering with security/logging services.&lt;br /&gt;['T1547.013']: Limit privileges of user accounts so only authorized privileged users can create and modify XDG autostart entries.&lt;br /&gt;['T1157']: Prevent users from being able to write files to the search paths for applications.&lt;br /&gt;['T1034']: Ensure that proper permissions and directory access control are set to deny users the ability to write files to the top-level directory &lt;code&gt;C:&lt;/code&gt; and system directories, such as &lt;code&gt;C:\Windows\&lt;/code&gt;, to reduce places where malicious files could be placed for execution.&lt;br /&gt;['T1578.001']: Limit permissions for creating snapshots or backups in accordance with least privilege. Organizations should limit the number of users within the organization with an IAM role that has administrative privileges, strive to reduce all permanent privileged role assignments, and conduct periodic entitlement reviews on IAM users, roles and policies.(Citation: Mandiant M-Trends 2020)&lt;br /&gt;['T1606.002', 'T1606']: Ensure that user accounts with administrative rights follow best practices, including use of privileged access workstations, Just in Time/Just Enough Administration (JIT/JEA), and strong authentication. Reduce the number of users that are members of highly privileged Directory Roles.(Citation: Microsoft SolarWinds Customer Guidance)&lt;br /&gt;['T1134.002']: An adversary must already have administrator level access on the local system to make full use of this technique; be sure to restrict users and accounts to the least privileges they require.&lt;br /&gt;['T1053.005']: Limit privileges of user accounts and remediate Privilege Escalation vectors so only authorized administrators can create scheduled tasks on remote systems. &lt;br /&gt;['T1566.002']: Azure AD Administrators apply limitations upon the ability for users to grant consent to unfamiliar or unverified third-party applications. &lt;br /&gt;['T1110.004', 'T1110']: Proactively reset accounts that are known to be part of breached credentials either immediately, or after detecting bruteforce attempts.&lt;br /&gt;['T1185']: Since browser pivoting requires a high integrity process to launch from, restricting user permissions and addressing Privilege Escalation and [Bypass User Account Control](https://attack.mitre.org/techniques/T1548/002) opportunities can limit the exposure to this technique.&lt;br /&gt;['T1044']: Limit privileges of user accounts and groups so that only authorized administrators can interact with service changes and service binary target path locations. Deny execution from user directories such as file download directories and temp directories where able. (Citation: Seclists Kanthak 7zip Installer)&lt;br /&gt;['T1021.004']: Limit which user accounts are allowed to login via SSH.&lt;br /&gt;['T1562.007']: Ensure least privilege principles are applied to Identity and Access Management (IAM) security policies.(Citation: Expel IO Evil in AWS)&lt;br /&gt;['T1168']: Limit privileges of user accounts and remediate Privilege Escalation vectors so only authorized users can create scheduled jobs.&lt;br /&gt;['T1538']: Enforce the principle of least-privilege by limiting dashboard visibility to only the resources required. This may limit the discovery value of the dashboard in the event of a compromised account.&lt;br /&gt;['T1550']: Enforce the principle of least-privilege. Do not allow a domain user to be in the local administrator group on multiple systems.&lt;br /&gt;['T1053.002']: Limit privileges of user accounts and remediate Privilege Escalation vectors so only authorized administrators can create scheduled tasks on remote systems. In Linux environments, users account-level access to &lt;code&gt;[at](https://attack.mitre.org/software/S0110)&lt;/code&gt; can be managed using &lt;code&gt;at.allow&lt;/code&gt; and &lt;code&gt;at.deny&lt;/code&gt; files. Users listed in the at.allow are enabled to schedule actions using at, whereas users listed in at.deny file disabled from the utility.&lt;br /&gt;['T1053.003']: &lt;code&gt;cron&lt;/code&gt; permissions are controlled by &lt;code&gt;/etc/cron.allow and /etc/cron.deny&lt;/code&gt;. If there is a &lt;code&gt;cron.allow&lt;/code&gt; file, then the user or users that need to use &lt;code&gt;cron&lt;/code&gt; will need to be listed in the file. &lt;code&gt;cron.deny&lt;/code&gt; is used to explicitly disallow users from using cron. If neither files exist, then only the super user is allowed to run cron.&lt;br /&gt;['T1505.003']: Enforce the principle of least privilege by limiting privileges of user accounts so only authorized accounts can modify the web directory.(Citation: NSA and ASD Detect and Prevent Web Shells 2020)&lt;br /&gt;['T1552.007']: Enforce authentication and role-based access control on the container API to restrict users to the least privileges required.(Citation: Kubernetes Hardening Guide)&lt;br /&gt;['T1562.004']: Ensure proper user permissions are in place to prevent adversaries from disabling or modifying firewall settings.&lt;br /&gt;['T1213.003']: Enforce the principle of least-privilege. Consider implementing access control mechanisms that include both authentication and authorization for code repositories.&lt;br /&gt;['T1613']: Enforce the principle of least privilege by limiting dashboard visibility to only the required users.&lt;br /&gt;['T1547.012']: Limit user accounts that can load or unload device drivers by disabling &lt;code&gt;SeLoadDriverPrivilege&lt;/code&gt;.&lt;br /&gt;['T1543.003']: Limit privileges of user accounts and groups so that only authorized administrators can interact with service changes and service configurations. &lt;br /&gt;['T1528']: Enforce role-based access control to limit accounts to the least privileges they require. A Cloud Access Security Broker (CASB) can be used to set usage policies and manage user permissions on cloud applications to prevent access to application access tokens. In Kubernetes applications, set "automountServiceAccountToken: false" in the YAML specification of pods that do not require access to service account tokens.(Citation: Kubernetes Hardening Guide)&lt;br /&gt;['T1053.006']: Limit user access to system utilities such as 'systemctl' or 'systemd-run' to users who have a legitimate need.&lt;br /&gt;['T1152']: Prevent users from installing their own launch agents or launch daemons and instead require them to be pushed out by group policy.&lt;br /&gt;['T1578.002']: Limit permissions for creating new instances in accordance with least privilege. Organizations should limit the number of users within the organization with an IAM role that has administrative privileges, strive to reduce all permanent privileged role assignments, and conduct periodic entitlement reviews on IAM users, roles and policies.(Citation: Mandiant M-Trends 2020)&lt;br /&gt;['T1087.004']: Limit permissions to discover cloud accounts in accordance with least privilege. Organizations should limit the number of users within the organization with an IAM role that has administrative privileges, strive to reduce all permanent privileged role assignments, and conduct periodic entitlement reviews on IAM users, roles and policies.&lt;br /&gt;['T1505']: Enforce the principle of least privilege by limiting privileges of user accounts so only authorized accounts can modify and/or add server software components.(Citation: NSA and ASD Detect and Prevent Web Shells 2020)&lt;br /&gt;['T1562.002']: Ensure proper user permissions are in place to prevent adversaries from disabling or interfering with logging.&lt;br /&gt;['T1059.008']: Use of Authentication, Authorization, and Accounting (AAA) systems will limit actions users can perform and provide a history of user actions to detect unauthorized use and abuse. Ensure least privilege principles are applied to user accounts and groups so that only authorized users can perform configuration changes. (Citation: Cisco IOS Software Integrity Assurance - AAA)&lt;br /&gt;['T1574.012']: Limit the privileges of user accounts so that only authorized administrators can edit system environment variables.&lt;br /&gt;['T1078.004']: Periodically review user accounts and remove those that are inactive or unnecessary. Limit the ability for user accounts to create additional accounts.&lt;br /&gt;['T1053.001']: Users account-level access to &lt;code&gt;[at](https://attack.mitre.org/software/S0110)&lt;/code&gt; can be managed using &lt;code&gt;/etc/at.allow&lt;/code&gt; and &lt;code&gt;/etc/at.deny&lt;/code&gt; files. Users listed in the at.allow are enabled to schedule actions using at, whereas users listed in at.deny file disabled from the utility.&lt;br /&gt;['T1162']: Restrict users from being able to create their own login items.&lt;br /&gt;['T1078']: Ensure users and user groups have appropriate permissions for their roles through Identity and Access Management (IAM) controls. Configure user permissions, groups, and roles for access to cloud-based systems as well. Implement strict IAM controls to prevent access to systems except for the applications, users, and services that require access. Consider using temporary credentials that are only good for a certain period of time in cloud environments to reduce the effectiveness of compromised accounts.&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Mitre ATT&amp;CK Mitigation M1018" url="https://attack.mitre.org/mitigations/M1018"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:01.743">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-M1017" name="User Training" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>Train users to be aware of access or manipulation attempts by an adversary to reduce the risk of successful spearphishing, social engineering, and other techniques that involve user interaction.&lt;br /&gt;&lt;p&gt;Detailed mitigations per technique:&lt;/p&gt;&lt;br /&gt;['T1566.003']: Users can be trained to identify social engineering techniques and spearphishing messages with malicious links.&lt;br /&gt;['T1204', 'T1204.001', 'T1204.002']: Use user training as a way to bring awareness to common phishing and spearphishing techniques and how to raise suspicion for potentially malicious events.&lt;br /&gt;['T1213.003']: Develop and publish policies that define acceptable information to be stored in code repositories.&lt;br /&gt;['T1164']: Holding the Shift key while logging in prevents apps from opening automatically. (Citation: Re-Open windows on Mac)&lt;br /&gt;['T1552', 'T1081', 'T1552.001']: Ensure that developers and system administrators are aware of the risk associated with having plaintext passwords in software configuration files that may be left on endpoint systems or servers.&lt;br /&gt;['T1213']: Develop and publish policies that define acceptable information to be stored in repositories.&lt;br /&gt;['T1598', 'T1598.003', 'T1598.001', 'T1598.002']: Users can be trained to identify social engineering techniques and spearphishing attempts.&lt;br /&gt;['T1213.001']: Develop and publish policies that define acceptable information to be stored in Confluence repositories.&lt;br /&gt;['T1078.002', 'T1078.004', 'T1078']: Applications may send push notifications to verify a login as a form of multi-factor authentication (MFA). Train users to only accept valid push notifications and to report suspicious push notifications.&lt;br /&gt;['T1557.002', 'T1557']: Train users to be suspicious about certificate errors. Adversaries may use their own certificates in an attempt to intercept HTTPS traffic. Certificate errors may arise when the application's certificate does not match the one expected by the host.&lt;br /&gt;['T1003.005', 'T1003', 'T1003.003', 'T1003.001', 'T1003.002', 'T1003.004']: Limit credential overlap across accounts and systems by training users and administrators not to use the same password for multiple accounts.&lt;br /&gt;['T1185']: Close all browser sessions regularly and when they are no longer needed.&lt;br /&gt;['T1072']: Have a strict approval policy for use of deployment systems.&lt;br /&gt;['T1204.003']: Train users to be aware of the existence of malicious images and how to avoid deploying instances and containers from them.&lt;br /&gt;['T1192', 'T1194']: Users can be trained to identify social engineering techniques and spearphishing emails with malicious links.&lt;br /&gt;['T1036.007']: Train users to look for double extensions in filenames, and in general use training as a way to bring awareness to common phishing and spearphishing techniques and how to raise suspicion for potentially malicious events.&lt;br /&gt;['T1111']: Remove smart cards when not in use.&lt;br /&gt;['T1528']: Users need to be trained to not authorize third-party applications they don't recognize. The user should pay particular attention to the redirect URL: if the URL is a misspelled or convoluted sequence of words related to an expected service or SaaS application, the website is likely trying to spoof a legitimate service. Users should also be cautious about the permissions they are granting to apps. For example, offline access and access to read emails should excite higher suspicions because adversaries can utilize SaaS APIs to discover credentials and other sensitive communications.&lt;br /&gt;['T1221']: Train users to identify social engineering techniques and spearphishing emails that could be used to deliver malicious documents.&lt;br /&gt;['T1056.002']: Use user training as a way to bring awareness and raise suspicion for potentially malicious events and dialog boxes (ex: Office documents prompting for credentials).&lt;br /&gt;['T1176']: 
Close out all browser sessions when finished using them to prevent any potentially malicious extensions from continuing to run.&lt;br /&gt;['T1566.001', 'T1193']: Users can be trained to identify social engineering techniques and spearphishing emails.&lt;br /&gt;['T1213.002']: Develop and publish policies that define acceptable information to be stored in SharePoint repositories.&lt;br /&gt;['T1566.002']: Users can be trained to identify social engineering techniques and spearphishing emails with malicious links which includes phishing for consent with OAuth 2.0 &lt;br /&gt;['T1566']: Users can be trained to identify social engineering techniques and phishing emails.&lt;br /&gt;['T1547.007']: Holding the Shift key while logging in prevents apps from opening automatically.(Citation: Re-Open windows on Mac)&lt;br /&gt;['T1141']: Use user training as a way to bring awareness and raise suspicion for potentially malicious events (ex: Office documents prompting for credentials).&lt;br /&gt;['T1539']: Train users to identify aspects of phishing attempts where they're asked to enter credentials into a site that has the incorrect domain for the application they are logging into.&lt;br /&gt;['T1621']: Train users to only accept 2FA/MFA requests from login attempts they initiated, to review source location of the login attempt prompting the 2FA/MFA requests, and to report suspicious/unsolicited prompts.&lt;br /&gt;['T1547.011']: Holding the shift key during login prevents apps from opening automatically.(Citation: Re-Open windows on Mac)&lt;br /&gt;['T1162']: Holding the shift key during login prevents apps from opening automatically. (Citation: Re-Open windows on Mac)&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Mitre ATT&amp;CK Mitigation M1017" url="https://attack.mitre.org/mitigations/M1017"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:01.737">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-DS0006" name="Web Credential" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>Credential material, such as session cookies or tokens, used to authenticate to web applications and services(Citation: Medium Authentication Tokens)(Citation: Auth0 Access Tokens)&lt;br /&gt;&lt;p&gt;Detailed detections per technique:&lt;/p&gt;&lt;br /&gt;['T1606.002']: Monitor for the use of access tokens to access services such as email that were created using SAML tokens which do not have corresponding 1202 events (i.e. "The Federation Service validated a new credential") in the domain.(Citation: Sygnia Golden SAML)&lt;br /&gt;['T1606']: Monitor for the use of Access Tokens to access services such as Email that were created using SAML tokens which do not have corresponding 1202 events in the domain.(Citation: Sygnia Golden SAML)&lt;br /&gt;['T1550.001']: Monitor the use of application access tokens to interact with resources or services that do not fit the organization baseline. For example, an application, that is not meant to read emails, is now accessing users' mail boxes and, potentially, exfiltrating sensitive data.&lt;br /&gt;['T1550']: Monitor for an attempt by a user to gain access to a network or computing resource by providing web credentials (ex: Windows EID 1202) that may use alternate authentication material, such as password hashes, Kerberos tickets, and application access tokens, in order to move laterally within an environment and bypass normal system access controls.&lt;br /&gt;['T1606.001']: Monitor for the usage of unexpected or unusual cookies to access resources and services. Forged web cookies may be associated with unknown accounts and could be the result of compromised secrets such as passwords or [Private Keys](https://attack.mitre.org/techniques/T1552/004).&lt;br /&gt;['T1550.004']: Monitor for anomalous access of websites and cloud-based applications by the same user in different locations or by different systems that do not match expected configurations.&lt;br /&gt;['T1606.002']: Monitor for creation of access tokens using SAML tokens which do not have corresponding 4769 and 1200 events in the domain.(Citation: Sygnia Golden SAML)&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Auth0 Access Tokens" url="https://auth0.com/docs/tokens/access-tokens"/>
            <reference name="Medium Authentication Tokens" url="https://medium.com/@sherryhsu/session-vs-token-based-authentication-11a6c5ac45e4"/>
            <reference name="Mitre ATT&amp;CK Data Source DS0006" url="https://attack.mitre.org/datasources/DS0006"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:01.648">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="brute-force" name="Brute Force" desc="" library="">
          <threats>
            <threat ref="T-T1110.004" name="Credential Stuffing" state="Expose" source="MANUAL" edited="false" owner="JamesRabe" library="" editable="true">
              <desc>Adversaries may use credentials obtained from breach dumps of unrelated accounts to gain access to target accounts through credential overlap. Occasionally, large numbers of username and password pairs are dumped online when a website or service is compromised and the user account credentials accessed. The information may be useful to an adversary attempting to compromise accounts by taking advantage of the tendency for users to use the same passwords across personal and business accounts.&lt;br&gt;&lt;br&gt;Credential stuffing is a risky option because it could cause numerous authentication failures and account lockouts, depending on the organization's login failure policies.&lt;br&gt;&lt;br&gt;Typically, management services over commonly used ports are used when stuffing credentials. Commonly targeted services include the following:&lt;br&gt;&lt;br&gt;* SSH (22/TCP)&lt;br&gt;* Telnet (23/TCP)&lt;br&gt;* FTP (21/TCP)&lt;br&gt;* NetBIOS / SMB / Samba (139/TCP &amp;amp; 445/TCP)&lt;br&gt;* LDAP (389/TCP)&lt;br&gt;* Kerberos (88/TCP)&lt;br&gt;* RDP / Terminal Services (3389/TCP)&lt;br&gt;* HTTP/HTTP Management Services (80/TCP &amp;amp; 443/TCP)&lt;br&gt;* MSSQL (1433/TCP)&lt;br&gt;* Oracle (1521/TCP)&lt;br&gt;* MySQL (3306/TCP)&lt;br&gt;* VNC (5900/TCP)&lt;br&gt;&lt;br&gt;In addition to management services, adversaries may "target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols," as well as externally facing email applications, such as Office 365.(Citation: US-CERT TA18-068A 2018)&lt;br&gt;&lt;br&gt;Monitor authentication logs for system and application login failures of [Valid Accounts](https://attack.mitre.org/techniques/T1078). If authentication failures are high, then there may be a brute force attempt to gain access to a system using legitimate credentials.</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references>
                <reference name="CAPEC-600" url="https://capec.mitre.org/data/definitions/600.html"/>
                <reference name="Mitre ATT&amp;CK Technique T1110.004" url="https://attack.mitre.org/techniques/T1110/004"/>
                <reference name="US-CERT TA18-068A 2018" url="https://www.us-cert.gov/ncas/alerts/TA18-086A"/>
              </references>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-DS0002" mitigation="16"/>
                <countermeasure ref="C-DS0015" mitigation="14"/>
                <countermeasure ref="C-DS0017" mitigation="14"/>
                <countermeasure ref="C-M1018" mitigation="14"/>
                <countermeasure ref="C-M1027" mitigation="14"/>
                <countermeasure ref="C-M1032" mitigation="14"/>
                <countermeasure ref="C-M1036" mitigation="14"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="T-T1110.002" name="Password Cracking" state="Expose" source="MANUAL" edited="false" owner="JamesRabe" library="" editable="true">
              <desc>Adversaries may use password cracking to attempt to recover usable credentials, such as plaintext passwords, when credential material such as password hashes are obtained. [OS Credential Dumping](https://attack.mitre.org/techniques/T1003) can be used to obtain password hashes, this may only get an adversary so far when [Pass the Hash](https://attack.mitre.org/techniques/T1550/002) is not an option. Further, adversaries may leverage [Data from Configuration Repository](https://attack.mitre.org/techniques/T1602) in order to obtain hashed credentials for network devices.(Citation: US-CERT-TA18-106A) &lt;br&gt;&lt;br&gt;Techniques to systematically guess the passwords used to compute hashes are available, or the adversary may use a pre-computed rainbow table to crack hashes. Cracking hashes is usually done on adversary-controlled systems outside of the target network.(Citation: Wikipedia Password cracking) The resulting plaintext password resulting from a successfully cracked hash may be used to log into systems, resources, and services in which the account has access.&lt;br&gt;&lt;br&gt;It is difficult to detect when hashes are cracked, since this is generally done outside the scope of the target network. Consider focusing efforts on detecting other adversary behavior used to acquire credential materials, such as [OS Credential Dumping](https://attack.mitre.org/techniques/T1003) or [Kerberoasting](https://attack.mitre.org/techniques/T1558/003).</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references>
                <reference name="CAPEC-55" url="https://capec.mitre.org/data/definitions/55.html"/>
                <reference name="Mitre ATT&amp;CK Technique T1110.002" url="https://attack.mitre.org/techniques/T1110/002"/>
                <reference name="US-CERT-TA18-106A" url="https://www.us-cert.gov/ncas/alerts/TA18-106A"/>
                <reference name="Wikipedia Password cracking" url="https://en.wikipedia.org/wiki/Password_cracking"/>
              </references>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-DS0002" mitigation="20"/>
                <countermeasure ref="C-DS0015" mitigation="20"/>
                <countermeasure ref="C-DS0017" mitigation="20"/>
                <countermeasure ref="C-M1027" mitigation="20"/>
                <countermeasure ref="C-M1032" mitigation="20"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="T-T1110.001" name="Password Guessing" state="Expose" source="MANUAL" edited="false" owner="JamesRabe" library="" editable="true">
              <desc>Adversaries with no prior knowledge of legitimate credentials within the system or environment may guess passwords to attempt access to accounts. Without knowledge of the password for an account, an adversary may opt to systematically guess the password using a repetitive or iterative mechanism. An adversary may guess login credentials without prior knowledge of system or environment passwords during an operation by using a list of common passwords. Password guessing may or may not take into account the target's policies on password complexity or use policies that may lock accounts out after a number of failed attempts.&lt;br&gt;&lt;br&gt;Guessing passwords can be a risky option because it could cause numerous authentication failures and account lockouts, depending on the organization's login failure policies. (Citation: Cylance Cleaver)&lt;br&gt;&lt;br&gt;Typically, management services over commonly used ports are used when guessing passwords. Commonly targeted services include the following:&lt;br&gt;&lt;br&gt;* SSH (22/TCP)&lt;br&gt;* Telnet (23/TCP)&lt;br&gt;* FTP (21/TCP)&lt;br&gt;* NetBIOS / SMB / Samba (139/TCP &amp;amp; 445/TCP)&lt;br&gt;* LDAP (389/TCP)&lt;br&gt;* Kerberos (88/TCP)&lt;br&gt;* RDP / Terminal Services (3389/TCP)&lt;br&gt;* HTTP/HTTP Management Services (80/TCP &amp;amp; 443/TCP)&lt;br&gt;* MSSQL (1433/TCP)&lt;br&gt;* Oracle (1521/TCP)&lt;br&gt;* MySQL (3306/TCP)&lt;br&gt;* VNC (5900/TCP)&lt;br&gt;* SNMP (161/UDP and 162/TCP/UDP)&lt;br&gt;&lt;br&gt;In addition to management services, adversaries may "target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols," as well as externally facing email applications, such as Office 365.(Citation: US-CERT TA18-068A 2018). Further, adversaries may abuse network device interfaces (such as `wlanAPI`) to brute force accessible wifi-router(s) via wireless authentication protocols.(Citation: Trend Micro Emotet 2020)&lt;br&gt;&lt;br&gt;In default environments, LDAP and Kerberos connection attempts are less likely to trigger events over SMB, which creates Windows "logon failure" event ID 4625.&lt;br&gt;&lt;br&gt;Monitor authentication logs for system and application login failures of [Valid Accounts](https://attack.mitre.org/techniques/T1078). If authentication failures are high, then there may be a brute force attempt to gain access to a system using legitimate credentials.</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references>
                <reference name="CAPEC-49" url="https://capec.mitre.org/data/definitions/49.html"/>
                <reference name="Cylance Cleaver" url="https://www.cylance.com/content/dam/cylance/pages/operation-cleaver/Cylance_Operation_Cleaver_Report.pdf"/>
                <reference name="Mitre ATT&amp;CK Technique T1110.001" url="https://attack.mitre.org/techniques/T1110/001"/>
                <reference name="Trend Micro Emotet 2020" url="https://www.trendmicro.com/vinfo/us/security/news/cybercrime-and-digital-threats/emotet-now-spreads-via-wi-fi"/>
                <reference name="US-CERT TA18-068A 2018" url="https://www.us-cert.gov/ncas/alerts/TA18-086A"/>
              </references>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-DS0002" mitigation="16"/>
                <countermeasure ref="C-DS0015" mitigation="14"/>
                <countermeasure ref="C-DS0017" mitigation="14"/>
                <countermeasure ref="C-M1027" mitigation="14"/>
                <countermeasure ref="C-M1032" mitigation="14"/>
                <countermeasure ref="C-M1036" mitigation="14"/>
                <countermeasure ref="C-M1051" mitigation="14"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="T-T1110.003" name="Password Spraying" state="Expose" source="MANUAL" edited="false" owner="JamesRabe" library="" editable="true">
              <desc>Adversaries may use a single or small list of commonly used passwords against many different accounts to attempt to acquire valid account credentials. Password spraying uses one password (e.g. 'Password01'), or a small list of commonly used passwords, that may match the complexity policy of the domain. Logins are attempted with that password against many different accounts on a network to avoid account lockouts that would normally occur when brute forcing a single account with many passwords. (Citation: BlackHillsInfosec Password Spraying)&lt;br&gt;&lt;br&gt;Typically, management services over commonly used ports are used when password spraying. Commonly targeted services include the following:&lt;br&gt;&lt;br&gt;* SSH (22/TCP)&lt;br&gt;* Telnet (23/TCP)&lt;br&gt;* FTP (21/TCP)&lt;br&gt;* NetBIOS / SMB / Samba (139/TCP &amp;amp; 445/TCP)&lt;br&gt;* LDAP (389/TCP)&lt;br&gt;* Kerberos (88/TCP)&lt;br&gt;* RDP / Terminal Services (3389/TCP)&lt;br&gt;* HTTP/HTTP Management Services (80/TCP &amp;amp; 443/TCP)&lt;br&gt;* MSSQL (1433/TCP)&lt;br&gt;* Oracle (1521/TCP)&lt;br&gt;* MySQL (3306/TCP)&lt;br&gt;* VNC (5900/TCP)&lt;br&gt;&lt;br&gt;In addition to management services, adversaries may "target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols," as well as externally facing email applications, such as Office 365.(Citation: US-CERT TA18-068A 2018)&lt;br&gt;&lt;br&gt;In default environments, LDAP and Kerberos connection attempts are less likely to trigger events over SMB, which creates Windows "logon failure" event ID 4625.&lt;br&gt;&lt;br&gt;Monitor authentication logs for system and application login failures of [Valid Accounts](https://attack.mitre.org/techniques/T1078). Specifically, monitor for many failed authentication attempts across various accounts that may result from password spraying attempts.&lt;br&gt;&lt;br&gt;Consider the following event IDs:(Citation: Trimarc Detecting Password Spraying)&lt;br&gt;&lt;br&gt;* Domain Controllers: "Audit Logon" (Success &amp;amp; Failure) for event ID 4625.&lt;br&gt;* Domain Controllers: "Audit Kerberos Authentication Service" (Success &amp;amp; Failure) for event ID 4771.&lt;br&gt;* All systems: "Audit Logon" (Success &amp;amp; Failure) for event ID 4648.</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references>
                <reference name="BlackHillsInfosec Password Spraying" url="http://www.blackhillsinfosec.com/?p=4645"/>
                <reference name="CAPEC-565" url="https://capec.mitre.org/data/definitions/565.html"/>
                <reference name="Mitre ATT&amp;CK Technique T1110.003" url="https://attack.mitre.org/techniques/T1110/003"/>
                <reference name="Trimarc Detecting Password Spraying" url="https://www.trimarcsecurity.com/single-post/2018/05/06/Trimarc-Research-Detecting-Password-Spraying-with-Security-Event-Auditing"/>
                <reference name="US-CERT TA18-068A 2018" url="https://www.us-cert.gov/ncas/alerts/TA18-086A"/>
              </references>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-DS0002" mitigation="20"/>
                <countermeasure ref="C-DS0015" mitigation="16"/>
                <countermeasure ref="C-DS0017" mitigation="16"/>
                <countermeasure ref="C-M1027" mitigation="16"/>
                <countermeasure ref="C-M1032" mitigation="16"/>
                <countermeasure ref="C-M1036" mitigation="16"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="forge-web-credentials" name="Forge Web Credentials" desc="" library="">
          <threats>
            <threat ref="T-T1606.002" name="SAML Tokens" state="Expose" source="MANUAL" edited="false" owner="JamesRabe" library="" editable="true">
              <desc>An adversary may forge SAML tokens with any permissions claims and lifetimes if they possess a valid SAML token-signing certificate.(Citation: Microsoft SolarWinds Steps) The default lifetime of a SAML token is one hour, but the validity period can be specified in the &lt;code&gt;NotOnOrAfter&lt;/code&gt; value of the &lt;code&gt;conditions ...&lt;/code&gt; element in a token. This value can be changed using the &lt;code&gt;AccessTokenLifetime&lt;/code&gt; in a &lt;code&gt;LifetimeTokenPolicy&lt;/code&gt;.(Citation: Microsoft SAML Token Lifetimes) Forged SAML tokens enable adversaries to authenticate across services that use SAML 2.0 as an SSO (single sign-on) mechanism.(Citation: Cyberark Golden SAML)&lt;br&gt;&lt;br&gt;An adversary may utilize [Private Keys](https://attack.mitre.org/techniques/T1552/004) to compromise an organization's token-signing certificate to create forged SAML tokens. If the adversary has sufficient permissions to establish a new federation trust with their own Active Directory Federation Services (AD FS) server, they may instead generate their own trusted token-signing certificate.(Citation: Microsoft SolarWinds Customer Guidance) This differs from [Steal Application Access Token](https://attack.mitre.org/techniques/T1528) and other similar behaviors in that the tokens are new and forged by the adversary, rather than stolen or intercepted from legitimate users.&lt;br&gt;&lt;br&gt;An adversary may gain administrative Azure AD privileges if a SAML token is forged which claims to represent a highly privileged account. This may lead to [Use Alternate Authentication Material](https://attack.mitre.org/techniques/T1550), which may bypass multi-factor and other authentication protection mechanisms.(Citation: Microsoft SolarWinds Customer Guidance)&lt;br&gt;&lt;br&gt;This technique may be difficult to detect as SAML tokens are signed by a trusted certificate. The forging process may not be detectable since it is likely to happen outside of a defender's visibility, but subsequent usage of the forged token may be seen. Monitor for anomalous logins using SAML tokens created by a compromised or adversary generated token-signing certificate. These logins may occur on any on-premises resources as well as from any cloud environment that trusts the certificate.(Citation: Microsoft SolarWinds Customer Guidance) Search for logins to service providers using SAML SSO which do not have corresponding 4769, 1200, and 1202 events in the Domain.(Citation: Sygnia Golden SAML)&lt;br&gt;&lt;br&gt;Consider modifying SAML responses to include custom elements for each service provider. Monitor these custom elements in service provider access logs to detect any anomalous requests.(Citation: Sygnia Golden SAML)</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references>
                <reference name="Cyberark Golden SAML" url="https://www.cyberark.com/resources/threat-research-blog/golden-saml-newly-discovered-attack-technique-forges-authentication-to-cloud-apps"/>
                <reference name="Microsoft SAML Token Lifetimes" url="https://docs.microsoft.com/en-us/azure/active-directory/develop/active-directory-configurable-token-lifetimes"/>
                <reference name="Microsoft SolarWinds Customer Guidance" url="https://msrc-blog.microsoft.com/2020/12/13/customer-guidance-on-recent-nation-state-cyber-attacks/"/>
                <reference name="Microsoft SolarWinds Steps" url="https://blogs.microsoft.com/on-the-issues/2020/12/13/customers-protect-nation-state-cyberattacks/"/>
                <reference name="Mitre ATT&amp;CK Technique T1606.002" url="https://attack.mitre.org/techniques/T1606/002"/>
                <reference name="Sygnia Golden SAML" url="https://www.sygnia.co/golden-saml-advisory"/>
              </references>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-DS0006" mitigation="20"/>
                <countermeasure ref="C-DS0028" mitigation="16"/>
                <countermeasure ref="C-M1015" mitigation="16"/>
                <countermeasure ref="C-M1018" mitigation="16"/>
                <countermeasure ref="C-M1026" mitigation="16"/>
                <countermeasure ref="C-M1047" mitigation="16"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="multi-factor-authentication-request-generation" name="Multi-Factor Authentication Request Generation" desc="" library="">
          <threats>
            <threat ref="T-T1621" name="Multi-Factor Authentication Request Generation" state="Expose" source="MANUAL" edited="false" owner="JamesRabe" library="" editable="true">
              <desc>Adversaries may attempt to bypass multi-factor authentication (MFA) mechanisms and gain access to accounts by generating MFA requests sent to users.&lt;br&gt;&lt;br&gt;Adversaries in possession credentials to [Valid Accounts](https://attack.mitre.org/techniques/T1078) may be unable to complete the login process if they lack access to the 2FA or MFA mechanisms required as an additional credential and security control. To circumvent this, adversaries may abuse the automatic generation of push notifications to MFA services such as Duo Push, Microsoft Authenticator, Okta, or similar services to have the user grant access to their account.&lt;br&gt;&lt;br&gt;In some cases, adversaries may continuously repeat login attempts in order to bombard users with MFA push notifications, SMS messages, and phone calls, potentially resulting in the user finally accepting the authentication request in response to "MFA fatigue."(Citation: Russian 2FA Push Annoyance - Cimpanu)(Citation: MFA Fatigue Attacks - PortSwigger)(Citation: Suspected Russian Activity Targeting Government and Business Entities Around the Globe)&lt;br&gt;&lt;br&gt;Monitor user account logs as well as 2FA/MFA application logs for suspicious events: unusual login attempt source location, mismatch in location of login attempt and smart device receiving 2FA/MFA request prompts, and high volume of repeated login attempts, all of which may indicate user's primary credentials have been compromised minus 2FA/MFA mechanism.</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references>
                <reference name="MFA Fatigue Attacks - PortSwigger" url="https://portswigger.net/daily-swig/mfa-fatigue-attacks-users-tricked-into-allowing-device-access-due-to-overload-of-push-notifications"/>
                <reference name="Mitre ATT&amp;CK Technique T1621" url="https://attack.mitre.org/techniques/T1621"/>
                <reference name="Russian 2FA Push Annoyance - Cimpanu" url="https://therecord.media/russian-hackers-bypass-2fa-by-annoying-victims-with-repeated-push-notifications/"/>
                <reference name="Suspected Russian Activity Targeting Government and Business Entities Around the Globe" url="https://www.mandiant.com/resources/russian-targeting-gov-business"/>
              </references>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-DS0002" mitigation="20"/>
                <countermeasure ref="C-DS0015" mitigation="16"/>
                <countermeasure ref="C-DS0028" mitigation="16"/>
                <countermeasure ref="C-M1017" mitigation="16"/>
                <countermeasure ref="C-M1032" mitigation="16"/>
                <countermeasure ref="C-M1036" mitigation="16"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="steal-application-access-token" name="Steal Application Access Token" desc="" library="">
          <threats>
            <threat ref="T-T1528" name="Steal Application Access Token" state="Expose" source="MANUAL" edited="false" owner="JamesRabe" library="" editable="true">
              <desc>Adversaries can steal application access tokens as a means of acquiring credentials to access remote systems and resources.&lt;br&gt;&lt;br&gt;Application access tokens are used to make authorized API requests on behalf of a user or service and are commonly used as a way to access resources in cloud and container-based applications and software-as-a-service (SaaS).(Citation: Auth0 - Why You Should Always Use Access Tokens to Secure APIs Sept 2019) OAuth is one commonly implemented framework that issues tokens to users for access to systems. Adversaries who steal account API tokens in cloud and containerized environments may be able to access data and perform actions with the permissions of these accounts, which can lead to privilege escalation and further compromise of the environment.&lt;br&gt;&lt;br&gt;In Kubernetes environments, processes running inside a container communicate with the Kubernetes API server using service account tokens. If a container is compromised, an attacker may be able to steal the container's token and thereby gain access to Kubernetes API commands.(Citation: Kubernetes Service Accounts)&lt;br&gt;&lt;br&gt;Token theft can also occur through social engineering, in which case user action may be required to grant access. An application desiring access to cloud-based services or protected APIs can gain entry using OAuth 2.0 through a variety of authorization protocols. An example commonly-used sequence is Microsoft's Authorization Code Grant flow.(Citation: Microsoft Identity Platform Protocols May 2019)(Citation: Microsoft - OAuth Code Authorization flow - June 2019) An OAuth access token enables a third-party application to interact with resources containing user data in the ways requested by the application without obtaining user credentials. &lt;br&gt; &lt;br&gt;Adversaries can leverage OAuth authorization by constructing a malicious application designed to be granted access to resources with the target user's OAuth token.(Citation: Amnesty OAuth Phishing Attacks, August 2019)(Citation: Trend Micro Pawn Storm OAuth 2017) The adversary will need to complete registration of their application with the authorization server, for example Microsoft Identity Platform using Azure Portal, the Visual Studio IDE, the command-line interface, PowerShell, or REST API calls.(Citation: Microsoft - Azure AD App Registration - May 2019) Then, they can send a [Spearphishing Link](https://attack.mitre.org/techniques/T1566/002) to the target user to entice them to grant access to the application. Once the OAuth access token is granted, the application can gain potentially long-term access to features of the user account through [Application Access Token](https://attack.mitre.org/techniques/T1550/001).(Citation: Microsoft - Azure AD Identity Tokens - Aug 2019)&lt;br&gt;&lt;br&gt;Application access tokens may function within a limited lifetime, limiting how long an adversary can utilize the stolen token. However, in some cases, adversaries can also steal application refresh tokens(Citation: Auth0 Understanding Refresh Tokens), allowing them to obtain new access tokens without prompting the user. &lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;Administrators should set up monitoring to trigger automatic alerts when policy criteria are met. For example, using a Cloud Access Security Broker (CASB), admins can create a "High severity app permissions" policy that generates alerts if apps request high severity permissions or send permissions requests for too many users.&lt;br&gt;&lt;br&gt;Security analysts can hunt for malicious apps using the tools available in their CASB, identity provider, or resource provider (depending on platform.) For example, they can filter for apps that are authorized by a small number of users, apps requesting high risk permissions, permissions incongruous with the app's purpose, or apps with old "Last authorized" fields. A specific app can be investigated using an activity log displaying activities the app has performed, although some activities may be mis-logged as being performed by the user. App stores can be useful resources to further investigate suspicious apps.&lt;br&gt;&lt;br&gt;Administrators can set up a variety of logs and leverage audit tools to monitor actions that can be conducted as a result of OAuth 2.0 access. For instance, audit reports enable admins to identify privilege escalation actions such as role creations or policy modifications, which could be actions performed after initial access.</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references>
                <reference name="Amnesty OAuth Phishing Attacks, August 2019" url="https://www.amnesty.org/en/latest/research/2019/08/evolving-phishing-attacks-targeting-journalists-and-human-rights-defenders-from-the-middle-east-and-north-africa/"/>
                <reference name="Auth0 - Why You Should Always Use Access Tokens to Secure APIs Sept 2019" url="https://auth0.com/blog/why-should-use-accesstokens-to-secure-an-api/"/>
                <reference name="Auth0 Understanding Refresh Tokens" url="https://auth0.com/learn/refresh-tokens/"/>
                <reference name="Kubernetes Service Accounts" url="https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/"/>
                <reference name="Microsoft - Azure AD App Registration - May 2019" url="https://docs.microsoft.com/en-us/azure/active-directory/develop/quickstart-register-app"/>
                <reference name="Microsoft - Azure AD Identity Tokens - Aug 2019" url="https://docs.microsoft.com/en-us/azure/active-directory/develop/access-tokens"/>
                <reference name="Microsoft - OAuth Code Authorization flow - June 2019" url="https://docs.microsoft.com/en-us/azure/active-directory/develop/v2-oauth2-auth-code-flow"/>
                <reference name="Microsoft Identity Platform Protocols May 2019" url="https://docs.microsoft.com/en-us/azure/active-directory/develop/active-directory-v2-protocols"/>
                <reference name="Mitre ATT&amp;CK Technique T1528" url="https://attack.mitre.org/techniques/T1528"/>
                <reference name="Trend Micro Pawn Storm OAuth 2017" url="https://blog.trendmicro.com/trendlabs-security-intelligence/pawn-storm-abuses-open-authentication-advanced-social-engineering-attacks"/>
              </references>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-DS0002" mitigation="20"/>
                <countermeasure ref="C-M1017" mitigation="20"/>
                <countermeasure ref="C-M1018" mitigation="20"/>
                <countermeasure ref="C-M1021" mitigation="20"/>
                <countermeasure ref="C-M1047" mitigation="20"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="steal-web-session-cookie" name="Steal Web Session Cookie" desc="" library="">
          <threats>
            <threat ref="T-T1539" name="Steal Web Session Cookie" state="Expose" source="MANUAL" edited="false" owner="JamesRabe" library="" editable="true">
              <desc>An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.&lt;br&gt;&lt;br&gt;Cookies are often valid for an extended period of time, even if the web application is not actively used. Cookies can be found on disk, in the process memory of the browser, and in network traffic to remote systems. Additionally, other applications on the targets machine might store sensitive authentication cookies in memory (e.g. apps which authenticate to cloud services). Session cookies can be used to bypasses some multi-factor authentication protocols.(Citation: Pass The Cookie)&lt;br&gt;&lt;br&gt;There are several examples of malware targeting cookies from web browsers on the local system.(Citation: Kaspersky TajMahal April 2019)(Citation: Unit 42 Mac Crypto Cookies January 2019) There are also open source frameworks such as Evilginx 2 and Muraena that can gather session cookies through a malicious proxy (ex: [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)) that can be set up by an adversary and used in phishing campaigns.(Citation: Github evilginx2)(Citation: GitHub Mauraena)&lt;br&gt;&lt;br&gt;After an adversary acquires a valid cookie, they can then perform a [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004) technique to login to the corresponding web application.&lt;br&gt;&lt;br&gt;Monitor for attempts to access files and repositories on a local system that are used to store browser session cookies. Monitor for attempts by programs to inject into or dump browser process memory.</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references>
                <reference name="GitHub Mauraena" url="https://github.com/muraenateam/muraena"/>
                <reference name="Github evilginx2" url="https://github.com/kgretzky/evilginx2"/>
                <reference name="Kaspersky TajMahal April 2019" url="https://securelist.com/project-tajmahal/90240/"/>
                <reference name="Mitre ATT&amp;CK Technique T1539" url="https://attack.mitre.org/techniques/T1539"/>
                <reference name="Pass The Cookie" url="https://wunderwuzzi23.github.io/blog/passthecookie.html"/>
                <reference name="Unit 42 Mac Crypto Cookies January 2019" url="https://unit42.paloaltonetworks.com/mac-malware-steals-cryptocurrency-exchanges-cookies/"/>
              </references>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-DS0009" mitigation="20"/>
                <countermeasure ref="C-DS0022" mitigation="20"/>
                <countermeasure ref="C-M1017" mitigation="20"/>
                <countermeasure ref="C-M1032" mitigation="20"/>
                <countermeasure ref="C-M1054" mitigation="20"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="ab2049eb-b128-4445-a1ab-b9b7b662e7ef" diagramComponentId="fba0944c-a7b6-4ec4-935c-f1aa6d7b44c2" ref="17a70636-af46-4a5a-a789-6f39b1096765" name="Persistence" desc="" library="" parentComponentRef="f0d54cbd-bb4b-4375-9178-980f6a239855" componentDefinitionRef="persistence">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses/>
      <countermeasures>
        <countermeasure ref="C-DS0026" name="Active Directory" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>A database and set of services that allows administrators to manage permissions, access to network resources, and stored data objects (user, group, application, or devices)(Citation: Microsoft AD DS Getting Started)&lt;br /&gt;&lt;p&gt;Detailed detections per technique:&lt;/p&gt;&lt;br /&gt;['T1556.005']: Monitor property changes in Group Policy: &lt;code&gt;Computer Configuration\Windows Settings\Security Settings\Account Policies\Password Policy\Store passwords using reversible encryption&lt;/code&gt;. By default, the property should be set to Disabled.&lt;br /&gt;['T1134.005']: Monitor for changes to account management events on Domain Controllers for successful and failed changes to SID-History. (Citation: AdSecurity SID History Sept 2015) (Citation: Microsoft DsAddSidHistory)&lt;br /&gt;['T1531']: Monitor for changes made to AD settings for unexpected modifications to user accounts, such as deletions or potentially malicious changes to user attributes (credentials, status, etc.).&lt;br /&gt;['T1222.001']: Monitor for changes made to DACLs and file/directory ownership. Many of the commands used to modify DACLs and file/directory ownership are built-in system utilities and may generate a high false positive alert rate, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible.&lt;br /&gt;['T1098']: Monitor for changes to Azure Activity Logs for unexpected modifications to Service Principal and Application.&lt;br /&gt;['T1207']: Leverage AD directory synchronization (DirSync) to monitor changes to directory state using AD replication cookies.(Citation: Microsoft DirSync) (Citation: ADDSecurity DCShadow Feb 2018) Also consider monitoring and alerting on the replication of AD objects (Audit Detailed Directory Service Replication Events 4928 and 4929). (Citation: DCShadow Blog)&lt;br /&gt;['T1037.003']: Monitor for changes made in the Active Directory that may use network logon scripts automatically executed at logon initialization to establish persistence.&lt;br /&gt;['T1484.002']: Monitor for changes made to AD settings for unexpected modifications to domain trust settings, such as when a user or application modifies the federation settings on the domain.&lt;br /&gt;['T1222']: Monitor for changes made to ACLs and file/directory ownership. Many of the commands used to modify ACLs and file/directory ownership are built-in system utilities and may generate a high false positive alert rate, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible.&lt;br /&gt;['T1037']: Monitor for changes made in the Active Directory that may use scripts automatically executed at boot or logon initialization to establish persistence.&lt;br /&gt;['T1098.001']: Monitor for changes to Azure Activity Logs for Service Principal and Application modifications.&lt;br /&gt;['T1134']: Monitor for changes made to AD settings that may modify access tokens to operate under a different user or system security context to perform actions and bypass access controls.&lt;br /&gt;['T1484']: Monitor for unexpected deletion of an active directory object, such as Windows EID 5141.&lt;br /&gt;['T1484']: Monitor for newly constructed active directory objects, such as Windows EID 5137.&lt;br /&gt;['T1098.005']: Monitor for the registration or joining of new device objects in Active Directory.&lt;br /&gt;['T1207']: Baseline and periodically analyze the Configuration partition of the AD schema and alert on creation of nTDSDSA objects.(Citation: DCShadow Blog)&lt;br /&gt;['T1558.001']: Monitor for anomalous Kerberos activity, such as malformed or blank fields in Windows logon/logoff events (Event ID 4769, 4768), RC4 encryption within TGTs, and TGS requests without preceding TGT requests. Monitor the lifetime of TGT tickets for values that differ from the default domain duration. Monitor for indications of Pass the Ticket being used to move laterally.&lt;br /&gt;['T1550']: Monitor requests of new ticket granting ticket or service tickets to a Domain Controller, such as Windows EID 4769 or 4768, that may use alternate authentication material, such as password hashes, Kerberos tickets, and application access tokens, in order to move laterally within an environment and bypass normal system access controls.&lt;br /&gt;['T1550.002']: Monitor requests of new ticket granting ticket or service tickets to a Domain Controller. Windows Security events such as 4768 (A Kerberos authentication ticket (TGT) was requested) and 4769 (A Kerberos service ticket was requested) combined with logon session creation information may be indicative of an overpass the hash attempt.&lt;br /&gt;['T1558.003']: Monitor for anomalous Kerberos activity, such as enabling Audit Kerberos Service Ticket Operations to log Kerberos TGS service ticket requests. Particularly investigate irregular patterns of activity (ex: accounts making numerous requests, Event ID 4769, within a small time frame, especially if they also request RC4 encryption [Type 0x17]).&lt;br /&gt;['T1558.004']: Monitor for anomalous activity, such as enabling Audit Kerberos Service Ticket Operations to log Kerberos TGS service ticket requests. Particularly investigate irregular patterns of activity (ex: accounts making numerous requests, Event ID 4768 and 4769, within a small time frame, especially if they also request RC4 encryption [Type 0x17], pre-authentication not required [Type: 0x0]).&lt;br /&gt;['T1558']: Monitor for anomalous Kerberos activity, such as malformed or blank fields in Windows logon/logoff events (Event ID 4624, 4672, 4634), RC4 encryption within ticket granting tickets (TGTs), and ticket granting service (TGS) requests without preceding TGT requests.(Citation: ADSecurity Detecting Forged Tickets)(Citation: Stealthbits Detect PtT 2019)(Citation: CERT-EU Golden Ticket Protection)Monitor the lifetime of TGT tickets for values that differ from the default domain duration.(Citation: Microsoft Kerberos Golden Ticket) Monitor for indications of [Pass the Ticket](https://attack.mitre.org/techniques/T1550/003) being used to move laterally.&lt;br /&gt;['T1550.003']: Monitor requests of new ticket granting ticket or service tickets to a Domain Controller. Event ID 4769 is generated on the Domain Controller when using a golden ticket after the KRBTGT password has been reset twice, as mentioned in the mitigation section. The status code 0x1F indicates the action has failed due to "Integrity check on decrypted field failed" and indicates misuse by a previously invalidated golden ticket.(Citation: CERT-EU Golden Ticket Protection)&lt;br /&gt;['T1003.006']: Monitor domain controller logs for replication requests and other unscheduled activity possibly associated with DCSync.(Citation: Microsoft DRSR Dec 2017) (Citation: Microsoft GetNCCChanges) (Citation: Samba DRSUAPI) Note: Domain controllers may not log replication requests originating from the default domain controller account.(Citation: Harmj0y DCSync Sept 2015)&lt;br /&gt;['T1033']: Monitor domain controller logs for replication requests and other unscheduled activity possibly associated with DCSync. (Citation: Microsoft DRSR Dec 2017) (Citation: Microsoft GetNCCChanges) (Citation: Samba DRSUAPI) Note: Domain controllers may not log replication requests originating from the default domain controller account. (Citation: Harmj0y DCSync Sept 2015). Monitor for replication requests (Citation: Microsoft SAMR) from IPs not associated with known domain controllers. (Citation: AdSecurity DCSync Sept 2015)&lt;br /&gt;['T1615']: Monitor for abnormal LDAP queries with filters for &lt;code&gt;groupPolicyContainer&lt;/code&gt; and high volumes of LDAP traffic to domain controllers. Windows Event ID 4661 can also be used to detect when a directory service has been accessed.&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Microsoft AD DS Getting Started" url="https://docs.microsoft.com/en-us/windows-server/identity/ad-ds/ad-ds-getting-started"/>
            <reference name="Mitre ATT&amp;CK Data Source DS0026" url="https://attack.mitre.org/datasources/DS0026"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:00.805">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-DS0015" name="Application Log" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>Events collected by third-party services such as mail servers, web applications, or other appliances (not by the native OS or platform)(Citation: Confluence Logs)&lt;br /&gt;&lt;p&gt;Detailed detections per technique:&lt;/p&gt;&lt;br /&gt;['T1189']: Firewalls and proxies can inspect URLs for potentially known-bad domains or parameters. They can also do reputation-based analytics on websites and their requested resources such as how old a domain is, who it's registered to, if it's on a known bad list, or how many other users have connected to it before.&lt;br /&gt;['T1499.002']: Monitor for third-party application logging, messaging, and/or other artifacts that may target the different network services provided by systems to conduct a DoS. In addition to network level detections, endpoint logging and instrumentation can be useful for detection. Attacks targeting web applications may generate logs in the web server, application server, and/or database server that can be used to identify the type of attack, possibly before the impact is felt. Externally monitor the availability of services that may be targeted by an Endpoint DoS.&lt;br /&gt;['T1557']: Monitor application logs for changes to settings and other events associated with network protocols and other services commonly abused for AiTM.(Citation: dhcp_serv_op_events)&lt;br /&gt;['T1137.003']:  Monitor for third-party application logging, messaging, and/or other artifacts that may abuse Microsoft Outlook forms to obtain persistence on a compromised system. SensePost, whose tool [Ruler](https://attack.mitre.org/software/S0358) can be used to carry out malicious rules, forms, and Home Page attacks, has released a tool to detect Ruler usage.(Citation: SensePost NotRuler)&lt;br /&gt;['T1505.003']: Monitor for third-party application logging, messaging, and/or other artifacts that may backdoor web servers with web shells to establish persistent access to systems. Log authentication attempts to the server and any unusual traffic patterns to or from the server and internal network. (Citation: US-CERT Alert TA15-314A Web Shells)&lt;br /&gt;['T1505']: Monitor for third-party application logging, messaging, and/or other artifacts that may abuse legitimate extensible development features of servers to establish persistent access to systems. Consider monitoring application logs for abnormal behavior that may indicate suspicious installation of application software components. Log authentication attempts to the server and any unusual traffic patterns to or from the server and internal network. (Citation: US-CERT Alert TA15-314A Web Shells)&lt;br /&gt;['T1550']: Monitor for third-party application logging, messaging, and/or other artifacts that may use alternate authentication material, such as password hashes, Kerberos tickets, and application access tokens, in order to move laterally within an environment and bypass normal system access controls.&lt;br /&gt;['T1069.003']: Monitor for events collected that may attempt to find cloud groups and permission settings. &lt;br /&gt;['T1491.002']: Monitor for third-party application logging, messaging, and/or other artifacts that may deface systems external to an organization in an attempt to deliver messaging, intimidate, or otherwise mislead an organization or users. &lt;br /&gt;['T1598']: Depending on the specific method of phishing, the detections can vary. Monitor for suspicious email activity, such as numerous accounts receiving messages from a single unusual/unknown sender. Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.(Citation: Microsoft Anti Spoofing)(Citation: ACSC Email Spoofing)
When it comes to following links, monitor for references to uncategorized or known-bad sites. URL inspection within email (including expanding shortened links) can also help detect links leading to known malicious sites.
Monitor social media traffic for suspicious activity, including messages requesting information as well as abnormal file or data transfers (especially those involving unknown, or otherwise suspicious accounts).&lt;br /&gt;['T1499']: Monitor for third-party application logging, messaging, and/or other artifacts that may perform Endpoint Denial of Service (DoS) attacks to degrade or block the availability of services to users. In addition to network level detections, endpoint logging and instrumentation can be useful for detection. Attacks targeting web applications may generate logs in the web server, application server, and/or database server that can be used to identify the type of attack, possibly before the impact is felt. Externally monitor the availability of services that may be targeted by an Endpoint DoS.&lt;br /&gt;['T1204.003']: Monitor for third-party application logging, messaging, and/or other artifacts that may rely on a user running a malicious image to facilitate execution.&lt;br /&gt;['T1598.001']: Monitor social media traffic for suspicious activity, including messages requesting information as well as abnormal file or data transfers (especially those involving unknown, or otherwise suspicious accounts).
Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.
Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.&lt;br /&gt;['T1564']: Monitor for third-party application logging, messaging, and/or other artifacts that may attempt to hide artifacts associated with their behaviors to evade detection. &lt;br /&gt;['T1499.004']: Monitor for third-party application logging, messaging, and/or other artifacts that may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Attacks targeting web applications may generate logs in the web server, application server, and/or database server that can be used to identify the type of attack. Externally monitor the availability of services that may be targeted by an Endpoint DoS.&lt;br /&gt;['T1211']: Exploitation for defense evasion may happen shortly after the system has been compromised to prevent detection during later actions for for additional tools that may be brought in and used. Detecting software exploitation may be difficult depending on the tools available. Software exploits may not always succeed or may cause the exploited process to become unstable or crash. &lt;br /&gt;['T1137']: Monitor for third-party application logging, messaging, and/or other artifacts that may leverage Microsoft Office-based applications for persistence between startups. SensePost, whose tool [Ruler](https://attack.mitre.org/software/S0358) can be used to carry out malicious rules, forms, and Home Page attacks, has released a tool to detect Ruler usage.(Citation: SensePost NotRuler)&lt;br /&gt;['T1566.001']: Monitor for third-party application logging, messaging, and/or other artifacts that may send spearphishing emails with a malicious attachment in an attempt to gain access to victim systems. Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.(Citation: Microsoft Anti Spoofing)(Citation: ACSC Email Spoofing) Anti-virus can potentially detect malicious documents and attachments as they're scanned to be stored on the email server or on the user's computer. Monitor for suspicious descendant process spawning from Microsoft Office and other productivity software.(Citation: Elastic - Koadiac Detection with EQL)&lt;br /&gt;['T1566.002']: Monitor for third-party application logging, messaging, and/or other artifacts that may send spearphishing emails with a malicious link in an attempt to gain access to victim systems. Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.(Citation: Microsoft Anti Spoofing)(Citation: ACSC Email Spoofing) URL inspection within email (including expanding shortened links) can help detect links leading to known malicious sites. Detonation chambers can be used to detect these links and either automatically go to these sites to determine if they're potentially malicious, or wait and capture the content if a user visits the link.&lt;br /&gt;['T1598.003']: Monitor for suspicious email activity, such as numerous accounts receiving messages from a single unusual/unknown sender. Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.(Citation: Microsoft Anti Spoofing)(Citation: ACSC Email Spoofing)
Monitor for references to uncategorized or known-bad sites. URL inspection within email (including expanding shortened links) can also help detect links leading to known malicious sites.&lt;br /&gt;['T1610']: Configuration management databases (CMDB) and other asset management systems may help with the detection of computer systems or network devices that should not exist on a network.&lt;br /&gt;['T1114']: Detection is challenging because all messages forwarded because of an auto-forwarding rule have the same presentation as a manually forwarded message. It is also possible for the user to not be aware of the addition of such an auto-forwarding rule and not suspect that their account has been compromised; email-forwarding rules alone will not affect the normal usage patterns or operations of the email account. Auto-forwarded messages generally contain specific detectable artifacts that may be present in the header; such artifacts would be platform-specific. Examples include &lt;code&gt;X-MS-Exchange-Organization-AutoForwarded&lt;/code&gt; set to true, &lt;code&gt;X-MailFwdBy&lt;/code&gt; and &lt;code&gt;X-Forwarded-To&lt;/code&gt;. The &lt;code&gt;forwardingSMTPAddress&lt;/code&gt; parameter used in a forwarding process that is managed by administrators and not by user actions. All messages for the mailbox are forwarded to the specified SMTP address. However, unlike typical client-side rules, the message does not appear as forwarded in the mailbox; it appears as if it were sent directly to the specified destination mailbox.(Citation: Microsoft Tim McMichael Exchange Mail Forwarding 2) High volumes of emails that bear the &lt;code&gt;X-MS-Exchange-Organization-AutoForwarded&lt;/code&gt; header (indicating auto-forwarding) without a corresponding number of emails that match the appearance of a forwarded message may indicate that further investigation is needed at the administrator level rather than user-level.&lt;br /&gt;['T1534']: Monitor email gateways usually do not scan internal email, but an organization can leverage the journaling-based solution which sends a copy of emails to a security service for offline analysis or incorporate service-integrated solutions using on-premise or API-based integrations to help detect internal spearphishing attacks.(Citation: Trend Micro When Phishing Starts from the Inside 2017)&lt;br /&gt;['T1594']: Monitor for suspicious network traffic that could be indicative of adversary reconnaissance, such as rapid successions of requests indicative of web crawling and/or large quantities of requests originating from a single source (especially if the source is known to be associated with an adversary). Analyzing web metadata may also reveal artifacts that can be attributed to potentially malicious activity, such as referer or user-agent string HTTP/S fields.&lt;br /&gt;['T1137.005']: Monitor for third-party application logging, messaging, and/or other artifacts that may abuse Microsoft Outlook rules to obtain persistence on a compromised system. SensePost, whose tool [Ruler](https://attack.mitre.org/software/S0358) can be used to carry out malicious rules, forms, and Home Page attacks, has released a tool to detect Ruler usage.(Citation: SensePost NotRuler)&lt;br /&gt;['T1213.002']: Monitor for third-party application logging, messaging, and/or other artifacts that may leverage the SharePoint repository as a source to mine valuable information. Monitor access to Microsoft SharePoint repositories performed by privileged users (for example, Active Directory Domain, Enterprise, or Schema Administrators) should be closely monitored and alerted upon, as these types of accounts should generally not be used to access information repositories. If the capability exists, it may be of value to monitor and alert on users that are retrieving and viewing a large number of documents and pages; this behavior may be indicative of programmatic means being used to retrieve all data within the repository. In environments with high-maturity, it may be possible to leverage User-Behavioral Analytics (UBA) platforms to detect and alert on user based anomalies.&lt;br /&gt;['T1110.004']: Monitor authentication logs for system and application login failures of [Valid Accounts](https://attack.mitre.org/techniques/T1078). If authentication failures are high, then there may be a brute force attempt to gain access to a system using legitimate credentials.&lt;br /&gt;['T1491.001']: Monitor for third-party application logging, messaging, and/or other artifacts that may deface systems internal to an organization in an attempt to intimidate or mislead users. &lt;br /&gt;['T1114.003']: Detection is challenging because all messages forwarded because of an auto-forwarding rule have the same presentation as a manually forwarded message. It is also possible for the user to not be aware of the addition of such an auto-forwarding rule and not suspect that their account has been compromised; email-forwarding rules alone will not affect the normal usage patterns or operations of the email account. This is especially true in cases with hidden auto-forwarding rules. This makes it only possible to reliably detect the existence of a hidden auto-forwarding rule by examining message tracking logs or by using a MAPI editor to notice the modified rule property values.(Citation: Pfammatter - Hidden Inbox Rules)
Auto-forwarded messages generally contain specific detectable artifacts that may be present in the header; such artifacts would be platform-specific. Examples include X-MS-Exchange-Organization-AutoForwarded set to true, X-MailFwdBy and X-Forwarded-To. The forwardingSMTPAddress parameter used in a forwarding process that is managed by administrators and not by user actions. All messages for the mailbox are forwarded to the specified SMTP address. However, unlike typical client-side rules, the message does not appear as forwarded in the mailbox; it appears as if it were sent directly to the specified destination mailbox.(Citation: Microsoft Tim McMichael Exchange Mail Forwarding 2) High volumes of emails that bear the X-MS-Exchange-Organization-AutoForwarded header (indicating auto-forwarding) without a corresponding number of emails that match the appearance of a forwarded message may indicate that further investigation is needed at the administrator level rather than user-level.&lt;br /&gt;['T1137.004']: Monitor for third-party application logging, messaging, and/or other artifacts that may abuse Microsoft Outlook's Home Page feature to obtain persistence on a compromised system. SensePost, whose tool [Ruler](https://attack.mitre.org/software/S0358) can be used to carry out malicious rules, forms, and Home Page attacks, has released a tool to detect Ruler usage.(Citation: SensePost NotRuler)&lt;br /&gt;['T1622']: Monitor debugger logs for signs of abnormal and potentially malicious activity.&lt;br /&gt;['T1069']: Monitor for logging, messaging, and other artifacts provided by cloud services.&lt;br /&gt;['T1499.003']: Monitor for third-party application logging, messaging, and/or other artifacts that may target resource intensive features of web applications to cause a denial of service (DoS). In addition to network level detections, endpoint logging and instrumentation can be useful for detection. Attacks targeting web applications may generate logs in the web server, application server, and/or database server that can be used to identify the type of attack, possibly before the impact is felt. Externally monitor the availability of services that may be targeted by an Endpoint DoS.&lt;br /&gt;['T1491']: Monitor for third-party application logging, messaging, and/or other artifacts that may modify visual content available internally or externally to an enterprise network. &lt;br /&gt;['T1213.003']: Monitor for third-party application logging, messaging, and/or other artifacts that may leverage code repositories to collect valuable information. Monitor access to code repositories, especially performed by privileged users such as Active Directory Domain or Enterprise Administrators as these types of accounts should generally not be used to access code repositories. In environments with high-maturity, it may be possible to leverage User-Behavioral Analytics (UBA) platforms to detect and alert on user-based anomalies.&lt;br /&gt;['T1621']: Monitor application logs for suspicious events including repeated MFA failures that may indicate user's primary credentials have been compromised.&lt;br /&gt;['T1072']: Often these third-party applications will have logs of their own that can be collected and correlated with other data from the environment. Ensure that third-party application logs are on-boarded to the enterprise logging system and the logs are regularly reviewed. Audit software deployment logs and look for suspicious or unauthorized activity. A system not typically used to push software to clients that suddenly is used for such a task outside of a known admin function may be suspicious. Monitor account login activity on these applications to detect suspicious/abnormal usage.
Perform application deployment at regular times so that irregular deployment activity stands out.&lt;br /&gt;['T1098.005']: 
Azure AD creates several log entries when new devices are enrolled, which can be monitored for unexpected device registrations.(Citation: AADInternals - BPRT) Additionally, joined devices can be viewed via the Azure AD portal.(Citation: Microsoft Manage Device Identities)&lt;br /&gt;['T1110.002']: Monitor authentication logs for system and application login failures of [Valid Accounts](https://attack.mitre.org/techniques/T1078). It is difficult to detect when hashes are cracked, since this is generally done outside the scope of the target network. Consider focusing efforts on detecting other adversary behavior used to acquire credential materials, such as [OS Credential Dumping](https://attack.mitre.org/techniques/T1003) or [Kerberoasting](https://attack.mitre.org/techniques/T1558/003).&lt;br /&gt;['T1213']: Monitor for third-party application logging, messaging, and/or other artifacts that may leverage information repositories to mine valuable information. Information repositories generally have a considerably large user base, detection of malicious use can be non-trivial. At minimum, access to information repositories performed by privileged users (for example, Active Directory Domain, Enterprise, or Schema Administrators) should be closely monitored and alerted upon, as these types of accounts should generally not be used to access information repositories. If the capability exists, it may be of value to monitor and alert on users that are retrieving and viewing a large number of documents and pages; this behavior may be indicative of programmatic means being used to retrieve all data within the repository. In environments with high-maturity, it may be possible to leverage User-Behavioral Analytics (UBA) platforms to detect and alert on user based anomalies.&lt;br /&gt;['T1505.001']: Monitor for third-party application logging, messaging, and/or other artifacts that may abuse SQL stored procedures to establish persistent access to systems. On a MSSQL Server, consider monitoring for xp_cmdshell usage.(Citation: NetSPI Startup Stored Procedures) Consider enabling audit features that can log malicious startup activities.&lt;br /&gt;['T1203']: Detecting software exploitation may be difficult depending on the tools available. Software exploits may not always succeed or may cause the exploited process to become unstable or crash.&lt;br /&gt;['T1566']: Monitor for third-party application logging, messaging, and/or other artifacts that may send phishing messages to gain access to victim systems. Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.(Citation: Microsoft Anti Spoofing)(Citation: ACSC Email Spoofing) URL inspection within email (including expanding shortened links) can help detect links leading to known malicious sites. Detonation chambers can be used to detect these links and either automatically go to these sites to determine if they're potentially malicious, or wait and capture the content if a user visits the link.&lt;br /&gt;['T1110.003']: Monitor authentication logs for system and application login failures of [Valid Accounts](https://attack.mitre.org/techniques/T1078). Consider the following event IDs:(Citation: Trimarc Detecting Password Spraying)
Domain Controllers: "Audit Logon" (Success &amp; Failure) for event ID 4625.
Domain Controllers: "Audit Kerberos Authentication Service" (Success &amp; Failure) for event ID 4771.
All systems: "Audit Logon" (Success &amp; Failure) for event ID 4648.&lt;br /&gt;['T1098.002']: Enable the UpdateFolderPermissions action for all logon types. The mailbox audit log will forward folder permission modification events to the Unified Audit Log. Create rules to alert on ModifyFolderPermissions operations where the Anonymous or Default user is assigned permissions other than None.

A larger than normal volume of emails sent from an account and similar phishing emails sent from real accounts within a network may be a sign that an account was compromised and attempts to leverage access with modified email permissions is occurring.&lt;br /&gt;['T1598.002']: Monitor for suspicious email activity, such as numerous accounts receiving messages from a single unusual/unknown sender. Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.(Citation: Microsoft Anti Spoofing)(Citation: ACSC Email Spoofing)&lt;br /&gt;['T1566.003']: Monitor for third-party application logging, messaging, and/or other artifacts that may send spearphishing messages via third-party services in an attempt to gain access to victim systems. &lt;br /&gt;['T1550.004']: Monitor for third-party application logging, messaging, and/or other service artifacts that provide context of user authentication to web applications, including cloud-based services. Combine this information with web credentials usage events to identify authentication events that do not fit the organization baseline.&lt;br /&gt;['T1210']: Detecting software exploitation may be difficult depending on the tools available. Software exploits may not always succeed or may cause the exploited process to become unstable or crash. Web Application Firewalls may detect improper inputs attempting exploitation.&lt;br /&gt;['T1557.003']: Monitor Windows logs (ex: EIDs 1341, 1342, 1020, and 1063) for changes to DHCP settings. These may also highlight DHCP issues such as when IP allocations are low or have run out.(Citation: dhcp_serv_op_events)(Citation: solution_monitor_dhcp_scopes)&lt;br /&gt;['T1562.002']: Monitor for third-party application logging, messaging, and/or other artifacts provided by third-party services that may disable Windows event logging to limit data that can be leveraged for detections and audits.&lt;br /&gt;['T1564.008']: Monitor for third-party application logging, messaging, and/or other artifacts that may use email rules to hide inbound emails in a compromised user's mailbox. Monitor email clients and applications for suspicious activity, such as missing messages or abnormal configuration and/or log entries.&lt;br /&gt;['T1505.002']: Monitor for third-party application logging, messaging, and/or other artifacts that may abuse Microsoft transport agents to establish persistent access to systems. Consider monitoring application logs for abnormal behavior that may indicate suspicious installation of application software components.&lt;br /&gt;['T1213.001']: Monitor for third-party application logging, messaging, and/or other artifacts that may leverage Confluence repositories to mine valuable information. Watch for access to Confluence repositories performed by privileged users (for example, Active Directory Domain, Enterprise, or Schema Administrators) as these types of accounts should generally not be used to access information repositories. If the capability exists, it may be of value to monitor and alert on users that are retrieving and viewing a large number of documents and pages; this behavior may be indicative of programmatic means being used to retrieve all data within the repository. In environments with high-maturity, it may be possible to leverage User-Behavioral Analytics (UBA) platforms to detect and alert on user based anomalies.&lt;br /&gt;['T1204']: Monitor for third-party application logging, messaging, and/or other artifacts that may rely upon specific actions by a user in order to gain execution.&lt;br /&gt;['T1133']: When authentication is not required to access an exposed remote service, monitor for follow-on activities such as anomalous external use of the exposed API or application.&lt;br /&gt;['T1027.005']: The first detection of a malicious tool may trigger an anti-virus or other security tool alert. Similar events may also occur at the boundary through network IDS, email scanning appliance, etc. The initial detection should be treated as an indication of a potentially more invasive intrusion. The alerting system should be thoroughly investigated beyond that initial alert for activity that was not detected. Adversaries may continue with an operation, assuming that individual events like an anti-virus detect will not be investigated or that an analyst will not be able to conclusively link that event to other activity occurring on the network.&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Confluence Logs" url="https://confluence.atlassian.com/doc/working-with-confluence-logs-108364721.html"/>
            <reference name="Mitre ATT&amp;CK Data Source DS0015" url="https://attack.mitre.org/datasources/DS0015"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:00.765">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-M1040" name="Behavior Prevention on Endpoint" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>Use capabilities to prevent suspicious behavior patterns from occurring on endpoint systems. This could include suspicious process, file, API call, etc. behavior.&lt;br /&gt;&lt;p&gt;Detailed mitigations per technique:&lt;/p&gt;&lt;br /&gt;['T1543.003']: On Windows 10, enable Attack Surface Reduction (ASR) rules to prevent an application from writing a signed vulnerable driver to the system.(Citation: Malicious Driver Reporting Center) On Windows 10 and 11, enable Microsoft Vulnerable Driver Blocklist to assist in hardening against third party-developed service drivers.(Citation: Microsoft driver block rules)  &lt;br /&gt;['T1055.002', 'T1055.004', 'T1055.009', 'T1055.012', 'T1055.014', 'T1055.013', 'T1055.003', 'T1055.011', 'T1055.008', 'T1055.005', 'T1055.001']: Some endpoint security solutions can be configured to block some types of process injection based on common sequences of behavior that occur during the injection process. &lt;br /&gt;['T1137.006', 'T1137.004', 'T1137', 'T1137.001', 'T1137.002', 'T1137.005', 'T1137.003']: On Windows 10, enable Attack Surface Reduction (ASR) rules to prevent Office applications from creating child processes and from writing potentially malicious executable content to disk. (Citation: win10_asr)&lt;br /&gt;['T1047']: On Windows 10, enable Attack Surface Reduction (ASR) rules to block processes created by WMI commands from running. Note: many legitimate tools and applications utilize WMI for command execution. (Citation: win10_asr)&lt;br /&gt;['T1059.007']: On Windows 10, enable Attack Surface Reduction (ASR) rules to prevent [JavaScript](https://attack.mitre.org/techniques/T1059/007) scripts from executing potentially malicious downloaded content (Citation: win10_asr).&lt;br /&gt;['T1204']: On Windows 10, enable Attack Surface Reduction (ASR) rules to prevent executable files from running unless they meet a prevalence, age, or trusted list criteria and to prevent Office applications from creating potentially malicious executable content by blocking malicious code from being written to disk. Note: cloud-delivered protection must be enabled to use certain rules. (Citation: win10_asr)&lt;br /&gt;['T1543']: On Windows 10, enable Attack Surface Reduction (ASR) rules to prevent an application from writing a signed vulnerable driver to the system.(Citation: Malicious Driver Reporting Center) On Windows 10 and 11, enable Microsoft Vulnerable Driver Blocklist to assist in hardening against third party-developed drivers.(Citation: Microsoft driver block rules)  &lt;br /&gt;['T1559.002', 'T1559']: On Windows 10, enable Attack Surface Reduction (ASR) rules to prevent DDE attacks and spawning of child processes from Office programs.(Citation: Microsoft ASR Nov 2017)(Citation: Enigma Reviving DDE Jan 2018)&lt;br /&gt;['T1574', 'T1574.013']: Some endpoint security solutions can be configured to block some types of behaviors related to process injection/memory tampering based on common sequences of indicators (ex: execution of specific API functions).&lt;br /&gt;['T1173']: On Windows 10, enable Attack Surface Reduction (ASR) rules to prevent DDE attacks and spawning of child processes from Office programs. (Citation: Microsoft ASR Nov 2017) (Citation: Enigma Reviving DDE Jan 2018)&lt;br /&gt;['T1569.002', 'T1569']: On Windows 10, enable Attack Surface Reduction (ASR) rules to block processes created by [PsExec](https://attack.mitre.org/software/S0029) from running. (Citation: win10_asr)&lt;br /&gt;['T1216.001']: On Windows 10, update Windows Defender Application Control policies to include rules that block the older, vulnerable versions of PubPrn.(Citation: Microsoft_rec_block_rules)&lt;br /&gt;['T1091']: On Windows 10, enable Attack Surface Reduction (ASR) rules to block unsigned/untrusted executable files (such as .exe, .dll, or .scr) from running from USB removable drives. (Citation: win10_asr)&lt;br /&gt;['T1003', 'T1003.001']: On Windows 10, enable Attack Surface Reduction (ASR) rules to secure LSASS and prevent credential stealing. (Citation: win10_asr)&lt;br /&gt;['T1059.005']: On Windows 10, enable Attack Surface Reduction (ASR) rules to prevent [Visual Basic](https://attack.mitre.org/techniques/T1059/005) scripts from executing potentially malicious downloaded content (Citation: win10_asr).&lt;br /&gt;['T1486']: On Windows 10, enable cloud-delivered protection and Attack Surface Reduction (ASR) rules to block the execution of files that resemble ransomware. (Citation: win10_asr)&lt;br /&gt;['T1204.002']: On Windows 10, various Attack Surface Reduction (ASR) rules can be enabled to prevent the execution of potentially malicious executable files (such as those that have been downloaded and executed by Office applications/scripting interpreters/email clients or that do not meet specific prevalence, age, or trusted list criteria). Note: cloud-delivered protection must be enabled for certain rules. (Citation: win10_asr)&lt;br /&gt;['T1106']: On Windows 10, enable Attack Surface Reduction (ASR) rules to prevent Office VBA macros from calling Win32 APIs. (Citation: win10_asr)&lt;br /&gt;['T1055']: Some endpoint security solutions can be configured to block some types of process injection based on common sequences of behavior that occur during the injection process. For example, on Windows 10, Attack Surface Reduction (ASR) rules may prevent Office applications from code injection. (Citation: win10_asr)&lt;br /&gt;['T1027']: On Windows 10, enable Attack Surface Reduction (ASR) rules to prevent execution of potentially obfuscated scripts. (Citation: win10_asr)&lt;br /&gt;['T1546.003']: On Windows 10, enable Attack Surface Reduction (ASR) rules to prevent malware from abusing WMI to attain persistence.(Citation: win10_asr)&lt;br /&gt;['T1059']: On Windows 10, enable Attack Surface Reduction (ASR) rules to prevent [Visual Basic](https://attack.mitre.org/techniques/T1059/005) and [JavaScript](https://attack.mitre.org/techniques/T1059/007) scripts from executing potentially malicious downloaded content (Citation: win10_asr).&lt;br /&gt;['T1055.015']: Some endpoint security solutions can be configured to block some types of process injection based on common sequences of behavior that occur during the injection process.&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Mitre ATT&amp;CK Mitigation M1040" url="https://attack.mitre.org/mitigations/M1040"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:00.928">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-DS0017" name="Command" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>A directive given to a computer program, acting as an interpreter of some kind, in order to perform a specific task(Citation: Confluence Linux Command  Line)(Citation: Audit OSX)&lt;br /&gt;&lt;p&gt;Detailed detections per technique:&lt;/p&gt;&lt;br /&gt;['T1041']: Monitor executed commands and arguments that may steal data by exfiltrating it over an existing command and control channel.&lt;br /&gt;['T1555.003']: Monitor executed commands and arguments that may acquire credentials from web browsers by reading files specific to the target browser.(Citation: Talos Olympic Destroyer 2018)&lt;br /&gt;['T1134.001']: Monitor executed commands and arguments to detect token manipulation by auditing command-line activity. Specifically, analysts should look for use of the runas command. Detailed command-line logging is not enabled by default in Windows.(Citation: Microsoft Command-line Logging)&lt;br /&gt;['T1218.013']: Adversaries may rename abusable binaries to evade detections, but the argument &lt;code&gt;INJECTRUNNING&lt;/code&gt; is required for mavinject.exe to perform [Dynamic-link Library Injection](https://attack.mitre.org/techniques/T1055/001) and may therefore be monitored to alert malicious activity.&lt;br /&gt;['T1548.001']: Monitor for execution of utilities, like chmod, and their command-line arguments to look for setuid or setguid bits being set.&lt;br /&gt;['T1218.011']: Command arguments used with the rundll32.exe invocation may also be useful in determining the origin and purpose of the DLL being loaded.&lt;br /&gt;['T1218.008']: Command arguments used before and after the invocation of odbcconf.exe may also be useful in determining the origin and purpose of the DLL being loaded.&lt;br /&gt;['T1218.009']: Command arguments used before and after Regsvcs.exe or Regasm.exe invocation may also be useful in determining the origin and purpose of the binary being executed.&lt;br /&gt;['T1547.005']: Monitor executed commands and arguments that may abuse security support providers (SSPs) to execute DLLs when the system boots.&lt;br /&gt;['T1218.012']: Command arguments used before and after the invocation of verclsid.exe may also be useful in determining the origin and purpose of the payload being executed.&lt;br /&gt;['T1542.005']: Monitor executed commands and arguments in command history in either the console or as part of the running memory to determine if unauthorized or suspicious commands were used to modify device configuration.&lt;br /&gt;['T1546.001']: Monitor executed commands and arguments that may establish persistence by executing malicious content triggered by a file type association.&lt;br /&gt;['T1564.004']: The Streams tool of Sysinternals can be used to uncover files with ADSs. The &lt;code&gt;dir /r&lt;/code&gt; command can also be used to display ADSs. (Citation: Symantec ADS May 2009) Many PowerShell commands (such as Get-Item, Set-Item, Remove-Item, and Get-ChildItem) can also accept a &lt;code&gt;-stream&lt;/code&gt; parameter to interact with ADSs. (Citation: MalwareBytes ADS July 2015) (Citation: Microsoft ADS Mar 2014)&lt;br /&gt;['T1069.003']: Monitor for executed commands and arguments that may attempt to find cloud groups and permission settings. &lt;br /&gt;['T1087.002']: Monitor for execution of commands and arguments associated with enumeration or information gathering of domain accounts and groups, such as &lt;code&gt;net user /domain&lt;/code&gt; and &lt;code&gt;net group /domain&lt;/code&gt;, &lt;code&gt;dscacheutil -q group&lt;/code&gt;on macOS, and &lt;code&gt;ldapsearch&lt;/code&gt; on Linux.

System and network discovery techniques normally occur throughout an operation as an adversary learns the environment, and also to an extent in normal network operations. Therefore discovery data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.&lt;br /&gt;['T1037.005']: Monitor executed commands and arguments for logon scripts&lt;br /&gt;['T1011.001']: Monitor executed commands and arguments that may attempt to exfiltrate data over Bluetooth rather than the command and control channel.&lt;br /&gt;['T1127']: Monitor executed commands and arguments used before and after invocation of the utilities may also be useful in determining the origin and purpose of the binary being executed.&lt;br /&gt;['T1020']: Monitor executed commands and arguments that may exfiltrate data, such as sensitive documents, through the use of automated processing after being gathered during Collection&lt;br /&gt;['T1547.004']: Monitor executed commands and arguments that may abuse features of Winlogon to execute DLLs and/or executables when a user logs in.&lt;br /&gt;['T1003.003']: Monitor executed commands and arguments that may attempt to access or create a copy of the Active Directory domain database in order to steal credential information, as well as obtain other information about domain members such as devices, users, and access rights. Look for command-lines that invoke attempts to access or copy the NTDS.dit.&lt;br /&gt;['T1484.002']: Monitor executed commands and arguments that updates domain authentication from Managed to Federated via ActionTypes &lt;code&gt;Set federation settings on domain&lt;/code&gt; and &lt;code&gt;Set domain authentication&lt;/code&gt;.(Citation: Microsoft - Azure Sentinel ADFSDomainTrustMods) Monitor for PowerShell commands such as: &lt;code&gt;Update-MSOLFederatedDomain -DomainName: "Federated Domain Name"&lt;/code&gt;, or &lt;code&gt;Update-MSOLFederatedDomain -DomainName: "Federated Domain Name" -supportmultipledomain&lt;/code&gt;.(Citation: Microsoft - Update or Repair Federated domain)&lt;br /&gt;['T1609']: Monitor commands and arguments executed by container services. In Docker, the daemon log provides insight into events at the daemon and container service level. Kubernetes system component logs may also detect activities running in and out of containers in the cluster.&lt;br /&gt;['T1560']: Monitor executed commands and arguments for actions that will aid in compression or encrypting data that is collected prior to exfiltration, such as tar. &lt;br /&gt;['T1033']: Monitor executed commands and arguments that may attempt to dump credentials to obtain account login and credential material, normally in the form of a hash or a clear text password, from the operating system and software. Look for command-lines that invoke AuditD or the Security Accounts Manager (SAM). Remote access tools may contain built-in features or incorporate existing tools like [Mimikatz](https://attack.mitre.org/software/S0002). [PowerShell](https://attack.mitre.org/techniques/T1059/001) scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module, (Citation: Powersploit) which may require additional logging features to be configured in the operating system to collect necessary information for analysis.&lt;br /&gt;['T1547.001']: Monitor executed commands and arguments that may achieve persistence by adding a program to a startup folder or referencing it with a Registry run key.&lt;br /&gt;['T1543.002']: Suspicious systemd services can also be identified by comparing results against a trusted system baseline. Malicious systemd services may be detected by using the systemctl utility to examine system wide services: &lt;code&gt;systemctl list-units --type=service -all&lt;/code&gt;. Auditing the execution and command-line arguments of the 'systemctl' utility, as well related utilities such as &lt;code&gt;/usr/sbin/service&lt;/code&gt; may reveal malicious systemd service execution.&lt;br /&gt;['T1546.007']: Monitor executed commands and arguments that may establish persistence by executing malicious content triggered by Netsh Helper DLLs.&lt;br /&gt;['T1018']: Monitor executed commands and arguments that may attempt to get a listing of other systems by IP address, hostname, or other logical identifier on a network that may be used for Lateral Movement from the current system&lt;br /&gt;['T1070.001']: Monitor executed commands and arguments for actions that would delete Windows event logs (via PowerShell)&lt;br /&gt;['T1053.002']: Monitor executed commands and arguments for actions that could be taken to create/modify tasks. Tasks may also be created through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001), so additional logging may need to be configured to gather the appropriate data.&lt;br /&gt;['T1003.002']: Monitor executed commands and arguments that may attempt to extract credential material from the Security Account Manager (SAM) database either through in-memory techniques or through the Windows Registry where the SAM database is stored.&lt;br /&gt;['T1547.006']: Loading, unloading, and manipulating modules on Linux systems can be detected by monitoring for the following commands: &lt;code&gt;modprobe&lt;/code&gt;, &lt;code&gt;insmod&lt;/code&gt;, &lt;code&gt;lsmod&lt;/code&gt;, &lt;code&gt;rmmod&lt;/code&gt;, or &lt;code&gt;modinfo&lt;/code&gt; (Citation: Linux Loadable Kernel Module Insert and Remove LKMs) Adversaries may run commands on the target system before loading a malicious module in order to ensure that it is properly compiled. (Citation: iDefense Rootkit Overview) Adversaries may also execute commands to identify the exact version of the running Linux kernel and/or download multiple versions of the same .ko (kernel object) files to use the one appropriate for the running system.(Citation: Trend Micro Skidmap) Many LKMs require Linux headers (specific to the target kernel) in order to compile properly. These are typically obtained through the operating systems package manager and installed like a normal package.

On macOS, monitor for execution of &lt;code&gt;kextload&lt;/code&gt; commands and user installed kernel extensions performing abnormal and/or potentially malicious activity (such as creating network connections). Monitor for new rows added in the &lt;code&gt;kext_policy&lt;/code&gt; table. KextPolicy stores a list of user approved (non Apple) kernel extensions and a partial history of loaded kernel modules in a SQLite database, &lt;code&gt;/var/db/SystemPolicyConfiguration/KextPolicy&lt;/code&gt;.(Citation: User Approved Kernel Extension Pike's)(Citation: Purves Kextpocalypse 2)(Citation: Apple Developer Configuration Profile)&lt;br /&gt;['T1552.004']: Monitor executed commands and arguments that may search for private key certificate files on compromised systems for insecurely stored credentials.&lt;br /&gt;['T1489']: Monitor executed commands and arguments that may stop or disable services on a system to render those services unavailable to legitimate users.&lt;br /&gt;['T1216']: Monitor executed commands and arguments for scripts like PubPrn.vbs that may be used to proxy execution of malicious files.&lt;br /&gt;['T1098.004']: Monitor executed commands and arguments to modify the authorized_keys or /etc/ssh/sshd_config files.&lt;br /&gt;['T1552.007']: Establish centralized logging for the activity of container and Kubernetes cluster components. Monitor logs for actions that could be taken to gather credentials to container and cloud infrastructure, including the use of discovery API calls by new or unexpected users and APIs that access Docker logs.&lt;br /&gt;['T1546.013']: Monitor abnormal PowerShell commands, unusual loading of PowerShell drives or modules.&lt;br /&gt;['T1113']: Monitor executed commands and arguments that may attempt to take screen captures of the desktop to gather information over the course of an operation.&lt;br /&gt;['T1547.002']: Monitor executed commands and arguments that may abuse authentication packages to execute DLLs when the system boots.&lt;br /&gt;['T1027.004']: Monitor executed commands and arguments for actions that could be taken to gather common compilers, such as csc.exe and GCC/MinGW, and correlate with other suspicious behavior to reduce false positives from normal user and administrator behavior.&lt;br /&gt;['T1562.006']: Monitor executed commands and arguments that may attempt to block indicators or events typically captured by sensors from being gathered and analyzed.&lt;br /&gt;['T1553.004']: Monitor for commands, such as &lt;code&gt;security add-trusted-cert&lt;/code&gt; (macOS) or &lt;code&gt;certutil -addstore&lt;/code&gt; (Windows), that can be used to install root certificates. A system's root certificates are unlikely to change frequently. Monitor new certificates installed on a system that could be due to malicious activity. (Citation: SpectorOps Code Signing Dec 2017) Check pre-installed certificates on new systems to ensure unnecessary or suspicious certificates are not present. Microsoft provides a list of trustworthy root certificates online and through &lt;code&gt;authroot.stl&lt;/code&gt;. (Citation: SpectorOps Code Signing Dec 2017) The Sysinternals Sigcheck utility can also be used (&lt;code&gt;sigcheck[64].exe -tuv&lt;/code&gt;) to dump the contents of the certificate store and list valid certificates not rooted to the Microsoft Certificate Trust List. (Citation: Microsoft Sigcheck May 2017)&lt;br /&gt;['T1547.014']: Monitor executed commands and arguments that may achieve persistence by adding a Registry key to the Active Setup of the local machine.&lt;br /&gt;['T1114.001']: Monitor executed commands and arguments for actions that could be taken to gather local email files. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.&lt;br /&gt;['T1059.004']: Monitor executed commands and arguments that may abuse Unix shell commands and scripts for execution. Unix shell usage may be common on administrator, developer, or power user systems, depending on job function. If scripting is restricted for normal users, then any attempt to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.&lt;br /&gt;['T1123']: Monitor executed commands and arguments for actions that can leverage a computer's peripheral devices (e.g., microphones and webcams) or applications (e.g., voice and video call services) to capture audio recordings for the purpose of listening into sensitive conversations to gather information.&lt;br /&gt;['T1647']: Monitor for commands with arguments (such as opening common command-line editors) used to modify plist files, especially commonly abused files such as those in &lt;code&gt;\~/LaunchAgents&lt;/code&gt;, &lt;code&gt;\~/Library/Application Support/com.apple.backgroundtaskmanagementagent/backgrounditems.btm&lt;/code&gt;, and an application's &lt;code&gt;Info.plist&lt;/code&gt;.&lt;br /&gt;['T1553.001']: Monitor and investigate attempts to modify extended file attributes with utilities such as &lt;code&gt;xattr&lt;/code&gt;. Built-in system utilities may generate high false positive alerts, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible. &lt;br /&gt;['T1546.010']: Monitor executed commands and arguments that may establish persistence and/or elevate privileges by executing malicious content triggered by AppInit DLLs loaded into processes.&lt;br /&gt;['T1098']: Monitor executed commands and arguments for suspicious commands to modify accounts or account settings (including files such as the authorized_keys or /etc/ssh/sshd_config).

Monitor executed commands and arguments of suspicious commands (such as Add-MailboxPermission) that may be indicative of modifying the permissions of Exchange and other related service settings.&lt;br /&gt;['T1222.001']: Monitor for executed commands and arguments for PowerShell cmdlets that can be used to retrieve or modify file and directory DACLs.&lt;br /&gt;['T1562.010']: Monitor for commands or other activity that may be indicative of attempts to abuse older or deprecated technologies (ex: &lt;code&gt;powershell -v 2&lt;/code&gt;).&lt;br /&gt;['T1112']:  Monitor executed commands and arguments for actions that could be taken to change, conceal, and/or delete information in the Registry. The Registry may also be modified through Windows system management tools such as Windows Management Instrumentation and PowerShell, which may require additional logging features to be configured in the operating system to collect necessary information for analysis.&lt;br /&gt;['T1547']: Monitor executed commands and arguments that may configure system settings to automatically execute a program during system boot or logon to maintain persistence or gain higher-level privileges on compromised systems.&lt;br /&gt;['T1070.005']: Monitor executed commands and arguments of net use commands associated with establishing and removing remote shares over SMB, including following best practices for detection of Windows Admin Shares.&lt;br /&gt;['T1555.001']: Monitor executed commands with arguments that may be used to collect Keychain data from a system to acquire credentials.&lt;br /&gt;['T1574.006']: Monitor executed commands and arguments associated with modifications to variables and files associated with loading shared libraries such as LD_PRELOAD on Linux and DYLD_INSERT_LIBRARIES on macOS.&lt;br /&gt;['T1482']: Monitor executed commands and arguments for actions that could be taken to gather system and network information, such as nltest /domain_trusts. Remote access tools with built-in features may interact directly with the Windows API to gather information.&lt;br /&gt;['T1546.006']: Monitor executed commands and arguments that may establish persistence by executing malicious content triggered by the execution of tainted binaries.&lt;br /&gt;['T1552']: While detecting adversaries accessing credentials may be difficult without knowing they exist in the environment, it may be possible to detect adversary use of credentials they have obtained. Monitor the command-line arguments of executing processes for suspicious words or regular expressions that may indicate searching for a password (for example: password, pwd, login, secure, or credentials). See [Valid Accounts](https://attack.mitre.org/techniques/T1078) for more information.&lt;br /&gt;['T1059.008']: Consider reviewing command history in either the console or as part of the running memory to determine if unauthorized or suspicious commands were used to modify device configuration. (Citation: Cisco IOS Software Integrity Assurance - Command History) Consider comparing a copy of the network device configuration against a known-good version to discover unauthorized changes to the command interpreter. The same process can be accomplished through a comparison of the run-time memory, though this is non-trivial and may require assistance from the vendor.&lt;br /&gt;['T1025']: Monitor executed commands and arguments for actions that could be taken to collect files from a system's connected removable media. For example, data may be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.&lt;br /&gt;['T1555.004']: Monitor executed commands and arguments of &lt;code&gt;vaultcmd.exe&lt;/code&gt; for suspicious activity, such as listing credentials from the Windows Credentials locker (i.e., &lt;code&gt;vaultcmd /listcreds:"Windows Credentials"&lt;/code&gt;).(Citation: Malwarebytes The Windows Vault)&lt;br /&gt;['T1218.014']: Monitor executed commands and arguments that may gather information about the victim's DNS that can be used during targeting.&lt;br /&gt;['T1037']: Monitor executed commands and arguments that may consist of logon scripts for unusual access by abnormal users or at abnormal times.&lt;br /&gt;['T1548']: Monitor executed commands and arguments that may circumvent mechanisms designed to control elevate privileges to gain higher-level permissions.&lt;br /&gt;['T1048.001']: Monitor executed commands and arguments that may steal data by exfiltrating it over a symmetrically encrypted network protocol other than that of the existing command and control channel.&lt;br /&gt;['T1562.002']: Monitor executed commands and arguments for commands that can be used to disable logging. For example, [Wevtutil](https://attack.mitre.org/software/S0645), auditpol, sc stop EventLog, and offensive tooling (such as [Mimikatz](https://attack.mitre.org/software/S0002) and Invoke-Phant0m) may be used to clear logs.(Citation: def_ev_win_event_logging)(Citation: evt_log_tampering)&lt;br /&gt;['T1567.001']: Monitor executed command and arguments that may exfiltrate data to a code repository rather than over their primary command and control channel.&lt;br /&gt;['T1048']: Monitor executed commands and arguments that may steal data by exfiltrating it over a different protocol than that of the existing command and control channel.&lt;br /&gt;['T1564.003']: Monitor executed commands and arguments that may use hidden windows to conceal malicious activity from the plain sight of users. In Windows, enable and configure event logging and PowerShell logging to check for the hidden window style.&lt;br /&gt;['T1555.002']: Monitor executed commands and arguments that may obtain root access (allowing them to read securityd's memory), then they can scan through memory to find the correct sequence of keys in relatively few tries to decrypt the user's logon keychain.&lt;br /&gt;['T1546.004']: Monitor executed commands and arguments that may establish persistence through executing malicious commands triggered by a user's shell.&lt;br /&gt;['T1197']: Monitor executed commands and arguments from the BITSAdmin tool (especially the 'Transfer', 'Create', 'AddFile', 'SetNotifyFlags', 'SetNotifyCmdLine', 'SetMinRetryDelay', 'SetCustomHeaders', and 'Resume' command options)(Citation: Microsoft BITS) Admin logs, PowerShell logs, and the Windows Event log for BITS activity.(Citation: Elastic - Hunting for Persistence Part 1) Also consider investigating more detailed information about jobs by parsing the BITS job database.(Citation: CTU BITS Malware June 2016)&lt;br /&gt;['T1134.002']: Monitor executed commands and arguments to detect token manipulation by auditing command-line activity. Specifically, analysts should look for use of the runas command or similar artifacts. Detailed command-line logging is not enabled by default in Windows.(Citation: Microsoft Command-line Logging)&lt;br /&gt;['T1059.005']: Monitor executed commands and arguments that may abuse Visual Basic (VB) for execution.&lt;br /&gt;['T1553.006']: Monitor for the execution of commands that could modify the code signing policy of a system, such as &lt;code&gt;bcdedit.exe -set TESTSIGNING ON&lt;/code&gt;. (Citation: Microsoft TESTSIGNING Feb 2021)&lt;br /&gt;['T1569.001']: Monitor command-line execution of the &lt;code&gt;launchctl&lt;/code&gt; command immediately followed by abnormal network connections.&lt;br /&gt;['T1070']: Monitor executed commands and arguments that may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined malware.&lt;br /&gt;['T1546.011']: Monitor executed commands and arguments for sdbinst.exe for potential indications of application shim abuse.&lt;br /&gt;['T1563.001']: Monitor executed commands and arguments that may hijack a legitimate user's SSH session to move laterally within an environment.&lt;br /&gt;['T1053.005']: Monitor executed commands and arguments for actions that could be taken to gather tasks may also be created through Windows system management tools such as Windows Management Instrumentation and PowerShell, so additional logging may need to be configured to gather the appropriate data.&lt;br /&gt;['T1562']: Monitor executed commands and arguments that may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms.&lt;br /&gt;['T1010']: Monitor executed commands and arguments for actions that could be taken to gather system and network information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.&lt;br /&gt;['T1137.001']: Monitor executed commands and arguments that may abuse Microsoft Office templates to obtain persistence on a compromised system.&lt;br /&gt;['T1484.001']: Monitor executed commands and arguments that may modify Group Policy Objects (GPOs) to subvert the intended discretionary access controls for a domain, usually with the intention of escalating privileges on the domain.&lt;br /&gt;['T1546.012']: Monitor executed commands and arguments that may establish persistence and/or elevate privileges by executing malicious content triggered by Image File Execution Options (IFEO) debuggers.&lt;br /&gt;['T1134']: Monitor executed commands and arguments for token manipulation by auditing command-line activity. Specifically, analysts should look for use of the &lt;code&gt;runas&lt;/code&gt; command. Detailed command-line logging is not enabled by default in Windows.(Citation: Microsoft Command-line Logging)&lt;br /&gt;['T1563']: Monitor executed commands and arguments that may take control of preexisting sessions with remote services to move laterally in an environment.&lt;br /&gt;['T1574.011']: Monitor for the execution of commands and arguments that can be used for adversaries to modify services' registry keys and values through applications such as Windows Management Instrumentation and PowerShell. Additional logging may need to be configured to gather the appropriate data.&lt;br /&gt;['T1125']: Monitor executed commands and arguments that can leverage a computer's peripheral devices (e.g., integrated cameras or webcams) or applications (e.g., video call services) to capture video recordings for the purpose of gathering information.&lt;br /&gt;['T1546.009']: Monitor executed commands and arguments that may establish persistence and/or elevate privileges by executing malicious content triggered by AppCert DLLs loaded into processes.&lt;br /&gt;['T1204.003']: Monitor executed commands and arguments that may attempt to take advantage of a weakness in an Internet-facing computer or program using software, data, or commands in order to cause unintended or unanticipated behavior.&lt;br /&gt;['T1007']: Monitor executed commands and arguments that could be taken to gather system information related to services. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).&lt;br /&gt;['T1003.007']: Monitor executed commands and arguments that may gather credentials from information stored in the Proc filesystem or &lt;code&gt;/proc&lt;/code&gt;.&lt;br /&gt;['T1059.002']: Monitor executed commands and arguments that may abuse AppleScript for execution. Scripts are likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used.  Actions may be related to network and system information [Discovery](https://attack.mitre.org/tactics/TA0007), [Collection](https://attack.mitre.org/tactics/TA0009), or other scriptable post-compromise behaviors and could be used as indicators of detection leading back to the source script.&lt;br /&gt;['T1222.002']: Many of the commands used to modify ACLs and file/directory ownership are built-in system utilities and may generate a high false positive alert rate, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible. Commonly abused command arguments include &lt;code&gt;chmod +x&lt;/code&gt;, &lt;code&gt;chmod -R 755&lt;/code&gt;, and &lt;code&gt;chmod 777&lt;/code&gt;.(Citation: 20 macOS Common Tools and Techniques)&lt;br /&gt;['T1558']: Monitor executed commands and arguments that may attempt to subvert Kerberos authentication by stealing or forging Kerberos tickets to enable [Pass the Ticket](https://attack.mitre.org/techniques/T1550/003).&lt;br /&gt;['T1136.002']: Monitor executed commands and arguments for actions that are associated with local account creation, such as net user /add /domain.&lt;br /&gt;['T1490']: Use process monitoring to monitor the execution and command line parameters of binaries involved in inhibiting system recovery, such as vssadmin, wbadmin, and bcdedit.&lt;br /&gt;['T1546.008']: Monitor executed commands and arguments that may establish persistence and/or elevate privileges by executing malicious content triggered by accessibility features. Command line invocation of tools capable of modifying the Registry for associated keys are also suspicious. Utility arguments and the binaries themselves should be monitored for changes.&lt;br /&gt;['T1547.013']: Monitor executed commands and arguments that may modify XDG autostart entries to execute programs or commands during system boot.&lt;br /&gt;['T1016']: Monitor executed commands and arguments that may look for details about the network configuration and settings, such as IP and/or MAC addresses, of systems they access or through information discovery of remote systems.&lt;br /&gt;['T1497']: Monitor executed commands and arguments that may employ various means to detect and avoid virtualization and analysis environments. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary's implementation and monitoring required.&lt;br /&gt;['T1564']: Monitor executed commands and arguments that may attempt to hide artifacts associated with their behaviors to evade detection.&lt;br /&gt;['T1136']: Monitor executed commands and arguments for actions that are associated with account creation, such as net user or useradd&lt;br /&gt;['T1547.007']: Monitor executed commands and arguments that may modify plist files to automatically run an application when a user logs in.&lt;br /&gt;['T1218.002']: When executed from the command line or clicked, control.exe will execute the CPL file (ex: &lt;code&gt;control.exe file.cpl&lt;/code&gt;) before [Rundll32](https://attack.mitre.org/techniques/T1218/011) is used to call the CPL's API functions (ex: &lt;code&gt;rundll32.exe shell32.dll,Control_RunDLL file.cpl&lt;/code&gt;). CPL files can be executed directly via the CPL API function with just the latter [Rundll32](https://attack.mitre.org/techniques/T1218/011) command, which may bypass detections and/or execution filters for control.exe.(Citation: TrendMicro CPL Malware Jan 2014)&lt;br /&gt;['T1570']: Monitor executed commands and arguments for actions for abnormal usage of utilities and command-line arguments that may be used in support of remote transfer of files&lt;br /&gt;['T1555.005']: Monitor executed commands and arguments that may acquire user credentials from third-party password managers. (Citation: ise Password Manager February 2019)&lt;br /&gt;['T1039']: Monitor executed commands and arguments for actions that could be taken to collect files from a network share. Remote access tools with built-in features may interact directly with the Windows API to gather and copy to a location. Data may also be acquired and staged through Windows system management tools such as Windows Management Instrumentation and PowerShell.&lt;br /&gt;['T1069']: Monitor executed commands and arguments acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.&lt;br /&gt;['T1497.003']: Monitor executed commands and arguments that may employ various time-based methods to detect and avoid virtualization and analysis environments. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary's implementation and monitoring required.&lt;br /&gt;['T1137.002']: Monitor executed commands and arguments that may abuse the Microsoft Office "Office Test" Registry key to obtain persistence on a compromised system.&lt;br /&gt;['T1564.008']: On Windows systems, monitor for creation of suspicious inbox rules through the use of the &lt;code&gt;New-InboxRule&lt;/code&gt; and &lt;code&gt;Set-InboxRule&lt;/code&gt; PowerShell cmdlets.(Citation: Microsoft BEC Campaign)&lt;br /&gt;['T1021']: Monitor executed commands and arguments that may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to log into a service specifically designed to accept remote connections, such as telnet, SSH, and VNC. The adversary may then perform actions as the logged-on user.&lt;br /&gt;['T1553']: Command monitoring may reveal malicious attempts to modify trust settings, such as the installation of root certificates or modifications to trust attributes/policies applied to files.&lt;br /&gt;['T1563.002']: monitor service creation that uses cmd.exe /k or cmd.exe /c in its arguments to detect RDP session hijacking.&lt;br /&gt;['T1548.002']: Monitor executed commands and arguments that may bypass UAC mechanisms to elevate process privileges on system.&lt;br /&gt;['T1036.003']: Monitor executed commands and arguments for actions that could be taken to gather...&lt;br /&gt;['T1543.003']: Monitor processes and command-line arguments for actions that could create or modify services. Command-line invocation of tools capable of adding or modifying services may be unusual, depending on how systems are typically used in a particular environment. Services may also be modified through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001), so additional logging may need to be configured to gather the appropriate data. Also collect service utility execution and service binary path arguments used for analysis. Service binary paths may even be changed to execute commands or scripts.&lt;br /&gt;['T1217']: Monitor executed commands and arguments for actions that could be taken to gather browser bookmark information. Remote access tools with built-in features may interact directly using APIs to gather information. Information may also be acquired through system management tools such as Windows Management Instrumentation and PowerShell.&lt;br /&gt;['T1135']: Monitor executed commands and arguments that may look for folders and drives shared on remote systems as a means of identifying sources of information to gather as a precursor for Collection and to identify potential systems of interest for Lateral Movement.&lt;br /&gt;['T1567']: Monitor executed commands and arguments that may use an existing, legitimate external Web service to exfiltrate data rather than their primary command and control channel.&lt;br /&gt;['T1202']: Monitor executed commands and arguments to bypass security restrictions that limit the use of command-line interpreters. &lt;br /&gt;['T1561']: Monitor for direct access read/write attempts using the &lt;code&gt;\\\\.\\&lt;/code&gt; notation.(Citation: Microsoft Sysmon v6 May 2017) Monitor for unusual kernel driver installation activity.&lt;br /&gt;['T1059.003']: Monitor executed commands and arguments that may abuse the Windows command shell for execution. Usage of the Windows command shell may be common on administrator, developer, or power user systems depending on job function. If scripting is restricted for normal users, then any attempt to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.&lt;br /&gt;['T1548.003']: Monitor executed commands and arguments that may perform sudo caching and/or use the suoders file to elevate privileges, such as the &lt;code&gt;sudo&lt;/code&gt; command.&lt;br /&gt;['T1480.001']: Monitor executed commands and arguments that may gather the victim's physical location(s) that can be used during targeting. Detecting the use of environmental keying may be difficult depending on the implementation.&lt;br /&gt;['T1546.005']: Monitor executed commands and arguments that may establish persistence by executing malicious content triggered by an interrupt signal.&lt;br /&gt;['T1082']: Monitor executed commands and arguments that may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture.&lt;br /&gt;['T1564.002']: Monitor executed commands and arguments that could be taken to add a new user and subsequently hide it from login screens.&lt;br /&gt;['T1057']: Monitor executed commands and arguments for actions that may attempt to get information about running processes on a system.&lt;br /&gt;['T1110']: Monitor executed commands and arguments that may use brute force techniques to gain access to accounts when passwords are unknown or when password hashes are obtained.&lt;br /&gt;['T1218.010']: Command arguments used before and after the regsvr32.exe invocation may also be useful in determining the origin and purpose of the script or DLL being loaded. (Citation: Carbon Black Squiblydoo Apr 2016)&lt;br /&gt;['T1484']: Monitor executed commands and arguments for modifications to domain trust settings, such as when a user or application modifies the federation settings on the domain or updates domain authentication from Managed to Federated via ActionTypes &lt;code&gt;Set federation settings on domain&lt;/code&gt; and &lt;code&gt;Set domain authentication&lt;/code&gt;.(Citation: Microsoft - Azure Sentinel ADFSDomainTrustMods)(Citation: Microsoft 365 Defender Solorigate)&lt;br /&gt;['T1562.003']: Correlating a user session with a distinct lack of new commands in their &lt;code&gt;.bash_history&lt;/code&gt; can be a clue to suspicious behavior. Monitor for modification of PowerShell command history settings through processes being created with &lt;code&gt;-HistorySaveStyle SaveNothing&lt;/code&gt; command-line arguments and use of the PowerShell commands &lt;code&gt;Set-PSReadlineOption -HistorySaveStyle SaveNothing&lt;/code&gt; and &lt;code&gt;Set-PSReadLineOption -HistorySavePath {File Path}&lt;/code&gt;.&lt;br /&gt;['T1518']: Monitor executed commands and arguments that may attempt to get a listing of software and software versions that are installed on a system or in a cloud environment.&lt;br /&gt;['T1505.004']: Monitor execution and command-line arguments of &lt;code&gt;AppCmd.exe&lt;/code&gt;, which may be abused to install malicious IIS modules.(Citation: Microsoft IIS Modules Overview 2007)(Citation: Unit 42 RGDoor Jan 2018)(Citation: ESET IIS Malware 2021)&lt;br /&gt;['T1552.006']: Monitor executed commands and arguments that may search for SYSVOL data and/or GPP XML files, especially on compromised domain controllers.&lt;br /&gt;['T1040']: Monitor executed commands and arguments for actions that aid in sniffing network traffic to capture information about an environment, including authentication material passed over the network&lt;br /&gt;['T1218.005']: Look for mshta.exe executing raw or obfuscated script within the command-line. Compare recent invocations of mshta.exe with prior history of known good arguments and executed .hta files to determine anomalous and potentially adversarial activity. Command arguments used before and after the mshta.exe invocation may also be useful in determining the origin and purpose of the .hta file being executed.&lt;br /&gt;['T1056.002']: Monitor executed commands and arguments, such as requests for credentials and/or strings related to creating password prompts that may be malicious.(Citation: Spoofing credential dialogs)&lt;br /&gt;['T1505.005']: Monitor executed commands and arguments for potential adversary actions to modify Registry values (ex: &lt;code&gt;reg.exe&lt;/code&gt;) or modify/replace the legitimate &lt;code&gt;termsrv.dll&lt;/code&gt;.&lt;br /&gt;['T1069.002']: Monitor for executed commands and arguments that may attempt to find domain-level groups and permission settings.&lt;br /&gt;['T1562.009']: Monitor executed commands and arguments associated with making configuration changes to boot settings, such as &lt;code&gt;bcdedit.exe&lt;/code&gt; and &lt;code&gt;bootcfg.exe&lt;/code&gt;.(Citation: Microsoft bcdedit 2021)(Citation: Microsoft Bootcfg)(Citation: Sophos Snatch Ransomware 2019)&lt;br /&gt;['T1552.001']: While detecting adversaries accessing these files may be difficult without knowing they exist in the first place, it may be possible to detect adversary use of credentials they have obtained. Monitor executed commands and arguments of executing processes for suspicious words or regular expressions that may indicate searching for a password (for example: password, pwd, login, secure, or credentials). See [Valid Accounts](https://attack.mitre.org/techniques/T1078) for more information.&lt;br /&gt;['T1087.004']: Monitor logs for actions that could be taken to gather information about cloud accounts, including the use of calls to cloud APIs that perform account discovery.

System and network discovery techniques normally occur throughout an operation as an adversary learns the environment, and also to an extent in normal network operations. Therefore discovery data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.&lt;br /&gt;['T1027']: Monitor executed commands and arguments containing indicators of obfuscation and known suspicious syntax such as uninterpreted escape characters like '''^''' and '''"'''. Deobfuscation tools can be used to detect these indicators in files/payloads. (Citation: GitHub Revoke-Obfuscation) (Citation: FireEye Revoke-Obfuscation July 2017) (Citation: GitHub Office-Crackros Aug 2016)&lt;br /&gt;['T1201']: Monitor executed commands and arguments for actions that may attempt to access detailed information about the password policy used within an enterprise network or cloud environment.&lt;br /&gt;['T1547.003']: Monitor executed commands and arguments that may abuse time providers to execute DLLs when the system boots.&lt;br /&gt;['T1555']: Monitor executed commands and arguments that may search for common password storage locations to obtain user credentials.&lt;br /&gt;['T1552.002']: Monitor executed commands and arguments that may search the Registry on compromised systems for insecurely stored credentials.&lt;br /&gt;['T1562.001']: Monitor for the execution of commands and arguments associated with disabling or modification of security software processes or services such as &lt;code&gt;Set-MpPreference-DisableScriptScanning 1&lt;/code&gt; in Windows,&lt;code&gt;sudo spctl --master-disable&lt;/code&gt; in macOS, and &lt;code&gt;setenforce 0&lt;/code&gt; in Linux.&lt;br /&gt;['T1546.002']: Monitor executed commands and arguments of .scr files.&lt;br /&gt;['T1562.004']: Monitor executed commands and arguments associated with disabling or the modification of system firewalls such as &lt;code&gt;netsh advfirewall firewall set rule group="file and printer sharing" new enable=Yes&lt;/code&gt;,&lt;code&gt;ufw disable&lt;/code&gt;, and &lt;code&gt;ufw logging off&lt;/code&gt;.&lt;br /&gt;['T1546.014']: Monitor executed commands and arguments that may gain persistence and elevate privileges by executing malicious content triggered by the Event Monitor Daemon (emond).&lt;br /&gt;['T1074.002']: Monitor executed commands and arguments arguments for actions that could be taken to collect and combine files. Remote access tools with built-in features may interact directly with the Windows API to gather and copy to a location. Data may also be acquired and staged through Windows system management tools such as Windows Management Instrumentation and PowerShell.&lt;br /&gt;['T1486']: Monitor executed commands and arguments for actions involved in data destruction activity, such as vssadmin, wbadmin, and bcdedit&lt;br /&gt;['T1561.002']: Monitor executed commands and arguments that may corrupt or wipe the disk data structures on a hard drive necessary to boot a system; targeting specific critical systems or in large numbers in a network to interrupt availability to system and network resources.&lt;br /&gt;['T1556.005']: Monitor command-line usage for &lt;code&gt;-AllowReversiblePasswordEncryption $true&lt;/code&gt; or other actions that could be related to malicious tampering of user settings (i.e. [Group Policy Modification](https://attack.mitre.org/techniques/T1484/001)). &lt;br /&gt;['T1021.006']: Monitor executed commands and arguments that may invoke a WinRM script to correlate it with other related events.(Citation: Medium Detecting Lateral Movement)&lt;br /&gt;['T1564.001']: Monitor the file system and shell commands for files being created with a leading "." and the Windows command-line use of attrib.exe to add the hidden attribute.&lt;br /&gt;['T1615']: Monitor for suspicious use of &lt;code&gt;gpresult&lt;/code&gt;. Monitor for the use of PowerShell functions such as &lt;code&gt;Get-DomainGPO&lt;/code&gt; and &lt;code&gt;Get-DomainGPOLocalGroup&lt;/code&gt; and processes spawning with command-line arguments containing &lt;code&gt;GPOLocalGroup&lt;/code&gt;.&lt;br /&gt;['T1529']: Monitor executed commands and arguments of binaries involved in shutting down or rebooting systems.&lt;br /&gt;['T1053.006']: Monitor executed commands and arguments the 'systemd-run' utility as it may be used to create timers&lt;br /&gt;['T1137.004']: Monitor executed commands and arguments that may abuse Microsoft Outlook's Home Page feature to obtain persistence on a compromised system. Microsoft has released a PowerShell script to safely gather mail forwarding rules and custom forms in your mail environment as well as steps to interpret the output.(Citation: Microsoft Detect Outlook Forms)&lt;br /&gt;['T1037.002']: Monitor executed commands with arguments to install or modify login hooks.&lt;br /&gt;['T1037.004']: Monitor executed commands and arguments resulting from RC scripts for unusual or unknown applications or behavior&lt;br /&gt;['T1070.004']: Monitor executed commands and arguments for actions that could be utilized to unlink, rename, or delete files.&lt;br /&gt;['T1614']: Monitor executed commands and arguments that may gather information in an attempt to calculate the geographical location of a victim host.&lt;br /&gt;['T1083']: Monitor executed commands and arguments that may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system.&lt;br /&gt;['T1137.003']: Monitor executed commands and arguments that may abuse Microsoft Outlook forms to obtain persistence on a compromised system. Microsoft has released a PowerShell script to safely gather mail forwarding rules and custom forms in your mail environment as well as steps to interpret the output.(Citation: Microsoft Detect Outlook Forms)&lt;br /&gt;['T1543.001']: Ensure Launch Agent's &lt;code&gt; ProgramArguments &lt;/code&gt; key pointing to executables located in the &lt;code&gt;/tmp&lt;/code&gt; or &lt;code&gt;/shared&lt;/code&gt; folders are in alignment with enterprise policy. Ensure all Launch Agents with the &lt;code&gt;RunAtLoad&lt;/code&gt; key set to &lt;code&gt;true&lt;/code&gt; are in alignment with policy.&lt;br /&gt;['T1059']: Monitor command-line arguments for script execution and subsequent behavior. Actions may be related to network and system information Discovery, Collection, or other scriptable post-compromise behaviors and could be used as indicators of detection leading back to the source script. Scripts are likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. &lt;br /&gt;['T1119']: Monitor executed commands and arguments for actions that could be taken to collect internal data.&lt;br /&gt;['T1016.001']: Monitor executed commands and arguments that may check for Internet connectivity on compromised systems.&lt;br /&gt;['T1137.005']: Monitor executed commands and arguments that may abuse Microsoft Outlook rules to obtain persistence on a compromised system. Microsoft has released a PowerShell script to safely gather mail forwarding rules and custom forms in your mail environment as well as steps to interpret the output.(Citation: Microsoft Detect Outlook Forms) This PowerShell script is ineffective in gathering rules with modified PR_RULE_MSG_NAME and PR_RULE_MSG_PROVIDER properties caused by adversaries using a Microsoft Exchange Server Messaging API Editor (MAPI Editor), so only examination with the Exchange Administration tool MFCMapi can reveal these mail forwarding rules.(Citation: Pfammatter - Hidden Inbox Rules)&lt;br /&gt;['T1137.006']: Monitor executed commands and arguments that may abuse Microsoft Office add-ins to obtain persistence on a compromised system. &lt;br /&gt;['T1218.001']: Monitor executed commands and arguments that may forge SAML tokens with any permissions claims and lifetimes if they possess a valid SAML token-signing certificate.(Citation: Microsoft SolarWinds Steps)&lt;br /&gt;['T1012']: Monitor executed commands and arguments for actions that may interact with the Windows Registry to gather information about the system, configuration, and installed software.&lt;br /&gt;['T1003.004']: Monitor executed commands and arguments that may access to a host may attempt to access Local Security Authority (LSA) secrets. Remote access tools may contain built-in features or incorporate existing tools like Mimikatz. PowerShell scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module,(Citation: Powersploit) which may require additional logging features to be configured in the operating system to collect necessary information for analysis.&lt;br /&gt;['T1204']: Monitor the execution of and command-line arguments for applications that may be used by an adversary to gain Initial Access that require user interaction. This includes compression applications, such as those for zip files, that can be used to [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140) in payloads.&lt;br /&gt;['T1543.004']: Some legitimate LaunchDaemons point to unsigned code that could be exploited. For Launch Daemons with the &lt;code&gt;RunAtLoad&lt;/code&gt; parameter set to true, ensure the &lt;code&gt;Program&lt;/code&gt; parameter points to signed code or executables are in alignment with enterprise policy. Some parameters are interchangeable with others, such as &lt;code&gt;Program&lt;/code&gt; and &lt;code&gt;ProgramArguments&lt;/code&gt; parameters but one must be present. (Citation: launchd Keywords for plists)&lt;br /&gt;['T1496']: Monitor executed commands and arguments that may indicate common cryptomining functionality &lt;br /&gt;['T1574.012']: Extra scrutiny should be placed on suspicious modification of Registry keys such as COR_ENABLE_PROFILING, COR_PROFILER, and COR_PROFILER_PATH by command line tools like wmic.exe, setx.exe, and [Reg](https://attack.mitre.org/software/S0075). Monitoring for command-line arguments indicating a change to COR_PROFILER variables may aid in detection.&lt;br /&gt;['T1046']: Monitor executed commands and arguments that may attempt to get a listing of services running on remote hosts, including those that may be vulnerable to remote software exploitation.&lt;br /&gt;['T1222']: Many of the commands used to modify ACLs and file/directory ownership are built-in system utilities and may generate a high false positive alert rate, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible.&lt;br /&gt;['T1115']: Monitor executed commands and arguments to collect data stored in the clipboard from users copying information within or between applications.&lt;br /&gt;['T1087.003']: Monitor for execution of commands and arguments associated with enumeration or information gathering of email addresses and accounts such as &lt;code&gt;Get-AddressList&lt;/code&gt;, &lt;code&gt;Get-GlobalAddressList&lt;/code&gt;, and &lt;code&gt;Get-OfflineAddressBook&lt;/code&gt;.&lt;br /&gt;['T1052']: Monitor executed commands and arguments that may attempt to exfiltrate data via a physical medium, such as a removable drive.&lt;br /&gt;['T1552.003']: While users do typically rely on their history of commands, they often access this history through other utilities like "history" instead of commands like &lt;code&gt;cat ~/.bash_history&lt;/code&gt;.&lt;br /&gt;['T1003.005']: Monitor executed commands and arguments that may attempt to access cached domain credentials used to allow authentication to occur in the event a domain controller is unavailable.(Citation: Microsoft - Cached Creds). Remote access tools may contain built-in features or incorporate existing tools like Mimikatz. PowerShell scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module,(Citation: Powersploit) which may require additional logging features to be configured in the operating system to collect necessary information for analysis.
Detection of compromised https://attack.mitre.org/techniques/T1078 in-use by adversaries may help as well.&lt;br /&gt;['T1546']: Monitor executed commands and arguments that may establish persistence and/or elevate privileges using system mechanisms that trigger execution based on specific events.&lt;br /&gt;['T1036.004']: Monitor executed commands and arguments that may attempt to manipulate the name of a task or service to make it appear legitimate or benign.&lt;br /&gt;['T1059.006']: Monitor systems for abnormal Python usage and python.exe behavior, which could be an indicator of malicious activity. Understanding standard usage patterns is important to avoid a high number of false positives. If scripting is restricted for normal users, then any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent. Scripts are likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Monitor executed commands and arguments that may abuse Python commands and scripts for execution.&lt;br /&gt;['T1053']: Monitor executed commands and arguments that may abuse task scheduling functionality to facilitate initial or recurring execution of malicious code.&lt;br /&gt;['T1087']: Monitor logs and other sources of command execution history for actions that could be taken to gather information about accounts, including the use of calls to cloud APIs that perform account discovery.

System and network discovery techniques normally occur throughout an operation as an adversary learns the environment, and also to an extent in normal network operations. Therefore discovery data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.&lt;br /&gt;['T1480']: Monitor executed commands and arguments that may gather information about the victim's business relationships that can be used during targeting. Detecting the use of guardrails may be difficult depending on the implementation.&lt;br /&gt;['T1176']: Monitor executed commands and arguments for usage of the profiles tool, such as profiles install -type=configuration.&lt;br /&gt;['T1003.001']: Monitor executed commands and arguments that may attempt to access credential material stored in the process memory of the Local Security Authority Subsystem Service (LSASS). Remote access tools may contain built-in features or incorporate existing tools like Mimikatz. PowerShell scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module,(Citation: Powersploit) which may require additional logging features to be configured in the operating system to collect necessary information for analysis.&lt;br /&gt;['T1218.003']: Monitor executed commands and arguments that may gather information about the victim's hosts that can be used during targeting.&lt;br /&gt;['T1136.001']: Monitor executed commands and arguments for actions that are associated with local account creation, such as net user /add , useradd , and dscl -create&lt;br /&gt;['T1021.002']: Monitor executed commands and arguments that connect to remote shares, such as [Net](https://attack.mitre.org/software/S0039), on the command-line interface and Discovery techniques that could be used to find remotely accessible systems.(Citation: Medium Detecting WMI Persistence)&lt;br /&gt;['T1059.001']: If proper execution policy is set, adversaries will likely be able to define their own execution policy if they obtain administrator or system access, either through the Registry or at the command line. This change in policy on a system may be a way to detect malicious use of PowerShell. If PowerShell is not used in an environment, then simply looking for PowerShell execution may detect malicious activity. It is also beneficial to turn on PowerShell logging to gain increased fidelity in what occurs during execution (which is applied to .NET invocations). (Citation: Malware Archaeology PowerShell Cheat Sheet) PowerShell 5.0 introduced enhanced logging capabilities, and some of those features have since been added to PowerShell 4.0. Earlier versions of PowerShell do not have many logging features.(Citation: FireEye PowerShell Logging 2016) An organization can gather PowerShell execution details in a data analytic platform to supplement it with other data.&lt;br /&gt;['T1070.002']: Monitor executed commands and arguments for actions that could be taken to remove or overwrite system logs.&lt;br /&gt;['T1005']: Monitor executed commands and arguments that may search and collect local system sources, such as file systems or local databases, to find files of interest and sensitive data prior to Exfiltration. Remote access tools with built-in features may interact directly with the Windows API to gather data. Data may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).&lt;br /&gt;['T1546.003']: Monitor executed commands and arguments that can be used to register WMI persistence, such as the &lt;code&gt; Register-WmiEvent&lt;/code&gt; [PowerShell](https://attack.mitre.org/techniques/T1059/001) cmdlet (Citation: Microsoft Register-WmiEvent)&lt;br /&gt;['T1518.001']: Monitor executed commands and arguments that may attempt to get a listing of security software, configurations, defensive tools, and sensors that are installed on a system or in a cloud environment.&lt;br /&gt;['T1003.008']: Monitor executed commands and arguments that may attempt to dump the contents of &lt;code&gt;/etc/passwd&lt;/code&gt; and &lt;code&gt;/etc/shadow&lt;/code&gt; to enable offline password cracking.&lt;br /&gt;['T1087.001']: Monitor for execution of commands and arguments associated with enumeration or information gathering of local accounts and groups such as &lt;code&gt;net user&lt;/code&gt;, &lt;code&gt;net account&lt;/code&gt;, &lt;code&gt;net localgroup&lt;/code&gt;, &lt;code&gt;Get-LocalUser&lt;/code&gt;, and &lt;code&gt; dscl&lt;/code&gt;.

System and network discovery techniques normally occur throughout an operation as an adversary learns the environment, and also to an extent in normal network operations. Therefore discovery data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.&lt;br /&gt;['T1036']: Monitor executed commands and arguments that may attempt to manipulate features of their artifacts to make them appear legitimate or benign to users and/or security tools. (Citation: Twitter ItsReallyNick Masquerading Update)&lt;br /&gt;['T1053.003']: Monitor executed atq command and ensure IP addresses stored in the SSH_CONNECTION and SSH_CLIENT variables, machines that created the jobs, are trusted hosts. All at jobs are stored in /var/spool/cron/atjobs/.&lt;br /&gt;['T1114']: Monitor executed processes and command-line arguments for actions that could be taken to gather local email files. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.&lt;br /&gt;['T1120']: Monitor executed commands and arguments that may attempt to gather information about attached peripheral devices and components connected to a computer system.&lt;br /&gt;['T1011']: Monitor executed commands and arguments that may attempt to exfiltrate data over a different network medium than the command and control channel&lt;br /&gt;['T1561.001']: Monitor executed commands and arguments that may erase the contents of storage devices on specific systems or in large numbers in a network to interrupt availability to system and network resources.&lt;br /&gt;['T1124']: Monitor executed commands and arguments for actions that may gather the system time and/or time zone from a local or remote system.&lt;br /&gt;['T1069.001']: Monitor for executed commands and arguments that may attempt to find local system groups and permission settings.&lt;br /&gt;['T1052.001']: Monitor executed commands and arguments that may attempt to exfiltrate data over a USB connected physical device.&lt;br /&gt;['T1564.009']: Monitor executed commands and arguments that are leveraging the use of resource forks, especially those immediately followed by potentially malicious activity such as creating network connections.&lt;br /&gt;['T1070.003']: Monitor executed commands and arguments for actions that could be taken to clear command history, such as &lt;code&gt;Clear-History&lt;/code&gt; on Windows, or to disable writing command history, such as &lt;code&gt;history -c&lt;/code&gt; in bash/zsh.&lt;br /&gt;['T1543']: Command-line invocation of tools capable of modifying services may be unusual, depending on how systems are typically used in a particular environment. Look for abnormal process call trees from known services and for execution of other commands that could relate to Discovery or other adversary techniques.&lt;br /&gt;['T1137']: Monitor executed commands and arguments that may leverage Microsoft Office-based applications for persistence between startups. Microsoft has released a PowerShell script to safely gather mail forwarding rules and custom forms in your mail environment as well as steps to interpret the output.(Citation: Microsoft Detect Outlook Forms) SensePost, whose tool [Ruler](https://attack.mitre.org/software/S0358) can be used to carry out malicious rules, forms, and Home Page attacks, has released a tool to detect Ruler usage.(Citation: SensePost NotRuler)&lt;br /&gt;['T1564.006']: Consider monitoring for commands and arguments that may be atypical for benign use of virtualization software. Usage of virtualization binaries or command-line arguments associated with running a silent installation may be especially suspect (ex. &lt;code&gt;-silent&lt;/code&gt;, &lt;code&gt;-ignore-reboot&lt;/code&gt;), as well as those associated with running a headless (in the background with no UI) virtual instance (ex. &lt;code&gt;VBoxManage startvm $VM --type headless&lt;/code&gt;).(Citation: Shadowbunny VM Defense Evasion) Similarly, monitoring command line arguments which suppress notifications may highlight potentially malicious activity (ex. &lt;code&gt;VBoxManage.exe setextradata global GUI/SuppressMessages "all"&lt;/code&gt;). Monitor for commands which enable hypervisors such as Hyper-V.&lt;br /&gt;['T1567.002']: Monitor executed commands and arguments that may exfiltrate data to a cloud storage service rather than over their primary command and control channel.&lt;br /&gt;['T1114.002']: Monitor executed commands and arguments for actions that may target an Exchange server, Office 365, or Google Workspace to collect sensitive information.&lt;br /&gt;['T1218.007']: Command arguments used before and after the invocation of msiexec.exe may also be useful in determining the origin and purpose of the MSI files or DLLs being executed.&lt;br /&gt;['T1047']: Monitor executed commands and arguments for actions that are used to perform remote behavior&lt;br /&gt;['T1569.002']: Monitor executed commands and arguments that may abuse the Windows service control manager to execute malicious commands or payloads.&lt;br /&gt;['T1006']: Monitor executed commands and arguments that could be taken to copy files from the logical drive and evade common file system protections. Since this technique may also be used through [PowerShell](https://attack.mitre.org/techniques/T1059/001), additional logging of PowerShell scripts is recommended.&lt;br /&gt;['T1614.001']: Monitor executed commands and arguments that may attempt to gather information about the system language of a victim in order to infer the geographical location of that host.&lt;br /&gt;['T1546.015']: Monitor executed commands and arguments that may establish persistence by executing malicious content triggered by hijacked references to Component Object Model (COM) objects.&lt;br /&gt;['T1049']: Monitor executed commands and arguments that may attempt to get a listing of network connections to or from the compromised system they are currently accessing or from remote systems by querying for information over the network. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).&lt;br /&gt;['T1569']: Monitor for command line invocations of tools capable of modifying services that doesn't correspond to normal usage patterns and known software, patch cycles, etc.&lt;br /&gt;['T1059.007']: Scripting execution is likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Monitor processes and command-line arguments for execution and subsequent behavior. Actions may be related to network and system information [Discovery](https://attack.mitre.org/tactics/TA0007), [Collection](https://attack.mitre.org/tactics/TA0009), or other programmable post-compromise behaviors and could be used as indicators of detection leading back to the source. Monitor for execution of JXA through &lt;code&gt;osascript&lt;/code&gt; and usage of &lt;code&gt;OSAScript&lt;/code&gt; API that may be related to other suspicious behavior occurring on the system. &lt;br /&gt;['T1622']: Monitor executed commands and arguments that may employ various means to detect and avoid debugged environments. Detecting actions related to debugger identification may be difficult depending on the adversary's implementation and monitoring required.&lt;br /&gt;['T1485']: Monitor executed commands and arguments for binaries that could be involved in data destruction activity, such as SDelete.&lt;br /&gt;['T1218.004']: Monitor executed commands and arguments used before and after the InstallUtil.exe invocation may also be useful in determining the origin and purpose of the binary being executed.&lt;br /&gt;['T1218']: Monitor executed commands and arguments that may forge credential materials that can be used to gain access to web applications or Internet services.&lt;br /&gt;['T1574']: Monitor executed commands and arguments that may execute their own malicious payloads by hijacking the way operating systems run programs.&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Audit OSX" url="https://www.scip.ch/en/?labs.20150108"/>
            <reference name="Confluence Linux Command  Line" url="https://confluence.atlassian.com/confkb/how-to-enable-command-line-audit-logging-in-linux-956166545.html"/>
            <reference name="Mitre ATT&amp;CK Data Source DS0017" url="https://attack.mitre.org/data-sources/DS0017"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:00.777">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-M1042" name="Disable or Remove Feature or Program" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>Remove or deny access to unnecessary and potentially vulnerable software to prevent abuse by adversaries.&lt;br /&gt;&lt;p&gt;Detailed mitigations per technique:&lt;/p&gt;&lt;br /&gt;['T1547.007', 'T1164']: This feature can be disabled entirely with the following terminal command: &lt;code&gt;defaults write -g ApplePersistence -bool no&lt;/code&gt;.&lt;br /&gt;['T1021.004']: Disable the SSH daemon on systems that do not require it. For macOS ensure Remote Login is disabled under Sharing Preferences.(Citation: Apple Unified Log Analysis Remote Login and Screen Sharing)&lt;br /&gt;['T1021.005']: Uninstall any VNC server software where not required.&lt;br /&gt;['T1175', 'T1021.003']: Consider disabling DCOM through Dcomcnfg.exe.(Citation: Microsoft Disable DCOM)&lt;br /&gt;['T1210']: Minimize available services to only those that are necessary.&lt;br /&gt;['T1028', 'T1021.006']: Disable the WinRM service.&lt;br /&gt;['T1121', 'T1218.009']: Regsvcs and Regasm may not be necessary within a given environment.&lt;br /&gt;['T1059.005']: Turn off or restrict access to unneeded VB components.&lt;br /&gt;['T1595.003']: Remove or disable access to any systems, resources, and infrastructure that are not explicitly required to be available externally.&lt;br /&gt;['T1559', 'T1559.002']: Registry keys specific to Microsoft Office feature control security can be set to disable automatic DDE/OLE execution. (Citation: Microsoft DDE Advisory Nov 2017)(Citation: BleepingComputer DDE Disabled in Word Dec 2017)(Citation: GitHub Disable DDEAUTO Oct 2017) Microsoft also created, and enabled by default, Registry keys to completely disable DDE execution in Word and Excel.(Citation: Microsoft ADV170021 Dec 2017)&lt;br /&gt;['T1173']: Registry keys specific to Microsoft Office feature control security can be set to disable automatic DDE/OLE execution. (Citation: Microsoft DDE Advisory Nov 2017) (Citation: BleepingComputer DDE Disabled in Word Dec 2017) (Citation: GitHub Disable DDEAUTO Oct 2017) Microsoft also created, and enabled by default, Registry keys to completely disable DDE execution in Word and Excel. (Citation: Microsoft ADV170021 Dec 2017)&lt;br /&gt;['T1564.006']: Disable Hyper-V if not necessary within a given environment.&lt;br /&gt;['T1171', 'T1557.001']: Disable LLMNR and NetBIOS in local computer security settings or by group policy if they are not needed within an environment. (Citation: ADSecurity Windows Secure Baseline)&lt;br /&gt;['T1046']: Ensure that unnecessary ports and services are closed to prevent risk of discovery and potential exploitation.&lt;br /&gt;['T1519']: Consider disabling emond by removing the [Launch Daemon](https://attack.mitre.org/techniques/T1160) plist file.&lt;br /&gt;['T1114.003']: Consider disabling external email forwarding.(Citation: Microsoft BEC Campaign)&lt;br /&gt;['T1086', 'T1059.001']: It may be possible to remove PowerShell from systems when not needed, but a review should be performed to assess the impact to an environment, since it could be in use for many legitimate purposes and administrative functions.

Disable/restrict the WinRM Service to help prevent uses of PowerShell for remote execution.&lt;br /&gt;['T1557']: Disable legacy network protocols that may be used   to intercept network traffic if applicable, especially those that are not needed within an environment.&lt;br /&gt;['T1052.001', 'T1052']: Disable Autorun if it is unnecessary. (Citation: Microsoft Disable Autorun) Disallow or restrict removable media at an organizational policy level if they are not required for business operations. (Citation: TechNet Removable Media Control)&lt;br /&gt;['T1553.005']: Consider disabling auto-mounting of disk image files (i.e., .iso, .img, .vhd, and .vhdx). This can be achieved by modifying the Registry values related to the Windows Explorer file associations in order to disable the automatic Explorer "Mount and Burn" dialog for these file extensions. Note: this will not deactivate the mount functionality itself.(Citation: GitHub MOTW)&lt;br /&gt;['T1505']: Consider disabling software components from servers when possible to prevent abuse by adversaries.(Citation: ITSyndicate Disabling PHP functions)&lt;br /&gt;['T1218.008']: Odbcconf.exe may not be necessary within a given environment.&lt;br /&gt;['T1091']: Disable Autorun if it is unnecessary. (Citation: Microsoft Disable Autorun) Disallow or restrict removable media at an organizational policy level if it is not required for business operations. (Citation: TechNet Removable Media Control)&lt;br /&gt;['T1137']: Follow Office macro security best practices suitable for your environment. Disable Office VBA macros from executing.

Disable Office add-ins. If they are required, follow best practices for securing them by requiring them to be signed and disabling user notification for allowing add-ins. For some add-ins types (WLL, VBA) additional mitigation is likely required as disabling add-ins in the Office Trust Center does not disable WLL nor does it prevent VBA code from executing. (Citation: MRWLabs Office Persistence Add-ins)&lt;br /&gt;['T1546.002']: Use Group Policy to disable screensavers if they are unnecessary.(Citation: TechNet Screensaver GP)&lt;br /&gt;['T1059']: Disable or remove any unnecessary or unused shells or interpreters.&lt;br /&gt;['T1021.001', 'T1563.002', 'T1076']: Disable the RDP service if it is unnecessary.&lt;br /&gt;['T1555.004']: Consider enabling the "Network access: Do not allow storage of passwords and credentials for network authentication" setting that will prevent network credentials from being stored by the Credential Manager.(Citation: Microsoft Network access Credential Manager)&lt;br /&gt;['T1092']: Disable Autoruns if it is unnecessary.(Citation: Microsoft Disable Autorun)&lt;br /&gt;['T1218.013']: Consider removing mavinject.exe if Microsoft App-V is not used within a given environment.&lt;br /&gt;['T1563']: Disable the remote service (ex: SSH, RDP, etc.) if it is unnecessary.&lt;br /&gt;['T1098.004']: Disable SSH if it is not necessary on a host or restrict SSH access for specific users/groups using &lt;code&gt;/etc/ssh/sshd_config&lt;/code&gt;.&lt;br /&gt;['T1557.002']: Consider disabling updating the ARP cache on gratuitous ARP replies.&lt;br /&gt;['T1184', 'T1563.001']: Ensure that agent forwarding is disabled on systems that do not explicitly require this feature to prevent misuse. (Citation: Symantec SSH and ssh-agent)&lt;br /&gt;['T1218.012']: Consider removing verclsid.exe if it is not necessary within a given environment.&lt;br /&gt;['T1218.005', 'T1170']: Mshta.exe may not be necessary within a given environment since its functionality is tied to older versions of Internet Explorer that have reached end of life.&lt;br /&gt;['T1133']: Disable or block remotely available services that may be unnecessary.&lt;br /&gt;['T1218.007']: Consider disabling the &lt;code&gt;AlwaysInstallElevated&lt;/code&gt; policy to prevent elevated execution of Windows Installer packages.(Citation: Microsoft AlwaysInstallElevated 2018)&lt;br /&gt;['T1564.007']: Turn off or restrict access to unneeded VB components.(Citation: Microsoft Disable VBA Jan 2020)&lt;br /&gt;['T1059.007']: Turn off or restrict access to unneeded scripting components.&lt;br /&gt;['T1218.004', 'T1118']: InstallUtil may not be necessary within a given environment.&lt;br /&gt;['T1127.001']: MSBuild.exe may not be necessary within an environment and should be removed if not being used.&lt;br /&gt;['T1011.001']: Disable Bluetooth in local computer security settings or by group policy if it is not needed within an environment.&lt;br /&gt;['T1218.014']: MMC may not be necessary within a given environment since it is primarily used by system administrators, not regular users or clients. &lt;br /&gt;['T1552.005']: Disable unnecessary metadata services and restrict or disable insecure versions of metadata services that are in use to prevent adversary access.(Citation: Amazon AWS IMDS V2)&lt;br /&gt;['T1191', 'T1218.003']: CMSTP.exe may not be necessary within a given environment (unless using it for VPN connection installation).&lt;br /&gt;['T1546.014']: Consider disabling emond by removing the [Launch Daemon](https://attack.mitre.org/techniques/T1543/004) plist file.&lt;br /&gt;['T1137.001']: Follow Office macro security best practices suitable for your environment. Disable Office VBA macros from executing.

Disable Office add-ins. If they are required, follow best practices for securing them by requiring them to be signed and disabling user notification for allowing add-ins. For some add-ins types (WLL, VBA) additional mitigation is likely required as disabling add-ins in the Office Trust Center does not disable WLL nor does it prevent VBA code from executing. (Citation: MRWLabs Office Persistence Add-ins)
&lt;br /&gt;['T1505.003']: Consider disabling functions from web technologies such as PHP's &lt;code&gt;eval()&lt;/code&gt; that may be abused for web shells.(Citation: ITSyndicate Disabling PHP functions)&lt;br /&gt;['T1205']: Disable Wake-on-LAN if it is not needed within an environment.&lt;br /&gt;['T1218']: Many native binaries may not be necessary within a given environment.&lt;br /&gt;['T1221']: Consider disabling Microsoft Office macros/active content to prevent the execution of malicious payloads in documents (Citation: Microsoft Disable Macros), though this setting may not mitigate the [Forced Authentication](https://attack.mitre.org/techniques/T1187) use for this technique.&lt;br /&gt;['T1562.010']: Consider removing previous versions of tools that are unnecessary to the environment when possible.&lt;br /&gt;['T1064']: Turn off unused features or restrict access to scripting engines such as VBScript or scriptable administration frameworks such as PowerShell.&lt;br /&gt;['T1098.002']: If email delegation is not required, disable it. In Google Workspace this can be accomplished through the Google Admin console.(Citation: Gmail Delegation)&lt;br /&gt;['T1127']: Specific developer utilities may not be necessary within a given environment and should be removed if not used.&lt;br /&gt;['T1180']: Use Group Policy to disable screensavers if they are unnecessary. (Citation: TechNet Screensaver GP)&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Mitre ATT&amp;CK Mitigation M1042" url="https://attack.mitre.org/mitigations/M1042"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:00.934">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-DS0022" name="File" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>A computer resource object, managed by the I/O system, for storing data (such as images, text, videos, computer programs, or any wide variety of other media).(Citation: Microsoft File Mgmt)&lt;br /&gt;&lt;p&gt;Detailed detections per technique:&lt;/p&gt;&lt;br /&gt;['T1070.002']: Monitor for unexpected deletion of a system log file, typically stored in /var/logs or /Library/Logs. &lt;br /&gt;['T1485']: Monitor for unexpected deletion to a file (ex: Sysmon EID 23) &lt;br /&gt;['T1554']: Monitor for unexpected deletion of  client software binaries to establish persistent access to systems.&lt;br /&gt;['T1070']: Monitor for a file that may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined malware.&lt;br /&gt;['T1070.001']: Monitor for unexpected deletion of Windows event logs (via native binaries) and may also generate an alterable event (Event ID 1102: "The audit log was cleared")&lt;br /&gt;['T1565.003']: Monitor for unexpected deletion of a file in order to manipulate external outcomes or hide activity &lt;br /&gt;['T1490']: The Windows event logs, ex. Event ID 524 indicating a system catalog was deleted, may contain entries associated with suspicious activity.&lt;br /&gt;['T1070.003']: Monitor for unexpected deletion of a command history file, such as ConsoleHost_history.txt, ~/.zsh_history, or ~/.bash_history.&lt;br /&gt;['T1070.004']: Monitor for unexpected deletion of files from the system&lt;br /&gt;['T1552.006']: Monitor for attempts to access SYSVOL that involve searching for XML files.&lt;br /&gt;['T1114.001']: Monitor for unusual processes accessing local email files that may target user email on local systems to collect sensitive information.&lt;br /&gt;['T1074']: Monitor processes that appear to be reading files from disparate locations and writing them to the same directory or file may be an indication of data being staged, especially if they are suspected of performing encryption or compression on the files, such as 7zip, RAR, ZIP, or zlib.&lt;br /&gt;['T1555.004']: Consider monitoring file reads to Vault locations, &lt;code&gt;&amp;percnt;Systemdrive&amp;percnt;&amp;bsol;Users&amp;bsol;&amp;bsol;&amp;lsqb;Username&amp;rsqb;&amp;bsol;AppData&amp;bsol;Local&amp;bsol;Microsoft&amp;bsol;&amp;bsol;&amp;lsqb;Vault&amp;sol;Credentials&amp;rsqb;&amp;bsol;&lt;/code&gt;, for suspicious activity.(Citation: Malwarebytes The Windows Vault)&lt;br /&gt;['T1552.003']: Monitoring when the user's &lt;code&gt;.bash_history&lt;/code&gt; is read can help alert to suspicious activity.&lt;br /&gt;['T1187']: Monitor for unexpected files used to gather credentials when the files are rendered&lt;br /&gt;['T1011.001']: Monitor for files being accessed that could be related to exfiltration, such as file reads by a process that also has an active network connection. Also monitor for and investigate changes to host adapter settings, such as addition and/or replication of communication interfaces. &lt;br /&gt;['T1020']: Monitor for abnormal access to files (i.e. .pdf, .docx, .jpg, etc.), especially sensitive documents, through the use of automated processing after being gathered during Collection.&lt;br /&gt;['T1048.003']: Monitor files viewed in isolation that may steal data by exfiltrating it over a symmetrically encrypted network protocol other than that of the existing command and control channel.&lt;br /&gt;['T1091']: Monitor for unexpected files accessed on removable media.&lt;br /&gt;['T1555.005']: Monitor file reads that may acquire user credentials from third-party password managers.(Citation: ise Password Manager February 2019)&lt;br /&gt;['T1052']: Monitor file access on removable media that may attempt to exfiltrate data via a physical medium, such as a removable drive.&lt;br /&gt;['T1041']: Monitor for suspicious files (i.e. .pdf, .docx, .jpg, etc.) viewed in isolation that may steal data by exfiltrating it over an existing command and control channel.&lt;br /&gt;['T1555.003']: Identify web browser files that contain credentials such as Google Chrome's Login Data database file: &lt;code&gt;AppData\Local\Google\Chrome\User Data\Default\Login Data&lt;/code&gt;. Monitor file read events of web browser files that contain credentials, especially when the reading process is unrelated to the subject web browser.&lt;br /&gt;['T1018']: Monitor for files (such as &lt;code&gt;/etc/hosts&lt;/code&gt;) being accessed that may attempt to get a listing of other systems by IP address, hostname, or other logical identifier on a network that may be used for Lateral Movement from the current system&lt;br /&gt;['T1025']: Monitor for unexpected/abnormal file accesses to removable media (optical disk drive, USB memory, etc.) connected to the compromised system. &lt;br /&gt;['T1048.001']: Monitor for files viewed in isolation that may steal data by exfiltrating it over a symmetrically encrypted network protocol other than that of the existing command and control channel.&lt;br /&gt;['T1003.003']: Monitor for access or copy of the NTDS.dit.&lt;br /&gt;['T1003.002']: Monitor for hash dumpers opening the Security Accounts Manager (SAM) on the local file system (&lt;code&gt;%SystemRoot%/system32/config/SAM&lt;/code&gt;). Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromised [Valid Accounts](https://attack.mitre.org/techniques/T1078) in-use by adversaries may help as well.&lt;br /&gt;['T1003.007']: Monitor for unexpected access to passwords and hashes stored in memory, processes must open a maps file in the /proc filesystem for the process being analyzed. This file is stored under the path &lt;code&gt;/proc/\/maps&lt;/code&gt;, where the &lt;code&gt;\&lt;/code&gt; directory is the unique pid of the program being interrogated for such authentication data. The AuditD monitoring tool, which ships stock in many Linux distributions, can be used to watch for hostile processes opening this file in the proc file system, alerting on the pid, process name, and arguments of such programs.&lt;br /&gt;['T1003.008']: Monitor for files being accessed that may attempt to dump the contents of &lt;code&gt;/etc/passwd&lt;/code&gt; and &lt;code&gt;/etc/shadow&lt;/code&gt; to enable offline password cracking. The AuditD monitoring tool, which ships stock in many Linux distributions, can be used to watch for hostile processes attempting to access &lt;code&gt;/etc/passwd&lt;/code&gt; and &lt;code&gt;/etc/shadow&lt;/code&gt;, alerting on the pid, process name, and arguments of such programs.&lt;br /&gt;['T1555']: Monitor for files being accessed that may search for common password storage locations to obtain user credentials.&lt;br /&gt;['T1567']: Monitor for files being accessed by an existing, legitimate external Web service to exfiltrate data rather than their primary command and control channel.&lt;br /&gt;['T1539']: Monitor for an attempt by a user to gain access to a network or computing resource, often by providing credentials to cloud service management consoles. Some cloud providers, such as AWS, provide distinct log events for login attempts to the management console.&lt;br /&gt;['T1567.002']: Monitor for files being accessed to exfiltrate data to a cloud storage service rather than over their primary command and control channel.&lt;br /&gt;['T1114']: Monitor for unusual processes access of local system email files for Exfiltration, unusual processes connecting to an email server within a network, or unusual access patterns or authentication attempts on a public-facing webmail server may all be indicators of malicious activity.&lt;br /&gt;['T1048']: Monitor for suspicious files (i.e. .pdf, .docx, .jpg, etc.) viewed in isolation that may steal data by exfiltrating it over a different protocol than that of the existing command and control channel.&lt;br /&gt;['T1217']: Monitor for unexpected browser bookmarks viewed in isolation, this showcases part of a chain of behavior that could lead to other activities, such as Collection and Exfiltration, based on the information obtained.&lt;br /&gt;['T1052.001']: Monitor file access on removable media that may attempt to exfiltrate data over a USB connected physical device.&lt;br /&gt;['T1555.001']: Monitor for Keychain files being accessed that may be related to malicious credential collection.&lt;br /&gt;['T1033']: Monitor for hash dumpers opening the Security Accounts Manager (SAM) on the local file system (&lt;code&gt;%SystemRoot%/system32/config/SAM&lt;/code&gt;). Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromised  [Valid Accounts](https://attack.mitre.org/techniques/T1078) in-use by adversaries may help as well.&lt;br /&gt;['T1003']: Monitor for hash dumpers opening the Security Accounts Manager (SAM) on the local file system (&lt;code&gt;%SystemRoot%/system32/config/SAM&lt;/code&gt;). Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromised ( LinkById: T1078) in-use by adversaries may help as well.&lt;br /&gt;['T1119']: Monitor for unexpected files (i.e. .pdf, .docx, .jpg, etc.) viewed for collecting internal data.&lt;br /&gt;['T1039']: Monitor for unexpected files (i.e. .pdf, .docx, .jpg, etc.)  interacting with network shares.&lt;br /&gt;['T1552.004']: Monitor access to files and directories related to cryptographic keys and certificates as a means for potentially detecting access patterns that may indicate collection and exfiltration activity. &lt;br /&gt;['T1558']: Monitor for unexpected processes interacting with lsass.exe.(Citation: Medium Detecting Attempts to Steal Passwords from Memory) Common credential dumpers such as  [Mimikatz](https://attack.mitre.org/software/S0002) access the LSA Subsystem Service (LSASS) process by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details, including Kerberos tickets, are stored. Monitor for unusual processes accessing &lt;code&gt;secrets.ldb&lt;/code&gt; and &lt;code&gt;.secrets.mkey&lt;/code&gt; located in &lt;code&gt;/var/lib/sss/secrets/&lt;/code&gt;.&lt;br /&gt;['T1087']: Monitor access to file resources that contain local accounts and groups information such as &lt;code&gt;/etc/passwd&lt;/code&gt;, &lt;code&gt;/Users&lt;/code&gt; directories, and the SAM database. 

If access requires high privileges, look for non-admin objects (such as users or processes) attempting to access restricted file resources.&lt;br /&gt;['T1552']: Monitor for suspicious file access activity, specifically indications that a process is reading multiple files in a short amount of time and/or using command-line arguments indicative of searching for credential material (ex: regex patterns). These may be indicators of automated/scripted credential access behavior. Monitoring when the user's &lt;code&gt;.bash_history&lt;/code&gt; is read can help alert to suspicious activity. While users do typically rely on their history of commands, they often access this history through other utilities like "history" instead of commands like &lt;code&gt;cat ~/.bash_history&lt;/code&gt;.&lt;br /&gt;['T1011']: Monitor for files being accessed that could be related to exfiltration, such as file reads by a process that also has an active network connection.&lt;br /&gt;['T1567.001']: Monitor for files being accessed to exfiltrate data to a code repository rather than over their primary command and control channel.&lt;br /&gt;['T1087.001']: Monitor access to file resources that contain local accounts and groups information such as &lt;code&gt;/etc/passwd&lt;/code&gt;, &lt;code&gt;/Users&lt;/code&gt; directories, and the Windows SAM database. 

If access requires high privileges, look for non-admin objects (such as users or processes) attempting to access restricted file resources.&lt;br /&gt;['T1005']: Monitor for unexpected/abnormal access to files that may be malicious collection of local data, such as user files (pdf, .docx, .jpg, etc.) or local databases.&lt;br /&gt;['T1552.001']: Monitor for files being accessed that may search local file systems and remote file shares for files containing insecurely stored credentials. While detecting adversaries accessing these files may be difficult without knowing they exist in the first place, it may be possible to detect adversary use of credentials they have obtained. &lt;br /&gt;['T1053.005']: Monitor Windows Task Scheduler stores in %systemroot%\System32\Tasks for change entries related to scheduled tasks that do not correlate with known software, patch cycles, etc.&lt;br /&gt;['T1574.001']: Monitor for changed made to .manifest/.local redirection files, or file systems for moving, renaming, replacing, or modifying DLLs. Changes in the set of DLLs that are loaded by a process (compared with past behavior) that do not correlate with known software, patches, etc., are suspicious.&lt;br /&gt;['T1574.005']: Monitor for changes to binaries and service executables that may normally occur during software updates. &lt;br /&gt;['T1547.009']: Since a shortcut's target path likely will not change, modifications to shortcut files that do not correlate with known software changes, patches, removal, etc., may be suspicious. Analysis should attempt to relate shortcut file change events to other potentially suspicious events based on known adversary behavior such as process launches of unknown executables that make network connections.&lt;br /&gt;['T1037']: Monitor for changes made to files that are modified by unusual accounts outside of normal administration duties.&lt;br /&gt;['T1564.002']: Monitor for changes made to files that may use hidden users to mask the presence of user accounts they create or modify. Monitor for changes made to the &lt;code&gt;/Library/Preferences/com.apple.loginwindow&lt;/code&gt; plist file for unexpected modifications to the &lt;code&gt; Hide500Users&lt;/code&gt; key value on macOS.(Citation: Cybereason OSX Pirrit)&lt;br /&gt;['T1036']: Monitor for changes made to files outside of an update or patch that may attempt to manipulate features of their artifacts to make them appear legitimate or benign to users and/or security tools.&lt;br /&gt;['T1556.004']: Monitor for changes made to the checksum of the operating system file and verifying the image of the operating system in memory.(Citation: Cisco IOS Software Integrity Assurance - Image File Verification)(Citation: Cisco IOS Software Integrity Assurance - Run-Time Memory Verification) Detection of this behavior may be difficult, detection efforts may be focused on closely related adversary behaviors, such as Modify System Image.&lt;br /&gt;['T1600']: File Modification&lt;br /&gt;['T1548.003']: On Linux, auditd can alert every time a user's actual ID and effective ID are different (this is what happens when you sudo). This technique is abusing normal functionality in macOS and Linux systems, but sudo has the ability to log all input and output based on the &lt;code&gt;LOG_INPUT&lt;/code&gt; and &lt;code&gt;LOG_OUTPUT&lt;/code&gt; directives in the &lt;code&gt;/etc/sudoers&lt;/code&gt; file.&lt;br /&gt;['T1543.001']: Launch Agents also require files on disk for persistence which can also be monitored via other file monitoring applications.&lt;br /&gt;['T1053.003']: Monitor for changes made to files for unexpected modifications to access permissions and attributes &lt;br /&gt;['T1070']: Monitor for changes made to a file may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined malware.&lt;br /&gt;['T1056']: Monitor for changes made to files for unexpected modifications to access permissions and attributes  &lt;br /&gt;['T1546.011']: Monitor for changes made to files that may establish persistence and/or elevate privileges by executing malicious content triggered by application shims.&lt;br /&gt;['T1574.010']: Monitor for modification of binaries and service executables that do not occur during a regular software update or an update scheduled by the organization. Modification of files considers actions such as renaming and directory moving.&lt;br /&gt;['T1505']: Monitor for changes made to files that may abuse legitimate extensible development features of servers to establish persistent access to systems.&lt;br /&gt;['T1053.006']: Monitor for changes made to systemd timer unit files for unexpected modification events within the /etc/systemd/system, /usr/lib/systemd/system/, and ~/.config/systemd/user/ directories, as well as associated symbolic links&lt;br /&gt;['T1056.003']: Monitor for changes made to detect changes to files in the Web directory for organization login pages that do not match with authorized updates to the Web server's content.&lt;br /&gt;['T1546.002']: Monitor for changes made to files that may establish persistence by executing malicious content triggered by user inactivity.&lt;br /&gt;['T1546.013']: Locations where &lt;code&gt;profile.ps1&lt;/code&gt; can be stored should be monitored for modifications. (Citation: Malware Archaeology PowerShell Cheat Sheet) Example profile locations include:
* &lt;code&gt;$PsHome\Profile.ps1&lt;/code&gt;
* &lt;code&gt;$PsHome\Microsoft.{HostProgram}_profile.ps1&lt;/code&gt;
* &lt;code&gt;$Home\My Documents\PowerShell\Profile.ps1&lt;/code&gt;
* &lt;code&gt;$Home\My Documents\PowerShell\Microsoft.{HostProgram}_profile.ps1&lt;/code&gt;&lt;br /&gt;['T1564.003']: Monitor for changes made to files that may use hidden windows to conceal malicious activity from the plain sight of users. In MacOS, plist files are ASCII text files with a specific format, so they're relatively easy to parse. File monitoring can check for the &lt;code&gt;apple.awt.UIElement&lt;/code&gt; or any other suspicious plist tag in plist files and flag them.&lt;br /&gt;['T1547.001']: Monitor the start folder for additions or changes. Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including the startup folders. (Citation: TechNet Autoruns)&lt;br /&gt;['T1565.003']: Monitor for unexpected files with manipulated data in order to manipulate external outcomes or hide activity&lt;br /&gt;['T1070.006']: Monitor for unexpected modifications to file timestamps &lt;br /&gt;['T1489']: Monitor for changes made to files that may stop or disable services on a system to render those services unavailable to legitimate users.&lt;br /&gt;['T1564.005']: Detecting the use of a hidden file system may be exceptionally difficult depending on the implementation. Emphasis may be placed on detecting related aspects of the adversary lifecycle, such as how malware interacts with the hidden file system or how a hidden file system is loaded.&lt;br /&gt;['T1037.002']: Monitor for changes to login hook files (&lt;code&gt;/Library/Preferences/com.apple.loginwindow.plist&lt;/code&gt;), especially by unusual accounts outside of normal administration duties.&lt;br /&gt;['T1574.009']: Monitor for changes made to files that may execute their own malicious payloads by hijacking vulnerable file path references.&lt;br /&gt;['T1491.002']: Monitor external websites for unplanned content changes.&lt;br /&gt;['T1486']: Monitor for changes made to files in user directories.&lt;br /&gt;['T1055.009']: Monitor for changes made to /proc files that may inject malicious code into processes via the /proc filesystem in order to evade process-based defenses as well as possibly elevate privileges. Users should not have permission to modify these in most cases. &lt;br /&gt;['T1098']: Monitor for changes made to files related to account settings, such as /etc/ssh/sshd_config and the authorized_keys file for each user on a system.&lt;br /&gt;['T1564.004']: There are many ways to create and interact with ADSs using Windows utilities. Monitor for operations (execution, copies, etc.) with file names that contain colons. This syntax (ex: &lt;code&gt;file.ext:ads[.ext]&lt;/code&gt;) is commonly associated with ADSs. (Citation: Microsoft ADS Mar 2014) (Citation: Oddvar Moe ADS1 Jan 2018) (Citation: Oddvar Moe ADS2 Apr 2018) For a more exhaustive list of utilities that can be used to execute and create ADSs, see https://gist.github.com/api0cradle/cdd2d0d0ec9abb686f0e89306e277b8f.&lt;br /&gt;['T1600.002']: There is no documented method for defenders to directly identify behaviors that reduce encryption key space. Detection efforts may be focused on closely related adversary behaviors, such as Modify System Image and Network Device CLI. Some detection methods require vendor support to aid in investigation.&lt;br /&gt;['T1187']: Monitor for changes made to the .LNK, .SCF, or any other files on systems and within virtual environments that contain resources that point to external network resources &lt;br /&gt;['T1543.004']: Monitor files for changes that may create or modify Launch Daemons to execute malicious payloads as part of persistence.&lt;br /&gt;['T1546.004']: Monitor for changes to &lt;code&gt;/etc/profile&lt;/code&gt; and &lt;code&gt;/etc/profile.d&lt;/code&gt;, these files should only be modified by system administrators. MacOS users can leverage Endpoint Security Framework file events monitoring these specific files.(Citation: ESF_filemonitor)&lt;br /&gt;['T1098.004']: Monitor for changes made to detect changes made to the authorized_keys file for each user on a system. Monitor for changes to and suspicious processes modifiying /etc/ssh/sshd_config.&lt;br /&gt;['T1548']: On Linux, auditd can alert every time a user's actual ID and effective ID are different (this is what happens when you sudo). This technique is abusing normal functionality in macOS and Linux systems, but sudo has the ability to log all input and output based on the &lt;code&gt;LOG_INPUT&lt;/code&gt; and &lt;code&gt;LOG_OUTPUT&lt;/code&gt; directives in the &lt;code&gt;/etc/sudoers&lt;/code&gt; file. Consider monitoring for &lt;code&gt;/usr/libexec/security_authtrampoline&lt;/code&gt; executions which may indicate that AuthorizationExecuteWithPrivileges is being executed. MacOS system logs may also indicate when AuthorizationExecuteWithPrivileges is being called.&lt;br /&gt;['T1037.004']: Monitor for changes made to files for unexpected modifications to RC scripts in the /etc/ directory&lt;br /&gt;['T1554']: Monitor changes to client software that do not correlate with known software or patch cycles.&lt;br /&gt;['T1070.002']: Monitor for changes made to system log files, typically stored in  /var/log or /Library/Logs, for unexpected modifications to access permissions and attributes &lt;br /&gt;['T1055']: Monitor for changes made to files that may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges.&lt;br /&gt;['T1036.003']: Monitor for changes made to files for unexpected modifications to file names that are mismatched between the file name on disk and that of the binary's PE metadata. This is a likely indicator that a binary was renamed after it was compiled.  &lt;br /&gt;['T1547.015']: All login items created via shared file lists are viewable by using the System Preferences GUI or in the &lt;code&gt;~/Library/Application Support/com.apple.backgroundtaskmanagementagent/backgrounditems.btm&lt;/code&gt; file.(Citation: Open Login Items Apple)(Citation: Startup Items Eclectic)(Citation: objsee block blocking login items)(Citation: sentinelone macos persist Jun 2019) These locations should be monitored and audited.&lt;br /&gt;['T1574']: Monitor file systems for moving, renaming, replacing, or modifying DLLs. Changes in the set of DLLs that are loaded by a process (compared with past behavior) that do not correlate with known software, patches, etc., are suspicious. Modifications to or creation of .manifest and .local redirection files that do not correlate with software updates are suspicious.&lt;br /&gt;['T1546']: Monitor for changes made to files that may establish persistence and/or elevate privileges using system mechanisms that trigger execution based on specific events.&lt;br /&gt;['T1556']: Monitor PAM configuration and module paths (ex: /etc/pam.d/) for changes. Use system-integrity tools such as AIDE and monitoring tools such as auditd to monitor PAM files.&lt;br /&gt;['T1137.002']: Monitor for changes made to files that may abuse the Microsoft Office "Office Test" Registry key to obtain persistence on a compromised system.&lt;br /&gt;['T1564']: Monitor for changes made to files that may attempt to hide artifacts associated with their behaviors to evade detection.&lt;br /&gt;['T1547.006']: Monitor for changes made to files that may modify the kernel to automatically execute programs on system boot.&lt;br /&gt;['T1574.006']: Monitor for changes to environment variables and files associated with loading shared libraries such as LD_PRELOAD on Linux and DYLD_INSERT_LIBRARIES on macOS.&lt;br /&gt;['T1553']: Periodically baseline registered SIPs and trust providers (Registry entries and files on disk), specifically looking for new, modified, or non-Microsoft entries.(Citation: SpectorOps Subverting Trust Sept 2017) Also analyze Autoruns data for oddities and anomalies, specifically malicious files attempting persistent execution by hiding within auto-starting locations. Autoruns will hide entries signed by Microsoft or Windows by default, so ensure "Hide Microsoft Entries" and "Hide Windows Entries" are both deselected.(Citation: SpectorOps Subverting Trust Sept 2017)

On macOS, the removal of the &lt;code&gt;com.apple.quarantine&lt;/code&gt; flag by a user instead of the operating system is a suspicious action and should be examined further. Also monitor software update frameworks that may strip this flag when performing updates.&lt;br /&gt;['T1137.006']: Monitor for changes made to files that may abuse Microsoft Office add-ins to obtain persistence on a compromised system.&lt;br /&gt;['T1546.008']: Monitor for changes made to files that may establish persistence and/or elevate privileges by executing malicious content triggered by accessibility features. Changes to accessibility utility binaries or binary paths that do not correlate with known software, patch cycles, etc., are suspicious.&lt;br /&gt;['T1546.006']: Monitor file systems for changes to application binaries and invalid checksums/signatures.&lt;br /&gt;['T1137']: Monitor for changes made to files that may leverage Microsoft Office-based applications for persistence between startups.&lt;br /&gt;['T1553.003']: Periodically baseline registered SIPs and trust providers (Registry entries and files on disk), specifically looking for new, modified, or non-Microsoft entries.(Citation: SpectorOps Subverting Trust Sept 2017) Also analyze Autoruns data for oddities and anomalies, specifically malicious files attempting persistent execution by hiding within auto-starting locations. Autoruns will hide entries signed by Microsoft or Windows by default, so ensure "Hide Microsoft Entries" and "Hide Windows Entries" are both deselected.(Citation: SpectorOps Subverting Trust Sept 2017)&lt;br /&gt;['T1037.003']: Monitor for changes made to files for unexpected modifications to unusual accounts outside of normal administration duties  &lt;br /&gt;['T1569.001']: Every Launch Agent and Launch Daemon must have a corresponding plist file on disk which can be monitored. Plist files are located in the root, system, and users &lt;code&gt;/Library/LaunchAgents&lt;/code&gt; or &lt;code&gt;/Library/LaunchDaemons&lt;/code&gt; folders. [Launch Agent](https://attack.mitre.org/techniques/T1543/001) or [Launch Daemon](https://attack.mitre.org/techniques/T1543/004) with executable paths pointing to /tmp and /Shared folders locations are potentially suspicious.&lt;br /&gt;['T1543']: Monitor for changes to files associated with system-level processes.&lt;br /&gt;['T1569']: Monitor for changes made to files that may abuse system services or daemons to execute commands or programs.&lt;br /&gt;['T1547']: Monitor for changes made to files that may configure system settings to automatically execute a program during system boot or logon to maintain persistence or gain higher-level privileges on compromised systems.&lt;br /&gt;['T1505.005']: Monitor unexpected changes and/or interactions with &lt;code&gt;termsrv.dll&lt;/code&gt;, which is typically stored in &lt;code&gt;%SystemRoot%\System32\&lt;/code&gt;.&lt;br /&gt;['T1546.005']: Monitor for changes made to files that may establish persistence by executing malicious content triggered by an interrupt signal.&lt;br /&gt;['T1543.002']: Systemd service unit files may be detected by auditing file creation and modification events within the &lt;code&gt;/etc/systemd/system&lt;/code&gt;, &lt;code&gt;/usr/lib/systemd/system/&lt;/code&gt;, and &lt;code&gt;/home/&lt;username&gt;/.config/systemd/user/&lt;/code&gt; directories, as well as associated symbolic links&lt;br /&gt;['T1505.003']: Monitor for changes made to files that may backdoor web servers with web shells to establish persistent access to systems.&lt;br /&gt;['T1556.001']: Monitor for changes to functions exported from authentication-related system DLLs (such as cryptdll.dll and samsrv.dll).(Citation: Dell Skeleton)&lt;br /&gt;['T1601.002']: Monitor for changes made to the operating system of a network device because image downgrade may be used in conjunction with  [Patch System Image](https://attack.mitre.org/techniques/T1601/001), it may be appropriate to also verify the integrity of the vendor provided operating system image file.&lt;br /&gt;['T1547.008']: Monitor for changes made to files that may modify or add LSASS drivers to obtain persistence on compromised systems.&lt;br /&gt;['T1553.001']: The removal of the &lt;code&gt;com.apple.quarantine&lt;/code&gt; flag by a user instead of the operating system is a suspicious action and should be examined further. Also monitor software update frameworks that may strip this flag when performing updates.&lt;br /&gt;['T1574.004']: Monitor file systems for moving, renaming, replacing, or modifying dylibs. Changes in the set of dylibs that are loaded by a process (compared to past behavior) that do not correlate with known software, patches, etc., are suspicious. Check the system for multiple dylibs with the same name and monitor which versions have historically been loaded into a process.&lt;br /&gt;['T1485']: Monitor for changes made to a large quantity of files for unexpected modifications in user directories and under C:\Windows\System32\.&lt;br /&gt;['T1037.005']: Monitor for changes made to files for unexpected modifications to /Library/StartupItem folder&lt;br /&gt;['T1647']: Monitor for plist file modification, especially if immediately followed by other suspicious events such as code execution from &lt;code&gt;\~/Library/Scripts&lt;/code&gt; or &lt;code&gt;\~/Library/Preferences&lt;/code&gt;. Also, monitor for significant changes to any path pointers in a modified plist.&lt;br /&gt;['T1574.008']: Monitor for programs metadata modifications such as deletion of the path to an executable since it makes programs vulnerable to this type of technique. Also, monitor modifications of files such as renaming programs using Windows system utilities names.&lt;br /&gt;['T1080']: Monitor for files that write or overwrite many files to a network shared directory may be suspicious.&lt;br /&gt;['T1547.013']: Malicious XDG autostart entries may be detected by auditing file modification events within the &lt;code&gt;/etc/xdg/autostart&lt;/code&gt; and &lt;code&gt;~/.config/autostart&lt;/code&gt; directories. Depending on individual configurations, defenders may need to query the environment variables &lt;code&gt;$XDG_CONFIG_HOME&lt;/code&gt; or &lt;code&gt;$XDG_CONFIG_DIRS&lt;/code&gt; to determine the paths of Autostart entries. Autostart entry files not associated with legitimate packages may be considered suspicious. Suspicious entries can also be identified by comparing entries to a trusted system baseline.&lt;br /&gt;['T1053']: Monitor for changes made to files that may abuse task scheduling functionality to facilitate initial or recurring execution of malicious code.&lt;br /&gt;['T1601.001']: Compare the checksum of the operating system file with the checksum of a known good copy from a trusted source. Some embedded network device platforms may have the capability to calculate the checksum of the file, while others may not. Even for those platforms that have the capability, it is recommended to download a copy of the file to a trusted computer to calculate the checksum with software that is not compromised.https://tools.cisco.com/security/center/resources/integrity_assurance.html#7

Many vendors of embedded network devices can provide advanced debugging support that will allow them to work with device owners to validate the integrity of the operating system running in memory. If a compromise of the operating system is suspected, contact the vendor technical support and seek such services for a more thorough inspection of the current running system. https://tools.cisco.com/security/center/resources/integrity_assurance.html#13&lt;br /&gt;['T1546.014']: Monitor emond rules creation by checking for files modified in &lt;code&gt;/etc/emond.d/rules/&lt;/code&gt; and &lt;code&gt;/private/var/db/emondClients&lt;/code&gt;.&lt;br /&gt;['T1140']: Monitor for changes made to files for unexpected modifications that attempt to hide artifacts.&lt;br /&gt;['T1053.002']: On Windows, monitor Windows Task Scheduler stores in `%systemroot%\System32\Tasks` for change entries related to scheduled tasks, especially those that do not correlate with known software, patch cycles, etc. On Linux and macOS, all [at](https://attack.mitre.org/software/S0110) jobs are stored in &lt;code&gt;/var/spool/cron/atjobs/&lt;/code&gt;.(Citation: rowland linux at 2019)&lt;br /&gt;['T1070.003']: Monitor for changes made to command history files, such as ConsoleHost_history.txt, ~/.zsh_history, or ~/.bash_history, for unexpected modifications to contents, access permissions, and attributes.&lt;br /&gt;['T1505.004']: Monitor for modification of files (especially DLLs on webservers) that could be abused as malicious ISAPI extensions/filters or IIS modules. Changes to &lt;code&gt;%windir%\system32\inetsrv\config\applicationhost.config&lt;/code&gt; could indicate an IIS module installation.(Citation: Microsoft IIS Modules Overview 2007)(Citation: ESET IIS Malware 2021)&lt;br /&gt;['T1491.001']: Monitor internal and websites for unplanned content changes.&lt;br /&gt;['T1137.001']: Monitor for changes made to files that may abuse Microsoft Office templates to obtain persistence on a compromised system. Modification to base templates, like Normal.dotm, should also be investigated since the base templates should likely not contain VBA macros. Changes to the Office macro security settings should also be investigated&lt;br /&gt;['T1547.007']: Monitoring the specific plist files associated with reopening applications can indicate when an application has registered itself to be reopened.&lt;br /&gt;['T1491']: Monitor for changes made to files for unexpected modifications to internal and external websites for unplanned content changes.&lt;br /&gt;['T1564.008']: On MacOS systems, monitor for modifications to the &lt;code&gt;RulesActiveState.plist&lt;/code&gt;, &lt;code&gt;SyncedRules.plist&lt;/code&gt;, &lt;code&gt;UnsyncedRules.plist&lt;/code&gt;, and &lt;code&gt;MessageRules.plist&lt;/code&gt; files.(Citation: MacOS Email Rules)&lt;br /&gt;['T1548.001']: Monitor for changes made to files that may perform shell escapes or exploit vulnerabilities in an application with the setsuid or setgid bits to get code running in a different user's context.&lt;br /&gt;['T1014']: Monitor for changes and the existence of unrecognized DLLs, drivers, devices, services, and to the MBR. (Citation: Wikipedia Rootkit)&lt;br /&gt;['T1601']: Most embedded network devices provide a command to print the version of the currently running operating system. Use this command to query the operating system for its version number and compare it to what is expected for the device in question. Because this method may be used in conjunction with  [Patch System Image](https://attack.mitre.org/techniques/T1601/001), it may be appropriate to also verify the integrity of the vendor provided operating system image file.

Compare the checksum of the operating system file with the checksum of a known good copy from a trusted source. Some embedded network device platforms may have the capability to calculate the checksum of the file, while others may not. Even for those platforms that have the capability, it is recommended to download a copy of the file to a trusted computer to calculate the checksum with software that is not compromised. (Citation: Cisco IOS Software Integrity Assurance - Image File Verification)

Many vendors of embedded network devices can provide advanced debugging support that will allow them to work with device owners to validate the integrity of the operating system running in memory. If a compromise of the operating system is suspected, contact the vendor technical support and seek such services for a more thorough inspection of the current running system.  (Citation: Cisco IOS Software Integrity Assurance - Run-Time Memory Verification)&lt;br /&gt;['T1053.007']: Monitor for newly constructed files by using the logging agents on Kubernetes nodes and retrieve logs from sidecar proxies for application and resource pods to monitor malicious container orchestration job deployments.&lt;br /&gt;['T1574.007']: Monitor for newly constructed files for files named after partial directories and in locations that may be searched for common processes through the environment variable, or otherwise should not be user writable. Also, monitor file creation for programs that are named after Windows system programs or programs commonly executed without a path (such as "findstr," "net," and "python"). If this activity occurs outside of known administration activity, upgrades, installations, or patches, then it may be suspicious.&lt;br /&gt;['T1204.001']: malicious documents and files that are downloaded from a link and executed on the user's computer&lt;br /&gt;['T1137.001']: Monitor for newly constructed files that may abuse Microsoft Office templates to obtain persistence on a compromised system.&lt;br /&gt;['T1137']: Monitor for newly constructed files that may leverage Microsoft Office-based applications for persistence between startups.&lt;br /&gt;['T1218.002']: Monitor for newly constructed files that may forge web cookies that can be used to gain access to web applications or Internet services.&lt;br /&gt;['T1560.002']: Monitor newly constructed files being written with extensions and/or headers associated with compressed or encrypted file types. Detection efforts may focus on follow-on exfiltration activity, where compressed or encrypted files can be detected in transit with a network intrusion detection or data loss prevention system analyzing file headers.&lt;br /&gt;['T1037.002']: Monitor for the creation of and/or changes to login hook files (&lt;code&gt;/Library/Preferences/com.apple.loginwindow.plist&lt;/code&gt;), especially by unusual accounts outside of normal administration duties.&lt;br /&gt;['T1037.004']: Monitor for newly constructed /etc/rc.local file &lt;br /&gt;['T1574.006']: Monitor for newly constructed files that are added to absolute paths of shared libraries such as LD_PRELOAD on Linux and DYLD_INSERT_LIBRARIES on macOS.&lt;br /&gt;['T1566']: Monitor for newly constructed files from a phishing messages to gain access to victim systems.&lt;br /&gt;['T1546.004']: Monitor for newly constructed files that may establish persistence through executing malicious commands triggered by a user's shell. For most Linux and macOS systems, a list of file paths for valid shell options available on a system are located in the &lt;code&gt;/etc/shells&lt;/code&gt; file.&lt;br /&gt;['T1036.007']: Monitor for files written to disk that contain two file extensions, particularly when the second is an executable.&lt;br /&gt;['T1574.005']: Monitor for newly constructed files to match an existing service executable, it could be detected and correlated with other suspicious behavior.  &lt;br /&gt;['T1105']: Monitor for file creation and files transferred into the network&lt;br /&gt;['T1491']: Monitor for newly constructed visual content for internal or external enterprise networks. &lt;br /&gt;['T1037.005']: Monitor for newly constructed files by unusual accounts outside of normal administration duties&lt;br /&gt;['T1074.001']: Monitor publicly writeable directories, central locations, and commonly used staging directories (recycle bin, temp folders, etc.) to regularly check for compressed or encrypted data that may be indicative of staging.&lt;br /&gt;['T1053']: Monitor newly constructed files that may abuse task scheduling functionality to facilitate initial or recurring execution of malicious code.&lt;br /&gt;['T1546.005']: Monitor for newly constructed files that may establish persistence by executing malicious content triggered by an interrupt signal.&lt;br /&gt;['T1505.003']: File monitoring may be used to detect changes to files in the Web directory of a Web server that do not match with updates to the Web server's content and may indicate implantation of a Web shell script.(Citation: NSA Cyber Mitigating Web Shells)&lt;br /&gt;['T1547']: Monitor for newly constructed files that may configure system settings to automatically execute a program during system boot or logon to maintain persistence or gain higher-level privileges on compromised systems.&lt;br /&gt;['T1543.001']: Monitor for newly constructed files that may create or modify launch agents to repeatedly execute malicious payloads as part of persistence.&lt;br /&gt;['T1547.013']: Malicious XDG autostart entries may be detected by auditing file creation events within the &lt;code&gt;/etc/xdg/autostart&lt;/code&gt; and &lt;code&gt;~/.config/autostart&lt;/code&gt; directories. Depending on individual configurations, defenders may need to query the environment variables &lt;code&gt;$XDG_CONFIG_HOME&lt;/code&gt; or &lt;code&gt;$XDG_CONFIG_DIRS&lt;/code&gt; to determine the paths of Autostart entries. Autostart entry files not associated with legitimate packages may be considered suspicious. Suspicious entries can also be identified by comparing entries to a trusted system baseline.&lt;br /&gt;['T1027.004']: Monitor for newly constructed files for payloads&lt;br /&gt;['T1543.004']: Monitor for new files added to the &lt;code&gt;/Library/LaunchDaemons/&lt;/code&gt; folder. The System LaunchDaemons are protected by SIP.&lt;br /&gt;['T1574']: Monitor for newly constructed files that may execute their own malicious payloads by hijacking the way operating systems run programs.&lt;br /&gt;['T1546.002']: Monitor newly constructed files that may establish persistence by executing malicious content triggered by user inactivity.&lt;br /&gt;['T1547.012']: Monitor for newly constructed files that may abuse print processors to run malicious DLLs during system boot for persistence and/or privilege escalation.&lt;br /&gt;['T1574.010']: Monitor for creation of binaries and service executables that do not occur during a regular software update or an update scheduled by the organization. This behavior also considers files that are overwritten.&lt;br /&gt;['T1547.010']: Monitor newly constructed files that may use port monitors to run an attacker supplied DLL during system boot for persistence or privilege escalation.&lt;br /&gt;['T1491.001']: Monitor for newly constructed files that may deface systems internal to an organization in an attempt to intimidate or mislead users.&lt;br /&gt;['T1027']: Detection of file obfuscation is difficult unless artifacts are left behind by the obfuscation process that are uniquely detectable with a signature. If detection of the obfuscation itself is not possible, it may be possible to detect the malicious activity that caused the obfuscated file (for example, the method that was used to write, read, or modify the file on the file system).&lt;br /&gt;['T1564.001']: Monitor the file system and shell commands for files being created with a leading "."&lt;br /&gt;['T1218.001']: Monitor presence and use of CHM files, especially if they are not typically used within an environment.&lt;br /&gt;['T1218']: Monitor for file activity (creations, downloads, modifications, etc.), especially for file types that are not typical within an environment and may be indicative of adversary activity.&lt;br /&gt;['T1556.002']: Monitor for newly constructed files that may register malicious password filter dynamic link libraries (DLLs) into the authentication process to acquire user credentials as they are validated.&lt;br /&gt;['T1556']: Monitor for suspicious additions to the /Library/Security/SecurityAgentPlugins directory.(Citation: Xorrior Authorization Plugins)&lt;br /&gt;['T1204']: Anti-virus can potentially detect malicious documents and files that are downloaded and executed on the user's computer. Endpoint sensing or network sensing can potentially detect malicious events once the file is opened (such as a Microsoft Word document or PDF reaching out to the internet or spawning powershell.exe).&lt;br /&gt;['T1574.009']: Monitor file creation for files named after partial directories and in locations that may be searched for common processes through the environment variable, or otherwise should not be user writable. Also, monitor file creation for programs that are named after Windows system programs or programs commonly executed without a path (such as "findstr," "net," and "python"). If this activity occurs outside of known administration activity, upgrades, installations, or patches, then it may be suspicious.&lt;br /&gt;['T1546']: Monitor newly constructed files that may establish persistence and/or elevate privileges using system mechanisms that trigger execution based on specific events.&lt;br /&gt;['T1491.002']: Monitor for newly constructed files that may deface systems external to an organization in an attempt to deliver messaging, intimidate, or otherwise mislead an organization or users.&lt;br /&gt;['T1546.014']: Monitor emond rules creation by checking for files created in &lt;code&gt;/etc/emond.d/rules/&lt;/code&gt; and &lt;code&gt;/private/var/db/emondClients&lt;/code&gt;.&lt;br /&gt;['T1547.009']: Monitor for LNK files created with a Zone Identifier value greater than 1, which may indicate that the LNK file originated from outside of the network.(Citation: BSidesSLC 2020 - LNK Elastic) Analysis should attempt to relate shortcut creation events to other potentially suspicious events based on known adversary behavior such as process launches of unknown executables that make network connections.&lt;br /&gt;['T1547.006']: Monitor for newly constructed files that may modify the kernel to automatically execute programs on system boot.&lt;br /&gt;['T1187']: Monitor for newly constructed .LNK, .SCF, or any other files on systems and within virtual environments that contain resources that point to external network resources &lt;br /&gt;['T1546.008']: Monitor newly constructed files that may establish persistence and/or elevate privileges by executing malicious content triggered by accessibility features.&lt;br /&gt;['T1547.008']: Monitor newly constructed files that may modify or add LSASS drivers to obtain persistence on compromised systems.&lt;br /&gt;['T1496']: Monitor for common cryptomining files on local systems that may indicate compromise and resource usage&lt;br /&gt;['T1505.004']: Monitor for creation of files (especially DLLs on webservers) that could be abused as malicious ISAPI extensions/filters or IIS modules.&lt;br /&gt;['T1565']: Monitor for newly constructed files in order to manipulate external outcomes or hide activity&lt;br /&gt;['T1505']: Consider monitoring file locations associated with the installation of new application software components such as paths from which applications typically load such extensible components.&lt;br /&gt;['T1218.005']: Monitor use of HTA files. If they are not typically used within an environment then execution of them may be suspicious&lt;br /&gt;['T1566.001']: Monitor for newly constructed files from a spearphishing emails with a malicious attachment in an attempt to gain access to victim systems.&lt;br /&gt;['T1486']: Monitor for newly constructed files in user directories.&lt;br /&gt;['T1574.004']: Monitor for newly constructed dylibs&lt;br /&gt;['T1137.002']: Monitor for newly constructed files that may abuse the Microsoft Office "Office Test" Registry key to obtain persistence on a compromised system.&lt;br /&gt;['T1204.002']: Monitor for newly constructed files that are downloaded and executed on the user's computer. Endpoint sensing or network sensing can potentially detect malicious events once the file is opened (such as a Microsoft Word document or PDF reaching out to the internet or spawning powershell.exe).&lt;br /&gt;['T1543']: Monitor for newly constructed files that may create or modify system-level processes to repeatedly execute malicious payloads as part of persistence.&lt;br /&gt;['T1218.014']: Monitor for creation and use of .msc files. MMC may legitimately be used to call Microsoft-created .msc files, such as &lt;code&gt;services.msc&lt;/code&gt; or &lt;code&gt;eventvwr.msc&lt;/code&gt;. Invoking non-Microsoft .msc files may be an indicator of malicious activity.&lt;br /&gt;['T1037']: Monitor for newly constructed files that may use scripts automatically executed at boot or logon initialization to establish persistence.&lt;br /&gt;['T1574.001']: Monitor newly constructed .manifest and .local redirection files that do not correlate with software updates.&lt;br /&gt;['T1189']: Monitor for newly constructed files written to disk to gain access to a system through a user visiting a website over the normal course of browsing.&lt;br /&gt;['T1564.006']: Monitor for newly constructed files associated with running a virtual instance, such as binary files associated with common virtualization technologies (ex: VirtualBox, VMware, QEMU, Hyper-V).&lt;br /&gt;['T1080']: Monitor for newly constructed files from files that write or overwrite many files to a network shared directory may be suspicious.&lt;br /&gt;['T1574.002']: Monitor for newly constructed files in common folders on the computer system.&lt;br /&gt;['T1564.009']: Monitor for newly constructed files that may abuse resource forks to hide malicious code or executables to evade detection and bypass security applications.&lt;br /&gt;['T1176']: Monitor for newly constructed files and/or all installed extensions maintain a plist file in the /Library/Managed Preferences/username/ directory. Ensure all listed files are in alignment with approved extensions&lt;br /&gt;['T1553.005']: Monitor compressed/archive and image files downloaded from the Internet as the contents may not be tagged with the MOTW. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities.&lt;br /&gt;['T1570']: Monitor newly constructed files to/from a lateral tool transfer &lt;br /&gt;['T1564']: Monitor for newly constructed files that may attempt to hide artifacts associated with their behaviors to evade detection.&lt;br /&gt;['T1546.013']: Locations where &lt;code&gt;profile.ps1&lt;/code&gt; can be stored should be monitored for new profiles. (Citation: Malware Archaeology PowerShell Cheat Sheet) Example profile locations include:
* &lt;code&gt;$PsHome\Profile.ps1&lt;/code&gt;
* &lt;code&gt;$PsHome\Microsoft.{HostProgram}_profile.ps1&lt;/code&gt;
* &lt;code&gt;$Home\My Documents\PowerShell\Profile.ps1&lt;/code&gt;
* &lt;code&gt;$Home\My Documents\PowerShell\Microsoft.{HostProgram}_profile.ps1&lt;/code&gt;&lt;br /&gt;['T1027.006']: Monitor for newly constructed files via JavaScript, developing rules for the different variants, with a combination of different encoding and/or encryption schemes, may be very challenging. Consider monitoring files downloaded from the Internet, possibly by HTML Smuggling, for suspicious activities. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities.&lt;br /&gt;['T1554']: Monitor for newly constructed files that may modify client software binaries to establish persistent access to systems.&lt;br /&gt;['T1091']: Monitor for newly constructed files on removable media&lt;br /&gt;['T1137.006']: Monitor for newly constructed files that may abuse Microsoft Office add-ins to obtain persistence on a compromised system.&lt;br /&gt;['T1564']: Monitor for contextual data about a file, which may include information such as name, the content (ex: signature, headers, or data/media), user/ower, permissions that may attempt to hide artifacts associated with their behaviors to evade detection.&lt;br /&gt;['T1036.005']: Collect file hashes; file names that do not match their expected hash are suspect. Perform file monitoring; files with known names but in unusual locations are suspect. Likewise, files that are modified outside of an update or patch are suspect.&lt;br /&gt;['T1036.002']: Monitor for common formats of RTLO characters within filenames such as \u202E, [U+202E], and %E2%80%AE. Defenders should also check their analysis tools to ensure they do not interpret the RTLO character and instead print the true name of the file containing it.&lt;br /&gt;['T1070']: Monitor for contextual file data that may show signs of deletion or alter generated artifacts on a host system, including logs or captured files such as quarantined malware.&lt;br /&gt;['T1553']: Collect and analyze signing certificate metadata on software that executes within the environment to look for unusual certificate characteristics and outliers.&lt;br /&gt;['T1055.013']: Scan file objects reported during the PsSetCreateProcessNotifyRoutine, (Citation: Microsoft PsSetCreateProcessNotifyRoutine routine) which triggers a callback whenever a process is created or deleted, specifically looking for file objects with enabled write access. (Citation: BlackHat Process Doppelganging Dec 2017) Also consider comparing file objects loaded in memory to the corresponding file on disk. (Citation: hasherezade Process Doppelganging Dec 2017)&lt;br /&gt;['T1546.006']: Changes to binaries that do not line up with application updates or patches are also extremely suspicious.&lt;br /&gt;['T1027.003']: Detection of steganography is difficult unless artifacts are left behind by the obfuscation process that are detectable with a known signature. Look for strings or other signatures left in system artifacts related to decoding steganography.&lt;br /&gt;['T1195.002']: Use verification of distributed binaries through hash checking or other integrity checking mechanisms. Scan downloads for malicious signatures and attempt to test software and updates prior to deployment while taking note of potential suspicious activity.&lt;br /&gt;['T1222.002']: Monitor and investigate attempts to modify ACLs and file/directory ownership. Consider enabling file/directory permission change auditing on folders containing key binary/configuration files.&lt;br /&gt;['T1027.001']: Depending on the method used to pad files, a file-based signature may be capable of detecting padding using a scanning or on-access based tool. When executed, the resulting process from padded files may also exhibit other behavior characteristics of being used to conduct an intrusion such as system and network information Discovery or Lateral Movement, which could be used as event indicators that point to the source file.&lt;br /&gt;['T1546']: Monitor for contextual data about a file, which may include information such as name, the content (ex: signature, headers, or data/media), user/ower, permissions, etc.&lt;br /&gt;['T1564.001']: Monitor for contextual data about a file, which may include information such as name, the content (ex: signature, headers, or data/media), user/ower, permissions may set files and directories to be hidden to evade detection mechanisms.&lt;br /&gt;['T1564.009']: Identify files with the &lt;code&gt;com.apple.ResourceFork&lt;/code&gt; extended attribute and large data amounts stored in resource forks.&lt;br /&gt;['T1070.006']: Monitor for file modifications that collects information on file handle opens and can compare timestamp values&lt;br /&gt;['T1565.003']: Monitor for contextual data about a file, which may include information such as name, the content (ex: signature, headers, or data/media), user/ower, permissions, etc that would aid in the manipulation of data to hide activity&lt;br /&gt;['T1564.007']: If the document is opened with a Graphical User Interface (GUI) the malicious p-code is decompiled and may be viewed. However, if the &lt;code&gt;PROJECT&lt;/code&gt; stream, which specifies the project properties, is modified in a specific way the decompiled VBA code will not be displayed. For example, adding a module name that is undefined to the &lt;code&gt;PROJECT&lt;/code&gt; stream will inhibit attempts of reading the VBA source code through the GUI.(Citation: FireEye VBA stomp Feb 2020)&lt;br /&gt;['T1553.005']: Monitor files (especially those downloaded from untrusted locations) for MOTW attributes. Also consider inspecting and scanning file formats commonly abused to bypass MOTW (ex: .arj, .gzip, .iso, .vhd).&lt;br /&gt;['T1218.011']: Analyze contextual data about executed DLL files, which may include information such as name, the content (ex: signature, headers, or data/media), age, user/ower, permissions, etc.&lt;br /&gt;['T1553.001']: Review &lt;code&gt;false&lt;/code&gt; values under the &lt;code&gt;LSFileQuarantineEnabled&lt;/code&gt; entry in an application's &lt;code&gt;Info.plist&lt;/code&gt; file (required by every application). &lt;code&gt;false&lt;/code&gt; under &lt;code&gt;LSFileQuarantineEnabled&lt;/code&gt; indicates that an application does not use the quarantine flag. Unsandboxed applications with an unspecified &lt;code&gt;LSFileQuarantineEnabled&lt;/code&gt; entry will default to not setting the quarantine flag.

QuarantineEvents is a SQLite database containing a list of all files assigned the &lt;code&gt;com.apple.quarantine&lt;c/ode&gt; attribute, located at &lt;code&gt;~/Library/Preferences/com.apple.LaunchServices.QuarantineEventsV2&lt;/code&gt;. Each event contains the corresponding UUID, timestamp, application, Gatekeeper score, and decision if it was allowed. (Citation: TheEclecticLightCompany Quarantine and the flag)&lt;br /&gt;['T1548']: Monitor the file system for files that have the setuid or setgid bits set. On Linux, auditd can alert every time a user's actual ID and effective ID are different (this is what happens when you sudo).&lt;br /&gt;['T1036']: Collect file hashes; file names that do not match their expected hash are suspect. Perform file monitoring; files with known names but in unusual locations are suspect. Look for indications of common characters that may indicate an attempt to trick users into misidentifying the file type, such as a space as the last character of a file name or the right-to-left override characters"\u202E", "[U+202E]", and "%E2%80%AE".&lt;br /&gt;['T1036.006']: Monitor for spaces at the end of file names, that can easily be checked with file monitoring. From the user's perspective though, this is very hard to notice from within the Finder.app or on the command-line in Terminal.app. Processes executed from binaries containing non-standard extensions in the filename are suspicious.&lt;br /&gt;['T1564.004']: Monitor for contextual data about a file, which may include information such as name, the content (ex: signature, headers, or data/media), user/ower, permissions, may use NTFS file attributes to hide their malicious data in order to evade detection. Forensic techniques exist to identify information stored in NTFS EA. (Citation: Journey into IR ZeroAccess NTFS EA)&lt;br /&gt;['T1027.002']: Use file scanning to look for known software packers or artifacts of packing techniques. Packing is not a definitive indicator of malicious activity, because legitimate software may use packing techniques to reduce binary size or to protect proprietary code.&lt;br /&gt;['T1222']: Monitor and investigate attempts to modify ACLs and file/directory ownership.&lt;br /&gt;['T1548.001']: Monitor the file system for files that have the setuid or setgid bits set.&lt;br /&gt;['T1036.001']: Collect and analyze signing certificate metadata and check signature validity on software that executes within the environment, look for invalid signatures as well as unusual certificate characteristics and outliers.&lt;br /&gt;['T1554']: Collect and analyze signing certificate metadata and check signature validity on software that executes within the environment&lt;br /&gt;['T1036.003']: Collecting and comparing disk and resource filenames for binaries by looking to see if the InternalName, OriginalFilename, and/or ProductName match what is expected could provide useful leads, but may not always be indicative of malicious activity.&lt;br /&gt;['T1222.001']: Consider enabling file/directory permission change auditing on folders containing key binary/configuration files. For example, Windows Security Log events (Event ID 4670) are created when DACLs are modified.&lt;br /&gt;['T1570']: Monitor for alike file hashes or characteristics (ex: filename) that are created on multiple hosts.&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Microsoft File Mgmt" url="https://docs.microsoft.com/en-us/windows/win32/fileio/file-management"/>
            <reference name="Mitre ATT&amp;CK Data Source DS0022" url="https://attack.mitre.org/data-sources/DS0022"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:00.794">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-DS0036" name="Group" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>A collection of multiple user accounts that share the same access rights to the computer and/or network resources and have common security rights(Citation: Amazon IAM Groups)&lt;br /&gt;&lt;p&gt;Detailed detections per technique:&lt;/p&gt;&lt;br /&gt;['T1069.003']: Monitor for an extracted list of available groups and/or their associated setting &lt;br /&gt;['T1069']: Monitor for an extracted list of ACLs of available groups and/or their associated settings.&lt;br /&gt;['T1098.002']: Monitor for unusual Exchange and Office 365 email account permissions changes that may indicate excessively broad permissions (including memberships in privileged groups) being granted to compromised accounts.&lt;br /&gt;['T1098']: Monitor events for changes to account objects and/or permissions on systems and the domain, such as event IDs 4738, 4728 and 4670.&lt;br /&gt;['T1069']: Monitor for contextual data about a group which describes group and activity around it.&lt;br /&gt;['T1069.003']: Contextual data about a group which describes group and activity around it that may attempt to find cloud groups and permission settings. &lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Amazon IAM Groups" url="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_groups.html"/>
            <reference name="Mitre ATT&amp;CK Data Source DS0036" url="https://attack.mitre.org/datasources/DS0036"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:00.836">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-DS0028" name="Logon Session" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>Logon occurring on a system or resource (local, domain, or cloud) to which a user/device is gaining access after successful authentication and authorizaton(Citation: Microsoft Audit Logon Events)&lt;br /&gt;&lt;p&gt;Detailed detections per technique:&lt;/p&gt;&lt;br /&gt;['T1114']: Monitor for unusual login activity from unknown or abnormal locations, especially for privileged accounts (ex: Exchange administrator account). &lt;br /&gt;['T1213']: Monitor for newly constructed logon behavior within Microsoft's SharePoint can be configured to report access to certain pages and documents. (Citation: Microsoft SharePoint Logging) Sharepoint audit logging can also be configured to report when a user shares a resource. (Citation: Sharepoint Sharing Events)The user access logging within Atlassian's Confluence can also be configured to report access to certain pages and documents through AccessLogFilter. (Citation: Atlassian Confluence Logging) Additional log storage and analysis infrastructure will likely be required for more robust detection capabilities.&lt;br /&gt;['T1021.004']: Monitor for user accounts logged into systems that may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to log into remote machines using Secure Shell (SSH). For example, on Linux systems SSH logon activity can be found in the logs located in &lt;code&gt;/var/log/auth.log&lt;/code&gt; or &lt;code&gt;/var/log/secure&lt;/code&gt; depending on the distro you are using.&lt;br /&gt;['T1606.002']: Monitor for logins using SAML tokens which do not have corresponding 4769 and 1200 events in the domain.(Citation: Sygnia Golden SAML) These logins may occur on any on-premises resources as well as from any cloud environment that trusts the certificate.(Citation: Microsoft SolarWinds Customer Guidance)&lt;br /&gt;['T1606.001']: Monitor for anomalous authentication activity, such as logons or other user session activity associated with unknown accounts. Monitor for unexpected and abnormal access to resources, including access of websites and cloud-based applications by the same user in different locations or by different systems that do not match expected configurations.&lt;br /&gt;['T1078.002']: Monitor for suspicious account behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. &lt;br /&gt;['T1556']: Monitor for newly constructed logon behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times (ex: when the user is not present) or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access). Configure robust, consistent account activity audit policies across the enterprise and with externally accessible services.(Citation: TechNet Audit Policy) &lt;br /&gt;['T1550']: Look for suspicious account behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account.&lt;br /&gt;['T1199']: Monitor for newly constructed logon behavior that may breach or otherwise leverage organizations who have access to intended victims.&lt;br /&gt;['T1538']: Monitor for newly constructed logon behavior across cloud service management consoles.&lt;br /&gt;['T1563.002']: Use of RDP may be legitimate, depending on the network environment and how it is used. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior with RDP.&lt;br /&gt;['T1550.002']: Monitor newly created logons and credentials used in events and review for discrepancies. Unusual remote logins that correlate with other suspicious activity (such as writing and executing binaries) may indicate malicious activity.&lt;br /&gt;['T1078']: Monitor for newly constructed logon behavior that may obtain and abuse credentials of existing accounts as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access).&lt;br /&gt;['T1021.001']: Monitor for user accounts logged into systems associated with RDP (ex: Windows EID 4624 Logon Type 10). Other factors, such as access patterns (ex: multiple systems over a relatively short period of time) and activity that occurs after a remote login, may indicate suspicious or malicious behavior with RDP.&lt;br /&gt;['T1213.002']: Monitor for newly constructed logon behavior across Microsoft's SharePoint which can be configured to report access to certain pages and documents. (Citation: Microsoft SharePoint Logging) As information repositories generally have a considerably large user base, detection of malicious use can be non-trivial.&lt;br /&gt;['T1021.002']: Monitor for logon behavior (ex: EID 4624 Logon Type 3) using [Valid Accounts](https://attack.mitre.org/techniques/T1078) to interact with a remote network share using Server Message Block (SMB). The adversary may then perform actions as the logged-on user. Ensure that proper logging of accounts used to log into systems is turned on and centrally collected. Windows logging is able to collect success/failure for accounts that may be used to move laterally and can be collected using tools such as Windows Event Forwarding. (Citation: Lateral Movement Payne)(Citation: Windows Event Forwarding Payne)&lt;br /&gt;['T1556.001']: Monitor for newly constructed logon behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times (ex: when the user is not present) or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access). Configure robust, consistent account activity audit policies across the enterprise and with externally accessible services.(Citation: TechNet Audit Policy)&lt;br /&gt;['T1078.001']: Monitor for newly constructed logon behavior across default accounts that have been activated or logged into. These audits should also include checks on any appliances and applications for default credentials or SSH keys, and if any are discovered, they should be updated immediately.&lt;br /&gt;['T1021.006']: Monitor for user accounts logging into the system via [Valid Accounts](https://attack.mitre.org/techniques/T1078) to interact with remote systems using Windows Remote Management (WinRM). The adversary may then perform actions as the logged-on user. &lt;br /&gt;['T1563']: Monitor for user accounts logged into systems they would not normally access or access patterns to multiple systems over a relatively short period of time.&lt;br /&gt;['T1213.001']: Monitor for newly constructed logon behavior across Atlassian's Confluence which can be configured to report access to certain pages and documents through AccessLogFilter. (Citation: Atlassian Confluence Logging) Additional log storage and analysis infrastructure will likely be required for more robust detection capabilities.&lt;br /&gt;['T1021.005']: Monitor for user accounts logged into systems that may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to remotely control machines using Virtual Network Computing (VNC). For example, on macOS systems &lt;code&gt;log show --predicate 'process = "screensharingd" and eventMessage contains "Authentication:"'&lt;/code&gt; can be used to review incoming VNC connection attempts for suspicious activity.(Citation: Apple Unified Log Analysis Remote Login and Screen Sharing) &lt;br /&gt;['T1563.001']: Monitor for user accounts logged into systems they would not normally access or access patterns to multiple systems over a relatively short period of time. Also monitor user SSH-agent socket files being used by different users.&lt;br /&gt;['T1550.003']: Monitor for newly constructed logon behavior that may "pass the ticket" using stolen Kerberos tickets to move laterally within an environment, bypassing normal system access controls.&lt;br /&gt;['T1114.002']: Monitor for unusual login activity from unknown or abnormal locations, especially for privileged accounts (ex: Exchange administrator account).&lt;br /&gt;['T1213.003']: Monitor for newly constructed logon behavior across code repositories (e.g. Github) which can be configured to report access to certain pages and documents.&lt;br /&gt;['T1078.004']: Monitor for suspicious account behavior across cloud services that share account. &lt;br /&gt;['T1606']: Monitor for anomalous authentication activity, such as logons or other user session activity associated with unknown accounts and/or using SAML tokens which do not have corresponding 4769 and 1200 events in the domain.(Citation: Sygnia Golden SAML). Monitor for unexpected and abnormal access to resources, including access of websites and cloud-based applications by the same user in different locations or by different systems that do not match expected configurations. These logins may occur on any on-premises resources as well as from any cloud environment that trusts the credentials.(Citation: Microsoft SolarWinds Customer Guidance)&lt;br /&gt;['T1185']: Authentication logs can be used to audit logins to specific web applications, but determining malicious logins versus benign logins may be difficult if activity matches typical user behavior.&lt;br /&gt;['T1021']: Monitor for user accounts logged into systems they would not normally access or abnormal access patterns, such as multiple systems over a relatively short period of time. Correlate use of login activity related to remote services with unusual behavior or other malicious or suspicious activity. Adversaries will likely need to learn about an environment and the relationships between systems through Discovery techniques prior to attempting Lateral Movement. For example, in macOS you can review logs for "screensharingd" and "Authentication" event messages. (Citation: Lockboxx ARD 2019)(Citation: Apple Unified Log Analysis Remote Login and Screen Sharing)&lt;br /&gt;['T1556.003']: Monitor for newly constructed logon behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times (ex: when the user is not present) or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access).&lt;br /&gt;['T1621']: Monitor 2FA/MFA application logs for suspicious events such as rapid login attempts with valid credentials.&lt;br /&gt;['T1078.003']: Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access).&lt;br /&gt;['T1621']: Monitor 2FA/MFA application logs for suspicious events such as unusual login attempt source location, mismatch in location of login attempt and smart device approving 2FA/MFA request prompts.&lt;br /&gt;['T1558.001']: Monitor for anomalous Kerberos activity, such as malformed or blank fields in Windows logon/logoff events (Event ID 4624, 4634, 4672). Correlate other security systems with login information (e.g., a user has the KRBTGT account password hash and forges Kerberos ticket-granting tickets). &lt;br /&gt;['T1558']: Enable Audit Kerberos Service Ticket Operations to log Kerberos TGS service ticket requests. Particularly investigate irregular patterns of activity (ex: accounts making numerous requests, Event ID 4769, within a small time frame, especially if they also request RC4 encryption [Type 0x17]).(Citation: Microsoft Detecting Kerberoasting Feb 2018) (Citation: AdSecurity Cracking Kerberos Dec 2015)&lt;br /&gt;['T1606.002']: Consider modifying SAML responses to include custom elements for each service provider. Monitor these custom elements in service provider access logs to detect any anomalous requests.(Citation: Sygnia Golden SAML)&lt;br /&gt;['T1558.002']: Monitor for anomalous Kerberos activity, such as malformed or blank fields in Windows logon/logoff events (Event ID 4624, 4634, 4672).&lt;br /&gt;['T1133']: Follow best practices for detecting adversary use of Valid Accounts for authenticating to remote services. Collect authentication logs and analyze for unusual access patterns, windows of activity, and access outside of normal business hours.&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Microsoft Audit Logon Events" url="https://docs.microsoft.com/en-us/windows/security/threat-protection/auditing/basic-audit-logon-events"/>
            <reference name="Mitre ATT&amp;CK Data Source DS0028" url="https://attack.mitre.org/datasources/DS0028"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:01.363">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-DS0011" name="Module" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>Executable files consisting of one or more shared classes and interfaces, such as portable executable (PE) format binaries/dynamic link libraries (DLL), executable and linkable format (ELF) binaries/shared libraries, and Mach-O format binaries/shared libraries(Citation: Microsoft LoadLibrary)(Citation: Microsoft Module Class)&lt;br /&gt;&lt;p&gt;Detailed detections per technique:&lt;/p&gt;&lt;br /&gt;['T1559']: Monitor DLL/PE file events, specifically creation of these binary files as well as the loading of DLLs into processes. Look for DLLs that are not recognized or not normally loaded into a process.&lt;br /&gt;['T1620']: Monitor for artifacts of abnormal process execution. For example, a common signature related to reflective code loading on Windows is mechanisms related to the .NET Common Language Runtime (CLR) -- such as mscor.dll, mscoree.dll, and clr.dll -- loading into abnormal processes (such as notepad.exe)&lt;br /&gt;['T1546.009']: Monitor DLL loads by processes, specifically looking for DLLs that are not recognized or not normally loaded into a process. Tools such as Sysinternals Autoruns may overlook AppCert DLLs as an auto-starting location. (Citation: TechNet Autoruns) (Citation: Sysinternals AppCertDlls Oct 2007)&lt;br /&gt;['T1547.005']: Monitor the LSA process for DLL loads. Windows 8.1 and Windows Server 2012 R2 may generate events when unsigned SSP DLLs try to load into the LSA by setting the Registry key &lt;code&gt;HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\LSASS.exe&lt;/code&gt; with AuditLevel = 8. (Citation: Graeber 2014) (Citation: Microsoft Configure LSA)&lt;br /&gt;['T1553']: Enable CryptoAPI v2 (CAPI) event logging (Citation: Entrust Enable CAPI2 Aug 2017) to monitor and analyze error events related to failed trust validation (Event ID 81, though this event can be subverted by hijacked trust provider components) as well as any other provided information events (ex: successful validations). Code Integrity event logging may also provide valuable indicators of malicious SIP or trust provider loads, since protected processes that attempt to load a maliciously-crafted trust validation component will likely fail (Event ID 3033). (Citation: SpectorOps Subverting Trust Sept 2017)&lt;br /&gt;['T1547']: Monitor DLL loads by processes, specifically looking for DLLs that are not recognized or not normally loaded into a process. Look for abnormal process behavior that may be due to a process loading a malicious DLL.&lt;br /&gt;['T1547.008']: Also monitor DLL load operations in lsass.exe. (Citation: Microsoft DLL Security)&lt;br /&gt;['T1546']: Monitor DLL loads by processes, specifically looking for DLLs that are not recognized or not normally loaded into a process. Look for abnormal process behavior that may be due to a process loading a malicious DLL. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as making network connections for Command and Control, learning details about the environment through Discovery, and conducting Lateral Movement.&lt;br /&gt;['T1059.005']: Monitor for the loading of modules associated with VB languages (ex: vbscript.dll).&lt;br /&gt;['T1546.011']: Monitor DLL loads by processes that load user32.dll and look for DLLs that are not recognized or not normally loaded into a process.&lt;br /&gt;['T1021']: Monitor DLL/PE file events, specifically creation of these binary files as well as the loading of DLLs into processes, that may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to log into a service specifically designed to accept remote connections, such as telnet, SSH, and VNC. The adversary may then perform actions as the logged-on user.&lt;br /&gt;['T1059.007']: Monitor for the loading of modules associated with scripting languages (ex: JScript.dll).&lt;br /&gt;['T1547.004']: New DLLs written to System32 that do not correlate with known good software or patching may also be suspicious. Look for abnormal process behavior that may be due to a process loading a malicious DLL. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.&lt;br /&gt;['T1218.002']: Monitor for DLL/PE file events, such as the &lt;code&gt;Control_RunDLL&lt;/code&gt; and &lt;code&gt;ControlRunDLLAsUser&lt;/code&gt; API functions in shell32.dll.&lt;br /&gt;['T1546.015']: Likewise, if software DLL loads are collected and analyzed, any unusual DLL load that can be correlated with a COM object Registry modification may indicate COM hijacking has been performed.&lt;br /&gt;['T1559.002']: Monitor processes for abnormal behavior indicative of DDE abuse, such as Microsoft Office applications loading DLLs and other modules not typically associated with the application or these applications spawning unusual processes (such as cmd.exe).&lt;br /&gt;['T1574.004']: Monitor for dynamic libraries being loaded. Run path dependent libraries can include LC_LOAD_DYLIB, LC_LOAD_WEAK_DYLIB, and LC_RPATH. Other special keywords are recognized by the macOS loader are @rpath, @loader_path, and @executable_path.(Citation: Apple Developer Doco Archive Run-Path) These loader instructions can be examined for individual binaries or frameworks using the otool -l command. Objective-See's Dylib Hijacking Scanner can be used to identify applications vulnerable to dylib hijacking&lt;br /&gt;['T1574.001']: Monitor DLLs loaded into a process and detect DLLs that have the same file name but abnormal paths.&lt;br /&gt;['T1505.005']: Monitor module loads by the Terminal Services process (ex: &lt;code&gt;svchost.exe -k termsvcs&lt;/code&gt;) for unexpected DLLs (the default is &lt;code&gt;%SystemRoot%\System32\termsrv.dll&lt;/code&gt;, though an adversary could also use [Match Legitimate Name or Location](https://attack.mitre.org/techniques/T1036/005) to potentially conceal a malicious payload).&lt;br /&gt;['T1547.010']: Monitor DLLs that are loaded by spoolsv.exe for DLLs that are abnormal. New DLLs written to the System32 directory that do not correlate with known good software or patching may be suspicious.&lt;br /&gt;['T1574.006']: Monitor library metadata, such as a hash, and compare libraries that are loaded at process execution time against previous executions to detect differences that do not correlate with patching or updates.&lt;br /&gt;['T1556']: Monitor for new, unfamiliar DLL files written to a domain controller and/or local computer. Password filters will also show up as an autorun and loaded DLL in lsass.exe.(Citation: Clymb3r Function Hook Passwords Sept 2013)&lt;br /&gt;['T1059']: Monitor for events associated with scripting execution, such as the loading of modules associated with scripting languages (ex: JScript.dll or vbscript.dll).&lt;br /&gt;['T1574.012']: Monitor DLL files that are associated with COR_PROFILER environment variables.&lt;br /&gt;['T1129']:  Monitoring DLL module loads may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances, since benign use of Windows modules load functions are common and may be difficult to distinguish from malicious behavior. Legitimate software will likely only need to load routine, bundled DLL modules or Windows system DLLs such that deviation from known module loads may be suspicious. Limiting DLL module loads to &lt;code&gt;%SystemRoot%&lt;/code&gt; and &lt;code&gt;%ProgramFiles%&lt;/code&gt; directories will protect against module loads from unsafe paths.&lt;br /&gt;['T1559.001']: Monitor for COM objects loading DLLs and other modules not typically associated with the application.(Citation: Enigma MMC20 COM Jan 2017)&lt;br /&gt;['T1547.012']: Monitor for abnormal DLLs that are loaded by spoolsv.exe. Print processors that do not correlate with known good software or patching may be suspicious.  New print processor DLLs are written to the print processor directory.&lt;br /&gt;['T1547.002']: Monitor the LSA process for DLL loads. Windows 8.1 and Windows Server 2012 R2 may generate events when unsigned DLLs try to load into the LSA by setting the Registry key &lt;code&gt;HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\LSASS.exe&lt;/code&gt; with AuditLevel = 8. (Citation: Graeber 2014) (Citation: Microsoft Configure LSA)&lt;br /&gt;['T1021.003']: Monitor for COM objects loading DLLs and other modules not typically associated with the application.(Citation: Enigma Outlook DCOM Lateral Movement Nov 2017)&lt;br /&gt;['T1218.011']: Analyzing DLL exports and comparing to runtime arguments may be useful in uncovering obfuscated function calls.&lt;br /&gt;['T1547.003']: There is no restriction on the number of custom time providers registrations, though each may require a DLL payload written to disk. (Citation: Github W32Time Oct 2017)&lt;br /&gt;['T1106']: Monitor DLL/PE file events, specifically creation of these binary files as well as the loading of DLLs into processes. Utilization of the Windows APIs may involve processes loading/accessing system DLLs associated with providing called functions (ex: ntdll.dll, kernel32.dll, advapi32.dll, user32.dll, and gdi32.dll). Monitoring for DLL loads, especially to abnormal/unusual or potentially malicious processes, may indicate abuse of the Windows API. Though noisy, this data can be combined with other indicators to identify adversary activity.&lt;br /&gt;['T1059.001']: Monitor for loading and/or execution of artifacts associated with PowerShell specific assemblies, such as System.Management.Automation.dll (especially to unusual process names/locations).(Citation: Sixdub PowerPick Jan 2016)(Citation: SilentBreak Offensive PS Dec 2015)&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Microsoft LoadLibrary" url="https://docs.microsoft.com/en-us/windows/win32/api/libloaderapi/nf-libloaderapi-loadlibrarya"/>
            <reference name="Microsoft Module Class" url="https://docs.microsoft.com/en-us/dotnet/api/system.reflection.module"/>
            <reference name="Mitre ATT&amp;CK Data Source DS0011" url="https://attack.mitre.org/datasources/DS0011"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:00.757">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-M1032" name="Multi-factor Authentication" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>Use two or more pieces of evidence to authenticate to a system; such as username and password in addition to a token from a physical smart card or token generator.&lt;br /&gt;&lt;p&gt;Detailed mitigations per technique:&lt;/p&gt;&lt;br /&gt;['T1098.001']: Use multi-factor authentication for user and privileged accounts. Consider enforcing multi-factor authentication for the &lt;code&gt;CreateKeyPair&lt;/code&gt; and &lt;code&gt;ImportKeyPair&lt;/code&gt; API calls through IAM policies.(Citation: Expel IO Evil in AWS)&lt;br /&gt;['T1040']: Use multi-factor authentication wherever possible.&lt;br /&gt;['T1136.001', 'T1136.002', 'T1136.003', 'T1098', 'T1098.003', 'T1136', 'T1098.002']: Use multi-factor authentication for user and privileged accounts.&lt;br /&gt;['T1556.003']: Integrating multi-factor authentication (MFA) as part of organizational policy can greatly reduce the risk of an adversary gaining control of valid credentials that may be used for additional tactics such as initial access, lateral movement, and collecting information.&lt;br /&gt;['T1556', 'T1556.001']: Integrating multi-factor authentication (MFA) as part of organizational policy can greatly reduce the risk of an adversary gaining control of valid credentials that may be used for additional tactics such as initial access, lateral movement, and collecting information. MFA can also be used to restrict access to cloud resources and APIs. &lt;br /&gt;['T1599', 'T1601', 'T1601.002', 'T1601.001']: Use multi-factor authentication for user and privileged accounts. Most embedded network devices support TACACS+ and/or RADIUS.  Follow vendor prescribed best practices for hardening access control.(Citation: Cisco IOS Software Integrity Assurance - TACACS)&lt;br /&gt;['T1114', 'T1114.002']: Use of multi-factor authentication for public-facing webmail servers is a recommended best practice to minimize the usefulness of usernames and passwords to adversaries.&lt;br /&gt;['T1621']: Implement more secure 2FA/MFA mechanisms in replacement of simple push or one-click 2FA/MFA options. For example, having users enter a one-time code provided by the login screen into the 2FA/MFA application or utilizing other out-of-band 2FA/MFA mechanisms (such as rotating code-based hardware tokens providing rotating codes that need an accompanying user pin) may be more secure. Furthermore, change default configurations and implement limits upon the maximum number of 2FA/MFA request prompts that can be sent to users in period of time.(Citation: MFA Fatigue Attacks - PortSwigger)&lt;br /&gt;['T1076']: Use multi-factor authentication for remote logins. (Citation: Berkley Secure)&lt;br /&gt;['T1078.002', 'T1078']: Integrating multi-factor authentication (MFA) as part of organizational policy can greatly reduce the risk of an adversary gaining control of valid credentials that may be used for additional tactics such as initial access, lateral movement, and collecting information. MFA can also be used to restrict access to cloud resources and APIs.&lt;br /&gt;['T1098.005']: Require multi-factor authentication to register devices in Azure AD.(Citation: Microsoft - Device Registration) Configure multi-factor authentication systems to disallow enrolling new devices for inactive accounts.(Citation: CISA MFA PrintNightmare)&lt;br /&gt;['T1110.003', 'T1110.001', 'T1110', 'T1110.004', 'T1110.002']: Use multi-factor authentication. Where possible, also enable multi-factor authentication on externally facing services.&lt;br /&gt;['T1078.004']: Use multi-factor authentication for cloud accounts, especially privileged accounts. This can be implemented in a variety of forms (e.g. hardware, virtual, SMS), and can also be audited using administrative reporting features.(Citation: AWS - IAM Console Best Practices)&lt;br /&gt;['T1021.004']: Require multi-factor authentication for SSH connections wherever possible, such as password protected SSH keys.&lt;br /&gt;['T1539']: A physical second factor key that uses the target login domain as part of the negotiation protocol will prevent session cookie theft through proxy methods.(Citation: Evilginx 2 July 2018)&lt;br /&gt;['T1599.001', 'T1556.004']: Use multi-factor authentication for user and privileged accounts. Most embedded network devices support TACACS+ and/or RADIUS.  Follow vendor prescribed best practices for hardening access control. (Citation: Cisco IOS Software Integrity Assurance - TACACS)&lt;br /&gt;['T1021.001']: Use multi-factor authentication for remote logins.(Citation: Berkley Secure)&lt;br /&gt;['T1017']: Use multi-factor authentication for accounts used with application deployment software.&lt;br /&gt;['T1072']: Ensure proper system and access isolation for critical network systems through use of multi-factor authentication.&lt;br /&gt;['T1021', 'T1021']: Use multi-factor authentication on remote service logons where possible.&lt;br /&gt;['T1133']: Use strong two-factor or multi-factor authentication for remote service accounts to mitigate an adversary's ability to leverage stolen credentials, but be aware of [Multi-Factor Authentication Interception](https://attack.mitre.org/techniques/T1111) techniques for some two-factor authentication implementations.&lt;br /&gt;['T1530']: Consider using multi-factor authentication to restrict access to resources and cloud storage APIs.(Citation: Amazon S3 Security, 2019)&lt;br /&gt;['T1213.003']: Use multi-factor authentication for logons to code repositories.&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Mitre ATT&amp;CK Mitigation M1032" url="https://attack.mitre.org/mitigations/M1032"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:00.895">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-M1030" name="Network Segmentation" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>Architect sections of the network to isolate critical systems, functions, or resources. Use physical and logical segmentation to prevent access to potentially sensitive systems and information. Use a DMZ to contain any internet-facing services that should not be exposed from the internal network. Configure separate virtual private cloud (VPC) instances to isolate critical cloud systems.&lt;br /&gt;&lt;p&gt;Detailed mitigations per technique:&lt;/p&gt;&lt;br /&gt;['T1565.003', 'T1565']: Identify critical business and system processes that may be targeted by adversaries and work to isolate and secure those systems against unauthorized access and tampering.&lt;br /&gt;['T1613', 'T1612', 'T1610', 'T1133', 'T1552.007']: Deny direct remote access to internal systems through the use of network proxies, gateways, and firewalls.&lt;br /&gt;['T1043']: Configure internal and external firewalls to block traffic using common ports that associate to network protocols that may be unnecessary for that particular network segment.&lt;br /&gt;['T1098', 'T1136.003', 'T1098.001']: Configure access controls and firewalls to limit access to critical systems and domain controllers. Most cloud environments support separate virtual private cloud (VPC) instances that enable further segmentation of cloud systems.&lt;br /&gt;['T1051']: Networks that allow for open development and testing of Web content and allow users to set up their own Web servers on the enterprise network may be particularly vulnerable if the systems and Web servers are not properly secured to limit unauthenticated network share access and network/system isolation&lt;br /&gt;['T1136', 'T1136.002']: Configure access controls and firewalls to limit access to domain controllers and systems used to create and manage accounts.&lt;br /&gt;['T1021.001', 'T1076']: Do not leave RDP accessible from the internet. Enable firewall rules to block RDP traffic between network security zones within a network.&lt;br /&gt;['T1190']: Segment externally facing servers and services from the rest of the network with a DMZ or on separate hosting infrastructure.&lt;br /&gt;['T1602.002']: Segregate SNMP traffic on a separate management network.(Citation: US-CERT TA17-156A SNMP Abuse 2017) &lt;br /&gt;['T1563.002']: Enable firewall rules to block RDP traffic between network security zones within a network.&lt;br /&gt;['T1489']: Operate intrusion detection, analysis, and response systems on a separate network from the production environment to lessen the chances that an adversary can see and interfere with critical response functions.&lt;br /&gt;['T1494']: Identify critical business and system processes that may be targeted by adversaries and work to isolate and secure those systems against unauthorized access and tampering. &lt;br /&gt;['T1175', 'T1021.003']: Enable Windows firewall, which prevents DCOM instantiation by default.&lt;br /&gt;['T1210']: Segment networks and systems appropriately to reduce access to critical systems and services to controlled methods.&lt;br /&gt;['T1048', 'T1048.002', 'T1048.003', 'T1048.001']: Follow best practices for network firewall configurations to allow only necessary ports and traffic to enter and exit the network.(Citation: TechNet Firewall Design)&lt;br /&gt;['T1094', 'T1095']: Properly configure firewalls and proxies to limit outgoing traffic to only necessary ports and through proper network gateway systems. Also ensure hosts are only provisioned to communicate over authorized interfaces.&lt;br /&gt;['T1482']: Employ network segmentation for sensitive domains.(Citation: Harmj0y Domain Trusts).&lt;br /&gt;['T1046']: Ensure proper network segmentation is followed to protect critical servers and devices.&lt;br /&gt;['T1563']: Enable firewall rules to block unnecessary traffic between network security zones within a network.&lt;br /&gt;['T1571', 'T1065']: Properly configure firewalls and proxies to limit outgoing traffic to only necessary ports for that particular network segment.&lt;br /&gt;['T1145']: Use separate infrastructure for managing critical systems to prevent overlap of credentials and permissions on systems that could be used as vectors for lateral movement.&lt;br /&gt;['T1072']: Ensure proper system isolation for critical network systems through use of firewalls.&lt;br /&gt;['T1557', 'T1557.001']: Network segmentation can be used to isolate infrastructure components that do not require broad network access. This may mitigate, or at least alleviate, the scope of AiTM activity.&lt;br /&gt;['T1602', 'T1602.001']: Segregate SNMP traffic on a separate management network.(Citation: US-CERT TA17-156A SNMP Abuse 2017)&lt;br /&gt;['T1028']: If the service is necessary, lock down critical enclaves with separate WinRM infrastructure and follow WinRM best practices on use of host firewalls to restrict WinRM access to allow communication only to/from specific devices. (Citation: NSA Spotting)&lt;br /&gt;['T1021.006']: If the service is necessary, lock down critical enclaves with separate WinRM infrastructure and follow WinRM best practices on use of host firewalls to restrict WinRM access to allow communication only to/from specific devices.(Citation: NSA Spotting)&lt;br /&gt;['T1017']: Ensure proper system and access isolation for critical network systems through use of firewalls, account privilege separation, group policy, and multi-factor authentication.&lt;br /&gt;['T1199']: Network segmentation can be used to isolate infrastructure components that do not require broad network access.&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Mitre ATT&amp;CK Mitigation M1030" url="https://attack.mitre.org/mitigations/M1030"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:00.885">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-M1027" name="Password Policies" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>Set and enforce secure password policies for accounts.&lt;br /&gt;&lt;p&gt;Detailed mitigations per technique:&lt;/p&gt;&lt;br /&gt;['T1599.001', 'T1599', 'T1110.004', 'T1110.002', 'T1601', 'T1110.001', 'T1110.003']: Refer to NIST guidelines when creating password policies. (Citation: NIST 800-63-3)&lt;br /&gt;['T1078.004']: Ensure that cloud accounts, particularly privileged accounts, have complex, unique passwords across all systems on the network. Passwords and access keys should be rotated regularly. This limits the amount of time credentials can be used to access resources if a credential is compromised without your knowledge. Cloud service providers may track access key age to help audit and identify keys that may need to be rotated.(Citation: AWS - IAM Console Best Practices)&lt;br /&gt;['T1075']: Ensure that built-in and created local administrator accounts have complex, unique passwords.&lt;br /&gt;['T1556.005', 'T1556']: Ensure that &lt;code&gt;AllowReversiblePasswordEncryption&lt;/code&gt; property is set to disabled unless there are application requirements.(Citation: store_pwd_rev_enc)&lt;br /&gt;['T1552.002', 'T1214']: Do not store credentials within the Registry.&lt;br /&gt;['T1550.003', 'T1097']: Ensure that local administrator accounts have complex, unique passwords.&lt;br /&gt;['T1537']: Consider rotating access keys within a certain number of days to reduce the effectiveness of stolen credentials.&lt;br /&gt;['T1552.004', 'T1145']: Use strong passphrases for private keys to make cracking difficult.&lt;br /&gt;['T1558.002', 'T1558.003', 'T1558']: Ensure strong password length (ideally 25+ characters) and complexity for service accounts and that these passwords periodically expire.(Citation: AdSecurity Cracking Kerberos Dec 2015) Also consider using Group Managed Service Accounts or another third party product such as password vaulting.(Citation: AdSecurity Cracking Kerberos Dec 2015)&lt;br /&gt;['T1003.003', 'T1003.006', 'T1003.002', 'T1003.004', 'T1003', 'T1003.005', 'T1078.003', 'T1003.001']: Ensure that local administrator accounts have complex, unique passwords across all systems on the network.&lt;br /&gt;['T1078']: Applications and appliances that utilize default username and password should be changed immediately after the installation, and before deployment to a production environment. (Citation: US-CERT Alert TA13-175A Risks of Default Passwords on the Internet) When possible, applications that use SSH keys should be updated periodically and properly secured.&lt;br /&gt;['T1552']: Use strong passphrases for private keys to make cracking difficult. Do not store credentials within the Registry. Establish an organizational policy that prohibits password storage in files.&lt;br /&gt;['T1503', 'T1555.003']: Organizations may consider weighing the risk of storing credentials in web browsers. If web browser credential disclosure is a significant concern, technical controls, policy, and user training may be used to prevent storage of credentials in web browsers.&lt;br /&gt;['T1187']: Use strong passwords to increase the difficulty of credential hashes from being cracked if they are obtained.&lt;br /&gt;['T1558.004']: Ensure strong password length (ideally 25+ characters) and complexity for service accounts and that these passwords periodically expire. Also consider using Group Managed Service Accounts or another third party product such as password vaulting. (Citation: AdSecurity Cracking Kerberos Dec 2015)&lt;br /&gt;['T1072']: Verify that account credentials that may be used to access deployment systems are unique and not used throughout the enterprise network.&lt;br /&gt;['T1003.007', 'T1003.008']: Ensure that root accounts have complex, unique passwords across all systems on the network.&lt;br /&gt;['T1078.001']: Applications and appliances that utilize default username and password should be changed immediately after the installation, and before deployment to a production environment. (Citation: US-CERT Alert TA13-175A Risks of Default Passwords on the Internet)&lt;br /&gt;['T1555.001', 'T1142']: The password for the user's login keychain can be changed from the user's login password. This increases the complexity for an adversary because they need to know an additional password.&lt;br /&gt;['T1081', 'T1552.001']: Establish an organizational policy that prohibits password storage in files.&lt;br /&gt;['T1077', 'T1021.002']: Do not reuse local administrator account passwords across systems. Ensure password complexity and uniqueness such that the passwords cannot be cracked or guessed.&lt;br /&gt;['T1563.001', 'T1184']: Ensure SSH key pairs have strong passwords and refrain from using key-store technologies such as ssh-agent unless they are properly protected.&lt;br /&gt;['T1555']: The password for the user's login keychain can be changed from the user's login password. This increases the complexity for an adversary because they need to know an additional password.

Organizations may consider weighing the risk of storing credentials in password stores and web browsers. If system, software, or web browser credential disclosure is a significant concern, technical controls, policy, and user training may be used to prevent storage of credentials in improper locations.&lt;br /&gt;['T1110']: Refer to NIST guidelines when creating password policies.(Citation: NIST 800-63-3)&lt;br /&gt;['T1601.002', 'T1601.001']: Refer to NIST guidelines when creating password policies.  (Citation: NIST 800-63-3)&lt;br /&gt;['T1201']: Ensure only valid password filters are registered. Filter DLLs must be present in Windows installation directory (&lt;code&gt;C:\Windows\System32\&lt;/code&gt; by default) of a domain controller and/or local computer with a corresponding entry in &lt;code&gt;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Lsa\Notification Packages&lt;/code&gt;. (Citation: Microsoft Install Password Filter n.d)&lt;br /&gt;['T1208']: Ensure strong password length (ideally 25+ characters) and complexity for service accounts and that these passwords periodically expire. (Citation: AdSecurity Cracking Kerberos Dec 2015) Also consider using Group Managed Service Accounts or another third party product such as password vaulting. (Citation: AdSecurity Cracking Kerberos Dec 2015)&lt;br /&gt;['T1555.005']: Refer to NIST guidelines when creating password policies for master passwords.(Citation: NIST 800-63-3)&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Mitre ATT&amp;CK Mitigation M1027" url="https://attack.mitre.org/mitigations/M1027"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:01.477">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-M1026" name="Privileged Account Management" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>Manage the creation, modification, use, and permissions associated to privileged accounts, including SYSTEM and root.&lt;br /&gt;&lt;p&gt;Detailed mitigations per technique:&lt;/p&gt;&lt;br /&gt;['T1053.005', 'T1053.002']: Configure the Increase Scheduling Priority option to only allow the Administrators group the rights to schedule a priority process. This can be configured through GPO: Computer Configuration &gt; [Policies] &gt; Windows Settings &gt; Security Settings &gt; Local Policies &gt; User Rights Assignment: Increase scheduling priority. (Citation: TechNet Scheduling Priority)&lt;br /&gt;['T1206']: Setting the &lt;code&gt;timestamp_timeout&lt;/code&gt; to 0 will require the user to input their password every time &lt;code&gt;sudo&lt;/code&gt; is executed.&lt;br /&gt;['T1550.003']: Limit domain admin account permissions to domain controllers and limited servers. Delegate other admin functions to separate accounts.(Citation: ADSecurity AD Kerberos Attacks)&lt;br /&gt;['T1505.004']: Do not allow administrator accounts that have permissions to add IIS components to be used for day-to-day operations that may expose these permissions to potential adversaries and/or other unprivileged systems.&lt;br /&gt;['T1556.005']: Audit domain and local accounts as well as their permission levels routinely to look for situations that could allow an adversary to gain wide access by obtaining credentials of a privileged account.(Citation: TechNet Credential Theft)(Citation: TechNet Least Privilege) These audits should also include if default accounts have been enabled, or if new local accounts are created that have not be authorized. Follow best practices for design and administration of an enterprise network to limit privileged account use across administrative tiers.(Citation: Microsoft Securing Privileged Access)&lt;br /&gt;['T1035', 'T1569.002', 'T1569']: Ensure that permissions disallow services that run at a higher permissions level from being created or interacted with by a user with a lower permission level.&lt;br /&gt;['T1214', 'T1552.002', 'T1552']: If it is necessary that software must store credentials in the Registry, then ensure the associated accounts have limited permissions so they cannot be abused if obtained by an adversary.&lt;br /&gt;['T1505.002', 'T1505.001']: Do not allow administrator accounts that have permissions to add component software on these services to be used for day-to-day operations that may expose them to potential adversaries on unprivileged systems. &lt;br /&gt;['T1075', 'T1550', 'T1550.002']: Limit credential overlap across systems to prevent the damage of credential compromise and reduce the adversary's ability to perform Lateral Movement between systems.&lt;br /&gt;['T1017']: Grant access to application deployment systems only to a limited number of authorized administrators.  Verify that account credentials that may be used to access deployment systems are unique and not used throughout the enterprise network.&lt;br /&gt;['T1169']: By requiring a password, even if an adversary can get terminal access, they must know the password to run anything in the sudoers file.&lt;br /&gt;['T1047', 'T1084']: Prevent credential overlap across systems of administrator and privileged accounts. (Citation: FireEye WMI 2015)&lt;br /&gt;['T1208']: Limit service accounts to minimal required privileges, including membership in privileged groups such as Domain Administrators. (Citation: AdSecurity Cracking Kerberos Dec 2015)&lt;br /&gt;['T1098.003']: Ensure that all accounts use the least privileges they require.&lt;br /&gt;['T1077', 'T1021.002']: Deny remote use of local admin credentials to log into systems. Do not allow domain user accounts to be in the local Administrators group multiple systems.&lt;br /&gt;['T1222.001', 'T1222.002', 'T1222']: Ensure critical system files as well as those known to be abused by adversaries have restrictive permissions and are owned by an appropriately privileged account, especially if access is not required by users nor will inhibit system functionality.&lt;br /&gt;['T1556.003']: Limit access to the root account and prevent users from modifying PAM components through proper privilege separation (ex SELinux, grsecurity, AppArmor, etc.) and limiting Privilege Escalation opportunities.&lt;br /&gt;['T1021.006', 'T1028']: If the service is necessary, lock down critical enclaves with separate WinRM accounts and permissions.&lt;br /&gt;['T1599', 'T1601.001', 'T1601.002', 'T1556.004', 'T1599.001', 'T1601']: Restrict administrator accounts to as few individuals as possible, following least privilege principles.  Prevent credential overlap across systems of administrator and privileged accounts, particularly between network and non-network platforms, such as servers or endpoints.&lt;br /&gt;['T1003.008']: Follow best practices in restricting access to privileged accounts to avoid hostile programs from accessing such sensitive information.&lt;br /&gt;['T1072']: Grant access to application deployment systems only to a limited number of authorized administrators.&lt;br /&gt;['T1553.006']: Limit the usage of local administrator and domain administrator accounts to be used for day-to-day operations that may expose them to potential adversaries.&lt;br /&gt;['T1484']: Use least privilege and protect administrative access to the Domain Controller and Active Directory Federation Services (AD FS) server. Do not create service accounts with administrative privileges.&lt;br /&gt;['T1076', 'T1563.002', 'T1021.001']: Consider removing the local Administrators group from the list of groups allowed to log in through RDP.&lt;br /&gt;['T1547.006', 'T1215']: Limit access to the root account and prevent users from loading kernel modules and extensions through proper privilege separation and limiting Privilege Escalation opportunities.&lt;br /&gt;['T1134.003', 'T1134.002', 'T1134', 'T1134.001']: Limit permissions so that users and user groups cannot create tokens. This setting should be defined for the local system account only. GPO: Computer Configuration &gt; [Policies] &gt; Windows Settings &gt; Security Settings &gt; Local Policies &gt; User Rights Assignment: Create a token object. (Citation: Microsoft Create Token) Also define who can create a process level token to only the local and network service through GPO: Computer Configuration &gt; [Policies] &gt; Windows Settings &gt; Security Settings &gt; Local Policies &gt; User Rights Assignment: Replace a process level token.(Citation: Microsoft Replace Process Token)

Administrators should log in as a standard user but run their tools with administrator privileges using the built-in access token manipulation command &lt;code&gt;runas&lt;/code&gt;.(Citation: Microsoft runas)&lt;br /&gt;['T1542.001', 'T1019']: Prevent adversary access to privileged accounts or access necessary to perform this technique.&lt;br /&gt;['T1078.002']: Audit domain account permission levels routinely to look for situations that could allow an adversary to gain wide access by obtaining credentials of a privileged account. Do not put user or admin domain accounts in the local administrator groups across systems unless they are tightly controlled and use of accounts is segmented, as this is often equivalent to having a local administrator account with the same password on all systems. Follow best practices for design and administration of an enterprise network to limit privileged account use across administrative tiers. Limit credential overlap across systems to prevent access if account credentials are obtained.&lt;br /&gt;['T1190']: Use least privilege for service accounts will limit what permissions the exploited process gets on the rest of the system.&lt;br /&gt;['T1078.004']: Review privileged cloud account permission levels routinely to look for those that could allow an adversary to gain wide access.(Citation: TechNet Credential Theft)(Citation: TechNet Least Privilege) These reviews should also check if new privileged cloud accounts have been created that were not authorized.&lt;br /&gt;['T1078.003']: Audit local accounts permission levels routinely to look for situations that could allow an adversary to gain wide access by obtaining credentials of a privileged account. (Citation: TechNet Credential Theft) (Citation: TechNet Least Privilege) These audits should check if new local accounts are created that have not be authorized. Implementing LAPS may help prevent reuse of local administrator credentials across a domain.(Citation: Microsoft Remote Use of Local)&lt;br /&gt;['T1558.002', 'T1558.003']: Limit service accounts to minimal required privileges, including membership in privileged groups such as Domain Administrators.(Citation: AdSecurity Cracking Kerberos Dec 2015)&lt;br /&gt;['T1612', 'T1611', 'T1053.007', 'T1609']: Ensure containers are not running as root by default. In Kubernetes environments, consider defining a Pod Security Policy that prevents pods from running privileged containers.(Citation: Kubernetes Hardening Guide)&lt;br /&gt;['T1484.002']: Use the principal of least privilege and protect administrative access to domain trusts.&lt;br /&gt;['T1098.002', 'T1098', 'T1136', 'T1136.002']: Do not allow domain administrator accounts to be used for day-to-day operations that may expose them to potential adversaries on unprivileged systems.&lt;br /&gt;['T1003.003', 'T1003.002', 'T1003.001', 'T1003.005', 'T1003.006']: Do not put user or admin domain accounts in the local administrator groups across systems unless they are tightly controlled, as this is often equivalent to having a local administrator account with the same password on all systems. Follow best practices for design and administration of an enterprise network to limit privileged account use across administrative tiers.&lt;br /&gt;['T1542.005']: Use of Authentication, Authorization, and Accounting (AAA) systems will limit actions administrators can perform and provide a history of user actions to detect unauthorized use and abuse. TACACS+ can keep control over which commands administrators are permitted to use through the configuration of authentication and command authorization. (Citation: Cisco IOS Software Integrity Assurance - AAA) (Citation: Cisco IOS Software Integrity Assurance - TACACS)&lt;br /&gt;['T1088', 'T1548.002']: Remove users from the local administrator group on systems.&lt;br /&gt;['T1606', 'T1606.002']: Restrict permissions and access to the AD FS server to only originate from privileged access workstations.(Citation: FireEye ADFS)&lt;br /&gt;['T1559.001', 'T1559']: Modify Registry settings (directly or using Dcomcnfg.exe) in `HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\AppID\\{AppID_GUID}` associated with the process-wide security of individual COM applications.(Citation: Microsoft Process Wide Com Keys)

Modify Registry settings (directly or using Dcomcnfg.exe) in `HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Ole` associated with system-wide security defaults for all COM applications that do no set their own process-wide security.(Citation: Microsoft System Wide Com Keys) (Citation: Microsoft COM ACL)&lt;br /&gt;['T1136.003']: Do not allow privileged accounts to be used for day-to-day operations that may expose them to potential adversaries on unprivileged systems.&lt;br /&gt;['T1218']: Restrict execution of particularly vulnerable binaries to privileged accounts or groups that need to use it to lessen the opportunities for malicious usage.&lt;br /&gt;['T1184', 'T1563.001']: Do not allow remote access via SSH as root or other privileged accounts.&lt;br /&gt;['T1097']: Limit domain admin account permissions to domain controllers and limited servers. Delegate other admin functions to separate accounts. (Citation: ADSecurity AD Kerberos Attacks)&lt;br /&gt;['T1055']: Utilize Yama (ex: /proc/sys/kernel/yama/ptrace_scope) to mitigate ptrace based process injection by restricting the use of ptrace to privileged users only. Other mitigation controls involve the deployment of security kernel modules that provide advanced access control and process restrictions such as SELinux, grsecurity, and AppArmor.&lt;br /&gt;['T1051']: Networks that allow for open development and testing of Web content and allow users to set up their own Web servers on the enterprise network may be particularly vulnerable if the systems and Web servers are not properly secured to limit privileged account use and unauthenticated network share access.&lt;br /&gt;['T1548']: Remove users from the local administrator group on systems.

By requiring a password, even if an adversary can get terminal access, they must know the password to run anything in the sudoers file. Setting the timestamp_timeout to 0 will require the user to input their password every time sudo is executed.&lt;br /&gt;['T1556.001', 'T1078']: Audit domain and local accounts as well as their permission levels routinely to look for situations that could allow an adversary to gain wide access by obtaining credentials of a privileged account. (Citation: TechNet Credential Theft) (Citation: TechNet Least Privilege) These audits should also include if default accounts have been enabled, or if new local accounts are created that have not be authorized. Follow best practices for design and administration of an enterprise network to limit privileged account use across administrative tiers. (Citation: Microsoft Securing Privileged Access)&lt;br /&gt;['T1552.007']: Use the principle of least privilege for privileged accounts such as the service account in Kubernetes.&lt;br /&gt;['T1098.001']: Do not allow domain administrator or root accounts to be used for day-to-day operations that may expose them to potential adversaries on unprivileged systems.&lt;br /&gt;['T1525']: Limit permissions associated with creating and modifying platform images or containers based on the principle of least privilege.&lt;br /&gt;['T1053']: Configure the Increase Scheduling Priority option to only allow the Administrators group the rights to schedule a priority process. This can be can be configured through GPO: Computer Configuration &gt; [Policies] &gt; Windows Settings &gt; Security Settings &gt; Local Policies &gt; User Rights Assignment: Increase scheduling priority. (Citation: TechNet Scheduling Priority)&lt;br /&gt;['T1100']: Audit account and group permissions to ensure that accounts used to manage servers do not overlap with accounts and permissions of users in the internal network that could be acquired through Credential Access and used to log into the Web server and plant a Web shell or pivot from the Web server into the internal network. (Citation: US-CERT Alert TA15-314A Web Shells)&lt;br /&gt;['T1542.003', 'T1067']: Ensure proper permissions are in place to help prevent adversary access to privileged accounts necessary to install a bootkit.&lt;br /&gt;['T1562.009']: Restrict administrator accounts to as few individuals as possible, following least privilege principles, that may be abused to remotely boot a machine in safe mode.(Citation: CyberArk Labs Safe Mode 2016)&lt;br /&gt;['T1175']: Modify Registry settings (directly or using Dcomcnfg.exe) in &lt;code&gt;HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\AppID\\{AppID_GUID}&lt;/code&gt; associated with the process-wide security of individual COM applications.(Citation: Microsoft Process Wide Com Keys)

Modify Registry settings (directly or using Dcomcnfg.exe) in &lt;code&gt;HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Ole&lt;/code&gt; associated with system-wide security defaults for all COM applications that do no set their own process-wide security.(Citation: Microsoft System Wide Com Keys) (Citation: Microsoft COM ACL)&lt;br /&gt;['T1210']: Minimize permissions and access for service accounts to limit impact of exploitation.&lt;br /&gt;['T1003']: Windows:
Do not put user or admin domain accounts in the local administrator groups across systems unless they are tightly controlled, as this is often equivalent to having a local administrator account with the same password on all systems. Follow best practices for design and administration of an enterprise network to limit privileged account use across administrative tiers.(Citation: Microsoft Securing Privileged Access)

Linux:
Scraping the passwords from memory requires root privileges. Follow best practices in restricting access to privileged accounts to avoid hostile programs from accessing such sensitive regions of memory.&lt;br /&gt;['T1558.001']: Limit domain admin account permissions to domain controllers and limited servers. Delegate other admin functions to separate accounts.&lt;br /&gt;['T1546.003']: Prevent credential overlap across systems of administrator and privileged accounts.(Citation: FireEye WMI 2015)&lt;br /&gt;['T1059', 'T1059.001']: When PowerShell is necessary, restrict PowerShell execution policy to administrators. Be aware that there are methods of bypassing the PowerShell execution policy, depending on environment configuration.(Citation: Netspi PowerShell Execution Policy Bypass)&lt;br /&gt;['T1056.003']: Do not allow administrator accounts that have permissions to modify the Web content of organization login portals to be used for day-to-day operations that may expose them to potential adversaries on unprivileged systems.&lt;br /&gt;['T1501', 'T1543.002']: The creation and modification of systemd service unit files is generally reserved for administrators such as the Linux root user and other users with superuser privileges. &lt;br /&gt;['T1086']: When PowerShell is necessary, restrict PowerShell execution policy to administrators. Be aware that there are methods of bypassing the PowerShell execution policy, depending on environment configuration. (Citation: Netspi PowerShell Execution Policy Bypass) &lt;br /&gt;['T1542']: Ensure proper permissions are in place to help prevent adversary access to privileged accounts necessary to perform these actions&lt;br /&gt;['T1495']: Prevent adversary access to privileged accounts or access necessary to replace system firmware.&lt;br /&gt;['T1136.001']: Limit the usage of local administrator accounts to be used for day-to-day operations that may expose them to potential adversaries.&lt;br /&gt;['T1003.004']: Follow best practices for design and administration of an enterprise network to limit privileged account use across administrative tiers.(Citation: Tilbury Windows Credentials)&lt;br /&gt;['T1055.008']: Utilize Yama (ex: /proc/sys/kernel/yama/ptrace_scope) to mitigate ptrace based process injection by restricting the use of ptrace to privileged users only. Other mitigation controls involve the deployment of security kernel modules that provide advanced access control and process restrictions such as SELinux, grsecurity, and AppArmor. &lt;br /&gt;['T1003.007']: Follow best practices in restricting access to privileged accounts to avoid hostile programs from accessing sensitive information.&lt;br /&gt;['T1556']: Audit domain and local accounts as well as their permission levels routinely to look for situations that could allow an adversary to gain wide access by obtaining credentials of a privileged account. (Citation: TechNet Credential Theft) (Citation: TechNet Least Privilege) These audits should also include if default accounts have been enabled, or if new local accounts are created that have not be authorized. Follow best practices for design and administration of an enterprise network to limit privileged account use across administrative tiers. (Citation: Microsoft Securing Privileged Access)

Limit access to the root account and prevent users from modifying protected components through proper privilege separation (ex SELinux, grsecurity, AppArmor, etc.) and limiting Privilege Escalation opportunities.&lt;br /&gt;['T1563']: Do not allow remote access to services as a privileged account unless necessary.&lt;br /&gt;['T1053.006']: Limit access to the root account and prevent users from creating and/or modifying systemd timer unit files. &lt;br /&gt;['T1021.003']: Modify Registry settings (directly or using Dcomcnfg.exe) in `HKEY_LOCAL_MACHINE\SOFTWARE\Classes\AppID\{{AppID_GUID}}` associated with the process-wide security of individual COM applications.(Citation: Microsoft Process Wide Com Keys)

Modify Registry settings (directly or using Dcomcnfg.exe) in `HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Ole` associated with system-wide security defaults for all COM applications that do not set their own process-wide security.(Citation: Microsoft System Wide Com Keys) (Citation: Microsoft COM ACL)&lt;br /&gt;['T1059.008']: Use of Authentication, Authorization, and Accounting (AAA) systems will limit actions administrators can perform and provide a history of user actions to detect unauthorized use and abuse. TACACS+ can keep control over which commands administrators are permitted to use through the configuration of authentication and command authorization(Citation: Cisco IOS Software Integrity Assurance - AAA) (Citation: Cisco IOS Software Integrity Assurance - TACACS)&lt;br /&gt;['T1218.007']: Restrict execution of Msiexec.exe to privileged accounts or groups that need to use it to lessen the opportunities for malicious usage.&lt;br /&gt;['T1505']: Do not allow administrator accounts that have permissions to add component software on these services to be used for day-to-day operations that may expose them to potential adversaries on unprivileged systems.&lt;br /&gt;['T1548.003', 'T1548.003', 'T1548.003']: By requiring a password, even if an adversary can get terminal access, they must know the password to run anything in the sudoers file. Setting the &lt;code&gt;timestamp_timeout&lt;/code&gt; to 0 will require the user to input their password every time &lt;code&gt;sudo&lt;/code&gt; is executed.&lt;br /&gt;['T1558']: Limit domain admin account permissions to domain controllers and limited servers. Delegate other admin functions to separate accounts.

Limit service accounts to minimal required privileges, including membership in privileged groups such as Domain Administrators.(Citation: AdSecurity Cracking Kerberos Dec 2015)&lt;br /&gt;['T1218']: If these binaries are required for use, then restrict execution of them to privileged accounts or groups that need to use them to lessen the opportunities for malicious use.&lt;br /&gt;['T1055']: ###Linux

Utilize Yama to mitigate ptrace based process injection by restricting the use of ptrace to privileged users only. Other mitigation controls involve the deployment of security kernel modules that provide advanced access control and process restrictions such as SELinux, grsecurity, and AppArmor.&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Mitre ATT&amp;CK Mitigation M1026" url="https://attack.mitre.org/mitigations/M1026"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:00.871">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-DS0009" name="Process" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>Instances of computer programs that are being executed by at least one thread. Processes have memory space for process executables, loaded modules (DLLs or shared libraries), and allocated memory regions containing everything from user input to application-specific data structures(Citation: Microsoft Processes and Threads)&lt;br /&gt;&lt;p&gt;Detailed detections per technique:&lt;/p&gt;&lt;br /&gt;['T1055.008']: Monitoring for Linux specific calls such as the ptrace system call should not generate large amounts of data due to their specialized nature, and can be a very effective method to detect some of the common process injection methods.(Citation: ArtOfMemoryForensics) (Citation: GNU Acct) (Citation: RHEL auditd) (Citation: Chokepoint preload rootkits)&lt;br /&gt;['T1055.014']: Monitor for malicious usage of system calls, such as ptrace and mmap, that can be used to attach to, manipulate memory, then redirect a processes' execution path. Monitoring for Linux specific calls such as the ptrace system call should not generate large amounts of data due to their specialized nature, and can be a very effective method to detect some of the common process injection methods.(Citation: ArtOfMemoryForensics)(Citation: GNU Acct)(Citation: RHEL auditd)(Citation: Chokepoint preload rootkits)&lt;br /&gt;['T1112']: Monitor for API calls associated with concealing Registry keys, such as Reghide. (Citation: Microsoft Reghide NOV 2006) Inspect and cleanup malicious hidden Registry entries using Native Windows API calls and/or tools such as Autoruns (Citation: SpectorOps Hiding Reg Jul 2017) and RegDelNull (Citation: Microsoft RegDelNull July 2016). &lt;br /&gt;['T1547']: Monitor for API calls that may configure system settings to automatically execute a program during system boot or logon to maintain persistence or gain higher-level privileges on compromised systems.&lt;br /&gt;['T1087.002']: Monitor for API calls that may attempt to gather information about domain accounts such as type of user, privileges and groups.&lt;br /&gt;['T1033']: Monitor for API calls that may attempt to dump credentials to obtain account login and credential material, normally in the form of a hash or a clear text password, from the operating system and software.&lt;br /&gt;['T1565.002']: Monitor for API calls associated with altering data. Remote access tools with built-in features may interact directly with the Windows API to gather information.&lt;br /&gt;['T1497.003']: Monitor for API calls that may employ various time-based methods to detect and avoid virtualization and analysis environments. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary's implementation and monitoring required.&lt;br /&gt;['T1082']: Monitor for API calls that may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). In cloud-based systems, native logging can be used to identify access to certain APIs and dashboards that may contain system information. Depending on how the environment is used, that data alone may not be useful due to benign use during normal operations.&lt;br /&gt;['T1622']: Monitor for API calls (such as &lt;code&gt;IsDebuggerPresent()&lt;/code&gt;) that may employ various means to detect and avoid debugged environments. Detecting actions related to debugger identification may be difficult depending on the adversary's implementation and monitoring required.&lt;br /&gt;['T1542.002']: Monitor for API calls associated with the use of device drivers and/or provided by SMART (Self-Monitoring, Analysis and Reporting Technology) (Citation: SanDisk SMART) (Citation: SmartMontools) disk monitoring may reveal malicious manipulations of components. Otherwise, this technique may be difficult to detect since malicious activity is taking place on system components possibly outside the purview of OS security and integrity mechanisms.&lt;br /&gt;['T1125']: Detection of this technique may be difficult due to the various APIs that may be used. Telemetry data regarding API use may not be useful depending on how a system is normally used, but may provide context to other potentially malicious activity occurring on a system. Behavior that could indicate technique use include an unknown or unusual process accessing APIs associated with devices or software that interact with the video camera, recording devices, or recording software, and a process periodically writing files to disk that contain video or camera image data.&lt;br /&gt;['T1120']: Monitor for API calls that may attempt to gather information about attached peripheral devices and components connected to a computer system.&lt;br /&gt;['T1057']: Monitor for API calls may attempt to get information about running processes on a system. &lt;br /&gt;['T1055.003']: Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such as &lt;code&gt;CreateRemoteThread&lt;/code&gt;, &lt;code&gt;SuspendThread&lt;/code&gt;/&lt;code&gt;SetThreadContext&lt;/code&gt;/&lt;code&gt;ResumeThread&lt;/code&gt;, and those that can be used to modify memory within another process, such as &lt;code&gt;VirtualAllocEx&lt;/code&gt;/&lt;code&gt;WriteProcessMemory&lt;/code&gt;, may be used for this technique.(Citation: Elastic Process Injection July 2017)&lt;br /&gt;['T1135']: Monitor for API calls that may look for folders and drives shared on remote systems as a means of identifying sources of information to gather as a precursor for Collection and to identify potential systems of interest for Lateral Movement.&lt;br /&gt;['T1574.013']: Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances. for known bad sequence of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such as &lt;code&gt;WriteProcessMemory()&lt;/code&gt; and &lt;code&gt;NtQueryInformationProcess()&lt;/code&gt; with the parameter set to &lt;code&gt;ProcessBasicInformation&lt;/code&gt; may be used for this technique.(Citation: Lazarus APT January 2022)&lt;br /&gt;['T1489']: Remote access tools with built-in features may interact directly with the Windows API to perform these functions outside of typical system utilities. For example, &lt;code&gt;ChangeServiceConfigW&lt;/code&gt; may be used by an adversary to prevent services from starting.(Citation: Talos Olympic Destroyer 2018)&lt;br /&gt;['T1134']: Monitor for API calls, loaded by a payload, for token manipulation only through careful analysis of user network activity, examination of running processes, and correlation with other endpoint and network behavior. There are many Windows API calls a payload can take advantage of to manipulate access tokens (e.g., &lt;code&gt;LogonUser&lt;/code&gt; (Citation: Microsoft LogonUser), &lt;code&gt;DuplicateTokenEx&lt;/code&gt;(Citation: Microsoft DuplicateTokenEx), and &lt;code&gt;ImpersonateLoggedOnUser&lt;/code&gt;(Citation: Microsoft ImpersonateLoggedOnUser)). Please see the referenced Windows API pages for more information.&lt;br /&gt;['T1555.005']: Monitor for API calls that may search for common password storage locations to obtain user credentials.&lt;br /&gt;['T1115']: Monitor API calls that could collect data stored in the clipboard from users copying information within or between applications.&lt;br /&gt;['T1556']: Monitor for calls to &lt;code&gt;OpenProcess&lt;/code&gt; that can be used to manipulate lsass.exe running on a domain controller as well as for malicious modifications to functions exported from authentication-related system DLLs (such as cryptdll.dll and samsrv.dll).(Citation: Dell Skeleton)&lt;br /&gt;['T1070']: Monitor for API calls that may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined malware.&lt;br /&gt;['T1087.001']: Monitor for API calls (such as &lt;code&gt;NetUserEnum()&lt;/code&gt;) that may attempt to gather local accounts information such as type of user, privileges and groups.&lt;br /&gt;['T1056.001']: Monitor for API calls to the SetWindowsHook, GetKeyState, and GetAsyncKeyState.(Citation: Adventures of a Keystroke) and look for common keylogging API calls. API calls alone are not an indicator of keylogging, but may provide behavioral data that is useful when combined with other information such as new files written to disk and unusual processes.&lt;br /&gt;['T1005']: Monitor for API calls that may search local system sources, such as file systems or local databases, to find files of interest and sensitive data prior to Exfiltration. &lt;br /&gt;['T1548']: Also look for any process API calls for behavior that may be indicative of [Process Injection](https://attack.mitre.org/techniques/T1055). Monitoring OS API callbacks for the execution can also be a way to detect this behavior but requires specialized security tooling.&lt;br /&gt;['T1055.004']: Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such as &lt;code&gt;SuspendThread&lt;/code&gt;/&lt;code&gt;SetThreadContext&lt;/code&gt;/&lt;code&gt;ResumeThread&lt;/code&gt;, &lt;code&gt;QueueUserAPC&lt;/code&gt;/&lt;code&gt;NtQueueApcThread&lt;/code&gt;, and those that can be used to modify memory within another process, such as &lt;code&gt;VirtualAllocEx&lt;/code&gt;/&lt;code&gt;WriteProcessMemory&lt;/code&gt;, may be used for this technique.(Citation: Elastic Process Injection July 2017)&lt;br /&gt;['T1134.002']: Monitor for API calls associated with detecting token manipulation only through careful analysis of user activity, examination of running processes, and correlation with other endpoint and network behavior. Analysts can also monitor for use of Windows APIs such as &lt;code&gt;CreateProcessWithTokenW&lt;/code&gt; and correlate activity with other suspicious behavior to reduce false positives that may be due to normal benign use by users and administrators.&lt;br /&gt;['T1546.009']: Monitor and analyze application programming interface (API) calls that are indicative of Registry edits, such as &lt;code&gt;RegCreateKeyEx&lt;/code&gt; and &lt;code&gt;RegSetValueEx&lt;/code&gt;. (Citation: Elastic Process Injection July 2017)&lt;br /&gt;['T1518']: Monitor for API calls that may attempt to get a listing of software and software versions that are installed on a system or in a cloud environment.&lt;br /&gt;['T1497.002']: Monitor for API calls that may employ various means to detect and avoid virtualization and analysis environments. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary's implementation and monitoring required.&lt;br /&gt;['T1055.011']: Monitor for API calls related to enumerating and manipulating EWM such as GetWindowLong (Citation: Microsoft GetWindowLong function) and SetWindowLong (Citation: Microsoft SetWindowLong function). Malware associated with this technique have also used SendNotifyMessage (Citation: Microsoft SendNotifyMessage function) to trigger the associated window procedure and eventual malicious injection. (Citation: Elastic Process Injection July 2017)&lt;br /&gt;['T1012']: Monitor for API calls (such as &lt;code&gt;RegOpenKeyExA&lt;/code&gt;) that may interact with the Windows Registry to gather information about the system, configuration, and installed software. &lt;br /&gt;['T1614']: Remote access tools with built-in features may interact directly with the Windows API, such as calling &lt;code&gt; GetLocaleInfoW&lt;/code&gt; to gather information.(Citation: FBI Ragnar Locker 2020)&lt;br /&gt;['T1555.001']: Monitor for Keychain Services API calls, specifically legacy extensions such as &lt;code&gt;SecKeychainFindInternetPassword&lt;/code&gt;, that may collect Keychain data from a system to acquire credentials.(Citation: Keychain Items Apple Dev API)&lt;br /&gt;['T1106']: Monitoring API calls may generate a significant amount of data and may not be useful for defense unless collected under specific circumstances, since benign use of API functions are common and may be difficult to distinguish from malicious behavior. Correlation of other events with behavior surrounding API function calls using API monitoring will provide additional context to an event that may assist in determining if it is due to malicious behavior. Correlation of activity by process lineage by process ID may be sufficient.&lt;br /&gt;['T1218']: Monitor for API calls that may forge credential materials that can be used to gain access to web applications or Internet services. &lt;br /&gt;['T1070.001']: Monitor for Windows API calls that may clear Windows Event Logs to hide the activity of an intrusion.&lt;br /&gt;['T1611']: Remote access tools with built-in features may interact directly with the Windows API, such as calling &lt;code&gt;GetLocaleInfoW()&lt;/code&gt; to gather system location information.(Citation: FBI Ragnar Locker 2020)&lt;br /&gt;['T1111']: Monitor for API calls associated with polling to intercept keystrokes.&lt;br /&gt;['T1003.001']: Monitor for API calls that may attempt to access credential material stored in the process memory of the Local Security Authority Subsystem Service (LSASS).&lt;br /&gt;['T1049']: Monitor for API calls that may attempt to get a listing of network connections to or from the compromised system they are currently accessing or from remote systems by querying for information over the network.&lt;br /&gt;['T1482']: Monitor for API calls associated with gathering information on domain trust relationships that may be used to identify lateral movement like DSEnumerateDomainTrusts() Win32 API call to spot activity associated with Domain Trust Discovery.(Citation: Harmj0y Domain Trusts) Information may also be acquired through Windows system management tools such as PowerShell. The .NET method GetAllTrustRelationships() can be an indicator of Domain Trust Discovery.(Citation: Microsoft GetAllTrustRelationships)&lt;br /&gt;['T1129']: Monitor for API calls that may execute malicious payloads via loading shared modules.&lt;br /&gt;['T1124']: Monitor for API calls that may gather the system time and/or time zone from a local or remote system. Remote access tools with built-in features may interact directly with the Windows API to gather information.&lt;br /&gt;['T1542']: Monitor for API calls that may abuse Pre-OS Boot mechanisms as a way to establish persistence on a system. Disk check, forensic utilities, and data from device drivers (i.e. API calls) may reveal anomalies that warrant deeper investigation. (Citation: ITWorld Hard Disk Health Dec 2014)&lt;br /&gt;['T1055']: Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such as &lt;code&gt;CreateRemoteThread&lt;/code&gt;, &lt;code&gt;SuspendThread&lt;/code&gt;/&lt;code&gt;SetThreadContext&lt;/code&gt;/&lt;code&gt;ResumeThread&lt;/code&gt;, &lt;code&gt;QueueUserAPC&lt;/code&gt;/&lt;code&gt;NtQueueApcThread&lt;/code&gt;, and those that can be used to modify memory within another process, such as &lt;code&gt;VirtualAllocEx&lt;/code&gt;/&lt;code&gt;WriteProcessMemory&lt;/code&gt;, may be used for this technique.(Citation: Elastic Process Injection July 2017) Monitoring for Linux specific calls such as the ptrace system call should not generate large amounts of data due to their specialized nature, and can be a very effective method to detect some of the common process injection methods.(Citation: ArtOfMemoryForensics) (Citation: GNU Acct) (Citation: RHEL auditd) (Citation: Chokepoint preload rootkits)&lt;br /&gt;['T1055.002']: Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such as &lt;code&gt;CreateRemoteThread&lt;/code&gt; and those that can be used to modify memory within another process, such as &lt;code&gt;VirtualAllocEx&lt;/code&gt;/&lt;code&gt;WriteProcessMemory&lt;/code&gt;, may be used for this technique.(Citation: Elastic Process Injection July 2017)&lt;br /&gt;['T1547.010']: Monitor process API calls to &lt;code&gt;AddMonitor&lt;/code&gt;.(Citation: AddMonitor)&lt;br /&gt;['T1614.001']: Monitor for API calls that may attempt to gather information about the system language of a victim in order to infer the geographical location of that host.&lt;br /&gt;['T1056.004']: Monitor for API calls to the SetWindowsHookEx and SetWinEventHook functions, which install a hook procedure.(Citation: Microsoft Hook Overview)(Citation: Volatility Detecting Hooks Sept 2012) Also consider analyzing hook chains (which hold pointers to hook procedures for each type of hook) using tools(Citation: Volatility Detecting Hooks Sept 2012)(Citation: PreKageo Winhook Jul 2011)(Citation: Jay GetHooks Sept 2011) or by programmatically examining internal kernel structures.(Citation: Zairon Hooking Dec 2006)(Citation: EyeofRa Detecting Hooking June 2017)&lt;br /&gt;['T1548.004']: Monitoring OS API callbacks for the execution can also be a way to detect this behavior but requires specialized security tooling.&lt;br /&gt;['T1555.004']: Consider monitoring API calls such as &lt;code&gt;CredEnumerateA&lt;/code&gt; that may list credentials from the Windows Credential Manager.(Citation: Microsoft CredEnumerate)(Citation: Delpy Mimikatz Crendential Manager)&lt;br /&gt;['T1218.002']: Monitor for API calls that may forge web cookies that can be used to gain access to web applications or Internet services.&lt;br /&gt;['T1620']: Monitor for code artifacts associated with reflectively loading code, such as the abuse of .NET functions such as &lt;code&gt;Assembly.Load()&lt;/code&gt; and [Native API](https://attack.mitre.org/techniques/T1106) functions such as &lt;code&gt;CreateThread()&lt;/code&gt;, &lt;code&gt;memfd_create()&lt;/code&gt;, &lt;code&gt;execve()&lt;/code&gt;, and/or &lt;code&gt;execveat()&lt;/code&gt;.(Citation: 00sec Droppers)(Citation: S1 Old Rat New Tricks)&lt;br /&gt;['T1055.013']: Monitor and analyze calls to &lt;code&gt;CreateTransaction&lt;/code&gt;, &lt;code&gt;CreateFileTransacted&lt;/code&gt;, &lt;code&gt;RollbackTransaction&lt;/code&gt;, and other rarely used functions indicative of TxF activity. Process Doppelganging also invokes an outdated and undocumented implementation of the Windows process loader via calls to &lt;code&gt;NtCreateProcessEx&lt;/code&gt; and &lt;code&gt;NtCreateThreadEx&lt;/code&gt; as well as API calls used to modify memory within another process, such as &lt;code&gt;WriteProcessMemory&lt;/code&gt;. (Citation: BlackHat Process Doppelganging Dec 2017) (Citation: hasherezade Process Doppelganging Dec 2017)&lt;br /&gt;['T1543']: Monitor for API calls that may create or modify system-level processes to repeatedly execute malicious payloads as part of persistence.&lt;br /&gt;['T1556.001']: Monitor for API calls to OpenProcess that can be used to manipulate lsass.exe running on a domain controller&lt;br /&gt;['T1055.015']: Consider monitoring for excessive use of &lt;code&gt;SendMessage&lt;/code&gt; and/or &lt;code&gt;PostMessage&lt;/code&gt; API functions with &lt;code&gt;LVM_SETITEMPOSITION&lt;/code&gt; and/or &lt;code&gt;LVM_GETITEMPOSITION&lt;/code&gt; arguments.

Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such as &lt;code&gt;FindWindow&lt;/code&gt;, &lt;code&gt;FindWindowEx&lt;/code&gt;, &lt;code&gt;EnumWindows&lt;/code&gt;, &lt;code&gt;EnumChildWindows&lt;/code&gt;, and those that can be used to modify memory within another process, such as &lt;code&gt;VirtualAllocEx&lt;/code&gt;/&lt;code&gt;WriteProcessMemory&lt;/code&gt;, may be abused for this technique. &lt;br /&gt;['T1547.012']: Monitor process API calls to &lt;code&gt;AddPrintProcessor&lt;/code&gt; and &lt;code&gt;GetPrintProcessorDirectory&lt;/code&gt;.&lt;br /&gt;['T1016']: Monitor for API calls (such as &lt;code&gt;GetAdaptersInfo()&lt;/code&gt; and &lt;code&gt;GetIpNetTable()&lt;/code&gt;) that may gather details about the network configuration and settings, such as IP and/or MAC addresses.&lt;br /&gt;['T1113']: Monitoring for screen capture behavior will depend on the method used to obtain data from the operating system and write output files. Detection methods could include collecting information from unusual processes using API calls used to obtain image data, and monitoring for image files written to disk, such as &lt;code&gt;CopyFromScreen&lt;/code&gt;, &lt;code&gt;xwd&lt;/code&gt;, or &lt;code&gt;screencapture&lt;/code&gt;.(Citation: CopyFromScreen .NET)(Citation: Antiquated Mac Malware). The sensor data may need to be correlated with other events to identify malicious activity, depending on the legitimacy of this behavior within a given network environment.&lt;br /&gt;['T1564']: Monitor for API calls that may attempt to hide artifacts associated with their behaviors to evade detection.&lt;br /&gt;['T1518.001']: Monitor for API calls that may attempt to get a listing of security software, configurations, defensive tools, and sensors that are installed on a system or in a cloud environment.&lt;br /&gt;['T1056']: Monitor for API calls to SetWindowsHook, GetKeyState, and GetAsyncKeyState (Citation: Adventures of a Keystroke)&lt;br /&gt;['T1010']: Monitor for API calls (such as &lt;code&gt;GetForegroundWindow()&lt;/code&gt;) that may attempt to get a listing of open application windows. &lt;br /&gt;['T1059.002']: Monitor for execution of AppleScript through &lt;code&gt;osascript&lt;/code&gt; and usage of the &lt;code&gt;NSAppleScript&lt;/code&gt; and &lt;code&gt;OSAScript&lt;/code&gt; APIs that may be related to other suspicious behavior occurring on the system.&lt;br /&gt;['T1546.010']: Monitor and analyze application programming interface (API) calls that are indicative of Registry edits such as &lt;code&gt;RegCreateKeyEx&lt;/code&gt; and &lt;code&gt;RegSetValueEx&lt;/code&gt;. (Citation: Elastic Process Injection July 2017)&lt;br /&gt;['T1543.003']: Monitor for API calls that may create or modify Windows services (ex: ` CreateServiceW()`) to repeatedly execute malicious payloads as part of persistence.&lt;br /&gt;['T1083']: Monitor for API calls that may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system.&lt;br /&gt;['T1555.003']: Monitor for API calls that may acquire credentials from web browsers by reading files specific to the target browser.(Citation: Talos Olympic Destroyer 2018)&lt;br /&gt;['T1564.004']: Monitor calls to the &lt;code&gt;ZwSetEaFile&lt;/code&gt; and &lt;code&gt;ZwQueryEaFile&lt;/code&gt; Windows API functions as well as binaries used to interact with EA, (Citation: Oddvar Moe ADS1 Jan 2018) (Citation: Oddvar Moe ADS2 Apr 2018) and consider regularly scanning for the presence of modified information. (Citation: SpectorOps Host-Based Jul 2017)&lt;br /&gt;['T1564.001']: Monitor newly executed processes that may set files and directories to be hidden to evade detection mechanisms.&lt;br /&gt;['T1546.010']: Monitor newly executed processes that may establish persistence and/or elevate privileges by executing malicious content triggered by AppInit DLLs loaded into processes.&lt;br /&gt;['T1490']: Use process monitoring to monitor the execution and command line parameters of binaries involved in inhibiting system recovery, such as vssadmin, wbadmin, and bcdedit.&lt;br /&gt;['T1218.011']: Use process monitoring to monitor the execution and arguments of rundll32.exe. Compare recent invocations of rundll32.exe with prior history of known good arguments and loaded DLLs to determine anomalous and potentially adversarial activity.&lt;br /&gt;['T1489']: Monitor for newly executed processes that may stop or disable services on a system to render those services unavailable to legitimate users.&lt;br /&gt;['T1057']: Monitor for newly executed processes that may attempt to get information about running processes on a system.&lt;br /&gt;['T1547.015']: Monitor processes that start at login for unusual or unknown applications. Usual applications for login items could include what users add to configure their user environment, such as email, chat, or music applications, or what administrators include for organization settings and protections. Check for running applications from login items that also have abnormal behavior, such as establishing network connections.&lt;br /&gt;['T1069']: Monitor for newly constructed processes and/or command-lines for actions that could be taken to gather system and network information. System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.&lt;br /&gt;['T1546.015']: Monitor newly executed processes that may establish persistence by executing malicious content triggered by hijacked references to Component Object Model (COM) objects.&lt;br /&gt;['T1140']: Monitor for newly executed processes that attempt to hide artifacts of an intrusion, such as common archive file applications and extensions (ex: Zip and RAR archive tools), and correlate with other suspicious behavior to reduce false positives from normal user and administrator behavior.&lt;br /&gt;['T1546.001']: Monitor for newly executed processes that may establish persistence by executing malicious content triggered by a file type association.&lt;br /&gt;['T1222.002']: Monitor for newly executed processes that may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files.(Citation: Hybrid Analysis Icacls1 June 2018)(Citation: Hybrid Analysis Icacls2 May 2018)&lt;br /&gt;['T1087.002']: Monitor for processes that can be used to enumerate domain accounts and groups, such as &lt;code&gt;net.exe&lt;/code&gt; and &lt;code&gt;net1.exe&lt;/code&gt;, especially when executed in quick succession.(Citation: Elastic - Koadiac Detection with EQL)
 
Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.&lt;br /&gt;['T1547.009']: Monitor for newly executed processes that may create or edit shortcuts to run a program during system boot or user login.&lt;br /&gt;['T1622']: Monitoring for suspicious processes being spawned that gather a variety of system information or perform other forms of Discovery, especially in a short period of time, may aid in detection. Debugger related system checks will likely occur in the first steps of an operation but may also occur throughout as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained.&lt;br /&gt;['T1611']: Monitor for process activity (such as unexpected processes spawning outside a container and/or on a host) that might indicate an attempt to escape from a privileged container to host. &lt;br /&gt;['T1569.001']: Monitor for newly executed daemons that may abuse launchctl to execute commands or programs.&lt;br /&gt;['T1217']: Monitor newly constructed processes, e.g. browsers, for to gather personal information about users (ex: banking sites, interests, social media, etc.)&lt;br /&gt;['T1546.004']: Monitor newly executed processes that may establish persistence through executing malicious commands triggered by a user's shell.&lt;br /&gt;['T1056']: Monitor for newly executed processes conducting malicious activity &lt;br /&gt;['T1548.004']: Consider monitoring for &lt;code&gt;/usr/libexec/security_authtrampoline&lt;/code&gt; executions which may indicate that &lt;code&gt;AuthorizationExecuteWithPrivileges&lt;/code&gt; is being executed. MacOS system logs may also indicate when &lt;code&gt;AuthorizationExecuteWithPrivileges&lt;/code&gt; is being called.&lt;br /&gt;['T1548']: Monitor for newly executed processes that may circumvent mechanisms designed to control elevate privileges to gain higher-level permissions.&lt;br /&gt;['T1218.012']: Use process monitoring to monitor the execution and arguments of verclsid.exe. Compare recent invocations of verclsid.exe with prior history of known good arguments and loaded files to determine anomalous and potentially adversarial activity. Depending on the environment, it may be unusual for verclsid.exe to have a parent process of a Microsoft Office product. It may also be unusual for verclsid.exe to have any child processes or to make network connections or file modifications.&lt;br /&gt;['T1559']: Monitor for newly executed processes that are associated with abuse of IPC mechanisms&lt;br /&gt;['T1553.001']: Monitor and investigate attempts to modify extended file attributes with utilities such as &lt;code&gt;xattr&lt;/code&gt;. Built-in system utilities may generate high false positive alerts, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible. &lt;br /&gt;['T1059.004']: Monitor for newly executed processes that may abuse Unix shell commands and scripts for execution.&lt;br /&gt;['T1059']: Monitor log files for process execution through command-line and scripting activities. This information can be useful in gaining additional insight to adversaries' actions through how they use native processes or custom tools. Also monitor for loading of modules associated with specific languages.&lt;br /&gt;['T1016.001']: Monitor for executed processes (such as tracert or ping) that may check for Internet connectivity on compromised systems.&lt;br /&gt;['T1574.008']: Monitor for newly executed processes  for process executable paths that are named for partial directories.&lt;br /&gt;['T1137.005']: Monitor newly executed processes that may abuse Microsoft Outlook rules to obtain persistence on a compromised system.&lt;br /&gt;['T1614.001']: Monitor for newly executed processes that may attempt to gather information about the system language of a victim in order to infer the geographical location of that host.&lt;br /&gt;['T1559.002']: Monitor for newly executed processes that may use Windows Dynamic Data Exchange (DDE) to execute arbitrary commands.&lt;br /&gt;['T1518.001']: Monitor newly executed processes that may attempt to get a listing of security software, configurations, defensive tools, and sensors that are installed on a system or in a cloud environment.&lt;br /&gt;['T1482']: Monitor for newly executed processes that may attempt to gather information on domain trust relationships that may be used to identify lateral movement opportunities in Windows multi-domain/forest environments.&lt;br /&gt;['T1505.003']: Web shells can be difficult to detect. Unlike other forms of persistent remote access, they do not initiate connections. The portion of the Web shell that is on the server may be small and innocuous looking. The PHP version of the China Chopper Web shell, for example, is the following short payload: (Citation: Lee 2013)
&lt;code&gt;&lt;?php @eval($_POST['password']);&gt;&lt;/code&gt;
Nevertheless, detection mechanisms exist. Process monitoring may be used to detect Web servers that perform suspicious actions such as spawning cmd.exe or accessing files that are not in the Web directory.(Citation: NSA Cyber Mitigating Web Shells)&lt;br /&gt;['T1543']: New, benign system processes may be created during installation of new software.&lt;br /&gt;['T1574.012']: Monitor for newly executed processes, such as setx.exe, that may abuse of the COR_PROFILER variable, monitor for new suspicious unmanaged profiling DLLs loading into .NET processes shortly after the CLR causing abnormal process behavior.(Citation: Red Canary COR_PROFILER May 2020)&lt;br /&gt;['T1003']: Monitor for newly executed processes that may be indicative of credential dumping. On Windows 8.1 and Windows Server 2012 R2, monitor Windows Logs for LSASS.exe creation to verify that LSASS started as a protected process.&lt;br /&gt;['T1134.004']: Monitor for newly constructed processes and/or command-lines that may abuse mechanisms to evade defenses, such as those blocking processes spawning directly from Office documents, and analysis targeting unusual/potentially malicious parent-child process relationships, such as spoofing the PPID of PowerShell/Rundll32 to be explorer.exe&lt;br /&gt;['T1485']: Monitor for newly executed processes of binaries that could be involved in data destruction activity, such as SDelete.&lt;br /&gt;['T1087.003']: Monitor for newly executed processes, such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001) , with arguments that can be used to enumerate email addresses and accounts.&lt;br /&gt;['T1037.004']: Monitor for newly constructed processes and/or command-lines that  execute /etc/rc.local if present.&lt;br /&gt;['T1069.003']: Monitor newly executed processes that may attempt to find cloud groups and permission settings.&lt;br /&gt;['T1563.001']: Monitor newly executed processes that may hijack a legitimate user's SSH session to move laterally within an environment.&lt;br /&gt;['T1547.014']: Monitor newly executed processes that may achieve persistence by adding a Registry key to the Active Setup of the local machine.&lt;br /&gt;['T1021.004']: Monitor for newly executed processes that may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to log into remote machines using Secure Shell (SSH). For example, on macOS systems &lt;code&gt;log show --predicate 'process = "sshd"'&lt;/code&gt; can be used to review incoming SSH connection attempts for suspicious activity. The command &lt;code&gt;log show --info --predicate 'process = "ssh" or eventMessage contains "ssh"'&lt;/code&gt; can be used to review outgoing SSH connection activity.(Citation: Apple Unified Log Analysis Remote Login and Screen Sharing)&lt;br /&gt;['T1562.009']: Monitor newly executed processes that may abuse Windows safe mode to disable endpoint defenses.&lt;br /&gt;['T1010']: Monitor for newly executed processes that may attempt to get a listing of open application windows. System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.&lt;br /&gt;['T1529']: Monitor for newly executed processes of binaries involved in shutting down or rebooting systems.&lt;br /&gt;['T1136.002']: Monitor newly executed processes associated with account creation, such as net.exe&lt;br /&gt;['T1553.004']: Monitor for processes, such as &lt;code&gt;certmgr.exe&lt;/code&gt; (macOS) or &lt;code&gt;certutil.exe&lt;/code&gt; (Windows), that can be used to install root certificates. A system's root certificates are unlikely to change frequently. Monitor new certificates installed on a system that could be due to malicious activity. (Citation: SpectorOps Code Signing Dec 2017) Check pre-installed certificates on new systems to ensure unnecessary or suspicious certificates are not present. Microsoft provides a list of trustworthy root certificates online and through &lt;code&gt;authroot.stl&lt;/code&gt;. (Citation: SpectorOps Code Signing Dec 2017) The Sysinternals Sigcheck utility can also be used (&lt;code&gt;sigcheck[64].exe -tuv&lt;/code&gt;) to dump the contents of the certificate store and list valid certificates not rooted to the Microsoft Certificate Trust List. (Citation: Microsoft Sigcheck May 2017)&lt;br /&gt;['T1059.001']: Monitor for newly executed processes that may abuse PowerShell commands and scripts for execution.&lt;br /&gt;['T1552.002']: Monitor newly executed processes for applications that can be used to query the Registry, such as [Reg](https://attack.mitre.org/software/S0075), and collect command parameters that may indicate credentials are being searched. Correlate activity with related suspicious behavior that may indicate an active intrusion to reduce false positives.&lt;br /&gt;['T1053']: Monitor for newly executed processes that may abuse task scheduling functionality to facilitate initial or recurring execution of malicious code.&lt;br /&gt;['T1547.003']: Monitor newly executed processes, such as the W32tm.exe utility. (Citation: Microsoft W32Time May 2017) The Sysinternals Autoruns tool may also be used to analyze auto-starting locations, including DLLs listed as time providers. (Citation: TechNet Autoruns)&lt;br /&gt;['T1098']: Monitor for newly constructed processes indicative of modifying account settings, such as those that modify authorized_keys or /etc/ssh/sshd_config files.&lt;br /&gt;['T1098.004']: Monitor for suspicious processes modifying the authorized_keys or /etc/ssh/sshd_config files.&lt;br /&gt;['T1203']: Monitor for abnormal process creations, such as a Command and Scripting Interpreter spawning from a potentially exploited application. Also look for other behavior on the endpoint system that might indicate successful compromise, such as abnormal behavior of browser or Office processes.&lt;br /&gt;['T1052.001']: Monitor for newly executed processes when removable media is mounted &lt;br /&gt;['T1221']: Analyze process behavior to determine if an Office application is performing actions, such as opening network connections, reading files, spawning abnormal child processes (ex: [PowerShell](https://attack.mitre.org/techniques/T1059/001)), or other suspicious actions that could relate to post-compromise behavior.&lt;br /&gt;['T1053.003']: Monitor for newly constructed processes and/or command-lines that executed through scheduled tasks may show up as outlier processes that have not been seen before when compared against historical data. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.&lt;br /&gt;['T1480.001']: Monitoring for suspicious processes being spawned that gather a variety of system information or perform other forms of [Discovery](https://attack.mitre.org/tactics/TA0007), especially in a short period of time, may aid in detection. Detecting the use of environmental keying may be difficult depending on the implementation.&lt;br /&gt;['T1543.004']: Monitor for newly executed processes that may create or modify Launch Daemons to execute malicious payloads as part of persistence.&lt;br /&gt;['T1564.010']: Analyze process behavior to determine if a process is performing actions it usually does not and/or do no align with its logged command-line arguments.

Detection of process argument spoofing may be difficult as adversaries may momentarily modify stored arguments used for malicious execution. These changes may bypass process creation detection and/or later process memory analysis. Consider monitoring for [Process Hollowing](https://attack.mitre.org/techniques/T1055/012), which includes monitoring for process creation (especially those in a suspended state) as well as access and/or modifications of these processes (especially by the parent process) via Windows API calls.(Citation: Nviso Spoof Command Line 2020)(Citation: Mandiant Endpoint Evading 2019)&lt;br /&gt;['T1053.005']: Monitor for newly constructed processes and/or command-lines that execute from the svchost.exe in Windows 10 and the Windows Task Scheduler taskeng.exe for older versions of Windows. (Citation: Twitter Leoloobeek Scheduled Task) If scheduled tasks are not used for persistence, then the adversary is likely to remove the task when the action is complete.&lt;br /&gt;['T1560.001']: Monitor for newly constructed processes and/or command-lines that aid in compression or encrypting data that is collected prior to exfiltration, such as 7-Zip, WinRAR, and WinZip.  &lt;br /&gt;['T1543.003']: Suspicious program execution through services may show up as outlier processes that have not been seen before when compared against historical data. Look for abnormal process call trees from known services and for execution of other commands that could relate to Discovery or other adversary techniques. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.&lt;br /&gt;['T1546.008']: Monitor newly executed processes that may establish persistence and/or elevate privileges by executing malicious content triggered by accessibility features.&lt;br /&gt;['T1037.002']: Monitor for processes and/or command-lines to install or modify login hooks, as well as processes spawned at user login by these hooks.&lt;br /&gt;['T1021.006']: Monitor for newly executed processes that may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to interact with remote systems using Windows Remote Management (WinRM), as well as service processes such as &lt;code&gt;wmiprvse.exe&lt;/code&gt; on destination hosts.&lt;br /&gt;['T1216.001']: Monitor script processes, such as `cscript that may be used to proxy execution of malicious files.&lt;br /&gt;['T1189']: Monitor for newly executed processes to gain access to a system through a user visiting a website over the normal course of browsing.&lt;br /&gt;['T1564.003']: Monitor newly executed processes that may use hidden windows to conceal malicious activity from the plain sight of users.&lt;br /&gt;['T1053.002']: Monitor for newly constructed processes with command-lines that create/modify or are executed from tasks. For example, on Windows tasks may spawn from `svchost.exe` or the Windows Task Scheduler `taskeng.exe` for older OS versions. (Citation: Twitter Leoloobeek Scheduled Task) Suspicious program execution through scheduled tasks may show up as outlier processes that have not been seen before when compared against historical data.&lt;br /&gt;['T1546.005']: Monitor newly executed processes that may establish persistence by executing malicious content triggered by an interrupt signal.&lt;br /&gt;['T1614']: Monitor newly executed processes that may gather information in an attempt to calculate the geographical location of a victim host.&lt;br /&gt;['T1136']: Monitor newly executed processes associated with account creation, such as net.exe &lt;br /&gt;['T1218.005']: Use process monitoring to monitor the execution and arguments of mshta.exe.&lt;br /&gt;['T1037.005']: Monitor for newly constructed processes and/or command-lines that execute during the boot up process to check for unusual or unknown applications and behavior&lt;br /&gt;['T1546.011']: Monitor newly executed processs for sdbinst.exe for potential indications of application shim abuse. 
There are several public tools available that will detect shims that are currently available (Citation: Black Hat 2015 App Shim):
* Shim-Process-Scanner - checks memory of every running process for any shim flags
* Shim-Detector-Lite - detects installation of custom shim databases
* Shim-Guard - monitors registry for any shim installations
* ShimScanner - forensic tool to find active shims in memory
* ShimCacheMem - Volatility plug-in that pulls shim cache from memory (note: shims are only cached after reboot)&lt;br /&gt;['T1497.001']: Virtualization, sandbox, user activity, and related discovery techniques will likely occur in the first steps of an operation but may also occur throughout as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary's implementation and monitoring required. Monitoring for suspicious processes being spawned that gather a variety of system information or perform other forms of Discovery, especially in a short period of time, may aid in detection.&lt;br /&gt;['T1218.001']: Monitor and analyze the execution and arguments of hh.exe. (Citation: MsitPros CHM Aug 2017) Compare recent invocations of hh.exe with prior history of known good arguments to determine anomalous and potentially adversarial activity (ex: obfuscated and/or malicious commands). Non-standard process execution trees may also indicate suspicious or malicious behavior, such as if hh.exe is the parent process for suspicious processes and activity relating to other adversarial techniques.&lt;br /&gt;['T1211']: Monitor for abnormal process creations, such as a Command and Scripting Interpreter spawning from a potentially exploited application. Also look for behavior on the system that might indicate successful compromise, such as abnormal behavior of processes.&lt;br /&gt;['T1091']: Monitor for newly executed processes that execute from removable media after it is mounted or when initiated by a user. If a remote access tool is used in this manner to move laterally, then additional actions are likely to occur after execution, such as opening network connections for Command and Control and system and network information Discovery.&lt;br /&gt;['T1222.001']: Monitor for newly constructed processes and/or command-lines that can interact with the DACLs using built-in Windows commands, such as icacls, cacls, takeown, and attrib, which can grant adversaries higher permissions on specific files and folders.&lt;br /&gt;['T1574']: Monitor processes for unusual activity (e.g., a process that does not use the network begins to do so, abnormal process call trees). Track library metadata, such as a hash, and compare libraries that are loaded at process execution time against previous executions to detect differences that do not correlate with patching or updates.&lt;br /&gt;['T1574.010']: Monitor for newly executed processes that may execute their own malicious payloads by hijacking the binaries used by services.&lt;br /&gt;['T1218.008']: Use process monitoring to monitor the execution and arguments of odbcconf.exe. Compare recent invocations of odbcconf.exe with prior history of known good arguments and loaded DLLs to determine anomalous and potentially adversarial activity.&lt;br /&gt;['T1021.001']: Monitor for newly executed processes (such as &lt;code&gt;mstsc.exe&lt;/code&gt;) that may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to log into a computer using the Remote Desktop Protocol (RDP). The adversary may then perform actions that spawn additional processes as the logged-on user.&lt;br /&gt;['T1615']: Monitor for newly executed processes that may gather information on Group Policy settings to identify paths for privilege escalation, security measures applied within a domain, and to discover patterns in domain objects that can be manipulated or used to blend in the environment.&lt;br /&gt;['T1480']: Monitoring for suspicious processes being spawned that gather a variety of system information or perform other forms of [Discovery](https://attack.mitre.org/tactics/TA0007), especially in a short period of time, may aid in detection. Detecting the use of guardrails may be difficult depending on the implementation.&lt;br /&gt;['T1564']: Monitor newly executed processes that may attempt to hide artifacts associated with their behaviors to evade detection.&lt;br /&gt;['T1021.005']: Monitor for newly executed processes that may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to remotely control machines using Virtual Network Computing (VNC). For example, on macOS systems the &lt;code&gt;screensharingd&lt;/code&gt; process may be related to VNC connection activity.(Citation: Apple Unified Log Analysis Remote Login and Screen Sharing)&lt;br /&gt;['T1563.002']: Consider monitoring processes for tscon.exe usage&lt;br /&gt;['T1059.005']: Monitor for events associated with VB execution, such as Office applications spawning processes, usage of the Windows Script Host (typically cscript.exe or wscript.exe). VB execution is likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used.&lt;br /&gt;['T1574.006']: Monitor for newly executed processes for unusual activity (e.g., a process that does not use the network begins to do so).&lt;br /&gt;['T1497.003']: Time-based evasion will likely occur in the first steps of an operation but may also occur throughout as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary's implementation and monitoring required. Monitoring for suspicious processes being spawned that gather a variety of system information or perform other forms of Discovery, especially in a short period of time, may aid in detection.&lt;br /&gt;['T1087.001']: Monitor for processes that can be used to enumerate user accounts and groups such as &lt;code&gt;net.exe&lt;/code&gt; and &lt;code&gt;net1.exe&lt;/code&gt;, especially when executed in quick succession.(Citation: Elastic - Koadiac Detection with EQL)
 
Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).&lt;br /&gt;['T1546.006']: Monitor processes for those that may be used to modify binary headers.&lt;br /&gt;['T1219']: Monitor for applications and processes related to remote admin tools. Correlate activity with other suspicious behavior that may reduce false positives if these tools are used by legitimate users and administrators. [Domain Fronting](https://attack.mitre.org/techniques/T1090/004) may be used in conjunction to avoid defenses. Adversaries will likely need to deploy and/or install these remote tools to compromised systems. It may be possible to detect or prevent the installation of these tools with host-based solutions.&lt;br /&gt;['T1027.004']: Monitor for newly constructed processes and/or command-lines that look for non-native binary formats and cross-platform compiler and execution frameworks like Mono and determine if they have a legitimate purpose on the system. Typically these should only be used in specific and limited cases, like for software development.&lt;br /&gt;['T1059.007']: Monitor for events associated with scripting execution, such as process activity, usage of the Windows Script Host (typically cscript.exe or wscript.exe), file activity involving scripts&lt;br /&gt;['T1553.006']: Monitor processes and command-line arguments for actions that could be taken to modify the code signing policy of a system, such as &lt;code&gt;bcdedit.exe -set TESTSIGNING ON&lt;/code&gt;. (Citation: Microsoft TESTSIGNING Feb 2021)&lt;br /&gt;['T1555.001']: Monitor processes spawned by command line utilities to manipulate keychains directly, such as &lt;code&gt;security&lt;/code&gt;, combined with arguments to collect passwords, such as &lt;code&gt;dump-keychain -d&lt;/code&gt;.&lt;br /&gt;['T1220']: Use process monitoring to monitor the execution and arguments of msxsl.exe and wmic.exe. (Citation: LOLBAS Wmic) (Citation: Twitter SquiblyTwo Detection APR 2018) Command arguments used before and after the script invocation may also be useful in determining the origin and purpose of the payload being loaded. The presence of msxsl.exe or other utilities that enable proxy execution that are typically used for development, debugging, and reverse engineering on a system that is not used for these purposes may be suspicious.&lt;br /&gt;['T1564.002']: Monitor newly executed processes for actions that could be taken to add a new user and subsequently hide it from login screens.&lt;br /&gt;['T1497.002']: User activity-based checks will likely occur in the first steps of an operation but may also occur throughout as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary's implementation and monitoring required. Monitoring for suspicious processes being spawned that gather a variety of system information or perform other forms of Discovery, especially in a short period of time, may aid in detection.&lt;br /&gt;['T1563']: Monitor newly executed processes that may take control of preexisting sessions with remote services to move laterally in an environment.&lt;br /&gt;['T1547.013']: Monitor newly executed processes that may modify XDG autostart entries to execute programs or commands during system boot.&lt;br /&gt;['T1072']: Monitor for newly executed processes that does not correlate to known good software. Analyze the process execution trees, historical activities from the third-party application (such as what types of files are usually pushed), and the resulting activities or events from the file/binary/script pushed to systems. &lt;br /&gt;['T1120']: Monitor for newly executed processes that may attempt to gather information about attached peripheral devices and components connected to a computer system.&lt;br /&gt;['T1553']: Monitor processes and arguments for malicious attempts to modify trust settings, such as the installation of root certificates or modifications to trust attributes/policies applied to files.&lt;br /&gt;['T1082']: Monitor newly executed processes that may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture.&lt;br /&gt;['T1569']: Monitor newly executed processes that may abuse system services or daemons to execute commands or programs.&lt;br /&gt;['T1609']: Container administration service activities and executed commands can be captured through logging of process execution with command-line arguments on the container as well as within the underlying host.&lt;br /&gt;['T1204.002']: Monitor for newly constructed processes and/or command-lines for applications that may be used by an adversary to gain initial access that require user interaction. This includes compression applications, such as those for zip files, that can be used to Deobfuscate/Decode Files or Information in payloads.&lt;br /&gt;['T1070.005']: Monitor for newly constructed processes and/or command line execution that can be used to remove network share connections via the net.exe process. &lt;br /&gt;['T1546.003']: Monitor newly executed processes that result from the execution of subscriptions (i.e. spawning from the WmiPrvSe.exe WMI Provider Host process).&lt;br /&gt;['T1016']: Monitor for executed processes (such as ipconfig/ifconfig and arp) with arguments that may look for details about the network configuration and settings, such as IP and/or MAC addresses.&lt;br /&gt;['T1647']: Monitor for newly executed processes with arguments that can modify property list (plist) files.&lt;br /&gt;['T1562.010']: Monitor newly executed processes that may downgrade or use a version of system features that may be outdated, vulnerable, and/or does not support updated security controls such as logging.&lt;br /&gt;['T1548.003']: Monitor newly executed processes that may perform sudo caching and/or use the suoders file to elevate privileges.&lt;br /&gt;['T1053.006']: Monitor for newly constructed processes and/or command-lines that will have a parent process of 'systemd', a parent process ID of 1, and will usually execute as the 'root' user.&lt;br /&gt;['T1069.001']: Monitor newly executed processes that may attempt to find local system groups and permission settings.&lt;br /&gt;['T1564.006']: Monitor newly executed processes associated with running a virtual instance, such as those launched from binary files associated with common virtualization technologies (ex: VirtualBox, VMware, QEMU, Hyper-V).&lt;br /&gt;['T1518']: Monitor newly executed processes that may attempt to get a listing of software and software versions that are installed on a system or in a cloud environment.&lt;br /&gt;['T1562.002']: Monitor newly executed processes that may disable Windows event logging to limit data that can be leveraged for detections and audits.&lt;br /&gt;['T1059.002']: Monitor for newly executed processes that may abuse AppleScript for execution. Scripts are likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Actions may be related to network and system information [Discovery](https://attack.mitre.org/tactics/TA0007), [Collection](https://attack.mitre.org/tactics/TA0009), or other scriptable post-compromise behaviors and could be used as indicators of detection leading back to the source script.&lt;br /&gt;['T1202']: Monitor for newly constructed processes and/or command-lines that can be used instead of invoking cmd (i.e. pcalua.exe, winrs.exe, cscript/wscript.exe, hh.exe, or bash.exe)&lt;br /&gt;['T1080']: Monitor processes that are executed from removable media for malicious or abnormal activity such as network connections due to Command and Control and possible network Discovery techniques.&lt;br /&gt;['T1201']: Monitor for newly executed processes that may attempt to access detailed information about the password policy used within an enterprise network or cloud environment.&lt;br /&gt;['T1218.009']: Use process monitoring to monitor the execution and arguments of Regsvcs.exe and Regasm.exe. Compare recent invocations of Regsvcs.exe and Regasm.exe with prior history of known good arguments and executed binaries to determine anomalous and potentially adversarial activity.&lt;br /&gt;['T1112']: Monitor processes and command-line arguments for actions that could be taken to change, conceal, and/or delete information in the Registry. (i.e. reg.exe, regedit.exe) &lt;br /&gt;['T1007']: Monitor for newly executed processes with arguments that may try to get information about registered services. System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.&lt;br /&gt;['T1137.001']: Monitor newly executed processes that may abuse Microsoft Office templates to obtain persistence on a compromised system.&lt;br /&gt;['T1546.009']: Monitor newly executed processes that may establish persistence and/or elevate privileges by executing malicious content triggered by AppCert DLLs loaded into processes.&lt;br /&gt;['T1552']: Monitor newly executed processes that may search compromised systems to find and obtain insecurely stored credentials.&lt;br /&gt;['T1127']: Monitor for abnormal presence of these or other utilities that enable proxy execution that are typically used for development, debugging, and reverse engineering on a system that is not used for these purposes may be suspicious. Use process monitoring to monitor the execution and arguments of from developer utilities that may be abused. Compare recent invocations of those binaries with prior history of known good arguments and executed binaries to determine anomalous and potentially adversarial activity. It is likely that these utilities will be used by software developers or for other software development related tasks, so if it exists and is used outside of that context, then the event may be suspicious.&lt;br /&gt;['T1137']: Monitor newly executed processes that may leverage Microsoft Office-based applications for persistence between startups. Collect process execution information including process IDs (PID) and parent process IDs (PPID) and look for abnormal chains of activity resulting from Office processes. Non-standard process execution trees may also indicate suspicious or malicious behavior. If winword.exe is the parent process for suspicious processes and activity relating to other adversarial techniques, then it could indicate that the application was used maliciously.&lt;br /&gt;['T1218.004']: Use process monitoring to monitor the execution and arguments of InstallUtil.exe. Compare recent invocations of InstallUtil.exe with prior history of known good arguments and executed binaries to determine anomalous and potentially adversarial activity&lt;br /&gt;['T1037.003']: Monitor for newly constructed processes and/or command-lines that execute logon scripts&lt;br /&gt;['T1204']: Monitor for newly executed processes that may be used by an adversary to gain Initial Access that require user interaction. This includes compression applications, such as those for zip files, that can be used to [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140) in payloads.&lt;br /&gt;['T1547.006']: Monitor for newly created processes that may modify the kernel to automatically execute programs on system boot.&lt;br /&gt;['T1561']: Monitor newly executed processes that may wipe or corrupt raw disk data on specific systems or in large numbers in a network to interrupt availability to system and network resources.&lt;br /&gt;['T1505.005']: Monitor processes with arguments that may potentially highlight adversary actions to modify Registry values (ex: &lt;code&gt;reg.exe&lt;/code&gt;) or modify/replace the legitimate &lt;code&gt;termsrv.dll&lt;/code&gt;.&lt;br /&gt;['T1547']: Suspicious program execution as autostart programs may show up as outlier processes that have not been seen before when compared against historical data to increase confidence of malicious activity, data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.&lt;br /&gt;['T1070']: Monitor for newly executed processes that may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined malware.&lt;br /&gt;['T1040']: Monitor for newly executed processes that can aid in sniffing network traffic to capture information about an environment, including authentication material passed over the network &lt;br /&gt;['T1137.004']: Monitor newly executed processes that may abuse Microsoft Outlook's Home Page feature to obtain persistence on a compromised system.&lt;br /&gt;['T1496']: Monitor for common cryptomining software process names that may indicate compromise and resource usage.&lt;br /&gt;['T1176']: Monitor for newly executed processes that could be used to abuse internet browser extensions to establish persistence. &lt;br /&gt;['T1486']: Monitor for newly constructed  processes and/or command-lines involved in data destruction activity, such as vssadmin, wbadmin, and bcdedit.&lt;br /&gt;['T1505']: Process monitoring may be used to detect servers components that perform suspicious actions such as running cmd.exe or accessing files.&lt;br /&gt;['T1548.002']: Monitor newly executed processes, such as &lt;code&gt;eventvwr.exe&lt;/code&gt; and &lt;code&gt;sdclt.exe&lt;/code&gt;, that may bypass UAC mechanisms to elevate process privileges on system.&lt;br /&gt;['T1052']: Monitor for newly executed processes when removable media is mounted.&lt;br /&gt;['T1218.007']: Use process monitoring to monitor the execution and arguments of msiexec.exe. Compare recent invocations of msiexec.exe with prior history of known good arguments and executed MSI files.&lt;br /&gt;['T1543.002']: Suspicious processes or scripts spawned in this manner will have a parent process of 'systemd', a parent process ID of 1, and will usually execute as the 'root' user.&lt;br /&gt;['T1561.002']: Monitor newly executed processes that may corrupt or wipe the disk data structures on a hard drive necessary to boot a system; targeting specific critical systems or in large numbers in a network to interrupt availability to system and network resources.&lt;br /&gt;['T1037']: Monitor for newly executed processes that may use scripts automatically executed at boot or logon initialization to establish persistence.&lt;br /&gt;['T1012']: Monitor for newly executed processes that may interact with the Windows Registry to gather information about the system, configuration, and installed software.&lt;br /&gt;['T1059.006']: Monitor systems for abnormal Python usage and python.exe behavior, which could be an indicator of malicious activity. Understanding standard usage patterns is important to avoid a high number of false positives. If scripting is restricted for normal users, then any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent. Scripts are likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Monitor newly executed processes that may abuse Python commands and scripts for execution.&lt;br /&gt;['T1564.009']: Monitor newly executed processes that may abuse resource forks to hide malicious code or executables to evade detection and bypass security applications.&lt;br /&gt;['T1546.014']: Monitor newly executed processes that may gain persistence and elevate privileges by executing malicious content triggered by the Event Monitor Daemon (emond).&lt;br /&gt;['T1574.005']: Monitor for newly constructed processes to match an existing service executables. &lt;br /&gt;['T1056.002']: Monitor for newly executed processes &lt;br /&gt;['T1574.011']: Monitor suspicious programs execution through services. These processes may show up as outlier processes that have not been seen before when compared against historical data.&lt;br /&gt;['T1047']: Monitor for newly constructed processes and/or command-lines of "wmic"&lt;br /&gt;['T1546.012']: Monitor for abnormal usage of the GFlags tool as well as common processes spawned under abnormal parents and/or with creation flags indicative of debugging such as &lt;code&gt;DEBUG_PROCESS&lt;/code&gt; and &lt;code&gt;DEBUG_ONLY_THIS_PROCESS&lt;/code&gt;. (Citation: Microsoft Dev Blog IFEO Mar 2010)&lt;br /&gt;['T1137.006']: Monitor newly executed processes that may abuse Microsoft Office add-ins to obtain persistence on a compromised system. &lt;br /&gt;['T1218']: Monitor processes and command-line parameters for signed binaries that may be used to proxy execution of malicious files. Compare recent invocations of signed binaries that may be used to proxy execution with prior history of known good arguments and loaded files to determine anomalous and potentially adversarial activity. Legitimate programs used in suspicious ways, like msiexec.exe downloading an MSI file from the Internet, may be indicative of an intrusion. Correlate activity with other suspicious behavior to reduce false positives that may be due to normal benign use by users and administrators.&lt;br /&gt;['T1127.001']: Monitor for newly executed processes of MSBuild.exe. Compare recent invocations of those binaries with prior history of known good arguments and executed binaries to determine anomalous and potentially adversarial activity.&lt;br /&gt;['T1546.013']: Monitor newly executed processes that may gain persistence and elevate privileges by executing malicious content triggered by PowerShell profiles.&lt;br /&gt;['T1135']: Monitor for newly executed processes that may look for folders and drives shared on remote systems as a means of identifying sources of information to gather as a precursor for Collection and to identify potential systems of interest for Lateral Movement.&lt;br /&gt;['T1049']: Monitor for executed processes that may attempt to get a listing of network connections to or from the compromised system they are currently accessing or from remote systems by querying for information over the network.&lt;br /&gt;['T1069.002']: Monitor newly executed processes that may attempt to find domain-level groups and permission settings.&lt;br /&gt;['T1574.002']: Monitor newly constructed processes for unusual activity (e.g., a process that does not use the network begins to do so) as well as the introduction of new files/programs.&lt;br /&gt;['T1555.004']: Monitor newly executed processes of &lt;code&gt;vaultcmd.exe&lt;/code&gt; for suspicious activity, such as listing credentials from the Windows Credentials locker (i.e., &lt;code&gt;vaultcmd /listcreds:"Windows Credentials"&lt;/code&gt;).(Citation: Malwarebytes The Windows Vault)&lt;br /&gt;['T1546.002']: Monitor newly executed processes that may establish persistence by executing malicious content triggered by user inactivity.&lt;br /&gt;['T1137.002']: Monitor newly executed processes that may abuse the Microsoft Office "Office Test" Registry key to obtain persistence on a compromised system.&lt;br /&gt;['T1083']: Monitor newly executed processes that may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system.&lt;br /&gt;['T1570']: Monitor newly constructed processes that assist in lateral tool transfers. &lt;br /&gt;['T1546.007']: It is likely unusual for netsh.exe to have any child processes in most environments. Monitor process executions and investigate any child processes spawned by netsh.exe for malicious behavior.&lt;br /&gt;['T1569.002']: Monitor for newly executed processes that may abuse the Windows service control manager to execute malicious commands or payloads.&lt;br /&gt;['T1218.003']: Use process monitoring to detect and analyze the execution and arguments of CMSTP.exe. Compare recent invocations of CMSTP.exe with prior history of known good arguments and loaded files to determine anomalous and potentially adversarial activity. Sysmon events can also be used to identify potential abuses of CMSTP.exe. Detection strategy may depend on the specific adversary procedure, but potential rules include: (Citation: Endurant CMSTP July 2018)
* To detect loading and execution of local/remote payloads - Event 1 (Process creation) where ParentImage contains CMSTP.exe
* Also monitor for events, such as the creation of processes (Sysmon Event 1), that involve auto-elevated CMSTP COM interfaces such as CMSTPLUA (3E5FC7F9-9A51-4367-9063-A120244FBEC7) and CMLUAUTIL (3E000D72-A845-4CD9-BD83-80C07C3B881F).&lt;br /&gt;['T1562']: Monitor newly executed processes that may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms.&lt;br /&gt;['T1555']: Monitor newly executed processes that may search for common password storage locations to obtain user credentials.&lt;br /&gt;['T1197']: Monitor for newly constructed BITS tasks to enumerate using the BITSAdmin tool (bitsadmin /list /allusers /verbose). &lt;br /&gt;['T1005']: Monitor for newly executed processes that may search local system sources, such as file systems or local databases, to find files of interest and sensitive data prior to Exfiltration.&lt;br /&gt;['T1574.007']: Monitor for newly executed processes for process executable paths that are named for partial directories.&lt;br /&gt;['T1574.009']: Monitor for newly executed processes that may execute their own malicious payloads by hijacking vulnerable file path references.&lt;br /&gt;['T1218.013']: Monitor the execution and arguments of mavinject.exe. Compare recent invocations of mavinject.exe with prior history of known good arguments and injected DLLs to determine anomalous and potentially adversarial activity.&lt;br /&gt;['T1021.003']: Monitor for newly executed processes associated with DCOM activity, especially those invoked by a user different than the one currently logged on. Enumeration of COM objects, via [Query Registry](https://attack.mitre.org/techniques/T1012) or [PowerShell](https://attack.mitre.org/techniques/T1059/001), may also precede malicious use.(Citation: Fireeye Hunting COM June 2019)(Citation: Enigma MMC20 COM Jan 2017)&lt;br /&gt;['T1559.001']: Monitor for newly executed processes that are associated with COM objects, especially those invoked by a user different than the one currently logged on.&lt;br /&gt;['T1134']: Monitor for executed processes that may modify access tokens to operate under a different user or system security context to perform actions and bypass access controls.&lt;br /&gt;['T1018']: Monitor for newly executed processes that can be used to discover remote systems, such as &lt;code&gt;ping.exe&lt;/code&gt; and &lt;code&gt;tracert.exe&lt;/code&gt;, especially when executed in quick succession.(Citation: Elastic - Koadiac Detection with EQL)&lt;br /&gt;['T1561.001']: Monitor newly executed processes that may erase the contents of storage devices on specific systems or in large numbers in a network to interrupt availability to system and network resources.&lt;br /&gt;['T1027']: Monitor for newly executed processes that may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit.&lt;br /&gt;['T1137.003']: Monitor newly executed processes that may abuse Microsoft Outlook forms to obtain persistence on a compromised system.&lt;br /&gt;['T1218.014']: Monitor processes for suspicious or malicious use of MMC. Since MMC is a signed Windows binary, verify use of MMC is legitimate and not malicious.&lt;br /&gt;['T1546']: Tools such as Sysinternals Autoruns can be used to detect changes to execution triggers that could be attempts at persistence. Also look for abnormal process call trees for execution of other commands that could relate to Discovery actions or other techniques.&lt;br /&gt;['T1124']: Monitor for newly executed processes that may gather the system time and/or time zone from a local or remote system.&lt;br /&gt;['T1218.010']: Use process monitoring to monitor the execution and arguments of regsvr32.exe. Compare recent invocations of regsvr32.exe with prior history of known good arguments and loaded files to determine anomalous and potentially adversarial activity.&lt;br /&gt;['T1021']: Monitor for newly executed processes that may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to log into a service specifically designed to accept remote connections, such as RDP, telnet, SSH, and VNC. The adversary may then perform actions that spawn additional processes as the logged-on user.&lt;br /&gt;['T1059.003']: Monitor for newly executed processes that may abuse the Windows command shell for execution.&lt;br /&gt;['T1218.002']: Monitor and analyze activity related to items associated with CPL files, such as the control.exe. Analyze new Control Panel items as well as those present on disk for malicious content. Both executable and CPL formats are compliant Portable Executable (PE) images and can be examined using traditional tools and methods, pending anti-reverse-engineering techniques.(Citation: TrendMicro CPL Malware Jan 2014)&lt;br /&gt;['T1489']: Monitor processes and command-line arguments to see if critical processes are terminated or stop running.&lt;br /&gt;['T1562.001']: Monitor processes for unexpected termination related to security tools/services.
&lt;br /&gt;['T1562']: Monitor for unexpected deletions of a running process (ex: Sysmon EID 5 or Windows EID 4689) that may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms.&lt;br /&gt;['T1056.004']: Verify integrity of live processes by comparing code in memory to that of corresponding static binaries, specifically checking for jumps and other instructions that redirect code flow.&lt;br /&gt;['T1036']: Monitor for file names that are mismatched between the file name on disk and that of the binary's PE metadata, this is a likely indicator that a binary was renamed after it was compiled. &lt;br /&gt;['T1059']: Monitor contextual data about a running process, which may include information such as environment variables, image name, user/owner, or other information that may reveal abuse of system features. For example, consider monitoring for Windows event ID (EID) 400, which shows the version of PowerShell executing in the &lt;code&gt;EngineVersion&lt;/code&gt; field (which may also be relevant to detecting a potential [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)) as well as if PowerShell is running locally or remotely in the &lt;code&gt;HostName&lt;/code&gt; field. Furthermore, EID 400 may indicate the start time and EID 403 indicates the end time of a PowerShell session.(Citation: inv_ps_attacks)&lt;br /&gt;['T1036.005']: Collecting and comparing disk and resource filenames for binaries by looking to see if the InternalName, OriginalFilename, and/or ProductName match what is expected could provide useful leads, but may not always be indicative of malicious activity.&lt;br /&gt;['T1548']: Monitor contextual data about a running process, which may include information such as environment variables, image name, user/owner that may circumvent mechanisms designed to control elevate privileges to gain higher-level permissions.&lt;br /&gt;['T1562.010']: Monitor contextual data about a running process, which may include information such as environment variables, image name, user/owner, or other information that may reveal use of a version of system features that may be outdated, vulnerable, and/or does not support updated security controls such as logging. For example, monitoring for Windows event ID (EID) 400, specifically the &lt;code&gt;EngineVersion&lt;/code&gt; field which shows the version of PowerShell running, may highlight a malicious downgrade attack.(Citation: inv_ps_attacks)&lt;br /&gt;['T1134.004']: Look for inconsistencies between the various fields that store PPID information, such as the EventHeader ProcessId from data collected via Event Tracing for Windows (ETW), Creator Process ID/Name from Windows event logs, and the ProcessID and ParentProcessID (which are also produced from ETW and other utilities such as Task Manager and Process Explorer). The ETW provided EventHeader ProcessId identifies the actual parent process.(Citation: CounterCept PPID Spoofing Dec 2018)&lt;br /&gt;['T1548.003']: Monitor contextual data about a running process, which may include information such as environment variables, image name, user/owner that may perform sudo caching and/or use the suoders file to elevate privileges.&lt;br /&gt;['T1059.001']: Consider monitoring for Windows event ID (EID) 400, which shows the version of PowerShell executing in the &lt;code&gt;EngineVersion&lt;/code&gt; field (which may also be relevant to detecting a potential [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)) as well as if PowerShell is running locally or remotely in the &lt;code&gt;HostName&lt;/code&gt; field. Furthermore, EID 400 may indicate the start time and EID 403 indicates the end time of a PowerShell session.(Citation: inv_ps_attacks)&lt;br /&gt;['T1548.002']: Monitor contextual data about a running process, which may include information such as environment variables, image name, user/owner that may bypass UAC mechanisms to elevate process privileges on system.&lt;br /&gt;['T1134']: Query systems for process and thread token information and look for inconsistencies such as user owns processes impersonating the local SYSTEM account.(Citation: BlackHat Atkinson Winchester Token Manipulation) Look for inconsistencies between the various fields that store PPID information, such as the EventHeader ProcessId from data collected via Event Tracing for Windows (ETW), Creator Process ID/Name from Windows event logs, and the ProcessID and ParentProcessID (which are also produced from ETW and other utilities such as Task Manager and Process Explorer). The ETW provided EventHeader ProcessId identifies the actual parent process.&lt;br /&gt;['T1185']: This may be a difficult technique to detect because adversary traffic may be masked by normal user traffic. Monitor for [Process Injection](https://attack.mitre.org/techniques/T1055) against browser applications.&lt;br /&gt;['T1055.015']: Monitor for changes made to processes that may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges. Analyze process behavior to determine if a process is performing unusual actions, such as opening network connections, reading files, or other suspicious actions that could relate to post-compromise behavior. &lt;br /&gt;['T1055.012']: Monitor for changes made to processes that may inject malicious code into suspended and hollowed processes in order to evade process-based defenses.&lt;br /&gt;['T1055']: Monitor for changes made to processes that may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges.&lt;br /&gt;['T1055.004']: Monitor for changes made to processes that may inject malicious code into processes via the asynchronous procedure call (APC) queue in order to evade process-based defenses as well as possibly elevate privileges.&lt;br /&gt;['T1055.008']: Monitor for changes made to processes that may inject malicious code into processes via ptrace (process trace) system calls in order to evade process-based defenses as well as possibly elevate privileges.&lt;br /&gt;['T1055.003']: Monitor for changes made to processes that may inject malicious code into hijacked processes in order to evade process-based defenses as well as possibly elevate privileges.&lt;br /&gt;['T1055.005']: Monitor for changes made to processes that may inject malicious code into processes via thread local storage (TLS) callbacks in order to evade process-based defenses as well as possibly elevate privileges.&lt;br /&gt;['T1055.002']: Monitor for changes made to processes that may inject portable executables (PE) into processes in order to evade process-based defenses as well as possibly elevate privileges.&lt;br /&gt;['T1055.001']: Monitor for changes made to processes that may inject dynamic-link libraries (DLLs) into processes in order to evade process-based defenses as well as possibly elevate privileges.&lt;br /&gt;['T1556']: Monitor for unexpected processes interacting with authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts.&lt;br /&gt;['T1003.001']: Monitor for unexpected processes interacting with LSASS.exe.(Citation: Medium Detecting Attempts to Steal Passwords from Memory) Common credential dumpers such as Mimikatz access LSASS.exe by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details are stored. Credential dumpers may also use methods for reflective [Process Injection](https://attack.mitre.org/techniques/T1055) to reduce potential indicators of malicious activity.&lt;br /&gt;['T1555.003']: Monitor process execution logs to include PowerShell Transcription focusing on those that perform a combination of behaviors including reading web browser process memory, utilizing regular expressions, and those that contain numerous keywords for common web applications (Gmail, Twitter, Office365, etc.).&lt;br /&gt;['T1539']: Monitor for attempts by programs to inject into or dump browser process memory.&lt;br /&gt;['T1555.005']: Monitor process being accessed that may acquire user credentials from third-party password managers.(Citation: ise Password Manager February 2019)&lt;br /&gt;['T1055.002']: Monitor for processes being viewed that may inject portable executables (PE) into processes in order to evade process-based defenses as well as possibly elevate privileges.&lt;br /&gt;['T1055.008']: Monitor for processes being viewed that may inject malicious code into processes via ptrace (process trace) system calls in order to evade process-based defenses as well as possibly elevate privileges.&lt;br /&gt;['T1055']: Monitor for processes being viewed that may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges.&lt;br /&gt;['T1055.004']: Monitor for processes being viewed that may inject malicious code into processes via the asynchronous procedure call (APC) queue in order to evade process-based defenses as well as possibly elevate privileges.&lt;br /&gt;['T1559.003']: Monitor for processes making abnormal calls to higher privileged processes, such as a user application connecting to a VPN service.(Citation: versprite xpc vpn)&lt;br /&gt;['T1055.001']: Monitor for process being viewed that may inject dynamic-link libraries (DLLs) into processes in order to evade process-based defenses as well as possibly elevate privileges.&lt;br /&gt;['T1556.001']: Monitor for unexpected processes interacting with the authentication process on a domain controller to bypass the typical authentication mechanisms and enable access to accounts.&lt;br /&gt;['T1555']: Monitor for processes being accessed that may search for common password storage locations to obtain user credentials.&lt;br /&gt;['T1055.005']: Monitor for processes being viewed that may inject malicious code into processes via thread local storage (TLS) callbacks in order to evade process-based defenses as well as possibly elevate privileges.&lt;br /&gt;['T1555.002']: Monitor for processes being accessed that may obtain root access (allowing them to read securityd's memory), then they can scan through memory to find the correct sequence of keys in relatively few tries to decrypt the user's logon keychain.&lt;br /&gt;['T1003']: Monitor for unexpected processes interacting with lsass.exe.(Citation: Medium Detecting Attempts to Steal Passwords from Memory) Common credential dumpers such as [Mimikatz](https://attack.mitre.org/software/S0002) access the LSA Subsystem Service (LSASS) process by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details are stored. Credential dumpers may also use methods for reflective [Process Injection](https://attack.mitre.org/techniques/T1055) to reduce potential indicators of malicious activity.
##### Linux
To obtain the passwords and hashes stored in memory, processes must open a maps file in the /proc filesystem for the process being analyzed. This file is stored under the path &lt;code&gt;/proc/&amp;lt;pid&amp;gt;/maps&lt;/code&gt;, where the &lt;code&gt;&amp;lt;pid&amp;gt;&lt;/code&gt; directory is the unique pid of the program being interrogated for such authentication data. The AuditD monitoring tool, which ships stock in many Linux distributions, can be used to watch for hostile processes opening this file in the proc file system, alerting on the pid, process name, and arguments of such programs.&lt;br /&gt;['T1055.012']: Monitor for processes being viewed that may inject malicious code into suspended and hollowed processes in order to evade process-based defenses.&lt;br /&gt;['T1055.003']: Monitor for processes being viewed that may inject malicious code into hijacked processes in order to evade process-based defenses as well as possibly elevate privileges.&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Microsoft Processes and Threads" url="https://docs.microsoft.com/en-us/windows/win32/procthread/processes-and-threads"/>
            <reference name="Mitre ATT&amp;CK Data Source DS0009" url="https://attack.mitre.org/datasources/DS0009"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:00.751">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-M1054" name="Software Configuration" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>Implement configuration changes to software (other than the operating system) to mitigate security risks associated to how the software operates.&lt;br /&gt;&lt;p&gt;Detailed mitigations per technique:&lt;/p&gt;&lt;br /&gt;['T1566.002', 'T1598', 'T1566', 'T1566.001', 'T1598.002', 'T1598.003']: Use anti-spoofing and email authentication mechanisms to filter messages based on validity checks of the sender domain (using SPF) and integrity of messages (using DKIM). Enabling these mechanisms within an organization (through policies such as DMARC) may enable recipients (intra-org and cross domain) to perform similar message filtering and validation.(Citation: Microsoft Anti Spoofing)(Citation: ACSC Email Spoofing)&lt;br /&gt;['T1550.004', 'T1539', 'T1506']: Configure browsers or tasks to regularly delete persistent cookies.&lt;br /&gt;['T1602.001', 'T1602']: Allowlist MIB objects and implement SNMP views.(Citation: Cisco Securing SNMP)&lt;br /&gt;['T1553.004', 'T1553']: HTTP Public Key Pinning (HPKP) is one method to mitigate potential [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) situations where and adversary uses a mis-issued or fraudulent certificate to intercept encrypted communications by enforcing use of an expected certificate. (Citation: Wikipedia HPKP)&lt;br /&gt;['T1137.002']: Create the Registry key used to execute it and set the permissions to "Read Control" to prevent easy access to the key without administrator permissions or requiring Privilege Escalation.(Citation: Palo Alto Office Test Sofacy)&lt;br /&gt;['T1559', 'T1559.002', 'T1173']: Consider disabling embedded files in Office programs, such as OneNote, that do not work with Protected View.(Citation: Enigma Reviving DDE Jan 2018)(Citation: GitHub Disable DDEAUTO Oct 2017)&lt;br /&gt;['T1535']: Cloud service providers may allow customers to deactivate unused regions.(Citation: CloudSploit - Unused AWS Regions)&lt;br /&gt;['T1562.006', 'T1054']: Consider automatically relaunching forwarding mechanisms at recurring intervals (ex: temporal, on-logon, etc.) as well as applying appropriate change management to firewall rules and other related system configurations.&lt;br /&gt;['T1130']: HTTP Public Key Pinning (HPKP) is one method to mitigate potential man-in-the-middle situations where and adversary uses a mis-issued or fraudulent certificate to intercept encrypted communications by enforcing use of an expected certificate. (Citation: Wikipedia HPKP)&lt;br /&gt;['T1602.002']: Allowlist MIB objects and implement SNMP views. Disable Smart Install (SMI) if not used.(Citation: Cisco Securing SNMP)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018) &lt;br /&gt;['T1504']: Avoid PowerShell profiles if not needed. Use the &lt;code&gt;-No Profile&lt;/code&gt; flag with when executing PowerShell scripts remotely to prevent local profiles and scripts from being executed. &lt;br /&gt;['T1546.013']: Avoid PowerShell profiles if not needed. Use the -No Profile flag with when executing PowerShell scripts remotely to prevent local profiles and scripts from being executed.&lt;br /&gt;['T1555.005']: Consider re-locking password managers after a short timeout to limit the time plaintext credentials live in memory from decrypted databases.&lt;br /&gt;['T1606']: Configure browsers/applications to regularly delete persistent web credentials (such as cookies).&lt;br /&gt;['T1606.001']: Configure browsers/applications to regularly delete persistent web cookies.&lt;br /&gt;['T1137']: For the Office Test method, create the Registry key used to execute it and set the permissions to "Read Control" to prevent easy access to the key without administrator permissions or requiring Privilege Escalation. (Citation: Palo Alto Office Test Sofacy)&lt;br /&gt;['T1562.009']: Ensure that endpoint defenses run in safe mode.(Citation: CyberArk Labs Safe Mode 2016)&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Mitre ATT&amp;CK Mitigation M1054" url="https://attack.mitre.org/mitigations/M1054"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:00.987">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-M1051" name="Update Software" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>Perform regular software updates to mitigate exploitation risk.&lt;br /&gt;&lt;p&gt;Detailed mitigations per technique:&lt;/p&gt;&lt;br /&gt;['T1550.002']: Apply patch KB2871997 to Windows 7 and higher systems to limit the default access of accounts in the local administrator group.(Citation: NSA Spotting) &lt;br /&gt;['T1073', 'T1574.002', 'T1574']: Update software regularly to include patches that fix DLL side-loading vulnerabilities.&lt;br /&gt;['T1552', 'T1552.006']: Apply patch KB2962486 which prevents credentials from being stored in GPPs.(Citation: ADSecurity Finding Passwords in SYSVOL)(Citation: MS14-025)&lt;br /&gt;['T1548.002']: Consider updating Windows to the latest version and patch level to utilize the latest protective measures against UAC bypass.(Citation: Github UACMe)&lt;br /&gt;['T1103', 'T1546.010']: Upgrade to Windows 8 or later and enable secure boot.&lt;br /&gt;['T1602.001', 'T1602', 'T1602.002']: Keep system images and software updated and migrate to SNMPv3.(Citation: Cisco Blog Legacy Device Attacks)&lt;br /&gt;['T1068', 'T1212', 'T1211', 'T1210']: Update software regularly by employing patch management for internal enterprise endpoints and servers.&lt;br /&gt;['T1555.005']: Update password managers regularly by employing patch management for internal enterprise endpoints and servers.&lt;br /&gt;['T1495']: Patch the BIOS and other firmware as necessary to prevent successful use of known vulnerabilities.&lt;br /&gt;['T1110.001']: Upgrade management services to the latest supported and compatible version.  Specifically, any version providing increased password complexity or policy enforcement preventing default or weak passwords. &lt;br /&gt;['T1019', 'T1542', 'T1542.001']: Patch the BIOS and EFI as necessary.&lt;br /&gt;['T1072', 'T1017']: Patch deployment systems regularly to prevent potential remote access through [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068).&lt;br /&gt;['T1137.004', 'T1137', 'T1137.005', 'T1137.003']: For the Outlook methods, blocking macros may be ineffective as the Visual Basic engine used for these features is separate from the macro scripting engine.(Citation: SensePost Outlook Forms) Microsoft has released patches to try to address each issue. Ensure KB3191938 which blocks Outlook Visual Basic and displays a malicious code warning, KB4011091 which disables custom forms by default, and KB4011162 which removes the legacy Home Page feature, are applied to systems.(Citation: SensePost Outlook Home Page)&lt;br /&gt;['T1189']: Ensure all browsers and plugins kept updated can help prevent the exploit phase of this technique. Use modern browsers with security features turned on.&lt;br /&gt;['T1075']: Apply patch KB2871997 to Windows 7 and higher systems to limit the default access of accounts in the local administrator group. &lt;br /&gt;['T1176']: Ensure operating systems and browsers are using the most current version. &lt;br /&gt;['T1195.001', 'T1195']: A patch management process should be implemented to check unused dependencies, unmaintained and/or previously vulnerable dependencies, unnecessary features, components, files, and documentation.&lt;br /&gt;['T1542.002']: Perform regular firmware updates to mitigate risks of exploitation and/or abuse.&lt;br /&gt;['T1100']: Ensure that externally facing Web servers are patched regularly to prevent adversary access through [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068) to gain remote code access or through file inclusion weaknesses that may allow adversaries to upload files or scripts that are automatically served as Web pages.&lt;br /&gt;['T1190']: Update software regularly by employing patch management for externally exposed applications.&lt;br /&gt;['T1195.002']: A patch management process should be implemented to check unused applications, unmaintained and/or previously vulnerable software, unnecessary features, components, files, and documentation.&lt;br /&gt;['T1546.011']: Microsoft released an optional patch update - KB3045645 - that will remove the "auto-elevate" flag within the sdbinst.exe. This will prevent use of application shimming to bypass UAC.&lt;br /&gt;['T1138']: Microsoft released an optional patch update - KB3045645 - that will remove the "auto-elevate" flag within the sdbinst.exe. This will prevent use of application shimming to bypass UAC. &lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Mitre ATT&amp;CK Mitigation M1051" url="https://attack.mitre.org/mitigations/M1051"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:00.975">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-DS0002" name="User Account" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>A profile representing a user, device, service, or application used to authenticate and access resources&lt;br /&gt;&lt;p&gt;Detailed detections per technique:&lt;/p&gt;&lt;br /&gt;['T1110.002']:  Monitor for many failed authentication attempts across various accounts that may result from password spraying attempts. It is difficult to detect when hashes are cracked, since this is generally done outside the scope of the target network. (ex: Windows EID 4625 or 5379)&lt;br /&gt;['T1078.002']: Monitor for an attempt by a user to gain access to a network or computing resource, often by the use of domain authentication services, such as the System Security Services Daemon (sssd) on Linux&lt;br /&gt;['T1078.004']: Monitor the activity of cloud accounts to detect abnormal or malicious behavior, such as accessing information outside of the normal function of the account or account usage at atypical hours.&lt;br /&gt;['T1552.007']: It may be possible to detect adversary use of credentials they have obtained such as in [Valid Accounts](https://attack.mitre.org/techniques/T1078).&lt;br /&gt;['T1070']: Monitor for an attempt by a user to gain access to a network or computing resource, often by providing credentials that may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined malware.&lt;br /&gt;['T1550.003']: Audit all Kerberos authentication and credential use events and review for discrepancies. Unusual remote authentication events that correlate with other suspicious activity (such as writing and executing binaries) may indicate malicious activity.&lt;br /&gt;['T1621']: Monitor user account logs for suspicious events: unusual login attempt source location, mismatch in location of login attempt and smart device receiving 2FA/MFA request prompts, and high volume of repeated login attempts, all of which may indicate user's primary credentials have been compromised minus 2FA/MFA mechanism.&lt;br /&gt;['T1212']: Credential resources obtained through exploitation may be detectable in use if they are not normally used or seen.&lt;br /&gt;['T1110']:  Monitor for many failed authentication attempts across various accounts that may result from password spraying attempts. It is difficult to detect when hashes are cracked, since this is generally done outside the scope of the target network.&lt;br /&gt;['T1606.002']: Monitor for user authentication attempts, when requesting access tokens to services, that failed because of Conditional Access Policies (CAP). Some SAML tokens features, such as the location of a user, may not be as easy to claim.&lt;br /&gt;['T1207']: Investigate usage of Kerberos Service Principal Names (SPNs), especially those associated with services (beginning with "GC/") by computers not present in the DC organizational unit (OU). The SPN associated with the Directory Replication Service (DRS) Remote Protocol interface (GUID E3514235-4B06-11D1-AB04-00C04FC2DCD2) can be set without logging.(Citation: ADDSecurity DCShadow Feb 2018) A rogue DC must authenticate as a service using these two SPNs for the replication process to successfully complete.&lt;br /&gt;['T1552.005']: It may be possible to detect adversary use of credentials they have obtained such as in [Valid Accounts](https://attack.mitre.org/techniques/T1078).&lt;br /&gt;['T1078.001']: Monitor for an attempt by a user to gain access to a network or computing resource, often by providing credentials&lt;br /&gt;['T1550.002']: Monitor for user authentication attempts. From a classic Pass-The-Hash perspective, this technique uses a hash through the NTLMv1 / NTLMv2 protocol to authenticate against a compromised endpoint. This technique does not touch Kerberos. Therefore, NTLM LogonType 3 authentications that are not associated to a domain login and are not anonymous logins are suspicious. From an Over-Pass-The-Hash perspective, an adversary wants to exchange the hash for a Kerberos authentication ticket (TGT). One way to do this is by creating a sacrificial logon session with dummy credentials (LogonType 9) and then inject the hash into that session which triggers the Kerberos authentication process.&lt;br /&gt;['T1070.005']: Monitoring for Windows authentication logs are also useful in determining when authenticated network shares are established and by which account, and can be used to correlate network share activity to other events to investigate potentially malicious activity.&lt;br /&gt;['T1078']: Monitor for an attempt by a user that may obtain and abuse credentials of existing accounts as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. &lt;br /&gt;['T1070.003']: Monitor for an attempts by a user to gain access to a network or computing resource, often by providing credentials via remote terminal services, that do not have a corresponding entry in a command history file.&lt;br /&gt;['T1550']: Monitor for an attempt by a user to gain access to a network or computing resource, often by providing credentials that may use alternate authentication material, such as password hashes, Kerberos tickets, and application access tokens, in order to move laterally within an environment and bypass normal system access controls.&lt;br /&gt;['T1538']: Correlate other security systems with login information&lt;br /&gt;['T1552']: Monitor for an attempt by a user to gain access to a network or computing resource, often by providing credentials that may search compromised systems to find and obtain insecurely stored credentials.&lt;br /&gt;['T1564.002']: Monitor for newly constructed user accounts, such as userIDs under 500 on macOS, that may mask the presence of user accounts they create or modify.&lt;br /&gt;['T1136.003']: Monitor for newly constructed user accounts through the collection of usage logs from cloud user and administrator accounts to identify unusual activity in the creation of new accounts and assignment of roles to those accounts. Monitor for accounts assigned to admin roles that go over a certain threshold of known admins.&lt;br /&gt;['T1136.001']: Monitor for newly constructed user accounts through account audits to detect suspicious accounts that may have been created by an adversary. Collect data on account creation within a network or Windows Event ID 4720 (for when a user account is created on a Windows system and domain controller).&lt;br /&gt;['T1564']: Monitor for newly constructed user accounts that may attempt to hide artifacts associated with their behaviors to evade detection.&lt;br /&gt;['T1531']: Monitor for unexpected deletions of user accounts. Windows event logs may designate activity associated with an adversary's attempt to remove an account (ex: Event ID 4726 - A user account was deleted).

Alerting on these Event IDs may generate a high degree of false positives, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible.&lt;br /&gt;['T1098.001']: Monitor Azure Activity Logs for Service Principal and Application modifications. Monitor for the usage of APIs that create or import SSH keys, particularly by unexpected users or accounts such as the root account.&lt;br /&gt;['T1528']: Administrators should set up monitoring to trigger automatic alerts when policy criteria are met. For example, using a Cloud Access Security Broker (CASB), admins can create a "High severity app permissions" policy that generates alerts if apps request high severity permissions or send permissions requests for too many users.
Security analysts can hunt for malicious apps using the tools available in their CASB, identity provider, or resource provider (depending on platform.) For example, they can filter for apps that are authorized by a small number of users, apps requesting high risk permissions, permissions incongruous with the app's purpose, or apps with old "Last authorized" fields. A specific app can be investigated using an activity log displaying activities the app has performed, although some activities may be mis-logged as being performed by the user. App stores can be useful resources to further investigate suspicious apps.
Administrators can set up a variety of logs and leverage audit tools to monitor actions that can be conducted as a result of OAuth 2.0 access. For instance, audit reports enable admins to identify privilege escalation actions such as role creations or policy modifications, which could be actions performed after initial access.&lt;br /&gt;['T1531']: Monitor for changes made to user accounts for unexpected modification of properties, such as passwords or status (enabled/disabled). Windows event logs may designate activity associated with an adversary's attempt to remove access to an account:
Event ID 4723 - An attempt was made to change an account's password
Event ID 4724 - An attempt was made to reset an account's password
Event ID 4725 - A user account was disabled

Alerting on these Event IDs may generate a high degree of false positives, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible.&lt;br /&gt;['T1098.003']: Collect usage logs from cloud administrator accounts to identify unusual activity in the assignment of roles to those accounts. Monitor for accounts assigned to admin roles that go over a certain threshold of known admins.&lt;br /&gt;['T1098.005']: Monitor user accounts for new and suspicious device associations, such as those originating from unusual sources, occurring at unusual times, or following a suspicious login.(Citation: Microsoft DEV-0537) &lt;br /&gt;['T1098.002']: Monitor for unusual Exchange and Office 365 email account permissions changes that may indicate excessively broad permissions being granted to compromised accounts.&lt;br /&gt;['T1098']: Monitor events for changes to account objects and/or permissions on systems and the domain, such as event IDs 4738, 4728 and 4670. Monitor for modification of accounts in correlation with other suspicious activity. Changes may occur at unusual times or from unusual systems. Especially flag events where the subject and target accounts differ or that include additional flags such as changing a password without knowledge of the old password.

Monitor for unusual permissions changes that may indicate excessively broad permissions being granted to compromised accounts.&lt;br /&gt;['T1201']: Monitor for contextual data about an account that may attempt to access detailed information about the password policy used within an enterprise network or cloud environment.&lt;br /&gt;['T1134']: Monitor for contextual data about an account, which may include a username, user ID, environmental data, etc. that may modify access tokens to operate under a different user or system security context to perform actions and bypass access controls.&lt;br /&gt;['T1134.005']: Examine data in user's SID-History attributes&lt;br /&gt;['T1564.002']: Monitor for contextual data about an account, which may include a username, user ID, environmental data that may mask the presence of user accounts they create or modify. On macOS, identify users with an userID under 500 and the &lt;code&gt;Hide500Users&lt;/code&gt; key value in the &lt;code&gt;/Library/Preferences/com.apple.loginwindow&lt;/code&gt; plist file set to &lt;code&gt;TRUE&lt;/code&gt;.(Citation: Cybereason OSX Pirrit)&lt;br /&gt;['T1556.005']: Monitor Fine-Grained Password Policies and regularly audit user accounts and group settings.(Citation: dump_pwd_dcsync)&lt;br /&gt;['T1564']: Monitor for contextual data about an account, which may include a username, user ID, environmental data that may attempt to hide artifacts associated with their behaviors to evade detection.&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Mitre ATT&amp;CK Data Source DS0002" url="https://attack.mitre.org/datasources/DS0002"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:00.722">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-M1018" name="User Account Management" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>Manage the creation, modification, use, and permissions associated to user accounts.&lt;br /&gt;&lt;p&gt;Detailed mitigations per technique:&lt;/p&gt;&lt;br /&gt;['T1580']: Limit permissions to discover cloud infrastructure in accordance with least privilege. Organizations should limit the number of users within the organization with an IAM role that has administrative privileges, strive to reduce all permanent privileged role assignments, and conduct periodic entitlement reviews on IAM users, roles and policies.&lt;br /&gt;['T1159', 'T1543.001']: Restrict user's abilities to create Launch Agents with group policy.&lt;br /&gt;['T1543']: Limit privileges of user accounts and groups so that only authorized administrators can interact with system-level process changes and service configurations.&lt;br /&gt;['T1040']: In cloud environments, ensure that users are not granted permissions to create or modify traffic mirrors unless this is explicitly required.&lt;br /&gt;['T1578']: Limit permissions for creating, deleting, and otherwise altering compute components in accordance with least privilege. Organizations should limit the number of users within the organization with an IAM role that has administrative privileges, strive to reduce all permanent privileged role assignments, and conduct periodic entitlement reviews on IAM users, roles and policies.(Citation: Mandiant M-Trends 2020)&lt;br /&gt;['T1004', 'T1547.004']: Limit the privileges of user accounts so that only authorized administrators can perform Winlogon helper changes.&lt;br /&gt;['T1072']: Ensure that any accounts used by third-party providers to access these systems are traceable to the third-party and are not used throughout the network or used by other third-party providers in the same environment. Ensure there are regular reviews of accounts provisioned to these systems to verify continued business need, and ensure there is governance to trace de-provisioning of access that is no longer required. Ensure proper system and access isolation for critical network systems through use of account privilege separation.&lt;br /&gt;['T1574.010', 'T1574.005']: Limit privileges of user accounts and groups so that only authorized administrators can interact with service changes and service binary target path locations. Deny execution from user directories such as file download directories and temp directories where able.&lt;br /&gt;['T1098.004']: In cloud environments, ensure that only users who explicitly require the permissions to update instance metadata or configurations can do so.&lt;br /&gt;['T1619']: Restrict granting of permissions related to listing objects in cloud storage to necessary accounts.&lt;br /&gt;['T1053']: Limit privileges of user accounts and remediate Privilege Escalation vectors so only authorized administrators can create scheduled tasks on remote systems.&lt;br /&gt;['T1089', 'T1562.001']: Ensure proper user permissions are in place to prevent adversaries from disabling or interfering with security services.&lt;br /&gt;['T1530']: Configure user permissions groups and roles for access to cloud storage.(Citation: Microsoft Azure Storage Security, 2019) Implement strict Identity and Access Management (IAM) controls to prevent access to storage solutions except for the applications, users, and services that require access.(Citation: Amazon S3 Security, 2019) Ensure that temporary access tokens are issued rather than permanent credentials, especially when access is being granted to entities outside of the internal security boundary.(Citation: Amazon  AWS Temporary Security Credentials)&lt;br /&gt;['T1050']: Limit privileges of user accounts and remediate Privilege Escalation vectors so only  authorized administrators can create new services.&lt;br /&gt;['T1610']: Enforce the principle of least privilege by limiting container dashboard access to only the necessary users.&lt;br /&gt;['T1197']: 
Consider limiting access to the BITS interface to specific users or groups.(Citation: Symantec BITS May 2007)&lt;br /&gt;['T1537']: Limit user account and IAM policies to the least privileges required. Consider using temporary credentials for accounts that are only valid for a certain period of time to reduce the effectiveness of compromised accounts.&lt;br /&gt;['T1562.008']: Configure default account policy to enable logging. Manage policies to ensure only necessary users have permissions to make changes to logging policies.&lt;br /&gt;['T1546.003', 'T1084']: By default, only administrators are allowed to connect remotely using WMI; restrict other users that are allowed to connect, or disallow all users from connecting remotely to WMI.&lt;br /&gt;['T1547.009', 'T1023']: Limit permissions for who can create symbolic links in Windows to appropriate groups such as Administrators and necessary groups for virtualization. This can be done through GPO: Computer Configuration &gt; [Policies] &gt; Windows Settings &gt; Security Settings &gt; Local Policies &gt; User Rights Assignment: Create symbolic links. (Citation: UCF STIG Symbolic Links)&lt;br /&gt;['T1578.003']: Limit permissions for deleting new instances in accordance with least privilege. Organizations should limit the number of users within the organization with an IAM role that has administrative privileges, strive to reduce all permanent privileged role assignments, and conduct periodic entitlement reviews on IAM users, roles and policies.(Citation: Mandiant M-Trends 2020)&lt;br /&gt;['T1051']: Ensure that permissions of the Web server process are only what is required by not using built-in accounts; instead, create specific accounts to limit unnecessary access or permissions overlap across multiple systems. (Citation: acunetix Server Secuirty) (Citation: NIST Server Security July 2008)&lt;br /&gt;['T1134', 'T1134.001', 'T1134.003']: An adversary must already have administrator level access on the local system to make full use of this technique; be sure to restrict users and accounts to the least privileges they require.  &lt;br /&gt;['T1163']: Limit privileges of user accounts so only authorized users can edit the rc.common file.&lt;br /&gt;['T1054', 'T1562.006']: Ensure event tracers/forwarders (Citation: Microsoft ETW May 2018), firewall policies, and other associated mechanisms are secured with appropriate permissions and access controls and cannot be manipulated by user accounts.&lt;br /&gt;['T1165']: Appropriate permissions should be applied such that only specific users can edit the startup items so that they can be leveraged for privilege escalation.&lt;br /&gt;['T1543.004', 'T1160', 'T1053.004']: Limit privileges of user accounts and remediate Privilege Escalation vectors so only authorized administrators can create new Launch Daemons.&lt;br /&gt;['T1047']: By default, only administrators are allowed to connect remotely using WMI. Restrict other users who are allowed to connect, or disallow all users to connect remotely to WMI.&lt;br /&gt;['T1609']: Enforce authentication and role-based access control on the container service to restrict users to the least privileges required.(Citation: Kubernetes Hardening Guide)&lt;br /&gt;['T1550.003', 'T1097']: Do not allow a user to be a local administrator for multiple systems.&lt;br /&gt;['T1574']: Limit privileges of user accounts and groups so that only authorized administrators can interact with service changes and service binary target path locations. Deny execution from user directories such as file download directories and temp directories where able.

Ensure that proper permissions and directory access control are set to deny users the ability to write files to the top-level directory &lt;code&gt;C:&lt;/code&gt; and system directories, such as &lt;code&gt;C:\Windows\&lt;/code&gt;, to reduce places where malicious files could be placed for execution.&lt;br /&gt;['T1078']: Regularly audit user accounts for activity and deactivate or remove any that are no longer needed.&lt;br /&gt;['T1053.007']: Limit privileges of user accounts and remediate privilege escalation vectors so only authorized administrators can create container orchestration jobs.&lt;br /&gt;['T1484.001', 'T1484']: Consider implementing WMI and security filtering to further tailor which users and computers a GPO will apply to.(Citation: Wald0 Guide to GPOs)(Citation: Microsoft WMI Filters)(Citation: Microsoft GPO Security Filtering)&lt;br /&gt;['T1547.006']: Use MDM to disable user's ability to install or approve kernel extensions, and ensure all approved kernel extensions are in alignment with policies specified in &lt;code&gt;com.apple.syspolicy.kernel-extension-policy&lt;/code&gt;.(Citation: Apple TN2459 Kernel Extensions)(Citation: MDMProfileConfigMacOS)
&lt;br /&gt;['T1563.002', 'T1021.001', 'T1076', 'T1563']: Limit remote user permissions if remote access is necessary.&lt;br /&gt;['T1569', 'T1569.001']: Prevent users from installing their own launch agents or launch daemons.&lt;br /&gt;['T1501', 'T1543.002']: Limit user access to system utilities such as 'systemctl' to only users who have a legitimate need.&lt;br /&gt;['T1213.002', 'T1213', 'T1213.001']: Enforce the principle of least-privilege. Consider implementing access control mechanisms that include both authentication and authorization.&lt;br /&gt;['T1031', 'T1489']: Limit privileges of user accounts and groups so that only authorized administrators can interact with service changes and service configurations.&lt;br /&gt;['T1021']: Limit the accounts that may use remote services. Limit the permissions for accounts that are at higher risk of compromise; for example, configure SSH so users can only run specific programs.&lt;br /&gt;['T1550.002', 'T1075']: Do not allow a domain user to be in the local administrator group on multiple systems.&lt;br /&gt;['T1562']: Ensure proper user permissions are in place to prevent adversaries from disabling or interfering with security/logging services.&lt;br /&gt;['T1547.013']: Limit privileges of user accounts so only authorized privileged users can create and modify XDG autostart entries.&lt;br /&gt;['T1157']: Prevent users from being able to write files to the search paths for applications.&lt;br /&gt;['T1034']: Ensure that proper permissions and directory access control are set to deny users the ability to write files to the top-level directory &lt;code&gt;C:&lt;/code&gt; and system directories, such as &lt;code&gt;C:\Windows\&lt;/code&gt;, to reduce places where malicious files could be placed for execution.&lt;br /&gt;['T1578.001']: Limit permissions for creating snapshots or backups in accordance with least privilege. Organizations should limit the number of users within the organization with an IAM role that has administrative privileges, strive to reduce all permanent privileged role assignments, and conduct periodic entitlement reviews on IAM users, roles and policies.(Citation: Mandiant M-Trends 2020)&lt;br /&gt;['T1606.002', 'T1606']: Ensure that user accounts with administrative rights follow best practices, including use of privileged access workstations, Just in Time/Just Enough Administration (JIT/JEA), and strong authentication. Reduce the number of users that are members of highly privileged Directory Roles.(Citation: Microsoft SolarWinds Customer Guidance)&lt;br /&gt;['T1134.002']: An adversary must already have administrator level access on the local system to make full use of this technique; be sure to restrict users and accounts to the least privileges they require.&lt;br /&gt;['T1053.005']: Limit privileges of user accounts and remediate Privilege Escalation vectors so only authorized administrators can create scheduled tasks on remote systems. &lt;br /&gt;['T1566.002']: Azure AD Administrators apply limitations upon the ability for users to grant consent to unfamiliar or unverified third-party applications. &lt;br /&gt;['T1110.004', 'T1110']: Proactively reset accounts that are known to be part of breached credentials either immediately, or after detecting bruteforce attempts.&lt;br /&gt;['T1185']: Since browser pivoting requires a high integrity process to launch from, restricting user permissions and addressing Privilege Escalation and [Bypass User Account Control](https://attack.mitre.org/techniques/T1548/002) opportunities can limit the exposure to this technique.&lt;br /&gt;['T1044']: Limit privileges of user accounts and groups so that only authorized administrators can interact with service changes and service binary target path locations. Deny execution from user directories such as file download directories and temp directories where able. (Citation: Seclists Kanthak 7zip Installer)&lt;br /&gt;['T1021.004']: Limit which user accounts are allowed to login via SSH.&lt;br /&gt;['T1562.007']: Ensure least privilege principles are applied to Identity and Access Management (IAM) security policies.(Citation: Expel IO Evil in AWS)&lt;br /&gt;['T1168']: Limit privileges of user accounts and remediate Privilege Escalation vectors so only authorized users can create scheduled jobs.&lt;br /&gt;['T1538']: Enforce the principle of least-privilege by limiting dashboard visibility to only the resources required. This may limit the discovery value of the dashboard in the event of a compromised account.&lt;br /&gt;['T1550']: Enforce the principle of least-privilege. Do not allow a domain user to be in the local administrator group on multiple systems.&lt;br /&gt;['T1053.002']: Limit privileges of user accounts and remediate Privilege Escalation vectors so only authorized administrators can create scheduled tasks on remote systems. In Linux environments, users account-level access to &lt;code&gt;[at](https://attack.mitre.org/software/S0110)&lt;/code&gt; can be managed using &lt;code&gt;at.allow&lt;/code&gt; and &lt;code&gt;at.deny&lt;/code&gt; files. Users listed in the at.allow are enabled to schedule actions using at, whereas users listed in at.deny file disabled from the utility.&lt;br /&gt;['T1053.003']: &lt;code&gt;cron&lt;/code&gt; permissions are controlled by &lt;code&gt;/etc/cron.allow and /etc/cron.deny&lt;/code&gt;. If there is a &lt;code&gt;cron.allow&lt;/code&gt; file, then the user or users that need to use &lt;code&gt;cron&lt;/code&gt; will need to be listed in the file. &lt;code&gt;cron.deny&lt;/code&gt; is used to explicitly disallow users from using cron. If neither files exist, then only the super user is allowed to run cron.&lt;br /&gt;['T1505.003']: Enforce the principle of least privilege by limiting privileges of user accounts so only authorized accounts can modify the web directory.(Citation: NSA and ASD Detect and Prevent Web Shells 2020)&lt;br /&gt;['T1552.007']: Enforce authentication and role-based access control on the container API to restrict users to the least privileges required.(Citation: Kubernetes Hardening Guide)&lt;br /&gt;['T1562.004']: Ensure proper user permissions are in place to prevent adversaries from disabling or modifying firewall settings.&lt;br /&gt;['T1213.003']: Enforce the principle of least-privilege. Consider implementing access control mechanisms that include both authentication and authorization for code repositories.&lt;br /&gt;['T1613']: Enforce the principle of least privilege by limiting dashboard visibility to only the required users.&lt;br /&gt;['T1547.012']: Limit user accounts that can load or unload device drivers by disabling &lt;code&gt;SeLoadDriverPrivilege&lt;/code&gt;.&lt;br /&gt;['T1543.003']: Limit privileges of user accounts and groups so that only authorized administrators can interact with service changes and service configurations. &lt;br /&gt;['T1528']: Enforce role-based access control to limit accounts to the least privileges they require. A Cloud Access Security Broker (CASB) can be used to set usage policies and manage user permissions on cloud applications to prevent access to application access tokens. In Kubernetes applications, set "automountServiceAccountToken: false" in the YAML specification of pods that do not require access to service account tokens.(Citation: Kubernetes Hardening Guide)&lt;br /&gt;['T1053.006']: Limit user access to system utilities such as 'systemctl' or 'systemd-run' to users who have a legitimate need.&lt;br /&gt;['T1152']: Prevent users from installing their own launch agents or launch daemons and instead require them to be pushed out by group policy.&lt;br /&gt;['T1578.002']: Limit permissions for creating new instances in accordance with least privilege. Organizations should limit the number of users within the organization with an IAM role that has administrative privileges, strive to reduce all permanent privileged role assignments, and conduct periodic entitlement reviews on IAM users, roles and policies.(Citation: Mandiant M-Trends 2020)&lt;br /&gt;['T1087.004']: Limit permissions to discover cloud accounts in accordance with least privilege. Organizations should limit the number of users within the organization with an IAM role that has administrative privileges, strive to reduce all permanent privileged role assignments, and conduct periodic entitlement reviews on IAM users, roles and policies.&lt;br /&gt;['T1505']: Enforce the principle of least privilege by limiting privileges of user accounts so only authorized accounts can modify and/or add server software components.(Citation: NSA and ASD Detect and Prevent Web Shells 2020)&lt;br /&gt;['T1562.002']: Ensure proper user permissions are in place to prevent adversaries from disabling or interfering with logging.&lt;br /&gt;['T1059.008']: Use of Authentication, Authorization, and Accounting (AAA) systems will limit actions users can perform and provide a history of user actions to detect unauthorized use and abuse. Ensure least privilege principles are applied to user accounts and groups so that only authorized users can perform configuration changes. (Citation: Cisco IOS Software Integrity Assurance - AAA)&lt;br /&gt;['T1574.012']: Limit the privileges of user accounts so that only authorized administrators can edit system environment variables.&lt;br /&gt;['T1078.004']: Periodically review user accounts and remove those that are inactive or unnecessary. Limit the ability for user accounts to create additional accounts.&lt;br /&gt;['T1053.001']: Users account-level access to &lt;code&gt;[at](https://attack.mitre.org/software/S0110)&lt;/code&gt; can be managed using &lt;code&gt;/etc/at.allow&lt;/code&gt; and &lt;code&gt;/etc/at.deny&lt;/code&gt; files. Users listed in the at.allow are enabled to schedule actions using at, whereas users listed in at.deny file disabled from the utility.&lt;br /&gt;['T1162']: Restrict users from being able to create their own login items.&lt;br /&gt;['T1078']: Ensure users and user groups have appropriate permissions for their roles through Identity and Access Management (IAM) controls. Configure user permissions, groups, and roles for access to cloud-based systems as well. Implement strict IAM controls to prevent access to systems except for the applications, users, and services that require access. Consider using temporary credentials that are only good for a certain period of time in cloud environments to reduce the effectiveness of compromised accounts.&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Mitre ATT&amp;CK Mitigation M1018" url="https://attack.mitre.org/mitigations/M1018"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:01.430">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-M1017" name="User Training" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>Train users to be aware of access or manipulation attempts by an adversary to reduce the risk of successful spearphishing, social engineering, and other techniques that involve user interaction.&lt;br /&gt;&lt;p&gt;Detailed mitigations per technique:&lt;/p&gt;&lt;br /&gt;['T1566.003']: Users can be trained to identify social engineering techniques and spearphishing messages with malicious links.&lt;br /&gt;['T1204', 'T1204.001', 'T1204.002']: Use user training as a way to bring awareness to common phishing and spearphishing techniques and how to raise suspicion for potentially malicious events.&lt;br /&gt;['T1213.003']: Develop and publish policies that define acceptable information to be stored in code repositories.&lt;br /&gt;['T1164']: Holding the Shift key while logging in prevents apps from opening automatically. (Citation: Re-Open windows on Mac)&lt;br /&gt;['T1552', 'T1081', 'T1552.001']: Ensure that developers and system administrators are aware of the risk associated with having plaintext passwords in software configuration files that may be left on endpoint systems or servers.&lt;br /&gt;['T1213']: Develop and publish policies that define acceptable information to be stored in repositories.&lt;br /&gt;['T1598', 'T1598.003', 'T1598.001', 'T1598.002']: Users can be trained to identify social engineering techniques and spearphishing attempts.&lt;br /&gt;['T1213.001']: Develop and publish policies that define acceptable information to be stored in Confluence repositories.&lt;br /&gt;['T1078.002', 'T1078.004', 'T1078']: Applications may send push notifications to verify a login as a form of multi-factor authentication (MFA). Train users to only accept valid push notifications and to report suspicious push notifications.&lt;br /&gt;['T1557.002', 'T1557']: Train users to be suspicious about certificate errors. Adversaries may use their own certificates in an attempt to intercept HTTPS traffic. Certificate errors may arise when the application's certificate does not match the one expected by the host.&lt;br /&gt;['T1003.005', 'T1003', 'T1003.003', 'T1003.001', 'T1003.002', 'T1003.004']: Limit credential overlap across accounts and systems by training users and administrators not to use the same password for multiple accounts.&lt;br /&gt;['T1185']: Close all browser sessions regularly and when they are no longer needed.&lt;br /&gt;['T1072']: Have a strict approval policy for use of deployment systems.&lt;br /&gt;['T1204.003']: Train users to be aware of the existence of malicious images and how to avoid deploying instances and containers from them.&lt;br /&gt;['T1192', 'T1194']: Users can be trained to identify social engineering techniques and spearphishing emails with malicious links.&lt;br /&gt;['T1036.007']: Train users to look for double extensions in filenames, and in general use training as a way to bring awareness to common phishing and spearphishing techniques and how to raise suspicion for potentially malicious events.&lt;br /&gt;['T1111']: Remove smart cards when not in use.&lt;br /&gt;['T1528']: Users need to be trained to not authorize third-party applications they don't recognize. The user should pay particular attention to the redirect URL: if the URL is a misspelled or convoluted sequence of words related to an expected service or SaaS application, the website is likely trying to spoof a legitimate service. Users should also be cautious about the permissions they are granting to apps. For example, offline access and access to read emails should excite higher suspicions because adversaries can utilize SaaS APIs to discover credentials and other sensitive communications.&lt;br /&gt;['T1221']: Train users to identify social engineering techniques and spearphishing emails that could be used to deliver malicious documents.&lt;br /&gt;['T1056.002']: Use user training as a way to bring awareness and raise suspicion for potentially malicious events and dialog boxes (ex: Office documents prompting for credentials).&lt;br /&gt;['T1176']: 
Close out all browser sessions when finished using them to prevent any potentially malicious extensions from continuing to run.&lt;br /&gt;['T1566.001', 'T1193']: Users can be trained to identify social engineering techniques and spearphishing emails.&lt;br /&gt;['T1213.002']: Develop and publish policies that define acceptable information to be stored in SharePoint repositories.&lt;br /&gt;['T1566.002']: Users can be trained to identify social engineering techniques and spearphishing emails with malicious links which includes phishing for consent with OAuth 2.0 &lt;br /&gt;['T1566']: Users can be trained to identify social engineering techniques and phishing emails.&lt;br /&gt;['T1547.007']: Holding the Shift key while logging in prevents apps from opening automatically.(Citation: Re-Open windows on Mac)&lt;br /&gt;['T1141']: Use user training as a way to bring awareness and raise suspicion for potentially malicious events (ex: Office documents prompting for credentials).&lt;br /&gt;['T1539']: Train users to identify aspects of phishing attempts where they're asked to enter credentials into a site that has the incorrect domain for the application they are logging into.&lt;br /&gt;['T1621']: Train users to only accept 2FA/MFA requests from login attempts they initiated, to review source location of the login attempt prompting the 2FA/MFA requests, and to report suspicious/unsolicited prompts.&lt;br /&gt;['T1547.011']: Holding the shift key during login prevents apps from opening automatically.(Citation: Re-Open windows on Mac)&lt;br /&gt;['T1162']: Holding the shift key during login prevents apps from opening automatically. (Citation: Re-Open windows on Mac)&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Mitre ATT&amp;CK Mitigation M1017" url="https://attack.mitre.org/mitigations/M1017"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:01.424">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-DS0024" name="Windows Registry" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>A Windows OS hierarchical database that stores much of the information and settings for software programs, hardware devices, user preferences, and operating-system configurations(Citation: Microsoft Registry)&lt;br /&gt;&lt;p&gt;Detailed detections per technique:&lt;/p&gt;&lt;br /&gt;['T1112']: Monitor for changes made to windows registry keys or values. Consider enabling Registry Auditing on specific keys to produce an alertable event (Event ID 4657) whenever a value is changed (though this may not trigger when values are created with Reghide or other evasive methods). (Citation: Microsoft 4657 APR 2017) Changes to Registry entries that load software on Windows startup that do not correlate with known software, patch cycles, etc., are suspicious, as are additions or changes to files within the startup folder. Changes could also include new services and modification of existing binary paths to point to malicious files. If a change to a service-related entry occurs, then it will likely be followed by a local or remote service start or restart to execute the file.&lt;br /&gt;['T1548.002']: Some UAC bypass methods rely on modifying specific, user-accessible Registry settings. For example:
* The &lt;code&gt;eventvwr.exe&lt;/code&gt; bypass uses the &lt;code&gt;[HKEY_CURRENT_USER]\Software\Classes\mscfile\shell\open\command&lt;/code&gt; Registry key.(Citation: enigma0x3 Fileless UAC Bypass)
* The &lt;code&gt;sdclt.exe&lt;/code&gt; bypass uses the &lt;code&gt;[HKEY_CURRENT_USER]\Software\Microsoft\Windows\CurrentVersion\App Paths\control.exe&lt;/code&gt; and &lt;code&gt;[HKEY_CURRENT_USER]\Software\Classes\exefile\shell\runas\command\isolatedCommand&lt;/code&gt; Registry keys.(Citation: enigma0x3 sdclt app paths)(Citation: enigma0x3 sdclt bypass)
Analysts should monitor these Registry settings for unauthorized changes.&lt;br /&gt;['T1574.011']: Monitor for modification of Registry keys and values used by services such as HKLM\SYSTEM\CurrentControlSet\Services that may allow adversaries to launch their own code when a service starts.&lt;br /&gt;['T1543.003']: Look for changes to service Registry entries that do not correlate with known software, patch cycles, etc. Service information is stored in the Registry at &lt;code&gt;HKLM\SYSTEM\CurrentControlSet\Services&lt;/code&gt;. Changes to the binary path and the service startup type changed from manual or disabled to automatic, if it does not typically do so, may be suspicious. Tools such as Sysinternals Autoruns may also be used to detect system service changes that could be attempts at persistence.(Citation: TechNet Autoruns)&lt;br /&gt;['T1547.010']: Monitor Registry writes to &lt;code&gt;HKLM\SYSTEM\CurrentControlSet\Control\Print\Monitors&lt;/code&gt;. Run the Autoruns utility, which checks for this Registry key as a persistence mechanism (Citation: TechNet Autoruns)&lt;br /&gt;['T1556.002']: Monitor for changes to Registry entries for password filters (ex: HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Lsa\Notification Packages) and correlate then investigate the DLL files these files reference.&lt;br /&gt;['T1569']: Monitor for changes made to windows registry keys and/or values that may abuse system services or daemons to execute commands or programs.&lt;br /&gt;['T1489']: Monitor for changes made to windows registry keys and/or values that may stop or disable services on a system to render those services unavailable to legitimate users.&lt;br /&gt;['T1569.002']: Monitor for changes made to windows registry keys and/or values that may abuse the Windows service control manager to execute malicious commands or payloads.&lt;br /&gt;['T1547.012']: Monitor Registry writes to &lt;code&gt;HKLM\SYSTEM\ControlSet001\Control\Print\Environments\\[Windows architecture]\Print Processors\\[user defined]\\Driver&lt;/code&gt; or &lt;code&gt;HKLM\SYSTEM\CurrentControlSet\Control\Print\Environments\\[Windows architecture]\Print Processors\\[user defined]\Driver&lt;/code&gt; as they pertain to print processor installations.&lt;br /&gt;['T1546.007']: Monitor the &lt;code&gt;HKLM\SOFTWARE\Microsoft\Netsh&lt;/code&gt; registry key for any new or suspicious entries that do not correlate with known system files or benign software. (Citation: Demaske Netsh Persistence)&lt;br /&gt;['T1546.011']: Monitor for changes to windows registry keys and/or values that may establish persistence and/or elevate privileges by executing malicious content triggered by application shims.&lt;br /&gt;['T1547.002']: Monitor the Registry for changes to the LSA Registry keys. Windows 8.1 and Windows Server 2012 R2 may generate events when unsigned DLLs try to load into the LSA by setting the Registry key &lt;code&gt;HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\LSASS.exe&lt;/code&gt; with AuditLevel = 8. (Citation: Graeber 2014) (Citation: Microsoft Configure LSA)&lt;br /&gt;['T1074.001']: Consider monitoring accesses and modifications to local storage repositories (such as the Windows Registry), especially from suspicious processes that could be related to malicious data collection.&lt;br /&gt;['T1564.006']: Monitor for changes made to Windows Registry keys and/or values that may be the result of using a virtual instance to avoid detection. For example, if virtualization software is installed by the adversary the Registry may provide detection opportunities. &lt;br /&gt;['T1564.005']: Monitor for changes made to windows registry keys and/or values that may use a hidden file system to conceal malicious activity from users and security tools.&lt;br /&gt;['T1490']: Monitor the registry for changes associated with system recovery features (ex: the creation of &lt;code&gt;HKEY_CURRENT_USER\Software\Policies\Microsoft\PreviousVersions\DisableLocalPage&lt;/code&gt;).&lt;br /&gt;['T1562.004']: Monitor for changes made to windows Registry keys and/or values that adversaries might use to disable or modify System Firewall settings such as HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services\SharedAccess\Parameters\FirewallPolicy.&lt;br /&gt;['T1218']: Monitor for changes made to Windows Registry keys and/or values that may forge credential materials that can be used to gain access to web applications or Internet services.&lt;br /&gt;['T1574']: Monitor for changes made to windows registry keys and/or values that may execute their own malicious payloads by hijacking the way operating systems run programs.&lt;br /&gt;['T1137.001']: Collect events related to Registry key modification for keys that could be used for Office-based persistence.(Citation: CrowdStrike Outlook Forms)(Citation: Outlook Today Home Page)&lt;br /&gt;['T1137.006']: Audit the Registry entries relevant for enabling add-ins.(Citation: GlobalDotName Jun 2019)(Citation: MRWLabs Office Persistence Add-ins)&lt;br /&gt;['T1218.002']: Inventory Control Panel items to locate unregistered and potentially malicious files present on systems:
* Executable format registered Control Panel items will have a globally unique identifier (GUID) and registration Registry entries in &lt;code&gt;HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\ControlPanel\NameSpace&lt;/code&gt; and &lt;code&gt;HKEY_CLASSES_ROOT\CLSID\{GUID}&lt;/code&gt;. These entries may contain information about the Control Panel item such as its display name, path to the local file, and the command executed when opened in the Control Panel. (Citation: Microsoft Implementing CPL)
* CPL format registered Control Panel items stored in the System32 directory are automatically shown in the Control Panel. Other Control Panel items will have registration entries in the &lt;code&gt;CPLs&lt;/code&gt; and &lt;code&gt;Extended Properties&lt;/code&gt; Registry keys of &lt;code&gt;HKEY_LOCAL_MACHINE or HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Control Panel&lt;/code&gt;. These entries may include information such as a GUID, path to the local file, and a canonical name used to launch the file programmatically (&lt;code&gt; WinExec("c:\windows\system32\control.exe {Canonical_Name}", SW_NORMAL);&lt;/code&gt;) or from a command line (&lt;code&gt;control.exe /name {Canonical_Name}&lt;/code&gt;).(Citation: Microsoft Implementing CPL)
* Some Control Panel items are extensible via Shell extensions registered in &lt;code&gt;HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Controls Folder\{name}\Shellex\PropertySheetHandlers&lt;/code&gt; where {name} is the predefined name of the system item.(Citation: Microsoft Implementing CPL)&lt;br /&gt;['T1553.004']: Monitoring changes to the Windows Registry may reveal malicious root certificate installation. Installed root certificates are located in the Registry under &lt;code&gt;HKLM\SOFTWARE\Microsoft\EnterpriseCertificates\Root\Certificates\&lt;/code&gt; and &lt;/code&gt;[HKLM or HKCU]\Software[\Policies\]\Microsoft\SystemCertificates\Root\Certificates\&lt;/code&gt;. There are a subset of root certificates that are consistent across Windows systems and can be used for comparison: (Citation: Tripwire AppUNBlocker)
* 18F7C1FCC3090203FD5BAA2F861A754976C8DD25
* 245C97DF7514E7CF2DF8BE72AE957B9E04741E85
* 3B1EFD3A66EA28B16697394703A72CA340A05BD5
* 7F88CD7223F3C813818C994614A89C99FA3B5247
* 8F43288AD272F3103B6FB1428485EA3014C0BCFE
* A43489159A520F0D93D032CCAF37E7FE20A8B419
* BE36A4562FB2EE05DBB3D32323ADF445084ED656
* CDD4EEAE6000AC7F40C3802C171E30148030C072&lt;br /&gt;['T1564.002']: Monitor for changes made to windows registry key or values for unexpected modifications of the &lt;code&gt;HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon\SpecialAccounts\UserList&lt;/code&gt; key.&lt;br /&gt;['T1553.006']: Consider monitoring for modifications made to Registry keys associated with code signing policies, such as &lt;code&gt;HKCU\Software\Policies\Microsoft\Windows NT\Driver Signing&lt;/code&gt;. Modifications to the code signing policy of a system are likely to be rare.&lt;br /&gt;['T1553.003']: Enable the Registry Global Object Access Auditing (Citation: Microsoft Registry Auditing Aug 2016) setting in the Advanced Security Audit policy to apply a global system access control list (SACL) and event auditing on modifications to Registry values (sub)keys related to SIPs and trust providers:(Citation: Microsoft Audit Registry July 2012)
* &lt;code&gt;HKLM\SOFTWARE\Microsoft\Cryptography\OID&lt;/code&gt;
* &lt;code&gt;HKLM\SOFTWARE\WOW6432Node\Microsoft\Cryptography\OID&lt;/code&gt;
* &lt;code&gt;HKLM\SOFTWARE\Microsoft\Cryptography\Providers\Trust&lt;/code&gt;
* &lt;code&gt;HKLM\SOFTWARE\WOW6432Node\Microsoft\Cryptography\Providers\Trust&lt;/code&gt;

**Note:** As part of this technique, adversaries may attempt to manually edit these Registry keys (ex: Regedit) or utilize the legitimate registration process using [Regsvr32](https://attack.mitre.org/techniques/T1218/010).(Citation: SpectorOps Subverting Trust Sept 2017)

Periodically baseline registered SIPs and trust providers (Registry entries and files on disk), specifically looking for new, modified, or non-Microsoft entries.(Citation: SpectorOps Subverting Trust Sept 2017)&lt;br /&gt;['T1056']: Monitor for changes made to windows registry keys or values for unexpected modifications&lt;br /&gt;['T1546.012']: Monitor Registry values associated with IFEOs, as well as silent process exit monitoring, for modifications that do not correlate with known software, patch cycles, etc.&lt;br /&gt;['T1137']: Many Office-related persistence mechanisms require changes to the Registry and for binaries, files, or scripts to be written to disk or existing files modified to include malicious scripts. Collect events related to Registry key creation and modification for keys that could be used for Office-based persistence.(Citation: CrowdStrike Outlook Forms)(Citation: Outlook Today Home Page)&lt;br /&gt;['T1574.007']: Monitor for modifications of PATH environment variable Registry keys such as &lt;code&gt;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Session Manager\Environment\Path&lt;/code&gt;. An adversary can add a new directory or list of directories before other locations where programs can be executed from.&lt;br /&gt;['T1557']: Monitor HKLM\Software\Policies\Microsoft\Windows NT\DNSClient for changes to the "EnableMulticast" DWORD value. A value of "0" indicates LLMNR is disabled.&lt;br /&gt;['T1562.009']: Monitor modifications to Registry data associated with enabling safe mode. For example, a service can be forced to start on safe mode boot by adding a &lt;code&gt;\*&lt;/code&gt; in front of the "Startup" value name: &lt;code&gt;HKLM\Software\Microsoft\Windows\CurrentVersion\Run\["\*Startup"="{Path}"]&lt;/code&gt; or by adding a key to &lt;code&gt;HKLM\SYSTEM\CurrentControlSet\Control\SafeBoot\Minimal&lt;/code&gt;.(Citation: BleepingComputer REvil 2021)(Citation: Sophos Snatch Ransomware 2019)&lt;br /&gt;['T1547.014']: Monitor Registry key modifications to &lt;code&gt;HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Active Setup\Installed Components\&lt;/code&gt;.
Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing the Active Setup Registry locations and startup folders.(Citation: TechNet Autoruns) Suspicious program execution as startup programs may show up as outlier processes that have not been seen before when compared against historical data.&lt;br /&gt;['T1547']: Monitor for modifications of mechanisms that could be used to trigger autostart execution, such as relevant additions to the Registry.&lt;br /&gt;['T1543']: Monitor for changes to windows registry keys and/or values that may create or modify system-level processes to repeatedly execute malicious payloads as part of persistence.&lt;br /&gt;['T1574.012']: For detecting system and user scope abuse of the COR_PROFILER variable, monitor the Registry for changes to COR_ENABLE_PROFILING, COR_PROFILER, and COR_PROFILER_PATH that correspond to system and user environment variables that do not correlate to known developer tools.&lt;br /&gt;['T1562.001']: Monitor for changes made to Windows Registry keys and/or values related to services and startup programs that correspond to security tools such as HKLM:\SOFTWARE\Policies\Microsoft\Windows Defender.&lt;br /&gt;['T1546.001']: Collect and analyze changes to Registry keys that associate file extensions to default applications for execution and correlate with unknown process launch activity or unusual file types for that process. User file association preferences are stored under &lt;code&gt; [HKEY_CURRENT_USER]\Software\Microsoft\Windows\CurrentVersion\Explorer\FileExts&lt;/code&gt; and override associations configured under &lt;code&gt;[HKEY_CLASSES_ROOT]&lt;/code&gt;. Changes to a user's preference will occur under this entry's subkeys.&lt;br /&gt;['T1546.009']: Monitor the AppCertDLLs Registry value for modifications that do not correlate with known software, patch cycles, etc.&lt;br /&gt;['T1546']: Monitor for changes made to windows registry keys and/or values that may establish persistence and/or elevate privileges using system mechanisms that trigger execution based on specific events.&lt;br /&gt;['T1137.002']: Monitor for changes made to the Office Test Registry key. Collect events related to Registry key modification for keys that could be used for Office-based persistence. Since v13.52, Autoruns can detect tasks set up using the Office Test Registry key.(Citation: Palo Alto Office Test Sofacy)&lt;br /&gt;['T1562.006']: To detect changes in ETW you can also monitor the registry key which contains configurations for all ETW event providers: &lt;code&gt;HKLM\SYSTEM\CurrentControlSet\Control\WMI\Autologger\AUTOLOGGER_NAME\{PROVIDER_GUID}&lt;/code&gt;&lt;br /&gt;['T1564']: Monitor for changes made to windows registry keys and/or values that may attempt to hide artifacts associated with their behaviors to evade detection.&lt;br /&gt;['T1505.005']: Monitor for changes to Registry keys associated with &lt;code&gt;ServiceDll&lt;/code&gt; and other subkey values under &lt;code&gt;HKLM\System\CurrentControlSet\services\TermService\Parameters\&lt;/code&gt;.&lt;br /&gt;['T1546.010']: Monitor the AppInit_DLLs Registry values for modifications that do not correlate with known software, patch cycles, etc.&lt;br /&gt;['T1548']: There are many ways to perform UAC bypasses when a user is in the local administrator group on a system, so it may be difficult to target detection on all variations. Efforts should likely be placed on mitigation and collecting enough information on process launches and actions that could be performed before and after a UAC bypass is performed. Some UAC bypass methods rely on modifying specific, user-accessible Registry settings. Analysts should monitor Registry settings for unauthorized changes.&lt;br /&gt;['T1547.005']: Monitor the Registry for changes to the SSP Registry keys. Windows 8.1 and Windows Server 2012 R2 may generate events when unsigned SSP DLLs try to load into the LSA by setting the Registry key &lt;code&gt;HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\LSASS.exe&lt;/code&gt; with AuditLevel = 8. (Citation: Graeber 2014) (Citation: Microsoft Configure LSA)&lt;br /&gt;['T1547.003']: Monitor for changes made to windows registry keys and/or values modifying W32Time information in the Registry.&lt;br /&gt;['T1546.008']: Monitor Registry keys within &lt;code&gt;HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options&lt;/code&gt;.&lt;br /&gt;['T1546.002']: Monitor changes to screensaver configuration changes in the Registry that may not correlate with typical user behavior. Tools such as Sysinternals Autoruns can be used to detect changes to the screensaver binary path in the Registry.&lt;br /&gt;['T1111']: Monitor for changes to windows registry keys or values that may target multi-factor authentication mechanisms, such as smart cards, to gain access to credentials that can be used to access systems, services, and network resources.&lt;br /&gt;['T1546.015']: There are opportunities to detect COM hijacking by searching for Registry references that have been replaced and through Registry operations (ex: [Reg](https://attack.mitre.org/software/S0075)) replacing known binary paths with unknown paths or otherwise malicious content. Even though some third-party applications define user COM objects, the presence of objects within HKEY_CURRENT_USER\Software\Classes\CLSID\ may be anomalous and should be investigated since user objects will be loaded prior to machine objects in HKEY_LOCAL_MACHINE\SOFTWARE\Classes\CLSID\.(Citation: Elastic COM Hijacking) Registry entries for existing COM objects may change infrequently. When an entry with a known good path and binary is replaced or changed to an unusual value to point to an unknown binary in a new location, then it may indicate suspicious behavior and should be investigated.&lt;br /&gt;['T1547.001']: Monitor Registry for changes to run keys that do not correlate with known software, patch cycles, etc. Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing the run keys' Registry locations. (Citation: TechNet Autoruns)&lt;br /&gt;['T1547.004']: Monitor for changes to Registry entries associated with Winlogon that do not correlate with known software, patch cycles, etc. Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing current Winlogon helper values. (Citation: TechNet Autoruns)&lt;br /&gt;['T1562']: Monitor Registry edits for modifications to services and startup programs that correspond to security tools.&lt;br /&gt;['T1070']: Monitor for changes made to windows registry keys or values that may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined malware.&lt;br /&gt;['T1553']: Monitoring changes to the Windows Registry may reveal malicious attempts to modify trust settings, such as the installation of root certificates. Installed root certificates are located in the Registry under &lt;code&gt;HKLM\SOFTWARE\Microsoft\EnterpriseCertificates\Root\Certificates\&lt;/code&gt; and &lt;/code&gt;[HKLM or HKCU]\Software[\Policies\]\Microsoft\SystemCertificates\Root\Certificates\&lt;/code&gt;. There are a subset of root certificates that are consistent across Windows systems and can be used for comparison: (Citation: Tripwire AppUNBlocker) Also consider enabling the Registry Global Object Access Auditing (Citation: Microsoft Registry Auditing Aug 2016) setting in the Advanced Security Audit policy to apply a global system access control list (SACL) and event auditing on modifications to Registry values (sub)keys related to SIPs and trust providers:(Citation: Microsoft Audit Registry July 2012) &lt;br /&gt;['T1552']: Monitor for unexpected windows registry key being accessed that may search compromised systems to find and obtain insecurely stored credentials.&lt;br /&gt;['T1003.002']: Monitor for the SAM registry key dump being created to access stored account password hashes. Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromised https://attack.mitre.org/techniques/T1078 in-use by adversaries may help as well.&lt;br /&gt;['T1012']: Monitor for unexpected process interactions with the Windows Registry (i.e. reads) that may be related to gathering information.&lt;br /&gt;['T1003']: Monitor for the SAM registry key being accessed that may attempt to dump credentials to obtain account login and credential material, normally in the form of a hash or a clear text password, from the operating system and software.&lt;br /&gt;['T1003.004']: Monitor for the LSA secrets are stored in the registry at &lt;code&gt;HKEY_LOCAL_MACHINE\SECURITY\Policy\Secrets&lt;/code&gt; being accessed&lt;br /&gt;['T1614.001']: Monitor for access to windows registry keys that may attempt to gather information about the system language of a victim in order to infer the geographical location of that host.&lt;br /&gt;['T1552.002']: Monitor for unexpected windows registry key being accessed that may search the Registry on compromised systems for insecurely stored credentials.&lt;br /&gt;['T1112']: Monitor for unexpected deletion of windows registry keys to hide configuration information, remove information as part of cleaning up, or as part of other techniques to aid in persistence and execution. &lt;br /&gt;['T1562']: Monitor for unexpected deletion of windows registry keys that that may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms.&lt;br /&gt;['T1562.001']: Monitor for deletion of Windows Registry keys and/or values related to services and startup programs that correspond to security tools such as HKLM:\SOFTWARE\Microsoft\AMSI\Providers.&lt;br /&gt;['T1070']: Monitor windows registry keys that may be deleted or alter generated artifacts on a host system, including logs or captured files such as quarantined malware.&lt;br /&gt;['T1562.009']: Monitor Registry creation for services that may start on safe mode. For example, a program can be forced to start on safe mode boot by adding a &lt;code&gt;\*&lt;/code&gt; in front of the "Startup" value name: &lt;code&gt;HKLM\Software\Microsoft\Windows\CurrentVersion\Run\["\*Startup"="{Path}"]&lt;/code&gt; or by adding a key to &lt;code&gt;HKLM\SYSTEM\CurrentControlSet\Control\SafeBoot\Minimal&lt;/code&gt;.(Citation: BleepingComputer REvil 2021)(Citation: Sophos Snatch Ransomware 2019)&lt;br /&gt;['T1037']: Monitor for newly constructed windows registry keys that may use scripts automatically executed at boot or logon initialization to establish persistence.&lt;br /&gt;['T1137.002']: Monitor for the creation of the Office Test Registry key. Collect events related to Registry key creation for keys that could be used for Office-based persistence. Since v13.52, Autoruns can detect tasks set up using the Office Test Registry key.(Citation: Palo Alto Office Test Sofacy)&lt;br /&gt;['T1547.014']: Monitor Registry key additions to &lt;code&gt;HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Active Setup\Installed Components\&lt;/code&gt;.
Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing the Active Setup Registry locations and startup folders.(Citation: TechNet Autoruns) Suspicious program execution as startup programs may show up as outlier processes that have not been seen before when compared against historical data.&lt;br /&gt;['T1553']: Monitoring the creation of (sub)keys within the Windows Registry may reveal malicious attempts to modify trust settings, such as the installation of root certificates. Installed root certificates are located in the Registry under &lt;code&gt;HKLM\SOFTWARE\Microsoft\EnterpriseCertificates\Root\Certificates\&lt;/code&gt; and &lt;/code&gt;[HKLM or HKCU]\Software[\Policies\]\Microsoft\SystemCertificates\Root\Certificates\&lt;/code&gt;. There are a subset of root certificates that are consistent across Windows systems and can be used for comparison: (Citation: Tripwire AppUNBlocker)
* 18F7C1FCC3090203FD5BAA2F861A754976C8DD25
* 245C97DF7514E7CF2DF8BE72AE957B9E04741E85
* 3B1EFD3A66EA28B16697394703A72CA340A05BD5
* 7F88CD7223F3C813818C994614A89C99FA3B5247
* 8F43288AD272F3103B6FB1428485EA3014C0BCFE
* A43489159A520F0D93D032CCAF37E7FE20A8B419
* BE36A4562FB2EE05DBB3D32323ADF445084ED656
* CDD4EEAE6000AC7F40C3802C171E30148030C072&lt;br /&gt;['T1553.004']: Monitoring the creation of (sub)keys within the Windows Registry may reveal malicious root certificate installation. Installed root certificates are located in the Registry under &lt;code&gt;HKLM\SOFTWARE\Microsoft\EnterpriseCertificates\Root\Certificates\&lt;/code&gt; and &lt;/code&gt;[HKLM or HKCU]\Software[\Policies\]\Microsoft\SystemCertificates\Root\Certificates\&lt;/code&gt;. There are a subset of root certificates that are consistent across Windows systems and can be used for comparison: (Citation: Tripwire AppUNBlocker)
* 18F7C1FCC3090203FD5BAA2F861A754976C8DD25
* 245C97DF7514E7CF2DF8BE72AE957B9E04741E85
* 3B1EFD3A66EA28B16697394703A72CA340A05BD5
* 7F88CD7223F3C813818C994614A89C99FA3B5247
* 8F43288AD272F3103B6FB1428485EA3014C0BCFE
* A43489159A520F0D93D032CCAF37E7FE20A8B419
* BE36A4562FB2EE05DBB3D32323ADF445084ED656
* CDD4EEAE6000AC7F40C3802C171E30148030C072&lt;br /&gt;['T1547']: Monitor for additions of mechanisms that could be used to trigger autostart execution, such as relevant additions to the Registry.&lt;br /&gt;['T1112']: Monitor for newly constructed registry keys or values to aid in persistence and execution. &lt;br /&gt;['T1543.003']: Monitor for new constructed windows registry keys that may create or modify Windows services to repeatedly execute malicious payloads as part of persistence.&lt;br /&gt;['T1176']: Monitor for any new items written to the Registry or PE files written to disk. That may correlate with browser extension installation.&lt;br /&gt;['T1543']: Monitor for newly constructed windows registry keys that may create or modify system-level processes to repeatedly execute malicious payloads as part of persistence.&lt;br /&gt;['T1562.002']: Monitor the addition of the MiniNT registry key in HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control, which may disable Event Viewer.(Citation: def_ev_win_event_logging)&lt;br /&gt;['T1547.001']: Monitor for newly created windows registry keys that may achieve persistence by adding a program to a startup folder or referencing it with a Registry run key.&lt;br /&gt;['T1137.001']: Collect events related to Registry key creation for keys that could be used for Office-based persistence.(Citation: CrowdStrike Outlook Forms)(Citation: Outlook Today Home Page)&lt;br /&gt;['T1037.001']: Monitor for the creation/modification to Registry keys associated with Windows logon scrips, nameley &lt;code&gt;HKCU\Environment\UserInitMprLogonScript&lt;/code&gt;.&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Microsoft Registry" url="https://docs.microsoft.com/en-us/windows/win32/sysinfo/registry"/>
            <reference name="Mitre ATT&amp;CK Data Source DS0024" url="https://attack.mitre.org/datasources/DS0024"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:00.800">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="account-manipulation" name="Account Manipulation" desc="" library="">
          <threats>
            <threat ref="T-T1098.003" name="Additional Cloud Roles" state="Expose" source="MANUAL" edited="false" owner="JamesRabe" library="" editable="true">
              <desc>An adversary may add additional roles or permissions to an adversary-controlled cloud account to maintain persistent access to a tenant. For example, they may update IAM policies in cloud-based environments or add a new global administrator in Office 365 environments.(Citation: AWS IAM Policies and Permissions)(Citation: Google Cloud IAM Policies)(Citation: Microsoft Support O365 Add Another Admin, October 2019)(Citation: Microsoft O365 Admin Roles) With sufficient permissions, a compromised account can gain almost unlimited access to data and settings (including the ability to reset the passwords of other admins).(Citation: Expel AWS Attacker)&lt;br&gt;(Citation: Microsoft O365 Admin Roles) &lt;br&gt;&lt;br&gt;This account modification may immediately follow [Create Account](https://attack.mitre.org/techniques/T1136) or other malicious account activity. Adversaries may also modify an existing [Valid Accounts](https://attack.mitre.org/techniques/T1078) that they have compromised. This could lead to privilege escalation, particularly if the roles added allow for lateral movement to additional accounts. For example, in Azure AD environments, an adversary with the Application Administrator role can add [Additional Cloud Credentials](https://attack.mitre.org/techniques/T1098/001) to their application's service principal. In doing so the adversary would be able to gain the service principal's roles and permissions, which may be different from those of the Application Administrator.(Citation: SpecterOps Azure Privilege Escalation)&lt;br&gt;&lt;br&gt;Collect activity logs from IAM services and cloud administrator accounts to identify unusual activity in the assignment of roles to those accounts. Monitor for accounts assigned to admin roles that go over a certain threshold of known admins.</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references>
                <reference name="AWS IAM Policies and Permissions" url="https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies.html"/>
                <reference name="Expel AWS Attacker" url="https://expel.com/blog/incident-report-from-cli-to-console-chasing-an-attacker-in-aws/"/>
                <reference name="Google Cloud IAM Policies" url="https://cloud.google.com/iam/docs/policies"/>
                <reference name="Microsoft O365 Admin Roles" url="https://docs.microsoft.com/en-us/office365/admin/add-users/about-admin-roles?view=o365-worldwide"/>
                <reference name="Microsoft Support O365 Add Another Admin, October 2019" url="https://support.office.com/en-us/article/add-another-admin-f693489f-9f55-4bd0-a637-a81ce93de22d"/>
                <reference name="Mitre ATT&amp;CK Technique T1098.003" url="https://attack.mitre.org/techniques/T1098/003"/>
                <reference name="SpecterOps Azure Privilege Escalation" url="https://posts.specterops.io/azure-privilege-escalation-via-service-principal-abuse-210ae2be2a5"/>
              </references>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-DS0002" mitigation="16"/>
                <countermeasure ref="C-DS0009" mitigation="12"/>
                <countermeasure ref="C-DS0017" mitigation="12"/>
                <countermeasure ref="C-DS0022" mitigation="12"/>
                <countermeasure ref="C-DS0026" mitigation="12"/>
                <countermeasure ref="C-DS0036" mitigation="12"/>
                <countermeasure ref="C-M1026" mitigation="12"/>
                <countermeasure ref="C-M1032" mitigation="12"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="T-T1098.002" name="Additional Email Delegate Permissions" state="Expose" source="MANUAL" edited="false" owner="JamesRabe" library="" editable="true">
              <desc>Adversaries may grant additional permission levels to maintain persistent access to an adversary-controlled email account. &lt;br&gt;&lt;br&gt;For example, the &lt;code&gt;Add-MailboxPermission&lt;/code&gt; [PowerShell](https://attack.mitre.org/techniques/T1059/001) cmdlet, available in on-premises Exchange and in the cloud-based service Office 365, adds permissions to a mailbox.(Citation: Microsoft - Add-MailboxPermission)(Citation: FireEye APT35 2018)(Citation: Crowdstrike Hiding in Plain Sight 2018) In Google Workspace, delegation can be enabled via the Google Admin console and users can delegate accounts via their Gmail settings.(Citation: Gmail Delegation)(Citation: Google Ensuring Your Information is Safe) &lt;br&gt;&lt;br&gt;Adversaries may also assign mailbox folder permissions through individual folder permissions or roles. In Office 365 environments, adversaries may assign the Default or Anonymous user permissions or roles to the Top of Information Store (root), Inbox, or other mailbox folders. By assigning one or both user permissions to a folder, the adversary can utilize any other account in the tenant to maintain persistence to the target user's mail folders.(Citation: Remediation and Hardening Strategies for Microsoft 365 to Defend Against UNC2452)&lt;br&gt;&lt;br&gt;This may be used in persistent threat incidents as well as BEC (Business Email Compromise) incidents where an adversary can add [Additional Cloud Roles](https://attack.mitre.org/techniques/T1098/003) to the accounts they wish to compromise. This may further enable use of additional techniques for gaining access to systems. For example, compromised business accounts are often used to send messages to other accounts in the network of the target business while creating inbox rules (ex: [Internal Spearphishing](https://attack.mitre.org/techniques/T1534)), so the messages evade spam/phishing detection mechanisms.(Citation: Bienstock, D. - Defending O365 - 2019)&lt;br&gt;&lt;br&gt;Monitor for unusual Exchange and Office 365 email account permissions changes that may indicate excessively broad permissions being granted to compromised accounts.&lt;br&gt;&lt;br&gt;Enable the UpdateFolderPermissions action for all logon types. The mailbox audit log will forward folder permission modification events to the Unified Audit Log. Create rules to alert on ModifyFolderPermissions operations where the Anonymous or Default user is assigned permissions other than None. &lt;br&gt;&lt;br&gt;A larger than normal volume of emails sent from an account and similar phishing emails sent from real accounts within a network may be a sign that an account was compromised and attempts to leverage access with modified email permissions is occurring.</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references>
                <reference name="Bienstock, D. - Defending O365 - 2019" url="https://www.slideshare.net/DouglasBienstock/shmoocon-2019-becs-and-beyond-investigating-and-defending-office-365"/>
                <reference name="Crowdstrike Hiding in Plain Sight 2018" url="https://www.crowdstrike.com/blog/hiding-in-plain-sight-using-the-office-365-activities-api-to-investigate-business-email-compromises/"/>
                <reference name="FireEye APT35 2018" url="https://www.fireeye.com/content/dam/collateral/en/mtrends-2018.pdf"/>
                <reference name="Gmail Delegation" url="https://support.google.com/a/answer/7223765?hl=en"/>
                <reference name="Google Ensuring Your Information is Safe" url="https://googleblog.blogspot.com/2011/06/ensuring-your-information-is-safe.html"/>
                <reference name="Microsoft - Add-MailboxPermission" url="https://docs.microsoft.com/en-us/powershell/module/exchange/mailboxes/add-mailboxpermission?view=exchange-ps"/>
                <reference name="Mitre ATT&amp;CK Technique T1098.002" url="https://attack.mitre.org/techniques/T1098/002"/>
                <reference name="Remediation and Hardening Strategies for Microsoft 365 to Defend Against UNC2452" url="https://www.fireeye.com/blog/threat-research/2021/01/remediation-and-hardening-strategies-for-microsoft-365-to-defend-against-unc2452.html"/>
              </references>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-DS0002" mitigation="12"/>
                <countermeasure ref="C-DS0009" mitigation="11"/>
                <countermeasure ref="C-DS0017" mitigation="11"/>
                <countermeasure ref="C-DS0022" mitigation="11"/>
                <countermeasure ref="C-DS0026" mitigation="11"/>
                <countermeasure ref="C-DS0036" mitigation="11"/>
                <countermeasure ref="C-M1026" mitigation="11"/>
                <countermeasure ref="C-M1032" mitigation="11"/>
                <countermeasure ref="C-M1042" mitigation="11"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="create-account" name="Create Account" desc="" library="">
          <threats>
            <threat ref="T-T1136.003" name="Cloud Account" state="Expose" source="MANUAL" edited="false" owner="JamesRabe" library="" editable="true">
              <desc>Adversaries may create a cloud account to maintain access to victim systems. With a sufficient level of access, such accounts may be used to establish secondary credentialed access that does not require persistent remote access tools to be deployed on the system.(Citation: Microsoft O365 Admin Roles)(Citation: Microsoft Support O365 Add Another Admin, October 2019)(Citation: AWS Create IAM User)(Citation: GCP Create Cloud Identity Users)(Citation: Microsoft Azure AD Users)&lt;br&gt;&lt;br&gt;Adversaries may create accounts that only have access to specific cloud services, which can reduce the chance of detection.&lt;br&gt;&lt;br&gt;Collect usage logs from cloud user and administrator accounts to identify unusual activity in the creation of new accounts and assignment of roles to those accounts. Monitor for accounts assigned to admin roles that go over a certain threshold of known admins.</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references>
                <reference name="AWS Create IAM User" url="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_users_create.html"/>
                <reference name="GCP Create Cloud Identity Users" url="https://support.google.com/cloudidentity/answer/7332836?hl=en&amp;ref_topic=7558554"/>
                <reference name="Microsoft Azure AD Users" url="https://docs.microsoft.com/en-us/azure/active-directory/fundamentals/add-users-azure-active-directory"/>
                <reference name="Microsoft O365 Admin Roles" url="https://docs.microsoft.com/en-us/office365/admin/add-users/about-admin-roles?view=o365-worldwide"/>
                <reference name="Microsoft Support O365 Add Another Admin, October 2019" url="https://support.office.com/en-us/article/add-another-admin-f693489f-9f55-4bd0-a637-a81ce93de22d"/>
                <reference name="Mitre ATT&amp;CK Technique T1136.003" url="https://attack.mitre.org/techniques/T1136/003"/>
              </references>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-DS0002" mitigation="20"/>
                <countermeasure ref="C-DS0009" mitigation="16"/>
                <countermeasure ref="C-DS0017" mitigation="16"/>
                <countermeasure ref="C-M1026" mitigation="16"/>
                <countermeasure ref="C-M1030" mitigation="16"/>
                <countermeasure ref="C-M1032" mitigation="16"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="office-application-startup" name="Office Application Startup" desc="" library="">
          <threats>
            <threat ref="T-T1137.006" name="Add-ins" state="Expose" source="MANUAL" edited="false" owner="JamesRabe" library="" editable="true">
              <desc>Adversaries may abuse Microsoft Office add-ins to obtain persistence on a compromised system. Office add-ins can be used to add functionality to Office programs. (Citation: Microsoft Office Add-ins) There are different types of add-ins that can be used by the various Office products; including Word/Excel add-in Libraries (WLL/XLL), VBA add-ins, Office Component Object Model (COM) add-ins, automation add-ins, VBA Editor (VBE), Visual Studio Tools for Office (VSTO) add-ins, and Outlook add-ins. (Citation: MRWLabs Office Persistence Add-ins)(Citation: FireEye Mail CDS 2018)&lt;br&gt;&lt;br&gt;Add-ins can be used to obtain persistence because they can be set to execute code when an Office application starts. &lt;br&gt;&lt;br&gt;Monitor and validate the Office trusted locations on the file system and audit the Registry entries relevant for enabling add-ins.(Citation: GlobalDotName Jun 2019)(Citation: MRWLabs Office Persistence Add-ins)&lt;br&gt;&lt;br&gt;Collect process execution information including process IDs (PID) and parent process IDs (PPID) and look for abnormal chains of activity resulting from Office processes. Non-standard process execution trees may also indicate suspicious or malicious behavior</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references>
                <reference name="FireEye Mail CDS 2018" url="https://summit.fireeye.com/content/dam/fireeye-www/summit/cds-2018/presentations/cds18-technical-s03-youve-got-mail.pdf"/>
                <reference name="GlobalDotName Jun 2019" url="https://www.221bluestreet.com/post/office-templates-and-globaldotname-a-stealthy-office-persistence-technique"/>
                <reference name="MRWLabs Office Persistence Add-ins" url="https://labs.mwrinfosecurity.com/blog/add-in-opportunities-for-office-persistence/"/>
                <reference name="Microsoft Office Add-ins" url="https://support.office.com/article/Add-or-remove-add-ins-0af570c4-5cf3-4fa9-9b88-403625a0b460"/>
                <reference name="Mitre ATT&amp;CK Technique T1137.006" url="https://attack.mitre.org/techniques/T1137/006"/>
              </references>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-DS0009" mitigation="16"/>
                <countermeasure ref="C-DS0011" mitigation="14"/>
                <countermeasure ref="C-DS0015" mitigation="14"/>
                <countermeasure ref="C-DS0017" mitigation="14"/>
                <countermeasure ref="C-DS0022" mitigation="14"/>
                <countermeasure ref="C-DS0024" mitigation="14"/>
                <countermeasure ref="C-M1040" mitigation="14"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="T-T1137.001" name="Office Template Macros" state="Expose" source="MANUAL" edited="false" owner="JamesRabe" library="" editable="true">
              <desc>Adversaries may abuse Microsoft Office templates to obtain persistence on a compromised system. Microsoft Office contains templates that are part of common Office applications and are used to customize styles. The base templates within the application are used each time an application starts. (Citation: Microsoft Change Normal Template)&lt;br&gt;&lt;br&gt;Office Visual Basic for Applications (VBA) macros (Citation: MSDN VBA in Office) can be inserted into the base template and used to execute code when the respective Office application starts in order to obtain persistence. Examples for both Word and Excel have been discovered and published. By default, Word has a Normal.dotm template created that can be modified to include a malicious macro. Excel does not have a template file created by default, but one can be added that will automatically be loaded.(Citation: enigma0x3 normal.dotm)(Citation: Hexacorn Office Template Macros) Shared templates may also be stored and pulled from remote locations.(Citation: GlobalDotName Jun 2019) &lt;br&gt;&lt;br&gt;Word Normal.dotm location:&lt;br&gt;&lt;br&gt;&lt;code&gt;C:\Users\&amp;lt;username&amp;gt;\AppData\Roaming\Microsoft\Templates\Normal.dotm&lt;/code&gt;&lt;br&gt;&lt;br&gt;Excel Personal.xlsb location:&lt;br&gt;&lt;br&gt;&lt;code&gt;C:\Users\&amp;lt;username&amp;gt;\AppData\Roaming\Microsoft\Excel\XLSTART\PERSONAL.XLSB&lt;/code&gt;&lt;br&gt;&lt;br&gt;Adversaries may also change the location of the base template to point to their own by hijacking the application's search order, e.g. Word 2016 will first look for Normal.dotm under &lt;code&gt;C:\Program Files (x86)\Microsoft Office\root\Office16\&lt;/code&gt;, or by modifying the GlobalDotName registry key. By modifying the GlobalDotName registry key an adversary can specify an arbitrary location, file name, and file extension to use for the template that will be loaded on application startup. To abuse GlobalDotName, adversaries may first need to register the template as a trusted document or place it in a trusted location.(Citation: GlobalDotName Jun 2019) &lt;br&gt;&lt;br&gt;An adversary may need to enable macros to execute unrestricted depending on the system or enterprise security policy on use of macros.&lt;br&gt;&lt;br&gt;Many Office-related persistence mechanisms require changes to the Registry and for binaries, files, or scripts to be written to disk or existing files modified to include malicious scripts. Collect events related to Registry key creation and modification for keys that could be used for Office-based persistence.(Citation: CrowdStrike Outlook Forms)(Citation: Outlook Today Home Page) Modification to base templates, like Normal.dotm, should also be investigated since the base templates should likely not contain VBA macros. Changes to the Office macro security settings should also be investigated.(Citation: GlobalDotName Jun 2019)</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references>
                <reference name="CrowdStrike Outlook Forms" url="https://malware.news/t/using-outlook-forms-for-lateral-movement-and-persistence/13746"/>
                <reference name="GlobalDotName Jun 2019" url="https://www.221bluestreet.com/post/office-templates-and-globaldotname-a-stealthy-office-persistence-technique"/>
                <reference name="Hexacorn Office Template Macros" url="http://www.hexacorn.com/blog/2017/04/19/beyond-good-ol-run-key-part-62/"/>
                <reference name="MSDN VBA in Office" url="https://msdn.microsoft.com/en-us/vba/office-shared-vba/articles/getting-started-with-vba-in-office"/>
                <reference name="Microsoft Change Normal Template" url="https://support.office.com/article/Change-the-Normal-template-Normal-dotm-06de294b-d216-47f6-ab77-ccb5166f98ea"/>
                <reference name="Mitre ATT&amp;CK Technique T1137.001" url="https://attack.mitre.org/techniques/T1137/001"/>
                <reference name="Outlook Today Home Page" url="https://medium.com/@bwtech789/outlook-today-homepage-persistence-33ea9b505943"/>
                <reference name="enigma0x3 normal.dotm" url="https://enigma0x3.net/2014/01/23/maintaining-access-with-normal-dotm/comment-page-1/"/>
              </references>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-DS0009" mitigation="16"/>
                <countermeasure ref="C-DS0011" mitigation="12"/>
                <countermeasure ref="C-DS0015" mitigation="12"/>
                <countermeasure ref="C-DS0017" mitigation="12"/>
                <countermeasure ref="C-DS0022" mitigation="12"/>
                <countermeasure ref="C-DS0024" mitigation="12"/>
                <countermeasure ref="C-M1040" mitigation="12"/>
                <countermeasure ref="C-M1042" mitigation="12"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="T-T1137.002" name="Office Test" state="Expose" source="MANUAL" edited="false" owner="JamesRabe" library="" editable="true">
              <desc>Adversaries may abuse the Microsoft Office "Office Test" Registry key to obtain persistence on a compromised system. An Office Test Registry location exists that allows a user to specify an arbitrary DLL that will be executed every time an Office application is started. This Registry key is thought to be used by Microsoft to load DLLs for testing and debugging purposes while developing Office applications. This Registry key is not created by default during an Office installation.(Citation: Hexacorn Office Test)(Citation: Palo Alto Office Test Sofacy)&lt;br&gt;&lt;br&gt;There exist user and global Registry keys for the Office Test feature:&lt;br&gt;&lt;br&gt;* &lt;code&gt;HKEY_CURRENT_USER\Software\Microsoft\Office test\Special\Perf&lt;/code&gt;&lt;br&gt;* &lt;code&gt;HKEY_LOCAL_MACHINE\Software\Microsoft\Office test\Special\Perf&lt;/code&gt;&lt;br&gt;&lt;br&gt;Adversaries may add this Registry key and specify a malicious DLL that will be executed whenever an Office application, such as Word or Excel, is started.&lt;br&gt;&lt;br&gt;Monitor for the creation of the Office Test Registry key. Many Office-related persistence mechanisms require changes to the Registry and for binaries, files, or scripts to be written to disk or existing files modified to include malicious scripts. Collect events related to Registry key creation and modification for keys that could be used for Office-based persistence. Since v13.52, Autoruns can detect tasks set up using the Office Test Registry key.(Citation: Palo Alto Office Test Sofacy)&lt;br&gt;&lt;br&gt;Consider monitoring Office processes for anomalous DLL loads.</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references>
                <reference name="Hexacorn Office Test" url="http://www.hexacorn.com/blog/2014/04/16/beyond-good-ol-run-key-part-10/"/>
                <reference name="Mitre ATT&amp;CK Technique T1137.002" url="https://attack.mitre.org/techniques/T1137/002"/>
                <reference name="Palo Alto Office Test Sofacy" url="https://researchcenter.paloaltonetworks.com/2016/07/unit42-technical-walkthrough-office-test-persistence-method-used-in-recent-sofacy-attacks/"/>
              </references>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-DS0009" mitigation="16"/>
                <countermeasure ref="C-DS0011" mitigation="12"/>
                <countermeasure ref="C-DS0015" mitigation="12"/>
                <countermeasure ref="C-DS0017" mitigation="12"/>
                <countermeasure ref="C-DS0022" mitigation="12"/>
                <countermeasure ref="C-DS0024" mitigation="12"/>
                <countermeasure ref="C-M1040" mitigation="12"/>
                <countermeasure ref="C-M1054" mitigation="12"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="T-T1137.003" name="Outlook Forms" state="Expose" source="MANUAL" edited="false" owner="JamesRabe" library="" editable="true">
              <desc>Adversaries may abuse Microsoft Outlook forms to obtain persistence on a compromised system. Outlook forms are used as templates for presentation and functionality in Outlook messages. Custom Outlook forms can be created that will execute code when a specifically crafted email is sent by an adversary utilizing the same custom Outlook form.(Citation: SensePost Outlook Forms)&lt;br&gt;&lt;br&gt;Once malicious forms have been added to the user's mailbox, they will be loaded when Outlook is started. Malicious forms will execute when an adversary sends a specifically crafted email to the user.(Citation: SensePost Outlook Forms)&lt;br&gt;&lt;br&gt;Microsoft has released a PowerShell script to safely gather mail forwarding rules and custom forms in your mail environment as well as steps to interpret the output.(Citation: Microsoft Detect Outlook Forms) SensePost, whose tool [Ruler](https://attack.mitre.org/software/S0358) can be used to carry out malicious rules, forms, and Home Page attacks, has released a tool to detect Ruler usage.(Citation: SensePost NotRuler)&lt;br&gt;&lt;br&gt;Collect process execution information including process IDs (PID) and parent process IDs (PPID) and look for abnormal chains of activity resulting from Office processes. Non-standard process execution trees may also indicate suspicious or malicious behavior.</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references>
                <reference name="Microsoft Detect Outlook Forms" url="https://docs.microsoft.com/en-us/office365/securitycompliance/detect-and-remediate-outlook-rules-forms-attack"/>
                <reference name="Mitre ATT&amp;CK Technique T1137.003" url="https://attack.mitre.org/techniques/T1137/003"/>
                <reference name="SensePost NotRuler" url="https://github.com/sensepost/notruler"/>
                <reference name="SensePost Outlook Forms" url="https://sensepost.com/blog/2017/outlook-forms-and-shells/"/>
              </references>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-DS0009" mitigation="16"/>
                <countermeasure ref="C-DS0011" mitigation="12"/>
                <countermeasure ref="C-DS0015" mitigation="12"/>
                <countermeasure ref="C-DS0017" mitigation="12"/>
                <countermeasure ref="C-DS0022" mitigation="12"/>
                <countermeasure ref="C-DS0024" mitigation="12"/>
                <countermeasure ref="C-M1040" mitigation="12"/>
                <countermeasure ref="C-M1051" mitigation="12"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="T-T1137.004" name="Outlook Home Page" state="Expose" source="MANUAL" edited="false" owner="JamesRabe" library="" editable="true">
              <desc>Adversaries may abuse Microsoft Outlook's Home Page feature to obtain persistence on a compromised system. Outlook Home Page is a legacy feature used to customize the presentation of Outlook folders. This feature allows for an internal or external URL to be loaded and presented whenever a folder is opened. A malicious HTML page can be crafted that will execute code when loaded by Outlook Home Page.(Citation: SensePost Outlook Home Page)&lt;br&gt;&lt;br&gt;Once malicious home pages have been added to the user's mailbox, they will be loaded when Outlook is started. Malicious Home Pages will execute when the right Outlook folder is loaded/reloaded.(Citation: SensePost Outlook Home Page)&lt;br&gt;&lt;br&gt;&lt;br&gt;Microsoft has released a PowerShell script to safely gather mail forwarding rules and custom forms in your mail environment as well as steps to interpret the output.(Citation: Microsoft Detect Outlook Forms) SensePost, whose tool [Ruler](https://attack.mitre.org/software/S0358) can be used to carry out malicious rules, forms, and Home Page attacks, has released a tool to detect Ruler usage.(Citation: SensePost NotRuler)&lt;br&gt;&lt;br&gt;Collect process execution information including process IDs (PID) and parent process IDs (PPID) and look for abnormal chains of activity resulting from Office processes. Non-standard process execution trees may also indicate suspicious or malicious behavior.</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references>
                <reference name="Microsoft Detect Outlook Forms" url="https://docs.microsoft.com/en-us/office365/securitycompliance/detect-and-remediate-outlook-rules-forms-attack"/>
                <reference name="Mitre ATT&amp;CK Technique T1137.004" url="https://attack.mitre.org/techniques/T1137/004"/>
                <reference name="SensePost NotRuler" url="https://github.com/sensepost/notruler"/>
                <reference name="SensePost Outlook Home Page" url="https://sensepost.com/blog/2017/outlook-home-page-another-ruler-vector/"/>
              </references>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-DS0009" mitigation="16"/>
                <countermeasure ref="C-DS0011" mitigation="12"/>
                <countermeasure ref="C-DS0015" mitigation="12"/>
                <countermeasure ref="C-DS0017" mitigation="12"/>
                <countermeasure ref="C-DS0022" mitigation="12"/>
                <countermeasure ref="C-DS0024" mitigation="12"/>
                <countermeasure ref="C-M1040" mitigation="12"/>
                <countermeasure ref="C-M1051" mitigation="12"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="T-T1137.005" name="Outlook Rules" state="Expose" source="MANUAL" edited="false" owner="JamesRabe" library="" editable="true">
              <desc>Adversaries may abuse Microsoft Outlook rules to obtain persistence on a compromised system. Outlook rules allow a user to define automated behavior to manage email messages. A benign rule might, for example, automatically move an email to a particular folder in Outlook if it contains specific words from a specific sender. Malicious Outlook rules can be created that can trigger code execution when an adversary sends a specifically crafted email to that user.(Citation: SilentBreak Outlook Rules)&lt;br&gt;&lt;br&gt;Once malicious rules have been added to the user's mailbox, they will be loaded when Outlook is started. Malicious rules will execute when an adversary sends a specifically crafted email to the user.(Citation: SilentBreak Outlook Rules)&lt;br&gt;&lt;br&gt;Microsoft has released a PowerShell script to safely gather mail forwarding rules and custom forms in your mail environment as well as steps to interpret the output.(Citation: Microsoft Detect Outlook Forms) This PowerShell script is ineffective in gathering rules with modified `PRPR_RULE_MSG_NAME` and `PR_RULE_MSG_PROVIDER` properties caused by adversaries using a Microsoft Exchange Server Messaging API Editor (MAPI Editor), so only examination with the Exchange Administration tool MFCMapi can reveal these mail forwarding rules.(Citation: Pfammatter - Hidden Inbox Rules) SensePost, whose tool [Ruler](https://attack.mitre.org/software/S0358) can be used to carry out malicious rules, forms, and Home Page attacks, has released a tool to detect Ruler usage.(Citation: SensePost NotRuler)&lt;br&gt;&lt;br&gt;Collect process execution information including process IDs (PID) and parent process IDs (PPID) and look for abnormal chains of activity resulting from Office processes. Non-standard process execution trees may also indicate suspicious or malicious behavior.</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references>
                <reference name="Microsoft Detect Outlook Forms" url="https://docs.microsoft.com/en-us/office365/securitycompliance/detect-and-remediate-outlook-rules-forms-attack"/>
                <reference name="Mitre ATT&amp;CK Technique T1137.005" url="https://attack.mitre.org/techniques/T1137/005"/>
                <reference name="Pfammatter - Hidden Inbox Rules" url="https://blog.compass-security.com/2018/09/hidden-inbox-rules-in-microsoft-exchange/"/>
                <reference name="SensePost NotRuler" url="https://github.com/sensepost/notruler"/>
                <reference name="SilentBreak Outlook Rules" url="https://silentbreaksecurity.com/malicious-outlook-rules/"/>
              </references>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-DS0009" mitigation="16"/>
                <countermeasure ref="C-DS0011" mitigation="12"/>
                <countermeasure ref="C-DS0015" mitigation="12"/>
                <countermeasure ref="C-DS0017" mitigation="12"/>
                <countermeasure ref="C-DS0022" mitigation="12"/>
                <countermeasure ref="C-DS0024" mitigation="12"/>
                <countermeasure ref="C-M1040" mitigation="12"/>
                <countermeasure ref="C-M1051" mitigation="12"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="valid-accounts" name="Valid Accounts" desc="" library="">
          <threats>
            <threat ref="T-T1078.004" name="Cloud Accounts" state="Expose" source="MANUAL" edited="false" owner="JamesRabe" library="" editable="true">
              <desc>Adversaries may obtain and abuse credentials of a cloud account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Cloud accounts are those created and configured by an organization for use by users, remote support, services, or for administration of resources within a cloud service provider or SaaS application. In some cases, cloud accounts may be federated with traditional identity management system, such as Window Active Directory.(Citation: AWS Identity Federation)(Citation: Google Federating GC)(Citation: Microsoft Deploying AD Federation)&lt;br&gt;&lt;br&gt;Compromised credentials for cloud accounts can be used to harvest sensitive data from online storage accounts and databases. Access to cloud accounts can also be abused to gain Initial Access to a network by abusing a [Trusted Relationship](https://attack.mitre.org/techniques/T1199). Similar to [Domain Accounts](https://attack.mitre.org/techniques/T1078/002), compromise of federated cloud accounts may allow adversaries to more easily move laterally within an environment.&lt;br&gt;&lt;br&gt;Once a cloud account is compromised, an adversary may perform [Account Manipulation](https://attack.mitre.org/techniques/T1098) - for example, by adding [Additional Cloud Roles](https://attack.mitre.org/techniques/T1098/003) - to maintain persistence and potentially escalate their privileges.&lt;br&gt;&lt;br&gt;Monitor the activity of cloud accounts to detect abnormal or malicious behavior, such as accessing information outside of the normal function of the account or account usage at atypical hours.</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references>
                <reference name="AWS Identity Federation" url="https://aws.amazon.com/identity/federation/"/>
                <reference name="Google Federating GC" url="https://cloud.google.com/solutions/federating-gcp-with-active-directory-introduction"/>
                <reference name="Microsoft Deploying AD Federation" url="https://docs.microsoft.com/en-us/windows-server/identity/ad-fs/deployment/how-to-connect-fed-azure-adfs"/>
                <reference name="Mitre ATT&amp;CK Technique T1078.004" url="https://attack.mitre.org/techniques/T1078/004"/>
              </references>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-DS0002" mitigation="16"/>
                <countermeasure ref="C-DS0028" mitigation="14"/>
                <countermeasure ref="C-M1017" mitigation="14"/>
                <countermeasure ref="C-M1018" mitigation="14"/>
                <countermeasure ref="C-M1026" mitigation="14"/>
                <countermeasure ref="C-M1027" mitigation="14"/>
                <countermeasure ref="C-M1032" mitigation="14"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="T-T1078.001" name="Default Accounts" state="Expose" source="MANUAL" edited="false" owner="JamesRabe" library="" editable="true">
              <desc>Adversaries may obtain and abuse credentials of a default account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Default accounts are those that are built-into an OS, such as the Guest or Administrator accounts on Windows systems. Default accounts also include default factory/provider set accounts on other types of systems, software, or devices, including the root user account in AWS and the default service account in Kubernetes.(Citation: Microsoft Local Accounts Feb 2019)(Citation: AWS Root User)(Citation: Threat Matrix for Kubernetes)&lt;br&gt;&lt;br&gt;Default accounts are not limited to client machines, rather also include accounts that are preset for equipment such as network devices and computer applications whether they are internal, open source, or commercial. Appliances that come preset with a username and password combination pose a serious threat to organizations that do not change it post installation, as they are easy targets for an adversary. Similarly, adversaries may also utilize publicly disclosed or stolen [Private Keys](https://attack.mitre.org/techniques/T1552/004) or credential materials to legitimately connect to remote environments via [Remote Services](https://attack.mitre.org/techniques/T1021).(Citation: Metasploit SSH Module)&lt;br&gt;&lt;br&gt;Monitor whether default accounts have been activated or logged into. These audits should also include checks on any appliances and applications for default credentials or SSH keys, and if any are discovered, they should be updated immediately.</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references>
                <reference name="AWS Root User" url="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_root-user.html"/>
                <reference name="CAPEC-70" url="https://capec.mitre.org/data/definitions/70.html"/>
                <reference name="Metasploit SSH Module" url="https://github.com/rapid7/metasploit-framework/tree/master/modules/exploits/linux/ssh"/>
                <reference name="Microsoft Local Accounts Feb 2019" url="https://docs.microsoft.com/en-us/windows/security/identity-protection/access-control/local-accounts"/>
                <reference name="Mitre ATT&amp;CK Technique T1078.001" url="https://attack.mitre.org/techniques/T1078/001"/>
                <reference name="Threat Matrix for Kubernetes" url="https://www.microsoft.com/security/blog/2020/04/02/attack-matrix-kubernetes/"/>
              </references>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-DS0002" mitigation="34"/>
                <countermeasure ref="C-DS0028" mitigation="33"/>
                <countermeasure ref="C-M1027" mitigation="33"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="f8b4eca9-a9ff-492a-a9a3-1925d69b7f23" diagramComponentId="17850067-41e6-4d9e-9e27-33ed2b2fbb92" ref="f30fb5e7-b7d5-4a30-99fe-c9ea74fddb64" name="Azure Environment" desc="" library="" parentComponentRef="" componentDefinitionRef="microsoft-azure-environment">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses/>
      <countermeasures/>
      <usecases/>
    </component>
    <component uuid="f591fd77-7680-4b2b-9431-9efa5dd39f50" diagramComponentId="ee138696-46e3-4079-9a17-323fe1d35e41" ref="e8ba40d3-37d8-4721-9785-1051ed93a5a2" name="Azure Active Directory Domain Services" desc="" library="" parentComponentRef="fbc0299d-6342-47c9-86eb-71d572132cd6" componentDefinitionRef="CD-MICROSOFT-AZURE-AD-DS">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="private-secured"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses/>
      <countermeasures/>
      <usecases/>
    </component>
    <component uuid="11305a46-8ea0-4bd2-b58f-3ed71dc9dc1c" diagramComponentId="560c5547-54a0-4fb7-bfa4-2cf34c3d4ba8" ref="8fbc1541-750e-4a16-9796-35ac068844ea" name="Azure AD Sync" desc="" library="" parentComponentRef="fbc0299d-6342-47c9-86eb-71d572132cd6" componentDefinitionRef="empty-component">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="private-secured"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses/>
      <countermeasures/>
      <usecases/>
    </component>
    <component uuid="c2441b48-4e3e-4c57-b983-326842390253" diagramComponentId="884fe5ee-45b0-4797-967e-b5efdfa163d9" ref="62a5a79a-5e2c-4f4b-bf4a-d48751103201" name="Azure Active Directory" desc="" library="" parentComponentRef="f30fb5e7-b7d5-4a30-99fe-c9ea74fddb64" componentDefinitionRef="microsoft-azure-active-directory">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses/>
      <countermeasures/>
      <usecases/>
    </component>
    <component uuid="4ea44f7e-9813-4a19-be44-4f29c5912794" diagramComponentId="b942ee71-40a2-4585-a0af-66b15b208301" ref="84373b4b-ba27-4c02-ac64-8b228a1c2b68" name="Lateral Movement" desc="" library="" parentComponentRef="f0d54cbd-bb4b-4375-9178-980f6a239855" componentDefinitionRef="lateral-movement">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses/>
      <countermeasures>
        <countermeasure ref="C-DS0026" name="Active Directory" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>A database and set of services that allows administrators to manage permissions, access to network resources, and stored data objects (user, group, application, or devices)(Citation: Microsoft AD DS Getting Started)&lt;br /&gt;&lt;p&gt;Detailed detections per technique:&lt;/p&gt;&lt;br /&gt;['T1556.005']: Monitor property changes in Group Policy: &lt;code&gt;Computer Configuration\Windows Settings\Security Settings\Account Policies\Password Policy\Store passwords using reversible encryption&lt;/code&gt;. By default, the property should be set to Disabled.&lt;br /&gt;['T1134.005']: Monitor for changes to account management events on Domain Controllers for successful and failed changes to SID-History. (Citation: AdSecurity SID History Sept 2015) (Citation: Microsoft DsAddSidHistory)&lt;br /&gt;['T1531']: Monitor for changes made to AD settings for unexpected modifications to user accounts, such as deletions or potentially malicious changes to user attributes (credentials, status, etc.).&lt;br /&gt;['T1222.001']: Monitor for changes made to DACLs and file/directory ownership. Many of the commands used to modify DACLs and file/directory ownership are built-in system utilities and may generate a high false positive alert rate, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible.&lt;br /&gt;['T1098']: Monitor for changes to Azure Activity Logs for unexpected modifications to Service Principal and Application.&lt;br /&gt;['T1207']: Leverage AD directory synchronization (DirSync) to monitor changes to directory state using AD replication cookies.(Citation: Microsoft DirSync) (Citation: ADDSecurity DCShadow Feb 2018) Also consider monitoring and alerting on the replication of AD objects (Audit Detailed Directory Service Replication Events 4928 and 4929). (Citation: DCShadow Blog)&lt;br /&gt;['T1037.003']: Monitor for changes made in the Active Directory that may use network logon scripts automatically executed at logon initialization to establish persistence.&lt;br /&gt;['T1484.002']: Monitor for changes made to AD settings for unexpected modifications to domain trust settings, such as when a user or application modifies the federation settings on the domain.&lt;br /&gt;['T1222']: Monitor for changes made to ACLs and file/directory ownership. Many of the commands used to modify ACLs and file/directory ownership are built-in system utilities and may generate a high false positive alert rate, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible.&lt;br /&gt;['T1037']: Monitor for changes made in the Active Directory that may use scripts automatically executed at boot or logon initialization to establish persistence.&lt;br /&gt;['T1098.001']: Monitor for changes to Azure Activity Logs for Service Principal and Application modifications.&lt;br /&gt;['T1134']: Monitor for changes made to AD settings that may modify access tokens to operate under a different user or system security context to perform actions and bypass access controls.&lt;br /&gt;['T1484']: Monitor for unexpected deletion of an active directory object, such as Windows EID 5141.&lt;br /&gt;['T1484']: Monitor for newly constructed active directory objects, such as Windows EID 5137.&lt;br /&gt;['T1098.005']: Monitor for the registration or joining of new device objects in Active Directory.&lt;br /&gt;['T1207']: Baseline and periodically analyze the Configuration partition of the AD schema and alert on creation of nTDSDSA objects.(Citation: DCShadow Blog)&lt;br /&gt;['T1558.001']: Monitor for anomalous Kerberos activity, such as malformed or blank fields in Windows logon/logoff events (Event ID 4769, 4768), RC4 encryption within TGTs, and TGS requests without preceding TGT requests. Monitor the lifetime of TGT tickets for values that differ from the default domain duration. Monitor for indications of Pass the Ticket being used to move laterally.&lt;br /&gt;['T1550']: Monitor requests of new ticket granting ticket or service tickets to a Domain Controller, such as Windows EID 4769 or 4768, that may use alternate authentication material, such as password hashes, Kerberos tickets, and application access tokens, in order to move laterally within an environment and bypass normal system access controls.&lt;br /&gt;['T1550.002']: Monitor requests of new ticket granting ticket or service tickets to a Domain Controller. Windows Security events such as 4768 (A Kerberos authentication ticket (TGT) was requested) and 4769 (A Kerberos service ticket was requested) combined with logon session creation information may be indicative of an overpass the hash attempt.&lt;br /&gt;['T1558.003']: Monitor for anomalous Kerberos activity, such as enabling Audit Kerberos Service Ticket Operations to log Kerberos TGS service ticket requests. Particularly investigate irregular patterns of activity (ex: accounts making numerous requests, Event ID 4769, within a small time frame, especially if they also request RC4 encryption [Type 0x17]).&lt;br /&gt;['T1558.004']: Monitor for anomalous activity, such as enabling Audit Kerberos Service Ticket Operations to log Kerberos TGS service ticket requests. Particularly investigate irregular patterns of activity (ex: accounts making numerous requests, Event ID 4768 and 4769, within a small time frame, especially if they also request RC4 encryption [Type 0x17], pre-authentication not required [Type: 0x0]).&lt;br /&gt;['T1558']: Monitor for anomalous Kerberos activity, such as malformed or blank fields in Windows logon/logoff events (Event ID 4624, 4672, 4634), RC4 encryption within ticket granting tickets (TGTs), and ticket granting service (TGS) requests without preceding TGT requests.(Citation: ADSecurity Detecting Forged Tickets)(Citation: Stealthbits Detect PtT 2019)(Citation: CERT-EU Golden Ticket Protection)Monitor the lifetime of TGT tickets for values that differ from the default domain duration.(Citation: Microsoft Kerberos Golden Ticket) Monitor for indications of [Pass the Ticket](https://attack.mitre.org/techniques/T1550/003) being used to move laterally.&lt;br /&gt;['T1550.003']: Monitor requests of new ticket granting ticket or service tickets to a Domain Controller. Event ID 4769 is generated on the Domain Controller when using a golden ticket after the KRBTGT password has been reset twice, as mentioned in the mitigation section. The status code 0x1F indicates the action has failed due to "Integrity check on decrypted field failed" and indicates misuse by a previously invalidated golden ticket.(Citation: CERT-EU Golden Ticket Protection)&lt;br /&gt;['T1003.006']: Monitor domain controller logs for replication requests and other unscheduled activity possibly associated with DCSync.(Citation: Microsoft DRSR Dec 2017) (Citation: Microsoft GetNCCChanges) (Citation: Samba DRSUAPI) Note: Domain controllers may not log replication requests originating from the default domain controller account.(Citation: Harmj0y DCSync Sept 2015)&lt;br /&gt;['T1033']: Monitor domain controller logs for replication requests and other unscheduled activity possibly associated with DCSync. (Citation: Microsoft DRSR Dec 2017) (Citation: Microsoft GetNCCChanges) (Citation: Samba DRSUAPI) Note: Domain controllers may not log replication requests originating from the default domain controller account. (Citation: Harmj0y DCSync Sept 2015). Monitor for replication requests (Citation: Microsoft SAMR) from IPs not associated with known domain controllers. (Citation: AdSecurity DCSync Sept 2015)&lt;br /&gt;['T1615']: Monitor for abnormal LDAP queries with filters for &lt;code&gt;groupPolicyContainer&lt;/code&gt; and high volumes of LDAP traffic to domain controllers. Windows Event ID 4661 can also be used to detect when a directory service has been accessed.&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Microsoft AD DS Getting Started" url="https://docs.microsoft.com/en-us/windows-server/identity/ad-ds/ad-ds-getting-started"/>
            <reference name="Mitre ATT&amp;CK Data Source DS0026" url="https://attack.mitre.org/datasources/DS0026"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:02.132">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-DS0015" name="Application Log" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>Events collected by third-party services such as mail servers, web applications, or other appliances (not by the native OS or platform)(Citation: Confluence Logs)&lt;br /&gt;&lt;p&gt;Detailed detections per technique:&lt;/p&gt;&lt;br /&gt;['T1189']: Firewalls and proxies can inspect URLs for potentially known-bad domains or parameters. They can also do reputation-based analytics on websites and their requested resources such as how old a domain is, who it's registered to, if it's on a known bad list, or how many other users have connected to it before.&lt;br /&gt;['T1499.002']: Monitor for third-party application logging, messaging, and/or other artifacts that may target the different network services provided by systems to conduct a DoS. In addition to network level detections, endpoint logging and instrumentation can be useful for detection. Attacks targeting web applications may generate logs in the web server, application server, and/or database server that can be used to identify the type of attack, possibly before the impact is felt. Externally monitor the availability of services that may be targeted by an Endpoint DoS.&lt;br /&gt;['T1557']: Monitor application logs for changes to settings and other events associated with network protocols and other services commonly abused for AiTM.(Citation: dhcp_serv_op_events)&lt;br /&gt;['T1137.003']:  Monitor for third-party application logging, messaging, and/or other artifacts that may abuse Microsoft Outlook forms to obtain persistence on a compromised system. SensePost, whose tool [Ruler](https://attack.mitre.org/software/S0358) can be used to carry out malicious rules, forms, and Home Page attacks, has released a tool to detect Ruler usage.(Citation: SensePost NotRuler)&lt;br /&gt;['T1505.003']: Monitor for third-party application logging, messaging, and/or other artifacts that may backdoor web servers with web shells to establish persistent access to systems. Log authentication attempts to the server and any unusual traffic patterns to or from the server and internal network. (Citation: US-CERT Alert TA15-314A Web Shells)&lt;br /&gt;['T1505']: Monitor for third-party application logging, messaging, and/or other artifacts that may abuse legitimate extensible development features of servers to establish persistent access to systems. Consider monitoring application logs for abnormal behavior that may indicate suspicious installation of application software components. Log authentication attempts to the server and any unusual traffic patterns to or from the server and internal network. (Citation: US-CERT Alert TA15-314A Web Shells)&lt;br /&gt;['T1550']: Monitor for third-party application logging, messaging, and/or other artifacts that may use alternate authentication material, such as password hashes, Kerberos tickets, and application access tokens, in order to move laterally within an environment and bypass normal system access controls.&lt;br /&gt;['T1069.003']: Monitor for events collected that may attempt to find cloud groups and permission settings. &lt;br /&gt;['T1491.002']: Monitor for third-party application logging, messaging, and/or other artifacts that may deface systems external to an organization in an attempt to deliver messaging, intimidate, or otherwise mislead an organization or users. &lt;br /&gt;['T1598']: Depending on the specific method of phishing, the detections can vary. Monitor for suspicious email activity, such as numerous accounts receiving messages from a single unusual/unknown sender. Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.(Citation: Microsoft Anti Spoofing)(Citation: ACSC Email Spoofing)
When it comes to following links, monitor for references to uncategorized or known-bad sites. URL inspection within email (including expanding shortened links) can also help detect links leading to known malicious sites.
Monitor social media traffic for suspicious activity, including messages requesting information as well as abnormal file or data transfers (especially those involving unknown, or otherwise suspicious accounts).&lt;br /&gt;['T1499']: Monitor for third-party application logging, messaging, and/or other artifacts that may perform Endpoint Denial of Service (DoS) attacks to degrade or block the availability of services to users. In addition to network level detections, endpoint logging and instrumentation can be useful for detection. Attacks targeting web applications may generate logs in the web server, application server, and/or database server that can be used to identify the type of attack, possibly before the impact is felt. Externally monitor the availability of services that may be targeted by an Endpoint DoS.&lt;br /&gt;['T1204.003']: Monitor for third-party application logging, messaging, and/or other artifacts that may rely on a user running a malicious image to facilitate execution.&lt;br /&gt;['T1598.001']: Monitor social media traffic for suspicious activity, including messages requesting information as well as abnormal file or data transfers (especially those involving unknown, or otherwise suspicious accounts).
Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.
Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access.&lt;br /&gt;['T1564']: Monitor for third-party application logging, messaging, and/or other artifacts that may attempt to hide artifacts associated with their behaviors to evade detection. &lt;br /&gt;['T1499.004']: Monitor for third-party application logging, messaging, and/or other artifacts that may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Attacks targeting web applications may generate logs in the web server, application server, and/or database server that can be used to identify the type of attack. Externally monitor the availability of services that may be targeted by an Endpoint DoS.&lt;br /&gt;['T1211']: Exploitation for defense evasion may happen shortly after the system has been compromised to prevent detection during later actions for for additional tools that may be brought in and used. Detecting software exploitation may be difficult depending on the tools available. Software exploits may not always succeed or may cause the exploited process to become unstable or crash. &lt;br /&gt;['T1137']: Monitor for third-party application logging, messaging, and/or other artifacts that may leverage Microsoft Office-based applications for persistence between startups. SensePost, whose tool [Ruler](https://attack.mitre.org/software/S0358) can be used to carry out malicious rules, forms, and Home Page attacks, has released a tool to detect Ruler usage.(Citation: SensePost NotRuler)&lt;br /&gt;['T1566.001']: Monitor for third-party application logging, messaging, and/or other artifacts that may send spearphishing emails with a malicious attachment in an attempt to gain access to victim systems. Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.(Citation: Microsoft Anti Spoofing)(Citation: ACSC Email Spoofing) Anti-virus can potentially detect malicious documents and attachments as they're scanned to be stored on the email server or on the user's computer. Monitor for suspicious descendant process spawning from Microsoft Office and other productivity software.(Citation: Elastic - Koadiac Detection with EQL)&lt;br /&gt;['T1566.002']: Monitor for third-party application logging, messaging, and/or other artifacts that may send spearphishing emails with a malicious link in an attempt to gain access to victim systems. Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.(Citation: Microsoft Anti Spoofing)(Citation: ACSC Email Spoofing) URL inspection within email (including expanding shortened links) can help detect links leading to known malicious sites. Detonation chambers can be used to detect these links and either automatically go to these sites to determine if they're potentially malicious, or wait and capture the content if a user visits the link.&lt;br /&gt;['T1598.003']: Monitor for suspicious email activity, such as numerous accounts receiving messages from a single unusual/unknown sender. Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.(Citation: Microsoft Anti Spoofing)(Citation: ACSC Email Spoofing)
Monitor for references to uncategorized or known-bad sites. URL inspection within email (including expanding shortened links) can also help detect links leading to known malicious sites.&lt;br /&gt;['T1610']: Configuration management databases (CMDB) and other asset management systems may help with the detection of computer systems or network devices that should not exist on a network.&lt;br /&gt;['T1114']: Detection is challenging because all messages forwarded because of an auto-forwarding rule have the same presentation as a manually forwarded message. It is also possible for the user to not be aware of the addition of such an auto-forwarding rule and not suspect that their account has been compromised; email-forwarding rules alone will not affect the normal usage patterns or operations of the email account. Auto-forwarded messages generally contain specific detectable artifacts that may be present in the header; such artifacts would be platform-specific. Examples include &lt;code&gt;X-MS-Exchange-Organization-AutoForwarded&lt;/code&gt; set to true, &lt;code&gt;X-MailFwdBy&lt;/code&gt; and &lt;code&gt;X-Forwarded-To&lt;/code&gt;. The &lt;code&gt;forwardingSMTPAddress&lt;/code&gt; parameter used in a forwarding process that is managed by administrators and not by user actions. All messages for the mailbox are forwarded to the specified SMTP address. However, unlike typical client-side rules, the message does not appear as forwarded in the mailbox; it appears as if it were sent directly to the specified destination mailbox.(Citation: Microsoft Tim McMichael Exchange Mail Forwarding 2) High volumes of emails that bear the &lt;code&gt;X-MS-Exchange-Organization-AutoForwarded&lt;/code&gt; header (indicating auto-forwarding) without a corresponding number of emails that match the appearance of a forwarded message may indicate that further investigation is needed at the administrator level rather than user-level.&lt;br /&gt;['T1534']: Monitor email gateways usually do not scan internal email, but an organization can leverage the journaling-based solution which sends a copy of emails to a security service for offline analysis or incorporate service-integrated solutions using on-premise or API-based integrations to help detect internal spearphishing attacks.(Citation: Trend Micro When Phishing Starts from the Inside 2017)&lt;br /&gt;['T1594']: Monitor for suspicious network traffic that could be indicative of adversary reconnaissance, such as rapid successions of requests indicative of web crawling and/or large quantities of requests originating from a single source (especially if the source is known to be associated with an adversary). Analyzing web metadata may also reveal artifacts that can be attributed to potentially malicious activity, such as referer or user-agent string HTTP/S fields.&lt;br /&gt;['T1137.005']: Monitor for third-party application logging, messaging, and/or other artifacts that may abuse Microsoft Outlook rules to obtain persistence on a compromised system. SensePost, whose tool [Ruler](https://attack.mitre.org/software/S0358) can be used to carry out malicious rules, forms, and Home Page attacks, has released a tool to detect Ruler usage.(Citation: SensePost NotRuler)&lt;br /&gt;['T1213.002']: Monitor for third-party application logging, messaging, and/or other artifacts that may leverage the SharePoint repository as a source to mine valuable information. Monitor access to Microsoft SharePoint repositories performed by privileged users (for example, Active Directory Domain, Enterprise, or Schema Administrators) should be closely monitored and alerted upon, as these types of accounts should generally not be used to access information repositories. If the capability exists, it may be of value to monitor and alert on users that are retrieving and viewing a large number of documents and pages; this behavior may be indicative of programmatic means being used to retrieve all data within the repository. In environments with high-maturity, it may be possible to leverage User-Behavioral Analytics (UBA) platforms to detect and alert on user based anomalies.&lt;br /&gt;['T1110.004']: Monitor authentication logs for system and application login failures of [Valid Accounts](https://attack.mitre.org/techniques/T1078). If authentication failures are high, then there may be a brute force attempt to gain access to a system using legitimate credentials.&lt;br /&gt;['T1491.001']: Monitor for third-party application logging, messaging, and/or other artifacts that may deface systems internal to an organization in an attempt to intimidate or mislead users. &lt;br /&gt;['T1114.003']: Detection is challenging because all messages forwarded because of an auto-forwarding rule have the same presentation as a manually forwarded message. It is also possible for the user to not be aware of the addition of such an auto-forwarding rule and not suspect that their account has been compromised; email-forwarding rules alone will not affect the normal usage patterns or operations of the email account. This is especially true in cases with hidden auto-forwarding rules. This makes it only possible to reliably detect the existence of a hidden auto-forwarding rule by examining message tracking logs or by using a MAPI editor to notice the modified rule property values.(Citation: Pfammatter - Hidden Inbox Rules)
Auto-forwarded messages generally contain specific detectable artifacts that may be present in the header; such artifacts would be platform-specific. Examples include X-MS-Exchange-Organization-AutoForwarded set to true, X-MailFwdBy and X-Forwarded-To. The forwardingSMTPAddress parameter used in a forwarding process that is managed by administrators and not by user actions. All messages for the mailbox are forwarded to the specified SMTP address. However, unlike typical client-side rules, the message does not appear as forwarded in the mailbox; it appears as if it were sent directly to the specified destination mailbox.(Citation: Microsoft Tim McMichael Exchange Mail Forwarding 2) High volumes of emails that bear the X-MS-Exchange-Organization-AutoForwarded header (indicating auto-forwarding) without a corresponding number of emails that match the appearance of a forwarded message may indicate that further investigation is needed at the administrator level rather than user-level.&lt;br /&gt;['T1137.004']: Monitor for third-party application logging, messaging, and/or other artifacts that may abuse Microsoft Outlook's Home Page feature to obtain persistence on a compromised system. SensePost, whose tool [Ruler](https://attack.mitre.org/software/S0358) can be used to carry out malicious rules, forms, and Home Page attacks, has released a tool to detect Ruler usage.(Citation: SensePost NotRuler)&lt;br /&gt;['T1622']: Monitor debugger logs for signs of abnormal and potentially malicious activity.&lt;br /&gt;['T1069']: Monitor for logging, messaging, and other artifacts provided by cloud services.&lt;br /&gt;['T1499.003']: Monitor for third-party application logging, messaging, and/or other artifacts that may target resource intensive features of web applications to cause a denial of service (DoS). In addition to network level detections, endpoint logging and instrumentation can be useful for detection. Attacks targeting web applications may generate logs in the web server, application server, and/or database server that can be used to identify the type of attack, possibly before the impact is felt. Externally monitor the availability of services that may be targeted by an Endpoint DoS.&lt;br /&gt;['T1491']: Monitor for third-party application logging, messaging, and/or other artifacts that may modify visual content available internally or externally to an enterprise network. &lt;br /&gt;['T1213.003']: Monitor for third-party application logging, messaging, and/or other artifacts that may leverage code repositories to collect valuable information. Monitor access to code repositories, especially performed by privileged users such as Active Directory Domain or Enterprise Administrators as these types of accounts should generally not be used to access code repositories. In environments with high-maturity, it may be possible to leverage User-Behavioral Analytics (UBA) platforms to detect and alert on user-based anomalies.&lt;br /&gt;['T1621']: Monitor application logs for suspicious events including repeated MFA failures that may indicate user's primary credentials have been compromised.&lt;br /&gt;['T1072']: Often these third-party applications will have logs of their own that can be collected and correlated with other data from the environment. Ensure that third-party application logs are on-boarded to the enterprise logging system and the logs are regularly reviewed. Audit software deployment logs and look for suspicious or unauthorized activity. A system not typically used to push software to clients that suddenly is used for such a task outside of a known admin function may be suspicious. Monitor account login activity on these applications to detect suspicious/abnormal usage.
Perform application deployment at regular times so that irregular deployment activity stands out.&lt;br /&gt;['T1098.005']: 
Azure AD creates several log entries when new devices are enrolled, which can be monitored for unexpected device registrations.(Citation: AADInternals - BPRT) Additionally, joined devices can be viewed via the Azure AD portal.(Citation: Microsoft Manage Device Identities)&lt;br /&gt;['T1110.002']: Monitor authentication logs for system and application login failures of [Valid Accounts](https://attack.mitre.org/techniques/T1078). It is difficult to detect when hashes are cracked, since this is generally done outside the scope of the target network. Consider focusing efforts on detecting other adversary behavior used to acquire credential materials, such as [OS Credential Dumping](https://attack.mitre.org/techniques/T1003) or [Kerberoasting](https://attack.mitre.org/techniques/T1558/003).&lt;br /&gt;['T1213']: Monitor for third-party application logging, messaging, and/or other artifacts that may leverage information repositories to mine valuable information. Information repositories generally have a considerably large user base, detection of malicious use can be non-trivial. At minimum, access to information repositories performed by privileged users (for example, Active Directory Domain, Enterprise, or Schema Administrators) should be closely monitored and alerted upon, as these types of accounts should generally not be used to access information repositories. If the capability exists, it may be of value to monitor and alert on users that are retrieving and viewing a large number of documents and pages; this behavior may be indicative of programmatic means being used to retrieve all data within the repository. In environments with high-maturity, it may be possible to leverage User-Behavioral Analytics (UBA) platforms to detect and alert on user based anomalies.&lt;br /&gt;['T1505.001']: Monitor for third-party application logging, messaging, and/or other artifacts that may abuse SQL stored procedures to establish persistent access to systems. On a MSSQL Server, consider monitoring for xp_cmdshell usage.(Citation: NetSPI Startup Stored Procedures) Consider enabling audit features that can log malicious startup activities.&lt;br /&gt;['T1203']: Detecting software exploitation may be difficult depending on the tools available. Software exploits may not always succeed or may cause the exploited process to become unstable or crash.&lt;br /&gt;['T1566']: Monitor for third-party application logging, messaging, and/or other artifacts that may send phishing messages to gain access to victim systems. Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.(Citation: Microsoft Anti Spoofing)(Citation: ACSC Email Spoofing) URL inspection within email (including expanding shortened links) can help detect links leading to known malicious sites. Detonation chambers can be used to detect these links and either automatically go to these sites to determine if they're potentially malicious, or wait and capture the content if a user visits the link.&lt;br /&gt;['T1110.003']: Monitor authentication logs for system and application login failures of [Valid Accounts](https://attack.mitre.org/techniques/T1078). Consider the following event IDs:(Citation: Trimarc Detecting Password Spraying)
Domain Controllers: "Audit Logon" (Success &amp; Failure) for event ID 4625.
Domain Controllers: "Audit Kerberos Authentication Service" (Success &amp; Failure) for event ID 4771.
All systems: "Audit Logon" (Success &amp; Failure) for event ID 4648.&lt;br /&gt;['T1098.002']: Enable the UpdateFolderPermissions action for all logon types. The mailbox audit log will forward folder permission modification events to the Unified Audit Log. Create rules to alert on ModifyFolderPermissions operations where the Anonymous or Default user is assigned permissions other than None.

A larger than normal volume of emails sent from an account and similar phishing emails sent from real accounts within a network may be a sign that an account was compromised and attempts to leverage access with modified email permissions is occurring.&lt;br /&gt;['T1598.002']: Monitor for suspicious email activity, such as numerous accounts receiving messages from a single unusual/unknown sender. Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.(Citation: Microsoft Anti Spoofing)(Citation: ACSC Email Spoofing)&lt;br /&gt;['T1566.003']: Monitor for third-party application logging, messaging, and/or other artifacts that may send spearphishing messages via third-party services in an attempt to gain access to victim systems. &lt;br /&gt;['T1550.004']: Monitor for third-party application logging, messaging, and/or other service artifacts that provide context of user authentication to web applications, including cloud-based services. Combine this information with web credentials usage events to identify authentication events that do not fit the organization baseline.&lt;br /&gt;['T1210']: Detecting software exploitation may be difficult depending on the tools available. Software exploits may not always succeed or may cause the exploited process to become unstable or crash. Web Application Firewalls may detect improper inputs attempting exploitation.&lt;br /&gt;['T1557.003']: Monitor Windows logs (ex: EIDs 1341, 1342, 1020, and 1063) for changes to DHCP settings. These may also highlight DHCP issues such as when IP allocations are low or have run out.(Citation: dhcp_serv_op_events)(Citation: solution_monitor_dhcp_scopes)&lt;br /&gt;['T1562.002']: Monitor for third-party application logging, messaging, and/or other artifacts provided by third-party services that may disable Windows event logging to limit data that can be leveraged for detections and audits.&lt;br /&gt;['T1564.008']: Monitor for third-party application logging, messaging, and/or other artifacts that may use email rules to hide inbound emails in a compromised user's mailbox. Monitor email clients and applications for suspicious activity, such as missing messages or abnormal configuration and/or log entries.&lt;br /&gt;['T1505.002']: Monitor for third-party application logging, messaging, and/or other artifacts that may abuse Microsoft transport agents to establish persistent access to systems. Consider monitoring application logs for abnormal behavior that may indicate suspicious installation of application software components.&lt;br /&gt;['T1213.001']: Monitor for third-party application logging, messaging, and/or other artifacts that may leverage Confluence repositories to mine valuable information. Watch for access to Confluence repositories performed by privileged users (for example, Active Directory Domain, Enterprise, or Schema Administrators) as these types of accounts should generally not be used to access information repositories. If the capability exists, it may be of value to monitor and alert on users that are retrieving and viewing a large number of documents and pages; this behavior may be indicative of programmatic means being used to retrieve all data within the repository. In environments with high-maturity, it may be possible to leverage User-Behavioral Analytics (UBA) platforms to detect and alert on user based anomalies.&lt;br /&gt;['T1204']: Monitor for third-party application logging, messaging, and/or other artifacts that may rely upon specific actions by a user in order to gain execution.&lt;br /&gt;['T1133']: When authentication is not required to access an exposed remote service, monitor for follow-on activities such as anomalous external use of the exposed API or application.&lt;br /&gt;['T1027.005']: The first detection of a malicious tool may trigger an anti-virus or other security tool alert. Similar events may also occur at the boundary through network IDS, email scanning appliance, etc. The initial detection should be treated as an indication of a potentially more invasive intrusion. The alerting system should be thoroughly investigated beyond that initial alert for activity that was not detected. Adversaries may continue with an operation, assuming that individual events like an anti-virus detect will not be investigated or that an analyst will not be able to conclusively link that event to other activity occurring on the network.&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Confluence Logs" url="https://confluence.atlassian.com/doc/working-with-confluence-logs-108364721.html"/>
            <reference name="Mitre ATT&amp;CK Data Source DS0015" url="https://attack.mitre.org/datasources/DS0015"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:02.106">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-M1047" name="Audit" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>Perform audits or scans of systems, permissions, insecure software, insecure configurations, etc. to identify potential weaknesses.&lt;br /&gt;&lt;p&gt;Detailed mitigations per technique:&lt;/p&gt;&lt;br /&gt;['T1484']: Identify and correct GPO permissions abuse opportunities (ex: GPO modification privileges) using auditing tools such as [BloodHound](https://attack.mitre.org/software/S0521) (version 1.5.1 and later)(Citation: GitHub Bloodhound).&lt;br /&gt;['T1059.006']: Inventory systems for unauthorized Python installations.&lt;br /&gt;['T1482']: Map the trusts within existing domains/forests and keep trust relationships to a minimum.&lt;br /&gt;['T1053.003']: Review changes to the &lt;code&gt;cron&lt;/code&gt; schedule. &lt;code&gt;cron&lt;/code&gt; execution can be reviewed within the &lt;code&gt;/var/log&lt;/code&gt; directory. To validate the location of the &lt;code&gt;cron&lt;/code&gt; log file, check the syslog config at &lt;code&gt;/etc/rsyslog.conf&lt;/code&gt; or &lt;code&gt;/etc/syslog.conf&lt;/code&gt; &lt;br /&gt;['T1574.005', 'T1574.010']: Use auditing tools capable of detecting file system permissions abuse opportunities on systems within an enterprise and correct them. Toolkits like the PowerSploit framework contain PowerUp modules that can be used to explore systems for service file system permissions weaknesses.(Citation: Powersploit)&lt;br /&gt;['T1076']: Audit the Remote Desktop Users group membership regularly. Remove unnecessary accounts and groups from Remote Desktop Users groups&lt;br /&gt;['T1505.005', 'T1505']: Regularly check component software on critical services that adversaries may target for persistence to verify the integrity of the systems and identify if unexpected changes have been made.&lt;br /&gt;['T1176']:  Ensure extensions that are installed are the intended ones as many malicious extensions will masquerade as legitimate ones.&lt;br /&gt;['T1484.001']: Identify and correct GPO permissions abuse opportunities (ex: GPO modification privileges) using auditing tools such as [BloodHound](https://attack.mitre.org/software/S0521) (version 1.5.1 and later).(Citation: GitHub Bloodhound)&lt;br /&gt;['T1505.001', 'T1505.002']: Regularly check component software on critical services that adversaries may target for persistence to verify the integrity of the systems and identify if unexpected changes have been made. &lt;br /&gt;['T1574.009', 'T1574.008', 'T1574.007']: Find and eliminate path interception weaknesses in program configuration files, scripts, the PATH environment variable, services, and in shortcuts by surrounding PATH variables with quotation marks when functions allow for them. Be aware of the search order Windows uses for executing or loading binaries and use fully qualified paths wherever appropriate.

Clean up old Windows Registry keys when software is uninstalled to avoid keys with no associated legitimate binaries. Periodically search for and correct or report path interception weaknesses on systems that may have been introduced using custom or available tools that report software using insecure path configurations.(Citation: Microsoft CreateProcess)(Citation: Microsoft Dynamic-Link Library Security)(Citation: Vulnerability and Exploit Detector)&lt;br /&gt;['T1044']: Use auditing tools capable of detecting file system permissions abuse opportunities on systems within an enterprise and correct them. Toolkits like the PowerSploit framework contain PowerUp modules that can be used to explore systems for service file system permissions weaknesses. (Citation: Powersploit)&lt;br /&gt;['T1021.001', 'T1563.002']: Audit the Remote Desktop Users group membership regularly. Remove unnecessary accounts and groups from Remote Desktop Users groups.&lt;br /&gt;['T1564.008']: Enterprise email solutions may have monitoring mechanisms that may include the ability to audit inbox rules on a regular basis. 

In an Exchange environment, Administrators can use &lt;code&gt;Get-InboxRule&lt;/code&gt; to discover and remove potentially malicious inbox rules.(Citation: Microsoft Get-InboxRule)&lt;br /&gt;['T1548.002', 'T1548']: Check for common UAC bypass weaknesses on Windows systems to be aware of the risk posture and address issues where appropriate.(Citation: Github UACMe)&lt;br /&gt;['T1558.004']: Kerberos preauthentication is enabled by default. Older protocols might not support preauthentication therefore it is possible to have this setting disabled. Make sure that all accounts have preauthentication whenever possible and audit changes to setting. Windows tools such as PowerShell may be used to easily find which accounts have preauthentication disabled.  (Citation: Microsoft Preauthentication Jul 2012)(Citation: Stealthbits Cracking AS-REP Roasting Jun 2019)&lt;br /&gt;['T1053.002']: Toolkits like the PowerSploit framework contain PowerUp modules that can be used to explore systems for permission weaknesses in scheduled tasks that could be used to escalate privileges. (Citation: Powersploit) Windows operating system also creates a registry key specifically associated with the creation of a scheduled task on the destination host at: Microsoft\Windows NT\CurrentVersion\Schedule\TaskCache\Tree\At1. (Citation: Secureworks - AT.exe Scheduled Task) In Linux and macOS environments, scheduled tasks using &lt;code&gt;[at](https://attack.mitre.org/software/S0110)&lt;/code&gt; can be audited locally, or through centrally collected logging, using syslog, or auditd events from the host. (Citation: Kifarunix - Task Scheduling in Linux)&lt;br /&gt;['T1543.003']: Use auditing tools capable of detecting privilege and service abuse opportunities on systems within an enterprise and correct them. &lt;br /&gt;['T1552.006']: Search SYSVOL for any existing GGPs that may contain credentials and remove them.(Citation: ADSecurity Finding Passwords in SYSVOL)&lt;br /&gt;['T1528']: Administrators should audit all cloud and container accounts to ensure that they are necessary and that the permissions granted to them are appropriate.  Additionally, administrators should perform an audit of all OAuth applications and the permissions they have been granted to access organizational data. This should be done extensively on all applications in order to establish a baseline, followed up on with periodic audits of new or updated applications. Suspicious applications should be investigated and removed.&lt;br /&gt;['T1574']: Use auditing tools capable of detecting hijacking opportunities on systems within an enterprise and correct them. Toolkits like the PowerSploit framework contain PowerUp modules that can be used to explore systems for hijacking weaknesses.(Citation: Powersploit)

Use the program sxstrace.exe that is included with Windows along with manual inspection to check manifest files for side-loading vulnerabilities in software.

Find and eliminate path interception weaknesses in program configuration files, scripts, the PATH environment variable, services, and in shortcuts by surrounding PATH variables with quotation marks when functions allow for them. Be aware of the search order Windows uses for executing or loading binaries and use fully qualified paths wherever appropriate.

Clean up old Windows Registry keys when software is uninstalled to avoid keys with no associated legitimate binaries. Periodically search for and correct or report path interception weaknesses on systems that may have been introduced using custom or available tools that report software using insecure path configurations.(Citation: Microsoft CreateProcess)(Citation: Microsoft Dynamic-Link Library Security)(Citation: Vulnerability and Exploit Detector)&lt;br /&gt;['T1610']: Scan images before deployment, and block those that are not in compliance with security policies. In Kubernetes environments, the admission controller can be used to validate images after a container deployment request is authenticated but before the container is deployed.(Citation: Kubernetes Hardening Guide)&lt;br /&gt;['T1031', 'T1543']: Use auditing tools capable of detecting privilege and service abuse opportunities on systems within an enterprise and correct them.&lt;br /&gt;['T1606.001']: Administrators should perform an audit of all access lists and the permissions they have been granted to access web applications and services. This should be done extensively on all resources in order to establish a baseline, followed up on with periodic audits of new or updated resources. Suspicious accounts/credentials should be investigated and removed.&lt;br /&gt;['T1213.001']: Consider periodic review of accounts and privileges for critical and sensitive Confluence repositories.&lt;br /&gt;['T1566.002']: Audit applications and their permissions to ensure access to data and resources are limited based upon necessity and principle of least privilege.&lt;br /&gt;['T1546.006', 'T1161']: Binaries can also be baselined for what dynamic libraries they require, and if an app requires a new dynamic library that wasn\u2019t included as part of an update, it should be investigated.&lt;br /&gt;['T1213.002']: Consider periodic review of accounts and privileges for critical and sensitive SharePoint repositories.&lt;br /&gt;['T1578.001']: Routinely check user permissions to ensure only the expected users have the capability to create snapshots and backups.&lt;br /&gt;['T1021.005']: Inventory workstations for unauthorized VNC server software.&lt;br /&gt;['T1145', 'T1552.004']: Ensure only authorized keys are allowed access to critical resources and audit access lists regularly.&lt;br /&gt;['T1550.001']: Administrators should audit all cloud and container accounts to ensure that they are necessary and that the permissions granted to them are appropriate. Where possible, the ability to request temporary account tokens on behalf of another accounts should be disabled. Additionally, administrators can leverage audit tools to monitor actions that can be conducted as a result of OAuth 2.0 access. For instance, audit reports enable admins to identify privilege escalation actions such as role creations or policy modifications, which could be actions performed after initial access.&lt;br /&gt;['T1606.002']: Enable advanced auditing on AD FS. Check the success and failure audit options in the AD FS Management snap-in. Enable Audit Application Generated events on the AD FS farm via Group Policy Object.(Citation: FireEye ADFS)&lt;br /&gt;['T1053.004']: Audit logging for &lt;code&gt;launchd&lt;/code&gt; events in MacOS can be reviewed or centrally collected using multiple options, such as syslog, OpenBSM, or OSquery.&lt;br /&gt;['T1087.004']: Routinely check user permissions to ensure only the expected users have the ability to list IAM identities or otherwise discover cloud accounts.&lt;br /&gt;['T1578']: Routinely monitor user permissions to ensure only the expected users have the capability to modify cloud compute infrastructure components.&lt;br /&gt;['T1560.001', 'T1560']: System scans can be performed to identify unauthorized archival utilities.&lt;br /&gt;['T1073', 'T1574.002']: Use the program sxstrace.exe that is included with Windows along with manual inspection to check manifest files for side-loading vulnerabilities in software.&lt;br /&gt;['T1213.003']: Consider periodic reviews of accounts and privileges for critical and sensitive code repositories. Scan code repositories for exposed credentials or other sensitive information.&lt;br /&gt;['T1088']: Check for common UAC bypass weaknesses on Windows systems to be aware of the risk posture and address issues where appropriate. (Citation: Github UACMe)&lt;br /&gt;['T1562.007']: Routinely check account role permissions to ensure only expected users and roles have permission to modify cloud firewalls. &lt;br /&gt;['T1552.002', 'T1214']: Proactively search for credentials within the Registry and attempt to remediate the risk.&lt;br /&gt;['T1053', 'T1053.005']: Toolkits like the PowerSploit framework contain PowerUp modules that can be used to explore systems for permission weaknesses in scheduled tasks that could be used to escalate privileges. (Citation: Powersploit)&lt;br /&gt;['T1505.004']: Regularly check installed IIS components to verify the integrity of the web server and identify if unexpected changes have been made.&lt;br /&gt;['T1562.002']: Consider periodic review of &lt;code&gt;auditpol&lt;/code&gt; settings for Administrator accounts and perform dynamic baselining on SIEM(s) to investigate potential malicious activity. Also ensure that the EventLog service and its threads are properly running.&lt;br /&gt;['T1038']: Use auditing tools capable of detecting DLL search order hijacking opportunities on systems within an enterprise and correct them. Toolkits like the PowerSploit framework contain PowerUp modules that can be used to explore systems for DLL hijacking weaknesses.(Citation: Powersploit)&lt;br /&gt;['T1552']: Preemptively search for files containing passwords or other credentials and take actions to reduce the exposure risk when found.&lt;br /&gt;['T1578.002']: Routinely check user permissions to ensure only the expected users have the capability to create new instances.&lt;br /&gt;['T1034']: Find and eliminate path interception weaknesses in program configuration files, scripts, the PATH environment variable, services, and in shortcuts by surrounding PATH variables with quotation marks when functions allow for them (Citation: Microsoft CreateProcess). Be aware of the search order Windows uses for executing or loading binaries and use fully qualified paths wherever appropriate (Citation: MSDN DLL Security). 

Clean up old Windows Registry keys when software is uninstalled to avoid keys with no associated legitimate binaries. Periodically search for and correct or report path interception weaknesses on systems that may have been introduced using custom or available tools that report software using insecure path configurations. (Citation: Kanthak Sentinel)&lt;br /&gt;['T1542.004']: Periodically check the integrity of system image to ensure it has not been modified. (Citation: Cisco IOS Software Integrity Assurance - Image File Integrity) (Citation: Cisco IOS Software Integrity Assurance - Image File Verification) (Citation: Cisco IOS Software Integrity Assurance - Change Control) &lt;br /&gt;['T1574.001']: Use auditing tools capable of detecting DLL search order hijacking opportunities on systems within an enterprise and correct them. Toolkits like the PowerSploit framework contain PowerUp modules that can be used to explore systems for DLL hijacking weaknesses.(Citation: Powersploit)

Use the program sxstrace.exe that is included with Windows along with manual inspection to check manifest files for side-by-side problems in software.(Citation: Microsoft Sxstrace)&lt;br /&gt;['T1204.003', 'T1612']: Audit images deployed within the environment to ensure they do not contain any malicious components.&lt;br /&gt;['T1578.003']: Routinely check user permissions to ensure only the expected users have the capability to delete new instances.&lt;br /&gt;['T1527']: Administrators can set up a variety of logs and leverage audit tools to monitor actions that can be conducted as a result of OAuth 2.0 access. For instance, audit reports enable admins to identify privilege escalation actions such as role creations or policy modifications, which could be actions performed after initial access.&lt;br /&gt;['T1114.003']: Enterprise email solutions have monitoring mechanisms that may include the ability to audit auto-forwarding rules on a regular basis.

In an Exchange environment, Administrators can use Get-InboxRule to discover and remove potentially malicious auto-forwarding rules.(Citation: Microsoft Tim McMichael Exchange Mail Forwarding 2). In addition to this, a MAPI Editor can be utilized to examine the underlying database structure and discover any modifications/tampering of the properties of auto-forwarding rules.(Citation: Pfammatter - Hidden Inbox Rules)&lt;br /&gt;['T1114']: Enterprise email solutions have monitoring mechanisms that may include the ability to audit auto-forwarding rules on a regular basis.

In an Exchange environment, Administrators can use Get-InboxRule to discover and remove potentially malicious auto-forwarding rules.(Citation: Microsoft Tim McMichael Exchange Mail Forwarding 2) &lt;br /&gt;['T1606']: Administrators should perform an audit of all access lists and the permissions they have been granted to access web applications and services. This should be done extensively on all resources in order to establish a baseline, followed up on with periodic audits of new or updated resources. Suspicious accounts/credentials should be investigated and removed.
 
Enable advanced auditing on ADFS. Check the success and failure audit options in the ADFS Management snap-in. Enable Audit Application Generated events on the AD FS farm via Group Policy Object.(Citation: FireEye ADFS)&lt;br /&gt;['T1552.001', 'T1081']: Preemptively search for files containing passwords and take actions to reduce the exposure risk when found.&lt;br /&gt;['T1530']: Frequently check permissions on cloud storage to ensure proper permissions are set to deny open or unprivileged access to resources.(Citation: Amazon S3 Security, 2019)&lt;br /&gt;['T1543.004']: Use auditing tools capable of detecting folder permissions abuse opportunities on systems, especially reviewing changes made to folders by third-party software.&lt;br /&gt;['T1213']: Consider periodic review of accounts and privileges for critical and sensitive repositories.&lt;br /&gt;['T1542.005']: Periodically check the integrity of the running configuration and system image to ensure they have not been modified. (Citation: Cisco IOS Software Integrity Assurance - Image File Verification) (Citation: Cisco IOS Software Integrity Assurance - Image File Integrity) (Citation: Cisco IOS Software Integrity Assurance - Change Control) &lt;br /&gt;['T1525']: Periodically check the integrity of images and containers used in cloud deployments to ensure they have not been modified to include malicious software.&lt;br /&gt;['T1053.001']: Scheduled tasks using &lt;code&gt;[at](https://attack.mitre.org/software/S0110)&lt;/code&gt; can be audited locally, or through centrally collected logging, using syslog, or auditd events from the host. (Citation: Kifarunix - Task Scheduling in Linux)&lt;br /&gt;['T1078']: Routinely audit source code, application configuration files, open repositories, and public cloud storage for insecure use and storage of credentials.&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Mitre ATT&amp;CK Mitigation M1047" url="https://attack.mitre.org/mitigations/M1047"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:02.256">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-M1041" name="Encrypt Sensitive Information" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>Protect sensitive information with strong encryption.&lt;br /&gt;&lt;p&gt;Detailed mitigations per technique:&lt;/p&gt;&lt;br /&gt;['T1552', 'T1145', 'T1552.004']: When possible, store keys on separate cryptographic hardware instead of on the local system. &lt;br /&gt;['T1557.002', 'T1557', 'T1040', 'T1020.001']: Ensure that all wired and/or wireless traffic is encrypted appropriately. Use best practices for authentication protocols, such as Kerberos, and ensure web traffic that may contain credentials is protected by SSL/TLS.&lt;br /&gt;['T1070', 'T1070.001', 'T1070.002']: Obfuscate/encrypt event files locally and in transit to avoid giving feedback to an adversary.&lt;br /&gt;['T1602.002']: Configure SNMPv3 to use the highest level of security (authPriv) available.(Citation: US-CERT TA17-156A SNMP Abuse 2017) &lt;br /&gt;['T1003']: Ensure Domain Controller backups are properly secured.&lt;br /&gt;['T1565.002', 'T1493']: Encrypt all important data flows to reduce the impact of tailored modifications on data in transit.&lt;br /&gt;['T1565', 'T1565.001']: Consider encrypting important information to reduce an adversary's ability to perform tailored data modifications.&lt;br /&gt;['T1558', 'T1558.004', 'T1558.003', 'T1558.002']: Enable AES Kerberos encryption (or another stronger encryption algorithm), rather than RC4, where possible.(Citation: AdSecurity Cracking Kerberos Dec 2015)&lt;br /&gt;['T1530']: Encrypt data stored at rest in cloud storage.(Citation: Amazon S3 Security, 2019)(Citation: Microsoft Azure Storage Security, 2019) Managed encryption keys can be rotated by most providers. At a minimum, ensure an incident response plan to storage breach includes rotating the keys and test for impact on client applications.(Citation: Google Cloud Encryption Key Rotation)&lt;br /&gt;['T1492']: Consider encrypting important information to reduce an adversaries ability to perform tailored data modifications.&lt;br /&gt;['T1208']: Enable AES Kerberos encryption (or another stronger encryption algorithm), rather than RC4, where possible. (Citation: AdSecurity Cracking Kerberos Dec 2015)&lt;br /&gt;['T1114.002', 'T1114.003', 'T1114', 'T1114.001']: Use of encryption provides an added layer of security to sensitive information sent over email. Encryption using public key cryptography requires the adversary to obtain the private certificate along with an encryption key to decrypt messages.&lt;br /&gt;['T1602.001', 'T1602']: Configure SNMPv3 to use the highest level of security (authPriv) available.(Citation: US-CERT TA17-156A SNMP Abuse 2017)&lt;br /&gt;['T1119']: Encryption and off-system storage of sensitive information may be one way to mitigate collection of files, but may not stop an adversary from acquiring the information if an intrusion persists over a long period of time and the adversary is able to discover and access the data through other means. Strong passwords should be used on certain encrypted documents that use them to prevent offline cracking through [Brute Force](https://attack.mitre.org/techniques/T1110) techniques.&lt;br /&gt;['T1003.003']: Ensure Domain Controller backups are properly secured.(Citation: Metcalf 2015)&lt;br /&gt;['T1550.001', 'T1527']: File encryption should be enforced across email communications containing sensitive information that may be obtained through access to email services.&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Mitre ATT&amp;CK Mitigation M1041" url="https://attack.mitre.org/mitigations/M1041"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:02.247">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-M1038" name="Execution Prevention" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>Block execution of code on a system through application control, and/or script blocking.&lt;br /&gt;&lt;p&gt;Detailed mitigations per technique:&lt;/p&gt;&lt;br /&gt;['T1015']: Adversaries can replace accessibility features binaries with alternate binaries to execute this technique. Identify and block potentially malicious software executed through accessibility features functionality by using application whitelisting (Citation: Beechey 2010) tools, like Windows Defender Application Control(Citation: Microsoft Windows Defender Application Control), AppLocker, (Citation: Windows Commands JPCERT) (Citation: NSA MS AppLocker) or Software Restriction Policies (Citation: Corio 2008) where appropriate. (Citation: TechNet Applocker vs SRP)&lt;br /&gt;['T1170']: Use application whitelisting configured to block execution of mshta.exe if it is not required for a given system or network to prevent potential misuse by adversaries.&lt;br /&gt;['T1180', 'T1546.002']: Block .scr files from being executed from non-standard locations.&lt;br /&gt;['T1553.003']: Enable application control solutions such as AppLocker and/or Device Guard to block the loading of malicious SIP DLLs.&lt;br /&gt;['T1036.005', 'T1036']: Use tools that restrict program execution via application control by attributes other than file name for common operating system utilities that are needed.&lt;br /&gt;['T1574.008', 'T1574.007', 'T1574.009']: Adversaries will likely need to place new binaries in locations to be executed through this weakness. Identify and block potentially malicious software executed path interception by using application control tools, like Windows Defender Application Control, AppLocker, or Software Restriction Policies where appropriate.(Citation: SANS Application Whitelisting)(Citation: Microsoft Windows Defender Application Control)(Citation: Windows Commands JPCERT)(Citation: NSA MS AppLocker)(Citation: Microsoft Application Lockdown)(Citation: Microsoft Using Software Restriction )&lt;br /&gt;['T1574.006', 'T1574']: Adversaries may use new payloads to execute this technique. Identify and block potentially malicious software executed through hijacking by using application control solutions also capable of blocking libraries loaded by legitimate software.&lt;br /&gt;['T1564.003']: Limit or restrict program execution using anti-virus software. On MacOS, allowlist programs that are allowed to have the plist tag. All other programs should be considered suspicious.&lt;br /&gt;['T1553']: System settings can prevent applications from running that haven't been downloaded through the Apple Store (or other legitimate repositories) which can help mitigate some of these issues. Also enable application control solutions such as AppLocker and/or Device Guard to block the loading of malicious content.&lt;br /&gt;['T1218.005']: Use application control configured to block execution of &lt;code&gt;mshta.exe&lt;/code&gt; if it is not required for a given system or network to prevent potential misuse by adversaries. For example, in Windows 10 and Windows Server 2016 and above, Windows Defender Application Control (WDAC) policy rules may be applied to block the &lt;code&gt;mshta.exe&lt;/code&gt; application and to prevent abuse.(Citation: Microsoft WDAC)&lt;br /&gt;['T1059.005']: Use application control where appropriate. VBA macros obtained from the Internet, based on the file's Mark of the Web (MOTW) attribute, may be blocked from executing in Office applications (ex: Access, Excel, PowerPoint, Visio, and Word) by default starting in Windows Version 2203.(Citation: Default VBS macros Blocking )&lt;br /&gt;['T1215']: Application whitelisting and software restriction tools, such as SELinux, can also aide in restricting kernel module loading. (Citation: Kernel.org Restrict Kernel Module)&lt;br /&gt;['T1514', 'T1548.004']: System settings can prevent applications from running that haven't been downloaded through the Apple Store which may help mitigate some of these issues. Not allowing unsigned applications from being run may also mitigate some risk.&lt;br /&gt;['T1218.004']: Use application control configured to block execution of InstallUtil.exe if it is not required for a given system or network to prevent potential misuse by adversaries.&lt;br /&gt;['T1204', 'T1204.002']: Application control may be able to prevent the running of executables masquerading as other files.&lt;br /&gt;['T1574.001']: Adversaries may use new DLLs to execute this technique. Identify and block potentially malicious software executed through search order hijacking by using application control solutions capable of blocking DLLs loaded by legitimate software.&lt;br /&gt;['T1004']: Identify and block potentially malicious software that may be executed through the Winlogon helper process by using whitelisting (Citation: Beechey 2010) tools like AppLocker (Citation: Windows Commands JPCERT) (Citation: NSA MS AppLocker) that are capable of auditing and/or blocking unknown DLLs.&lt;br /&gt;['T1144']: System settings can prevent applications from running that haven't been downloaded through the Apple Store which can help mitigate some of these issues.&lt;br /&gt;['T1129']: Identify and block potentially malicious software executed through this technique by using application control tools capable of preventing unknown DLLs from being loaded.&lt;br /&gt;['T1218.009', 'T1121']: Block execution of Regsvcs.exe and Regasm.exe if they are not required for a given system or network to prevent potential misuse by adversaries.&lt;br /&gt;['T1548']: System settings can prevent applications from running that haven't been downloaded from legitimate repositories which may help mitigate some of these issues. Not allowing unsigned applications from being run may also mitigate some risk.&lt;br /&gt;['T1611']: Use read-only containers, read-only file systems, and minimal images when possible to prevent the running of commands.(Citation: Kubernetes Hardening Guide)&lt;br /&gt;['T1216.001', 'T1216']: Certain signed scripts that can be used to execute other programs may not be necessary within a given environment. Use application control configured to block execution of these scripts if they are not required for a given system or network to prevent potential misuse by adversaries.&lt;br /&gt;['T1103']: Adversaries can install new AppInit_DLLs binaries to execute this technique. Identify and block potentially malicious software executed through AppInit_DLLs functionality by using application whitelisting (Citation: Beechey 2010) tools, like Windows Defender Application Control(Citation: Microsoft Windows Defender Application Control), AppLocker, (Citation: Windows Commands JPCERT) (Citation: NSA MS AppLocker) or Software Restriction Policies (Citation: Corio 2008) where appropriate. (Citation: TechNet Applocker vs SRP)&lt;br /&gt;['T1218.012']: Use application control configured to block execution of verclsid.exe if it is not required for a given system or network to prevent potential misuse by adversaries.&lt;br /&gt;['T1106']: Identify and block potentially malicious software executed that may be executed through this technique by using application control (Citation: Beechey 2010) tools, like Windows Defender Application Control(Citation: Microsoft Windows Defender Application Control), AppLocker, (Citation: Windows Commands JPCERT) (Citation: NSA MS AppLocker) or Software Restriction Policies (Citation: Corio 2008) where appropriate. (Citation: TechNet Applocker vs SRP)&lt;br /&gt;['T1219']: Use application control to mitigate installation and use of unapproved software that can be used for remote access.&lt;br /&gt;['T1047']: Use application control configured to block execution of &lt;code&gt;wmic.exe&lt;/code&gt; if it is not required for a given system or network to prevent potential misuse by adversaries. For example, in Windows 10 and Windows Server 2016 and above, Windows Defender Application Control (WDAC) policy rules may be applied to block the &lt;code&gt;wmic.exe&lt;/code&gt; application and to prevent abuse.(Citation: Microsoft WDAC)&lt;br /&gt;['T1059.007']: Denylist scripting where appropriate.&lt;br /&gt;['T1546.010']: Adversaries can install new AppInit DLLs binaries to execute this technique. Identify and block potentially malicious software executed through AppInit DLLs functionality by using application control (Citation: Beechey 2010) tools, like Windows Defender Application Control(Citation: Microsoft Windows Defender Application Control), AppLocker, (Citation: Windows Commands JPCERT) (Citation: NSA MS AppLocker) or Software Restriction Policies (Citation: Corio 2008) where appropriate. (Citation: TechNet Applocker vs SRP)&lt;br /&gt;['T1059.004', 'T1059.002', 'T1059', 'T1059.003', 'T1059.001']: Use application control where appropriate.&lt;br /&gt;['T1505.004']: Restrict unallowed ISAPI extensions and filters from running by specifying a list of ISAPI extensions and filters that can run on IIS.(Citation: Microsoft ISAPICGIRestriction 2016)&lt;br /&gt;['T1547.004']: Identify and block potentially malicious software that may be executed through the Winlogon helper process by using application control (Citation: Beechey 2010) tools like AppLocker (Citation: Windows Commands JPCERT) (Citation: NSA MS AppLocker) that are capable of auditing and/or blocking unknown DLLs.&lt;br /&gt;['T1553.001']: System settings can prevent applications from running that haven't been downloaded through the Apple Store which can help mitigate some of these issues. &lt;br /&gt;['T1218.008']: Use application control configured to block execution of Odbcconf.exe if it is not required for a given system or network to prevent potential misuse by adversaries.&lt;br /&gt;['T1127']: Certain developer utilities should be blocked or restricted if not required.&lt;br /&gt;['T1059.008']: TACACS+ can keep control over which commands administrators are permitted to use through the configuration of authentication and command authorization. (Citation: Cisco IOS Software Integrity Assurance - TACACS)&lt;br /&gt;['T1218']: Consider using application control to prevent execution of binaries that are susceptible to abuse and not required for a given system or network.&lt;br /&gt;['T1218.002']: Identify and block potentially malicious and unknown .cpl files by using application control (Citation: Beechey 2010) tools, like Windows Defender Application Control(Citation: Microsoft Windows Defender Application Control), AppLocker, (Citation: Windows Commands JPCERT) (Citation: NSA MS AppLocker) or Software Restriction Policies (Citation: Corio 2008) where appropriate. (Citation: TechNet Applocker vs SRP)&lt;br /&gt;['T1198']: Enable whitelisting solutions such as AppLocker and/or Device Guard to block the loading of malicious SIP DLLs.&lt;br /&gt;['T1196']: Identify and block potentially malicious and unknown .cpl files by using application whitelisting (Citation: Beechey 2010) tools, like Windows Defender Application Control(Citation: Microsoft Windows Defender Application Control), AppLocker, (Citation: Windows Commands JPCERT) (Citation: NSA MS AppLocker) or Software Restriction Policies (Citation: Corio 2008) where appropriate. (Citation: TechNet Applocker vs SRP)&lt;br /&gt;['T1161']: Whitelist applications via known hashes.&lt;br /&gt;['T1143']: Limit or restrict program execution using anti-virus software. On MacOS, whitelist programs that are allowed to have the plist tag. All other programs should be considered suspicious.&lt;br /&gt;['T1546.006']: Allow applications via known hashes.&lt;br /&gt;['T1220']: If msxsl.exe is unnecessary, then block its execution to prevent abuse by adversaries.&lt;br /&gt;['T1080']: Identify potentially malicious software that may be used to taint content or may result from it and audit and/or block the unknown programs by using application control (Citation: Beechey 2010) tools, like AppLocker, (Citation: Windows Commands JPCERT) (Citation: NSA MS AppLocker) or Software Restriction Policies (Citation: Corio 2008) where appropriate. (Citation: TechNet Applocker vs SRP)&lt;br /&gt;['T1547.006']: Application control and software restriction tools, such as SELinux, KSPP, grsecurity MODHARDEN, and Linux kernel tuning can aid in restricting kernel module loading.(Citation: Kernel.org Restrict Kernel Module)(Citation: Wikibooks Grsecurity)(Citation: Kernel Self Protection Project)(Citation: Increasing Linux kernel integrity)(Citation: LKM loading kernel restrictions)&lt;br /&gt;['T1059.006']: Denylist Python where not required.&lt;br /&gt;['T1182']: Adversaries install new AppCertDLL binaries to execute this technique. Identify and block potentially malicious software executed through AppCertDLLs functionality by using application whitelisting (Citation: Beechey 2010) tools, like Windows Defender Application Control(Citation: Microsoft Windows Defender Application Control), AppLocker, (Citation: Windows Commands JPCERT) (Citation: NSA MS AppLocker) or Software Restriction Policies (Citation: Corio 2008) where appropriate. (Citation: TechNet Applocker vs SRP)&lt;br /&gt;['T1127.001']: Use application control configured to block execution of &lt;code&gt;msbuild.exe&lt;/code&gt; if it is not required for a given system or network to prevent potential misuse by adversaries. For example, in Windows 10 and Windows Server 2016 and above, Windows Defender Application Control (WDAC) policy rules may be applied to block the &lt;code&gt;msbuild.exe&lt;/code&gt; application and to prevent abuse.(Citation: Microsoft WDAC)&lt;br /&gt;['T1574.012']: Identify and block potentially malicious unmanaged COR_PROFILER profiling DLLs  by using application control solutions like AppLocker that are capable of auditing and/or blocking unapproved DLLs.(Citation: Beechey 2010)(Citation: Windows Commands JPCERT)(Citation: NSA MS AppLocker)&lt;br /&gt;['T1546.008']: Adversaries can replace accessibility features binaries with alternate binaries to execute this technique. Identify and block potentially malicious software executed through accessibility features functionality by using application control (Citation: Beechey 2010) tools, like Windows Defender Application Control(Citation: Microsoft Windows Defender Application Control), AppLocker, (Citation: Windows Commands JPCERT) (Citation: NSA MS AppLocker) or Software Restriction Policies (Citation: Corio 2008) where appropriate. (Citation: TechNet Applocker vs SRP)&lt;br /&gt;['T1034']: Adversaries will likely need to place new binaries in locations to be executed through this weakness. Identify and block potentially malicious software executed path interception by using application control (Citation: Beechey 2010) tools, like Windows Defender Application Control(Citation: Microsoft Windows Defender Application Control), AppLocker, (Citation: Windows Commands JPCERT) (Citation: NSA MS AppLocker) or Software Restriction Policies (Citation: Corio 2008) where appropriate. (Citation: TechNet Applocker vs SRP)&lt;br /&gt;['T1546.009']: Adversaries install new AppCertDLL binaries to execute this technique. Identify and block potentially malicious software executed through AppCertDLLs functionality by using application control (Citation: Beechey 2010) tools, like Windows Defender Application Control(Citation: Microsoft Windows Defender Application Control), AppLocker, (Citation: Windows Commands JPCERT) (Citation: NSA MS AppLocker) or Software Restriction Policies (Citation: Corio 2008) where appropriate. (Citation: TechNet Applocker vs SRP)&lt;br /&gt;['T1191']: Consider using application whitelisting configured to block execution of CMSTP.exe if it is not required for a given system or network to prevent potential misuse by adversaries. (Citation: MSitPros CMSTP Aug 2017)&lt;br /&gt;['T1068']: Consider blocking the execution of known vulnerable drivers that adversaries may exploit to execute code in kernel mode. Validate driver block rules in audit mode to ensure stability prior to production deployment.(Citation: Microsoft Driver Block Rules)&lt;br /&gt;['T1176']: Set a browser extension allow or deny list as appropriate for your security policy. (Citation: Technospot Chrome Extensions GP)&lt;br /&gt;['T1172']: In order to use domain fronting, adversaries may need to deploy additional tools to compromised systems. (Citation: FireEye APT29 Domain Fronting With TOR March 2017) (Citation: Mandiant No Easy Breach) It is possible to prevent the installation of these tools with application whitelisting.&lt;br /&gt;['T1223']: Consider using application whitelisting to prevent execution of hh.exe if it is not required for a given system or network to prevent potential misuse by adversaries.&lt;br /&gt;['T1553.005']: Consider blocking container file types at web and/or email gateways. Consider unregistering container file extensions in Windows File Explorer.(Citation: Dormann Dangers of VHD 2019)&lt;br /&gt;['T1218.003']: Consider using application control configured to block execution of CMSTP.exe if it is not required for a given system or network to prevent potential misuse by adversaries.&lt;br /&gt;['T1218.014']: Use application control configured to block execution of MMC if it is not required for a given system or network to prevent potential misuse by adversaries.&lt;br /&gt;['T1118']: Use application whitelisting configured to block execution of InstallUtil.exe if it is not required for a given system or network to prevent potential misuse by adversaries.&lt;br /&gt;['T1218.001']: Consider using application control to prevent execution of hh.exe if it is not required for a given system or network to prevent potential misuse by adversaries.&lt;br /&gt;['T1218.013']: Use application control configured to block execution of mavinject.exe if it is not required for a given system or network to prevent potential misuse by adversaries.&lt;br /&gt;['T1038']: Adversaries may use new DLLs to execute this technique. Identify and block potentially malicious software executed through search order hijacking by using application whitelisting solutions capable of blocking DLLs loaded by legitimate software.&lt;br /&gt;['T1564.006']: Use application control to mitigate installation and use of unapproved virtualization software.&lt;br /&gt;['T1609']: Use read-only containers, read-only file systems, and minimal images when possible to prevent the execution of commands.(Citation: Kubernetes Hardening Guide)&lt;br /&gt;['T1218']: Certain signed binaries that can be used to execute other programs may not be necessary within a given environment. Use application whitelisting configured to block execution of these binaries if they are not required for a given system or network to prevent potential misuse by adversaries.&lt;br /&gt;['T1143']: Whitelist programs that are allowed to have this plist tag. All other programs should be considered suspicious.&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Mitre ATT&amp;CK Mitigation M1038" url="https://attack.mitre.org/mitigations/M1038"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:02.237">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-M1050" name="Exploit Protection" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>Use capabilities to detect and block conditions that may lead to or be indicative of a software exploit occurring.&lt;br /&gt;&lt;p&gt;Detailed mitigations per technique:&lt;/p&gt;&lt;br /&gt;['T1212']: Security applications that look for behavior used during exploitation such as Windows Defender Exploit Guard (WDEG) and the Enhanced Mitigation Experience Toolkit (EMET) can be used to mitigate some exploitation behavior.(Citation: TechNet Moving Beyond EMET) Control flow integrity checking is another way to potentially identify and stop a software exploit from occurring.(Citation: Wikipedia Control Flow Integrity) Many of these protections depend on the architecture and target application binary for compatibility and may not work for software targeted for defense evasion.&lt;br /&gt;['T1189', 'T1203']: Security applications that look for behavior used during exploitation such as Windows Defender Exploit Guard (WDEG) and the Enhanced Mitigation Experience Toolkit (EMET) can be used to mitigate some exploitation behavior. (Citation: TechNet Moving Beyond EMET) Control flow integrity checking is another way to potentially identify and stop a software exploit from occurring. (Citation: Wikipedia Control Flow Integrity) Many of these protections depend on the architecture and target application binary for compatibility.&lt;br /&gt;['T1218']: Microsoft's Enhanced Mitigation Experience Toolkit (EMET) Attack Surface Reduction (ASR) feature can be used to block methods of using using trusted binaries to bypass application control.&lt;br /&gt;['T1210']: Security applications that look for behavior used during exploitation such as Windows Defender Exploit Guard (WDEG) and the Enhanced Mitigation Experience Toolkit (EMET) can be used to mitigate some exploitation behavior. (Citation: TechNet Moving Beyond EMET) Control flow integrity checking is another way to potentially identify and stop a software exploit from occurring. (Citation: Wikipedia Control Flow Integrity) Many of these protections depend on the architecture and target application binary for compatibility and may not work for all software or services targeted.&lt;br /&gt;['T1068']: Security applications that look for behavior used during exploitation such as Windows Defender Exploit Guard (WDEG) and the Enhanced Mitigation Experience Toolkit (EMET) can be used to mitigate some exploitation behavior. (Citation: TechNet Moving Beyond EMET) Control flow integrity checking is another way to potentially identify and stop a software exploit from occurring. (Citation: Wikipedia Control Flow Integrity) Many of these protections depend on the architecture and target application binary for compatibility and may not work for software components targeted for privilege escalation.&lt;br /&gt;['T1211']: Security applications that look for behavior used during exploitation such as Windows Defender Exploit Guard (WDEG) and the Enhanced Mitigation Experience Toolkit (EMET) can be used to mitigate some exploitation behavior. (Citation: TechNet Moving Beyond EMET) Control flow integrity checking is another way to potentially identify and stop a software exploit from occurring. (Citation: Wikipedia Control Flow Integrity) Many of these protections depend on the architecture and target application binary for compatibility and may not work for software targeted for defense evasion.&lt;br /&gt;['T1190']: Web Application Firewalls may be used to limit exposure of applications to prevent exploit traffic from reaching the application.&lt;br /&gt;['T1117']: Microsoft's Enhanced Mitigation Experience Toolkit (EMET) Attack Surface Reduction (ASR) feature can be used to block regsvr32.exe from being used to bypass whitelisting. (Citation: Secure Host Baseline EMET) Identify and block potentially malicious software executed through regsvr32 functionality by using application whitelisting (Citation: Beechey 2010) tools, like Windows Defender Application Control(Citation: Microsoft Windows Defender Application Control), AppLocker, (Citation: Windows Commands JPCERT) (Citation: NSA MS AppLocker) or Software Restriction Policies (Citation: Corio 2008) where appropriate. (Citation: TechNet Applocker vs SRP)&lt;br /&gt;['T1218.011']: Microsoft's Enhanced Mitigation Experience Toolkit (EMET) Attack Surface Reduction (ASR) feature can be used to block methods of using rundll32.exe to bypass application control.&lt;br /&gt;['T1085']: Microsoft's Enhanced Mitigation Experience Toolkit (EMET) Attack Surface Reduction (ASR) feature can be used to block methods of using rundll32.exe to bypass whitelisting. (Citation: Secure Host Baseline EMET)&lt;br /&gt;['T1218.010']: Microsoft's Enhanced Mitigation Experience Toolkit (EMET) Attack Surface Reduction (ASR) feature can be used to block regsvr32.exe from being used to bypass application control. (Citation: Secure Host Baseline EMET) Identify and block potentially malicious software executed through regsvr32 functionality by using application control (Citation: Beechey 2010) tools, like Windows Defender Application Control(Citation: Microsoft Windows Defender Application Control), AppLocker, (Citation: Windows Commands JPCERT) (Citation: NSA MS AppLocker) or Software Restriction Policies (Citation: Corio 2008) where appropriate. (Citation: TechNet Applocker vs SRP)&lt;br /&gt;['T1080']: Use utilities that detect or mitigate common features used in exploitation, such as the Microsoft Enhanced Mitigation Experience Toolkit (EMET).&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Mitre ATT&amp;CK Mitigation M1050" url="https://attack.mitre.org/mitigations/M1050"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:02.266">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-DS0022" name="File" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>A computer resource object, managed by the I/O system, for storing data (such as images, text, videos, computer programs, or any wide variety of other media).(Citation: Microsoft File Mgmt)&lt;br /&gt;&lt;p&gt;Detailed detections per technique:&lt;/p&gt;&lt;br /&gt;['T1070.002']: Monitor for unexpected deletion of a system log file, typically stored in /var/logs or /Library/Logs. &lt;br /&gt;['T1485']: Monitor for unexpected deletion to a file (ex: Sysmon EID 23) &lt;br /&gt;['T1554']: Monitor for unexpected deletion of  client software binaries to establish persistent access to systems.&lt;br /&gt;['T1070']: Monitor for a file that may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined malware.&lt;br /&gt;['T1070.001']: Monitor for unexpected deletion of Windows event logs (via native binaries) and may also generate an alterable event (Event ID 1102: "The audit log was cleared")&lt;br /&gt;['T1565.003']: Monitor for unexpected deletion of a file in order to manipulate external outcomes or hide activity &lt;br /&gt;['T1490']: The Windows event logs, ex. Event ID 524 indicating a system catalog was deleted, may contain entries associated with suspicious activity.&lt;br /&gt;['T1070.003']: Monitor for unexpected deletion of a command history file, such as ConsoleHost_history.txt, ~/.zsh_history, or ~/.bash_history.&lt;br /&gt;['T1070.004']: Monitor for unexpected deletion of files from the system&lt;br /&gt;['T1552.006']: Monitor for attempts to access SYSVOL that involve searching for XML files.&lt;br /&gt;['T1114.001']: Monitor for unusual processes accessing local email files that may target user email on local systems to collect sensitive information.&lt;br /&gt;['T1074']: Monitor processes that appear to be reading files from disparate locations and writing them to the same directory or file may be an indication of data being staged, especially if they are suspected of performing encryption or compression on the files, such as 7zip, RAR, ZIP, or zlib.&lt;br /&gt;['T1555.004']: Consider monitoring file reads to Vault locations, &lt;code&gt;&amp;percnt;Systemdrive&amp;percnt;&amp;bsol;Users&amp;bsol;&amp;bsol;&amp;lsqb;Username&amp;rsqb;&amp;bsol;AppData&amp;bsol;Local&amp;bsol;Microsoft&amp;bsol;&amp;bsol;&amp;lsqb;Vault&amp;sol;Credentials&amp;rsqb;&amp;bsol;&lt;/code&gt;, for suspicious activity.(Citation: Malwarebytes The Windows Vault)&lt;br /&gt;['T1552.003']: Monitoring when the user's &lt;code&gt;.bash_history&lt;/code&gt; is read can help alert to suspicious activity.&lt;br /&gt;['T1187']: Monitor for unexpected files used to gather credentials when the files are rendered&lt;br /&gt;['T1011.001']: Monitor for files being accessed that could be related to exfiltration, such as file reads by a process that also has an active network connection. Also monitor for and investigate changes to host adapter settings, such as addition and/or replication of communication interfaces. &lt;br /&gt;['T1020']: Monitor for abnormal access to files (i.e. .pdf, .docx, .jpg, etc.), especially sensitive documents, through the use of automated processing after being gathered during Collection.&lt;br /&gt;['T1048.003']: Monitor files viewed in isolation that may steal data by exfiltrating it over a symmetrically encrypted network protocol other than that of the existing command and control channel.&lt;br /&gt;['T1091']: Monitor for unexpected files accessed on removable media.&lt;br /&gt;['T1555.005']: Monitor file reads that may acquire user credentials from third-party password managers.(Citation: ise Password Manager February 2019)&lt;br /&gt;['T1052']: Monitor file access on removable media that may attempt to exfiltrate data via a physical medium, such as a removable drive.&lt;br /&gt;['T1041']: Monitor for suspicious files (i.e. .pdf, .docx, .jpg, etc.) viewed in isolation that may steal data by exfiltrating it over an existing command and control channel.&lt;br /&gt;['T1555.003']: Identify web browser files that contain credentials such as Google Chrome's Login Data database file: &lt;code&gt;AppData\Local\Google\Chrome\User Data\Default\Login Data&lt;/code&gt;. Monitor file read events of web browser files that contain credentials, especially when the reading process is unrelated to the subject web browser.&lt;br /&gt;['T1018']: Monitor for files (such as &lt;code&gt;/etc/hosts&lt;/code&gt;) being accessed that may attempt to get a listing of other systems by IP address, hostname, or other logical identifier on a network that may be used for Lateral Movement from the current system&lt;br /&gt;['T1025']: Monitor for unexpected/abnormal file accesses to removable media (optical disk drive, USB memory, etc.) connected to the compromised system. &lt;br /&gt;['T1048.001']: Monitor for files viewed in isolation that may steal data by exfiltrating it over a symmetrically encrypted network protocol other than that of the existing command and control channel.&lt;br /&gt;['T1003.003']: Monitor for access or copy of the NTDS.dit.&lt;br /&gt;['T1003.002']: Monitor for hash dumpers opening the Security Accounts Manager (SAM) on the local file system (&lt;code&gt;%SystemRoot%/system32/config/SAM&lt;/code&gt;). Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromised [Valid Accounts](https://attack.mitre.org/techniques/T1078) in-use by adversaries may help as well.&lt;br /&gt;['T1003.007']: Monitor for unexpected access to passwords and hashes stored in memory, processes must open a maps file in the /proc filesystem for the process being analyzed. This file is stored under the path &lt;code&gt;/proc/\/maps&lt;/code&gt;, where the &lt;code&gt;\&lt;/code&gt; directory is the unique pid of the program being interrogated for such authentication data. The AuditD monitoring tool, which ships stock in many Linux distributions, can be used to watch for hostile processes opening this file in the proc file system, alerting on the pid, process name, and arguments of such programs.&lt;br /&gt;['T1003.008']: Monitor for files being accessed that may attempt to dump the contents of &lt;code&gt;/etc/passwd&lt;/code&gt; and &lt;code&gt;/etc/shadow&lt;/code&gt; to enable offline password cracking. The AuditD monitoring tool, which ships stock in many Linux distributions, can be used to watch for hostile processes attempting to access &lt;code&gt;/etc/passwd&lt;/code&gt; and &lt;code&gt;/etc/shadow&lt;/code&gt;, alerting on the pid, process name, and arguments of such programs.&lt;br /&gt;['T1555']: Monitor for files being accessed that may search for common password storage locations to obtain user credentials.&lt;br /&gt;['T1567']: Monitor for files being accessed by an existing, legitimate external Web service to exfiltrate data rather than their primary command and control channel.&lt;br /&gt;['T1539']: Monitor for an attempt by a user to gain access to a network or computing resource, often by providing credentials to cloud service management consoles. Some cloud providers, such as AWS, provide distinct log events for login attempts to the management console.&lt;br /&gt;['T1567.002']: Monitor for files being accessed to exfiltrate data to a cloud storage service rather than over their primary command and control channel.&lt;br /&gt;['T1114']: Monitor for unusual processes access of local system email files for Exfiltration, unusual processes connecting to an email server within a network, or unusual access patterns or authentication attempts on a public-facing webmail server may all be indicators of malicious activity.&lt;br /&gt;['T1048']: Monitor for suspicious files (i.e. .pdf, .docx, .jpg, etc.) viewed in isolation that may steal data by exfiltrating it over a different protocol than that of the existing command and control channel.&lt;br /&gt;['T1217']: Monitor for unexpected browser bookmarks viewed in isolation, this showcases part of a chain of behavior that could lead to other activities, such as Collection and Exfiltration, based on the information obtained.&lt;br /&gt;['T1052.001']: Monitor file access on removable media that may attempt to exfiltrate data over a USB connected physical device.&lt;br /&gt;['T1555.001']: Monitor for Keychain files being accessed that may be related to malicious credential collection.&lt;br /&gt;['T1033']: Monitor for hash dumpers opening the Security Accounts Manager (SAM) on the local file system (&lt;code&gt;%SystemRoot%/system32/config/SAM&lt;/code&gt;). Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromised  [Valid Accounts](https://attack.mitre.org/techniques/T1078) in-use by adversaries may help as well.&lt;br /&gt;['T1003']: Monitor for hash dumpers opening the Security Accounts Manager (SAM) on the local file system (&lt;code&gt;%SystemRoot%/system32/config/SAM&lt;/code&gt;). Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromised ( LinkById: T1078) in-use by adversaries may help as well.&lt;br /&gt;['T1119']: Monitor for unexpected files (i.e. .pdf, .docx, .jpg, etc.) viewed for collecting internal data.&lt;br /&gt;['T1039']: Monitor for unexpected files (i.e. .pdf, .docx, .jpg, etc.)  interacting with network shares.&lt;br /&gt;['T1552.004']: Monitor access to files and directories related to cryptographic keys and certificates as a means for potentially detecting access patterns that may indicate collection and exfiltration activity. &lt;br /&gt;['T1558']: Monitor for unexpected processes interacting with lsass.exe.(Citation: Medium Detecting Attempts to Steal Passwords from Memory) Common credential dumpers such as  [Mimikatz](https://attack.mitre.org/software/S0002) access the LSA Subsystem Service (LSASS) process by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details, including Kerberos tickets, are stored. Monitor for unusual processes accessing &lt;code&gt;secrets.ldb&lt;/code&gt; and &lt;code&gt;.secrets.mkey&lt;/code&gt; located in &lt;code&gt;/var/lib/sss/secrets/&lt;/code&gt;.&lt;br /&gt;['T1087']: Monitor access to file resources that contain local accounts and groups information such as &lt;code&gt;/etc/passwd&lt;/code&gt;, &lt;code&gt;/Users&lt;/code&gt; directories, and the SAM database. 

If access requires high privileges, look for non-admin objects (such as users or processes) attempting to access restricted file resources.&lt;br /&gt;['T1552']: Monitor for suspicious file access activity, specifically indications that a process is reading multiple files in a short amount of time and/or using command-line arguments indicative of searching for credential material (ex: regex patterns). These may be indicators of automated/scripted credential access behavior. Monitoring when the user's &lt;code&gt;.bash_history&lt;/code&gt; is read can help alert to suspicious activity. While users do typically rely on their history of commands, they often access this history through other utilities like "history" instead of commands like &lt;code&gt;cat ~/.bash_history&lt;/code&gt;.&lt;br /&gt;['T1011']: Monitor for files being accessed that could be related to exfiltration, such as file reads by a process that also has an active network connection.&lt;br /&gt;['T1567.001']: Monitor for files being accessed to exfiltrate data to a code repository rather than over their primary command and control channel.&lt;br /&gt;['T1087.001']: Monitor access to file resources that contain local accounts and groups information such as &lt;code&gt;/etc/passwd&lt;/code&gt;, &lt;code&gt;/Users&lt;/code&gt; directories, and the Windows SAM database. 

If access requires high privileges, look for non-admin objects (such as users or processes) attempting to access restricted file resources.&lt;br /&gt;['T1005']: Monitor for unexpected/abnormal access to files that may be malicious collection of local data, such as user files (pdf, .docx, .jpg, etc.) or local databases.&lt;br /&gt;['T1552.001']: Monitor for files being accessed that may search local file systems and remote file shares for files containing insecurely stored credentials. While detecting adversaries accessing these files may be difficult without knowing they exist in the first place, it may be possible to detect adversary use of credentials they have obtained. &lt;br /&gt;['T1053.005']: Monitor Windows Task Scheduler stores in %systemroot%\System32\Tasks for change entries related to scheduled tasks that do not correlate with known software, patch cycles, etc.&lt;br /&gt;['T1574.001']: Monitor for changed made to .manifest/.local redirection files, or file systems for moving, renaming, replacing, or modifying DLLs. Changes in the set of DLLs that are loaded by a process (compared with past behavior) that do not correlate with known software, patches, etc., are suspicious.&lt;br /&gt;['T1574.005']: Monitor for changes to binaries and service executables that may normally occur during software updates. &lt;br /&gt;['T1547.009']: Since a shortcut's target path likely will not change, modifications to shortcut files that do not correlate with known software changes, patches, removal, etc., may be suspicious. Analysis should attempt to relate shortcut file change events to other potentially suspicious events based on known adversary behavior such as process launches of unknown executables that make network connections.&lt;br /&gt;['T1037']: Monitor for changes made to files that are modified by unusual accounts outside of normal administration duties.&lt;br /&gt;['T1564.002']: Monitor for changes made to files that may use hidden users to mask the presence of user accounts they create or modify. Monitor for changes made to the &lt;code&gt;/Library/Preferences/com.apple.loginwindow&lt;/code&gt; plist file for unexpected modifications to the &lt;code&gt; Hide500Users&lt;/code&gt; key value on macOS.(Citation: Cybereason OSX Pirrit)&lt;br /&gt;['T1036']: Monitor for changes made to files outside of an update or patch that may attempt to manipulate features of their artifacts to make them appear legitimate or benign to users and/or security tools.&lt;br /&gt;['T1556.004']: Monitor for changes made to the checksum of the operating system file and verifying the image of the operating system in memory.(Citation: Cisco IOS Software Integrity Assurance - Image File Verification)(Citation: Cisco IOS Software Integrity Assurance - Run-Time Memory Verification) Detection of this behavior may be difficult, detection efforts may be focused on closely related adversary behaviors, such as Modify System Image.&lt;br /&gt;['T1600']: File Modification&lt;br /&gt;['T1548.003']: On Linux, auditd can alert every time a user's actual ID and effective ID are different (this is what happens when you sudo). This technique is abusing normal functionality in macOS and Linux systems, but sudo has the ability to log all input and output based on the &lt;code&gt;LOG_INPUT&lt;/code&gt; and &lt;code&gt;LOG_OUTPUT&lt;/code&gt; directives in the &lt;code&gt;/etc/sudoers&lt;/code&gt; file.&lt;br /&gt;['T1543.001']: Launch Agents also require files on disk for persistence which can also be monitored via other file monitoring applications.&lt;br /&gt;['T1053.003']: Monitor for changes made to files for unexpected modifications to access permissions and attributes &lt;br /&gt;['T1070']: Monitor for changes made to a file may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined malware.&lt;br /&gt;['T1056']: Monitor for changes made to files for unexpected modifications to access permissions and attributes  &lt;br /&gt;['T1546.011']: Monitor for changes made to files that may establish persistence and/or elevate privileges by executing malicious content triggered by application shims.&lt;br /&gt;['T1574.010']: Monitor for modification of binaries and service executables that do not occur during a regular software update or an update scheduled by the organization. Modification of files considers actions such as renaming and directory moving.&lt;br /&gt;['T1505']: Monitor for changes made to files that may abuse legitimate extensible development features of servers to establish persistent access to systems.&lt;br /&gt;['T1053.006']: Monitor for changes made to systemd timer unit files for unexpected modification events within the /etc/systemd/system, /usr/lib/systemd/system/, and ~/.config/systemd/user/ directories, as well as associated symbolic links&lt;br /&gt;['T1056.003']: Monitor for changes made to detect changes to files in the Web directory for organization login pages that do not match with authorized updates to the Web server's content.&lt;br /&gt;['T1546.002']: Monitor for changes made to files that may establish persistence by executing malicious content triggered by user inactivity.&lt;br /&gt;['T1546.013']: Locations where &lt;code&gt;profile.ps1&lt;/code&gt; can be stored should be monitored for modifications. (Citation: Malware Archaeology PowerShell Cheat Sheet) Example profile locations include:
* &lt;code&gt;$PsHome\Profile.ps1&lt;/code&gt;
* &lt;code&gt;$PsHome\Microsoft.{HostProgram}_profile.ps1&lt;/code&gt;
* &lt;code&gt;$Home\My Documents\PowerShell\Profile.ps1&lt;/code&gt;
* &lt;code&gt;$Home\My Documents\PowerShell\Microsoft.{HostProgram}_profile.ps1&lt;/code&gt;&lt;br /&gt;['T1564.003']: Monitor for changes made to files that may use hidden windows to conceal malicious activity from the plain sight of users. In MacOS, plist files are ASCII text files with a specific format, so they're relatively easy to parse. File monitoring can check for the &lt;code&gt;apple.awt.UIElement&lt;/code&gt; or any other suspicious plist tag in plist files and flag them.&lt;br /&gt;['T1547.001']: Monitor the start folder for additions or changes. Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including the startup folders. (Citation: TechNet Autoruns)&lt;br /&gt;['T1565.003']: Monitor for unexpected files with manipulated data in order to manipulate external outcomes or hide activity&lt;br /&gt;['T1070.006']: Monitor for unexpected modifications to file timestamps &lt;br /&gt;['T1489']: Monitor for changes made to files that may stop or disable services on a system to render those services unavailable to legitimate users.&lt;br /&gt;['T1564.005']: Detecting the use of a hidden file system may be exceptionally difficult depending on the implementation. Emphasis may be placed on detecting related aspects of the adversary lifecycle, such as how malware interacts with the hidden file system or how a hidden file system is loaded.&lt;br /&gt;['T1037.002']: Monitor for changes to login hook files (&lt;code&gt;/Library/Preferences/com.apple.loginwindow.plist&lt;/code&gt;), especially by unusual accounts outside of normal administration duties.&lt;br /&gt;['T1574.009']: Monitor for changes made to files that may execute their own malicious payloads by hijacking vulnerable file path references.&lt;br /&gt;['T1491.002']: Monitor external websites for unplanned content changes.&lt;br /&gt;['T1486']: Monitor for changes made to files in user directories.&lt;br /&gt;['T1055.009']: Monitor for changes made to /proc files that may inject malicious code into processes via the /proc filesystem in order to evade process-based defenses as well as possibly elevate privileges. Users should not have permission to modify these in most cases. &lt;br /&gt;['T1098']: Monitor for changes made to files related to account settings, such as /etc/ssh/sshd_config and the authorized_keys file for each user on a system.&lt;br /&gt;['T1564.004']: There are many ways to create and interact with ADSs using Windows utilities. Monitor for operations (execution, copies, etc.) with file names that contain colons. This syntax (ex: &lt;code&gt;file.ext:ads[.ext]&lt;/code&gt;) is commonly associated with ADSs. (Citation: Microsoft ADS Mar 2014) (Citation: Oddvar Moe ADS1 Jan 2018) (Citation: Oddvar Moe ADS2 Apr 2018) For a more exhaustive list of utilities that can be used to execute and create ADSs, see https://gist.github.com/api0cradle/cdd2d0d0ec9abb686f0e89306e277b8f.&lt;br /&gt;['T1600.002']: There is no documented method for defenders to directly identify behaviors that reduce encryption key space. Detection efforts may be focused on closely related adversary behaviors, such as Modify System Image and Network Device CLI. Some detection methods require vendor support to aid in investigation.&lt;br /&gt;['T1187']: Monitor for changes made to the .LNK, .SCF, or any other files on systems and within virtual environments that contain resources that point to external network resources &lt;br /&gt;['T1543.004']: Monitor files for changes that may create or modify Launch Daemons to execute malicious payloads as part of persistence.&lt;br /&gt;['T1546.004']: Monitor for changes to &lt;code&gt;/etc/profile&lt;/code&gt; and &lt;code&gt;/etc/profile.d&lt;/code&gt;, these files should only be modified by system administrators. MacOS users can leverage Endpoint Security Framework file events monitoring these specific files.(Citation: ESF_filemonitor)&lt;br /&gt;['T1098.004']: Monitor for changes made to detect changes made to the authorized_keys file for each user on a system. Monitor for changes to and suspicious processes modifiying /etc/ssh/sshd_config.&lt;br /&gt;['T1548']: On Linux, auditd can alert every time a user's actual ID and effective ID are different (this is what happens when you sudo). This technique is abusing normal functionality in macOS and Linux systems, but sudo has the ability to log all input and output based on the &lt;code&gt;LOG_INPUT&lt;/code&gt; and &lt;code&gt;LOG_OUTPUT&lt;/code&gt; directives in the &lt;code&gt;/etc/sudoers&lt;/code&gt; file. Consider monitoring for &lt;code&gt;/usr/libexec/security_authtrampoline&lt;/code&gt; executions which may indicate that AuthorizationExecuteWithPrivileges is being executed. MacOS system logs may also indicate when AuthorizationExecuteWithPrivileges is being called.&lt;br /&gt;['T1037.004']: Monitor for changes made to files for unexpected modifications to RC scripts in the /etc/ directory&lt;br /&gt;['T1554']: Monitor changes to client software that do not correlate with known software or patch cycles.&lt;br /&gt;['T1070.002']: Monitor for changes made to system log files, typically stored in  /var/log or /Library/Logs, for unexpected modifications to access permissions and attributes &lt;br /&gt;['T1055']: Monitor for changes made to files that may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges.&lt;br /&gt;['T1036.003']: Monitor for changes made to files for unexpected modifications to file names that are mismatched between the file name on disk and that of the binary's PE metadata. This is a likely indicator that a binary was renamed after it was compiled.  &lt;br /&gt;['T1547.015']: All login items created via shared file lists are viewable by using the System Preferences GUI or in the &lt;code&gt;~/Library/Application Support/com.apple.backgroundtaskmanagementagent/backgrounditems.btm&lt;/code&gt; file.(Citation: Open Login Items Apple)(Citation: Startup Items Eclectic)(Citation: objsee block blocking login items)(Citation: sentinelone macos persist Jun 2019) These locations should be monitored and audited.&lt;br /&gt;['T1574']: Monitor file systems for moving, renaming, replacing, or modifying DLLs. Changes in the set of DLLs that are loaded by a process (compared with past behavior) that do not correlate with known software, patches, etc., are suspicious. Modifications to or creation of .manifest and .local redirection files that do not correlate with software updates are suspicious.&lt;br /&gt;['T1546']: Monitor for changes made to files that may establish persistence and/or elevate privileges using system mechanisms that trigger execution based on specific events.&lt;br /&gt;['T1556']: Monitor PAM configuration and module paths (ex: /etc/pam.d/) for changes. Use system-integrity tools such as AIDE and monitoring tools such as auditd to monitor PAM files.&lt;br /&gt;['T1137.002']: Monitor for changes made to files that may abuse the Microsoft Office "Office Test" Registry key to obtain persistence on a compromised system.&lt;br /&gt;['T1564']: Monitor for changes made to files that may attempt to hide artifacts associated with their behaviors to evade detection.&lt;br /&gt;['T1547.006']: Monitor for changes made to files that may modify the kernel to automatically execute programs on system boot.&lt;br /&gt;['T1574.006']: Monitor for changes to environment variables and files associated with loading shared libraries such as LD_PRELOAD on Linux and DYLD_INSERT_LIBRARIES on macOS.&lt;br /&gt;['T1553']: Periodically baseline registered SIPs and trust providers (Registry entries and files on disk), specifically looking for new, modified, or non-Microsoft entries.(Citation: SpectorOps Subverting Trust Sept 2017) Also analyze Autoruns data for oddities and anomalies, specifically malicious files attempting persistent execution by hiding within auto-starting locations. Autoruns will hide entries signed by Microsoft or Windows by default, so ensure "Hide Microsoft Entries" and "Hide Windows Entries" are both deselected.(Citation: SpectorOps Subverting Trust Sept 2017)

On macOS, the removal of the &lt;code&gt;com.apple.quarantine&lt;/code&gt; flag by a user instead of the operating system is a suspicious action and should be examined further. Also monitor software update frameworks that may strip this flag when performing updates.&lt;br /&gt;['T1137.006']: Monitor for changes made to files that may abuse Microsoft Office add-ins to obtain persistence on a compromised system.&lt;br /&gt;['T1546.008']: Monitor for changes made to files that may establish persistence and/or elevate privileges by executing malicious content triggered by accessibility features. Changes to accessibility utility binaries or binary paths that do not correlate with known software, patch cycles, etc., are suspicious.&lt;br /&gt;['T1546.006']: Monitor file systems for changes to application binaries and invalid checksums/signatures.&lt;br /&gt;['T1137']: Monitor for changes made to files that may leverage Microsoft Office-based applications for persistence between startups.&lt;br /&gt;['T1553.003']: Periodically baseline registered SIPs and trust providers (Registry entries and files on disk), specifically looking for new, modified, or non-Microsoft entries.(Citation: SpectorOps Subverting Trust Sept 2017) Also analyze Autoruns data for oddities and anomalies, specifically malicious files attempting persistent execution by hiding within auto-starting locations. Autoruns will hide entries signed by Microsoft or Windows by default, so ensure "Hide Microsoft Entries" and "Hide Windows Entries" are both deselected.(Citation: SpectorOps Subverting Trust Sept 2017)&lt;br /&gt;['T1037.003']: Monitor for changes made to files for unexpected modifications to unusual accounts outside of normal administration duties  &lt;br /&gt;['T1569.001']: Every Launch Agent and Launch Daemon must have a corresponding plist file on disk which can be monitored. Plist files are located in the root, system, and users &lt;code&gt;/Library/LaunchAgents&lt;/code&gt; or &lt;code&gt;/Library/LaunchDaemons&lt;/code&gt; folders. [Launch Agent](https://attack.mitre.org/techniques/T1543/001) or [Launch Daemon](https://attack.mitre.org/techniques/T1543/004) with executable paths pointing to /tmp and /Shared folders locations are potentially suspicious.&lt;br /&gt;['T1543']: Monitor for changes to files associated with system-level processes.&lt;br /&gt;['T1569']: Monitor for changes made to files that may abuse system services or daemons to execute commands or programs.&lt;br /&gt;['T1547']: Monitor for changes made to files that may configure system settings to automatically execute a program during system boot or logon to maintain persistence or gain higher-level privileges on compromised systems.&lt;br /&gt;['T1505.005']: Monitor unexpected changes and/or interactions with &lt;code&gt;termsrv.dll&lt;/code&gt;, which is typically stored in &lt;code&gt;%SystemRoot%\System32\&lt;/code&gt;.&lt;br /&gt;['T1546.005']: Monitor for changes made to files that may establish persistence by executing malicious content triggered by an interrupt signal.&lt;br /&gt;['T1543.002']: Systemd service unit files may be detected by auditing file creation and modification events within the &lt;code&gt;/etc/systemd/system&lt;/code&gt;, &lt;code&gt;/usr/lib/systemd/system/&lt;/code&gt;, and &lt;code&gt;/home/&lt;username&gt;/.config/systemd/user/&lt;/code&gt; directories, as well as associated symbolic links&lt;br /&gt;['T1505.003']: Monitor for changes made to files that may backdoor web servers with web shells to establish persistent access to systems.&lt;br /&gt;['T1556.001']: Monitor for changes to functions exported from authentication-related system DLLs (such as cryptdll.dll and samsrv.dll).(Citation: Dell Skeleton)&lt;br /&gt;['T1601.002']: Monitor for changes made to the operating system of a network device because image downgrade may be used in conjunction with  [Patch System Image](https://attack.mitre.org/techniques/T1601/001), it may be appropriate to also verify the integrity of the vendor provided operating system image file.&lt;br /&gt;['T1547.008']: Monitor for changes made to files that may modify or add LSASS drivers to obtain persistence on compromised systems.&lt;br /&gt;['T1553.001']: The removal of the &lt;code&gt;com.apple.quarantine&lt;/code&gt; flag by a user instead of the operating system is a suspicious action and should be examined further. Also monitor software update frameworks that may strip this flag when performing updates.&lt;br /&gt;['T1574.004']: Monitor file systems for moving, renaming, replacing, or modifying dylibs. Changes in the set of dylibs that are loaded by a process (compared to past behavior) that do not correlate with known software, patches, etc., are suspicious. Check the system for multiple dylibs with the same name and monitor which versions have historically been loaded into a process.&lt;br /&gt;['T1485']: Monitor for changes made to a large quantity of files for unexpected modifications in user directories and under C:\Windows\System32\.&lt;br /&gt;['T1037.005']: Monitor for changes made to files for unexpected modifications to /Library/StartupItem folder&lt;br /&gt;['T1647']: Monitor for plist file modification, especially if immediately followed by other suspicious events such as code execution from &lt;code&gt;\~/Library/Scripts&lt;/code&gt; or &lt;code&gt;\~/Library/Preferences&lt;/code&gt;. Also, monitor for significant changes to any path pointers in a modified plist.&lt;br /&gt;['T1574.008']: Monitor for programs metadata modifications such as deletion of the path to an executable since it makes programs vulnerable to this type of technique. Also, monitor modifications of files such as renaming programs using Windows system utilities names.&lt;br /&gt;['T1080']: Monitor for files that write or overwrite many files to a network shared directory may be suspicious.&lt;br /&gt;['T1547.013']: Malicious XDG autostart entries may be detected by auditing file modification events within the &lt;code&gt;/etc/xdg/autostart&lt;/code&gt; and &lt;code&gt;~/.config/autostart&lt;/code&gt; directories. Depending on individual configurations, defenders may need to query the environment variables &lt;code&gt;$XDG_CONFIG_HOME&lt;/code&gt; or &lt;code&gt;$XDG_CONFIG_DIRS&lt;/code&gt; to determine the paths of Autostart entries. Autostart entry files not associated with legitimate packages may be considered suspicious. Suspicious entries can also be identified by comparing entries to a trusted system baseline.&lt;br /&gt;['T1053']: Monitor for changes made to files that may abuse task scheduling functionality to facilitate initial or recurring execution of malicious code.&lt;br /&gt;['T1601.001']: Compare the checksum of the operating system file with the checksum of a known good copy from a trusted source. Some embedded network device platforms may have the capability to calculate the checksum of the file, while others may not. Even for those platforms that have the capability, it is recommended to download a copy of the file to a trusted computer to calculate the checksum with software that is not compromised.https://tools.cisco.com/security/center/resources/integrity_assurance.html#7

Many vendors of embedded network devices can provide advanced debugging support that will allow them to work with device owners to validate the integrity of the operating system running in memory. If a compromise of the operating system is suspected, contact the vendor technical support and seek such services for a more thorough inspection of the current running system. https://tools.cisco.com/security/center/resources/integrity_assurance.html#13&lt;br /&gt;['T1546.014']: Monitor emond rules creation by checking for files modified in &lt;code&gt;/etc/emond.d/rules/&lt;/code&gt; and &lt;code&gt;/private/var/db/emondClients&lt;/code&gt;.&lt;br /&gt;['T1140']: Monitor for changes made to files for unexpected modifications that attempt to hide artifacts.&lt;br /&gt;['T1053.002']: On Windows, monitor Windows Task Scheduler stores in `%systemroot%\System32\Tasks` for change entries related to scheduled tasks, especially those that do not correlate with known software, patch cycles, etc. On Linux and macOS, all [at](https://attack.mitre.org/software/S0110) jobs are stored in &lt;code&gt;/var/spool/cron/atjobs/&lt;/code&gt;.(Citation: rowland linux at 2019)&lt;br /&gt;['T1070.003']: Monitor for changes made to command history files, such as ConsoleHost_history.txt, ~/.zsh_history, or ~/.bash_history, for unexpected modifications to contents, access permissions, and attributes.&lt;br /&gt;['T1505.004']: Monitor for modification of files (especially DLLs on webservers) that could be abused as malicious ISAPI extensions/filters or IIS modules. Changes to &lt;code&gt;%windir%\system32\inetsrv\config\applicationhost.config&lt;/code&gt; could indicate an IIS module installation.(Citation: Microsoft IIS Modules Overview 2007)(Citation: ESET IIS Malware 2021)&lt;br /&gt;['T1491.001']: Monitor internal and websites for unplanned content changes.&lt;br /&gt;['T1137.001']: Monitor for changes made to files that may abuse Microsoft Office templates to obtain persistence on a compromised system. Modification to base templates, like Normal.dotm, should also be investigated since the base templates should likely not contain VBA macros. Changes to the Office macro security settings should also be investigated&lt;br /&gt;['T1547.007']: Monitoring the specific plist files associated with reopening applications can indicate when an application has registered itself to be reopened.&lt;br /&gt;['T1491']: Monitor for changes made to files for unexpected modifications to internal and external websites for unplanned content changes.&lt;br /&gt;['T1564.008']: On MacOS systems, monitor for modifications to the &lt;code&gt;RulesActiveState.plist&lt;/code&gt;, &lt;code&gt;SyncedRules.plist&lt;/code&gt;, &lt;code&gt;UnsyncedRules.plist&lt;/code&gt;, and &lt;code&gt;MessageRules.plist&lt;/code&gt; files.(Citation: MacOS Email Rules)&lt;br /&gt;['T1548.001']: Monitor for changes made to files that may perform shell escapes or exploit vulnerabilities in an application with the setsuid or setgid bits to get code running in a different user's context.&lt;br /&gt;['T1014']: Monitor for changes and the existence of unrecognized DLLs, drivers, devices, services, and to the MBR. (Citation: Wikipedia Rootkit)&lt;br /&gt;['T1601']: Most embedded network devices provide a command to print the version of the currently running operating system. Use this command to query the operating system for its version number and compare it to what is expected for the device in question. Because this method may be used in conjunction with  [Patch System Image](https://attack.mitre.org/techniques/T1601/001), it may be appropriate to also verify the integrity of the vendor provided operating system image file.

Compare the checksum of the operating system file with the checksum of a known good copy from a trusted source. Some embedded network device platforms may have the capability to calculate the checksum of the file, while others may not. Even for those platforms that have the capability, it is recommended to download a copy of the file to a trusted computer to calculate the checksum with software that is not compromised. (Citation: Cisco IOS Software Integrity Assurance - Image File Verification)

Many vendors of embedded network devices can provide advanced debugging support that will allow them to work with device owners to validate the integrity of the operating system running in memory. If a compromise of the operating system is suspected, contact the vendor technical support and seek such services for a more thorough inspection of the current running system.  (Citation: Cisco IOS Software Integrity Assurance - Run-Time Memory Verification)&lt;br /&gt;['T1053.007']: Monitor for newly constructed files by using the logging agents on Kubernetes nodes and retrieve logs from sidecar proxies for application and resource pods to monitor malicious container orchestration job deployments.&lt;br /&gt;['T1574.007']: Monitor for newly constructed files for files named after partial directories and in locations that may be searched for common processes through the environment variable, or otherwise should not be user writable. Also, monitor file creation for programs that are named after Windows system programs or programs commonly executed without a path (such as "findstr," "net," and "python"). If this activity occurs outside of known administration activity, upgrades, installations, or patches, then it may be suspicious.&lt;br /&gt;['T1204.001']: malicious documents and files that are downloaded from a link and executed on the user's computer&lt;br /&gt;['T1137.001']: Monitor for newly constructed files that may abuse Microsoft Office templates to obtain persistence on a compromised system.&lt;br /&gt;['T1137']: Monitor for newly constructed files that may leverage Microsoft Office-based applications for persistence between startups.&lt;br /&gt;['T1218.002']: Monitor for newly constructed files that may forge web cookies that can be used to gain access to web applications or Internet services.&lt;br /&gt;['T1560.002']: Monitor newly constructed files being written with extensions and/or headers associated with compressed or encrypted file types. Detection efforts may focus on follow-on exfiltration activity, where compressed or encrypted files can be detected in transit with a network intrusion detection or data loss prevention system analyzing file headers.&lt;br /&gt;['T1037.002']: Monitor for the creation of and/or changes to login hook files (&lt;code&gt;/Library/Preferences/com.apple.loginwindow.plist&lt;/code&gt;), especially by unusual accounts outside of normal administration duties.&lt;br /&gt;['T1037.004']: Monitor for newly constructed /etc/rc.local file &lt;br /&gt;['T1574.006']: Monitor for newly constructed files that are added to absolute paths of shared libraries such as LD_PRELOAD on Linux and DYLD_INSERT_LIBRARIES on macOS.&lt;br /&gt;['T1566']: Monitor for newly constructed files from a phishing messages to gain access to victim systems.&lt;br /&gt;['T1546.004']: Monitor for newly constructed files that may establish persistence through executing malicious commands triggered by a user's shell. For most Linux and macOS systems, a list of file paths for valid shell options available on a system are located in the &lt;code&gt;/etc/shells&lt;/code&gt; file.&lt;br /&gt;['T1036.007']: Monitor for files written to disk that contain two file extensions, particularly when the second is an executable.&lt;br /&gt;['T1574.005']: Monitor for newly constructed files to match an existing service executable, it could be detected and correlated with other suspicious behavior.  &lt;br /&gt;['T1105']: Monitor for file creation and files transferred into the network&lt;br /&gt;['T1491']: Monitor for newly constructed visual content for internal or external enterprise networks. &lt;br /&gt;['T1037.005']: Monitor for newly constructed files by unusual accounts outside of normal administration duties&lt;br /&gt;['T1074.001']: Monitor publicly writeable directories, central locations, and commonly used staging directories (recycle bin, temp folders, etc.) to regularly check for compressed or encrypted data that may be indicative of staging.&lt;br /&gt;['T1053']: Monitor newly constructed files that may abuse task scheduling functionality to facilitate initial or recurring execution of malicious code.&lt;br /&gt;['T1546.005']: Monitor for newly constructed files that may establish persistence by executing malicious content triggered by an interrupt signal.&lt;br /&gt;['T1505.003']: File monitoring may be used to detect changes to files in the Web directory of a Web server that do not match with updates to the Web server's content and may indicate implantation of a Web shell script.(Citation: NSA Cyber Mitigating Web Shells)&lt;br /&gt;['T1547']: Monitor for newly constructed files that may configure system settings to automatically execute a program during system boot or logon to maintain persistence or gain higher-level privileges on compromised systems.&lt;br /&gt;['T1543.001']: Monitor for newly constructed files that may create or modify launch agents to repeatedly execute malicious payloads as part of persistence.&lt;br /&gt;['T1547.013']: Malicious XDG autostart entries may be detected by auditing file creation events within the &lt;code&gt;/etc/xdg/autostart&lt;/code&gt; and &lt;code&gt;~/.config/autostart&lt;/code&gt; directories. Depending on individual configurations, defenders may need to query the environment variables &lt;code&gt;$XDG_CONFIG_HOME&lt;/code&gt; or &lt;code&gt;$XDG_CONFIG_DIRS&lt;/code&gt; to determine the paths of Autostart entries. Autostart entry files not associated with legitimate packages may be considered suspicious. Suspicious entries can also be identified by comparing entries to a trusted system baseline.&lt;br /&gt;['T1027.004']: Monitor for newly constructed files for payloads&lt;br /&gt;['T1543.004']: Monitor for new files added to the &lt;code&gt;/Library/LaunchDaemons/&lt;/code&gt; folder. The System LaunchDaemons are protected by SIP.&lt;br /&gt;['T1574']: Monitor for newly constructed files that may execute their own malicious payloads by hijacking the way operating systems run programs.&lt;br /&gt;['T1546.002']: Monitor newly constructed files that may establish persistence by executing malicious content triggered by user inactivity.&lt;br /&gt;['T1547.012']: Monitor for newly constructed files that may abuse print processors to run malicious DLLs during system boot for persistence and/or privilege escalation.&lt;br /&gt;['T1574.010']: Monitor for creation of binaries and service executables that do not occur during a regular software update or an update scheduled by the organization. This behavior also considers files that are overwritten.&lt;br /&gt;['T1547.010']: Monitor newly constructed files that may use port monitors to run an attacker supplied DLL during system boot for persistence or privilege escalation.&lt;br /&gt;['T1491.001']: Monitor for newly constructed files that may deface systems internal to an organization in an attempt to intimidate or mislead users.&lt;br /&gt;['T1027']: Detection of file obfuscation is difficult unless artifacts are left behind by the obfuscation process that are uniquely detectable with a signature. If detection of the obfuscation itself is not possible, it may be possible to detect the malicious activity that caused the obfuscated file (for example, the method that was used to write, read, or modify the file on the file system).&lt;br /&gt;['T1564.001']: Monitor the file system and shell commands for files being created with a leading "."&lt;br /&gt;['T1218.001']: Monitor presence and use of CHM files, especially if they are not typically used within an environment.&lt;br /&gt;['T1218']: Monitor for file activity (creations, downloads, modifications, etc.), especially for file types that are not typical within an environment and may be indicative of adversary activity.&lt;br /&gt;['T1556.002']: Monitor for newly constructed files that may register malicious password filter dynamic link libraries (DLLs) into the authentication process to acquire user credentials as they are validated.&lt;br /&gt;['T1556']: Monitor for suspicious additions to the /Library/Security/SecurityAgentPlugins directory.(Citation: Xorrior Authorization Plugins)&lt;br /&gt;['T1204']: Anti-virus can potentially detect malicious documents and files that are downloaded and executed on the user's computer. Endpoint sensing or network sensing can potentially detect malicious events once the file is opened (such as a Microsoft Word document or PDF reaching out to the internet or spawning powershell.exe).&lt;br /&gt;['T1574.009']: Monitor file creation for files named after partial directories and in locations that may be searched for common processes through the environment variable, or otherwise should not be user writable. Also, monitor file creation for programs that are named after Windows system programs or programs commonly executed without a path (such as "findstr," "net," and "python"). If this activity occurs outside of known administration activity, upgrades, installations, or patches, then it may be suspicious.&lt;br /&gt;['T1546']: Monitor newly constructed files that may establish persistence and/or elevate privileges using system mechanisms that trigger execution based on specific events.&lt;br /&gt;['T1491.002']: Monitor for newly constructed files that may deface systems external to an organization in an attempt to deliver messaging, intimidate, or otherwise mislead an organization or users.&lt;br /&gt;['T1546.014']: Monitor emond rules creation by checking for files created in &lt;code&gt;/etc/emond.d/rules/&lt;/code&gt; and &lt;code&gt;/private/var/db/emondClients&lt;/code&gt;.&lt;br /&gt;['T1547.009']: Monitor for LNK files created with a Zone Identifier value greater than 1, which may indicate that the LNK file originated from outside of the network.(Citation: BSidesSLC 2020 - LNK Elastic) Analysis should attempt to relate shortcut creation events to other potentially suspicious events based on known adversary behavior such as process launches of unknown executables that make network connections.&lt;br /&gt;['T1547.006']: Monitor for newly constructed files that may modify the kernel to automatically execute programs on system boot.&lt;br /&gt;['T1187']: Monitor for newly constructed .LNK, .SCF, or any other files on systems and within virtual environments that contain resources that point to external network resources &lt;br /&gt;['T1546.008']: Monitor newly constructed files that may establish persistence and/or elevate privileges by executing malicious content triggered by accessibility features.&lt;br /&gt;['T1547.008']: Monitor newly constructed files that may modify or add LSASS drivers to obtain persistence on compromised systems.&lt;br /&gt;['T1496']: Monitor for common cryptomining files on local systems that may indicate compromise and resource usage&lt;br /&gt;['T1505.004']: Monitor for creation of files (especially DLLs on webservers) that could be abused as malicious ISAPI extensions/filters or IIS modules.&lt;br /&gt;['T1565']: Monitor for newly constructed files in order to manipulate external outcomes or hide activity&lt;br /&gt;['T1505']: Consider monitoring file locations associated with the installation of new application software components such as paths from which applications typically load such extensible components.&lt;br /&gt;['T1218.005']: Monitor use of HTA files. If they are not typically used within an environment then execution of them may be suspicious&lt;br /&gt;['T1566.001']: Monitor for newly constructed files from a spearphishing emails with a malicious attachment in an attempt to gain access to victim systems.&lt;br /&gt;['T1486']: Monitor for newly constructed files in user directories.&lt;br /&gt;['T1574.004']: Monitor for newly constructed dylibs&lt;br /&gt;['T1137.002']: Monitor for newly constructed files that may abuse the Microsoft Office "Office Test" Registry key to obtain persistence on a compromised system.&lt;br /&gt;['T1204.002']: Monitor for newly constructed files that are downloaded and executed on the user's computer. Endpoint sensing or network sensing can potentially detect malicious events once the file is opened (such as a Microsoft Word document or PDF reaching out to the internet or spawning powershell.exe).&lt;br /&gt;['T1543']: Monitor for newly constructed files that may create or modify system-level processes to repeatedly execute malicious payloads as part of persistence.&lt;br /&gt;['T1218.014']: Monitor for creation and use of .msc files. MMC may legitimately be used to call Microsoft-created .msc files, such as &lt;code&gt;services.msc&lt;/code&gt; or &lt;code&gt;eventvwr.msc&lt;/code&gt;. Invoking non-Microsoft .msc files may be an indicator of malicious activity.&lt;br /&gt;['T1037']: Monitor for newly constructed files that may use scripts automatically executed at boot or logon initialization to establish persistence.&lt;br /&gt;['T1574.001']: Monitor newly constructed .manifest and .local redirection files that do not correlate with software updates.&lt;br /&gt;['T1189']: Monitor for newly constructed files written to disk to gain access to a system through a user visiting a website over the normal course of browsing.&lt;br /&gt;['T1564.006']: Monitor for newly constructed files associated with running a virtual instance, such as binary files associated with common virtualization technologies (ex: VirtualBox, VMware, QEMU, Hyper-V).&lt;br /&gt;['T1080']: Monitor for newly constructed files from files that write or overwrite many files to a network shared directory may be suspicious.&lt;br /&gt;['T1574.002']: Monitor for newly constructed files in common folders on the computer system.&lt;br /&gt;['T1564.009']: Monitor for newly constructed files that may abuse resource forks to hide malicious code or executables to evade detection and bypass security applications.&lt;br /&gt;['T1176']: Monitor for newly constructed files and/or all installed extensions maintain a plist file in the /Library/Managed Preferences/username/ directory. Ensure all listed files are in alignment with approved extensions&lt;br /&gt;['T1553.005']: Monitor compressed/archive and image files downloaded from the Internet as the contents may not be tagged with the MOTW. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities.&lt;br /&gt;['T1570']: Monitor newly constructed files to/from a lateral tool transfer &lt;br /&gt;['T1564']: Monitor for newly constructed files that may attempt to hide artifacts associated with their behaviors to evade detection.&lt;br /&gt;['T1546.013']: Locations where &lt;code&gt;profile.ps1&lt;/code&gt; can be stored should be monitored for new profiles. (Citation: Malware Archaeology PowerShell Cheat Sheet) Example profile locations include:
* &lt;code&gt;$PsHome\Profile.ps1&lt;/code&gt;
* &lt;code&gt;$PsHome\Microsoft.{HostProgram}_profile.ps1&lt;/code&gt;
* &lt;code&gt;$Home\My Documents\PowerShell\Profile.ps1&lt;/code&gt;
* &lt;code&gt;$Home\My Documents\PowerShell\Microsoft.{HostProgram}_profile.ps1&lt;/code&gt;&lt;br /&gt;['T1027.006']: Monitor for newly constructed files via JavaScript, developing rules for the different variants, with a combination of different encoding and/or encryption schemes, may be very challenging. Consider monitoring files downloaded from the Internet, possibly by HTML Smuggling, for suspicious activities. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities.&lt;br /&gt;['T1554']: Monitor for newly constructed files that may modify client software binaries to establish persistent access to systems.&lt;br /&gt;['T1091']: Monitor for newly constructed files on removable media&lt;br /&gt;['T1137.006']: Monitor for newly constructed files that may abuse Microsoft Office add-ins to obtain persistence on a compromised system.&lt;br /&gt;['T1564']: Monitor for contextual data about a file, which may include information such as name, the content (ex: signature, headers, or data/media), user/ower, permissions that may attempt to hide artifacts associated with their behaviors to evade detection.&lt;br /&gt;['T1036.005']: Collect file hashes; file names that do not match their expected hash are suspect. Perform file monitoring; files with known names but in unusual locations are suspect. Likewise, files that are modified outside of an update or patch are suspect.&lt;br /&gt;['T1036.002']: Monitor for common formats of RTLO characters within filenames such as \u202E, [U+202E], and %E2%80%AE. Defenders should also check their analysis tools to ensure they do not interpret the RTLO character and instead print the true name of the file containing it.&lt;br /&gt;['T1070']: Monitor for contextual file data that may show signs of deletion or alter generated artifacts on a host system, including logs or captured files such as quarantined malware.&lt;br /&gt;['T1553']: Collect and analyze signing certificate metadata on software that executes within the environment to look for unusual certificate characteristics and outliers.&lt;br /&gt;['T1055.013']: Scan file objects reported during the PsSetCreateProcessNotifyRoutine, (Citation: Microsoft PsSetCreateProcessNotifyRoutine routine) which triggers a callback whenever a process is created or deleted, specifically looking for file objects with enabled write access. (Citation: BlackHat Process Doppelganging Dec 2017) Also consider comparing file objects loaded in memory to the corresponding file on disk. (Citation: hasherezade Process Doppelganging Dec 2017)&lt;br /&gt;['T1546.006']: Changes to binaries that do not line up with application updates or patches are also extremely suspicious.&lt;br /&gt;['T1027.003']: Detection of steganography is difficult unless artifacts are left behind by the obfuscation process that are detectable with a known signature. Look for strings or other signatures left in system artifacts related to decoding steganography.&lt;br /&gt;['T1195.002']: Use verification of distributed binaries through hash checking or other integrity checking mechanisms. Scan downloads for malicious signatures and attempt to test software and updates prior to deployment while taking note of potential suspicious activity.&lt;br /&gt;['T1222.002']: Monitor and investigate attempts to modify ACLs and file/directory ownership. Consider enabling file/directory permission change auditing on folders containing key binary/configuration files.&lt;br /&gt;['T1027.001']: Depending on the method used to pad files, a file-based signature may be capable of detecting padding using a scanning or on-access based tool. When executed, the resulting process from padded files may also exhibit other behavior characteristics of being used to conduct an intrusion such as system and network information Discovery or Lateral Movement, which could be used as event indicators that point to the source file.&lt;br /&gt;['T1546']: Monitor for contextual data about a file, which may include information such as name, the content (ex: signature, headers, or data/media), user/ower, permissions, etc.&lt;br /&gt;['T1564.001']: Monitor for contextual data about a file, which may include information such as name, the content (ex: signature, headers, or data/media), user/ower, permissions may set files and directories to be hidden to evade detection mechanisms.&lt;br /&gt;['T1564.009']: Identify files with the &lt;code&gt;com.apple.ResourceFork&lt;/code&gt; extended attribute and large data amounts stored in resource forks.&lt;br /&gt;['T1070.006']: Monitor for file modifications that collects information on file handle opens and can compare timestamp values&lt;br /&gt;['T1565.003']: Monitor for contextual data about a file, which may include information such as name, the content (ex: signature, headers, or data/media), user/ower, permissions, etc that would aid in the manipulation of data to hide activity&lt;br /&gt;['T1564.007']: If the document is opened with a Graphical User Interface (GUI) the malicious p-code is decompiled and may be viewed. However, if the &lt;code&gt;PROJECT&lt;/code&gt; stream, which specifies the project properties, is modified in a specific way the decompiled VBA code will not be displayed. For example, adding a module name that is undefined to the &lt;code&gt;PROJECT&lt;/code&gt; stream will inhibit attempts of reading the VBA source code through the GUI.(Citation: FireEye VBA stomp Feb 2020)&lt;br /&gt;['T1553.005']: Monitor files (especially those downloaded from untrusted locations) for MOTW attributes. Also consider inspecting and scanning file formats commonly abused to bypass MOTW (ex: .arj, .gzip, .iso, .vhd).&lt;br /&gt;['T1218.011']: Analyze contextual data about executed DLL files, which may include information such as name, the content (ex: signature, headers, or data/media), age, user/ower, permissions, etc.&lt;br /&gt;['T1553.001']: Review &lt;code&gt;false&lt;/code&gt; values under the &lt;code&gt;LSFileQuarantineEnabled&lt;/code&gt; entry in an application's &lt;code&gt;Info.plist&lt;/code&gt; file (required by every application). &lt;code&gt;false&lt;/code&gt; under &lt;code&gt;LSFileQuarantineEnabled&lt;/code&gt; indicates that an application does not use the quarantine flag. Unsandboxed applications with an unspecified &lt;code&gt;LSFileQuarantineEnabled&lt;/code&gt; entry will default to not setting the quarantine flag.

QuarantineEvents is a SQLite database containing a list of all files assigned the &lt;code&gt;com.apple.quarantine&lt;c/ode&gt; attribute, located at &lt;code&gt;~/Library/Preferences/com.apple.LaunchServices.QuarantineEventsV2&lt;/code&gt;. Each event contains the corresponding UUID, timestamp, application, Gatekeeper score, and decision if it was allowed. (Citation: TheEclecticLightCompany Quarantine and the flag)&lt;br /&gt;['T1548']: Monitor the file system for files that have the setuid or setgid bits set. On Linux, auditd can alert every time a user's actual ID and effective ID are different (this is what happens when you sudo).&lt;br /&gt;['T1036']: Collect file hashes; file names that do not match their expected hash are suspect. Perform file monitoring; files with known names but in unusual locations are suspect. Look for indications of common characters that may indicate an attempt to trick users into misidentifying the file type, such as a space as the last character of a file name or the right-to-left override characters"\u202E", "[U+202E]", and "%E2%80%AE".&lt;br /&gt;['T1036.006']: Monitor for spaces at the end of file names, that can easily be checked with file monitoring. From the user's perspective though, this is very hard to notice from within the Finder.app or on the command-line in Terminal.app. Processes executed from binaries containing non-standard extensions in the filename are suspicious.&lt;br /&gt;['T1564.004']: Monitor for contextual data about a file, which may include information such as name, the content (ex: signature, headers, or data/media), user/ower, permissions, may use NTFS file attributes to hide their malicious data in order to evade detection. Forensic techniques exist to identify information stored in NTFS EA. (Citation: Journey into IR ZeroAccess NTFS EA)&lt;br /&gt;['T1027.002']: Use file scanning to look for known software packers or artifacts of packing techniques. Packing is not a definitive indicator of malicious activity, because legitimate software may use packing techniques to reduce binary size or to protect proprietary code.&lt;br /&gt;['T1222']: Monitor and investigate attempts to modify ACLs and file/directory ownership.&lt;br /&gt;['T1548.001']: Monitor the file system for files that have the setuid or setgid bits set.&lt;br /&gt;['T1036.001']: Collect and analyze signing certificate metadata and check signature validity on software that executes within the environment, look for invalid signatures as well as unusual certificate characteristics and outliers.&lt;br /&gt;['T1554']: Collect and analyze signing certificate metadata and check signature validity on software that executes within the environment&lt;br /&gt;['T1036.003']: Collecting and comparing disk and resource filenames for binaries by looking to see if the InternalName, OriginalFilename, and/or ProductName match what is expected could provide useful leads, but may not always be indicative of malicious activity.&lt;br /&gt;['T1222.001']: Consider enabling file/directory permission change auditing on folders containing key binary/configuration files. For example, Windows Security Log events (Event ID 4670) are created when DACLs are modified.&lt;br /&gt;['T1570']: Monitor for alike file hashes or characteristics (ex: filename) that are created on multiple hosts.&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Microsoft File Mgmt" url="https://docs.microsoft.com/en-us/windows/win32/fileio/file-management"/>
            <reference name="Mitre ATT&amp;CK Data Source DS0022" url="https://attack.mitre.org/data-sources/DS0022"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:02.122">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-DS0028" name="Logon Session" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>Logon occurring on a system or resource (local, domain, or cloud) to which a user/device is gaining access after successful authentication and authorizaton(Citation: Microsoft Audit Logon Events)&lt;br /&gt;&lt;p&gt;Detailed detections per technique:&lt;/p&gt;&lt;br /&gt;['T1114']: Monitor for unusual login activity from unknown or abnormal locations, especially for privileged accounts (ex: Exchange administrator account). &lt;br /&gt;['T1213']: Monitor for newly constructed logon behavior within Microsoft's SharePoint can be configured to report access to certain pages and documents. (Citation: Microsoft SharePoint Logging) Sharepoint audit logging can also be configured to report when a user shares a resource. (Citation: Sharepoint Sharing Events)The user access logging within Atlassian's Confluence can also be configured to report access to certain pages and documents through AccessLogFilter. (Citation: Atlassian Confluence Logging) Additional log storage and analysis infrastructure will likely be required for more robust detection capabilities.&lt;br /&gt;['T1021.004']: Monitor for user accounts logged into systems that may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to log into remote machines using Secure Shell (SSH). For example, on Linux systems SSH logon activity can be found in the logs located in &lt;code&gt;/var/log/auth.log&lt;/code&gt; or &lt;code&gt;/var/log/secure&lt;/code&gt; depending on the distro you are using.&lt;br /&gt;['T1606.002']: Monitor for logins using SAML tokens which do not have corresponding 4769 and 1200 events in the domain.(Citation: Sygnia Golden SAML) These logins may occur on any on-premises resources as well as from any cloud environment that trusts the certificate.(Citation: Microsoft SolarWinds Customer Guidance)&lt;br /&gt;['T1606.001']: Monitor for anomalous authentication activity, such as logons or other user session activity associated with unknown accounts. Monitor for unexpected and abnormal access to resources, including access of websites and cloud-based applications by the same user in different locations or by different systems that do not match expected configurations.&lt;br /&gt;['T1078.002']: Monitor for suspicious account behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. &lt;br /&gt;['T1556']: Monitor for newly constructed logon behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times (ex: when the user is not present) or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access). Configure robust, consistent account activity audit policies across the enterprise and with externally accessible services.(Citation: TechNet Audit Policy) &lt;br /&gt;['T1550']: Look for suspicious account behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account.&lt;br /&gt;['T1199']: Monitor for newly constructed logon behavior that may breach or otherwise leverage organizations who have access to intended victims.&lt;br /&gt;['T1538']: Monitor for newly constructed logon behavior across cloud service management consoles.&lt;br /&gt;['T1563.002']: Use of RDP may be legitimate, depending on the network environment and how it is used. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior with RDP.&lt;br /&gt;['T1550.002']: Monitor newly created logons and credentials used in events and review for discrepancies. Unusual remote logins that correlate with other suspicious activity (such as writing and executing binaries) may indicate malicious activity.&lt;br /&gt;['T1078']: Monitor for newly constructed logon behavior that may obtain and abuse credentials of existing accounts as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access).&lt;br /&gt;['T1021.001']: Monitor for user accounts logged into systems associated with RDP (ex: Windows EID 4624 Logon Type 10). Other factors, such as access patterns (ex: multiple systems over a relatively short period of time) and activity that occurs after a remote login, may indicate suspicious or malicious behavior with RDP.&lt;br /&gt;['T1213.002']: Monitor for newly constructed logon behavior across Microsoft's SharePoint which can be configured to report access to certain pages and documents. (Citation: Microsoft SharePoint Logging) As information repositories generally have a considerably large user base, detection of malicious use can be non-trivial.&lt;br /&gt;['T1021.002']: Monitor for logon behavior (ex: EID 4624 Logon Type 3) using [Valid Accounts](https://attack.mitre.org/techniques/T1078) to interact with a remote network share using Server Message Block (SMB). The adversary may then perform actions as the logged-on user. Ensure that proper logging of accounts used to log into systems is turned on and centrally collected. Windows logging is able to collect success/failure for accounts that may be used to move laterally and can be collected using tools such as Windows Event Forwarding. (Citation: Lateral Movement Payne)(Citation: Windows Event Forwarding Payne)&lt;br /&gt;['T1556.001']: Monitor for newly constructed logon behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times (ex: when the user is not present) or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access). Configure robust, consistent account activity audit policies across the enterprise and with externally accessible services.(Citation: TechNet Audit Policy)&lt;br /&gt;['T1078.001']: Monitor for newly constructed logon behavior across default accounts that have been activated or logged into. These audits should also include checks on any appliances and applications for default credentials or SSH keys, and if any are discovered, they should be updated immediately.&lt;br /&gt;['T1021.006']: Monitor for user accounts logging into the system via [Valid Accounts](https://attack.mitre.org/techniques/T1078) to interact with remote systems using Windows Remote Management (WinRM). The adversary may then perform actions as the logged-on user. &lt;br /&gt;['T1563']: Monitor for user accounts logged into systems they would not normally access or access patterns to multiple systems over a relatively short period of time.&lt;br /&gt;['T1213.001']: Monitor for newly constructed logon behavior across Atlassian's Confluence which can be configured to report access to certain pages and documents through AccessLogFilter. (Citation: Atlassian Confluence Logging) Additional log storage and analysis infrastructure will likely be required for more robust detection capabilities.&lt;br /&gt;['T1021.005']: Monitor for user accounts logged into systems that may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to remotely control machines using Virtual Network Computing (VNC). For example, on macOS systems &lt;code&gt;log show --predicate 'process = "screensharingd" and eventMessage contains "Authentication:"'&lt;/code&gt; can be used to review incoming VNC connection attempts for suspicious activity.(Citation: Apple Unified Log Analysis Remote Login and Screen Sharing) &lt;br /&gt;['T1563.001']: Monitor for user accounts logged into systems they would not normally access or access patterns to multiple systems over a relatively short period of time. Also monitor user SSH-agent socket files being used by different users.&lt;br /&gt;['T1550.003']: Monitor for newly constructed logon behavior that may "pass the ticket" using stolen Kerberos tickets to move laterally within an environment, bypassing normal system access controls.&lt;br /&gt;['T1114.002']: Monitor for unusual login activity from unknown or abnormal locations, especially for privileged accounts (ex: Exchange administrator account).&lt;br /&gt;['T1213.003']: Monitor for newly constructed logon behavior across code repositories (e.g. Github) which can be configured to report access to certain pages and documents.&lt;br /&gt;['T1078.004']: Monitor for suspicious account behavior across cloud services that share account. &lt;br /&gt;['T1606']: Monitor for anomalous authentication activity, such as logons or other user session activity associated with unknown accounts and/or using SAML tokens which do not have corresponding 4769 and 1200 events in the domain.(Citation: Sygnia Golden SAML). Monitor for unexpected and abnormal access to resources, including access of websites and cloud-based applications by the same user in different locations or by different systems that do not match expected configurations. These logins may occur on any on-premises resources as well as from any cloud environment that trusts the credentials.(Citation: Microsoft SolarWinds Customer Guidance)&lt;br /&gt;['T1185']: Authentication logs can be used to audit logins to specific web applications, but determining malicious logins versus benign logins may be difficult if activity matches typical user behavior.&lt;br /&gt;['T1021']: Monitor for user accounts logged into systems they would not normally access or abnormal access patterns, such as multiple systems over a relatively short period of time. Correlate use of login activity related to remote services with unusual behavior or other malicious or suspicious activity. Adversaries will likely need to learn about an environment and the relationships between systems through Discovery techniques prior to attempting Lateral Movement. For example, in macOS you can review logs for "screensharingd" and "Authentication" event messages. (Citation: Lockboxx ARD 2019)(Citation: Apple Unified Log Analysis Remote Login and Screen Sharing)&lt;br /&gt;['T1556.003']: Monitor for newly constructed logon behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times (ex: when the user is not present) or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access).&lt;br /&gt;['T1621']: Monitor 2FA/MFA application logs for suspicious events such as rapid login attempts with valid credentials.&lt;br /&gt;['T1078.003']: Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access).&lt;br /&gt;['T1621']: Monitor 2FA/MFA application logs for suspicious events such as unusual login attempt source location, mismatch in location of login attempt and smart device approving 2FA/MFA request prompts.&lt;br /&gt;['T1558.001']: Monitor for anomalous Kerberos activity, such as malformed or blank fields in Windows logon/logoff events (Event ID 4624, 4634, 4672). Correlate other security systems with login information (e.g., a user has the KRBTGT account password hash and forges Kerberos ticket-granting tickets). &lt;br /&gt;['T1558']: Enable Audit Kerberos Service Ticket Operations to log Kerberos TGS service ticket requests. Particularly investigate irregular patterns of activity (ex: accounts making numerous requests, Event ID 4769, within a small time frame, especially if they also request RC4 encryption [Type 0x17]).(Citation: Microsoft Detecting Kerberoasting Feb 2018) (Citation: AdSecurity Cracking Kerberos Dec 2015)&lt;br /&gt;['T1606.002']: Consider modifying SAML responses to include custom elements for each service provider. Monitor these custom elements in service provider access logs to detect any anomalous requests.(Citation: Sygnia Golden SAML)&lt;br /&gt;['T1558.002']: Monitor for anomalous Kerberos activity, such as malformed or blank fields in Windows logon/logoff events (Event ID 4624, 4634, 4672).&lt;br /&gt;['T1133']: Follow best practices for detecting adversary use of Valid Accounts for authenticating to remote services. Collect authentication logs and analyze for unusual access patterns, windows of activity, and access outside of normal business hours.&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Microsoft Audit Logon Events" url="https://docs.microsoft.com/en-us/windows/security/threat-protection/auditing/basic-audit-logon-events"/>
            <reference name="Mitre ATT&amp;CK Data Source DS0028" url="https://attack.mitre.org/datasources/DS0028"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:02.138">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-DS0033" name="Network Share" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>A storage resource (typically a folder or drive) made available from one host to others using network protocols, such as Server Message Block (SMB) or Network File System (NFS)(Citation: Microsoft NFS Overview)&lt;br /&gt;&lt;p&gt;Detailed detections per technique:&lt;/p&gt;&lt;br /&gt;['T1039']: Monitor for unexpected and abnormal accesses to network shares.&lt;br /&gt;['T1570']: Monitor for unexpected network share access, such as files transferred between shares within a network using protocols such as SMB.&lt;br /&gt;['T1080']: Monitor for unexpected and abnormal accesses to network shares, especially those also associated with file activity.&lt;br /&gt;['T1021.002']: Monitor interactions with network shares, such as reads or file transfers, using Server Message Block (SMB).&lt;br /&gt;['T1021']: Monitor interactions with network shares, such as reads or file transfers, using remote services such as Server Message Block (SMB).&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Microsoft NFS Overview" url="https://docs.microsoft.com/en-us/windows-server/storage/nfs/nfs-overview"/>
            <reference name="Mitre ATT&amp;CK Data Source DS0033" url="https://attack.mitre.org/datasources/DS0033"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:02.152">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-DS0029" name="Network Traffic" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>Data transmitted across a network (ex: Web, DNS, Mail, File, etc.), that is either summarized (ex: Netflow) and/or captured as raw data in an analyzable format (ex: PCAP)&lt;br /&gt;&lt;p&gt;Detailed detections per technique:&lt;/p&gt;&lt;br /&gt;['T1499.003']: Monitor network data for uncommon data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.&lt;br /&gt;['T1011.001']: Monitor network data for uncommon data flows., such as the usage of abnormal/unexpected protocols.&lt;br /&gt;['T1071']: Monitor and analyze traffic flows that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, or gratuitous or anomalous traffic patterns). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).&lt;br /&gt;['T1020']: Monitor and analyze network flows associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, or gratuitous or anomalous traffic patterns). Consider analyzing newly constructed network connections that are sent or received by untrusted hosts, unexpected hardware devices, or other uncommon data flows.&lt;br /&gt;['T1571']: Monitor network data flows for unexpected patterns and metadata that may be indicative of a mismatch between protocol and utilized port.&lt;br /&gt;['T1187']: Monitor for SMB traffic on TCP ports 139, 445 and UDP port 137 and WebDAV traffic attempting to exit the network to unknown external systems.If attempts are detected, then investigate endpoint data sources to find the root cause.&lt;br /&gt;['T1008']: Monitor network data for uncommon data flows, such as unexpected surges or other abnormal inbound/outbound patterns.&lt;br /&gt;['T1029']: Monitor for network traffic originating from unknown/unexpected hardware devices. Local network traffic metadata (such as source MAC addressing) as well as usage of network management protocols such as DHCP may be helpful in identifying hardware.&lt;br /&gt;['T1021.001']: Monitor network traffic for uncommon data flows that may use https://attack.mitre.org/techniques/T1078 to log into a computer using the Remote Desktop Protocol (RDP).&lt;br /&gt;['T1570']: Monitor for network traffic originating from unknown/unexpected hardware devices. Local network traffic metadata (such as source MAC addressing) as well as usage of network management protocols such as DHCP may be helpful in identifying hardware. &lt;br /&gt;['T1021.002']: Monitor network data for uncommon SMB data flows. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.&lt;br /&gt;['T1105']: Monitor network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.&lt;br /&gt;['T1071.001']: Monitor for web traffic to/from known-bad or suspicious domains and analyze traffic flows that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, or gratuitous or anomalous traffic patterns). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).&lt;br /&gt;['T1205.001']: Monitor and analyze network flows associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, or gratuitous or anomalous traffic patterns). Consider analyzing newly constructed network connections that are sent or received by untrusted hosts, unexpcted hardware devices, or other uncommon data flows.&lt;br /&gt;['T1071.004']: Monitor for DNS traffic to/from known-bad or suspicious domains and analyze traffic flows that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, or gratuitous or anomalous traffic patterns). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).&lt;br /&gt;['T1568.001']: In general, detecting usage of fast flux DNS is difficult due to web traffic load balancing that services client requests quickly. In single flux cases only IP addresses change for static domain names. In double flux cases, nothing is static. Defenders such as domain registrars and service providers are likely in the best position for detection.&lt;br /&gt;['T1565']: Monitor for network traffic originating from unknown/unexpected hardware devices.&lt;br /&gt;['T1568.002']: Detecting dynamically generated domains can be challenging due to the number of different DGA algorithms, constantly evolving malware families, and the increasing complexity of the algorithms. There is a myriad of approaches for detecting a pseudo-randomly generated domain name, including using frequency analysis, Markov chains, entropy, proportion of dictionary words, ratio of vowels to other characters, and more. (Citation: Data Driven Security DGA) CDN domains may trigger these detections due to the format of their domain names. In addition to detecting a DGA domain based on the name, another more general approach for detecting a suspicious domain is to check for recently registered names or for rarely visited domains.
Machine learning approaches to detecting DGA domains have been developed and have seen success in applications. One approach is to use N-Gram methods to determine a randomness score for strings used in the domain name. If the randomness score is high, and the domains are not whitelisted (CDN, etc), then it may be determined if a domain is related to a legitimate host or DGA. (Citation: Pace University Detecting DGA May 2017) Another approach is to use deep learning to classify domains as DGA-generated(Citation: Elastic Predicting DGA)]&lt;br /&gt;['T1612']: Monitor for established network communications with anomalous IPs that have never been seen before in the environment that may indicate the download of malicious code.&lt;br /&gt;['T1557.003']: Monitor network traffic for anomalies associated with known AiTM behavior. Consider monitoring for modifications to system configuration files involved in shaping network traffic flow.&lt;br /&gt;['T1021']: Monitor network data for uncommon data flows that may be related to abuse of https://attack.mitre.org/techniques/T1078 to log into a service specifically designed to accept remote connections, such as RDP, telnet, SSH, and VNC.&lt;br /&gt;['T1602.001']: Monitor for newly constructed network connections that are sent or received by untrusted hosts or uncommon data flows. Consider analyzing packet contents to detect application layer protocols, leveraging SSL/TLS inspection for encrypted traffic, that do not follow the expected protocol standards and traffic flows(e.g. snmp traffic originating from unauthorized or untrusted hosts, signature detection for strings mapped to device configuration(s), and anomolies in snmp request(s))&lt;br /&gt;['T1218.003']: Monitor for newly constructed network connections that are sent or received by untrusted hosts, such as Sysmon Event 3 (Network connection) where Image contains CMSTP.exe and DestinationIP is external.&lt;br /&gt;['T1218']: Monitor for newly constructed network connections that are sent or received by untrusted hosts. &lt;br /&gt;['T1020.001']: Monitor for newly constructed network connections that are sent or received by abnormal or untrusted hosts. &lt;br /&gt;['T1020']: Monitor for newly constructed network connections associated with processes performing collection activity, especially those involving abnormal/untrusted hosts. &lt;br /&gt;['T1542.005']: Monitor for newly constructed network device configuration and system image against a known-good version to discover unauthorized changes to system boot, startup configuration, or the running OS. (Citation: Cisco IOS Software Integrity Assurance - Secure Boot) (Citation: Cisco IOS Software Integrity Assurance - Image File Verification) The same process can be accomplished through a comparison of the run-time memory, though this is non-trivial and may require assistance from the vendor.&lt;br /&gt;['T1021.004']: Monitor for newly constructed network connections (typically port 22) that may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to log into remote machines using Secure Shell (SSH). Use of SSH may be legitimate depending on the environment and how it's used. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior with SSH.&lt;br /&gt;['T1602.002']: Monitor for newly constructed network connections that are sent or received by untrusted hosts or uncommon data flows. Consider analyzing packet contents to detect application layer protocols, leveraging SSL/TLS inspection for encrypted traffic, that do not follow the expected protocol standards and traffic flows (e.g. unauthorized, gratuitous, or anomalous traffic patterns attempting to access network configuration content)&lt;br /&gt;['T1030']: Monitor for newly constructed network connections that are sent or received by untrusted hosts or uncommon data flows (e.g. unusual network communications or suspicious communications sending fixed size data packets at regular intervals as well as unusually long connection patterns). Consider analyzing packet contents to detect application layer protocols, leveraging SSL/TLS inspection for encrypted traffic, that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, protocol port mismatch, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments (e.g. monitor anomalies in use of files that do not normally initiate network connections or unusual connections initiated&lt;br /&gt;['T1047']: Monitor network traffic for WMI connections; the use of WMI in environments that do not typically use WMI may be suspect.&lt;br /&gt;['T1197']: Monitor for newly constructed network activity generated by BITS. BITS jobs use HTTP(S) and SMB for remote connections and are tethered to the creating user and will only function when that user is logged on (this rule applies even if a user attaches the job to a service account).&lt;br /&gt;['T1542']: Monitor for newly constructed network device configuration and system image against a known-good version to discover unauthorized changes to system boot, startup configuration, or the running OS. The same process can be accomplished through a comparison of the run-time memory, though this is non-trivial and may require assistance from the vendor.&lt;br /&gt;['T1021.001']: Monitor for newly constructed network connections (typically over port 3389) that may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to log into a computer using the Remote Desktop Protocol (RDP). The adversary may then perform actions as the logged-on user. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior with RDP.&lt;br /&gt;['T1008']: Monitor for newly constructed network connections that may use fallback or alternate communication channels if the primary channel is compromised or inaccessible in order to maintain reliable command and control and to avoid data transfer thresholds. Processes utilizing the network that do not normally have network communication or have never been seen before may be suspicious.&lt;br /&gt;['T1204']: Monitor for newly constructed web-based network connections that are sent to malicious or suspicious destinations (e.g. destinations attributed to phishing campaigns). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments (e.g. monitor anomalies in use of files that do not normally initiate network connections or unusual connections initiated by regsvr32.exe, rundll.exe, .SCF, HTA, MSI, DLLs, or msiexec.exe).&lt;br /&gt;['T1021']: Monitor for newly constructed network connections that may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to log into a service specifically designed to accept remote connections, such as RDP, telnet, SSH, and VNC. Monitor network connections involving common remote management protocols, such as ports tcp:3283 and tcp:5900, as well as ports tcp: 3389 and tcp:22 for remote login.&lt;br /&gt;['T1021.003']: Monitor for newly constructed network connections that may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to interact with remote machines using Distributed Component Object Model (DCOM). The adversary may then perform actions as the logged-on user. Monitor for any influxes or abnormal increases in DCOM related Distributed Computing Environment/Remote Procedure Call (DCE/RPC) traffic (typically over port 135).&lt;br /&gt;['T1021.006']: 
Monitor for newly constructed network connections using Windows Remote Management (WinRM), such as remote WMI connection attempts (typically over port 5985 when using HTTP and 5986 for HTTPS).&lt;br /&gt;['T1011.001']: Monitor for newly constructed network connections that may attempt to exfiltrate data over Bluetooth rather than the command and control channel. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.&lt;br /&gt;['T1105']: Monitor for newly constructed network connections that are sent or received by untrusted hosts or creating files on-system may be suspicious. Use of utilities, such as FTP, that does not normally occur may also be suspicious.&lt;br /&gt;['T1602']: Monitor for newly constructed network connections that are sent or received by untrusted hosts or uncommon data flows. Consider analyzing packet contents to detect application layer protocols, leveraging SSL/TLS inspection for encrypted traffic, that do not follow the expected protocol standards and traffic flows (e.g. unauthorized, gratuitous, or anomalous traffic patterns attempting to access configuration content)&lt;br /&gt;['T1021.002']: Monitor for newly constructed network connections (typically over ports 139 or 445), especially those that are sent or received by abnormal or untrusted hosts. Correlate these network connections with remote login events and associated SMB-related activity such as file transfers and remote process execution.&lt;br /&gt;['T1018']: Monitor for newly constructed network connections associated with pings/scans that may attempt to get a listing of other systems by IP address, hostname, or other logical identifier on a network that may be used for Lateral Movement from the current system.&lt;br /&gt;['T1011']: Monitor for newly constructed network connections that may attempt to exfiltrate data over a different network medium than the command and control channel. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.&lt;br /&gt;['T1021.005']: Monitor for newly constructed network connections that may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to remotely control machines using Virtual Network Computing (VNC). Use of VNC may be legitimate depending on the environment and how it's used. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior using VNC. &lt;br /&gt;['T1568.001']: Monitor for newly constructed network connections that may use Fast Flux DNS to hide a command and control channel behind an array of rapidly changing IP addresses linked to a single domain resolution.&lt;br /&gt;['T1176']: Monitor for newly constructed network connections that are sent or received by untrusted hosts.&lt;br /&gt;['T1003']: Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).&lt;br /&gt;['T1602']: Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g. unauthorized, gratuitous, or anomalous traffic patterns attempting to access configuration content)&lt;br /&gt;['T1071.003']: Monitor and analyze traffic patterns and packet inspection associated to protocol(s), leveraging SSL/TLS inspection for encrypted traffic, that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).&lt;br /&gt;['T1557']: Monitor network traffic for anomalies associated with known AiTM behavior.&lt;br /&gt;['T1491']: Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g. unauthorized, gratuitous, or anomalous traffic patterns attempting to access internal and external websites and services). Consider correlating with application monitoring for inidcation of unplanned service interrputions or unauthorized content changes.&lt;br /&gt;['T1589.002']: Monitor for suspicious network traffic that could be indicative of probing for email addresses and/or usernames, such as large/iterative quantities of authentication requests originating from a single source (especially if the source is known to be associated with an adversary/botnet). Analyzing web metadata may also reveal artifacts that can be attributed to potentially malicious activity, such as referer or user-agent string HTTP/S fields.&lt;br /&gt;['T1210']: Use deep packet inspection to look for artifacts of common exploit traffic, such as known payloads.&lt;br /&gt;['T1189']: Monitor for networks that solicits and obtains the configuration information of the queried device &lt;br /&gt;['T1566.001']: Monitor and analyze SSL/TLS traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)). Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.(Citation: Microsoft Anti Spoofing)(Citation: ACSC Email Spoofing)&lt;br /&gt;['T1070.005']: Monitoring for SMB traffic between systems may also be captured and decoded to look for related network share session and file transfer activity.&lt;br /&gt;['T1071.004']: Monitor and analyze traffic patterns and packet inspection associated to protocol(s), leveraging SSL/TLS inspection for DNSSEC traffic, that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).&lt;br /&gt;['T1565.002']: Monitor for networks that solicits and obtains the configuration information of the queried device. &lt;br /&gt;['T1105']: Monitor network traffic content for files and other potentially malicious content, especially data coming in from abnormal/unknown domain and IPs.&lt;br /&gt;['T1020']: Monitor network traffic content for evidence of data exfiltration, such as gratuitous or anomalous outbound traffic containing collected data. Consider correlation with process monitoring and command lines associated with collection and exfiltration.&lt;br /&gt;['T1589']: Monitor for suspicious network traffic that could be indicative of probing for user information, such as large/iterative quantities of authentication requests originating from a single source (especially if the source is known to be associated with an adversary/botnet). Analyzing web metadata may also reveal artifacts that can be attributed to potentially malicious activity, such as referer or user-agent string HTTP/S fields.&lt;br /&gt;['T1205']: Monitor and analyze network packet contents to detect application layer protocols, leveraging SSL/TLS inspection for encrypted traffic, that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, protocol port mismatch, anomalous syntax, or structure). Consider packet inspection for Wake-on-LAN magic packet consists of 6 bytes of &lt;code&gt;FF&lt;/code&gt; followed by sixteen repetitions of the target system's IEEE address. Seeing this string anywhere in a packet's payload may be indicative of a Wake-on-LAN attempt.(Citation: GitLab WakeOnLAN)&lt;br /&gt;['T1602.001']: Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flow (e.g. snmp traffic originating from unauthorized or untrusted hosts, signature detection for strings mapped to device configuration(s), and anomolies in snmp request(s))&lt;br /&gt;['T1557.002']: Monitor network traffic for unusual ARP traffic, gratuitous ARP replies may be suspicious. Consider collecting changes to ARP caches across endpoints for signs of ARP poisoning. For example, if multiple IP addresses map to a single MAC address, this could be an indicator that the ARP cache has been poisoned.&lt;br /&gt;['T1207']: Monitor and analyze network traffic associated with data replication (such as calls to DrsAddEntry, DrsReplicaAdd, and especially GetNCChanges) between DCs as well as to/from non DC hosts. (Citation: GitHub DCSYNCMonitor)(Citation: DCShadow Blog) DC replication will naturally take place every 15 minutes but can be triggered by an adversary or by legitimate urgent changes (ex: passwords).&lt;br /&gt;['T1190']: Use deep packet inspection to look for artifacts of common exploit traffic, such as SQL injection strings or known payloads.&lt;br /&gt;['T1001.002']: Monitor and analyze traffic patterns and packet inspection associated to protocol(s), leveraging SSL/TLS inspection for encrypted traffic, that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure).&lt;br /&gt;['T1612']: Monitor for network traffic associated with requests and/or downloads of container images, especially those that may be anomalous or known malicious.&lt;br /&gt;['T1602.002']: Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g. unauthorized, gratuitous, or anomalous traffic patterns attempting to access network configuration content)&lt;br /&gt;['T1204.001']: Monitor and analyze traffic patterns and packet inspection associated with web-based network connections that are sent to malicious or suspicious detinations (e.g. destinations attributed to phishing campaigns). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments (e.g. monitor anomalies in use of files that do not normally initiate network connections or unusual connections initiated by regsvr32.exe, rundll.exe, .SCF, HTA, MSI, DLLs, or msiexec.exe).&lt;br /&gt;['T1132.002']: Monitor for network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.&lt;br /&gt;['T1557.001']: Monitor for traffic on ports UDP 5355 and UDP 137 if LLMNR/NetBIOS is disabled by security policy.&lt;br /&gt;['T1595.003']: Monitor for suspicious network traffic that could be indicative of scanning, such as large quantities originating from a single source (especially if the source is known to be associated with an adversary/botnet).&lt;br /&gt;['T1557.003']: Monitor network traffic for suspicious/malicious behavior involving DHCP, such as changes in DNS and/or gateway parameters.&lt;br /&gt;['T1566.002']: Monitor and analyze SSL/TLS traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)).&lt;br /&gt;['T1571']: Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used. https://arxiv.org/ftp/arxiv/papers/1408/1408.1136.pdf&lt;br /&gt;['T1566.003']: Monitor and analyze traffic patterns and packet inspection associated to protocol(s) that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)). &lt;br /&gt;['T1187']: For internal traffic, monitor the workstation-to-workstation unusual (vs. baseline) SMB traffic. For many networks there should not be any, but it depends on how systems on the network are configured and where resources are located.&lt;br /&gt;['T1505']: Monitor and analyze traffic patterns and packet inspection associated to protocol(s), leveraging SSL/TLS inspection for encrypted traffic, that do not follow the expected protocol standards and traffic flows (e.g extraneous packets that do not belong to established flows, gratuitous or anomalous traffic patterns, anomalous syntax, or structure). Consider correlation with process monitoring and command line to detect anomalous processes execution and command line arguments associated to traffic patterns (e.g. monitor anomalies in use of files that do not normally initiate connections for respective protocol(s)). (Citation: US-CERT Alert TA15-314A Web Shells)&lt;br /&gt;['T1570']: Monitor for unusual processes with internal network connections creating files on-system may be suspicious&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Mitre ATT&amp;CK Data Source DS0029" url="https://attack.mitre.org/datasources/DS0029"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:02.148">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-DS0009" name="Process" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>Instances of computer programs that are being executed by at least one thread. Processes have memory space for process executables, loaded modules (DLLs or shared libraries), and allocated memory regions containing everything from user input to application-specific data structures(Citation: Microsoft Processes and Threads)&lt;br /&gt;&lt;p&gt;Detailed detections per technique:&lt;/p&gt;&lt;br /&gt;['T1055.008']: Monitoring for Linux specific calls such as the ptrace system call should not generate large amounts of data due to their specialized nature, and can be a very effective method to detect some of the common process injection methods.(Citation: ArtOfMemoryForensics) (Citation: GNU Acct) (Citation: RHEL auditd) (Citation: Chokepoint preload rootkits)&lt;br /&gt;['T1055.014']: Monitor for malicious usage of system calls, such as ptrace and mmap, that can be used to attach to, manipulate memory, then redirect a processes' execution path. Monitoring for Linux specific calls such as the ptrace system call should not generate large amounts of data due to their specialized nature, and can be a very effective method to detect some of the common process injection methods.(Citation: ArtOfMemoryForensics)(Citation: GNU Acct)(Citation: RHEL auditd)(Citation: Chokepoint preload rootkits)&lt;br /&gt;['T1112']: Monitor for API calls associated with concealing Registry keys, such as Reghide. (Citation: Microsoft Reghide NOV 2006) Inspect and cleanup malicious hidden Registry entries using Native Windows API calls and/or tools such as Autoruns (Citation: SpectorOps Hiding Reg Jul 2017) and RegDelNull (Citation: Microsoft RegDelNull July 2016). &lt;br /&gt;['T1547']: Monitor for API calls that may configure system settings to automatically execute a program during system boot or logon to maintain persistence or gain higher-level privileges on compromised systems.&lt;br /&gt;['T1087.002']: Monitor for API calls that may attempt to gather information about domain accounts such as type of user, privileges and groups.&lt;br /&gt;['T1033']: Monitor for API calls that may attempt to dump credentials to obtain account login and credential material, normally in the form of a hash or a clear text password, from the operating system and software.&lt;br /&gt;['T1565.002']: Monitor for API calls associated with altering data. Remote access tools with built-in features may interact directly with the Windows API to gather information.&lt;br /&gt;['T1497.003']: Monitor for API calls that may employ various time-based methods to detect and avoid virtualization and analysis environments. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary's implementation and monitoring required.&lt;br /&gt;['T1082']: Monitor for API calls that may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). In cloud-based systems, native logging can be used to identify access to certain APIs and dashboards that may contain system information. Depending on how the environment is used, that data alone may not be useful due to benign use during normal operations.&lt;br /&gt;['T1622']: Monitor for API calls (such as &lt;code&gt;IsDebuggerPresent()&lt;/code&gt;) that may employ various means to detect and avoid debugged environments. Detecting actions related to debugger identification may be difficult depending on the adversary's implementation and monitoring required.&lt;br /&gt;['T1542.002']: Monitor for API calls associated with the use of device drivers and/or provided by SMART (Self-Monitoring, Analysis and Reporting Technology) (Citation: SanDisk SMART) (Citation: SmartMontools) disk monitoring may reveal malicious manipulations of components. Otherwise, this technique may be difficult to detect since malicious activity is taking place on system components possibly outside the purview of OS security and integrity mechanisms.&lt;br /&gt;['T1125']: Detection of this technique may be difficult due to the various APIs that may be used. Telemetry data regarding API use may not be useful depending on how a system is normally used, but may provide context to other potentially malicious activity occurring on a system. Behavior that could indicate technique use include an unknown or unusual process accessing APIs associated with devices or software that interact with the video camera, recording devices, or recording software, and a process periodically writing files to disk that contain video or camera image data.&lt;br /&gt;['T1120']: Monitor for API calls that may attempt to gather information about attached peripheral devices and components connected to a computer system.&lt;br /&gt;['T1057']: Monitor for API calls may attempt to get information about running processes on a system. &lt;br /&gt;['T1055.003']: Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such as &lt;code&gt;CreateRemoteThread&lt;/code&gt;, &lt;code&gt;SuspendThread&lt;/code&gt;/&lt;code&gt;SetThreadContext&lt;/code&gt;/&lt;code&gt;ResumeThread&lt;/code&gt;, and those that can be used to modify memory within another process, such as &lt;code&gt;VirtualAllocEx&lt;/code&gt;/&lt;code&gt;WriteProcessMemory&lt;/code&gt;, may be used for this technique.(Citation: Elastic Process Injection July 2017)&lt;br /&gt;['T1135']: Monitor for API calls that may look for folders and drives shared on remote systems as a means of identifying sources of information to gather as a precursor for Collection and to identify potential systems of interest for Lateral Movement.&lt;br /&gt;['T1574.013']: Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances. for known bad sequence of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such as &lt;code&gt;WriteProcessMemory()&lt;/code&gt; and &lt;code&gt;NtQueryInformationProcess()&lt;/code&gt; with the parameter set to &lt;code&gt;ProcessBasicInformation&lt;/code&gt; may be used for this technique.(Citation: Lazarus APT January 2022)&lt;br /&gt;['T1489']: Remote access tools with built-in features may interact directly with the Windows API to perform these functions outside of typical system utilities. For example, &lt;code&gt;ChangeServiceConfigW&lt;/code&gt; may be used by an adversary to prevent services from starting.(Citation: Talos Olympic Destroyer 2018)&lt;br /&gt;['T1134']: Monitor for API calls, loaded by a payload, for token manipulation only through careful analysis of user network activity, examination of running processes, and correlation with other endpoint and network behavior. There are many Windows API calls a payload can take advantage of to manipulate access tokens (e.g., &lt;code&gt;LogonUser&lt;/code&gt; (Citation: Microsoft LogonUser), &lt;code&gt;DuplicateTokenEx&lt;/code&gt;(Citation: Microsoft DuplicateTokenEx), and &lt;code&gt;ImpersonateLoggedOnUser&lt;/code&gt;(Citation: Microsoft ImpersonateLoggedOnUser)). Please see the referenced Windows API pages for more information.&lt;br /&gt;['T1555.005']: Monitor for API calls that may search for common password storage locations to obtain user credentials.&lt;br /&gt;['T1115']: Monitor API calls that could collect data stored in the clipboard from users copying information within or between applications.&lt;br /&gt;['T1556']: Monitor for calls to &lt;code&gt;OpenProcess&lt;/code&gt; that can be used to manipulate lsass.exe running on a domain controller as well as for malicious modifications to functions exported from authentication-related system DLLs (such as cryptdll.dll and samsrv.dll).(Citation: Dell Skeleton)&lt;br /&gt;['T1070']: Monitor for API calls that may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined malware.&lt;br /&gt;['T1087.001']: Monitor for API calls (such as &lt;code&gt;NetUserEnum()&lt;/code&gt;) that may attempt to gather local accounts information such as type of user, privileges and groups.&lt;br /&gt;['T1056.001']: Monitor for API calls to the SetWindowsHook, GetKeyState, and GetAsyncKeyState.(Citation: Adventures of a Keystroke) and look for common keylogging API calls. API calls alone are not an indicator of keylogging, but may provide behavioral data that is useful when combined with other information such as new files written to disk and unusual processes.&lt;br /&gt;['T1005']: Monitor for API calls that may search local system sources, such as file systems or local databases, to find files of interest and sensitive data prior to Exfiltration. &lt;br /&gt;['T1548']: Also look for any process API calls for behavior that may be indicative of [Process Injection](https://attack.mitre.org/techniques/T1055). Monitoring OS API callbacks for the execution can also be a way to detect this behavior but requires specialized security tooling.&lt;br /&gt;['T1055.004']: Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such as &lt;code&gt;SuspendThread&lt;/code&gt;/&lt;code&gt;SetThreadContext&lt;/code&gt;/&lt;code&gt;ResumeThread&lt;/code&gt;, &lt;code&gt;QueueUserAPC&lt;/code&gt;/&lt;code&gt;NtQueueApcThread&lt;/code&gt;, and those that can be used to modify memory within another process, such as &lt;code&gt;VirtualAllocEx&lt;/code&gt;/&lt;code&gt;WriteProcessMemory&lt;/code&gt;, may be used for this technique.(Citation: Elastic Process Injection July 2017)&lt;br /&gt;['T1134.002']: Monitor for API calls associated with detecting token manipulation only through careful analysis of user activity, examination of running processes, and correlation with other endpoint and network behavior. Analysts can also monitor for use of Windows APIs such as &lt;code&gt;CreateProcessWithTokenW&lt;/code&gt; and correlate activity with other suspicious behavior to reduce false positives that may be due to normal benign use by users and administrators.&lt;br /&gt;['T1546.009']: Monitor and analyze application programming interface (API) calls that are indicative of Registry edits, such as &lt;code&gt;RegCreateKeyEx&lt;/code&gt; and &lt;code&gt;RegSetValueEx&lt;/code&gt;. (Citation: Elastic Process Injection July 2017)&lt;br /&gt;['T1518']: Monitor for API calls that may attempt to get a listing of software and software versions that are installed on a system or in a cloud environment.&lt;br /&gt;['T1497.002']: Monitor for API calls that may employ various means to detect and avoid virtualization and analysis environments. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary's implementation and monitoring required.&lt;br /&gt;['T1055.011']: Monitor for API calls related to enumerating and manipulating EWM such as GetWindowLong (Citation: Microsoft GetWindowLong function) and SetWindowLong (Citation: Microsoft SetWindowLong function). Malware associated with this technique have also used SendNotifyMessage (Citation: Microsoft SendNotifyMessage function) to trigger the associated window procedure and eventual malicious injection. (Citation: Elastic Process Injection July 2017)&lt;br /&gt;['T1012']: Monitor for API calls (such as &lt;code&gt;RegOpenKeyExA&lt;/code&gt;) that may interact with the Windows Registry to gather information about the system, configuration, and installed software. &lt;br /&gt;['T1614']: Remote access tools with built-in features may interact directly with the Windows API, such as calling &lt;code&gt; GetLocaleInfoW&lt;/code&gt; to gather information.(Citation: FBI Ragnar Locker 2020)&lt;br /&gt;['T1555.001']: Monitor for Keychain Services API calls, specifically legacy extensions such as &lt;code&gt;SecKeychainFindInternetPassword&lt;/code&gt;, that may collect Keychain data from a system to acquire credentials.(Citation: Keychain Items Apple Dev API)&lt;br /&gt;['T1106']: Monitoring API calls may generate a significant amount of data and may not be useful for defense unless collected under specific circumstances, since benign use of API functions are common and may be difficult to distinguish from malicious behavior. Correlation of other events with behavior surrounding API function calls using API monitoring will provide additional context to an event that may assist in determining if it is due to malicious behavior. Correlation of activity by process lineage by process ID may be sufficient.&lt;br /&gt;['T1218']: Monitor for API calls that may forge credential materials that can be used to gain access to web applications or Internet services. &lt;br /&gt;['T1070.001']: Monitor for Windows API calls that may clear Windows Event Logs to hide the activity of an intrusion.&lt;br /&gt;['T1611']: Remote access tools with built-in features may interact directly with the Windows API, such as calling &lt;code&gt;GetLocaleInfoW()&lt;/code&gt; to gather system location information.(Citation: FBI Ragnar Locker 2020)&lt;br /&gt;['T1111']: Monitor for API calls associated with polling to intercept keystrokes.&lt;br /&gt;['T1003.001']: Monitor for API calls that may attempt to access credential material stored in the process memory of the Local Security Authority Subsystem Service (LSASS).&lt;br /&gt;['T1049']: Monitor for API calls that may attempt to get a listing of network connections to or from the compromised system they are currently accessing or from remote systems by querying for information over the network.&lt;br /&gt;['T1482']: Monitor for API calls associated with gathering information on domain trust relationships that may be used to identify lateral movement like DSEnumerateDomainTrusts() Win32 API call to spot activity associated with Domain Trust Discovery.(Citation: Harmj0y Domain Trusts) Information may also be acquired through Windows system management tools such as PowerShell. The .NET method GetAllTrustRelationships() can be an indicator of Domain Trust Discovery.(Citation: Microsoft GetAllTrustRelationships)&lt;br /&gt;['T1129']: Monitor for API calls that may execute malicious payloads via loading shared modules.&lt;br /&gt;['T1124']: Monitor for API calls that may gather the system time and/or time zone from a local or remote system. Remote access tools with built-in features may interact directly with the Windows API to gather information.&lt;br /&gt;['T1542']: Monitor for API calls that may abuse Pre-OS Boot mechanisms as a way to establish persistence on a system. Disk check, forensic utilities, and data from device drivers (i.e. API calls) may reveal anomalies that warrant deeper investigation. (Citation: ITWorld Hard Disk Health Dec 2014)&lt;br /&gt;['T1055']: Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such as &lt;code&gt;CreateRemoteThread&lt;/code&gt;, &lt;code&gt;SuspendThread&lt;/code&gt;/&lt;code&gt;SetThreadContext&lt;/code&gt;/&lt;code&gt;ResumeThread&lt;/code&gt;, &lt;code&gt;QueueUserAPC&lt;/code&gt;/&lt;code&gt;NtQueueApcThread&lt;/code&gt;, and those that can be used to modify memory within another process, such as &lt;code&gt;VirtualAllocEx&lt;/code&gt;/&lt;code&gt;WriteProcessMemory&lt;/code&gt;, may be used for this technique.(Citation: Elastic Process Injection July 2017) Monitoring for Linux specific calls such as the ptrace system call should not generate large amounts of data due to their specialized nature, and can be a very effective method to detect some of the common process injection methods.(Citation: ArtOfMemoryForensics) (Citation: GNU Acct) (Citation: RHEL auditd) (Citation: Chokepoint preload rootkits)&lt;br /&gt;['T1055.002']: Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such as &lt;code&gt;CreateRemoteThread&lt;/code&gt; and those that can be used to modify memory within another process, such as &lt;code&gt;VirtualAllocEx&lt;/code&gt;/&lt;code&gt;WriteProcessMemory&lt;/code&gt;, may be used for this technique.(Citation: Elastic Process Injection July 2017)&lt;br /&gt;['T1547.010']: Monitor process API calls to &lt;code&gt;AddMonitor&lt;/code&gt;.(Citation: AddMonitor)&lt;br /&gt;['T1614.001']: Monitor for API calls that may attempt to gather information about the system language of a victim in order to infer the geographical location of that host.&lt;br /&gt;['T1056.004']: Monitor for API calls to the SetWindowsHookEx and SetWinEventHook functions, which install a hook procedure.(Citation: Microsoft Hook Overview)(Citation: Volatility Detecting Hooks Sept 2012) Also consider analyzing hook chains (which hold pointers to hook procedures for each type of hook) using tools(Citation: Volatility Detecting Hooks Sept 2012)(Citation: PreKageo Winhook Jul 2011)(Citation: Jay GetHooks Sept 2011) or by programmatically examining internal kernel structures.(Citation: Zairon Hooking Dec 2006)(Citation: EyeofRa Detecting Hooking June 2017)&lt;br /&gt;['T1548.004']: Monitoring OS API callbacks for the execution can also be a way to detect this behavior but requires specialized security tooling.&lt;br /&gt;['T1555.004']: Consider monitoring API calls such as &lt;code&gt;CredEnumerateA&lt;/code&gt; that may list credentials from the Windows Credential Manager.(Citation: Microsoft CredEnumerate)(Citation: Delpy Mimikatz Crendential Manager)&lt;br /&gt;['T1218.002']: Monitor for API calls that may forge web cookies that can be used to gain access to web applications or Internet services.&lt;br /&gt;['T1620']: Monitor for code artifacts associated with reflectively loading code, such as the abuse of .NET functions such as &lt;code&gt;Assembly.Load()&lt;/code&gt; and [Native API](https://attack.mitre.org/techniques/T1106) functions such as &lt;code&gt;CreateThread()&lt;/code&gt;, &lt;code&gt;memfd_create()&lt;/code&gt;, &lt;code&gt;execve()&lt;/code&gt;, and/or &lt;code&gt;execveat()&lt;/code&gt;.(Citation: 00sec Droppers)(Citation: S1 Old Rat New Tricks)&lt;br /&gt;['T1055.013']: Monitor and analyze calls to &lt;code&gt;CreateTransaction&lt;/code&gt;, &lt;code&gt;CreateFileTransacted&lt;/code&gt;, &lt;code&gt;RollbackTransaction&lt;/code&gt;, and other rarely used functions indicative of TxF activity. Process Doppelganging also invokes an outdated and undocumented implementation of the Windows process loader via calls to &lt;code&gt;NtCreateProcessEx&lt;/code&gt; and &lt;code&gt;NtCreateThreadEx&lt;/code&gt; as well as API calls used to modify memory within another process, such as &lt;code&gt;WriteProcessMemory&lt;/code&gt;. (Citation: BlackHat Process Doppelganging Dec 2017) (Citation: hasherezade Process Doppelganging Dec 2017)&lt;br /&gt;['T1543']: Monitor for API calls that may create or modify system-level processes to repeatedly execute malicious payloads as part of persistence.&lt;br /&gt;['T1556.001']: Monitor for API calls to OpenProcess that can be used to manipulate lsass.exe running on a domain controller&lt;br /&gt;['T1055.015']: Consider monitoring for excessive use of &lt;code&gt;SendMessage&lt;/code&gt; and/or &lt;code&gt;PostMessage&lt;/code&gt; API functions with &lt;code&gt;LVM_SETITEMPOSITION&lt;/code&gt; and/or &lt;code&gt;LVM_GETITEMPOSITION&lt;/code&gt; arguments.

Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such as &lt;code&gt;FindWindow&lt;/code&gt;, &lt;code&gt;FindWindowEx&lt;/code&gt;, &lt;code&gt;EnumWindows&lt;/code&gt;, &lt;code&gt;EnumChildWindows&lt;/code&gt;, and those that can be used to modify memory within another process, such as &lt;code&gt;VirtualAllocEx&lt;/code&gt;/&lt;code&gt;WriteProcessMemory&lt;/code&gt;, may be abused for this technique. &lt;br /&gt;['T1547.012']: Monitor process API calls to &lt;code&gt;AddPrintProcessor&lt;/code&gt; and &lt;code&gt;GetPrintProcessorDirectory&lt;/code&gt;.&lt;br /&gt;['T1016']: Monitor for API calls (such as &lt;code&gt;GetAdaptersInfo()&lt;/code&gt; and &lt;code&gt;GetIpNetTable()&lt;/code&gt;) that may gather details about the network configuration and settings, such as IP and/or MAC addresses.&lt;br /&gt;['T1113']: Monitoring for screen capture behavior will depend on the method used to obtain data from the operating system and write output files. Detection methods could include collecting information from unusual processes using API calls used to obtain image data, and monitoring for image files written to disk, such as &lt;code&gt;CopyFromScreen&lt;/code&gt;, &lt;code&gt;xwd&lt;/code&gt;, or &lt;code&gt;screencapture&lt;/code&gt;.(Citation: CopyFromScreen .NET)(Citation: Antiquated Mac Malware). The sensor data may need to be correlated with other events to identify malicious activity, depending on the legitimacy of this behavior within a given network environment.&lt;br /&gt;['T1564']: Monitor for API calls that may attempt to hide artifacts associated with their behaviors to evade detection.&lt;br /&gt;['T1518.001']: Monitor for API calls that may attempt to get a listing of security software, configurations, defensive tools, and sensors that are installed on a system or in a cloud environment.&lt;br /&gt;['T1056']: Monitor for API calls to SetWindowsHook, GetKeyState, and GetAsyncKeyState (Citation: Adventures of a Keystroke)&lt;br /&gt;['T1010']: Monitor for API calls (such as &lt;code&gt;GetForegroundWindow()&lt;/code&gt;) that may attempt to get a listing of open application windows. &lt;br /&gt;['T1059.002']: Monitor for execution of AppleScript through &lt;code&gt;osascript&lt;/code&gt; and usage of the &lt;code&gt;NSAppleScript&lt;/code&gt; and &lt;code&gt;OSAScript&lt;/code&gt; APIs that may be related to other suspicious behavior occurring on the system.&lt;br /&gt;['T1546.010']: Monitor and analyze application programming interface (API) calls that are indicative of Registry edits such as &lt;code&gt;RegCreateKeyEx&lt;/code&gt; and &lt;code&gt;RegSetValueEx&lt;/code&gt;. (Citation: Elastic Process Injection July 2017)&lt;br /&gt;['T1543.003']: Monitor for API calls that may create or modify Windows services (ex: ` CreateServiceW()`) to repeatedly execute malicious payloads as part of persistence.&lt;br /&gt;['T1083']: Monitor for API calls that may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system.&lt;br /&gt;['T1555.003']: Monitor for API calls that may acquire credentials from web browsers by reading files specific to the target browser.(Citation: Talos Olympic Destroyer 2018)&lt;br /&gt;['T1564.004']: Monitor calls to the &lt;code&gt;ZwSetEaFile&lt;/code&gt; and &lt;code&gt;ZwQueryEaFile&lt;/code&gt; Windows API functions as well as binaries used to interact with EA, (Citation: Oddvar Moe ADS1 Jan 2018) (Citation: Oddvar Moe ADS2 Apr 2018) and consider regularly scanning for the presence of modified information. (Citation: SpectorOps Host-Based Jul 2017)&lt;br /&gt;['T1564.001']: Monitor newly executed processes that may set files and directories to be hidden to evade detection mechanisms.&lt;br /&gt;['T1546.010']: Monitor newly executed processes that may establish persistence and/or elevate privileges by executing malicious content triggered by AppInit DLLs loaded into processes.&lt;br /&gt;['T1490']: Use process monitoring to monitor the execution and command line parameters of binaries involved in inhibiting system recovery, such as vssadmin, wbadmin, and bcdedit.&lt;br /&gt;['T1218.011']: Use process monitoring to monitor the execution and arguments of rundll32.exe. Compare recent invocations of rundll32.exe with prior history of known good arguments and loaded DLLs to determine anomalous and potentially adversarial activity.&lt;br /&gt;['T1489']: Monitor for newly executed processes that may stop or disable services on a system to render those services unavailable to legitimate users.&lt;br /&gt;['T1057']: Monitor for newly executed processes that may attempt to get information about running processes on a system.&lt;br /&gt;['T1547.015']: Monitor processes that start at login for unusual or unknown applications. Usual applications for login items could include what users add to configure their user environment, such as email, chat, or music applications, or what administrators include for organization settings and protections. Check for running applications from login items that also have abnormal behavior, such as establishing network connections.&lt;br /&gt;['T1069']: Monitor for newly constructed processes and/or command-lines for actions that could be taken to gather system and network information. System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.&lt;br /&gt;['T1546.015']: Monitor newly executed processes that may establish persistence by executing malicious content triggered by hijacked references to Component Object Model (COM) objects.&lt;br /&gt;['T1140']: Monitor for newly executed processes that attempt to hide artifacts of an intrusion, such as common archive file applications and extensions (ex: Zip and RAR archive tools), and correlate with other suspicious behavior to reduce false positives from normal user and administrator behavior.&lt;br /&gt;['T1546.001']: Monitor for newly executed processes that may establish persistence by executing malicious content triggered by a file type association.&lt;br /&gt;['T1222.002']: Monitor for newly executed processes that may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files.(Citation: Hybrid Analysis Icacls1 June 2018)(Citation: Hybrid Analysis Icacls2 May 2018)&lt;br /&gt;['T1087.002']: Monitor for processes that can be used to enumerate domain accounts and groups, such as &lt;code&gt;net.exe&lt;/code&gt; and &lt;code&gt;net1.exe&lt;/code&gt;, especially when executed in quick succession.(Citation: Elastic - Koadiac Detection with EQL)
 
Information may also be acquired through Windows system management tools such as Windows Management Instrumentation and PowerShell.&lt;br /&gt;['T1547.009']: Monitor for newly executed processes that may create or edit shortcuts to run a program during system boot or user login.&lt;br /&gt;['T1622']: Monitoring for suspicious processes being spawned that gather a variety of system information or perform other forms of Discovery, especially in a short period of time, may aid in detection. Debugger related system checks will likely occur in the first steps of an operation but may also occur throughout as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained.&lt;br /&gt;['T1611']: Monitor for process activity (such as unexpected processes spawning outside a container and/or on a host) that might indicate an attempt to escape from a privileged container to host. &lt;br /&gt;['T1569.001']: Monitor for newly executed daemons that may abuse launchctl to execute commands or programs.&lt;br /&gt;['T1217']: Monitor newly constructed processes, e.g. browsers, for to gather personal information about users (ex: banking sites, interests, social media, etc.)&lt;br /&gt;['T1546.004']: Monitor newly executed processes that may establish persistence through executing malicious commands triggered by a user's shell.&lt;br /&gt;['T1056']: Monitor for newly executed processes conducting malicious activity &lt;br /&gt;['T1548.004']: Consider monitoring for &lt;code&gt;/usr/libexec/security_authtrampoline&lt;/code&gt; executions which may indicate that &lt;code&gt;AuthorizationExecuteWithPrivileges&lt;/code&gt; is being executed. MacOS system logs may also indicate when &lt;code&gt;AuthorizationExecuteWithPrivileges&lt;/code&gt; is being called.&lt;br /&gt;['T1548']: Monitor for newly executed processes that may circumvent mechanisms designed to control elevate privileges to gain higher-level permissions.&lt;br /&gt;['T1218.012']: Use process monitoring to monitor the execution and arguments of verclsid.exe. Compare recent invocations of verclsid.exe with prior history of known good arguments and loaded files to determine anomalous and potentially adversarial activity. Depending on the environment, it may be unusual for verclsid.exe to have a parent process of a Microsoft Office product. It may also be unusual for verclsid.exe to have any child processes or to make network connections or file modifications.&lt;br /&gt;['T1559']: Monitor for newly executed processes that are associated with abuse of IPC mechanisms&lt;br /&gt;['T1553.001']: Monitor and investigate attempts to modify extended file attributes with utilities such as &lt;code&gt;xattr&lt;/code&gt;. Built-in system utilities may generate high false positive alerts, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible. &lt;br /&gt;['T1059.004']: Monitor for newly executed processes that may abuse Unix shell commands and scripts for execution.&lt;br /&gt;['T1059']: Monitor log files for process execution through command-line and scripting activities. This information can be useful in gaining additional insight to adversaries' actions through how they use native processes or custom tools. Also monitor for loading of modules associated with specific languages.&lt;br /&gt;['T1016.001']: Monitor for executed processes (such as tracert or ping) that may check for Internet connectivity on compromised systems.&lt;br /&gt;['T1574.008']: Monitor for newly executed processes  for process executable paths that are named for partial directories.&lt;br /&gt;['T1137.005']: Monitor newly executed processes that may abuse Microsoft Outlook rules to obtain persistence on a compromised system.&lt;br /&gt;['T1614.001']: Monitor for newly executed processes that may attempt to gather information about the system language of a victim in order to infer the geographical location of that host.&lt;br /&gt;['T1559.002']: Monitor for newly executed processes that may use Windows Dynamic Data Exchange (DDE) to execute arbitrary commands.&lt;br /&gt;['T1518.001']: Monitor newly executed processes that may attempt to get a listing of security software, configurations, defensive tools, and sensors that are installed on a system or in a cloud environment.&lt;br /&gt;['T1482']: Monitor for newly executed processes that may attempt to gather information on domain trust relationships that may be used to identify lateral movement opportunities in Windows multi-domain/forest environments.&lt;br /&gt;['T1505.003']: Web shells can be difficult to detect. Unlike other forms of persistent remote access, they do not initiate connections. The portion of the Web shell that is on the server may be small and innocuous looking. The PHP version of the China Chopper Web shell, for example, is the following short payload: (Citation: Lee 2013)
&lt;code&gt;&lt;?php @eval($_POST['password']);&gt;&lt;/code&gt;
Nevertheless, detection mechanisms exist. Process monitoring may be used to detect Web servers that perform suspicious actions such as spawning cmd.exe or accessing files that are not in the Web directory.(Citation: NSA Cyber Mitigating Web Shells)&lt;br /&gt;['T1543']: New, benign system processes may be created during installation of new software.&lt;br /&gt;['T1574.012']: Monitor for newly executed processes, such as setx.exe, that may abuse of the COR_PROFILER variable, monitor for new suspicious unmanaged profiling DLLs loading into .NET processes shortly after the CLR causing abnormal process behavior.(Citation: Red Canary COR_PROFILER May 2020)&lt;br /&gt;['T1003']: Monitor for newly executed processes that may be indicative of credential dumping. On Windows 8.1 and Windows Server 2012 R2, monitor Windows Logs for LSASS.exe creation to verify that LSASS started as a protected process.&lt;br /&gt;['T1134.004']: Monitor for newly constructed processes and/or command-lines that may abuse mechanisms to evade defenses, such as those blocking processes spawning directly from Office documents, and analysis targeting unusual/potentially malicious parent-child process relationships, such as spoofing the PPID of PowerShell/Rundll32 to be explorer.exe&lt;br /&gt;['T1485']: Monitor for newly executed processes of binaries that could be involved in data destruction activity, such as SDelete.&lt;br /&gt;['T1087.003']: Monitor for newly executed processes, such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001) , with arguments that can be used to enumerate email addresses and accounts.&lt;br /&gt;['T1037.004']: Monitor for newly constructed processes and/or command-lines that  execute /etc/rc.local if present.&lt;br /&gt;['T1069.003']: Monitor newly executed processes that may attempt to find cloud groups and permission settings.&lt;br /&gt;['T1563.001']: Monitor newly executed processes that may hijack a legitimate user's SSH session to move laterally within an environment.&lt;br /&gt;['T1547.014']: Monitor newly executed processes that may achieve persistence by adding a Registry key to the Active Setup of the local machine.&lt;br /&gt;['T1021.004']: Monitor for newly executed processes that may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to log into remote machines using Secure Shell (SSH). For example, on macOS systems &lt;code&gt;log show --predicate 'process = "sshd"'&lt;/code&gt; can be used to review incoming SSH connection attempts for suspicious activity. The command &lt;code&gt;log show --info --predicate 'process = "ssh" or eventMessage contains "ssh"'&lt;/code&gt; can be used to review outgoing SSH connection activity.(Citation: Apple Unified Log Analysis Remote Login and Screen Sharing)&lt;br /&gt;['T1562.009']: Monitor newly executed processes that may abuse Windows safe mode to disable endpoint defenses.&lt;br /&gt;['T1010']: Monitor for newly executed processes that may attempt to get a listing of open application windows. System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.&lt;br /&gt;['T1529']: Monitor for newly executed processes of binaries involved in shutting down or rebooting systems.&lt;br /&gt;['T1136.002']: Monitor newly executed processes associated with account creation, such as net.exe&lt;br /&gt;['T1553.004']: Monitor for processes, such as &lt;code&gt;certmgr.exe&lt;/code&gt; (macOS) or &lt;code&gt;certutil.exe&lt;/code&gt; (Windows), that can be used to install root certificates. A system's root certificates are unlikely to change frequently. Monitor new certificates installed on a system that could be due to malicious activity. (Citation: SpectorOps Code Signing Dec 2017) Check pre-installed certificates on new systems to ensure unnecessary or suspicious certificates are not present. Microsoft provides a list of trustworthy root certificates online and through &lt;code&gt;authroot.stl&lt;/code&gt;. (Citation: SpectorOps Code Signing Dec 2017) The Sysinternals Sigcheck utility can also be used (&lt;code&gt;sigcheck[64].exe -tuv&lt;/code&gt;) to dump the contents of the certificate store and list valid certificates not rooted to the Microsoft Certificate Trust List. (Citation: Microsoft Sigcheck May 2017)&lt;br /&gt;['T1059.001']: Monitor for newly executed processes that may abuse PowerShell commands and scripts for execution.&lt;br /&gt;['T1552.002']: Monitor newly executed processes for applications that can be used to query the Registry, such as [Reg](https://attack.mitre.org/software/S0075), and collect command parameters that may indicate credentials are being searched. Correlate activity with related suspicious behavior that may indicate an active intrusion to reduce false positives.&lt;br /&gt;['T1053']: Monitor for newly executed processes that may abuse task scheduling functionality to facilitate initial or recurring execution of malicious code.&lt;br /&gt;['T1547.003']: Monitor newly executed processes, such as the W32tm.exe utility. (Citation: Microsoft W32Time May 2017) The Sysinternals Autoruns tool may also be used to analyze auto-starting locations, including DLLs listed as time providers. (Citation: TechNet Autoruns)&lt;br /&gt;['T1098']: Monitor for newly constructed processes indicative of modifying account settings, such as those that modify authorized_keys or /etc/ssh/sshd_config files.&lt;br /&gt;['T1098.004']: Monitor for suspicious processes modifying the authorized_keys or /etc/ssh/sshd_config files.&lt;br /&gt;['T1203']: Monitor for abnormal process creations, such as a Command and Scripting Interpreter spawning from a potentially exploited application. Also look for other behavior on the endpoint system that might indicate successful compromise, such as abnormal behavior of browser or Office processes.&lt;br /&gt;['T1052.001']: Monitor for newly executed processes when removable media is mounted &lt;br /&gt;['T1221']: Analyze process behavior to determine if an Office application is performing actions, such as opening network connections, reading files, spawning abnormal child processes (ex: [PowerShell](https://attack.mitre.org/techniques/T1059/001)), or other suspicious actions that could relate to post-compromise behavior.&lt;br /&gt;['T1053.003']: Monitor for newly constructed processes and/or command-lines that executed through scheduled tasks may show up as outlier processes that have not been seen before when compared against historical data. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.&lt;br /&gt;['T1480.001']: Monitoring for suspicious processes being spawned that gather a variety of system information or perform other forms of [Discovery](https://attack.mitre.org/tactics/TA0007), especially in a short period of time, may aid in detection. Detecting the use of environmental keying may be difficult depending on the implementation.&lt;br /&gt;['T1543.004']: Monitor for newly executed processes that may create or modify Launch Daemons to execute malicious payloads as part of persistence.&lt;br /&gt;['T1564.010']: Analyze process behavior to determine if a process is performing actions it usually does not and/or do no align with its logged command-line arguments.

Detection of process argument spoofing may be difficult as adversaries may momentarily modify stored arguments used for malicious execution. These changes may bypass process creation detection and/or later process memory analysis. Consider monitoring for [Process Hollowing](https://attack.mitre.org/techniques/T1055/012), which includes monitoring for process creation (especially those in a suspended state) as well as access and/or modifications of these processes (especially by the parent process) via Windows API calls.(Citation: Nviso Spoof Command Line 2020)(Citation: Mandiant Endpoint Evading 2019)&lt;br /&gt;['T1053.005']: Monitor for newly constructed processes and/or command-lines that execute from the svchost.exe in Windows 10 and the Windows Task Scheduler taskeng.exe for older versions of Windows. (Citation: Twitter Leoloobeek Scheduled Task) If scheduled tasks are not used for persistence, then the adversary is likely to remove the task when the action is complete.&lt;br /&gt;['T1560.001']: Monitor for newly constructed processes and/or command-lines that aid in compression or encrypting data that is collected prior to exfiltration, such as 7-Zip, WinRAR, and WinZip.  &lt;br /&gt;['T1543.003']: Suspicious program execution through services may show up as outlier processes that have not been seen before when compared against historical data. Look for abnormal process call trees from known services and for execution of other commands that could relate to Discovery or other adversary techniques. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.&lt;br /&gt;['T1546.008']: Monitor newly executed processes that may establish persistence and/or elevate privileges by executing malicious content triggered by accessibility features.&lt;br /&gt;['T1037.002']: Monitor for processes and/or command-lines to install or modify login hooks, as well as processes spawned at user login by these hooks.&lt;br /&gt;['T1021.006']: Monitor for newly executed processes that may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to interact with remote systems using Windows Remote Management (WinRM), as well as service processes such as &lt;code&gt;wmiprvse.exe&lt;/code&gt; on destination hosts.&lt;br /&gt;['T1216.001']: Monitor script processes, such as `cscript that may be used to proxy execution of malicious files.&lt;br /&gt;['T1189']: Monitor for newly executed processes to gain access to a system through a user visiting a website over the normal course of browsing.&lt;br /&gt;['T1564.003']: Monitor newly executed processes that may use hidden windows to conceal malicious activity from the plain sight of users.&lt;br /&gt;['T1053.002']: Monitor for newly constructed processes with command-lines that create/modify or are executed from tasks. For example, on Windows tasks may spawn from `svchost.exe` or the Windows Task Scheduler `taskeng.exe` for older OS versions. (Citation: Twitter Leoloobeek Scheduled Task) Suspicious program execution through scheduled tasks may show up as outlier processes that have not been seen before when compared against historical data.&lt;br /&gt;['T1546.005']: Monitor newly executed processes that may establish persistence by executing malicious content triggered by an interrupt signal.&lt;br /&gt;['T1614']: Monitor newly executed processes that may gather information in an attempt to calculate the geographical location of a victim host.&lt;br /&gt;['T1136']: Monitor newly executed processes associated with account creation, such as net.exe &lt;br /&gt;['T1218.005']: Use process monitoring to monitor the execution and arguments of mshta.exe.&lt;br /&gt;['T1037.005']: Monitor for newly constructed processes and/or command-lines that execute during the boot up process to check for unusual or unknown applications and behavior&lt;br /&gt;['T1546.011']: Monitor newly executed processs for sdbinst.exe for potential indications of application shim abuse. 
There are several public tools available that will detect shims that are currently available (Citation: Black Hat 2015 App Shim):
* Shim-Process-Scanner - checks memory of every running process for any shim flags
* Shim-Detector-Lite - detects installation of custom shim databases
* Shim-Guard - monitors registry for any shim installations
* ShimScanner - forensic tool to find active shims in memory
* ShimCacheMem - Volatility plug-in that pulls shim cache from memory (note: shims are only cached after reboot)&lt;br /&gt;['T1497.001']: Virtualization, sandbox, user activity, and related discovery techniques will likely occur in the first steps of an operation but may also occur throughout as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary's implementation and monitoring required. Monitoring for suspicious processes being spawned that gather a variety of system information or perform other forms of Discovery, especially in a short period of time, may aid in detection.&lt;br /&gt;['T1218.001']: Monitor and analyze the execution and arguments of hh.exe. (Citation: MsitPros CHM Aug 2017) Compare recent invocations of hh.exe with prior history of known good arguments to determine anomalous and potentially adversarial activity (ex: obfuscated and/or malicious commands). Non-standard process execution trees may also indicate suspicious or malicious behavior, such as if hh.exe is the parent process for suspicious processes and activity relating to other adversarial techniques.&lt;br /&gt;['T1211']: Monitor for abnormal process creations, such as a Command and Scripting Interpreter spawning from a potentially exploited application. Also look for behavior on the system that might indicate successful compromise, such as abnormal behavior of processes.&lt;br /&gt;['T1091']: Monitor for newly executed processes that execute from removable media after it is mounted or when initiated by a user. If a remote access tool is used in this manner to move laterally, then additional actions are likely to occur after execution, such as opening network connections for Command and Control and system and network information Discovery.&lt;br /&gt;['T1222.001']: Monitor for newly constructed processes and/or command-lines that can interact with the DACLs using built-in Windows commands, such as icacls, cacls, takeown, and attrib, which can grant adversaries higher permissions on specific files and folders.&lt;br /&gt;['T1574']: Monitor processes for unusual activity (e.g., a process that does not use the network begins to do so, abnormal process call trees). Track library metadata, such as a hash, and compare libraries that are loaded at process execution time against previous executions to detect differences that do not correlate with patching or updates.&lt;br /&gt;['T1574.010']: Monitor for newly executed processes that may execute their own malicious payloads by hijacking the binaries used by services.&lt;br /&gt;['T1218.008']: Use process monitoring to monitor the execution and arguments of odbcconf.exe. Compare recent invocations of odbcconf.exe with prior history of known good arguments and loaded DLLs to determine anomalous and potentially adversarial activity.&lt;br /&gt;['T1021.001']: Monitor for newly executed processes (such as &lt;code&gt;mstsc.exe&lt;/code&gt;) that may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to log into a computer using the Remote Desktop Protocol (RDP). The adversary may then perform actions that spawn additional processes as the logged-on user.&lt;br /&gt;['T1615']: Monitor for newly executed processes that may gather information on Group Policy settings to identify paths for privilege escalation, security measures applied within a domain, and to discover patterns in domain objects that can be manipulated or used to blend in the environment.&lt;br /&gt;['T1480']: Monitoring for suspicious processes being spawned that gather a variety of system information or perform other forms of [Discovery](https://attack.mitre.org/tactics/TA0007), especially in a short period of time, may aid in detection. Detecting the use of guardrails may be difficult depending on the implementation.&lt;br /&gt;['T1564']: Monitor newly executed processes that may attempt to hide artifacts associated with their behaviors to evade detection.&lt;br /&gt;['T1021.005']: Monitor for newly executed processes that may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to remotely control machines using Virtual Network Computing (VNC). For example, on macOS systems the &lt;code&gt;screensharingd&lt;/code&gt; process may be related to VNC connection activity.(Citation: Apple Unified Log Analysis Remote Login and Screen Sharing)&lt;br /&gt;['T1563.002']: Consider monitoring processes for tscon.exe usage&lt;br /&gt;['T1059.005']: Monitor for events associated with VB execution, such as Office applications spawning processes, usage of the Windows Script Host (typically cscript.exe or wscript.exe). VB execution is likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used.&lt;br /&gt;['T1574.006']: Monitor for newly executed processes for unusual activity (e.g., a process that does not use the network begins to do so).&lt;br /&gt;['T1497.003']: Time-based evasion will likely occur in the first steps of an operation but may also occur throughout as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary's implementation and monitoring required. Monitoring for suspicious processes being spawned that gather a variety of system information or perform other forms of Discovery, especially in a short period of time, may aid in detection.&lt;br /&gt;['T1087.001']: Monitor for processes that can be used to enumerate user accounts and groups such as &lt;code&gt;net.exe&lt;/code&gt; and &lt;code&gt;net1.exe&lt;/code&gt;, especially when executed in quick succession.(Citation: Elastic - Koadiac Detection with EQL)
 
Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).&lt;br /&gt;['T1546.006']: Monitor processes for those that may be used to modify binary headers.&lt;br /&gt;['T1219']: Monitor for applications and processes related to remote admin tools. Correlate activity with other suspicious behavior that may reduce false positives if these tools are used by legitimate users and administrators. [Domain Fronting](https://attack.mitre.org/techniques/T1090/004) may be used in conjunction to avoid defenses. Adversaries will likely need to deploy and/or install these remote tools to compromised systems. It may be possible to detect or prevent the installation of these tools with host-based solutions.&lt;br /&gt;['T1027.004']: Monitor for newly constructed processes and/or command-lines that look for non-native binary formats and cross-platform compiler and execution frameworks like Mono and determine if they have a legitimate purpose on the system. Typically these should only be used in specific and limited cases, like for software development.&lt;br /&gt;['T1059.007']: Monitor for events associated with scripting execution, such as process activity, usage of the Windows Script Host (typically cscript.exe or wscript.exe), file activity involving scripts&lt;br /&gt;['T1553.006']: Monitor processes and command-line arguments for actions that could be taken to modify the code signing policy of a system, such as &lt;code&gt;bcdedit.exe -set TESTSIGNING ON&lt;/code&gt;. (Citation: Microsoft TESTSIGNING Feb 2021)&lt;br /&gt;['T1555.001']: Monitor processes spawned by command line utilities to manipulate keychains directly, such as &lt;code&gt;security&lt;/code&gt;, combined with arguments to collect passwords, such as &lt;code&gt;dump-keychain -d&lt;/code&gt;.&lt;br /&gt;['T1220']: Use process monitoring to monitor the execution and arguments of msxsl.exe and wmic.exe. (Citation: LOLBAS Wmic) (Citation: Twitter SquiblyTwo Detection APR 2018) Command arguments used before and after the script invocation may also be useful in determining the origin and purpose of the payload being loaded. The presence of msxsl.exe or other utilities that enable proxy execution that are typically used for development, debugging, and reverse engineering on a system that is not used for these purposes may be suspicious.&lt;br /&gt;['T1564.002']: Monitor newly executed processes for actions that could be taken to add a new user and subsequently hide it from login screens.&lt;br /&gt;['T1497.002']: User activity-based checks will likely occur in the first steps of an operation but may also occur throughout as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary's implementation and monitoring required. Monitoring for suspicious processes being spawned that gather a variety of system information or perform other forms of Discovery, especially in a short period of time, may aid in detection.&lt;br /&gt;['T1563']: Monitor newly executed processes that may take control of preexisting sessions with remote services to move laterally in an environment.&lt;br /&gt;['T1547.013']: Monitor newly executed processes that may modify XDG autostart entries to execute programs or commands during system boot.&lt;br /&gt;['T1072']: Monitor for newly executed processes that does not correlate to known good software. Analyze the process execution trees, historical activities from the third-party application (such as what types of files are usually pushed), and the resulting activities or events from the file/binary/script pushed to systems. &lt;br /&gt;['T1120']: Monitor for newly executed processes that may attempt to gather information about attached peripheral devices and components connected to a computer system.&lt;br /&gt;['T1553']: Monitor processes and arguments for malicious attempts to modify trust settings, such as the installation of root certificates or modifications to trust attributes/policies applied to files.&lt;br /&gt;['T1082']: Monitor newly executed processes that may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture.&lt;br /&gt;['T1569']: Monitor newly executed processes that may abuse system services or daemons to execute commands or programs.&lt;br /&gt;['T1609']: Container administration service activities and executed commands can be captured through logging of process execution with command-line arguments on the container as well as within the underlying host.&lt;br /&gt;['T1204.002']: Monitor for newly constructed processes and/or command-lines for applications that may be used by an adversary to gain initial access that require user interaction. This includes compression applications, such as those for zip files, that can be used to Deobfuscate/Decode Files or Information in payloads.&lt;br /&gt;['T1070.005']: Monitor for newly constructed processes and/or command line execution that can be used to remove network share connections via the net.exe process. &lt;br /&gt;['T1546.003']: Monitor newly executed processes that result from the execution of subscriptions (i.e. spawning from the WmiPrvSe.exe WMI Provider Host process).&lt;br /&gt;['T1016']: Monitor for executed processes (such as ipconfig/ifconfig and arp) with arguments that may look for details about the network configuration and settings, such as IP and/or MAC addresses.&lt;br /&gt;['T1647']: Monitor for newly executed processes with arguments that can modify property list (plist) files.&lt;br /&gt;['T1562.010']: Monitor newly executed processes that may downgrade or use a version of system features that may be outdated, vulnerable, and/or does not support updated security controls such as logging.&lt;br /&gt;['T1548.003']: Monitor newly executed processes that may perform sudo caching and/or use the suoders file to elevate privileges.&lt;br /&gt;['T1053.006']: Monitor for newly constructed processes and/or command-lines that will have a parent process of 'systemd', a parent process ID of 1, and will usually execute as the 'root' user.&lt;br /&gt;['T1069.001']: Monitor newly executed processes that may attempt to find local system groups and permission settings.&lt;br /&gt;['T1564.006']: Monitor newly executed processes associated with running a virtual instance, such as those launched from binary files associated with common virtualization technologies (ex: VirtualBox, VMware, QEMU, Hyper-V).&lt;br /&gt;['T1518']: Monitor newly executed processes that may attempt to get a listing of software and software versions that are installed on a system or in a cloud environment.&lt;br /&gt;['T1562.002']: Monitor newly executed processes that may disable Windows event logging to limit data that can be leveraged for detections and audits.&lt;br /&gt;['T1059.002']: Monitor for newly executed processes that may abuse AppleScript for execution. Scripts are likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Actions may be related to network and system information [Discovery](https://attack.mitre.org/tactics/TA0007), [Collection](https://attack.mitre.org/tactics/TA0009), or other scriptable post-compromise behaviors and could be used as indicators of detection leading back to the source script.&lt;br /&gt;['T1202']: Monitor for newly constructed processes and/or command-lines that can be used instead of invoking cmd (i.e. pcalua.exe, winrs.exe, cscript/wscript.exe, hh.exe, or bash.exe)&lt;br /&gt;['T1080']: Monitor processes that are executed from removable media for malicious or abnormal activity such as network connections due to Command and Control and possible network Discovery techniques.&lt;br /&gt;['T1201']: Monitor for newly executed processes that may attempt to access detailed information about the password policy used within an enterprise network or cloud environment.&lt;br /&gt;['T1218.009']: Use process monitoring to monitor the execution and arguments of Regsvcs.exe and Regasm.exe. Compare recent invocations of Regsvcs.exe and Regasm.exe with prior history of known good arguments and executed binaries to determine anomalous and potentially adversarial activity.&lt;br /&gt;['T1112']: Monitor processes and command-line arguments for actions that could be taken to change, conceal, and/or delete information in the Registry. (i.e. reg.exe, regedit.exe) &lt;br /&gt;['T1007']: Monitor for newly executed processes with arguments that may try to get information about registered services. System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.&lt;br /&gt;['T1137.001']: Monitor newly executed processes that may abuse Microsoft Office templates to obtain persistence on a compromised system.&lt;br /&gt;['T1546.009']: Monitor newly executed processes that may establish persistence and/or elevate privileges by executing malicious content triggered by AppCert DLLs loaded into processes.&lt;br /&gt;['T1552']: Monitor newly executed processes that may search compromised systems to find and obtain insecurely stored credentials.&lt;br /&gt;['T1127']: Monitor for abnormal presence of these or other utilities that enable proxy execution that are typically used for development, debugging, and reverse engineering on a system that is not used for these purposes may be suspicious. Use process monitoring to monitor the execution and arguments of from developer utilities that may be abused. Compare recent invocations of those binaries with prior history of known good arguments and executed binaries to determine anomalous and potentially adversarial activity. It is likely that these utilities will be used by software developers or for other software development related tasks, so if it exists and is used outside of that context, then the event may be suspicious.&lt;br /&gt;['T1137']: Monitor newly executed processes that may leverage Microsoft Office-based applications for persistence between startups. Collect process execution information including process IDs (PID) and parent process IDs (PPID) and look for abnormal chains of activity resulting from Office processes. Non-standard process execution trees may also indicate suspicious or malicious behavior. If winword.exe is the parent process for suspicious processes and activity relating to other adversarial techniques, then it could indicate that the application was used maliciously.&lt;br /&gt;['T1218.004']: Use process monitoring to monitor the execution and arguments of InstallUtil.exe. Compare recent invocations of InstallUtil.exe with prior history of known good arguments and executed binaries to determine anomalous and potentially adversarial activity&lt;br /&gt;['T1037.003']: Monitor for newly constructed processes and/or command-lines that execute logon scripts&lt;br /&gt;['T1204']: Monitor for newly executed processes that may be used by an adversary to gain Initial Access that require user interaction. This includes compression applications, such as those for zip files, that can be used to [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140) in payloads.&lt;br /&gt;['T1547.006']: Monitor for newly created processes that may modify the kernel to automatically execute programs on system boot.&lt;br /&gt;['T1561']: Monitor newly executed processes that may wipe or corrupt raw disk data on specific systems or in large numbers in a network to interrupt availability to system and network resources.&lt;br /&gt;['T1505.005']: Monitor processes with arguments that may potentially highlight adversary actions to modify Registry values (ex: &lt;code&gt;reg.exe&lt;/code&gt;) or modify/replace the legitimate &lt;code&gt;termsrv.dll&lt;/code&gt;.&lt;br /&gt;['T1547']: Suspicious program execution as autostart programs may show up as outlier processes that have not been seen before when compared against historical data to increase confidence of malicious activity, data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.&lt;br /&gt;['T1070']: Monitor for newly executed processes that may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined malware.&lt;br /&gt;['T1040']: Monitor for newly executed processes that can aid in sniffing network traffic to capture information about an environment, including authentication material passed over the network &lt;br /&gt;['T1137.004']: Monitor newly executed processes that may abuse Microsoft Outlook's Home Page feature to obtain persistence on a compromised system.&lt;br /&gt;['T1496']: Monitor for common cryptomining software process names that may indicate compromise and resource usage.&lt;br /&gt;['T1176']: Monitor for newly executed processes that could be used to abuse internet browser extensions to establish persistence. &lt;br /&gt;['T1486']: Monitor for newly constructed  processes and/or command-lines involved in data destruction activity, such as vssadmin, wbadmin, and bcdedit.&lt;br /&gt;['T1505']: Process monitoring may be used to detect servers components that perform suspicious actions such as running cmd.exe or accessing files.&lt;br /&gt;['T1548.002']: Monitor newly executed processes, such as &lt;code&gt;eventvwr.exe&lt;/code&gt; and &lt;code&gt;sdclt.exe&lt;/code&gt;, that may bypass UAC mechanisms to elevate process privileges on system.&lt;br /&gt;['T1052']: Monitor for newly executed processes when removable media is mounted.&lt;br /&gt;['T1218.007']: Use process monitoring to monitor the execution and arguments of msiexec.exe. Compare recent invocations of msiexec.exe with prior history of known good arguments and executed MSI files.&lt;br /&gt;['T1543.002']: Suspicious processes or scripts spawned in this manner will have a parent process of 'systemd', a parent process ID of 1, and will usually execute as the 'root' user.&lt;br /&gt;['T1561.002']: Monitor newly executed processes that may corrupt or wipe the disk data structures on a hard drive necessary to boot a system; targeting specific critical systems or in large numbers in a network to interrupt availability to system and network resources.&lt;br /&gt;['T1037']: Monitor for newly executed processes that may use scripts automatically executed at boot or logon initialization to establish persistence.&lt;br /&gt;['T1012']: Monitor for newly executed processes that may interact with the Windows Registry to gather information about the system, configuration, and installed software.&lt;br /&gt;['T1059.006']: Monitor systems for abnormal Python usage and python.exe behavior, which could be an indicator of malicious activity. Understanding standard usage patterns is important to avoid a high number of false positives. If scripting is restricted for normal users, then any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent. Scripts are likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Monitor newly executed processes that may abuse Python commands and scripts for execution.&lt;br /&gt;['T1564.009']: Monitor newly executed processes that may abuse resource forks to hide malicious code or executables to evade detection and bypass security applications.&lt;br /&gt;['T1546.014']: Monitor newly executed processes that may gain persistence and elevate privileges by executing malicious content triggered by the Event Monitor Daemon (emond).&lt;br /&gt;['T1574.005']: Monitor for newly constructed processes to match an existing service executables. &lt;br /&gt;['T1056.002']: Monitor for newly executed processes &lt;br /&gt;['T1574.011']: Monitor suspicious programs execution through services. These processes may show up as outlier processes that have not been seen before when compared against historical data.&lt;br /&gt;['T1047']: Monitor for newly constructed processes and/or command-lines of "wmic"&lt;br /&gt;['T1546.012']: Monitor for abnormal usage of the GFlags tool as well as common processes spawned under abnormal parents and/or with creation flags indicative of debugging such as &lt;code&gt;DEBUG_PROCESS&lt;/code&gt; and &lt;code&gt;DEBUG_ONLY_THIS_PROCESS&lt;/code&gt;. (Citation: Microsoft Dev Blog IFEO Mar 2010)&lt;br /&gt;['T1137.006']: Monitor newly executed processes that may abuse Microsoft Office add-ins to obtain persistence on a compromised system. &lt;br /&gt;['T1218']: Monitor processes and command-line parameters for signed binaries that may be used to proxy execution of malicious files. Compare recent invocations of signed binaries that may be used to proxy execution with prior history of known good arguments and loaded files to determine anomalous and potentially adversarial activity. Legitimate programs used in suspicious ways, like msiexec.exe downloading an MSI file from the Internet, may be indicative of an intrusion. Correlate activity with other suspicious behavior to reduce false positives that may be due to normal benign use by users and administrators.&lt;br /&gt;['T1127.001']: Monitor for newly executed processes of MSBuild.exe. Compare recent invocations of those binaries with prior history of known good arguments and executed binaries to determine anomalous and potentially adversarial activity.&lt;br /&gt;['T1546.013']: Monitor newly executed processes that may gain persistence and elevate privileges by executing malicious content triggered by PowerShell profiles.&lt;br /&gt;['T1135']: Monitor for newly executed processes that may look for folders and drives shared on remote systems as a means of identifying sources of information to gather as a precursor for Collection and to identify potential systems of interest for Lateral Movement.&lt;br /&gt;['T1049']: Monitor for executed processes that may attempt to get a listing of network connections to or from the compromised system they are currently accessing or from remote systems by querying for information over the network.&lt;br /&gt;['T1069.002']: Monitor newly executed processes that may attempt to find domain-level groups and permission settings.&lt;br /&gt;['T1574.002']: Monitor newly constructed processes for unusual activity (e.g., a process that does not use the network begins to do so) as well as the introduction of new files/programs.&lt;br /&gt;['T1555.004']: Monitor newly executed processes of &lt;code&gt;vaultcmd.exe&lt;/code&gt; for suspicious activity, such as listing credentials from the Windows Credentials locker (i.e., &lt;code&gt;vaultcmd /listcreds:"Windows Credentials"&lt;/code&gt;).(Citation: Malwarebytes The Windows Vault)&lt;br /&gt;['T1546.002']: Monitor newly executed processes that may establish persistence by executing malicious content triggered by user inactivity.&lt;br /&gt;['T1137.002']: Monitor newly executed processes that may abuse the Microsoft Office "Office Test" Registry key to obtain persistence on a compromised system.&lt;br /&gt;['T1083']: Monitor newly executed processes that may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system.&lt;br /&gt;['T1570']: Monitor newly constructed processes that assist in lateral tool transfers. &lt;br /&gt;['T1546.007']: It is likely unusual for netsh.exe to have any child processes in most environments. Monitor process executions and investigate any child processes spawned by netsh.exe for malicious behavior.&lt;br /&gt;['T1569.002']: Monitor for newly executed processes that may abuse the Windows service control manager to execute malicious commands or payloads.&lt;br /&gt;['T1218.003']: Use process monitoring to detect and analyze the execution and arguments of CMSTP.exe. Compare recent invocations of CMSTP.exe with prior history of known good arguments and loaded files to determine anomalous and potentially adversarial activity. Sysmon events can also be used to identify potential abuses of CMSTP.exe. Detection strategy may depend on the specific adversary procedure, but potential rules include: (Citation: Endurant CMSTP July 2018)
* To detect loading and execution of local/remote payloads - Event 1 (Process creation) where ParentImage contains CMSTP.exe
* Also monitor for events, such as the creation of processes (Sysmon Event 1), that involve auto-elevated CMSTP COM interfaces such as CMSTPLUA (3E5FC7F9-9A51-4367-9063-A120244FBEC7) and CMLUAUTIL (3E000D72-A845-4CD9-BD83-80C07C3B881F).&lt;br /&gt;['T1562']: Monitor newly executed processes that may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms.&lt;br /&gt;['T1555']: Monitor newly executed processes that may search for common password storage locations to obtain user credentials.&lt;br /&gt;['T1197']: Monitor for newly constructed BITS tasks to enumerate using the BITSAdmin tool (bitsadmin /list /allusers /verbose). &lt;br /&gt;['T1005']: Monitor for newly executed processes that may search local system sources, such as file systems or local databases, to find files of interest and sensitive data prior to Exfiltration.&lt;br /&gt;['T1574.007']: Monitor for newly executed processes for process executable paths that are named for partial directories.&lt;br /&gt;['T1574.009']: Monitor for newly executed processes that may execute their own malicious payloads by hijacking vulnerable file path references.&lt;br /&gt;['T1218.013']: Monitor the execution and arguments of mavinject.exe. Compare recent invocations of mavinject.exe with prior history of known good arguments and injected DLLs to determine anomalous and potentially adversarial activity.&lt;br /&gt;['T1021.003']: Monitor for newly executed processes associated with DCOM activity, especially those invoked by a user different than the one currently logged on. Enumeration of COM objects, via [Query Registry](https://attack.mitre.org/techniques/T1012) or [PowerShell](https://attack.mitre.org/techniques/T1059/001), may also precede malicious use.(Citation: Fireeye Hunting COM June 2019)(Citation: Enigma MMC20 COM Jan 2017)&lt;br /&gt;['T1559.001']: Monitor for newly executed processes that are associated with COM objects, especially those invoked by a user different than the one currently logged on.&lt;br /&gt;['T1134']: Monitor for executed processes that may modify access tokens to operate under a different user or system security context to perform actions and bypass access controls.&lt;br /&gt;['T1018']: Monitor for newly executed processes that can be used to discover remote systems, such as &lt;code&gt;ping.exe&lt;/code&gt; and &lt;code&gt;tracert.exe&lt;/code&gt;, especially when executed in quick succession.(Citation: Elastic - Koadiac Detection with EQL)&lt;br /&gt;['T1561.001']: Monitor newly executed processes that may erase the contents of storage devices on specific systems or in large numbers in a network to interrupt availability to system and network resources.&lt;br /&gt;['T1027']: Monitor for newly executed processes that may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit.&lt;br /&gt;['T1137.003']: Monitor newly executed processes that may abuse Microsoft Outlook forms to obtain persistence on a compromised system.&lt;br /&gt;['T1218.014']: Monitor processes for suspicious or malicious use of MMC. Since MMC is a signed Windows binary, verify use of MMC is legitimate and not malicious.&lt;br /&gt;['T1546']: Tools such as Sysinternals Autoruns can be used to detect changes to execution triggers that could be attempts at persistence. Also look for abnormal process call trees for execution of other commands that could relate to Discovery actions or other techniques.&lt;br /&gt;['T1124']: Monitor for newly executed processes that may gather the system time and/or time zone from a local or remote system.&lt;br /&gt;['T1218.010']: Use process monitoring to monitor the execution and arguments of regsvr32.exe. Compare recent invocations of regsvr32.exe with prior history of known good arguments and loaded files to determine anomalous and potentially adversarial activity.&lt;br /&gt;['T1021']: Monitor for newly executed processes that may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to log into a service specifically designed to accept remote connections, such as RDP, telnet, SSH, and VNC. The adversary may then perform actions that spawn additional processes as the logged-on user.&lt;br /&gt;['T1059.003']: Monitor for newly executed processes that may abuse the Windows command shell for execution.&lt;br /&gt;['T1218.002']: Monitor and analyze activity related to items associated with CPL files, such as the control.exe. Analyze new Control Panel items as well as those present on disk for malicious content. Both executable and CPL formats are compliant Portable Executable (PE) images and can be examined using traditional tools and methods, pending anti-reverse-engineering techniques.(Citation: TrendMicro CPL Malware Jan 2014)&lt;br /&gt;['T1489']: Monitor processes and command-line arguments to see if critical processes are terminated or stop running.&lt;br /&gt;['T1562.001']: Monitor processes for unexpected termination related to security tools/services.
&lt;br /&gt;['T1562']: Monitor for unexpected deletions of a running process (ex: Sysmon EID 5 or Windows EID 4689) that may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms.&lt;br /&gt;['T1056.004']: Verify integrity of live processes by comparing code in memory to that of corresponding static binaries, specifically checking for jumps and other instructions that redirect code flow.&lt;br /&gt;['T1036']: Monitor for file names that are mismatched between the file name on disk and that of the binary's PE metadata, this is a likely indicator that a binary was renamed after it was compiled. &lt;br /&gt;['T1059']: Monitor contextual data about a running process, which may include information such as environment variables, image name, user/owner, or other information that may reveal abuse of system features. For example, consider monitoring for Windows event ID (EID) 400, which shows the version of PowerShell executing in the &lt;code&gt;EngineVersion&lt;/code&gt; field (which may also be relevant to detecting a potential [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)) as well as if PowerShell is running locally or remotely in the &lt;code&gt;HostName&lt;/code&gt; field. Furthermore, EID 400 may indicate the start time and EID 403 indicates the end time of a PowerShell session.(Citation: inv_ps_attacks)&lt;br /&gt;['T1036.005']: Collecting and comparing disk and resource filenames for binaries by looking to see if the InternalName, OriginalFilename, and/or ProductName match what is expected could provide useful leads, but may not always be indicative of malicious activity.&lt;br /&gt;['T1548']: Monitor contextual data about a running process, which may include information such as environment variables, image name, user/owner that may circumvent mechanisms designed to control elevate privileges to gain higher-level permissions.&lt;br /&gt;['T1562.010']: Monitor contextual data about a running process, which may include information such as environment variables, image name, user/owner, or other information that may reveal use of a version of system features that may be outdated, vulnerable, and/or does not support updated security controls such as logging. For example, monitoring for Windows event ID (EID) 400, specifically the &lt;code&gt;EngineVersion&lt;/code&gt; field which shows the version of PowerShell running, may highlight a malicious downgrade attack.(Citation: inv_ps_attacks)&lt;br /&gt;['T1134.004']: Look for inconsistencies between the various fields that store PPID information, such as the EventHeader ProcessId from data collected via Event Tracing for Windows (ETW), Creator Process ID/Name from Windows event logs, and the ProcessID and ParentProcessID (which are also produced from ETW and other utilities such as Task Manager and Process Explorer). The ETW provided EventHeader ProcessId identifies the actual parent process.(Citation: CounterCept PPID Spoofing Dec 2018)&lt;br /&gt;['T1548.003']: Monitor contextual data about a running process, which may include information such as environment variables, image name, user/owner that may perform sudo caching and/or use the suoders file to elevate privileges.&lt;br /&gt;['T1059.001']: Consider monitoring for Windows event ID (EID) 400, which shows the version of PowerShell executing in the &lt;code&gt;EngineVersion&lt;/code&gt; field (which may also be relevant to detecting a potential [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)) as well as if PowerShell is running locally or remotely in the &lt;code&gt;HostName&lt;/code&gt; field. Furthermore, EID 400 may indicate the start time and EID 403 indicates the end time of a PowerShell session.(Citation: inv_ps_attacks)&lt;br /&gt;['T1548.002']: Monitor contextual data about a running process, which may include information such as environment variables, image name, user/owner that may bypass UAC mechanisms to elevate process privileges on system.&lt;br /&gt;['T1134']: Query systems for process and thread token information and look for inconsistencies such as user owns processes impersonating the local SYSTEM account.(Citation: BlackHat Atkinson Winchester Token Manipulation) Look for inconsistencies between the various fields that store PPID information, such as the EventHeader ProcessId from data collected via Event Tracing for Windows (ETW), Creator Process ID/Name from Windows event logs, and the ProcessID and ParentProcessID (which are also produced from ETW and other utilities such as Task Manager and Process Explorer). The ETW provided EventHeader ProcessId identifies the actual parent process.&lt;br /&gt;['T1185']: This may be a difficult technique to detect because adversary traffic may be masked by normal user traffic. Monitor for [Process Injection](https://attack.mitre.org/techniques/T1055) against browser applications.&lt;br /&gt;['T1055.015']: Monitor for changes made to processes that may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges. Analyze process behavior to determine if a process is performing unusual actions, such as opening network connections, reading files, or other suspicious actions that could relate to post-compromise behavior. &lt;br /&gt;['T1055.012']: Monitor for changes made to processes that may inject malicious code into suspended and hollowed processes in order to evade process-based defenses.&lt;br /&gt;['T1055']: Monitor for changes made to processes that may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges.&lt;br /&gt;['T1055.004']: Monitor for changes made to processes that may inject malicious code into processes via the asynchronous procedure call (APC) queue in order to evade process-based defenses as well as possibly elevate privileges.&lt;br /&gt;['T1055.008']: Monitor for changes made to processes that may inject malicious code into processes via ptrace (process trace) system calls in order to evade process-based defenses as well as possibly elevate privileges.&lt;br /&gt;['T1055.003']: Monitor for changes made to processes that may inject malicious code into hijacked processes in order to evade process-based defenses as well as possibly elevate privileges.&lt;br /&gt;['T1055.005']: Monitor for changes made to processes that may inject malicious code into processes via thread local storage (TLS) callbacks in order to evade process-based defenses as well as possibly elevate privileges.&lt;br /&gt;['T1055.002']: Monitor for changes made to processes that may inject portable executables (PE) into processes in order to evade process-based defenses as well as possibly elevate privileges.&lt;br /&gt;['T1055.001']: Monitor for changes made to processes that may inject dynamic-link libraries (DLLs) into processes in order to evade process-based defenses as well as possibly elevate privileges.&lt;br /&gt;['T1556']: Monitor for unexpected processes interacting with authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts.&lt;br /&gt;['T1003.001']: Monitor for unexpected processes interacting with LSASS.exe.(Citation: Medium Detecting Attempts to Steal Passwords from Memory) Common credential dumpers such as Mimikatz access LSASS.exe by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details are stored. Credential dumpers may also use methods for reflective [Process Injection](https://attack.mitre.org/techniques/T1055) to reduce potential indicators of malicious activity.&lt;br /&gt;['T1555.003']: Monitor process execution logs to include PowerShell Transcription focusing on those that perform a combination of behaviors including reading web browser process memory, utilizing regular expressions, and those that contain numerous keywords for common web applications (Gmail, Twitter, Office365, etc.).&lt;br /&gt;['T1539']: Monitor for attempts by programs to inject into or dump browser process memory.&lt;br /&gt;['T1555.005']: Monitor process being accessed that may acquire user credentials from third-party password managers.(Citation: ise Password Manager February 2019)&lt;br /&gt;['T1055.002']: Monitor for processes being viewed that may inject portable executables (PE) into processes in order to evade process-based defenses as well as possibly elevate privileges.&lt;br /&gt;['T1055.008']: Monitor for processes being viewed that may inject malicious code into processes via ptrace (process trace) system calls in order to evade process-based defenses as well as possibly elevate privileges.&lt;br /&gt;['T1055']: Monitor for processes being viewed that may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges.&lt;br /&gt;['T1055.004']: Monitor for processes being viewed that may inject malicious code into processes via the asynchronous procedure call (APC) queue in order to evade process-based defenses as well as possibly elevate privileges.&lt;br /&gt;['T1559.003']: Monitor for processes making abnormal calls to higher privileged processes, such as a user application connecting to a VPN service.(Citation: versprite xpc vpn)&lt;br /&gt;['T1055.001']: Monitor for process being viewed that may inject dynamic-link libraries (DLLs) into processes in order to evade process-based defenses as well as possibly elevate privileges.&lt;br /&gt;['T1556.001']: Monitor for unexpected processes interacting with the authentication process on a domain controller to bypass the typical authentication mechanisms and enable access to accounts.&lt;br /&gt;['T1555']: Monitor for processes being accessed that may search for common password storage locations to obtain user credentials.&lt;br /&gt;['T1055.005']: Monitor for processes being viewed that may inject malicious code into processes via thread local storage (TLS) callbacks in order to evade process-based defenses as well as possibly elevate privileges.&lt;br /&gt;['T1555.002']: Monitor for processes being accessed that may obtain root access (allowing them to read securityd's memory), then they can scan through memory to find the correct sequence of keys in relatively few tries to decrypt the user's logon keychain.&lt;br /&gt;['T1003']: Monitor for unexpected processes interacting with lsass.exe.(Citation: Medium Detecting Attempts to Steal Passwords from Memory) Common credential dumpers such as [Mimikatz](https://attack.mitre.org/software/S0002) access the LSA Subsystem Service (LSASS) process by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details are stored. Credential dumpers may also use methods for reflective [Process Injection](https://attack.mitre.org/techniques/T1055) to reduce potential indicators of malicious activity.
##### Linux
To obtain the passwords and hashes stored in memory, processes must open a maps file in the /proc filesystem for the process being analyzed. This file is stored under the path &lt;code&gt;/proc/&amp;lt;pid&amp;gt;/maps&lt;/code&gt;, where the &lt;code&gt;&amp;lt;pid&amp;gt;&lt;/code&gt; directory is the unique pid of the program being interrogated for such authentication data. The AuditD monitoring tool, which ships stock in many Linux distributions, can be used to watch for hostile processes opening this file in the proc file system, alerting on the pid, process name, and arguments of such programs.&lt;br /&gt;['T1055.012']: Monitor for processes being viewed that may inject malicious code into suspended and hollowed processes in order to evade process-based defenses.&lt;br /&gt;['T1055.003']: Monitor for processes being viewed that may inject malicious code into hijacked processes in order to evade process-based defenses as well as possibly elevate privileges.&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Microsoft Processes and Threads" url="https://docs.microsoft.com/en-us/windows/win32/procthread/processes-and-threads"/>
            <reference name="Mitre ATT&amp;CK Data Source DS0009" url="https://attack.mitre.org/datasources/DS0009"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:02.096">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-M1022" name="Restrict File and Directory Permissions" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>Restrict access by setting directory and file permissions that are not specific to users or privileged accounts.&lt;br /&gt;&lt;p&gt;Detailed mitigations per technique:&lt;/p&gt;&lt;br /&gt;['T1036.005', 'T1036.003']: Use file system access controls to protect folders such as C:\Windows\System32.&lt;br /&gt;['T1035']: Also ensure that high permission level service binaries cannot be replaced or modified by users with a lower permission level.&lt;br /&gt;['T1209', 'T1547.003']: Consider using Group Policy to configure and block additions/modifications to W32Time DLLs. (Citation: Microsoft W32Time May 2017)&lt;br /&gt;['T1565.001', 'T1492', 'T1565']: Ensure least privilege principles are applied to important information resources to reduce exposure to data manipulation risk.&lt;br /&gt;['T1037.004']: Limit privileges of user accounts so only authorized users can edit the rc.common file.&lt;br /&gt;['T1222.002', 'T1222.001', 'T1222']: Applying more restrictive permissions to files and directories could prevent adversaries from modifying the access control lists.&lt;br /&gt;['T1562.002']: Ensure proper process and file permissions are in place to prevent adversaries from disabling or interfering with logging or deleting or modifying .evtx logging files. Ensure .evtx files, which are located at &lt;code&gt;C:\Windows\system32\Winevt\Logs&lt;/code&gt;(Citation: win_xml_evt_log), have the proper file permissions for limited, legitimate access and audit policies for detection. &lt;br /&gt;['T1037.005', 'T1165']: Since StartupItems are deprecated, preventing all users from writing to the &lt;code&gt;/Library/StartupItems&lt;/code&gt; directory would prevent any startup items from getting registered.&lt;br /&gt;['T1053.006']: Restrict read/write access to systemd &lt;code&gt;.timer&lt;/code&gt; unit files to only select privileged users who have a legitimate need to manage system services.&lt;br /&gt;['T1218.002', 'T1196']: Restrict storage and execution of Control Panel items to protected directories, such as &lt;code&gt;C:\Windows&lt;/code&gt;, rather than user directories.&lt;br /&gt;['T1096', 'T1564.004']: Consider adjusting read and write permissions for NTFS EA, though this should be tested to ensure routine OS operations are not impeded. (Citation: InsiderThreat NTFS EA Oct 2017)&lt;br /&gt;['T1070.001', 'T1070', 'T1070.002']: Protect generated event files that are stored locally with proper permissions and authentication and limit opportunities for adversaries to increase privileges by preventing Privilege Escalation opportunities.&lt;br /&gt;['T1574.004', 'T1157']: Set directory access controls to prevent file writes to the search paths for applications, both in the folders where applications are run from and the standard dylib folders.&lt;br /&gt;['T1037.003', 'T1037.002', 'T1037']: Restrict write access to logon scripts to specific administrators.&lt;br /&gt;['T1098.004']: Restrict access to the &lt;code&gt;authorized_keys&lt;/code&gt; file.&lt;br /&gt;['T1034']: Require that all executables be placed in write-protected directories.&lt;br /&gt;['T1565.003', 'T1494']: Prevent critical business and system processes from being replaced, overwritten, or reconfigured to load potentially malicious code.&lt;br /&gt;['T1552.004', 'T1145']: Ensure permissions are properly set on folders containing sensitive private keys to prevent unintended access.&lt;br /&gt;['T1055.009']: Restrict the permissions on sensitive files such as &lt;code&gt;/proc/[pid]/maps&lt;/code&gt; or &lt;code&gt;/proc/[pid]/mem&lt;/code&gt;. &lt;br /&gt;['T1169', 'T1548.003', 'T1548', 'T1548.003', 'T1548.003']: The sudoers file should be strictly edited such that passwords are always required and that users can't spawn risky processes as users with higher privilege.&lt;br /&gt;['T1574.007', 'T1574.008', 'T1574.009']: Ensure that proper permissions and directory access control are set to deny users the ability to write files to the top-level directory &lt;code&gt;C:&lt;/code&gt; and system directories, such as &lt;code&gt;C:\Windows\&lt;/code&gt;, to reduce places where malicious files could be placed for execution. Require that all executables be placed in write-protected directories.&lt;br /&gt;['T1562.006', 'T1054']: Ensure event tracers/forwarders (Citation: Microsoft ETW May 2018), firewall policies, and other associated mechanisms are secured with appropriate permissions and access controls.&lt;br /&gt;['T1089']: Ensure proper process, Registry, and file permissions are in place to prevent adversaries from disabling or interfering with security services.&lt;br /&gt;['T1547.013']: Restrict write access to XDG autostart entries to only select privileged users.&lt;br /&gt;['T1073', 'T1574.002']: Install software in write-protected locations.&lt;br /&gt;['T1504', 'T1546.013']: Making PowerShell profiles immutable and only changeable by certain administrators will limit the ability for adversaries to easily create user level persistence.&lt;br /&gt;['T1543.001']: Set group policies to restrict file permissions to the &lt;code&gt;~/launchagents&lt;/code&gt; folder.(Citation: piazza launch agent mitigation)&lt;br /&gt;['T1574']: Install software in write-protected locations. Set directory access controls to prevent file writes to the search paths for applications, both in the folders where applications are run from and the standard library folders.&lt;br /&gt;['T1036']: Use file system access controls to protect folders such as C:\\Windows\\System32.&lt;br /&gt;['T1563.001', 'T1184', 'T1184', 'T1184']: Ensure proper file permissions are set and harden system to prevent root privilege escalation opportunities.&lt;br /&gt;['T1552', 'T1081', 'T1552.001']: Restrict file shares to specific directories with access only to necessary users.&lt;br /&gt;['T1543.002', 'T1501']: Restrict read/write access to systemd unit files to only select privileged users who have a legitimate need to manage system services.&lt;br /&gt;['T1070.003']: Preventing users from deleting or writing to certain files can stop adversaries from maliciously altering their &lt;code&gt;~/.bash_history&lt;/code&gt; or &lt;code&gt;ConsoleHost_history.txt&lt;/code&gt; files.&lt;br /&gt;['T1543']: Restrict read/write access to system-level process files to only select privileged users who have a legitimate need to manage system services.&lt;br /&gt;['T1556']: Restrict write access to the /Library/Security/SecurityAgentPlugins directory.&lt;br /&gt;['T1562']: Ensure proper process and file permissions are in place to prevent adversaries from disabling or interfering with security/logging services.&lt;br /&gt;['T1051']: Disable execution on directories within the webroot. Ensure proper permissions on directories that are accessible through a Web server.&lt;br /&gt;['T1546.004', 'T1156']: Making these files immutable and only changeable by certain administrators will limit the ability for adversaries to easily create user level persistence.&lt;br /&gt;['T1530']: Use access control lists on storage systems and objects.&lt;br /&gt;['T1569', 'T1569.002']: Ensure that high permission level service binaries cannot be replaced or modified by users with a lower permission level.&lt;br /&gt;['T1489']: Ensure proper process and file permissions are in place to inhibit adversaries from disabling or interfering with critical services.&lt;br /&gt;['T1562.004']: Ensure proper process and file permissions are in place to prevent adversaries from disabling or modifying firewall settings.&lt;br /&gt;['T1198', 'T1553.003']: Restrict storage and execution of SIP DLLs to protected directories, such as C:\\Windows, rather than user directories.&lt;br /&gt;['T1146']: Preventing users from deleting or writing to certain files can stop adversaries from maliciously altering their &lt;code&gt;~/.bash_history&lt;/code&gt; files.&lt;br /&gt;['T1080']: Protect shared folders by minimizing users who have write access.&lt;br /&gt;['T1562.001']: Ensure proper process and file permissions are in place to prevent adversaries from disabling or interfering with security services.&lt;br /&gt;['T1547.011', 'T1150']: Prevent plist files from being modified by users by making them read-only.&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Mitre ATT&amp;CK Mitigation M1022" url="https://attack.mitre.org/mitigations/M1022"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:02.182">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-M1021" name="Restrict Web-Based Content" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>Restrict use of certain websites, block downloads/attachments, block Javascript, restrict browser extensions, etc.&lt;br /&gt;&lt;p&gt;Detailed mitigations per technique:&lt;/p&gt;&lt;br /&gt;['T1102.002', 'T1102.001', 'T1102', 'T1102.003']: Web proxies can be used to enforce external network communication policy that prevents use of unauthorized external services.&lt;br /&gt;['T1566.002', 'T1192']: Determine if certain websites that can be used for spearphishing are necessary for business operations and consider blocking access if activity cannot be monitored well or if it poses a significant risk.&lt;br /&gt;['T1528']: Administrators can block end-user consent to OAuth applications, disabling users from authorizing third-party apps through OAuth 2.0 and forcing administrative consent for all requests. They can also block end-user registration of applications by their users, to reduce risk. A Cloud Access Security Broker can also be used to ban applications.

Azure offers a couple of enterprise policy settings in the Azure Management Portal that may help:

"Users -&gt; User settings -&gt; App registrations: Users can register applications" can be set to "no" to prevent users from registering new applications. 
"Enterprise applications -&gt; User settings -&gt; Enterprise applications: Users can consent to apps accessing company data on their behalf" can be set to "no" to prevent users from consenting to allow third-party multi-tenant applications&lt;br /&gt;['T1527']: Update corporate policies to restrict what types of third-party applications may be added to any online service or tool that is linked to the company's information, accounts or network (example: Google, Microsoft, Dropbox, Basecamp, GitHub). However, rather than providing high-level guidance on this, be extremely specific-include a list of pre-approved applications and deny all others not on the list. Administrators may also block end-user consent through administrative portals, such as the Azure Portal, disabling users from authorizing third-party apps through OAuth and forcing administrative consent.(Citation: Microsoft Azure AD Admin Consent)&lt;br /&gt;['T1223']: Consider blocking download/transfer and execution of potentially uncommon file types known to be used in adversary campaigns, such as CHM files.&lt;br /&gt;['T1218.001']: Consider blocking download/transfer and execution of potentially uncommon file types known to be used in adversary campaigns, such as CHM files&lt;br /&gt;['T1483', 'T1568.002']: In some cases a local DNS sinkhole may be used to help prevent DGA-based command and control at a reduced cost.&lt;br /&gt;['T1568']: In some cases a local DNS sinkhole may be used to help prevent behaviors associated with dynamic resolution.&lt;br /&gt;['T1204', 'T1204.001']: If a link is being visited by a user, block unknown or unused files in transit by default that should not be downloaded or by policy from suspicious sites as a best practice to prevent some vectors, such as .scr, .exe, .pif, .cpl, etc. Some download scanning devices can open and analyze compressed and encrypted formats, such as zip and rar that may be used to conceal malicious files.&lt;br /&gt;['T1189']: For malicious code served up through ads, adblockers can help prevent that code from executing in the first place.

Script blocking extensions can help prevent the execution of JavaScript that may commonly be used during the exploitation process.&lt;br /&gt;['T1566.003', 'T1194']: Determine if certain social media sites, personal webmail services, or other service that can be used for spearphishing is necessary for business operations and consider blocking access if activity cannot be monitored well or if it poses a significant risk.&lt;br /&gt;['T1193']: Block unknown or unused attachments by default that should not be transmitted over email as a best practice to prevent some vectors, such as .scr, .exe, .pif, .cpl, etc. Some email scanning devices can open and analyze compressed and encrypted formats, such as zip and rar that may be used to conceal malicious attachments in [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027).&lt;br /&gt;['T1567', 'T1567.002', 'T1567.001']: Web proxies can be used to enforce an external network communication policy that prevents use of unauthorized external services.&lt;br /&gt;['T1550.001']: Update corporate policies to restrict what types of third-party applications may be added to any online service or tool that is linked to the company's information, accounts or network (e.g., Google, Microsoft, Dropbox, Basecamp, GitHub). However, rather than providing high-level guidance on this, be extremely specific-include a list of per-approved applications and deny all others not on the list. Administrators may also block end-user consent through administrative portals, such as the Azure Portal, disabling users from authorizing third-party apps through OAuth and forcing administrative consent.(Citation: Microsoft Azure AD Admin Consent)&lt;br /&gt;['T1566']: Determine if certain websites or attachment types (ex: .scr, .exe, .pif, .cpl, etc.) that can be used for phishing are necessary for business operations and consider blocking access if activity cannot be monitored well or if it poses a significant risk.&lt;br /&gt;['T1059.005', 'T1059']: Script blocking extensions can help prevent the execution of scripts and HTA files that may commonly be used during the exploitation process. For malicious code served up through ads, adblockers can help prevent that code from executing in the first place.&lt;br /&gt;['T1059.007']: Script blocking extensions can help prevent the execution of JavaScript and HTA files that may commonly be used during the exploitation process. For malicious code served up through ads, adblockers can help prevent that code from executing in the first place.&lt;br /&gt;['T1566.001']: Block unknown or unused attachments by default that should not be transmitted over email as a best practice to prevent some vectors, such as .scr, .exe, .pif, .cpl, etc. Some email scanning devices can open and analyze compressed and encrypted formats, such as zip and rar that may be used to conceal malicious attachments.&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Mitre ATT&amp;CK Mitigation M1021" url="https://attack.mitre.org/mitigations/M1021"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:02.178">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-M1054" name="Software Configuration" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>Implement configuration changes to software (other than the operating system) to mitigate security risks associated to how the software operates.&lt;br /&gt;&lt;p&gt;Detailed mitigations per technique:&lt;/p&gt;&lt;br /&gt;['T1566.002', 'T1598', 'T1566', 'T1566.001', 'T1598.002', 'T1598.003']: Use anti-spoofing and email authentication mechanisms to filter messages based on validity checks of the sender domain (using SPF) and integrity of messages (using DKIM). Enabling these mechanisms within an organization (through policies such as DMARC) may enable recipients (intra-org and cross domain) to perform similar message filtering and validation.(Citation: Microsoft Anti Spoofing)(Citation: ACSC Email Spoofing)&lt;br /&gt;['T1550.004', 'T1539', 'T1506']: Configure browsers or tasks to regularly delete persistent cookies.&lt;br /&gt;['T1602.001', 'T1602']: Allowlist MIB objects and implement SNMP views.(Citation: Cisco Securing SNMP)&lt;br /&gt;['T1553.004', 'T1553']: HTTP Public Key Pinning (HPKP) is one method to mitigate potential [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) situations where and adversary uses a mis-issued or fraudulent certificate to intercept encrypted communications by enforcing use of an expected certificate. (Citation: Wikipedia HPKP)&lt;br /&gt;['T1137.002']: Create the Registry key used to execute it and set the permissions to "Read Control" to prevent easy access to the key without administrator permissions or requiring Privilege Escalation.(Citation: Palo Alto Office Test Sofacy)&lt;br /&gt;['T1559', 'T1559.002', 'T1173']: Consider disabling embedded files in Office programs, such as OneNote, that do not work with Protected View.(Citation: Enigma Reviving DDE Jan 2018)(Citation: GitHub Disable DDEAUTO Oct 2017)&lt;br /&gt;['T1535']: Cloud service providers may allow customers to deactivate unused regions.(Citation: CloudSploit - Unused AWS Regions)&lt;br /&gt;['T1562.006', 'T1054']: Consider automatically relaunching forwarding mechanisms at recurring intervals (ex: temporal, on-logon, etc.) as well as applying appropriate change management to firewall rules and other related system configurations.&lt;br /&gt;['T1130']: HTTP Public Key Pinning (HPKP) is one method to mitigate potential man-in-the-middle situations where and adversary uses a mis-issued or fraudulent certificate to intercept encrypted communications by enforcing use of an expected certificate. (Citation: Wikipedia HPKP)&lt;br /&gt;['T1602.002']: Allowlist MIB objects and implement SNMP views. Disable Smart Install (SMI) if not used.(Citation: Cisco Securing SNMP)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018) &lt;br /&gt;['T1504']: Avoid PowerShell profiles if not needed. Use the &lt;code&gt;-No Profile&lt;/code&gt; flag with when executing PowerShell scripts remotely to prevent local profiles and scripts from being executed. &lt;br /&gt;['T1546.013']: Avoid PowerShell profiles if not needed. Use the -No Profile flag with when executing PowerShell scripts remotely to prevent local profiles and scripts from being executed.&lt;br /&gt;['T1555.005']: Consider re-locking password managers after a short timeout to limit the time plaintext credentials live in memory from decrypted databases.&lt;br /&gt;['T1606']: Configure browsers/applications to regularly delete persistent web credentials (such as cookies).&lt;br /&gt;['T1606.001']: Configure browsers/applications to regularly delete persistent web cookies.&lt;br /&gt;['T1137']: For the Office Test method, create the Registry key used to execute it and set the permissions to "Read Control" to prevent easy access to the key without administrator permissions or requiring Privilege Escalation. (Citation: Palo Alto Office Test Sofacy)&lt;br /&gt;['T1562.009']: Ensure that endpoint defenses run in safe mode.(Citation: CyberArk Labs Safe Mode 2016)&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Mitre ATT&amp;CK Mitigation M1054" url="https://attack.mitre.org/mitigations/M1054"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:02.280">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-DS0002" name="User Account" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>A profile representing a user, device, service, or application used to authenticate and access resources&lt;br /&gt;&lt;p&gt;Detailed detections per technique:&lt;/p&gt;&lt;br /&gt;['T1110.002']:  Monitor for many failed authentication attempts across various accounts that may result from password spraying attempts. It is difficult to detect when hashes are cracked, since this is generally done outside the scope of the target network. (ex: Windows EID 4625 or 5379)&lt;br /&gt;['T1078.002']: Monitor for an attempt by a user to gain access to a network or computing resource, often by the use of domain authentication services, such as the System Security Services Daemon (sssd) on Linux&lt;br /&gt;['T1078.004']: Monitor the activity of cloud accounts to detect abnormal or malicious behavior, such as accessing information outside of the normal function of the account or account usage at atypical hours.&lt;br /&gt;['T1552.007']: It may be possible to detect adversary use of credentials they have obtained such as in [Valid Accounts](https://attack.mitre.org/techniques/T1078).&lt;br /&gt;['T1070']: Monitor for an attempt by a user to gain access to a network or computing resource, often by providing credentials that may delete or alter generated artifacts on a host system, including logs or captured files such as quarantined malware.&lt;br /&gt;['T1550.003']: Audit all Kerberos authentication and credential use events and review for discrepancies. Unusual remote authentication events that correlate with other suspicious activity (such as writing and executing binaries) may indicate malicious activity.&lt;br /&gt;['T1621']: Monitor user account logs for suspicious events: unusual login attempt source location, mismatch in location of login attempt and smart device receiving 2FA/MFA request prompts, and high volume of repeated login attempts, all of which may indicate user's primary credentials have been compromised minus 2FA/MFA mechanism.&lt;br /&gt;['T1212']: Credential resources obtained through exploitation may be detectable in use if they are not normally used or seen.&lt;br /&gt;['T1110']:  Monitor for many failed authentication attempts across various accounts that may result from password spraying attempts. It is difficult to detect when hashes are cracked, since this is generally done outside the scope of the target network.&lt;br /&gt;['T1606.002']: Monitor for user authentication attempts, when requesting access tokens to services, that failed because of Conditional Access Policies (CAP). Some SAML tokens features, such as the location of a user, may not be as easy to claim.&lt;br /&gt;['T1207']: Investigate usage of Kerberos Service Principal Names (SPNs), especially those associated with services (beginning with "GC/") by computers not present in the DC organizational unit (OU). The SPN associated with the Directory Replication Service (DRS) Remote Protocol interface (GUID E3514235-4B06-11D1-AB04-00C04FC2DCD2) can be set without logging.(Citation: ADDSecurity DCShadow Feb 2018) A rogue DC must authenticate as a service using these two SPNs for the replication process to successfully complete.&lt;br /&gt;['T1552.005']: It may be possible to detect adversary use of credentials they have obtained such as in [Valid Accounts](https://attack.mitre.org/techniques/T1078).&lt;br /&gt;['T1078.001']: Monitor for an attempt by a user to gain access to a network or computing resource, often by providing credentials&lt;br /&gt;['T1550.002']: Monitor for user authentication attempts. From a classic Pass-The-Hash perspective, this technique uses a hash through the NTLMv1 / NTLMv2 protocol to authenticate against a compromised endpoint. This technique does not touch Kerberos. Therefore, NTLM LogonType 3 authentications that are not associated to a domain login and are not anonymous logins are suspicious. From an Over-Pass-The-Hash perspective, an adversary wants to exchange the hash for a Kerberos authentication ticket (TGT). One way to do this is by creating a sacrificial logon session with dummy credentials (LogonType 9) and then inject the hash into that session which triggers the Kerberos authentication process.&lt;br /&gt;['T1070.005']: Monitoring for Windows authentication logs are also useful in determining when authenticated network shares are established and by which account, and can be used to correlate network share activity to other events to investigate potentially malicious activity.&lt;br /&gt;['T1078']: Monitor for an attempt by a user that may obtain and abuse credentials of existing accounts as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. &lt;br /&gt;['T1070.003']: Monitor for an attempts by a user to gain access to a network or computing resource, often by providing credentials via remote terminal services, that do not have a corresponding entry in a command history file.&lt;br /&gt;['T1550']: Monitor for an attempt by a user to gain access to a network or computing resource, often by providing credentials that may use alternate authentication material, such as password hashes, Kerberos tickets, and application access tokens, in order to move laterally within an environment and bypass normal system access controls.&lt;br /&gt;['T1538']: Correlate other security systems with login information&lt;br /&gt;['T1552']: Monitor for an attempt by a user to gain access to a network or computing resource, often by providing credentials that may search compromised systems to find and obtain insecurely stored credentials.&lt;br /&gt;['T1564.002']: Monitor for newly constructed user accounts, such as userIDs under 500 on macOS, that may mask the presence of user accounts they create or modify.&lt;br /&gt;['T1136.003']: Monitor for newly constructed user accounts through the collection of usage logs from cloud user and administrator accounts to identify unusual activity in the creation of new accounts and assignment of roles to those accounts. Monitor for accounts assigned to admin roles that go over a certain threshold of known admins.&lt;br /&gt;['T1136.001']: Monitor for newly constructed user accounts through account audits to detect suspicious accounts that may have been created by an adversary. Collect data on account creation within a network or Windows Event ID 4720 (for when a user account is created on a Windows system and domain controller).&lt;br /&gt;['T1564']: Monitor for newly constructed user accounts that may attempt to hide artifacts associated with their behaviors to evade detection.&lt;br /&gt;['T1531']: Monitor for unexpected deletions of user accounts. Windows event logs may designate activity associated with an adversary's attempt to remove an account (ex: Event ID 4726 - A user account was deleted).

Alerting on these Event IDs may generate a high degree of false positives, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible.&lt;br /&gt;['T1098.001']: Monitor Azure Activity Logs for Service Principal and Application modifications. Monitor for the usage of APIs that create or import SSH keys, particularly by unexpected users or accounts such as the root account.&lt;br /&gt;['T1528']: Administrators should set up monitoring to trigger automatic alerts when policy criteria are met. For example, using a Cloud Access Security Broker (CASB), admins can create a "High severity app permissions" policy that generates alerts if apps request high severity permissions or send permissions requests for too many users.
Security analysts can hunt for malicious apps using the tools available in their CASB, identity provider, or resource provider (depending on platform.) For example, they can filter for apps that are authorized by a small number of users, apps requesting high risk permissions, permissions incongruous with the app's purpose, or apps with old "Last authorized" fields. A specific app can be investigated using an activity log displaying activities the app has performed, although some activities may be mis-logged as being performed by the user. App stores can be useful resources to further investigate suspicious apps.
Administrators can set up a variety of logs and leverage audit tools to monitor actions that can be conducted as a result of OAuth 2.0 access. For instance, audit reports enable admins to identify privilege escalation actions such as role creations or policy modifications, which could be actions performed after initial access.&lt;br /&gt;['T1531']: Monitor for changes made to user accounts for unexpected modification of properties, such as passwords or status (enabled/disabled). Windows event logs may designate activity associated with an adversary's attempt to remove access to an account:
Event ID 4723 - An attempt was made to change an account's password
Event ID 4724 - An attempt was made to reset an account's password
Event ID 4725 - A user account was disabled

Alerting on these Event IDs may generate a high degree of false positives, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible.&lt;br /&gt;['T1098.003']: Collect usage logs from cloud administrator accounts to identify unusual activity in the assignment of roles to those accounts. Monitor for accounts assigned to admin roles that go over a certain threshold of known admins.&lt;br /&gt;['T1098.005']: Monitor user accounts for new and suspicious device associations, such as those originating from unusual sources, occurring at unusual times, or following a suspicious login.(Citation: Microsoft DEV-0537) &lt;br /&gt;['T1098.002']: Monitor for unusual Exchange and Office 365 email account permissions changes that may indicate excessively broad permissions being granted to compromised accounts.&lt;br /&gt;['T1098']: Monitor events for changes to account objects and/or permissions on systems and the domain, such as event IDs 4738, 4728 and 4670. Monitor for modification of accounts in correlation with other suspicious activity. Changes may occur at unusual times or from unusual systems. Especially flag events where the subject and target accounts differ or that include additional flags such as changing a password without knowledge of the old password.

Monitor for unusual permissions changes that may indicate excessively broad permissions being granted to compromised accounts.&lt;br /&gt;['T1201']: Monitor for contextual data about an account that may attempt to access detailed information about the password policy used within an enterprise network or cloud environment.&lt;br /&gt;['T1134']: Monitor for contextual data about an account, which may include a username, user ID, environmental data, etc. that may modify access tokens to operate under a different user or system security context to perform actions and bypass access controls.&lt;br /&gt;['T1134.005']: Examine data in user's SID-History attributes&lt;br /&gt;['T1564.002']: Monitor for contextual data about an account, which may include a username, user ID, environmental data that may mask the presence of user accounts they create or modify. On macOS, identify users with an userID under 500 and the &lt;code&gt;Hide500Users&lt;/code&gt; key value in the &lt;code&gt;/Library/Preferences/com.apple.loginwindow&lt;/code&gt; plist file set to &lt;code&gt;TRUE&lt;/code&gt;.(Citation: Cybereason OSX Pirrit)&lt;br /&gt;['T1556.005']: Monitor Fine-Grained Password Policies and regularly audit user accounts and group settings.(Citation: dump_pwd_dcsync)&lt;br /&gt;['T1564']: Monitor for contextual data about an account, which may include a username, user ID, environmental data that may attempt to hide artifacts associated with their behaviors to evade detection.&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Mitre ATT&amp;CK Data Source DS0002" url="https://attack.mitre.org/datasources/DS0002"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:02.087">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-DS0006" name="Web Credential" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="" source="MANUAL" edited="false" stateChangeSource="" priority="">
          <desc>Credential material, such as session cookies or tokens, used to authenticate to web applications and services(Citation: Medium Authentication Tokens)(Citation: Auth0 Access Tokens)&lt;br /&gt;&lt;p&gt;Detailed detections per technique:&lt;/p&gt;&lt;br /&gt;['T1606.002']: Monitor for the use of access tokens to access services such as email that were created using SAML tokens which do not have corresponding 1202 events (i.e. "The Federation Service validated a new credential") in the domain.(Citation: Sygnia Golden SAML)&lt;br /&gt;['T1606']: Monitor for the use of Access Tokens to access services such as Email that were created using SAML tokens which do not have corresponding 1202 events in the domain.(Citation: Sygnia Golden SAML)&lt;br /&gt;['T1550.001']: Monitor the use of application access tokens to interact with resources or services that do not fit the organization baseline. For example, an application, that is not meant to read emails, is now accessing users' mail boxes and, potentially, exfiltrating sensitive data.&lt;br /&gt;['T1550']: Monitor for an attempt by a user to gain access to a network or computing resource by providing web credentials (ex: Windows EID 1202) that may use alternate authentication material, such as password hashes, Kerberos tickets, and application access tokens, in order to move laterally within an environment and bypass normal system access controls.&lt;br /&gt;['T1606.001']: Monitor for the usage of unexpected or unusual cookies to access resources and services. Forged web cookies may be associated with unknown accounts and could be the result of compromised secrets such as passwords or [Private Keys](https://attack.mitre.org/techniques/T1552/004).&lt;br /&gt;['T1550.004']: Monitor for anomalous access of websites and cloud-based applications by the same user in different locations or by different systems that do not match expected configurations.&lt;br /&gt;['T1606.002']: Monitor for creation of access tokens using SAML tokens which do not have corresponding 4769 and 1200 events in the domain.(Citation: Sygnia Golden SAML)&lt;br /&gt;</desc>
          <implementations/>
          <references>
            <reference name="Auth0 Access Tokens" url="https://auth0.com/docs/tokens/access-tokens"/>
            <reference name="Medium Authentication Tokens" url="https://medium.com/@sherryhsu/session-vs-token-based-authentication-11a6c5ac45e4"/>
            <reference name="Mitre ATT&amp;CK Data Source DS0006" url="https://attack.mitre.org/datasources/DS0006"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-11-14T07:16:02.091">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="internal-spearphishing" name="Internal Spearphishing" desc="" library="">
          <threats>
            <threat ref="T-T1534" name="Internal Spearphishing" state="Expose" source="MANUAL" edited="false" owner="JamesRabe" library="" editable="true">
              <desc>Adversaries may use internal spearphishing to gain access to additional information or exploit other users within the same organization after they already have access to accounts or systems within the environment. Internal spearphishing is multi-staged campaign where an email account is owned either by controlling the user's device with previously installed malware or by compromising the account credentials of the user. Adversaries attempt to take advantage of a trusted internal account to increase the likelihood of tricking the target into falling for the phish attempt.(Citation: Trend Micro When Phishing Starts from the Inside 2017)&lt;br&gt;&lt;br&gt;Adversaries may leverage [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001) or [Spearphishing Link](https://attack.mitre.org/techniques/T1566/002) as part of internal spearphishing to deliver a payload or redirect to an external site to capture credentials through [Input Capture](https://attack.mitre.org/techniques/T1056) on sites that mimic email login interfaces.&lt;br&gt;&lt;br&gt;There have been notable incidents where internal spearphishing has been used. The Eye Pyramid campaign used phishing emails with malicious attachments for lateral movement between victims, compromising nearly 18,000 email accounts in the process.(Citation: Trend Micro When Phishing Starts from the Inside 2017) The Syrian Electronic Army (SEA) compromised email accounts at the Financial Times (FT) to steal additional account credentials. Once FT learned of the campaign and began warning employees of the threat, the SEA sent phishing emails mimicking the Financial Times IT department and were able to compromise even more users.(Citation: THE FINANCIAL TIMES LTD 2019.)&lt;br&gt;&lt;br&gt;Network intrusion detection systems and email gateways usually do not scan internal email, but an organization can leverage the journaling-based solution which sends a copy of emails to a security service for offline analysis or incorporate service-integrated solutions using on-premise or API-based integrations to help detect internal spearphishing campaigns.(Citation: Trend Micro When Phishing Starts from the Inside 2017)</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references>
                <reference name="Mitre ATT&amp;CK Technique T1534" url="https://attack.mitre.org/techniques/T1534"/>
                <reference name="THE FINANCIAL TIMES LTD 2019." url="https://labs.ft.com/2013/05/a-sobering-day/?mhq5j=e6"/>
                <reference name="Trend Micro When Phishing Starts from the Inside 2017" url="https://blog.trendmicro.com/phishing-starts-inside/"/>
              </references>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-DS0015" mitigation="50"/>
                <countermeasure ref="C-DS0029" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="taint-shared-content" name="Taint Shared Content" desc="" library="">
          <threats>
            <threat ref="T-T1080" name="Taint Shared Content" state="Expose" source="MANUAL" edited="false" owner="JamesRabe" library="" editable="true">
              <desc>&lt;br&gt;Adversaries may deliver payloads to remote systems by adding content to shared storage locations, such as network drives or internal code repositories. Content stored on network drives or in other shared locations may be tainted by adding malicious programs, scripts, or exploit code to otherwise valid files. Once a user opens the shared tainted content, the malicious portion can be executed to run the adversary's code on a remote system. Adversaries may use tainted shared content to move laterally.&lt;br&gt;&lt;br&gt;A directory share pivot is a variation on this technique that uses several other techniques to propagate malware when users access a shared network directory. It uses [Shortcut Modification](https://attack.mitre.org/techniques/T1547/009) of directory .LNK files that use [Masquerading](https://attack.mitre.org/techniques/T1036) to look like the real directories, which are hidden through [Hidden Files and Directories](https://attack.mitre.org/techniques/T1564/001). The malicious .LNK-based directories have an embedded command that executes the hidden malware file in the directory and then opens the real intended directory so that the user's expected action still occurs. When used with frequently used network directories, the technique may result in frequent reinfections and broad access to systems and potentially to new and higher privileged accounts. (Citation: Retwin Directory Share Pivot)&lt;br&gt;&lt;br&gt;Adversaries may also compromise shared network directories through binary infections by appending or prepending its code to the healthy binary on the shared network directory. The malware may modify the original entry point (OEP) of the healthy binary to ensure that it is executed before the legitimate code. The infection could continue to spread via the newly infected file when it is executed by a remote system. These infections may target both binary and non-binary formats that end with extensions including, but not limited to, .EXE, .DLL, .SCR, .BAT, and/or .VBS.&lt;br&gt;&lt;br&gt;Processes that write or overwrite many files to a network shared directory may be suspicious. Monitor processes that are executed from removable media for malicious or abnormal activity such as network connections due to Command and Control and possible network Discovery techniques.&lt;br&gt;&lt;br&gt;Frequently scan shared network directories for malicious files, hidden files, .LNK files, and other file types that may not typical exist in directories used to share specific types of content.</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references>
                <reference name="CAPEC-562" url="https://capec.mitre.org/data/definitions/562.html"/>
                <reference name="Mitre ATT&amp;CK Technique T1080" url="https://attack.mitre.org/techniques/T1080"/>
                <reference name="Retwin Directory Share Pivot" url="https://rewtin.blogspot.ch/2017/11/abusing-user-shares-for-efficient.html"/>
              </references>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-DS0009" mitigation="20"/>
                <countermeasure ref="C-DS0022" mitigation="16"/>
                <countermeasure ref="C-DS0033" mitigation="16"/>
                <countermeasure ref="C-M1022" mitigation="16"/>
                <countermeasure ref="C-M1038" mitigation="16"/>
                <countermeasure ref="C-M1050" mitigation="16"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="use-alternate-authentication-material" name="Use Alternate Authentication Material" desc="" library="">
          <threats>
            <threat ref="T-T1550.001" name="Application Access Token" state="Expose" source="MANUAL" edited="false" owner="JamesRabe" library="" editable="true">
              <desc>Adversaries may use stolen application access tokens to bypass the typical authentication process and access restricted accounts, information, or services on remote systems. These tokens are typically stolen from users or services and used in lieu of login credentials.&lt;br&gt;&lt;br&gt;Application access tokens are used to make authorized API requests on behalf of a user or service and are commonly used as a way to access resources in cloud and container-based applications and software-as-a-service (SaaS).(Citation: Auth0 - Why You Should Always Use Access Tokens to Secure APIs Sept 2019) &lt;br&gt;&lt;br&gt;In AWS and GCP environments, adversaries can trigger a request for a short-lived access token with the privileges of another user account.(Citation: Google Cloud Service Account Credentials)(Citation: AWS Temporary Security Credentials) The adversary can then use this token to request data or perform actions the original account could not. If permissions for this feature are misconfigured - for example, by allowing all users to request a token for a particular account - an adversary may be able to gain initial access to a Cloud Account or escalate their privileges.(Citation: Rhino Security Labs Enumerating AWS Roles)&lt;br&gt;&lt;br&gt;OAuth is one commonly implemented framework that issues tokens to users for access to systems. These frameworks are used collaboratively to verify the user and determine what actions the user is allowed to perform. Once identity is established, the token allows actions to be authorized, without passing the actual credentials of the user. Therefore, compromise of the token can grant the adversary access to resources of other sites through a malicious application.(Citation: okta)&lt;br&gt;&lt;br&gt;For example, with a cloud-based email service once an OAuth access token is granted to a malicious application, it can potentially gain long-term access to features of the user account if a "refresh" token enabling background access is awarded.(Citation: Microsoft Identity Platform Access 2019) With an OAuth access token an adversary can use the user-granted REST API to perform functions such as email searching and contact enumeration.(Citation: Staaldraad Phishing with OAuth 2017)&lt;br&gt;&lt;br&gt;Compromised access tokens may be used as an initial step in compromising other services. For example, if a token grants access to a victim's primary email, the adversary may be able to extend access to all other services which the target subscribes by triggering forgotten password routines. Direct API access through a token negates the effectiveness of a second authentication factor and may be immune to intuitive countermeasures like changing passwords. Access abuse over an API channel can be difficult to detect even from the service provider end, as the access can still align well with a legitimate workflow.&lt;br&gt;&lt;br&gt;Monitor access token activity for abnormal use and permissions granted to unusual or suspicious applications and APIs. Additionally, administrators should review logs for calls to the AWS Security Token Service (STS) and usage of GCP service accounts in order to identify anomalous actions.(Citation: AWS Logging IAM Calls)(Citation: GCP Monitoring Service Account Usage)</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references>
                <reference name="AWS Logging IAM Calls" url="https://docs.aws.amazon.com/IAM/latest/UserGuide/cloudtrail-integration.html"/>
                <reference name="AWS Temporary Security Credentials" url="https://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_temp_request.html"/>
                <reference name="Auth0 - Why You Should Always Use Access Tokens to Secure APIs Sept 2019" url="https://auth0.com/blog/why-should-use-accesstokens-to-secure-an-api/"/>
                <reference name="CAPEC-593" url="https://capec.mitre.org/data/definitions/593.html"/>
                <reference name="GCP Monitoring Service Account Usage" url="https://cloud.google.com/iam/docs/service-account-monitoring"/>
                <reference name="Google Cloud Service Account Credentials" url="https://cloud.google.com/iam/docs/creating-short-lived-service-account-credentials"/>
                <reference name="Microsoft Identity Platform Access 2019" url="https://docs.microsoft.com/en-us/azure/active-directory/develop/access-tokens"/>
                <reference name="Mitre ATT&amp;CK Technique T1550.001" url="https://attack.mitre.org/techniques/T1550/001"/>
                <reference name="Rhino Security Labs Enumerating AWS Roles" url="https://rhinosecuritylabs.com/aws/assume-worst-aws-assume-role-enumeration"/>
                <reference name="Staaldraad Phishing with OAuth 2017" url="https://staaldraad.github.io/2017/08/02/o356-phishing-with-oauth/"/>
                <reference name="okta" url="https://developer.okta.com/blog/2018/06/20/what-happens-if-your-jwt-is-stolen"/>
              </references>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-DS0002" mitigation="16"/>
                <countermeasure ref="C-DS0006" mitigation="12"/>
                <countermeasure ref="C-DS0015" mitigation="12"/>
                <countermeasure ref="C-DS0026" mitigation="12"/>
                <countermeasure ref="C-DS0028" mitigation="12"/>
                <countermeasure ref="C-M1021" mitigation="12"/>
                <countermeasure ref="C-M1041" mitigation="12"/>
                <countermeasure ref="C-M1047" mitigation="12"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="T-T1550.004" name="Web Session Cookie" state="Expose" source="MANUAL" edited="false" owner="JamesRabe" library="" editable="true">
              <desc>Adversaries can use stolen session cookies to authenticate to web applications and services. This technique bypasses some multi-factor authentication protocols since the session is already authenticated.(Citation: Pass The Cookie)&lt;br&gt;&lt;br&gt;Authentication cookies are commonly used in web applications, including cloud-based services, after a user has authenticated to the service so credentials are not passed and re-authentication does not need to occur as frequently. Cookies are often valid for an extended period of time, even if the web application is not actively used. After the cookie is obtained through [Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539) or [Web Cookies](https://attack.mitre.org/techniques/T1606/001), the adversary may then import the cookie into a browser they control and is then able to use the site or application as the user for as long as the session cookie is active. Once logged into the site, an adversary can access sensitive information, read email, or perform actions that the victim account has permissions to perform.&lt;br&gt;&lt;br&gt;There have been examples of malware targeting session cookies to bypass multi-factor authentication systems.(Citation: Unit 42 Mac Crypto Cookies January 2019)&lt;br&gt;&lt;br&gt;Monitor for anomalous access of websites and cloud-based applications by the same user in different locations or by different systems that do not match expected configurations.</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references>
                <reference name="CAPEC-60" url="https://capec.mitre.org/data/definitions/60.html"/>
                <reference name="Mitre ATT&amp;CK Technique T1550.004" url="https://attack.mitre.org/techniques/T1550/004"/>
                <reference name="Pass The Cookie" url="https://wunderwuzzi23.github.io/blog/passthecookie.html"/>
                <reference name="Unit 42 Mac Crypto Cookies January 2019" url="https://unit42.paloaltonetworks.com/mac-malware-steals-cryptocurrency-exchanges-cookies/"/>
              </references>
              <weaknesses/>
              <countermeasures>
                <countermeasure ref="C-DS0002" mitigation="20"/>
                <countermeasure ref="C-DS0006" mitigation="16"/>
                <countermeasure ref="C-DS0015" mitigation="16"/>
                <countermeasure ref="C-DS0026" mitigation="16"/>
                <countermeasure ref="C-DS0028" mitigation="16"/>
                <countermeasure ref="C-M1054" mitigation="16"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
  </components>
</template>
