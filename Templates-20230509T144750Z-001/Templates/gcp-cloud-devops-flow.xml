<?xml version="1.0" encoding="UTF-8"?>
<template ref="gcp-cloud-devops-flow" name="GCP - Cloud DevOps Flow" tags="">
  <desc/>
  <diagram draft="false">
    <schema></schema>
  </diagram>
  <trustZones>
    <trustZone ref="public" uuid="6376d53e-6461-412b-8e04-7b3fe2b397de" name="Public" desc="Untrusted public zone" trustRating="1"/>
  </trustZones>
  <questions/>
  <assets/>
  <settings/>
  <dataflows>
    <dataflow name="Release Creation Cloud Deploy -&gt; Promote Cloud Deploy" ref="08f00d0d-14bc-4746-b78d-22d73a6e5e57" source="2a9b477e-cc07-489e-b628-8a3564823b25" target="afcb970c-d2b1-44b4-8780-5edac88c35a2">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Test Rollout Cloud Deploy -&gt; Test Environment" ref="10202cb1-c5cd-4582-b754-452b9bc41938" source="23661149-13d9-4aae-b824-a1b407f8a522" target="898a2964-a04e-4a74-9466-90970aa846ae">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Cloud Build -&gt; Release Creation Cloud Deploy" ref="234b06d7-8189-4097-87a6-36e9937599fb" source="3cc36ea1-ecb2-446c-b513-41c4b942e401" target="2a9b477e-cc07-489e-b628-8a3564823b25">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Image Storage (Artifact Registry) -&gt; Vuln Scan (Artifact Analysis)" ref="26618089-5d91-462e-9687-22008f573374" source="704dcdc0-6e0c-4adb-99c9-bf0d67f374e1" target="85c13503-98ac-4479-a8f3-b571e6112f5f">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Stage Rollout Cloud Deploy -&gt; Stage Kubernetes Engine" ref="739a0c49-9570-4a57-a80c-fe51c365d6e6" source="c6aa3ce5-524d-4950-8282-0caaf50424b8" target="5944905d-16bd-4603-9427-60b5159cfe73">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Cloud Build -&gt; Image Storage (Artifact Registry)" ref="778e62f0-7bc8-4a5b-80e3-62234d3a8e9d" source="3cc36ea1-ecb2-446c-b513-41c4b942e401" target="704dcdc0-6e0c-4adb-99c9-bf0d67f374e1">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Release Creation Cloud Deploy -&gt; DevOps" ref="7c8a7c18-7708-4012-b980-f7be60013ed2" source="2a9b477e-cc07-489e-b628-8a3564823b25" target="55e525fb-8ad4-4531-bf68-925f74ce75a9">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Image Storage (Artifact Registry) -&gt; Stage Kubernetes Engine" ref="92525bd6-7485-4bcb-b620-cf81b75cbe9a" source="704dcdc0-6e0c-4adb-99c9-bf0d67f374e1" target="5944905d-16bd-4603-9427-60b5159cfe73">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Promote Cloud Deploy -&gt; Prod Rollout Cloud Deploy" ref="a33fdd41-875b-4b39-a276-a12630cadf08" source="afcb970c-d2b1-44b4-8780-5edac88c35a2" target="f6ce585a-d11b-46bb-9020-cbe8c53a09c2">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Release Creation Cloud Deploy -&gt; Test Rollout Cloud Deploy" ref="beddb6d5-1abf-4293-b98c-fd749678fdbf" source="2a9b477e-cc07-489e-b628-8a3564823b25" target="23661149-13d9-4aae-b824-a1b407f8a522">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Promote Cloud Deploy -&gt; Stage Rollout Cloud Deploy" ref="d3cea4a5-f667-42c7-bb38-e8737cc18ab7" source="afcb970c-d2b1-44b4-8780-5edac88c35a2" target="c6aa3ce5-524d-4950-8282-0caaf50424b8">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Image Storage (Artifact Registry) -&gt; Test Kubernetes Engine" ref="d6283434-e5bc-4884-be8d-1722c858c6be" source="704dcdc0-6e0c-4adb-99c9-bf0d67f374e1" target="2a5b5888-e028-4346-9f53-e0b488b227fd">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Source Code Repository -&gt; Cloud Build" ref="daa26d03-1d69-4d7c-a7c5-283ef354442e" source="ea7ae970-9712-4f7b-aa02-fc339ea64bf4" target="3cc36ea1-ecb2-446c-b513-41c4b942e401">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Image Storage (Artifact Registry) -&gt; Prod Kubernetes Engine" ref="eec34e7c-ab9f-491c-98ec-dbbd9479446a" source="704dcdc0-6e0c-4adb-99c9-bf0d67f374e1" target="bbdaa2a7-2ace-4e4e-9b28-b28cc39ee92e">
      <assets/>
      <tags/>
    </dataflow>
  </dataflows>
  <customFields>
    <customField ref="APT" value=""/>
    <customField ref="Application Details" value=""/>
    <customField ref="Application Downtime Cost" value=""/>
    <customField ref="Application Type" value=""/>
    <customField ref="Apply Standard at all times" value="1"/>
    <customField ref="Contact Email" value=""/>
    <customField ref="Custom Field A" value=""/>
    <customField ref="DEL" value=""/>
    <customField ref="GPS Environment" value="NO"/>
    <customField ref="Hosting Location" value="GCP"/>
    <customField ref="Milestone 1" value=""/>
    <customField ref="Milestone 1 - Deadline" value=""/>
    <customField ref="Milestone 2" value=""/>
    <customField ref="Milestone 2 - Deadline" value=""/>
    <customField ref="Milestone 3" value=""/>
    <customField ref="Milestone 3 - Deadline" value=""/>
    <customField ref="Product Review Session Details" value=""/>
    <customField ref="Project Management Details" value=""/>
    <customField ref="Project Manager" value=""/>
    <customField ref="Project Number" value="_::_"/>
    <customField ref="Project Owner Email" value="jrabe@iriusrisk.com"/>
    <customField ref="Ready for Workflow advancement?" value="NO"/>
    <customField ref="Requirements" value=""/>
    <customField ref="Test Custom" value=""/>
    <customField ref="Third Party Contact" value=""/>
    <customField ref="Third Party Organization" value=""/>
    <customField ref="UPS Template Picker" value="GCP Template"/>
    <customField ref="Use Case" value=""/>
    <customField ref="User Email Field" value=""/>
    <customField ref="VZ - Requirements" value="Type 1||Type 2"/>
  </customFields>
  <components>
    <component uuid="2e91a8e0-4e8f-4c35-abb7-d414a314d51d" diagramComponentId="17048881-83f1-4252-a485-f9ed244ac2cb" ref="fbddb6fa-da76-4dfb-95f0-da9e4efb5335" name="DevOps" desc="" library="unece-wp-29-csms" parentComponentRef="2b6cf23c-8c9a-4108-b550-2cb855b0c25b" componentDefinitionRef="end-user">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses>
        <weakness ref="CSMS-4.3.4-15.2" name="Defined security procedures are not followed" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt; &lt;b&gt;Defined security procedures&lt;/b&gt; are not followed&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:54.705">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CSMS-4.3.4-15.1" name="Social engineering" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt; Innocent victim (e.g. owner, operator or maintenance engineer) being &lt;b&gt;tricked into taking an action&lt;/b&gt; to&lt;b&gt; &lt;/b&gt;unintentionally load malware or enable an attack&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:54.705">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="CSMS-M19" name="Define security procedures" issueId="" issueLink="" platform="" cost="0" risk="78" state="Recommended" owner="JamesRabe" library="unece-wp-29-csms-2" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt; Organizations shall ensure security procedures are defined and followed including logging of actions and access related to the management of the security functions&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="NIST 800-53 PS-1 Personnel Security Policy and Procedures" url="https://nvd.nist.gov/800-53/Rev4/control/PS-1"/>
            <reference name="OWASP Logging Cheat Sheet" url="https://cheatsheetseries.owasp.org/cheatsheets/Logging_Cheat_Sheet.html"/>
          </references>
          <standards>
            <standard ref="10.4.2" supportedStandardRef="iso-sae-21434"/>
            <standard ref="10.4.3" supportedStandardRef="iso-sae-21434"/>
            <standard ref="M19" supportedStandardRef="unece-wp29-csms"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:54.672">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CSMS-M18" name="Define user roles and access privileges" issueId="" issueLink="" platform="" cost="0" risk="78" state="Recommended" owner="JamesRabe" library="unece-wp-29-csms-2" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt; Measures shall be implemented for defining and controlling user roles and access privileges, based on the principle of least access privilege&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OWASP WSTG: Testing Role Definitions" url="https://owasp.org/www-project-web-security-testing-guide/latest/4-Web_Application_Security_Testing/03-Identity_Management_Testing/01-Test_Role_Definitions"/>
          </references>
          <standards>
            <standard ref="10.4.2" supportedStandardRef="iso-sae-21434"/>
            <standard ref="10.4.3" supportedStandardRef="iso-sae-21434"/>
            <standard ref="M18" supportedStandardRef="unece-wp29-csms"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:54.672">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="general" name="General" desc="" library="unece-wp-29-csms-2">
          <threats>
            <threat ref="CSMS-4.3.4-15" name="Unintended human actions carried out from outside of vehicles" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="unece-wp-29-csms-2" editable="true">
              <desc>This threat include: 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Legitimate actors are able to take actions that would unwittingly facilitate a cyber-attack&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt;</desc>
              <riskRating confidentiality="75" integrity="100" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CSMS-4.3.4-15.1">
                  <countermeasures>
                    <countermeasure ref="CSMS-M18" mitigation="50"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CSMS-4.3.4-15.2">
                  <countermeasures>
                    <countermeasure ref="CSMS-M19" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CSMS-M18" mitigation="50"/>
                <countermeasure ref="CSMS-M19" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="af8ded61-5518-40ae-a1b7-9bbb133380d0" diagramComponentId="b2419741-40e9-4ca7-93ba-16ae918cdab6" ref="cebdc482-bad7-4a2b-8d5e-e027eaf18665" name="DeveOps" desc="" library="unece-wp-29-csms" parentComponentRef="8bc1f704-bd68-4a18-a395-06fe6b0efb1f" componentDefinitionRef="end-user">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses>
        <weakness ref="CSMS-4.3.4-15.2" name="Defined security procedures are not followed" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt; &lt;b&gt;Defined security procedures&lt;/b&gt; are not followed&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:51.995">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CSMS-4.3.4-15.1" name="Social engineering" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt; Innocent victim (e.g. owner, operator or maintenance engineer) being &lt;b&gt;tricked into taking an action&lt;/b&gt; to&lt;b&gt; &lt;/b&gt;unintentionally load malware or enable an attack&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:51.996">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="CSMS-M19" name="Define security procedures" issueId="" issueLink="" platform="" cost="0" risk="78" state="Recommended" owner="JamesRabe" library="unece-wp-29-csms-2" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt; Organizations shall ensure security procedures are defined and followed including logging of actions and access related to the management of the security functions&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="NIST 800-53 PS-1 Personnel Security Policy and Procedures" url="https://nvd.nist.gov/800-53/Rev4/control/PS-1"/>
            <reference name="OWASP Logging Cheat Sheet" url="https://cheatsheetseries.owasp.org/cheatsheets/Logging_Cheat_Sheet.html"/>
          </references>
          <standards>
            <standard ref="10.4.2" supportedStandardRef="iso-sae-21434"/>
            <standard ref="10.4.3" supportedStandardRef="iso-sae-21434"/>
            <standard ref="M19" supportedStandardRef="unece-wp29-csms"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:51.778">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CSMS-M18" name="Define user roles and access privileges" issueId="" issueLink="" platform="" cost="0" risk="78" state="Recommended" owner="JamesRabe" library="unece-wp-29-csms-2" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt; Measures shall be implemented for defining and controlling user roles and access privileges, based on the principle of least access privilege&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OWASP WSTG: Testing Role Definitions" url="https://owasp.org/www-project-web-security-testing-guide/latest/4-Web_Application_Security_Testing/03-Identity_Management_Testing/01-Test_Role_Definitions"/>
          </references>
          <standards>
            <standard ref="10.4.2" supportedStandardRef="iso-sae-21434"/>
            <standard ref="10.4.3" supportedStandardRef="iso-sae-21434"/>
            <standard ref="M18" supportedStandardRef="unece-wp29-csms"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:51.777">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="general" name="General" desc="" library="unece-wp-29-csms-2">
          <threats>
            <threat ref="CSMS-4.3.4-15" name="Unintended human actions carried out from outside of vehicles" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="unece-wp-29-csms-2" editable="true">
              <desc>This threat include: 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Legitimate actors are able to take actions that would unwittingly facilitate a cyber-attack&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt;</desc>
              <riskRating confidentiality="75" integrity="100" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CSMS-4.3.4-15.1">
                  <countermeasures>
                    <countermeasure ref="CSMS-M18" mitigation="50"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CSMS-4.3.4-15.2">
                  <countermeasures>
                    <countermeasure ref="CSMS-M19" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CSMS-M18" mitigation="50"/>
                <countermeasure ref="CSMS-M19" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="09e5997e-b14a-4716-bdb5-463d54677db2" diagramComponentId="ab44c045-5b30-4811-9210-a8ed41f71f78" ref="3cc36ea1-ecb2-446c-b513-41c4b942e401" name="Cloud Build" desc="" library="CS-Default" parentComponentRef="2b6cf23c-8c9a-4108-b550-2cb855b0c25b" componentDefinitionRef="empty-component">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses/>
      <countermeasures/>
      <usecases/>
    </component>
    <component uuid="7bd038fa-8823-4d9f-b0a3-f54075810cea" diagramComponentId="95fd92df-5006-4066-a9a3-bfcf2449d6c9" ref="dd55740b-1cb4-4455-9122-952058dd8370" name="Git Source Repo" desc="" library="CS-Default" parentComponentRef="ea7ae970-9712-4f7b-aa02-fc339ea64bf4" componentDefinitionRef="empty-component">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses/>
      <countermeasures/>
      <usecases/>
    </component>
    <component uuid="dacb3307-b51f-46a9-9d32-e2ab906d486b" diagramComponentId="0c55c201-e45b-4d65-998f-bd4ae3804366" ref="d5556826-a031-403b-aaa7-97d71f30bc36" name="Stage Environment" desc="" library="CS-Default" parentComponentRef="3db09fc8-8382-48b7-aabb-d78dc04ba2da" componentDefinitionRef="empty-component">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses/>
      <countermeasures/>
      <usecases/>
    </component>
    <component uuid="7ba46322-3bf3-46e4-8f9d-4d4f8cadd12e" diagramComponentId="d91e4cf9-4d6c-4363-a8ac-9b88cda2fcf0" ref="bbdaa2a7-2ace-4e4e-9b28-b28cc39ee92e" name="Prod Kubernetes Engine" desc="" library="Google Cloud Platform" parentComponentRef="9003190f-d2d9-46e1-be4d-32e23baa2899" componentDefinitionRef="google-kubernetes">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses>
        <weakness ref="GOOGLE-KEY-ACCESS" name="Container Builder has no access to the CryptoKey" state="0" impact="100" issueId="" issueLink="">
          <desc>The Container Builder has no access to the CryptoKey in order to create and view the keys.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:52.596">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="GOOGLE-USECURE-CREDENTIALS" name="Credentials are not securely stored" state="0" impact="100" issueId="" issueLink="">
          <desc>The credentials that are used to access the resources are not securely stored and can be
                        accessed by unauthorized personnel.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:52.596">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="GOOGLE-KEY-CREATE" name="Keys for encryption are not created" state="0" impact="100" issueId="" issueLink="">
          <desc>There are no keys to encrypt the communication between the users and the Google Container.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:52.596">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="GOOGLE_IAM-02" name="Misconfigured credentials for groups and roles" state="0" impact="100" issueId="" issueLink="">
          <desc>The credentials for the groups and roles are incorrectly configured and there are user accounts with more privileges than necessary.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:52.595">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="GOOGLE-LOGS01" name="Undetected changes in the SQL database information and configuration" state="0" impact="100" issueId="" issueLink="">
          <desc>Changes in the SQL database information and configuration are not detected and audited,
                        because the Google Cloud mechanisms that are used to notify about these changes are disabled.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:52.596">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="GOOGLE-CONT04" name="Assign IAM roles to grant access to the Container Builder" issueId="" issueLink="" platform="" cost="1" risk="64" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Manage and assign roles with the corresponding permissions for access to the Container Builder
                        systems. In this process, the assignment of roles shall adhere to the Principle of Least
                        Privilege.
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        Therefore, each role with access to the containers shall be assigned only with the permissions
                        the user needs for their specific tasks.&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        To grant IAM roles for a new team member or service account:&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Open the Identity and Access Management page in the Google Cloud Platform Console.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Select your project, and click Continue.&lt;/li&gt;
                        &lt;li&gt;Click Add.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Enter the team member's or service account's email address.&lt;/li&gt;
                        &lt;li&gt;Select the desired Role Title from the drop-down menu. Container Builder roles are
                        found under Container Builder.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Click Add.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Google Cloud: manage IAM roles via console" url="https://cloud.google.com/container-builder/docs/securing-builds/configure-access-control#managing_iam_roles_via_the_console_name_short"/>
          </references>
          <standards>
            <standard ref="A01:2021-Broken Access Control" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A5:2017-Broken Access Control" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Open the Identity and Access Management page in the Google Cloud Platform Console.&lt;/li&gt;
                            &lt;li&gt;Select your project, and click Continue.&lt;/li&gt;
                            &lt;li&gt;Check for each IAM role that the access to the Container Builder is assigned and
                            configured correctly.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:52.548">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-CONT01" name="Create a Cloud KMS KeyRing and CryptoKey" issueId="" issueLink="" platform="" cost="1" risk="64" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Create the Cryptokey or the KeyRing to create the keys to connect to the Google Cloud
                        Containers.
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        You can create KeyRings and CryptoKeys using the gcloud kms keyrings create and gcloud kms keys
                        create commands.&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        To create a KeyRing, run the following command in your shell or terminal window: gcloud kms
                        keyrings create [KEYRING-NAME] \&amp;nbsp;
                        &lt;/div&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        --location=global&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;To create a CryptoKey:&amp;nbsp;
                        &lt;div&gt;
                        gcloud kms keys create [KEY-NAME] \&amp;nbsp;
                        &lt;/div&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        --location=global \&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        --keyring=[KEYRING-NAME] \&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        --purpose=encryption&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;where: [KEYRING-NAME] is the name of the KeyRing to create [KEY-NAME] is the
                        name of the CryptoKey to create.</desc>
          <implementations/>
          <references>
            <reference name="Google Cloud docs: KMS Keyring and Cryptokey" url="https://cloud.google.com/container-builder/docs/securing-builds/use-encrypted-secrets-credentials#creating_a_cloud_kms_keyring_and_cryptokey"/>
            <reference name="Google Cloud: create keyring" url="https://cloud.google.com/sdk/gcloud/reference/kms/keyrings/create"/>
            <reference name="Google Cloud: create keys" url="https://cloud.google.com/sdk/gcloud/reference/kms/keys/create"/>
          </references>
          <standards>
            <standard ref="A05:2021-Security Misconfiguration" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A6:2017-Security Misconfiguration" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that each Google Cloud Container has the respective CryptoKey or KeyRing.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:52.547">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-CONT05" name="Enable the logs for Google Container Builder" issueId="" issueLink="" platform="" cost="1" risk="59" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>The Admin activity logs are enabled and logged by default but the Data access logs for
                        Container Builder operations are not recorded by default. You shall enable the Data Access audit
                        logs in the project to follow the access to the Google Cloud Container.&amp;nbsp;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        To enable the audit logs for the containers, you shall go to the file auditConfigs and add the
                        following code:&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ul&gt;
                        &lt;li&gt;In JSON:&amp;nbsp;&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/div&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        &amp;quot;auditConfigs&amp;quot;: [ {&amp;nbsp;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        &amp;quot;service&amp;quot;: &amp;quot;[SERVICE]&amp;quot;,&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &amp;quot;auditLogConfigs&amp;quot;: [&amp;nbsp;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        { &amp;quot;logType&amp;quot;: &amp;quot;ADMIN_READ&amp;quot; },&amp;nbsp;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        { &amp;quot;logType&amp;quot;: &amp;quot;DATA_READ&amp;quot; },&amp;nbsp;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        { &amp;quot;logType&amp;quot;: &amp;quot;DATA_WRITE&amp;quot; },&amp;nbsp;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        ]
                        &lt;/div&gt;
                        &lt;/blockquote&gt;}, ]&amp;nbsp;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;ul&gt;
                        &lt;li&gt;In YAML:&amp;nbsp;&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        auditConfigs:&amp;nbsp;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        - auditLogConfigs:&amp;nbsp;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        - logType: ADMIN_READ&amp;nbsp;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        - logType: DATA_WRITE&amp;nbsp;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        - logType: DATA_READ service: [SERVICE]&amp;nbsp;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;br /&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;Note: the param [SERVICE] shall be replaced with each service of the
                        containers, the services are the following: projects.builds.get, projects.builds.list,
                        projects.triggers.list, projects.triggers.get</desc>
          <implementations/>
          <references>
            <reference name="Google Cloud docs: enable logs for Container Builder" url="https://cloud.google.com/container-builder/docs/securing-builds/audit-logs#enable"/>
          </references>
          <standards>
            <standard ref="A09:2021-Security Logging and Monitoring Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2017-Insufficient Logging-Monitoring" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that the logs are enabled for the Google Containers and they show the correct
                            information about the access of users.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:52.548">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-CONT03" name="Encrypt the files using the CryptoKey" issueId="" issueLink="" platform="" cost="1" risk="64" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>The files shall be encrypted before their storage into a repository or datastore.&amp;nbsp;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        To encrypt a file, run the following command in your shell or terminal window:&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        gcloud kms encrypt \&amp;nbsp;
                        &lt;/div&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        --plaintext-file=secrets.json \&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        --ciphertext-file=secrets.json.enc \&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        --location=global \&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        --keyring=[KEYRING-NAME] \&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        --key=[KEY-NAME]&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;This produces an encrypted file named secrets.json.enc, which contains the
                        contents of secrets.json.</desc>
          <implementations/>
          <references>
            <reference name="Google Cloud docs: encrypting with Cryptokey" url="https://cloud.google.com/container-builder/docs/securing-builds/use-encrypted-secrets-credentials#encrypting_a_file_using_the_cryptokey"/>
          </references>
          <standards>
            <standard ref="A02:2021-Cryptographic Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A3:2017-Sensitive Data Exposure" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that all files are encrypted before they are stored into a repository or data
                            store.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:52.548">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-CONT02" name="Grant the Container Builder service account access to the CryptoKey" issueId="" issueLink="" platform="" cost="1" risk="64" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>To decrypt your resource during your build, you must grant the Container Builder service
                        account the permissions to access your CryptoKey. If it only needs to decrypt the file, you need
                        only grant decrypt permission.&amp;nbsp;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        To grant permission:&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Google Cloud Console:&amp;nbsp;&lt;/li&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Visit the GCP Console IAM menu.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Copy the Container Builder service account email address, which contains
                        @cloudbuild.gserviceaccount.com.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Visit the GCP Console Encryption Keys menu.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Select your KeyRing from the list, then click Permission.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Fill the Add members field with the service account email address.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;From the Roles drop-down menu, choose Cloud KMS CryptoKey Decrypter.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Click Add.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/ul&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Google Cloud docs: grant access with Cryptokey" url="https://cloud.google.com/container-builder/docs/securing-builds/use-encrypted-secrets-credentials#grant_the_product_name_short_service_account_access_to_the_cryptokey"/>
          </references>
          <standards>
            <standard ref="A01:2021-Broken Access Control" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A5:2017-Broken Access Control" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Visit the GCP Console IAM menu.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Copy the Container Builder service account email address, which contains
                            @cloudbuild.gserviceaccount.com.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Visit the GCP Console Encryption Keys menu.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Select your KeyRing from the list, then click Permission.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Check that the respective user accounts are listed.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:52.548">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="GOOGLE CLOUD PLATFORM" name="Google Cloud Platform" desc="" library="Google Cloud Platform">
          <threats>
            <threat ref="LOSS-CONTROL_ENV" name="Attackers gain unauthorized access to the control of the environment" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Google Cloud Platform" editable="true">
              <desc>&lt;p&gt;Attackers could potentially gain unauthorized access to the control of the environment, due to user accounts - or role groups - not being well defined and configured. As a consequence attackers may be able to make changes without root approval.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="75" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="GOOGLE_IAM-02">
                  <countermeasures>
                    <countermeasure ref="GOOGLE-CONT04" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="GOOGLE-CONT04" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="UNAUDITABLE-CHANGES-GOOGLE" name="Attackers make undetected and unaudited changes to system configurations" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Google Cloud Platform" editable="true">
              <desc>If audit trails are not properly protected, an attacker could gain access to the
                                system, modify the status of resources or exfiltrate sensitive data without being
                                detected.</desc>
              <riskRating confidentiality="25" integrity="75" availability="50" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="GOOGLE-LOGS01">
                  <countermeasures>
                    <countermeasure ref="GOOGLE-CONT05" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="GOOGLE-CONT05" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="ACCESS-TO-DATA" name="Sensitive data is compromised through unauthorized access to data storage" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Google Cloud Platform" editable="true">
              <desc>&lt;p&gt;A data breach is a security violation in which sensitive, protected or confidential data is copied, transmitted, viewed, stolen or used by an individual unauthorized to do so. Sensitive data could be exposed due to a bad configuration in user permissions.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="GOOGLE-KEY-ACCESS">
                  <countermeasures>
                    <countermeasure ref="GOOGLE-CONT02" mitigation="33"/>
                  </countermeasures>
                </weakness>
                <weakness ref="GOOGLE-KEY-CREATE">
                  <countermeasures>
                    <countermeasure ref="GOOGLE-CONT01" mitigation="33"/>
                  </countermeasures>
                </weakness>
                <weakness ref="GOOGLE-USECURE-CREDENTIALS">
                  <countermeasures>
                    <countermeasure ref="GOOGLE-CONT03" mitigation="34"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="GOOGLE-CONT01" mitigation="33"/>
                <countermeasure ref="GOOGLE-CONT02" mitigation="33"/>
                <countermeasure ref="GOOGLE-CONT03" mitigation="34"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="4a78e2f8-a8a2-4931-91f2-0e28c82fe2bd" diagramComponentId="cc0444af-d727-4f93-a2e8-a20f51600d28" ref="e405ac75-cba8-4f11-b5e6-a287826728d0" name="DevOps" desc="" library="unece-wp-29-csms" parentComponentRef="3db09fc8-8382-48b7-aabb-d78dc04ba2da" componentDefinitionRef="end-user">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses>
        <weakness ref="CSMS-4.3.4-15.2" name="Defined security procedures are not followed" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt; &lt;b&gt;Defined security procedures&lt;/b&gt; are not followed&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:52.398">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CSMS-4.3.4-15.1" name="Social engineering" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt; Innocent victim (e.g. owner, operator or maintenance engineer) being &lt;b&gt;tricked into taking an action&lt;/b&gt; to&lt;b&gt; &lt;/b&gt;unintentionally load malware or enable an attack&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:52.398">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="CSMS-M19" name="Define security procedures" issueId="" issueLink="" platform="" cost="0" risk="78" state="Recommended" owner="JamesRabe" library="unece-wp-29-csms-2" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt; Organizations shall ensure security procedures are defined and followed including logging of actions and access related to the management of the security functions&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="NIST 800-53 PS-1 Personnel Security Policy and Procedures" url="https://nvd.nist.gov/800-53/Rev4/control/PS-1"/>
            <reference name="OWASP Logging Cheat Sheet" url="https://cheatsheetseries.owasp.org/cheatsheets/Logging_Cheat_Sheet.html"/>
          </references>
          <standards>
            <standard ref="10.4.2" supportedStandardRef="iso-sae-21434"/>
            <standard ref="10.4.3" supportedStandardRef="iso-sae-21434"/>
            <standard ref="M19" supportedStandardRef="unece-wp29-csms"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:52.364">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CSMS-M18" name="Define user roles and access privileges" issueId="" issueLink="" platform="" cost="0" risk="78" state="Recommended" owner="JamesRabe" library="unece-wp-29-csms-2" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt; Measures shall be implemented for defining and controlling user roles and access privileges, based on the principle of least access privilege&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OWASP WSTG: Testing Role Definitions" url="https://owasp.org/www-project-web-security-testing-guide/latest/4-Web_Application_Security_Testing/03-Identity_Management_Testing/01-Test_Role_Definitions"/>
          </references>
          <standards>
            <standard ref="10.4.2" supportedStandardRef="iso-sae-21434"/>
            <standard ref="10.4.3" supportedStandardRef="iso-sae-21434"/>
            <standard ref="M18" supportedStandardRef="unece-wp29-csms"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:52.364">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="general" name="General" desc="" library="unece-wp-29-csms-2">
          <threats>
            <threat ref="CSMS-4.3.4-15" name="Unintended human actions carried out from outside of vehicles" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="unece-wp-29-csms-2" editable="true">
              <desc>This threat include: 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Legitimate actors are able to take actions that would unwittingly facilitate a cyber-attack&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt;</desc>
              <riskRating confidentiality="75" integrity="100" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CSMS-4.3.4-15.1">
                  <countermeasures>
                    <countermeasure ref="CSMS-M18" mitigation="50"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CSMS-4.3.4-15.2">
                  <countermeasures>
                    <countermeasure ref="CSMS-M19" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CSMS-M18" mitigation="50"/>
                <countermeasure ref="CSMS-M19" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="ffc95d7b-2146-4c54-be1c-b192e3ead287" diagramComponentId="2850d24f-996b-4174-865b-fe117bf167df" ref="898a2964-a04e-4a74-9466-90970aa846ae" name="Test Environment" desc="" library="CS-Default" parentComponentRef="3db09fc8-8382-48b7-aabb-d78dc04ba2da" componentDefinitionRef="empty-component">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses/>
      <countermeasures/>
      <usecases/>
    </component>
    <component uuid="43ee9381-263f-41a9-bf3d-814b820496d5" diagramComponentId="d573d32b-7565-4466-8038-920f8f2a3593" ref="fc0f27b9-57ec-4fd9-9548-33d17fbead30" name="Developer" desc="" library="unece-wp-29-csms" parentComponentRef="ea7ae970-9712-4f7b-aa02-fc339ea64bf4" componentDefinitionRef="end-user">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses>
        <weakness ref="CSMS-4.3.4-15.2" name="Defined security procedures are not followed" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt; &lt;b&gt;Defined security procedures&lt;/b&gt; are not followed&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:54.376">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CSMS-4.3.4-15.1" name="Social engineering" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt; Innocent victim (e.g. owner, operator or maintenance engineer) being &lt;b&gt;tricked into taking an action&lt;/b&gt; to&lt;b&gt; &lt;/b&gt;unintentionally load malware or enable an attack&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:54.376">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="CSMS-M19" name="Define security procedures" issueId="" issueLink="" platform="" cost="0" risk="78" state="Recommended" owner="JamesRabe" library="unece-wp-29-csms-2" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt; Organizations shall ensure security procedures are defined and followed including logging of actions and access related to the management of the security functions&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="NIST 800-53 PS-1 Personnel Security Policy and Procedures" url="https://nvd.nist.gov/800-53/Rev4/control/PS-1"/>
            <reference name="OWASP Logging Cheat Sheet" url="https://cheatsheetseries.owasp.org/cheatsheets/Logging_Cheat_Sheet.html"/>
          </references>
          <standards>
            <standard ref="10.4.2" supportedStandardRef="iso-sae-21434"/>
            <standard ref="10.4.3" supportedStandardRef="iso-sae-21434"/>
            <standard ref="M19" supportedStandardRef="unece-wp29-csms"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:54.341">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CSMS-M18" name="Define user roles and access privileges" issueId="" issueLink="" platform="" cost="0" risk="78" state="Recommended" owner="JamesRabe" library="unece-wp-29-csms-2" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt; Measures shall be implemented for defining and controlling user roles and access privileges, based on the principle of least access privilege&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OWASP WSTG: Testing Role Definitions" url="https://owasp.org/www-project-web-security-testing-guide/latest/4-Web_Application_Security_Testing/03-Identity_Management_Testing/01-Test_Role_Definitions"/>
          </references>
          <standards>
            <standard ref="10.4.2" supportedStandardRef="iso-sae-21434"/>
            <standard ref="10.4.3" supportedStandardRef="iso-sae-21434"/>
            <standard ref="M18" supportedStandardRef="unece-wp29-csms"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:54.341">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="general" name="General" desc="" library="unece-wp-29-csms-2">
          <threats>
            <threat ref="CSMS-4.3.4-15" name="Unintended human actions carried out from outside of vehicles" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="unece-wp-29-csms-2" editable="true">
              <desc>This threat include: 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Legitimate actors are able to take actions that would unwittingly facilitate a cyber-attack&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt;</desc>
              <riskRating confidentiality="75" integrity="100" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CSMS-4.3.4-15.1">
                  <countermeasures>
                    <countermeasure ref="CSMS-M18" mitigation="50"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CSMS-4.3.4-15.2">
                  <countermeasures>
                    <countermeasure ref="CSMS-M19" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CSMS-M18" mitigation="50"/>
                <countermeasure ref="CSMS-M19" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="63479747-8d5a-4cf2-a768-1cb8d39585f6" diagramComponentId="e0acacf3-eff8-430d-a079-92e0673281ed" ref="55e525fb-8ad4-4531-bf68-925f74ce75a9" name="DevOps" desc="" library="unece-wp-29-csms-2" parentComponentRef="00bb391b-af5e-4d21-84ef-8468273da935" componentDefinitionRef="end-user">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses>
        <weakness ref="CSMS-4.3.4-15.2" name="Defined security procedures are not followed" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt; &lt;b&gt;Defined security procedures&lt;/b&gt; are not followed&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:53.060">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CSMS-4.3.4-15.1" name="Social engineering" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt; Innocent victim (e.g. owner, operator or maintenance engineer) being &lt;b&gt;tricked into taking an action&lt;/b&gt; to&lt;b&gt; &lt;/b&gt;unintentionally load malware or enable an attack&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:53.059">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="CSMS-M19" name="Define security procedures" issueId="" issueLink="" platform="" cost="0" risk="78" state="Recommended" owner="JamesRabe" library="unece-wp-29-csms" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt; Organizations shall ensure security procedures are defined and followed including logging of actions and access related to the management of the security functions&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="NIST 800-53 PS-1 Personnel Security Policy and Procedures" url="https://nvd.nist.gov/800-53/Rev4/control/PS-1"/>
            <reference name="OWASP Logging Cheat Sheet" url="https://cheatsheetseries.owasp.org/cheatsheets/Logging_Cheat_Sheet.html"/>
          </references>
          <standards>
            <standard ref="10.4.2" supportedStandardRef="iso-sae-21434"/>
            <standard ref="10.4.3" supportedStandardRef="iso-sae-21434"/>
            <standard ref="M19" supportedStandardRef="unece-wp29-csms"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:53.019">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CSMS-M18" name="Define user roles and access privileges" issueId="" issueLink="" platform="" cost="0" risk="78" state="Recommended" owner="JamesRabe" library="unece-wp-29-csms" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt; Measures shall be implemented for defining and controlling user roles and access privileges, based on the principle of least access privilege&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OWASP WSTG: Testing Role Definitions" url="https://owasp.org/www-project-web-security-testing-guide/latest/4-Web_Application_Security_Testing/03-Identity_Management_Testing/01-Test_Role_Definitions"/>
          </references>
          <standards>
            <standard ref="10.4.2" supportedStandardRef="iso-sae-21434"/>
            <standard ref="10.4.3" supportedStandardRef="iso-sae-21434"/>
            <standard ref="M18" supportedStandardRef="unece-wp29-csms"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:53.020">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="general" name="General" desc="" library="unece-wp-29-csms">
          <threats>
            <threat ref="CSMS-4.3.4-15" name="Unintended human actions carried out from outside of vehicles" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="unece-wp-29-csms" editable="true">
              <desc>This threat include: 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Legitimate actors are able to take actions that would unwittingly facilitate a cyber-attack&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt;</desc>
              <riskRating confidentiality="75" integrity="100" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CSMS-4.3.4-15.1">
                  <countermeasures>
                    <countermeasure ref="CSMS-M18" mitigation="50"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CSMS-4.3.4-15.2">
                  <countermeasures>
                    <countermeasure ref="CSMS-M19" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CSMS-M18" mitigation="50"/>
                <countermeasure ref="CSMS-M19" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="7044f815-0ad5-42f6-a72c-116913da6bee" diagramComponentId="e63cf3b0-8ea1-44d0-8467-56bfd49c3d3d" ref="704dcdc0-6e0c-4adb-99c9-bf0d67f374e1" name="Image Storage (Artifact Registry)" desc="" library="CS-Default" parentComponentRef="8bc1f704-bd68-4a18-a395-06fe6b0efb1f" componentDefinitionRef="empty-component">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses/>
      <countermeasures/>
      <usecases/>
    </component>
    <component uuid="6899b820-7b52-4d27-89f3-fc8f76705a5b" diagramComponentId="21ec712d-84f2-4d30-82f6-96b5ef2905c5" ref="2a5b5888-e028-4346-9f53-e0b488b227fd" name="Test Kubernetes Engine" desc="" library="Google Cloud Platform" parentComponentRef="898a2964-a04e-4a74-9466-90970aa846ae" componentDefinitionRef="google-kubernetes">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses>
        <weakness ref="GOOGLE-KEY-ACCESS" name="Container Builder has no access to the CryptoKey" state="0" impact="100" issueId="" issueLink="">
          <desc>The Container Builder has no access to the CryptoKey in order to create and view the keys.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:52.824">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="GOOGLE-USECURE-CREDENTIALS" name="Credentials are not securely stored" state="0" impact="100" issueId="" issueLink="">
          <desc>The credentials that are used to access the resources are not securely stored and can be
                        accessed by unauthorized personnel.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:52.823">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="GOOGLE-KEY-CREATE" name="Keys for encryption are not created" state="0" impact="100" issueId="" issueLink="">
          <desc>There are no keys to encrypt the communication between the users and the Google Container.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:52.823">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="GOOGLE_IAM-02" name="Misconfigured credentials for groups and roles" state="0" impact="100" issueId="" issueLink="">
          <desc>The credentials for the groups and roles are incorrectly configured and there are user accounts with more privileges than necessary.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:52.823">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="GOOGLE-LOGS01" name="Undetected changes in the SQL database information and configuration" state="0" impact="100" issueId="" issueLink="">
          <desc>Changes in the SQL database information and configuration are not detected and audited,
                        because the Google Cloud mechanisms that are used to notify about these changes are disabled.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:52.823">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="GOOGLE-CONT04" name="Assign IAM roles to grant access to the Container Builder" issueId="" issueLink="" platform="" cost="1" risk="64" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Manage and assign roles with the corresponding permissions for access to the Container Builder
                        systems. In this process, the assignment of roles shall adhere to the Principle of Least
                        Privilege.
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        Therefore, each role with access to the containers shall be assigned only with the permissions
                        the user needs for their specific tasks.&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        To grant IAM roles for a new team member or service account:&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Open the Identity and Access Management page in the Google Cloud Platform Console.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Select your project, and click Continue.&lt;/li&gt;
                        &lt;li&gt;Click Add.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Enter the team member's or service account's email address.&lt;/li&gt;
                        &lt;li&gt;Select the desired Role Title from the drop-down menu. Container Builder roles are
                        found under Container Builder.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Click Add.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Google Cloud: manage IAM roles via console" url="https://cloud.google.com/container-builder/docs/securing-builds/configure-access-control#managing_iam_roles_via_the_console_name_short"/>
          </references>
          <standards>
            <standard ref="A01:2021-Broken Access Control" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A5:2017-Broken Access Control" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Open the Identity and Access Management page in the Google Cloud Platform Console.&lt;/li&gt;
                            &lt;li&gt;Select your project, and click Continue.&lt;/li&gt;
                            &lt;li&gt;Check for each IAM role that the access to the Container Builder is assigned and
                            configured correctly.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:52.769">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-CONT01" name="Create a Cloud KMS KeyRing and CryptoKey" issueId="" issueLink="" platform="" cost="1" risk="64" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Create the Cryptokey or the KeyRing to create the keys to connect to the Google Cloud
                        Containers.
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        You can create KeyRings and CryptoKeys using the gcloud kms keyrings create and gcloud kms keys
                        create commands.&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        To create a KeyRing, run the following command in your shell or terminal window: gcloud kms
                        keyrings create [KEYRING-NAME] \&amp;nbsp;
                        &lt;/div&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        --location=global&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;To create a CryptoKey:&amp;nbsp;
                        &lt;div&gt;
                        gcloud kms keys create [KEY-NAME] \&amp;nbsp;
                        &lt;/div&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        --location=global \&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        --keyring=[KEYRING-NAME] \&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        --purpose=encryption&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;where: [KEYRING-NAME] is the name of the KeyRing to create [KEY-NAME] is the
                        name of the CryptoKey to create.</desc>
          <implementations/>
          <references>
            <reference name="Google Cloud docs: KMS Keyring and Cryptokey" url="https://cloud.google.com/container-builder/docs/securing-builds/use-encrypted-secrets-credentials#creating_a_cloud_kms_keyring_and_cryptokey"/>
            <reference name="Google Cloud: create keyring" url="https://cloud.google.com/sdk/gcloud/reference/kms/keyrings/create"/>
            <reference name="Google Cloud: create keys" url="https://cloud.google.com/sdk/gcloud/reference/kms/keys/create"/>
          </references>
          <standards>
            <standard ref="A05:2021-Security Misconfiguration" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A6:2017-Security Misconfiguration" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that each Google Cloud Container has the respective CryptoKey or KeyRing.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:52.768">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-CONT05" name="Enable the logs for Google Container Builder" issueId="" issueLink="" platform="" cost="1" risk="59" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>The Admin activity logs are enabled and logged by default but the Data access logs for
                        Container Builder operations are not recorded by default. You shall enable the Data Access audit
                        logs in the project to follow the access to the Google Cloud Container.&amp;nbsp;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        To enable the audit logs for the containers, you shall go to the file auditConfigs and add the
                        following code:&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ul&gt;
                        &lt;li&gt;In JSON:&amp;nbsp;&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/div&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        &amp;quot;auditConfigs&amp;quot;: [ {&amp;nbsp;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        &amp;quot;service&amp;quot;: &amp;quot;[SERVICE]&amp;quot;,&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &amp;quot;auditLogConfigs&amp;quot;: [&amp;nbsp;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        { &amp;quot;logType&amp;quot;: &amp;quot;ADMIN_READ&amp;quot; },&amp;nbsp;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        { &amp;quot;logType&amp;quot;: &amp;quot;DATA_READ&amp;quot; },&amp;nbsp;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        { &amp;quot;logType&amp;quot;: &amp;quot;DATA_WRITE&amp;quot; },&amp;nbsp;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        ]
                        &lt;/div&gt;
                        &lt;/blockquote&gt;}, ]&amp;nbsp;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;ul&gt;
                        &lt;li&gt;In YAML:&amp;nbsp;&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        auditConfigs:&amp;nbsp;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        - auditLogConfigs:&amp;nbsp;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        - logType: ADMIN_READ&amp;nbsp;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        - logType: DATA_WRITE&amp;nbsp;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        - logType: DATA_READ service: [SERVICE]&amp;nbsp;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;br /&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;Note: the param [SERVICE] shall be replaced with each service of the
                        containers, the services are the following: projects.builds.get, projects.builds.list,
                        projects.triggers.list, projects.triggers.get</desc>
          <implementations/>
          <references>
            <reference name="Google Cloud docs: enable logs for Container Builder" url="https://cloud.google.com/container-builder/docs/securing-builds/audit-logs#enable"/>
          </references>
          <standards>
            <standard ref="A09:2021-Security Logging and Monitoring Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2017-Insufficient Logging-Monitoring" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that the logs are enabled for the Google Containers and they show the correct
                            information about the access of users.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:52.769">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-CONT03" name="Encrypt the files using the CryptoKey" issueId="" issueLink="" platform="" cost="1" risk="64" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>The files shall be encrypted before their storage into a repository or datastore.&amp;nbsp;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        To encrypt a file, run the following command in your shell or terminal window:&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        gcloud kms encrypt \&amp;nbsp;
                        &lt;/div&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        --plaintext-file=secrets.json \&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        --ciphertext-file=secrets.json.enc \&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        --location=global \&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        --keyring=[KEYRING-NAME] \&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        --key=[KEY-NAME]&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;This produces an encrypted file named secrets.json.enc, which contains the
                        contents of secrets.json.</desc>
          <implementations/>
          <references>
            <reference name="Google Cloud docs: encrypting with Cryptokey" url="https://cloud.google.com/container-builder/docs/securing-builds/use-encrypted-secrets-credentials#encrypting_a_file_using_the_cryptokey"/>
          </references>
          <standards>
            <standard ref="A02:2021-Cryptographic Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A3:2017-Sensitive Data Exposure" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that all files are encrypted before they are stored into a repository or data
                            store.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:52.769">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-CONT02" name="Grant the Container Builder service account access to the CryptoKey" issueId="" issueLink="" platform="" cost="1" risk="64" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>To decrypt your resource during your build, you must grant the Container Builder service
                        account the permissions to access your CryptoKey. If it only needs to decrypt the file, you need
                        only grant decrypt permission.&amp;nbsp;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        To grant permission:&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Google Cloud Console:&amp;nbsp;&lt;/li&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Visit the GCP Console IAM menu.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Copy the Container Builder service account email address, which contains
                        @cloudbuild.gserviceaccount.com.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Visit the GCP Console Encryption Keys menu.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Select your KeyRing from the list, then click Permission.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Fill the Add members field with the service account email address.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;From the Roles drop-down menu, choose Cloud KMS CryptoKey Decrypter.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Click Add.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/ul&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Google Cloud docs: grant access with Cryptokey" url="https://cloud.google.com/container-builder/docs/securing-builds/use-encrypted-secrets-credentials#grant_the_product_name_short_service_account_access_to_the_cryptokey"/>
          </references>
          <standards>
            <standard ref="A01:2021-Broken Access Control" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A5:2017-Broken Access Control" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Visit the GCP Console IAM menu.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Copy the Container Builder service account email address, which contains
                            @cloudbuild.gserviceaccount.com.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Visit the GCP Console Encryption Keys menu.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Select your KeyRing from the list, then click Permission.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Check that the respective user accounts are listed.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:52.769">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="GOOGLE CLOUD PLATFORM" name="Google Cloud Platform" desc="" library="Google Cloud Platform">
          <threats>
            <threat ref="LOSS-CONTROL_ENV" name="Attackers gain unauthorized access to the control of the environment" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Google Cloud Platform" editable="true">
              <desc>&lt;p&gt;Attackers could potentially gain unauthorized access to the control of the environment, due to user accounts - or role groups - not being well defined and configured. As a consequence attackers may be able to make changes without root approval.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="75" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="GOOGLE_IAM-02">
                  <countermeasures>
                    <countermeasure ref="GOOGLE-CONT04" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="GOOGLE-CONT04" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="UNAUDITABLE-CHANGES-GOOGLE" name="Attackers make undetected and unaudited changes to system configurations" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Google Cloud Platform" editable="true">
              <desc>If audit trails are not properly protected, an attacker could gain access to the
                                system, modify the status of resources or exfiltrate sensitive data without being
                                detected.</desc>
              <riskRating confidentiality="25" integrity="75" availability="50" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="GOOGLE-LOGS01">
                  <countermeasures>
                    <countermeasure ref="GOOGLE-CONT05" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="GOOGLE-CONT05" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="ACCESS-TO-DATA" name="Sensitive data is compromised through unauthorized access to data storage" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Google Cloud Platform" editable="true">
              <desc>&lt;p&gt;A data breach is a security violation in which sensitive, protected or confidential data is copied, transmitted, viewed, stolen or used by an individual unauthorized to do so. Sensitive data could be exposed due to a bad configuration in user permissions.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="GOOGLE-KEY-ACCESS">
                  <countermeasures>
                    <countermeasure ref="GOOGLE-CONT02" mitigation="33"/>
                  </countermeasures>
                </weakness>
                <weakness ref="GOOGLE-KEY-CREATE">
                  <countermeasures>
                    <countermeasure ref="GOOGLE-CONT01" mitigation="33"/>
                  </countermeasures>
                </weakness>
                <weakness ref="GOOGLE-USECURE-CREDENTIALS">
                  <countermeasures>
                    <countermeasure ref="GOOGLE-CONT03" mitigation="34"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="GOOGLE-CONT01" mitigation="33"/>
                <countermeasure ref="GOOGLE-CONT02" mitigation="33"/>
                <countermeasure ref="GOOGLE-CONT03" mitigation="34"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="bb00dbc7-7b98-4884-97c3-017761ab634a" diagramComponentId="98597256-ec4d-4302-b58e-f1461784f587" ref="ea7ae970-9712-4f7b-aa02-fc339ea64bf4" name="Source Code Repository" desc="" library="CS-Default" parentComponentRef="3db09fc8-8382-48b7-aabb-d78dc04ba2da" componentDefinitionRef="empty-component">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses/>
      <countermeasures/>
      <usecases/>
    </component>
    <component uuid="a2e1e516-c956-4b23-90d2-c82474aed769" diagramComponentId="b8567f4f-24fc-42c6-855b-83d82cce2a82" ref="afcb970c-d2b1-44b4-8780-5edac88c35a2" name="Promote Cloud Deploy" desc="" library="CS-Default" parentComponentRef="00bb391b-af5e-4d21-84ef-8468273da935" componentDefinitionRef="empty-component">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses/>
      <countermeasures/>
      <usecases/>
    </component>
    <component uuid="9569210b-bb99-468c-a6e9-41d6b2219f1f" diagramComponentId="06124adc-1112-4c80-9907-a09205b2f616" ref="00bb391b-af5e-4d21-84ef-8468273da935" name="Continuous Delivery" desc="" library="CS-Default" parentComponentRef="3db09fc8-8382-48b7-aabb-d78dc04ba2da" componentDefinitionRef="empty-component">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses/>
      <countermeasures/>
      <usecases/>
    </component>
    <component uuid="c096fff6-4c30-4362-b080-97640e81f397" diagramComponentId="e8712889-219f-48ca-bc9b-c3a90655ebd4" ref="9003190f-d2d9-46e1-be4d-32e23baa2899" name="Prod Environment" desc="" library="CS-Default" parentComponentRef="3db09fc8-8382-48b7-aabb-d78dc04ba2da" componentDefinitionRef="empty-component">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses/>
      <countermeasures/>
      <usecases/>
    </component>
    <component uuid="2e3b96f4-018b-4a25-b61a-fbf54cce3121" diagramComponentId="d9eeb53e-f4d8-4a12-ad13-ba51bd23d52a" ref="c6aa3ce5-524d-4950-8282-0caaf50424b8" name="Stage Rollout Cloud Deploy" desc="" library="CS-Default" parentComponentRef="00bb391b-af5e-4d21-84ef-8468273da935" componentDefinitionRef="empty-component">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses/>
      <countermeasures/>
      <usecases/>
    </component>
    <component uuid="b4da3b9c-11ef-45d7-82f1-efee41cda945" diagramComponentId="8246eabc-5977-44f4-8544-73fb3c40fcad" ref="5944905d-16bd-4603-9427-60b5159cfe73" name="Stage Kubernetes Engine" desc="" library="Google Cloud Platform" parentComponentRef="d5556826-a031-403b-aaa7-97d71f30bc36" componentDefinitionRef="google-kubernetes">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses>
        <weakness ref="GOOGLE-KEY-ACCESS" name="Container Builder has no access to the CryptoKey" state="0" impact="100" issueId="" issueLink="">
          <desc>The Container Builder has no access to the CryptoKey in order to create and view the keys.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:54.944">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="GOOGLE-USECURE-CREDENTIALS" name="Credentials are not securely stored" state="0" impact="100" issueId="" issueLink="">
          <desc>The credentials that are used to access the resources are not securely stored and can be
                        accessed by unauthorized personnel.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:54.944">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="GOOGLE-KEY-CREATE" name="Keys for encryption are not created" state="0" impact="100" issueId="" issueLink="">
          <desc>There are no keys to encrypt the communication between the users and the Google Container.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:54.944">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="GOOGLE_IAM-02" name="Misconfigured credentials for groups and roles" state="0" impact="100" issueId="" issueLink="">
          <desc>The credentials for the groups and roles are incorrectly configured and there are user accounts with more privileges than necessary.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:54.943">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="GOOGLE-LOGS01" name="Undetected changes in the SQL database information and configuration" state="0" impact="100" issueId="" issueLink="">
          <desc>Changes in the SQL database information and configuration are not detected and audited,
                        because the Google Cloud mechanisms that are used to notify about these changes are disabled.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:54.944">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="GOOGLE-CONT04" name="Assign IAM roles to grant access to the Container Builder" issueId="" issueLink="" platform="" cost="1" risk="64" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Manage and assign roles with the corresponding permissions for access to the Container Builder
                        systems. In this process, the assignment of roles shall adhere to the Principle of Least
                        Privilege.
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        Therefore, each role with access to the containers shall be assigned only with the permissions
                        the user needs for their specific tasks.&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        To grant IAM roles for a new team member or service account:&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Open the Identity and Access Management page in the Google Cloud Platform Console.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Select your project, and click Continue.&lt;/li&gt;
                        &lt;li&gt;Click Add.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Enter the team member's or service account's email address.&lt;/li&gt;
                        &lt;li&gt;Select the desired Role Title from the drop-down menu. Container Builder roles are
                        found under Container Builder.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Click Add.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Google Cloud: manage IAM roles via console" url="https://cloud.google.com/container-builder/docs/securing-builds/configure-access-control#managing_iam_roles_via_the_console_name_short"/>
          </references>
          <standards>
            <standard ref="A01:2021-Broken Access Control" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A5:2017-Broken Access Control" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Open the Identity and Access Management page in the Google Cloud Platform Console.&lt;/li&gt;
                            &lt;li&gt;Select your project, and click Continue.&lt;/li&gt;
                            &lt;li&gt;Check for each IAM role that the access to the Container Builder is assigned and
                            configured correctly.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:54.899">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-CONT01" name="Create a Cloud KMS KeyRing and CryptoKey" issueId="" issueLink="" platform="" cost="1" risk="64" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Create the Cryptokey or the KeyRing to create the keys to connect to the Google Cloud
                        Containers.
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        You can create KeyRings and CryptoKeys using the gcloud kms keyrings create and gcloud kms keys
                        create commands.&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        To create a KeyRing, run the following command in your shell or terminal window: gcloud kms
                        keyrings create [KEYRING-NAME] \&amp;nbsp;
                        &lt;/div&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        --location=global&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;To create a CryptoKey:&amp;nbsp;
                        &lt;div&gt;
                        gcloud kms keys create [KEY-NAME] \&amp;nbsp;
                        &lt;/div&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        --location=global \&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        --keyring=[KEYRING-NAME] \&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        --purpose=encryption&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;where: [KEYRING-NAME] is the name of the KeyRing to create [KEY-NAME] is the
                        name of the CryptoKey to create.</desc>
          <implementations/>
          <references>
            <reference name="Google Cloud docs: KMS Keyring and Cryptokey" url="https://cloud.google.com/container-builder/docs/securing-builds/use-encrypted-secrets-credentials#creating_a_cloud_kms_keyring_and_cryptokey"/>
            <reference name="Google Cloud: create keyring" url="https://cloud.google.com/sdk/gcloud/reference/kms/keyrings/create"/>
            <reference name="Google Cloud: create keys" url="https://cloud.google.com/sdk/gcloud/reference/kms/keys/create"/>
          </references>
          <standards>
            <standard ref="A05:2021-Security Misconfiguration" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A6:2017-Security Misconfiguration" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that each Google Cloud Container has the respective CryptoKey or KeyRing.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:54.898">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-CONT05" name="Enable the logs for Google Container Builder" issueId="" issueLink="" platform="" cost="1" risk="59" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>The Admin activity logs are enabled and logged by default but the Data access logs for
                        Container Builder operations are not recorded by default. You shall enable the Data Access audit
                        logs in the project to follow the access to the Google Cloud Container.&amp;nbsp;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        To enable the audit logs for the containers, you shall go to the file auditConfigs and add the
                        following code:&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ul&gt;
                        &lt;li&gt;In JSON:&amp;nbsp;&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/div&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        &amp;quot;auditConfigs&amp;quot;: [ {&amp;nbsp;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        &amp;quot;service&amp;quot;: &amp;quot;[SERVICE]&amp;quot;,&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &amp;quot;auditLogConfigs&amp;quot;: [&amp;nbsp;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        { &amp;quot;logType&amp;quot;: &amp;quot;ADMIN_READ&amp;quot; },&amp;nbsp;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        { &amp;quot;logType&amp;quot;: &amp;quot;DATA_READ&amp;quot; },&amp;nbsp;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        { &amp;quot;logType&amp;quot;: &amp;quot;DATA_WRITE&amp;quot; },&amp;nbsp;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        ]
                        &lt;/div&gt;
                        &lt;/blockquote&gt;}, ]&amp;nbsp;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;ul&gt;
                        &lt;li&gt;In YAML:&amp;nbsp;&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        auditConfigs:&amp;nbsp;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        - auditLogConfigs:&amp;nbsp;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        - logType: ADMIN_READ&amp;nbsp;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        - logType: DATA_WRITE&amp;nbsp;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        - logType: DATA_READ service: [SERVICE]&amp;nbsp;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;br /&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;Note: the param [SERVICE] shall be replaced with each service of the
                        containers, the services are the following: projects.builds.get, projects.builds.list,
                        projects.triggers.list, projects.triggers.get</desc>
          <implementations/>
          <references>
            <reference name="Google Cloud docs: enable logs for Container Builder" url="https://cloud.google.com/container-builder/docs/securing-builds/audit-logs#enable"/>
          </references>
          <standards>
            <standard ref="A09:2021-Security Logging and Monitoring Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2017-Insufficient Logging-Monitoring" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that the logs are enabled for the Google Containers and they show the correct
                            information about the access of users.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:54.899">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-CONT03" name="Encrypt the files using the CryptoKey" issueId="" issueLink="" platform="" cost="1" risk="64" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>The files shall be encrypted before their storage into a repository or datastore.&amp;nbsp;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        To encrypt a file, run the following command in your shell or terminal window:&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        gcloud kms encrypt \&amp;nbsp;
                        &lt;/div&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        --plaintext-file=secrets.json \&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        --ciphertext-file=secrets.json.enc \&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        --location=global \&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        --keyring=[KEYRING-NAME] \&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        --key=[KEY-NAME]&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;This produces an encrypted file named secrets.json.enc, which contains the
                        contents of secrets.json.</desc>
          <implementations/>
          <references>
            <reference name="Google Cloud docs: encrypting with Cryptokey" url="https://cloud.google.com/container-builder/docs/securing-builds/use-encrypted-secrets-credentials#encrypting_a_file_using_the_cryptokey"/>
          </references>
          <standards>
            <standard ref="A02:2021-Cryptographic Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A3:2017-Sensitive Data Exposure" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that all files are encrypted before they are stored into a repository or data
                            store.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:54.899">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-CONT02" name="Grant the Container Builder service account access to the CryptoKey" issueId="" issueLink="" platform="" cost="1" risk="64" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>To decrypt your resource during your build, you must grant the Container Builder service
                        account the permissions to access your CryptoKey. If it only needs to decrypt the file, you need
                        only grant decrypt permission.&amp;nbsp;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        To grant permission:&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Google Cloud Console:&amp;nbsp;&lt;/li&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Visit the GCP Console IAM menu.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Copy the Container Builder service account email address, which contains
                        @cloudbuild.gserviceaccount.com.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Visit the GCP Console Encryption Keys menu.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Select your KeyRing from the list, then click Permission.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Fill the Add members field with the service account email address.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;From the Roles drop-down menu, choose Cloud KMS CryptoKey Decrypter.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Click Add.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/ul&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Google Cloud docs: grant access with Cryptokey" url="https://cloud.google.com/container-builder/docs/securing-builds/use-encrypted-secrets-credentials#grant_the_product_name_short_service_account_access_to_the_cryptokey"/>
          </references>
          <standards>
            <standard ref="A01:2021-Broken Access Control" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A5:2017-Broken Access Control" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Visit the GCP Console IAM menu.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Copy the Container Builder service account email address, which contains
                            @cloudbuild.gserviceaccount.com.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Visit the GCP Console Encryption Keys menu.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Select your KeyRing from the list, then click Permission.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Check that the respective user accounts are listed.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:54.899">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="GOOGLE CLOUD PLATFORM" name="Google Cloud Platform" desc="" library="Google Cloud Platform">
          <threats>
            <threat ref="LOSS-CONTROL_ENV" name="Attackers gain unauthorized access to the control of the environment" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Google Cloud Platform" editable="true">
              <desc>&lt;p&gt;Attackers could potentially gain unauthorized access to the control of the environment, due to user accounts - or role groups - not being well defined and configured. As a consequence attackers may be able to make changes without root approval.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="75" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="GOOGLE_IAM-02">
                  <countermeasures>
                    <countermeasure ref="GOOGLE-CONT04" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="GOOGLE-CONT04" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="UNAUDITABLE-CHANGES-GOOGLE" name="Attackers make undetected and unaudited changes to system configurations" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Google Cloud Platform" editable="true">
              <desc>If audit trails are not properly protected, an attacker could gain access to the
                                system, modify the status of resources or exfiltrate sensitive data without being
                                detected.</desc>
              <riskRating confidentiality="25" integrity="75" availability="50" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="GOOGLE-LOGS01">
                  <countermeasures>
                    <countermeasure ref="GOOGLE-CONT05" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="GOOGLE-CONT05" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="ACCESS-TO-DATA" name="Sensitive data is compromised through unauthorized access to data storage" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Google Cloud Platform" editable="true">
              <desc>&lt;p&gt;A data breach is a security violation in which sensitive, protected or confidential data is copied, transmitted, viewed, stolen or used by an individual unauthorized to do so. Sensitive data could be exposed due to a bad configuration in user permissions.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="GOOGLE-KEY-ACCESS">
                  <countermeasures>
                    <countermeasure ref="GOOGLE-CONT02" mitigation="33"/>
                  </countermeasures>
                </weakness>
                <weakness ref="GOOGLE-KEY-CREATE">
                  <countermeasures>
                    <countermeasure ref="GOOGLE-CONT01" mitigation="33"/>
                  </countermeasures>
                </weakness>
                <weakness ref="GOOGLE-USECURE-CREDENTIALS">
                  <countermeasures>
                    <countermeasure ref="GOOGLE-CONT03" mitigation="34"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="GOOGLE-CONT01" mitigation="33"/>
                <countermeasure ref="GOOGLE-CONT02" mitigation="33"/>
                <countermeasure ref="GOOGLE-CONT03" mitigation="34"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="71f4406f-4318-47d6-993e-f5ccbef74f67" diagramComponentId="0262f925-607e-43e3-bb0f-a52ef21cc484" ref="f6ce585a-d11b-46bb-9020-cbe8c53a09c2" name="Prod Rollout Cloud Deploy" desc="" library="CS-Default" parentComponentRef="00bb391b-af5e-4d21-84ef-8468273da935" componentDefinitionRef="empty-component">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses/>
      <countermeasures/>
      <usecases/>
    </component>
    <component uuid="b4e3875f-aab8-4109-96bd-b49a031e2db2" diagramComponentId="25c5bab2-4d2e-4d7d-83d3-365aa91836ba" ref="2b6cf23c-8c9a-4108-b550-2cb855b0c25b" name="Continuous Integration" desc="" library="CS-Default" parentComponentRef="3db09fc8-8382-48b7-aabb-d78dc04ba2da" componentDefinitionRef="empty-component">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses/>
      <countermeasures/>
      <usecases/>
    </component>
    <component uuid="833bc4cd-6704-44ca-9221-5c19acbaede2" diagramComponentId="4261bf9d-ce4f-4e85-b980-b9f7c9c4258c" ref="23661149-13d9-4aae-b824-a1b407f8a522" name="Test Rollout Cloud Deploy" desc="" library="CS-Default" parentComponentRef="00bb391b-af5e-4d21-84ef-8468273da935" componentDefinitionRef="empty-component">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses/>
      <countermeasures/>
      <usecases/>
    </component>
    <component uuid="09915317-41ad-4eaf-908f-2f020c82b971" diagramComponentId="1a423416-d15a-4146-9bc3-a0f0de794552" ref="2a9b477e-cc07-489e-b628-8a3564823b25" name="Release Creation Cloud Deploy" desc="" library="CS-Default" parentComponentRef="00bb391b-af5e-4d21-84ef-8468273da935" componentDefinitionRef="empty-component">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses/>
      <countermeasures/>
      <usecases/>
    </component>
    <component uuid="9485c302-ace6-4ac6-9737-12c8c95476d7" diagramComponentId="153b705b-b063-4fe7-a715-e7d29fce7cfa" ref="85c13503-98ac-4479-a8f3-b571e6112f5f" name="Vuln Scan (Artifact Analysis)" desc="" library="CS-Default" parentComponentRef="8bc1f704-bd68-4a18-a395-06fe6b0efb1f" componentDefinitionRef="empty-component">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses/>
      <countermeasures/>
      <usecases/>
    </component>
    <component uuid="e94836b3-7026-4b17-9959-a247f3af55a8" diagramComponentId="bbf924d2-ef6d-4526-9ac6-154611b379bd" ref="3db09fc8-8382-48b7-aabb-d78dc04ba2da" name="GCP Platform Environment" desc="" library="Google Cloud Platform" parentComponentRef="" componentDefinitionRef="google-cloud-platform-environment">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses>
        <weakness ref="GOOGLE-LOGS03" name="Audit logs can be deleted" state="0" impact="100" issueId="" issueLink="">
          <desc>There is no external backups of log records. If logs are deleted, there is no way to recover them.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:54.162">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="GOOGLE-MON02" name="Excessive use of administrator accounts" state="0" impact="100" issueId="" issueLink="">
          <desc>The administrator accounts are used for all actions, not only for the administrative ones. This is because these users do not have a personal or user account to perform their daily actions.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:53.587">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CWE-778" name="Insufficient Logging" state="0" impact="100" issueId="" issueLink="">
          <desc>When a critical security event occurs, the software either does not record the event or omits important details about the event when logging it. When critical security events are not logged properly, such as in the case of a failed login attempt, this can make malicious behavior more difficult to detect and may hinder forensic analyses after a successful attack.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:54.162">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="GOOGLE-MON03" name="Lack of 2FA" state="0" impact="100" issueId="" issueLink="">
          <desc>Login to the console without using Multi-factor Authentication (MFA) is considered as suspicious activity. Therefore connection without MFA must be audited and monitored and the corresponding security group must be informed and must validate this connection.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:53.917">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="LOST-SECURITY-ALERTS" name="Misconfigured Security contact details" state="0" impact="100" issueId="" issueLink="">
          <desc>The security contact details for the Azure subscription are not properly configured.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Access &amp;quot;Azure Security Center&amp;quot;.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;In the &amp;quot;Recommendations&amp;quot; tab choose &amp;quot;Provide security
                            contact details&amp;quot;.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Check that all fields are filled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:53.588">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="GOOGLE-IAM03" name="Misconfigured User Account" state="0" impact="100" issueId="" issueLink="">
          <desc>Key security settings such as resetting the password, and other password controls are not
                        configured.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:53.588">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="GOOGLE-IAM-01" name="Misconfigured authentication method for administrator accounts" state="0" impact="100" issueId="" issueLink="">
          <desc>The authentication method "Multi-factor Authentication" for the Administrator accounts is not
                        configured.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:53.588">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="GOOGLE_IAM-02" name="Misconfigured credentials for groups and roles" state="0" impact="100" issueId="" issueLink="">
          <desc>The credentials for the groups and roles are incorrectly configured and there are user accounts with more privileges than necessary.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:53.588">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="GOOGLE-EXPIRATION-DATE" name="Misconfigured security key expirations" state="0" impact="100" issueId="" issueLink="">
          <desc>The password and security key expiration is not configured and users are not obliged to change
                        their security credentials. Not frequently changing passwords, gives attackers the chance to
                        obtain credentials and gain access to the systems.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:53.588">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="GOOGLE-VNET01" name="Networks for Google Cloud resources are not properly segmented" state="0" impact="100" issueId="" issueLink="">
          <desc>Resources in the same VNet are compromised because when one of them is attacked and the
                        attackers gain access, they also gain access to all resources.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:53.368">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="GOOGLE-RESOURCES-STATUS" name="Undetected Resources status changes" state="0" impact="100" issueId="" issueLink="">
          <desc>Changes to the system status are not controlled with the consequence of system failure.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:53.917">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="GOOGLE-MON06" name="Undetected brute force attempts on the Google Cloud console" state="0" impact="100" issueId="" issueLink="">
          <desc>Failed connection attempts (brute force) must be audited and monitored and the corresponding personnel must be alerted and informed.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:53.917">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="GOOGLE-MON05" name="Undetected changes in the data encryption configuration" state="0" impact="100" issueId="" issueLink="">
          <desc>Changes to the database encryption must be audited and monitored. When there are changes to the database encryption, the security group must be alerted.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:53.917">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="GOOGLE-MON07" name="Undetected changes in the network configuration" state="0" impact="100" issueId="" issueLink="">
          <desc>Changes in network configurations (NACLs, route and gateway tables) are not detected because monitoring and alerts of network configuration changes are not in place.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:53.916">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="GOOGLE-MON01" name="Undetected changes in the security configurations" state="0" impact="100" issueId="" issueLink="">
          <desc>Monitoring and alerting for security configurations are not configured and changes cannot be detected.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:53.588">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="GOOGLE-MON04" name="Undetected changes in the security groups" state="0" impact="100" issueId="" issueLink="">
          <desc>Changes in the security groups must be traced and monitored and the corresponding personnel must approve these changes. If the configuration is not appropriate, attackers can gain access to security systems.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:53.917">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="GOOGLE-IAM03" name="Apply RBAC with pre-defined policies added into groups and roles" issueId="" issueLink="" platform="" cost="0" risk="64" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Define and create groups that relate to job functions (administrators, developers, accounting,
                        etc.) and assign the relevant permissions for each group, and then assign IAM users to those
                        groups. All the users in an IAM group inherit the permissions assigned to the group. That way,
                        you can make changes for everyone in a group in just one place. As people move around in your
                        company, you can simply change what IAM group their IAM user belongs to. This method is known as
                        Role Based Access Control (RBAC).&amp;nbsp;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        To add a team member and grant an IAM role to the member:
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Open the IAM page in the Cloud Platform Console and open the IAM page.&lt;/li&gt;
                        &lt;li&gt;Click Select a project.&lt;/li&gt;
                        &lt;li&gt;Select a project and click Open.&lt;/li&gt;
                        &lt;li&gt;Click Add to add new members to the project and set their permissions. In the Select a
                        role drop-down menu, click on a service name to find the roles that belong to that service.&amp;nbsp;&lt;/li&gt;
                        &lt;/ol&gt;To grant more than one role to the same project member:
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Open the IAM page in the Cloud Platform Console and open the IAM page.&lt;/li&gt;
                        &lt;li&gt;Click Select a project.&lt;/li&gt;
                        &lt;li&gt;Select a project and click Open.&lt;/li&gt;
                        &lt;li&gt;Enter the email address of the member and select all the roles that you want to grant
                        to the member. Click Add.&amp;nbsp;&lt;/li&gt;
                        &lt;/ol&gt;To grant a role to a member for more than one project:
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Open the IAM and Admin Projects page in the Cloud Platform Console and open the IAM
                        &amp;amp; ADMIN PROJECTS page.&lt;/li&gt;
                        &lt;li&gt;Select all the projects for which you want to grant permissions.&lt;/li&gt;
                        &lt;li&gt;In the IAM tab on the right pane, add the new member and select a role to grant the
                        role for all selected projects.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Granting, changing, and revoking access to resources" url="https://cloud.google.com/iam/docs/granting-changing-revoking-access"/>
          </references>
          <standards>
            <standard ref="A01:2021-Broken Access Control" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A5:2017-Broken Access Control" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Open the IAM page in the Cloud Platform Console and open the IAM page.&lt;/li&gt;
                            &lt;li&gt;Click Select a project and click Open.&lt;/li&gt;
                            &lt;li&gt;List all members from the project.&lt;/li&gt;
                            &lt;li&gt;Check that each member has been assigned to the correct roles.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:53.488">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-IAM08" name="Automatically rotate Google Service account keys" issueId="" issueLink="" platform="" cost="0" risk="64" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>The Google Service Keys shall be rotated to avoid unauthorized access.
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        To enable automatic rotation of a key, set the rotation schedule with the following gcloud
                        command-line syntax:&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        gcloud kms keys update KEY_NAME \&amp;nbsp;
                        &lt;/div&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        --location LOCATION \&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        --keyring KEYRING_NAME \&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        --rotation-period ROTATION_PERIOD \&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        --next-rotation-time NEXT_ROTATION_TIME&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;For example:&amp;nbsp;
                        &lt;div&gt;
                        gcloud kms keys update KEY_NAME&amp;nbsp;
                        &lt;/div&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        --rotation-period=30d&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        --next-rotation-time=2016-10-12T12:34:56.1234Z
                        &lt;/div&gt;
                        &lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Google Cloud docs: KMS rotation schedule" url="https://cloud.google.com/kms/docs/rotating-keys#kms-set-rotation-schedule-cli"/>
          </references>
          <standards>
            <standard ref="A05:2021-Security Misconfiguration" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A6:2017-Security Misconfiguration" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check automatic rotation of keys is enabled.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:53.489">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-IAM19" name="Avoid assigning Service Account roles to IAM users at project level" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;is recommended to assign the Service Account User (iam.serviceAccountUser) and Service Account Token Creator (iam.serviceAccountTokenCreator) roles to a user for a specific service account rather than assigning the role to a user at project level.&lt;/p&gt;&lt;p&gt;Rationale:&lt;/p&gt;&lt;p&gt;A service account is a special Google account that belongs to an application or a virtual machine (VM), instead of to an individual end-user. Application/VM-Instance uses the service account to call the service's Google API so that users aren't directly involved. In addition to being an identity, a service account is a resource that has IAM policies attached to it. These policies determine who can use the service account.&lt;/p&gt;&lt;p&gt;Users with IAM roles to update the App Engine and Compute Engine instances (such as App Engine Deployer or Compute Instance Admin) can effectively run code as the service accounts used to run these instances, and indirectly gain access to all the resources for which the service accounts have access. Similarly, SSH access to a Compute Engine instance may also provide the ability to execute code as that instance/Service account.&lt;/p&gt;&lt;p&gt;Based on business needs, there could be multiple user-managed service accounts configured for a project. Granting the iam.serviceAccountUser or iam.serviceAserviceAccountTokenCreatorccountUser roles to a user for a project gives the user access to all service accounts in the project, including service accounts that may be created in the future. This can result in elevation of privileges by using service accounts and corresponding Compute Engine instances.&lt;/p&gt;&lt;p&gt;In order to implement least privileges best practices, IAM users should not be assigned the Service Account User or Service Account Token Creator roles at the project level. Instead, these roles should be assigned to a user for a specific service account, giving that user access to the service account. The Service Account User allows a user to bind a service account to a long-running job service, whereas the Service Account Token Creator role allows a user to directly impersonate (or assert) the identity of a service account.&lt;/p&gt;&lt;p&gt;Impact:&lt;/p&gt;&lt;p&gt;After revoking Service Account User or Service Account Token Creator roles at the project level from all impacted user account(s), these roles should be assigned to a user(s) for specific service account(s) according to business needs.&lt;/p&gt;&lt;p&gt;Remediation:&lt;/p&gt;&lt;p&gt;From Console:&lt;/p&gt;&lt;p&gt;1. Go to the IAM page in the GCP Console by visiting: https://console.cloud.google.com/iam-admin/iam.&lt;/p&gt;&lt;p&gt;2. Click on the filter table text bar. Type Role: Service Account User&lt;/p&gt;&lt;p&gt;3. Click the Delete Bin icon in front of the role Service Account User for every user listed as a result of a filter.&lt;/p&gt;&lt;p&gt;4. Click on the filter table text bar. Type Role: Service Account Token Creator&lt;/p&gt;&lt;p&gt;5. Click the Delete Bin icon in front of the role Service Account Token Creator for every user listed as a result of a filter.&lt;/p&gt;&lt;p&gt;From Command Line:&lt;/p&gt;&lt;p&gt;1. Using a text editor, remove the bindings with the roles/iam.serviceAccountUser or roles/iam.serviceAccountTokenCreator.&lt;/p&gt;&lt;p&gt;2. Update the project's IAM policy:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;gcloud projects set-iam-policy PROJECT_ID iam.json&lt;/p&gt;&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="CIS Google Cloud Platform Benchmark" url="https://www.cisecurity.org/benchmark/google_cloud_computing_platform/"/>
          </references>
          <standards>
            <standard ref="1.6" supportedStandardRef="cis-gcp-standard"/>
            <standard ref="1.6" supportedStandardRef="cis-gcp-standard-level-2"/>
            <standard ref="A07:2021-Identification and Authentication Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A2:2017-Broken Authentication" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;From Console:&lt;/p&gt;&lt;p&gt;1. Go to the IAM page in the GCP Console by visiting https://console.cloud.google.com/iam-admin/iam&lt;/p&gt;&lt;p&gt;2. Click on the filter table text bar, Type Role: Service Account User.&lt;/p&gt;&lt;p&gt;3. Ensure no user is listed as a result of the filter.&lt;/p&gt;&lt;p&gt;4. Click on the filter table text bar, Type Role: Service Account Token Creator.&lt;/p&gt;&lt;p&gt;5. Ensure no user is listed as a result of the filter.&lt;/p&gt;&lt;p&gt;From Command Line: To ensure IAM users are not assigned Service Account User role at the project level:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;gcloud projects get-iam-policy PROJECT_ID --format json | jq '.bindings[].role' | grep "roles/iam.serviceAccountUser"&amp;nbsp;&lt;/p&gt;&lt;p&gt;gcloud projects get-iam-policy PROJECT_ID --format json | jq '.bindings[].role' | grep "roles/iam.serviceAccountTokenCreator"&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;These commands should not return any output.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:53.489">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-IAM12" name="Avoid using API keys on a project" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Keys are insecure because they can be viewed publicly, such as from within a browser, or they can be accessed on a device where the key resides. It is recommended to use standard authentication flow instead.&lt;/p&gt;&lt;p&gt;Rationale:&lt;/p&gt;&lt;p&gt;Security risks involved in using API-Keys appear below:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;API keys are simple encrypted strings&lt;/li&gt;&lt;li&gt;API keys do not identify the user or the application making the API request&lt;/li&gt;&lt;li&gt;API keys are typically accessible to clients, making it easy to discover and steal an API key&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;To avoid the security risk in using API keys, it is recommended to use standard authentication flow instead.&lt;/p&gt;&lt;p&gt;Impact:&lt;/p&gt;&lt;p&gt;Deleting an API key will break dependent applications (if any).&lt;/p&gt;&lt;p&gt;From Console:&lt;/p&gt;&lt;p&gt;1. Go to APIs &amp;amp; Services\Credentials using https://console.cloud.google.com/apis/credentials&lt;/p&gt;&lt;p&gt;2. In the section API Keys, to delete API Keys: Click the Delete Bin Icon in front of every API Key Name.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="CIS Google Cloud Platform Benchmark" url="https://www.cisecurity.org/benchmark/google_cloud_computing_platform/"/>
          </references>
          <standards>
            <standard ref="1.12" supportedStandardRef="cis-gcp-standard-level-2"/>
            <standard ref="A05:2021-Security Misconfiguration" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A6:2017-Security Misconfiguration" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;From Console:&lt;/p&gt;&lt;p&gt;1. Go to APIs &amp;amp; Services\Credentials using https://console.cloud.google.com/apis/credentials&lt;/p&gt;&lt;p&gt;2. In the section API Keys, no API key should be listed.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:53.489">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-IAM09" name="Avoid using personal accounts" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Use corporate login credentials instead of personal accounts, such as Gmail accounts.&lt;/p&gt;&lt;p&gt;Rationale:&lt;/p&gt;&lt;p&gt;It is recommended fully-managed corporate Google accounts be used for increased visibility, auditing, and controlling access to Cloud Platform resources. Email accounts based outside of the user's organization, such as personal accounts, should not be used for business purposes.&lt;/p&gt;&lt;p&gt;Remediation:&lt;/p&gt;&lt;p&gt;Follow the documentation and setup corporate login accounts.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="CIS Google Cloud Platform Benchmark" url="https://www.cisecurity.org/benchmark/google_cloud_computing_platform/"/>
          </references>
          <standards>
            <standard ref="1.1" supportedStandardRef="cis-gcp-standard"/>
            <standard ref="1.1" supportedStandardRef="cis-gcp-standard-level-2"/>
            <standard ref="A01:2021-Broken Access Control" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A5:2017-Broken Access Control" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;For each Google Cloud Platform project, list the accounts that have been granted access to that project:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;gcloud projects get-iam-policy PROJECT_ID&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Also list the accounts added on each folder:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;gcloud resource-manager folders get-iam-policy FOLDER_ID&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;And list your organization's IAM policy:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;gcloud organizations get-iam-policy ORGANIZATION_ID&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;No email accounts outside the organization domain should be granted permissions in the IAM policies. This excludes Google-owned service accounts.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:53.489">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-IAM20" name="Block access to Cloud KMS cryptokeys from unauthorized access" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;It is recommended that the IAM policy on Cloud KMS cryptokeys should restrict anonymous and/or public access.&lt;/p&gt;&lt;p&gt;Rationale:&lt;/p&gt;&lt;p&gt;Granting permissions to allUsers or allAuthenticatedUsers allows anyone to access the dataset. Such access might not be desirable if sensitive data is stored at the location. In this case, ensure that anonymous and/or public access to a Cloud KMS cryptokey is not allowed.&lt;/p&gt;&lt;p&gt;Impact:&lt;/p&gt;&lt;p&gt;Removing the binding for allUsers and allAuthenticatedUsers members denies accessing cryptokeys to anonymous or public users.&lt;/p&gt;&lt;p&gt;Remediation:&lt;/p&gt;&lt;p&gt;From Command Line:&lt;/p&gt;&lt;p&gt;1. List all Cloud KMS Cryptokeys.&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;gcloud kms keys list --keyring=[key_ring_name] --location=global --format=json | jq '.[].name'&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;2. Remove IAM policy binding for a KMS key to remove access to allUsers and allAuthenticatedUsers using the below command.&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;gcloud kms keys remove-iam-policy-binding [key_name] --keyring=[key_ring_name] --location=global --member='allAuthenticatedUsers' --role='[role]'&amp;nbsp;&lt;/p&gt;&lt;p&gt;gcloud kms keys remove-iam-policy-binding [key_name] --keyring=[key_ring_name] --location=global --member='allUsers' --role='[role]'&lt;/p&gt;&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="CIS Google Cloud Platform Benchmark" url="https://www.cisecurity.org/benchmark/google_cloud_computing_platform/"/>
          </references>
          <standards>
            <standard ref="1.9" supportedStandardRef="cis-gcp-standard"/>
            <standard ref="1.9" supportedStandardRef="cis-gcp-standard-level-2"/>
            <standard ref="A01:2021-Broken Access Control" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A5:2017-Broken Access Control" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;From Command Line:&lt;/p&gt;&lt;p&gt;1. List all Cloud KMS Cryptokeys.&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;gcloud kms keys list --keyring=[key_ring_name] --location=global --format=json | jq '.[].name'&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;2. Ensure the below command's output does not contain allUsers and allAuthenticatedUsers.&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;gcloud kms keys get-iam-policy [key_name] --keyring=[key_ring_name] --location=global --format=json | jq '.bindings[].members[]'&lt;/p&gt;&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:53.489">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-NET05" name="Configure Cloud DNS DNSSEC" issueId="" issueLink="" platform="" cost="0" risk="61" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Cloud Domain Name System (DNS) is a fast, reliable and cost-effective domain name system that powers millions of domains on the internet. Domain Name System Security Extensions (DNSSEC) in Cloud DNS enables domain owners to take easy steps to protect their domains against DNS hijacking and man-in-the-middle and other attacks.&lt;/p&gt;&lt;p&gt;Remediation:&lt;/p&gt;&lt;p&gt;From Console:&lt;/p&gt;&lt;p&gt;1. Go to Cloud DNS by visiting https://console.cloud.google.com/net-services/dns/zones.&lt;/p&gt;&lt;p&gt;2. For each zone of Type Public, set DNSSEC to On.&lt;/p&gt;&lt;p&gt;From Command Line: Use the below command to enable DNSSEC for Cloud DNS Zone Name.&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;gcloud dns managed-zones update ZONE_NAME --dnssec-state on&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Ensure RSASHA1 is not used for the key-signing/zone-signing key.&lt;/p&gt;&lt;p&gt;1. If it is necessary to change the settings for a managed zone where it has been enabled, NSSEC must be turned off and re-enabled with different settings. To turn off DNSSEC, run the following command:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;gcloud dns managed-zones update ZONE_NAME --dnssec-state off&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;2. To update key-signing for a reported managed DNS Zone, run the following command:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;gcloud dns managed-zones update ZONE_NAME --dnssec-state on --ksk-algorithm KSK_ALGORITHM --ksk-key-length KSK_KEY_LENGTH --zsk-algorithm ZSK_ALGORITHM --zsk-key-length ZSK_KEY_LENGTH --denial-of-existence DENIAL_OF_EXISTENCE&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="CIS Google Cloud Platform Benchmark" url="https://www.cisecurity.org/benchmark/google_cloud_computing_platform/"/>
          </references>
          <standards>
            <standard ref="3.3" supportedStandardRef="cis-gcp-standard-level-2"/>
            <standard ref="3.4" supportedStandardRef="cis-gcp-standard-level-2"/>
            <standard ref="3.5" supportedStandardRef="cis-gcp-standard-level-2"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure the property algorithm for keyType zone signing is not using RSASHA1.&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;gcloud dns managed-zones describe --format="json(dnsName,dnssecConfig.state,dnssecConfig.defaultKeySpecs)"&lt;/p&gt;&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:53.320">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-LOG05" name="Configure Cloud DNS Logging" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Cloud DNS logging records the queries from the name servers within your VPC to Stackdriver. Logged queries can come from Compute Engine VMs, GKE containers, or other GCP resources provisioned within the VPC.&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Security monitoring and forensics cannot depend solely on IP addresses from VPC flow logs, especially when considering the dynamic IP usage of cloud resources, HTTP virtual host routing, and other technology that can obscure the DNS name used by a client from the IP address. Monitoring of Cloud DNS logs provides visibility to DNS names requested by the clients within the VPC. These logs can be monitored for anomalous domain names, evaluated against threat intelligence.&lt;/p&gt; 
&lt;p&gt;Note: For full capture of DNS, firewall must block egress UDP/53 (DNS) and TCP/443 (DNS over HTTPS) to prevent client from using external DNS name server for resolution.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Enabling logging for private managed zones&lt;/p&gt; 
&lt;p&gt;Use DNS policies to enable or disable logging for your networks, or use the DNS managed zone itself to enable or disable logging for queries resolved by that zone.&lt;/p&gt; 
&lt;p&gt;Note: When you enable query logging, every DNS query to a Cloud DNS managed zone is logged.&lt;/p&gt; 
&lt;p&gt;To enable logging for a network that does not have a DNS policy, run the dns policies create command.&lt;/p&gt; 
&lt;p&gt;gcloud dns policies create POLICY_NAME \ -networks=NETWORK \ -enable-logging \ -description=DESCRIPTION&lt;/p&gt; 
&lt;p&gt;Replace the following:&lt;/p&gt; 
&lt;p&gt;- POLICY_NAME: the name of the DNS policy&lt;br&gt; - NETWORK: one or more networks in a comma-separated list&lt;br&gt; - DESCRIPTION: a description of the policy&lt;/p&gt; 
&lt;p&gt;To enable logging for a network that has an existing DNS policy, run the dns policies update command.&lt;/p&gt; 
&lt;p&gt;gcloud dns policies update POLICY_NAME \ -networks=NETWORK \ -enable-logging&lt;/p&gt; 
&lt;p&gt;Replace the following:&lt;/p&gt; 
&lt;p&gt;- POLICY_NAME: the name of the DNS policy&lt;br&gt; - NETWORK: one or more networks in a comma-separated list&lt;/p&gt; 
&lt;p&gt;Enabling and disabling logging for managed public zones&lt;/p&gt; 
&lt;p&gt;To turn on logging for an existing managed public zone, run the dns managed-zones update command.&lt;/p&gt; 
&lt;p&gt;gcloud dns managed-zones update ZONE_NAME -log-dns-queries \&lt;/p&gt; 
&lt;p&gt;Replace ZONE_NAME with the name of the DNS managed zone that you want to enable logging for.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; Enabling of Cloud DNS logging might result in your project being charged for the additional logs usage.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="CIS Google Cloud Platform Benchmark" url="https://www.cisecurity.org/benchmark/google_cloud_computing_platform/"/>
            <reference name="Cloud DNS Logging and monitoring" url="https://cloud.google.com/dns/docs/monitoring"/>
          </references>
          <standards>
            <standard ref="2.12" supportedStandardRef="cis-gcp-standard"/>
            <standard ref="2.12" supportedStandardRef="cis-gcp-standard-level-2"/>
            <standard ref="A09:2021-Security Logging and Monitoring Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2017-Insufficient Logging-Monitoring" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>	&lt;p&gt;From Command Line:&lt;/p&gt;

	&lt;p&gt;1. List all VPCs networks in a project: &lt;/p&gt;

	&lt;p&gt;gcloud compute networks list -format="table[box,title='All VPC Networks'](name:label='VPC Network Name')"&lt;/p&gt;

	&lt;p&gt;2. List all DNS policies, logging enablement, and associated VPC networks: &lt;/p&gt;

	&lt;p&gt;gcloud dns policies list -flatten="networks[]" -format="table[box,title='All DNS Policies By VPC Network'](name:label='Policy Name',enableLogging:label='LoggingEnabled':align=center,networks.networkUrl.basename():label='VPC Network Name')"&lt;/p&gt;

	&lt;p&gt;Each VPC Network should be associated with a DNS policy with logging enabled.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:54.109">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="C-GCP-IAM-01" name="Configure essential contacts for organization" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;It is recommended that Essential Contacts is configured to designate email addresses for Google Cloud services to notify of important technical or security information.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Rationale&lt;/strong&gt;:&lt;/p&gt;&lt;p&gt;Many Google Cloud services, such as Cloud Billing, send out notifications to share important information with Google Cloud users. By default, these notifications are sent to members with certain Identity and Access Management (IAM) roles. With Essential Contacts, you can customize who receives notifications by providing your own list of contacts.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation:&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;From Console:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Go to Essential Contacts by visiting https://console.cloud.google.com/iam-admin/essential-contacts&lt;/li&gt;&lt;li&gt;Make sure the organization appears in the resource selector at the top of the page. The resource selector tells you what project, folder, or organization you are currently managing contacts for.&lt;/li&gt;&lt;li&gt;Click +Add contact&lt;/li&gt;&lt;li&gt;In the Email and Confirm Email fields, enter the email address of the contact.&lt;/li&gt;&lt;li&gt;From the Notification categories drop-down menu, select the notification categories that you want the contact to receive communications for.&lt;/li&gt;&lt;li&gt;Click Save&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;From Command Line:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;To add an organization Essential Contacts run a command:&lt;/li&gt;&lt;/ol&gt;&lt;blockquote&gt;&lt;p&gt;gcloud essential-contacts create --email="&amp;lt;EMAIL&amp;gt;" \ --notification-categories="&amp;lt;NOTIFICATION_CATEGORIES&amp;gt;" \ --organization=&amp;lt;ORGANIZATION_ID&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;strong&gt;Default Value:&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;By default, there are no Essential Contacts configured.&lt;/p&gt;&lt;p&gt;In the absence of an Essential Contact, the following IAM roles are used to identify users to notify for the following categories:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Legal: roles/billing.admin&lt;/li&gt;&lt;li&gt;Security: roles/resourcemanager.organizationAdmin&lt;/li&gt;&lt;li&gt;Suspension: roles/owner&lt;/li&gt;&lt;li&gt;Technical: roles/owner&lt;/li&gt;&lt;li&gt;Technical Incidents: roles/owner&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="Google Cloud docs: Managing notification contacts" url="https://cloud.google.com/resource-manager/docs/managing-notification-contacts"/>
          </references>
          <standards>
            <standard ref="1.16" supportedStandardRef="cis-gcp-standard"/>
            <standard ref="1.16" supportedStandardRef="cis-gcp-standard-level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;From Console:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Go to Essential Contacts by visiting https://console.cloud.google.com/iam-admin/essential-contacts&lt;/li&gt;&lt;li&gt;Make sure the organization appears in the resource selector at the top of the page. The resource selector tells you what project, folder, or organization you are currently managing contacts for.&lt;/li&gt;&lt;li&gt;Ensure that appropriate email addresses are configured for each of the following notification categories:&lt;/li&gt;&lt;/ol&gt;&lt;ul&gt;&lt;li&gt;Legal&lt;/li&gt;&lt;li&gt;Security&lt;/li&gt;&lt;li&gt;Suspension&lt;/li&gt;&lt;li&gt;Technical&lt;/li&gt;&lt;li&gt;Technical Incidents&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Alternatively, appropriate email addresses can be configured for the All notification category to receive all possible important notifications.&amp;nbsp;&lt;/p&gt;&lt;p&gt;From Command Line:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;To list all configured organization Essential Contacts run a command: gcloud essential-contacts list --organization=&amp;lt;ORGANIZATION_ID&amp;gt;&lt;/li&gt;&lt;li&gt;Ensure at least one appropriate email address is configured for each of the following notification categories:&lt;/li&gt;&lt;/ol&gt;&lt;ul&gt;&lt;li&gt;LEGAL&lt;/li&gt;&lt;li&gt;SECURITY&lt;/li&gt;&lt;li&gt;SUSPENSION&lt;/li&gt;&lt;li&gt;TECHNICAL&lt;/li&gt;&lt;li&gt;TECHNICAL_INCIDENTS&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Alternatively, appropriate email addresses can be configured for the ALL notification category to receive all possible important notifications.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:53.489">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-NET04" name="Configure Firewall Rules for instances behind IAP" issueId="" issueLink="" platform="" cost="1" risk="61" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Access to VMs should be restricted by firewall rules that allow only IAP traffic by ensuring only connections proxied by the IAP are allowed. To ensure that load balancing works correctly health checks should also be allowed.&lt;/p&gt;&lt;p&gt;Rationale:&lt;/p&gt;&lt;p&gt;IAP ensure that access to VMs is controlled by authenticating incoming requests. However if the VM is still accessible from IP addresses other than the IAP it may still be possible to send unauthenticated requests to the instance. Care must be taken to ensure that loadbalancer health checks are not blocked as this would stop the loadbalancer from correctly knowing the health of the VM and loadbalancing correctly.&lt;/p&gt;&lt;p&gt;Impact:&lt;/p&gt;&lt;p&gt;If firewall rules are not configured correctly, legitimate business services could be negatively impacted.&lt;/p&gt;&lt;p&gt;Remediation:&lt;/p&gt;&lt;p&gt;From the Console:&lt;/p&gt;&lt;p&gt;1. Go to the Cloud Console VPC network &amp;gt; Firewall rules.&lt;/p&gt;&lt;p&gt;2. Select the checkbox next to the following rules:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;default-allow-http&lt;/li&gt;&lt;li&gt;default-allow-https&lt;/li&gt;&lt;li&gt;default-allow-internal&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;3. Click Delete.&lt;/p&gt;&lt;p&gt;4. Click Create firewall rule and set the following values:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Name: allow-iap-traffic&lt;/li&gt;&lt;li&gt;Targets: All instances in the network&lt;/li&gt;&lt;li&gt;Source IP ranges (press Enter after you paste each value in the box):&lt;ul&gt;&lt;li&gt;130.211.0.0/22&lt;/li&gt;&lt;li&gt;35.191.0.0/16&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Protocols and ports:&lt;ul&gt;&lt;li&gt;Specified protocols and ports&lt;/li&gt;&lt;li&gt;tcp:80&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;5. When you're finished updating values, click Create.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="CIS Google Cloud Platform Benchmark" url="https://www.cisecurity.org/benchmark/google_cloud_computing_platform/"/>
          </references>
          <standards>
            <standard ref="3.10" supportedStandardRef="cis-gcp-standard-level-2"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;From the Console:&lt;/p&gt;&lt;p&gt;1. Go to the Cloud Console VPC network &amp;gt; Firewall rules.&lt;/p&gt;&lt;p&gt;2. Verify that the only rules correspond to the following values:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Targets: All instances in the network&lt;/li&gt;&lt;li&gt;Source IP ranges (press Enter after you paste each value in the box):&lt;ul&gt;&lt;li&gt;130.211.0.0/22&lt;/li&gt;&lt;li&gt;35.191.0.0/16&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Protocols and ports:&lt;ul&gt;&lt;li&gt;Specified protocols and ports&lt;/li&gt;&lt;li&gt;tcp:80&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:53.320">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-LOG06" name="Configure sinks for all logs entries" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;It is recommended to create a sink that will export copies of all the log entries. This can help aggregate logs from multiple projects and export them to a Security Information and Event Management (SIEM).&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Log entries are held in Cloud Logging. To aggregate logs, export them to a SIEM. To keep them longer, it is recommended to set up a log sink. Exporting involves writing a filter that selects the log entries to export, and choosing a destination in Cloud Storage, BigQuery, or Cloud Pub/Sub. The filter and destination are held in an object called a sink. To ensure all log entries are exported to sinks, ensure that there is no filter configured for a sink. Sinks can be created in projects, organizations, folders, and billing accounts.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Create a sink (console)&lt;/p&gt; 
&lt;p&gt;You can create up to 200 sinks per Cloud project.&lt;/p&gt; 
&lt;p&gt;After you create the sink, ensure that Logging has the appropriate permissions to write logs to your sink's destination.&lt;/p&gt; 
&lt;p&gt;To create a sink, do the following:&lt;/p&gt; 
&lt;p&gt;1. In the Cloud console, go to the Logs Router page:&lt;/p&gt; 
&lt;p&gt;2. Select an existing Cloud project.&lt;/p&gt; 
&lt;p&gt;3. Select Create sink.&lt;/p&gt; 
&lt;p&gt;4. In the Sink details panel, enter the following details:&lt;/p&gt; 
&lt;p&gt;- Sink name: Provide an identifier for the sink; note that after you create the sink, you can't rename the sink but you can delete it and create a new sink.&lt;/p&gt; 
&lt;p&gt;- Sink description (optional): Describe the purpose or use case for the sink.&lt;/p&gt; 
&lt;p&gt;5. In the Sink destination panel, select the sink service and destination:&lt;/p&gt; 
&lt;p&gt;- Select sink service: Select the service where you want your logs routed.&lt;/p&gt; 
&lt;p&gt;Based on the service that you select, you can select from the following destinations:&lt;/p&gt; 
&lt;p&gt;- Cloud Logging bucket: Select or create a Logging bucket.&lt;br&gt; - BigQuery table: Select or create the particular dataset to receive the routed logs. You also have the option to use partitioned tables.&lt;br&gt; - Cloud Storage bucket: Select or create the particular Cloud Storage bucket to receive the routed logs.&lt;br&gt; - Pub/Sub topic: Select or create the particular topic to receive the routed logs.&lt;br&gt; - Splunk: Select the Pub/Sub topic for your Splunk service.&lt;br&gt; - Other Cloud project: Manually add the Logging, BigQuery, Cloud Storage, or Pub/Sub service and destination information in the following format:&lt;/p&gt; 
&lt;p&gt;SERVICE.googleapis.com/projects/PROJECT_ID/SINK_DESTINATION/DESTINATION_ID&lt;/p&gt; 
&lt;p&gt;For example, if your sink destination is a BigQuery dataset, the sink destination would be the following:&lt;/p&gt; 
&lt;p&gt;bigquery.googleapis.com/projects/PROJECT_ID/datasets/DATASET_ID&lt;/p&gt; 
&lt;p&gt;Note that if you are routing logs between Cloud projects, you still need the appropriate destination permissions.&lt;/p&gt; 
&lt;p&gt;6. In the Choose logs to include in sink panel, do the following:&lt;/p&gt; 
&lt;p&gt;a. In the Build inclusion filter field, enter a filter expression that matches the log entries you want to include. If you don't set a filter, all logs from your selected resource are routed to the destination.&lt;/p&gt; 
&lt;p&gt;For example, you might want to build a filter to route all Data Access logs to a single Logging bucket. This filter looks like the following:&lt;/p&gt; 
&lt;p&gt;LOG_ID("cloudaudit.googleapis.com/data_access") OR LOG_ID("externalaudit.googleapis.com/data_access")&lt;/p&gt; 
&lt;p&gt;Note that the length of a filter can't exceed 20,000 characters.&lt;/p&gt; 
&lt;p&gt;b. To verify you entered the correct filter, select Preview logs. This opens the Logs Explorer in a new tab with the filter prepopulated.&lt;/p&gt; 
&lt;p&gt;7. (Optional) In the Choose logs to filter out of sink panel, do the following:&lt;/p&gt; 
&lt;p&gt;a. In the Exclusion filter name field, enter a name.&lt;/p&gt; 
&lt;p&gt;b. In the Build an exclusion filter field, enter a filter expression that matches the log entries you want to exclude. You can also use the sample function to select a portion of the log entries to exclude.&lt;/p&gt; 
&lt;p&gt;Key Point: If you want your exclusion filter to be disabled when the sink is created, then select Disable after you enter your filter expression. You can update the sink later to enable the exclusion filter.&lt;/p&gt; 
&lt;p&gt;You can create up to 50 exclusion filters per sink. Note that the length of a filter can't exceed 20,000 characters.&lt;/p&gt; 
&lt;p&gt;8. Select Create sink.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; There are no costs or limitations in Cloud Logging for exporting logs, but the export destinations charge for storing or transmitting the log data.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="CIS Google Cloud Platform Benchmark" url="https://www.cisecurity.org/benchmark/google_cloud_computing_platform/"/>
            <reference name="Configure and manage sinks" url="https://cloud.google.com/logging/docs/export/configure_export_v2"/>
          </references>
          <standards>
            <standard ref="2.2" supportedStandardRef="cis-gcp-standard"/>
            <standard ref="2.2" supportedStandardRef="cis-gcp-standard-level-2"/>
            <standard ref="A09:2021-Security Logging and Monitoring Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2017-Insufficient Logging-Monitoring" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>	&lt;p&gt;From Console:&lt;/p&gt;

	&lt;p&gt;1. Go to Logging/Exports by visiting https://console.cloud.google.com/logs/exports.&lt;/p&gt;

	&lt;p&gt;2. For every sink, click the 3-dot button for Menu options and select View Filter.&lt;/p&gt;

	&lt;p&gt;3. Ensure there is at least one sink with an empty sink filter.&lt;/p&gt;

	&lt;p&gt;4. Additionally, ensure that the resource configured as Destination exists.&lt;/p&gt;

	&lt;p&gt;From Command Line:&lt;/p&gt;

	&lt;p&gt;1. Ensure that a sink with an empty filter exists. List the sinks for the project, folder or organization. If sinks are configured at a folder or organization level, they do not need to be configured for each project: &lt;/p&gt;

	&lt;p&gt;gcloud logging sinks list -folder=FOLDER_ID | -organization=ORGANIZATION_ID | -project=PROJECT_ID&lt;/p&gt;

	&lt;p&gt;The output should list at least one sink with an empty filter.&lt;/p&gt;

	&lt;p&gt;2. Additionally, ensure that the resource configured as Destination exists.&lt;/p&gt;

	&lt;p&gt;See https://cloud.google.com/sdk/gcloud/reference/beta/logging/sinks/list for more information.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:54.109">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-GOV01" name="Configure the reset security challenge questions for Administrator accounts" issueId="" issueLink="" platform="" cost="1" risk="62" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Ensure configuration of the security challenge questions for the Administrator accounts recover or reset password process are secure.&amp;nbsp; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt;&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Go to &lt;a href="https://myaccount.google.com/security#signin"&gt;Google Cloud Account&lt;/a&gt;.&lt;/li&gt; 
  &lt;li&gt;Fill in the fields from the &amp;quot;Recover Account Options&amp;quot; sections and click &amp;quot;Save&amp;quot;.&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Google Cloud: Security" url="https://myaccount.google.com/security#signin"/>
          </references>
          <standards>
            <standard ref="A05:2021-Security Misconfiguration" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A6:2017-Security Misconfiguration" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Go to &lt;a href="https://myaccount.google.com/security#signin"&gt;Google Cloud
                            account&lt;/a&gt;.&lt;/li&gt;
                            &lt;li&gt;Check that all fields from the &amp;quot;Recover Account Options&amp;quot;
                            sections are filled correctly.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:53.487">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-MON06" name="Create alerts for changes in the security groups and in the security group configurations" issueId="" issueLink="" platform="" cost="0" risk="61" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Create alerts for changes in the security groups and in the security group configurations&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Create alerts to monitor, audit and notify about changes to the Security Groups or the Security Groups configuration. It's vital that monitoring of Security Groups detects and reports any unauthorized changes in the security systems.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; To create an alerting policy, do the following:&lt;/p&gt; 
&lt;p&gt;1. In the Cloud Console, select Monitoring. &lt;br&gt; 2. Select Alerting.&lt;br&gt; 3. Click Create Policy to see the Create alerting policy page.&lt;br&gt; 4. Fill in the sections as follows:&lt;br&gt; - The Conditions section is already set up. Fill the condition correctly.&lt;br&gt; - In the Notifications section, click Add Notification and fill in your email address or another notification method.&lt;br&gt; - In the Name this policy section, you can accept the default.&lt;br&gt; 5. Click Save.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Google Cloud: monitoring alerts" url="https://cloud.google.com/monitoring/alerts/"/>
          </references>
          <standards>
            <standard ref="A09:2021-Security Logging and Monitoring Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2017-Insufficient Logging-Monitoring" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>	&lt;p&gt;1. In the Cloud console, select Monitoring.&lt;br /&gt;
2. In the navigation pane, select Alerting.&lt;br /&gt;
3. To see all policies and to enable filtering, click See all policies in the Policies pane.&lt;br /&gt;
4. Check there exists an Alerting Policy to notify when security groups and their configurations are changed or modified.&lt;br /&gt;
5. Check that this alert is configured correctly and its notifications are configured to be sent to the corresponding users.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:53.852">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-MON03" name="Create alerts for security policy changes" issueId="" issueLink="" platform="" cost="1" risk="61" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Create alerts for security policy changes&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Create alerts to monitor, audit and notify when the Security Policy changes. It's vital that monitoring of the Security Policy detects and reports any unauthorized changes in the security configurations. &lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; To create an alerting policy, do the following:&lt;/p&gt; 
&lt;p&gt;1. In the Cloud Console, select Monitoring. &lt;br&gt; 2. Select Alerting.&lt;br&gt; 3. Click Create Policy to see the Create alerting policy page.&lt;br&gt; 4. Fill in the sections as follows:&lt;br&gt; - The Conditions section shall be set up. In this case, you have to add the condition for the next methods: projects.getIamPolicy, projects.setIamPolicy, organizations.getIamPolicy and organizations.setIamPolicy&lt;br&gt; - In the Notifications section, click Add Notification and fill in your email address or another notification method.&lt;br&gt; - In the Name this policy section, you can accept the default.&lt;br&gt; 5. Click Save.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Google Cloud docs: Modify IAM policy" url="https://cloud.google.com/logging/docs/audit/configure-data-access?hl=es-419#getiampolicy-setiampolicy"/>
            <reference name="Google Cloud: monitoring alerts" url="https://cloud.google.com/monitoring/alerts/"/>
          </references>
          <standards>
            <standard ref="A09:2021-Security Logging and Monitoring Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2017-Insufficient Logging-Monitoring" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>	&lt;p&gt;1. In the Cloud console, select Monitoring.&lt;br /&gt;
2. In the navigation pane, select Alerting.&lt;br /&gt;
3. To see all policies and to enable filtering, click See all policies in the Policies pane.&lt;br /&gt;
4. Check there exists an Alerting Policy to notify for security policy changes.&lt;br /&gt;
5. Check this alert is configured correctly and notifications are configured to be sent to the corresponding users.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:53.852">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-MON13" name="Create alerts for the Logging of configuration changes" issueId="" issueLink="" platform="" cost="0" risk="61" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Create alerts for the Logging of configuration changes&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Create alerts for Logging changes to monitor, audit and notify about changes in this section by the corresponding personnel. It's vital that any unauthorized changes are detected and reported.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; To create an alerting policy, do the following:&lt;/p&gt; 
&lt;p&gt;1. In the Cloud Console, select Monitoring. &lt;br&gt; 2. Select Alerting.&lt;br&gt; 3. Click Create Policy to see the Create alerting policy page.&lt;br&gt; 4. Fill in the sections as follows:&lt;br&gt; - The Conditions section is already set up. You don't have to change it.&lt;br&gt; - In the Notifications section, click Add Notification and fill in your email address or another notification method.&lt;br&gt; - In the Name this policy section, you can accept the default.&lt;br&gt; 5. Click Save.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Google Cloud: monitoring alerts" url="https://cloud.google.com/monitoring/alerts/"/>
          </references>
          <standards>
            <standard ref="A09:2021-Security Logging and Monitoring Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2017-Insufficient Logging-Monitoring" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>	&lt;p&gt;1. In the Cloud console, select Monitoring.&lt;br /&gt;
2. In the navigation pane, select Alerting.&lt;br /&gt;
3. To see all policies and to enable filtering, click See all policies in the Policies pane.&lt;br /&gt;
4. Check there exists an Alerting Policy to notify when the Logging of configuration changes.&lt;br /&gt;
5. Check that this alert is configured correctly and its notifications are configured to be sent to the corresponding users&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:53.852">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-MON10" name="Create alerts for the VPC route table changes" issueId="" issueLink="" platform="" cost="0" risk="61" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Create alerts for the VPC route table changes&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Create alerts to monitor, audit and notify when the VPC Route Table changes. It's vital that monitoring of the VPC Route Table detects and reports any unauthorized access to the security network systems.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; To create an alerting policy, do the following:&lt;/p&gt; 
&lt;p&gt;1. In the Cloud Console, select Monitoring. &lt;br&gt; 2. Select Alerting.&lt;br&gt; 3. Click Create Policy to see the Create alerting policy page.&lt;br&gt; 4. Fill in the sections as follows:&lt;br&gt; - The Conditions section is already set up. Fill the condition correctly.&lt;br&gt; - In the Notifications section, click Add Notification and fill in your email address or another notification method.&lt;br&gt; - In the Name this policy section, you can accept the default.&lt;br&gt; 5. Click Save.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Google Cloud: monitoring alerts" url="https://cloud.google.com/monitoring/alerts/"/>
          </references>
          <standards>
            <standard ref="A09:2021-Security Logging and Monitoring Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2017-Insufficient Logging-Monitoring" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>	&lt;p&gt;1. In the Cloud console, select Monitoring.&lt;br /&gt;
2. In the navigation pane, select Alerting.&lt;br /&gt;
3. To see all policies and to enable filtering, click See all policies in the Policies pane.&lt;br /&gt;
4. Check there exists an Alerting Policy to notify when the VPC route table configuration changes.&lt;br /&gt;
5. Check that this alert is configured correctly and its notifications are configured to be sent to the corresponding users.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:53.852">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-MON11" name="Create alerts for VPC gateway changes" issueId="" issueLink="" platform="" cost="0" risk="61" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Create alerts for VPC gateway changes&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Create alerts to monitor, audit and notify when the VPC Gateway changes. It's vital that monitoring of the VPC Gateway detects and reports any unauthorized access to the security network systems.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; To create an alerting policy, do the following:&lt;br&gt; 1. In the Cloud Console, select Monitoring. &lt;br&gt; 2. Select Alerting.&lt;br&gt; 3. Click Create Policy to see the Create alerting policy page.&lt;br&gt; 4. Fill in the sections as follows:&lt;br&gt;- The Conditions section is already set up. Fill the condition correctly.&lt;br&gt;- In the Notifications section, click Add Notification and fill in your email address or another notification method.&lt;br&gt;- In the Name this policy section, you can accept the default.&lt;br&gt; 5. Click Save.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Google Cloud: monitoring alerts" url="https://cloud.google.com/monitoring/alerts/"/>
          </references>
          <standards>
            <standard ref="A09:2021-Security Logging and Monitoring Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2017-Insufficient Logging-Monitoring" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>	&lt;p&gt;1. In the Cloud console, select Monitoring.&lt;br /&gt;
2. In the navigation pane, select Alerting.&lt;br /&gt;
3. To see all policies and to enable filtering, click See all policies in the Policies pane.&lt;br /&gt;
4. Check there exists an Alerting Policy to notify when the VPC gateway configuration changes.&lt;br /&gt;
5. Check that this alert is configured correctly and its notifications are configured to be sent to the corresponding users.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:53.852">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-MON09" name="Create alerts for VPC NACL changes" issueId="" issueLink="" platform="" cost="0" risk="61" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Create alerts for VPC NACL changes&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Create alerts to monitor, audit and notify when the VPC NACL (Network Access Control List) changes. It's vital that monitoring of VPC NACL detects and reports any unauthorized access to the security network systems.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; To create an alerting policy, do the following:&lt;/p&gt; 
&lt;p&gt;1. In the Cloud Console, select Monitoring. &lt;br&gt; 2. Select Alerting.&lt;br&gt; 3. Click Create Policy to see the Create alerting policy page.&lt;br&gt; 4. Fill in the sections as follows:&lt;br&gt; - The Conditions section is already set up. Fill the condition correctly.&lt;br&gt; - In the Notifications section, click Add Notification and fill in your email address or another notification method.&lt;br&gt; - In the Name this policy section, you can accept the default.&lt;br&gt; 5. Click Save.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Google Cloud: monitoring alerts" url="https://cloud.google.com/monitoring/alerts/"/>
          </references>
          <standards>
            <standard ref="A09:2021-Security Logging and Monitoring Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2017-Insufficient Logging-Monitoring" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>	&lt;p&gt;1. In the Cloud console, select Monitoring.&lt;br /&gt;
2. In the navigation pane, select Alerting.&lt;br /&gt;
3. To see all policies and to enable filtering, click See all policies in the Policies pane.&lt;br /&gt;
4. Check there exists an Alerting Policy to notify when the VPC NACL configuration changes.&lt;br /&gt;
5. Check that this alert is configured correctly and its notifications are configured to be sent to the corresponding users&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:53.852">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-MON08" name="Create alerts to be notified about console login failure attempts" issueId="" issueLink="" platform="" cost="0" risk="61" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Create alerts to be notified about console login failure attempts&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Create alerts to monitor, audit and to be notified when there are several console login failure attempts. It's vital that monitoring of these connection attempts detects and reports any unauthorized access to the systems.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; To create an alerting policy, do the following:&lt;/p&gt; 
&lt;p&gt;1. In the Cloud Console, select Monitoring. &lt;br&gt; 2. Select Alerting.&lt;br&gt; 3. Click Create Policy to see the Create alerting policy page.&lt;br&gt; 4. Fill in the sections as follows:&lt;br&gt; - The Conditions section is already set up. Fill the condition correctly.&lt;br&gt; - In the Notifications section, click Add Notification and fill in your email address or another notification method.&lt;br&gt; - In the Name this policy section, you can accept the default.&lt;br&gt; 5. Click Save.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Google Cloud: monitoring alerts" url="https://cloud.google.com/monitoring/alerts/"/>
          </references>
          <standards>
            <standard ref="A09:2021-Security Logging and Monitoring Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2017-Insufficient Logging-Monitoring" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>	&lt;p&gt;1. In the Cloud console, select Monitoring.&lt;br /&gt;
2. In the navigation pane, select Alerting.&lt;br /&gt;
3. To see all policies and to enable filtering, click See all policies in the Policies pane.&lt;br /&gt;
4. Check there exists an Alerting Policy to notify when the console login failure attempts are greater than a fixed number.&lt;br /&gt;
5. Check that this alert is configured correctly and its notifications are configured to be sent to the corresponding users.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:53.852">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-MON05" name="Create alerts to be notified about console login without 2FA" issueId="" issueLink="" platform="" cost="0" risk="61" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Create alerts to be notified about console login without 2FA&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Create alerts to monitor, audit and notify when users log into the console without a Second Factor of Authentication. It's vital that monitoring of authentication to systems detects and reports any unauthorized access to them.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; To create an alerting policy, do the following:&lt;/p&gt; 
&lt;p&gt;1. In the Cloud Console, select Monitoring. &lt;br&gt; 2. Select Alerting.&lt;br&gt; 3. Click Create Policy to see the Create alerting policy page.&lt;br&gt; 4. Fill in the sections as follows:&lt;br&gt; - The Conditions section is already set up. Fill the condition correctly.&lt;br&gt; - In the Notifications section, click Add Notification and fill in your email address or another notification method.&lt;br&gt; - In the Name this policy section, you can accept the default.&lt;br&gt; 5. Click Save.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Google Cloud: monitoring alerts" url="https://cloud.google.com/monitoring/alerts/"/>
          </references>
          <standards>
            <standard ref="A09:2021-Security Logging and Monitoring Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2017-Insufficient Logging-Monitoring" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>	&lt;p&gt;1. In the Cloud console, select Monitoring.&lt;br /&gt;
2. In the navigation pane, select Alerting.&lt;br /&gt;
3. To see all policies and to enable filtering, click See all policies in the Policies pane.&lt;br /&gt;
4. Check there exists an Alerting Policy to notify when users are logged into the console without using 2 Factor authentication&lt;br /&gt;
5. Check that this alert is configured correctly and its notifications are configured to be sent to the corresponding users.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:53.852">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-MON04" name="Create alerts to detect the changes of activity alerts" issueId="" issueLink="" platform="" cost="0" risk="61" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Create alerts to detect the changes of activity alerts&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Create alerts to monitor, audit and notify about the changes of Monitoring alerts. It's vital that the monitoring of alerts detects and reports any unauthorized changes in the Monitoring systems.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; To create an alerting policy, do the following:&lt;/p&gt; 
&lt;p&gt;1. In the Cloud Console, select Monitoring. &lt;br&gt; 2. Select Alerting.&lt;br&gt; 3. Click Create Policy to see the Create alerting policy page.&lt;br&gt; 4. Fill in the sections as follows:&lt;br&gt; - The Conditions section is already set up. You don't have to change it.&lt;br&gt; - In the Notifications section, click Add Notification and fill in your email address or another notification method.&lt;br&gt; - In the Name this policy section, you can accept the default.&lt;br&gt; 5. Click Save.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Google Cloud: monitoring alerts" url="https://cloud.google.com/monitoring/alerts/"/>
          </references>
          <standards>
            <standard ref="A09:2021-Security Logging and Monitoring Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2017-Insufficient Logging-Monitoring" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>	&lt;p&gt;1. In the Cloud console, select Monitoring.&lt;br /&gt;
2. In the navigation pane, select Alerting.&lt;br /&gt;
3. To see all policies and to enable filtering, click See all policies in the Policies pane.&lt;br /&gt;
4. Check there exists an Alerting Policy to notify about the changes of activity alerts.&lt;br /&gt;
5. Check this alert is configured correctly and notifications are configured to be sent to the corresponding users.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:53.852">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-MON02A" name="Create alerts to notify about improper usage of the root account" issueId="" issueLink="" platform="" cost="0" risk="61" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Create alerts to notify about improper usage of the root account&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Create alerts to monitor, audit and notify about usage of the root account when this account is used frequently. It's vital that monitoring of root account usage detects and reports unauthorized or improper usage.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; To create an alerting policy, do the following:&lt;/p&gt; 
&lt;p&gt;1. In the Cloud Console, select Monitoring. &lt;br&gt; 2. Select Alerting.&lt;br&gt; 3. Click Create Policy to see the Create alerting policy page.&lt;br&gt; 4. Fill in the sections as follows:&lt;br&gt; - The Conditions section is already set up. Fill the condition correctly.&lt;br&gt; - In the Notifications section, click Add Notification and fill in your email address or another notification method.&lt;br&gt; - In the Name this policy section, you can accept the default.&lt;br&gt; 5. Click Save.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Google Cloud: monitoring alerts" url="https://cloud.google.com/monitoring/alerts/"/>
            <reference name="Managing metric-based alerting policies" url="https://cloud.google.com/monitoring/alerts/using-alerting-ui"/>
          </references>
          <standards>
            <standard ref="A09:2021-Security Logging and Monitoring Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2017-Insufficient Logging-Monitoring" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>	&lt;p&gt;1. In the Cloud console, select Monitoring.&lt;br /&gt;
2. In the navigation pane, select Alerting.&lt;br /&gt;
3. To see all policies and to enable filtering, click See all policies in the Policies pane.&lt;br /&gt;
4. Check there exists an Alerting Policy to notify about improper usage of administrator accounts.&lt;br /&gt;
5. Check this alert is configured correctly and notifications are configured to be sent to the corresponding users.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:53.851">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-MON07" name="Create alerts when the data encryption changes" issueId="" issueLink="" platform="" cost="0" risk="61" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Create alerts when the data encryption changes&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Create alerts to monitor, audit and notify when the data encryption changes. It's vital that monitoring of data encryption detects and reports any unauthorized changes in the system configurations.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; To create an alerting policy, do the following:&lt;/p&gt; 
&lt;p&gt;1. In the Cloud Console, select Monitoring. &lt;br&gt; 2. Select Alerting.&lt;br&gt; 3. Click Create Policy to see the Create alerting policy page.&lt;br&gt; 4. Fill in the sections as follows:&lt;br&gt; - The Conditions section is already set up. Fill the condition correctly.&lt;br&gt; - In the Notifications section, click Add Notification and fill in your email address or another notification method.&lt;br&gt; - In the Name this policy section, you can accept the default.&lt;br&gt; 5. Click Save.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Google Cloud: monitoring alerts" url="https://cloud.google.com/monitoring/alerts/"/>
          </references>
          <standards>
            <standard ref="A09:2021-Security Logging and Monitoring Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2017-Insufficient Logging-Monitoring" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>	&lt;p&gt;1. In the Cloud console, select Monitoring.&lt;br /&gt;
2. In the navigation pane, select Alerting.&lt;br /&gt;
3. To see all policies and to enable filtering, click See all policies in the Policies pane.&lt;br /&gt;
4. Check there exists an Alerting Policy to notify when the data encryption configuration changes.&lt;br /&gt;
5. Check that this alert is configured correctly and its notifications are configured to be sent to the corresponding users&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:53.852">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-MON01" name="Create an uptime check to alert when the server is down" issueId="" issueLink="" platform="" cost="0" risk="61" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Create an uptime check to alert when the server is down&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Create an uptime check to verify your web server is always accessible. The alerting policy controls who is notified when the uptime check fails.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Create an uptime check and an alerting policy&lt;/p&gt; 
&lt;p&gt;To create an uptime check, do the following:&lt;/p&gt; 
&lt;p&gt;1. In the Cloud console, select Monitoring.&lt;br&gt; 2. In the navigation pane, click Uptime checks.&lt;br&gt; 3. Click Create Uptime check.&lt;br&gt; 4. For the title, enter My Uptime Check and then click Next.&lt;br&gt; 5. Target:&lt;br&gt; a. Select HTTP as the protocol.&lt;br&gt; b. Select Instance as the Resource Type.&lt;br&gt; c. In the Applies To field, select Single and for the instance name select lamp-1-vm.&lt;br&gt; d. Leave all other fields at their default values and click Next.&lt;br&gt; 6. Response Validation: Leave these fields at their default values and click Next&lt;br&gt; 7. Alert &amp;amp; Notification:&lt;br&gt; a. Ensure that the toggle's label is Alerting is enabled.&lt;br&gt; b. Leave the name and duration fields at their default values.&lt;br&gt; c. To add a notification channel to the alerting policy, in the text box labeled Notification channels, click Menu. Select the channels to add and click OK. The notifications are grouped alphabetically for each channel type.&lt;br&gt; To add an entry to the checkbox list, click Manage notification channels and follow the instructions. When you return to this dialog, click Refresh.&lt;br&gt; 8. To verify your uptime check configuration, click Test. If you see a "Connection error - refused" message, you might have not installed the Apache HTTP Server or you might have specified the HTTPS check type rather than HTTP.&lt;br&gt; 9. Click Create. When the create action is successful, the message Check and alert created is displayed and then the Uptime checks dashboard page is displayed.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Google Cloud: monitoring gs checks" url="https://cloud.google.com/monitoring/quickstart-lamp#gs-checks"/>
            <reference name="Monitor a Compute Engine virtual machine" url="https://cloud.google.com/monitoring/monitor-compute-engine-virtual-machine"/>
          </references>
          <standards>
            <standard ref="A09:2021-Security Logging and Monitoring Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2017-Insufficient Logging-Monitoring" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>	&lt;p&gt;1. Check there exists an uptime Check alert to notify when the server is down.&lt;br /&gt;
2. Check that this uptime Check alert is configured correctly.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:53.851">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-IAM07" name="Create a process to create and manage the Google Service Keys" issueId="" issueLink="" platform="" cost="1" risk="64" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Create a process or mechanism to create, manage, or revoke the assignment of keys to users and
                        give them the least necessary access to resources. There are two types of service account keys:&amp;nbsp;
                        &lt;div&gt;
                        &lt;ul&gt;
                        &lt;li&gt;&lt;b&gt;GCP-managed keys:&lt;/b&gt;&amp;nbsp;These keys are used by Cloud Platform
                        services such as the App Engine and Compute Engine. These keys cannot be downloaded. Google will
                        keep the keys and automatically rotate them daily.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;&lt;b&gt;User-managed keys:&amp;nbsp;&lt;/b&gt;These keys are created, downloadable,
                        and managed by users. For user-managed keys, you need to ensure you have processes in place to
                        address key management requirements such as:&amp;nbsp;&lt;/li&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Key storage&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Key distribution&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Key revocation&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Key rotation&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Protecting the keys from unauthorized users.&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/ul&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Google Cloud docs: IAM manage account keys" url="https://cloud.google.com/iam/docs/understanding-service-accounts#managing_service_account_keys"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check there exists a mechanism or process to create, manage or revoke the assignment of
                            keys to users.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:53.488">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-IAM05" name="Create Individual Accounts for the administrator users" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Create individual accounts for administrator users and with these new accounts perform the necessary administrative actions. By creating service accounts for people accessing your account, you can give each Google user a unique set of security credentials and roles.&amp;nbsp; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The administrator accounts shall be used for administrative actions and for giving or revoking credentials to users' accounts. The administrator account shall be not used as a normal user account. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Open the Service Accounts page in the Cloud Platform Console and open the IAM page.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Click Select a project.&lt;/li&gt; 
  &lt;li&gt;Select your project and click Open.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Click Create Service Account.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Enter a service account name, select a role you wish to grant to the service account and click Create.&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Google Cloud docs: manage service accounts" url="https://cloud.google.com/iam/docs/creating-managing-service-accounts"/>
          </references>
          <standards>
            <standard ref="A07:2021-Identification and Authentication Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A2:2017-Broken Authentication" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Open the Service Accounts page in the Cloud Platform Console and open the IAM
                            page.&lt;/li&gt;
                            &lt;li&gt;Click Select a project.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Select your project and click Open.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Review that each administrator user has an individual Google Service Account.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:53.488">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-LOG04" name="Create log metric filters and alerts" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Create log metric filters and alerts&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; You can use log-based alerts to notify you whenever a specific message appears in your included logs. For example, if you want to know when an audit log records a particular data-access message, you can create a log-based alert that matches the message and notifies you when it appears.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Create a log-based alert (Logs Explorer)&lt;/p&gt; 
&lt;p&gt;You can create log-based alerts from the Logs Explorer page in the Google Cloud console or by using the Monitoring API.&lt;/p&gt; 
&lt;p&gt;The Logs Explorer interface for creating and editing log-based alerts guides you through the following steps:&lt;/p&gt; 
&lt;p&gt;- Provide a name and description for the alert.&lt;br&gt; - Choose the logs for which you want to receive a notification.&lt;br&gt; - Set the time between notifications.&lt;br&gt; - Set the time for automatic closure of incidents.&lt;br&gt; - Specify whom to notify.&lt;/p&gt; 
&lt;p&gt;For example, assume that you have an application that writes a syslog log entry with NOTICE severity when the application changes a network address. The log entries for network-address changes include a JSON payload that looks like the following:&lt;/p&gt; 
&lt;p&gt;"jsonPayload": { "type": "Configuration change", "action": "Set network address", "result": "IP_ADDRESS",&lt;br&gt; }&lt;/p&gt; 
&lt;p&gt;You want to create a log-based alert that notifies you when an invalid IPv4 address appears in the jsonPayload.result field of log entries in syslog with NOTICE severity.&lt;/p&gt; 
&lt;p&gt;To create the log-based alert, do the following:&lt;/p&gt; 
&lt;p&gt;1. In the Cloud console, select Logging, and then select Logs Explorer:&lt;/p&gt; 
&lt;p&gt;2. Use the Query pane to build a query that matches the message you want to use in your log-based alert.&lt;/p&gt; 
&lt;p&gt;For example, to find log entries with a severity level of NOTICE in the syslog log that have invalid IP addresses in the JSON payload, you can use the following query:&lt;/p&gt; 
&lt;p&gt;log_id("syslog")&lt;br&gt; severity = "NOTICE"&lt;br&gt; jsonPayload.result !~ "^((25[0-5]|2[0-4][0-9]|&lt;sup&gt;&lt;a&gt;01&lt;/a&gt;&lt;/sup&gt;?[0-9][0-9]?)(\.|$)){4}$"&lt;/p&gt; 
&lt;p&gt;Use Run query in the Query results pane to validate the query.&lt;/p&gt; 
&lt;p&gt;3. In the header of the Query results pane, click Create alert. When your window is narrow, the Create alert option might appear on the Actions menu instead.&lt;/p&gt; 
&lt;p&gt;4. In the Alert details pane, give the alert a name and description:&lt;/p&gt; 
&lt;p&gt;a. Enter a name for your alert in the Alert Name field. For example: "Network address: invalid IPv4 value".&lt;/p&gt; 
&lt;p&gt;b. Enter a description of this alert. You can also include information that might help the recipient of a notification diagnose the problem. The following string summarizes the reason for the alert:&lt;/p&gt; 
&lt;p&gt;Log-based alert in project ${project} detected an invalid IPv4 value..&lt;/p&gt; 
&lt;p&gt;5. To advance to the next step, click Next.&lt;/p&gt; 
&lt;p&gt;6. In the Choose logs to include in the alert pane, check the query and results by clicking Preview logs.&lt;/p&gt; 
&lt;p&gt;Google Cloud recommends building the query in the Logs Explorer Query pane. The query you built in the Query pane is also displayed on this pane, for example:&lt;/p&gt; 
&lt;p&gt;log_id("syslog")&lt;br&gt; severity = "NOTICE"&lt;br&gt; jsonPayload.result !~ "^((25[0-5]|2[0-4][0-9]|&lt;sup&gt;&lt;a&gt;01&lt;/a&gt;&lt;/sup&gt;?[0-9][0-9]?)(\.|$)){4}$"&lt;/p&gt; 
&lt;p&gt;You can edit the query in this pane, if necessary. If you edit the query, then check the results by clicking Preview logs.&lt;/p&gt; 
&lt;p&gt;7. Click Next.&lt;/p&gt; 
&lt;p&gt;8. Select the minimum time between notifications. This value lets you control the number of notifications you get from this alert if it is triggered multiple times. For this example, select 5 min from the options.&lt;/p&gt; 
&lt;p&gt;You can leave the incident auto-close duration at the default value, or you can set it to a different value by selecting a different option on the menu.&lt;/p&gt; 
&lt;p&gt;9. Click Next.&lt;/p&gt; 
&lt;p&gt;10. Select one or more notification channels for your alert. For this example, select an email notification channel.&lt;/p&gt; 
&lt;p&gt;If you already have an email notification channel configured, then you can select it from the list. If not, click Manage notification channels and add an email channel. For information about creating notification channels, see Managing notification channels.&lt;/p&gt; 
&lt;p&gt;11. Click Save.&lt;/p&gt; 
&lt;p&gt;Your log-based alert is now ready to test.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="CIS Google Cloud Platform Benchmark" url="https://www.cisecurity.org/benchmark/google_cloud_computing_platform/"/>
            <reference name="Managing log-based alerts" url="https://cloud.google.com/logging/docs/alerting/log-based-alerts"/>
          </references>
          <standards>
            <standard ref="2.10" supportedStandardRef="cis-gcp-standard"/>
            <standard ref="2.10" supportedStandardRef="cis-gcp-standard-level-2"/>
            <standard ref="2.11" supportedStandardRef="cis-gcp-standard"/>
            <standard ref="2.11" supportedStandardRef="cis-gcp-standard-level-2"/>
            <standard ref="2.4" supportedStandardRef="cis-gcp-standard"/>
            <standard ref="2.4" supportedStandardRef="cis-gcp-standard-level-2"/>
            <standard ref="2.5" supportedStandardRef="cis-gcp-standard"/>
            <standard ref="2.5" supportedStandardRef="cis-gcp-standard-level-2"/>
            <standard ref="2.6" supportedStandardRef="cis-gcp-standard"/>
            <standard ref="2.6" supportedStandardRef="cis-gcp-standard-level-2"/>
            <standard ref="2.7" supportedStandardRef="cis-gcp-standard"/>
            <standard ref="2.7" supportedStandardRef="cis-gcp-standard-level-2"/>
            <standard ref="2.8" supportedStandardRef="cis-gcp-standard"/>
            <standard ref="2.8" supportedStandardRef="cis-gcp-standard-level-2"/>
            <standard ref="2.9" supportedStandardRef="cis-gcp-standard"/>
            <standard ref="2.9" supportedStandardRef="cis-gcp-standard-level-2"/>
            <standard ref="A09:2021-Security Logging and Monitoring Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2017-Insufficient Logging-Monitoring" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>	&lt;p&gt;Test the example log-based alert&lt;/p&gt;

	&lt;p&gt;To test the alert you created in the Description section, you can manually write a log entry that matches the query. To write the log entry, do the following:&lt;/p&gt;

	&lt;p&gt;1. Configure the following log entry by changing the PROJECT_ID variable to your project ID:&lt;/p&gt;

	&lt;p&gt;{
  "entries": [
  {
    "logName": "projects/PROJECT_ID/logs/syslog",
    "jsonPayload": {
      "type": "Configuration change",
      "action": "Set network address",
      "result": "999.027.405.1",
    },
    "severity": "NOTICE",
    "resource": {
      "type": "generic_task",
      "labels" : {
        "project_id": "PROJECT_ID",
        "location": "us-east1",
        "namespace": "fake-task-2",
        "job": "write-log-entry",
        "task_id": "11",
      },
    },
  ],&lt;br /&gt;
}&lt;/p&gt;

	&lt;p&gt;2. Go to the logEntries.write reference page, or click the following button:&lt;/p&gt;

	&lt;p&gt;3. Copy the log entry you configured previously.&lt;/p&gt;

	&lt;p&gt;4. In the Try this API pane, do the following:&lt;/p&gt;

	&lt;p&gt;a. Replace the content of the Request body field in APIs Explorer with the log entry you copied in the previous step.&lt;/p&gt;

	&lt;p&gt;b. Click Execute. If prompted, follow the authentication flow.&lt;/p&gt;

	&lt;p&gt;If the logEntries.write call is successful, then you get an HTTP 200 response code and an empty response body, {}.&lt;/p&gt;

	&lt;p&gt;The log entry matches the filter specified for the alert in the following ways:&lt;/p&gt;

	&lt;p&gt;- The logName value specifies the syslog log in your Cloud project.&lt;br /&gt;
- The severity value for this log entry is NOTICE.&lt;br /&gt;
- The jsonPayload.result value is not a valid IPv4 address.&lt;/p&gt;

	&lt;p&gt;After you write the log entry, the following sequence occurs:&lt;/p&gt;

	&lt;p&gt;- The new log entry appears in the Logs Explorer and triggers the alert.&lt;br /&gt;
- An incident is opened in Cloud Monitoring.&lt;br /&gt;
- You receive a notification for the incident. If you configured an email notification channel, then the notification looks like the following screenshot:&lt;/p&gt;

	&lt;p&gt;You can click View incident in the email to see the incident in Cloud Monitoring.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:54.109">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-IAM04" name="Create mechanisms to ensure Least Privilege is applied" issueId="" issueLink="" platform="" cost="0" risk="64" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Create mechanisms to periodically review the group and user permissions to ensure the least
                        privilege for the user accounts. Granting least privilege ensures that users only have the
                        permissions required to complete their tasks rather than additional privileges that are not
                        required. Following this model ensures that, should an account be compromised, the blast radius
                        of damage is limited.&amp;nbsp;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        Allocate privileges via groups or roles via the recommendation in &amp;quot;Use RBAC with
                        pre-defined policies added into groups or roles&amp;quot;.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Open the IAM page in the Google Cloud Platform Console and open the IAM page.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Click Select a project.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Select a project and click Open.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Review the groups and users with access to the project and their permissions.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;If there is a user with more privileges, revoke the access as following:&lt;/li&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Select the user to revoke privileges.&lt;/li&gt;
                        &lt;li&gt;In the Roles(s) drop-down menu in the member's row, uncheck the roles you want to
                        revoke and click Save.&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Granting, changing, and revoking access to resources" url="https://cloud.google.com/iam/docs/granting-changing-revoking-access"/>
          </references>
          <standards>
            <standard ref="A01:2021-Broken Access Control" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A5:2017-Broken Access Control" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check there is a mechanism in place to ensure the enforcement of the Least Privilege
                            principle.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:53.488">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-IAM02" name="Define roles for the Google Service Accounts" issueId="" issueLink="" platform="" cost="0" risk="64" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Define and create the roles for the Google Cloud. For each role, you can use one of the
                        predefined roles or create a new custom role to ensure that each role has got the least minimum
                        permissions.&amp;nbsp;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;List all predefined roles and review them.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;If it's necessary, create new custom roles to ensure users have the least privileges.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="A01:2021-Broken Access Control" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A5:2017-Broken Access Control" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;List all roles.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Check that all fulfill the least privilege principle.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Check that all roles are defined correctly.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:53.488">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="C-GCP-LOG-03" name="Enable Access Approval" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;GCP Access Approval enables you to require your organizations' explicit approval whenever Google support try to access your projects. You can then select users within your organization who can approve these requests through giving them a security role in IAM. All access requests display which Google Employee requested them in an email or Pub/Sub message that you can choose to Approve. This adds an additional control and logging of who in your organization approved/denied these requests.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Rationale&lt;/strong&gt;:&lt;/p&gt;&lt;p&gt;Controlling access to your information is one of the foundations of information security. Google Employees do have access to your organizations' projects for support reasons. With Access Approval, organizations can then be certain that their information is accessed by only approved Google Personnel.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Impact:&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;To use Access Approval your organization will need have enabled Access Transparency and have at one of the following support level: Enhanced or Premium. There will be subscription costs associated with these support levels, as well as increased storage costs for storing the logs. You will also not be able to turn the Access Transparency which Access Approval depends on, off yourself. To do so you will need to submit a service request to Google Cloud Support. There will also be additional overhead in managing user permissions. There may also be a potential delay in support times as Google Personnel will have to wait for their access to be approved.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation&lt;/strong&gt;:&lt;/p&gt;&lt;p&gt;From Console:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;From the Google Cloud Home, within the project you wish to enable, click on the Navigation hamburger menu in the top left. Hover over the Security Menu. Select Access Approval in the middle of the column that opens.&lt;/li&gt;&lt;li&gt;The status will be displayed here. On this screen, there is an option to click Enroll. If it is greyed out and you see an error bar at the top of the screen that says Access Transparency is not enabled please view the corresponding reference within this section to enable it.&lt;/li&gt;&lt;li&gt;In the second screen click Enroll.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;Grant an IAM Group or User the role with permissions to Add Users to be Access Approval message Recipients&lt;/p&gt;&lt;ol&gt;&lt;li&gt;From the Google Cloud Home, within the project you wish to enable, click on the Navigation hamburger menu in the top left. Hover over the IAM and Admin. Select IAM in the middle of the column that opens.&lt;/li&gt;&lt;li&gt;Click the blue button the says +add at the top of the screen.&lt;/li&gt;&lt;li&gt;In the principals field, select a user or group by typing in their associated email address.&lt;/li&gt;&lt;li&gt;Click on the role field to expand it. In the filter field enter Access Approval Approver and select it.&lt;/li&gt;&lt;li&gt;Click save.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;Add a Group or User as an Approver for Access Approval Requests&lt;/p&gt;&lt;ol&gt;&lt;li&gt;As a user with the Access Approval Approver permission, within the project where you wish to add an email address to which request will be sent, click on the Navigation hamburger menu in the top left. Hover over the Security Menu. Select Access Approval in the middle of the column that opens.&lt;/li&gt;&lt;li&gt;Click Manage Settings&lt;/li&gt;&lt;li&gt;Under Set up approval notifications, enter the email address associated with a Google Cloud User or Group you wish to send Access Approval requests to. All future access approvals will be sent as emails to this address.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;From CLI:&lt;/p&gt;&lt;p&gt;To update all services in an entire project, run the following command from an account that has permissions as an 'Approver for Access Approval Requests'&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;gcloud access-approval settings update --project=&amp;lt;project name&amp;gt; --enrolled_services=all --notification_emails='&amp;lt;email recipient for access approval requests&amp;gt;@&amp;lt;domain name&amp;gt;'&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;strong&gt;Default Value:&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;By default Access Approval and its dependency of Access Transparency are not enabled.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Google Cloud docs: Access Approval" url="https://cloud.google.com/cloud-provider-access-management/access-approval/docs/overview"/>
          </references>
          <standards>
            <standard ref="2.15" supportedStandardRef="cis-gcp-standard-level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;&lt;strong&gt;Determine if Access Transparency is Enabled as it is a Dependency&lt;/strong&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;From the Google Cloud Home inside the project you wish to audit, click on the Navigation hamburger menu in the top left. Hover over the IAM &amp;amp; Admin Menu. Select settings in the middle of the column that opens.&lt;/li&gt;&lt;li&gt;The status should be "Enabled' under the heading Access Transparency&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;strong&gt;Determine if Access Approval is Enabled&lt;/strong&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;From the Google Cloud Home, within the project you wish to check, click on the Navigation hamburger menu in the top left. Hover over the Security Menu. Select Access Approval in the middle of the column that opens.&lt;/li&gt;&lt;li&gt;The status will be displayed here. If you see a screen saying you need to enroll in Access Approval, it is not enabled.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;From CLI:&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Determine if Access Approval is Enabled&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;From within the project you wish to audit, run the following command.&amp;nbsp;&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;gcloud access-approval settings get&lt;/p&gt;&lt;/blockquote&gt;&lt;ul&gt;&lt;li&gt;The status will be displayed in the output.&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:54.109">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="C-GCP-LOG-02" name="Enable Access Transparency" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;GCP Access Transparency provides audit logs for all actions that Google personnel take in your Google Cloud resources.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Rationale&lt;/strong&gt;:&lt;/p&gt;&lt;p&gt;Controlling access to your information is one of the foundations of information security. Given that Google Employees do have access to your organizations' projects for support reasons, you should have logging in place to view who, when, and why your information is being accessed.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Impact&lt;/strong&gt;:&lt;/p&gt;&lt;p&gt;To use Access Transparency your organization will need to have at one of the following support level: Premium, Enterprise, Platinum, or Gold. There will be subscription costs associated with support, as well as increased storage costs for storing the logs. You will also not be able to turn Access Transparency off yourself, and you will need to submit a service request to Google Cloud Support.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation:&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Add privileges to enable Access Transparency&lt;/strong&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;From the Google Cloud Home, within the project you wish to check, click on the Navigation hamburger menu in the top left. Hover over the 'IAM and Admin'. Select IAM in the top of the column that opens.&lt;/li&gt;&lt;li&gt;Click the blue button the says +add at the top of the screen.&lt;/li&gt;&lt;li&gt;In the principals field, select a user or group by typing in their associated email address.&lt;/li&gt;&lt;li&gt;Click on the role field to expand it. In the filter field enter Access Transparency Admin and select it.&lt;/li&gt;&lt;li&gt;Click save.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;strong&gt;Verify that the Google Cloud project is associated with a billing account&lt;/strong&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;From the Google Cloud Home, click on the Navigation hamburger menu in the top left. Select Billing.&lt;/li&gt;&lt;li&gt;If you see This project is not associated with a billing account you will need to enter billing information or switch to a project with a billing account.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;strong&gt;Enable Access Transparency&lt;/strong&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;From the Google Cloud Home, click on the Navigation hamburger menu in the top left. Hover over the IAM &amp;amp; Admin Menu. Select settings in the middle of the column that opens.&lt;/li&gt;&lt;li&gt;Click the blue button labeled Enable Access Transparency for Organization&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;strong&gt;Default Value:&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;By default Access Transparency is not enabled.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Google Cloud docs: Access Transparency" url="https://cloud.google.com/cloud-provider-access-management/access-transparency/docs/overview"/>
          </references>
          <standards>
            <standard ref="2.14" supportedStandardRef="cis-gcp-standard"/>
            <standard ref="2.14" supportedStandardRef="cis-gcp-standard-level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;&lt;strong&gt;Determine if Access Transparency is Enabled&lt;/strong&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;From the Google Cloud Home, click on the Navigation hamburger menu in the top left. Hover over the IAM &amp;amp; Admin Menu. Select settings in the middle of the column that opens.&lt;/li&gt;&lt;li&gt;The status will be under the heading Access Transparency. Status should be Enabled&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:54.109">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-LOG01" name="Enable all access logs" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Enable all access logs&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Enable all audit logs in the Google Cloud Platform to control and monitor the access of users and the configuration changes in the systems. &lt;br&gt; First, you have to know there are two types of audit logs in the Google Cloud Platform: &lt;br&gt; - Admin Activity audit logs that are enabled for all services and cannot be configured.&lt;br&gt; - Data Access audit logs that are not enabled by default and they shall be configured.&lt;/p&gt; 
&lt;p&gt;Remediation: &lt;br&gt; Configure Data Access audit logs with the Cloud console&lt;/p&gt; 
&lt;p&gt;You can also use the API or the Google Cloud CLI to perform these tasks programmatically.&lt;/p&gt; 
&lt;p&gt;To access audit log configuration options in the Cloud console, follow these steps:&lt;/p&gt; 
&lt;p&gt;1. From the Cloud console, select IAM &amp;amp; Admin &amp;gt; Audit Logs:&lt;/p&gt; 
&lt;p&gt;2. Select an existing Cloud project, folder, or organization at the top of the page.&lt;/p&gt; 
&lt;p&gt;Enable audit logs&lt;/p&gt; 
&lt;p&gt;To enable Data Access audit logs, do the following:&lt;/p&gt; 
&lt;p&gt;1. In the main table on the Audit Logs page, select one or more Google Cloud services from the Title column.&lt;/p&gt; 
&lt;p&gt;2. In the Log Type tab, select the Data Access audit log types that you want to enable and then click Save.&lt;/p&gt; 
&lt;p&gt;3. Where you have successfully enabled audit logs, the table includes a checkmark. In the following example, you see that, for the Cloud Composer API service, Admin Read and Data Read audit logs are enabled:&lt;/p&gt; 
&lt;p&gt;You can also enable audit logs for all Google Cloud services that produce Data Access audit logs. In the main table on the Audit Logs page, select all Google Cloud services.&lt;/p&gt; 
&lt;p&gt;Note that this bulk configuration method applies only to the Google Cloud services that are currently available. If a new Google Cloud service is added, it inherits your default audit configuration.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Configure Data Access audit logs" url="https://cloud.google.com/logging/docs/audit/configure-data-access#config-console"/>
            <reference name="Google Cloud docs: data access" url="https://cloud.google.com/logging/docs/audit/configure-data-access#project-and-organization"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="A09:2021-Security Logging and Monitoring Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2017-Insufficient Logging-Monitoring" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>	&lt;p&gt;Check that all audit logs in the Google Cloud Platform are enabled and configured.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:54.109">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="C-GCP-LOG-01" name="Enable Cloud Asset Inventory" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;GCP Cloud Asset Inventory is services that provides a historical view of GCP resources and IAM policies through a time-series database. The information recorded includes metadata on Google Cloud resources, metadata on policies set on Google Cloud projects or resources, and runtime information gathered within a Google Cloud resource.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Rationale:&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;The GCP resources and IAM policies captured by GCP Cloud Asset Inventory enables security analysis, resource change tracking, and compliance auditing.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Impact&lt;/strong&gt;:&lt;/p&gt;&lt;p&gt;It is recommended GCP Cloud Asset Inventory be enabled for all GCP projects.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation&lt;/strong&gt;:&lt;/p&gt;&lt;p&gt;From Console:&amp;nbsp;&lt;/p&gt;&lt;p&gt;Enable the Cloud Asset API:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;1Go to API &amp;amp; Services/Library by visiting https://console.cloud.google.com/apis/library&lt;/li&gt;&lt;li&gt;Search for Cloud Asset API and select the result for Cloud Asset API&lt;/li&gt;&lt;li&gt;Click the ENABLE button.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;From Command Line:&amp;nbsp;&lt;/p&gt;&lt;p&gt;Enable the Cloud Asset API:&lt;/p&gt;&lt;p&gt;Enable the Cloud Asset API through the services interface:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;gcloud services enable cloudasset.googleapis.com&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;strong&gt;Default Value:&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;The Cloud Asset Inventory API is disabled by default in each project.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Google Cloud docs: Asset Inventory" url="https://cloud.google.com/asset-inventory/docs"/>
          </references>
          <standards>
            <standard ref="2.13" supportedStandardRef="cis-gcp-standard"/>
            <standard ref="2.13" supportedStandardRef="cis-gcp-standard-level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;From Console:&amp;nbsp;&lt;/p&gt;&lt;p&gt;Ensure that the Cloud Asset API is enabled:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Go to API &amp;amp; Services/Library by visiting https://console.cloud.google.com/apis/library&lt;/li&gt;&lt;li&gt;Search for Cloud Asset API and select the result for Cloud Asset API&lt;/li&gt;&lt;li&gt;Ensure that API Enabled is displayed.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;From Command Line:&amp;nbsp;&lt;/p&gt;&lt;p&gt;Ensure that the Cloud Asset API is enabled:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Query enabled services:&amp;nbsp;&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;gcloud services list --enabled --filter=name:cloudasset.googleapis.com&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;If the API is listed, then it is enabled. If the response is Listed 0 items the API is not enabled.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:54.108">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-IAM15" name="Enable MFA for all non-service accounts" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Secure Sockets Layer (SSL) policies determine what port Transport Layer Security (TLS) features clients are permitted to use when connecting to load balancers. To prevent usage of insecure features, SSL policies should use (a) at least TLS 1.2 with the MODERN profile; or (b) the RESTRICTED profile, because it effectively requires clients to use TLS 1.2 regardless of the chosen minimum TLS version; or (3) a CUSTOM profile that does not support any of the following features:&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;TLS_RSA_WITH_AES_128_GCM_SHA256&amp;nbsp;&lt;/li&gt;&lt;li&gt;TLS_RSA_WITH_AES_256_GCM_SHA384&amp;nbsp;&lt;/li&gt;&lt;li&gt;TLS_RSA_WITH_AES_128_CBC_SHA&amp;nbsp;&lt;/li&gt;&lt;li&gt;TLS_RSA_WITH_AES_256_CBC_SHA&amp;nbsp;&lt;/li&gt;&lt;li&gt;TLS_RSA_WITH_3DES_EDE_CBC_SHA&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Rationale:&lt;/p&gt;&lt;p&gt;Load balancers are used to efficiently distribute traffic across multiple servers. Both SSL proxy and HTTPS load balancers are external load balancers, meaning they distribute traffic from the Internet to a GCP network. GCP customers can configure load balancer SSL policies with a minimum TLS version (1.0, 1.1, or 1.2) that clients can use to establish a connection, along with a profile (Compatible, Modern, Restricted, or Custom) that specifies permissible cipher suites. To comply with users using outdated protocols, GCP load balancers can be configured to permit insecure cipher suites. In fact, the GCP default SSL policy uses a minimum TLS version of 1.0 and a Compatible profile, which allows the widest range of insecure cipher suites. As a result, it is easy for customers to configure a load balancer without even knowing that they are permitting outdated cipher suites.&lt;/p&gt;&lt;p&gt;Impact:&lt;/p&gt;&lt;p&gt;Creating more secure SSL policies can prevent clients using older TLS versions from establishing a connection.&lt;/p&gt;&lt;p&gt;Remediation:&lt;/p&gt;&lt;p&gt;From Console: If the TargetSSLProxy or TargetHttpsProxy does not have an SSL policy configured, create a new SSL policy. Otherwise, modify the existing insecure policy.&lt;/p&gt;&lt;p&gt;1. Navigate to the SSL Policies page by visiting: https://console.cloud.google.com/net-security/sslpolicies&lt;/p&gt;&lt;p&gt;2. Click on the name of the insecure policy to go to its SSL policy details page.&lt;/p&gt;&lt;p&gt;3. Click EDIT.&lt;/p&gt;&lt;p&gt;4. Set Minimum TLS version to TLS 1.2.&lt;/p&gt;&lt;p&gt;5. Set Profile to Modern or Restricted.&lt;/p&gt;&lt;p&gt;6. Alternatively, if teh user selects the profile Custom, make sure that the following features are disabled:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;TLS_RSA_WITH_AES_128_GCM_SHA256&amp;nbsp;&lt;/p&gt;&lt;p&gt;TLS_RSA_WITH_AES_256_GCM_SHA384&amp;nbsp;&lt;/p&gt;&lt;p&gt;TLS_RSA_WITH_AES_128_CBC_SHA&amp;nbsp;&lt;/p&gt;&lt;p&gt;TLS_RSA_WITH_AES_256_CBC_SHA&amp;nbsp;&lt;/p&gt;&lt;p&gt;TLS_RSA_WITH_3DES_EDE_CBC_SHA&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;From Command Line:&lt;/p&gt;&lt;p&gt;1. For each insecure SSL policy, update it to use secure cyphers:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;gcloud compute ssl-policies update NAME [--profile COMPATIBLE|MODERN|RESTRICTED|CUSTOM] --min-tls-version 1.2 [--custom-features FEATURES]&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;2. If the target proxy has a GCP default SSL policy, use the following command corresponding to the proxy type to update it.&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;gcloud compute target-ssl-proxies update TARGET_SSL_PROXY_NAME --ssl-policy SSL_POLICY_NAME&amp;nbsp;&lt;/p&gt;&lt;p&gt;gcloud compute target-https-proxies update TARGET_HTTPS_POLICY_NAME --ssl-policy SSL_POLICY_NAME&lt;/p&gt;&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="CIS Google Cloud Platform Benchmark" url="https://www.cisecurity.org/benchmark/google_cloud_computing_platform/"/>
          </references>
          <standards>
            <standard ref="1.2" supportedStandardRef="cis-gcp-standard"/>
            <standard ref="1.2" supportedStandardRef="cis-gcp-standard-level-2"/>
            <standard ref="A05:2021-Security Misconfiguration" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A6:2017-Security Misconfiguration" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;From Console:&lt;/p&gt;&lt;p&gt;1. See all load balancers by visiting https://console.cloud.google.com/net-services/loadbalancing/loadBalancers/list.&lt;/p&gt;&lt;p&gt;2. For each load balancer for SSL (Proxy) or HTTPS, click on its name to go the Load balancer details page.&lt;/p&gt;&lt;p&gt;3. Ensure that each target proxy entry in the Frontend table has an SSL Policy configured.&lt;/p&gt;&lt;p&gt;4. Click on each SSL policy to go to its SSL policy details page.&lt;/p&gt;&lt;p&gt;5. Ensure that the SSL policy satisfies one of the following conditions:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;has a Min TLS set to TLS 1.2 and Profile set to Modern profile, or&lt;/li&gt;&lt;li&gt;has Profile set to Restricted. Note that a Restricted profile effectively requires clients to use TLS 1.2 regardless of the chosen minimum TLS version, or&lt;/li&gt;&lt;li&gt;has Profile set to Custom and the following features are all disabled:&amp;nbsp;&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;TLS_RSA_WITH_AES_128_GCM_SHA256&amp;nbsp;&lt;/p&gt;&lt;p&gt;TLS_RSA_WITH_AES_256_GCM_SHA384&amp;nbsp;&lt;/p&gt;&lt;p&gt;TLS_RSA_WITH_AES_128_CBC_SHA&amp;nbsp;&lt;/p&gt;&lt;p&gt;TLS_RSA_WITH_AES_256_CBC_SHA&amp;nbsp;&lt;/p&gt;&lt;p&gt;TLS_RSA_WITH_3DES_EDE_CBC_SHA&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;From Command Line:&lt;/p&gt;&lt;p&gt;1. List all TargetHttpsProxies and TargetSslProxies.&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;gcloud compute target-https-proxies list gcloud compute target-ssl-proxies list&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;2. For each target proxy, list its properties:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;gcloud compute target-https-proxies describe TARGET_HTTPS_PROXY_NAME gcloud compute target-ssl-proxies describe TARGET_SSL_PROXY_NAME&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;3. Ensure that the sslPolicy field is present and identifies the name of the SSL policy: sslPolicy: https://www.googleapis.com/compute/v1/projects/PROJECT_ID/global/sslPolicies/SSL_POLICY_NAME&lt;/p&gt;&lt;p&gt;If the sslPolicy field is missing from the configuration, it means that the GCP default policy is used, which is insecure.&lt;/p&gt;&lt;p&gt;4. Describe the SSL policy:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;gcloud compute ssl-policies describe SSL_POLICY_NAME&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;5. Ensure that the policy satisfies one of the following conditions:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;has Profile set to Modern and minTlsVersion set to TLS_1_2, or&lt;/li&gt;&lt;li&gt;has Profile set to Restricted, or&lt;/li&gt;&lt;li&gt;has Profile set to Custom and enabledFeatures does not contain any of the following values:&amp;nbsp;&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;TLS_RSA_WITH_AES_128_GCM_SHA256&amp;nbsp;&lt;/p&gt;&lt;p&gt;TLS_RSA_WITH_AES_256_GCM_SHA384&amp;nbsp;&lt;/p&gt;&lt;p&gt;TLS_RSA_WITH_AES_128_CBC_SHA&amp;nbsp;&lt;/p&gt;&lt;p&gt;TLS_RSA_WITH_AES_256_CBC_SHA&amp;nbsp;&lt;/p&gt;&lt;p&gt;TLS_RSA_WITH_3DES_EDE_CBC_SHA&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:53.489">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-IAM16" name="Enable Security Key Enforcement for all admin accounts" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Setup Security Key Enforcement for Google Cloud Platform admin accounts.&lt;/p&gt;&lt;p&gt;Rationale:&lt;/p&gt;&lt;p&gt;Google Cloud Platform users with Organization Administrator roles have the highest level of privilege in the organization. These accounts should be protected with the strongest form of two-factor authentication: Security Key Enforcement. Ensure that admins use Security Keys to log in instead of weaker second factors like SMS or one-time passwords (OTP). Security Keys are actual physical keys used to access Google Organization Administrator Accounts. They send an encrypted signature rather than a code, ensuring that logins cannot be phished.&lt;/p&gt;&lt;p&gt;Impact:&lt;/p&gt;&lt;p&gt;If an organization administrator loses access to their security key, the user could lose access to their account. For this reason, it is important to set up backup security keys.&lt;/p&gt;&lt;p&gt;Remediation:&lt;/p&gt;&lt;p&gt;Step 1: Identify users with the Organization Administrator role.&amp;nbsp;&lt;/p&gt;&lt;p&gt;Step 2: Setup Security Key Enforcement for each account. Learn more at: https://cloud.google.com/security-key/&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="CIS Google Cloud Platform Benchmark" url="https://www.cisecurity.org/benchmark/google_cloud_computing_platform/"/>
          </references>
          <standards>
            <standard ref="1.3" supportedStandardRef="cis-gcp-standard-level-2"/>
            <standard ref="A05:2021-Security Misconfiguration" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A6:2017-Security Misconfiguration" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Step 1: Identify users with Organization Administrator privileges:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;gcloud organizations get-iam-policy ORGANIZATION_ID&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Look for members granted the role "roles/resourcemanager.organizationAdmin".&amp;nbsp;&lt;/p&gt;&lt;p&gt;Step 2: Manually verify that Security Key Enforcement has been enabled for each account.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:53.489">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-NET08" name="Enable VPC Flow Logs for every subnet in a VPC Network" issueId="" issueLink="" platform="" cost="0" risk="61" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Flow Logs is a feature that enables users to capture information about the IP traffic going to and from network interfaces in the organization's VPC Subnets. Once a flow log is created, the user can view and retrieve its data in Stackdriver Logging. It is recommended that Flow Logs be enabled for every business-critical VPC subnet.&lt;/p&gt;&lt;p&gt;Rationale:&lt;/p&gt;&lt;p&gt;VPC networks and subnetworks not reserved for internal HTTP(S) load balancing provide logically isolated and secure network partitions where GCP resources can be launched. When Flow Logs are enabled for a subnet, VMs within that subnet start reporting on all Transmission Control Protocol (TCP) and User Datagram Protocol (UDP) flows. Each VM samples the TCP and UDP flows it sees, inbound and outbound, whether the flow is to or from another VM, a host in the on-premises datacenter, a Google service, or a host on the Internet. If two GCP VMs are communicating, and both are in subnets that have VPC Flow Logs enabled, both VMs report the flows.&lt;/p&gt;&lt;p&gt;Flow Logs supports the following use cases:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Network monitoring&lt;/li&gt;&lt;li&gt;Understanding network usage and optimizing network traffic expenses&lt;/li&gt;&lt;li&gt;Network forensics&lt;/li&gt;&lt;li&gt;Real-time security analysis&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Flow Logs provide visibility into network traffic for each VM inside the subnet and can be used to detect anomalous traffic or provide insight during security workflows.&lt;/p&gt;&lt;p&gt;Note: Subnets reserved for use by internal HTTP(S) load balancers do not support VPC flow logs.&lt;/p&gt;&lt;p&gt;Impact:&lt;/p&gt;&lt;p&gt;Standard pricing for Stackdriver Logging, BigQuery, or Cloud Pub/Sub applies. VPC Flow Logs generation will be charged starting in GA as described in reference: https://cloud.google.com/vpc/&lt;/p&gt;&lt;p&gt;Remediation:&lt;/p&gt;&lt;p&gt;From Console:&lt;/p&gt;&lt;p&gt;1. Go to the VPC network GCP Console visiting https://console.cloud.google.com/networking/networks/list&lt;/p&gt;&lt;p&gt;2. Click the name of a subnet, The Subnet details page displays.&lt;/p&gt;&lt;p&gt;3. Click the EDIT button.&lt;/p&gt;&lt;p&gt;4. Set Flow Logs to On.&lt;/p&gt;&lt;p&gt;5. Click Save.&lt;/p&gt;&lt;p&gt;From Command Line:&amp;nbsp;&lt;/p&gt;&lt;p&gt;To set Private Google access for a network subnet, run the following command:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;gcloud compute networks subnets update [SUBNET_NAME] --region [REGION] --enable-flow-logs&lt;/p&gt;&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="CIS Google Cloud Platform Benchmark" url="https://www.cisecurity.org/benchmark/google_cloud_computing_platform/"/>
          </references>
          <standards>
            <standard ref="3.8" supportedStandardRef="cis-gcp-standard-level-2"/>
            <standard ref="A09:2021-Security Logging and Monitoring Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2017-Insufficient Logging-Monitoring" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;From Console:&lt;/p&gt;&lt;p&gt;1. Go to the VPC network GCP Console visiting https://console.cloud.google.com/networking/networks/list&lt;/p&gt;&lt;p&gt;2. From the list of network subnets, make sure for each subnet Flow Logs is set to On&lt;/p&gt;&lt;p&gt;From Command Line:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;gcloud compute networks list --format json | \ jq -r '.[].subnetworks | .[]' | \ xargs -I {} gcloud compute networks subnets describe {} --format json | \ jq -r '. | "Subnet: \(.name) Purpose: \(.purpose) VPC Flow Log Enabled: \(has("enableFlowLogs"))"'&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;The output of the above command will list each subnet, the subnet's purpose, and a true or false value if Flow Logs are enabled. If the subnet's purpose is PRIVATE then Flow Logs should be true.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:53.320">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="C-GCP-IAM-02" name="Encrypt Dataproc Cluster using Customer-Managed Encryption Key" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;When you use Dataproc, cluster and job data is stored on Persistent Disks (PDs) associated with the Compute Engine VMs in your cluster and in a Cloud Storage staging bucket. This PD and bucket data is encrypted using a Google-generated data encryption key (DEK) and key encryption key (KEK). The CMEK feature allows you to create, use, and revoke the key encryption key (KEK). Google still controls the data encryption key (DEK).&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Rationale&lt;/strong&gt;:&lt;/p&gt;&lt;p&gt;Cloud services offer the ability to protect data related to those services using encryption keys managed by the customer within Cloud KMS. These encryption keys are called customer-managed encryption keys (CMEK). When you protect data in Google Cloud services with CMEK, the CMEK key is within your control.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation&lt;/strong&gt;:&lt;/p&gt;&lt;p&gt;From Console&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Login to the GCP Console and navigate to the Dataproc Cluster page by visiting https://console.cloud.google.com/dataproc/clusters.&lt;/li&gt;&lt;li&gt;Select the project from the projects dropdown list.&lt;/li&gt;&lt;li&gt;On the Dataproc Cluster page, click on the Create Cluster to create a new cluster with Customer managed encryption keys.&lt;/li&gt;&lt;li&gt;On Create a cluster page, perform below steps:&lt;ol&gt;&lt;li&gt;Inside Set up cluster section perform below steps: -In the Name textbox, provide a name for your cluster.&lt;ol&gt;&lt;li&gt;From Location select the location in which you want to deploy a cluster.&lt;/li&gt;&lt;li&gt;Configure other configurations as per your requirements.&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;Inside Configure Nodes and Customize cluster section configure the settings as per your requirements.&lt;/li&gt;&lt;li&gt;Inside Manage security section, perform below steps:&lt;ol&gt;&lt;li&gt;From Encryption, select Customer-managed key.&lt;/li&gt;&lt;li&gt;Select a customer-managed key from dropdown list.&lt;/li&gt;&lt;li&gt;Ensure that the selected KMS Key have Cloud KMS CryptoKey Encrypter/Decrypter role assign to Dataproc Cluster service account ("serviceAccount:service-&amp;lt;project_number&amp;gt;@compute-system.iam.gserviceaccount.com").&lt;/li&gt;&lt;li&gt;Click on Create to create a cluster.&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;Once the cluster is created migrate all your workloads from the older cluster to the new cluster and delete the old cluster by performing the below steps:&lt;ol&gt;&lt;li&gt;On the Clusters page, select the old cluster and click on Delete cluster.&lt;/li&gt;&lt;li&gt;On the Confirm deletion window, click on Confirm to delete the cluster.&lt;/li&gt;&lt;li&gt;Repeat step above for other Dataproc clusters available in the selected project.&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;Change the project from the project dropdown list and repeat the remediation procedure for other Dataproc clusters available in other projects.&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;From Command Line&lt;/p&gt;&lt;p&gt;Before creating cluster ensure that the selected KMS Key have Cloud KMS CryptoKey Encrypter/Decrypter role assign to Dataproc Cluster service account ("serviceAccount:service-&amp;lt;project_number&amp;gt;@compute-system.iam.gserviceaccount.com"). Run clusters create command to create new cluster with customer-managed key:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;gcloud dataproc clusters create &amp;lt;cluster_name&amp;gt; --region=us-central1 --gce-pd-kms-key=&amp;lt;key_resource_name&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;The above command will create a new cluster in the selected region. Once the cluster is created migrate all your workloads from the older cluster to the new cluster and Run clusters delete command to delete cluster:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;gcloud dataproc clusters delete &amp;lt;cluster_name&amp;gt; --region=us-central1&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Repeat step no. 1 to create a new Dataproc cluster. Change the project by running the below command and repeat the remediation procedure for other projects:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;gcloud config set project &amp;lt;project_ID&amp;gt;"&lt;/p&gt;&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Encryption at rest in Google Cloud" url="https://cloud.google.com/security/encryption-at-rest/default-encryption"/>
          </references>
          <standards>
            <standard ref="1.17" supportedStandardRef="cis-gcp-standard-level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;From Console&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Login to the GCP Console and navigate to the Dataproc Cluster page by visiting https://console.cloud.google.com/dataproc/clusters.&lt;/li&gt;&lt;li&gt;Select the project from the project dropdown list.&lt;/li&gt;&lt;li&gt;On the Dataproc Clusters page, select the cluster and click on the Name attribute value that you want to examine.&lt;/li&gt;&lt;li&gt;On the details page, select the Configurations tab.&lt;/li&gt;&lt;li&gt;On the Configurations tab, check the Encryption type configuration attribute value. If the value is set to Google-managed key, then Dataproc Cluster is not encrypted with Customer managed encryption keys.&lt;/li&gt;&lt;li&gt;Repeat step no. 3 - 5 for other Dataproc Clusters available in the selected project.&lt;/li&gt;&lt;li&gt;Change the project from the project dropdown list and repeat the audit procedure for other projects.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;From Command Line&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Run clusters list command to list all the Dataproc Clusters available in the region:&amp;nbsp;&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;gcloud dataproc clusters list --region='us-central1'&lt;/p&gt;&lt;/blockquote&gt;&lt;ul&gt;&lt;li&gt;Run clusters describe command to get the key details of the selected cluster:&amp;nbsp;&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;gcloud dataproc clusters describe &amp;lt;cluster_name&amp;gt; --region=us-central1 --flatten=config.encryptionConfig.gcePdKmsKeyName&lt;/p&gt;&lt;/blockquote&gt;&lt;ul&gt;&lt;li&gt;If the above command output return "null", then the selected cluster is not encrypted with Customer managed encryption keys.&lt;/li&gt;&lt;li&gt;Repeat step no. 2 and 3 for other Dataproc Clusters available in the selected region. Change the region by updating --region and repeat step no. 2 for other clusters available in the project. Change the project by running the below command and repeat the audit procedure for other Dataproc clusters available in other projects:&amp;nbsp;&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;gcloud config set project &amp;lt;project_ID&amp;gt;"&lt;/p&gt;&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:53.490">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-IAM11" name="Enforce separation of duties" issueId="" issueLink="" platform="" cost="1" risk="62" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;It is recommended that the principle of 'Separation of Duties' is enforced while assigning KMS related roles to users.&lt;/p&gt;&lt;p&gt;Rationale:&lt;/p&gt;&lt;p&gt;The built-in/predefined IAM role Cloud KMS Admin allows the user/identity to create, delete, and manage service account(s). The built-in/predefined IAM role Cloud KMS CryptoKey Encrypter/Decrypter allows the user/identity (with adequate privileges on concerned resources) to encrypt and decrypt data at rest using an encryption key(s).&lt;/p&gt;&lt;p&gt;The built-in/predefined IAM role Cloud KMS CryptoKey Encrypter allows the user/identity (with adequate privileges on concerned resources) to encrypt data at rest using an encryption key(s). The built-in/predefined IAM role Cloud KMS CryptoKey Decrypter allows the user/identity (with adequate privileges on concerned resources) to decrypt data at rest using an encryption key(s).&lt;/p&gt;&lt;p&gt;Separation of duties is the concept of ensuring that one individual does not have all necessary permissions to be able to complete a malicious action. In Cloud KMS, this could be an action such as using a key to access and decrypt data a user should not normally have access to. Separation of duties is a business control typically used in larger organizations, meant to help avoid security or privacy incidents and errors. It is considered best practice.&lt;/p&gt;&lt;p&gt;No user(s) should have Cloud KMS Admin and any of the Cloud KMS CryptoKey Encrypter/Decrypter, Cloud KMS CryptoKey Encrypter, Cloud KMS CryptoKey Decrypter roles assigned at the same time.&lt;/p&gt;&lt;p&gt;Impact:&lt;/p&gt;&lt;p&gt;Removed roles should be assigned to another user based on business needs.&lt;/p&gt;&lt;p&gt;Remediation:&lt;/p&gt;&lt;p&gt;From Console:&lt;/p&gt;&lt;p&gt;1. Go to IAM &amp;amp; Admin/IAM using https://console.cloud.google.com/iam-admin/iam&lt;/p&gt;&lt;p&gt;2. For any member having Cloud KMS Admin and any of the Cloud KMS CryptoKey Encrypter/Decrypter, Cloud KMS CryptoKey Encrypter, Cloud KMS CryptoKey Decrypter roles granted/assigned, click the Delete Bin icon to remove the role from the member.&lt;/p&gt;&lt;p&gt;Note: Removing a role should be done based on the business requirement.&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="CIS Google Cloud Platform Benchmark" url="https://www.cisecurity.org/benchmark/google_cloud_computing_platform/"/>
          </references>
          <standards>
            <standard ref="1.11" supportedStandardRef="cis-gcp-standard-level-2"/>
            <standard ref="1.8" supportedStandardRef="cis-gcp-standard-level-2"/>
            <standard ref="A05:2021-Security Misconfiguration" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A6:2017-Security Misconfiguration" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;From Console:&lt;/p&gt;&lt;p&gt;1. Go to IAM &amp;amp; Admin/IAM by visiting: https://console.cloud.google.com/iam-admin/iam&lt;/p&gt;&lt;p&gt;2. Ensure no member has the roles Cloud KMS Admin and any of the Cloud KMS CryptoKey Encrypter/Decrypter, Cloud KMS CryptoKey Encrypter, Cloud KMS CryptoKey Decrypter assigned.&lt;/p&gt;&lt;p&gt;From Command Line:&lt;/p&gt;&lt;p&gt;1. List all users and role assignments:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;gcloud projects get-iam-policy PROJECT_ID&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;2. Ensure that there are no common users found in the member section for roles cloudkms.admin and any one of Cloud KMS CryptoKey Encrypter/Decrypter, Cloud KMS CryptoKey Encrypter, Cloud KMS CryptoKey Decrypter&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:53.489">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-NET02" name="Isolate Google Cloud resources into separate VNets by function" issueId="" issueLink="" platform="" cost="1" risk="61" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Place the resources into separate VNets according to their use or function (production,
                        development, test). Placing such resources accordingly ensures that a resource of a high
                        security level is not exposed by the security settings of a lower labeled VNet.&amp;nbsp;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Identify the resources that exist in an incorrect VNet.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Migrate or move it to the correct VNet.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Google Cloud docs: Isolate resources" url="https://cloud.google.com/docs/enterprise/best-practices-for-enterprise-organizations#use_projects_to_fully_isolate_resources"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that the Google Cloud resources are isolated and separated in several VNets by the
                            function of the resources.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:53.319">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-NET01" name="Isolate groups of VM instances" issueId="" issueLink="" platform="" cost="1" risk="61" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Use networks within projects to isolate groups of VM instances.

                        Each project supports up to five isolated networks. Each network constitutes a global IP address
                        space. This means that you can create resources, such as Google Compute Engine Virtual Machine
                        (VM) instances, in multiple geographic regions, and the resources will share the same IP address
                        space because they are on the same virtual network. Note that, despite the flat network address
                        space, you still incur normal egress charges when you leave your zone. You can request a quota
                        increase to support up to 15 isolated networks in each project.</desc>
          <implementations/>
          <references>
            <reference name="Google Cloud docs: Isolate resources" url="https://cloud.google.com/docs/enterprise/best-practices-for-enterprise-organizations#use_projects_to_fully_isolate_resources"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check the projects are isolated using groups of VM instances.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:53.319">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-IAM01" name="Recertify user access" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Do regular reviews of service accounts on the system and verify they do not contain stolen or
                        fake accounts. This process ensures there are not any compromised accounts by former employees
                        or attackers.&amp;nbsp;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        At least every 90 days complete the following:&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Open the Service Accounts page in the Cloud Platform Console.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Click Select a project.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Select your project and click Open. All service accounts are listed in the Service
                        Accounts page.&lt;/li&gt;
                        &lt;li&gt;For any user that should not exist, select the user and click the Delete button.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Google Cloud docs: manage service accounts" url="https://cloud.google.com/iam/docs/creating-managing-service-accounts"/>
          </references>
          <standards>
            <standard ref="A07:2021-Identification and Authentication Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A2:2017-Broken Authentication" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Open the Service Accounts page in the Cloud Platform Console.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Click Select a project.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Select your project and click Open. All service accounts are listed in the Service
                            Accounts page.&lt;/li&gt;
                            &lt;li&gt;Check that the necessary users appear in the list.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;And check that there is a process to review the access users at least every 90
                            days.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:53.488">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-IAM18" name="Remove Admin privileges on Service Account" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;A service account is a special Google account that belongs to an application or a VM, instead of to an individual end-user. The application uses the service account to call the service's Google API so that users aren't directly involved. It's recommended not to use admin access for ServiceAccount.&lt;/p&gt;&lt;p&gt;Rationale:&lt;/p&gt;&lt;p&gt;Service accounts represent service-level security of the Resources (application or a VM) which can be determined by the roles assigned to it. Enrolling ServiceAccount with Admin rights gives full access to an assigned application or a VM. A ServiceAccount Access holder can perform critical actions like delete, update change settings, etc. without user intervention. For this reason, it's recommended that service accounts not have Admin rights.&lt;/p&gt;&lt;p&gt;Impact:&lt;/p&gt;&lt;p&gt;Removing *Admin or *adminorEditororOwner` role assignments from service accounts may break functionality that uses impacted service accounts. Required role(s) should be assigned to impacted service accounts in order to restore broken functionalities.&lt;/p&gt;&lt;p&gt;Remediation:&lt;/p&gt;&lt;p&gt;From Console&lt;/p&gt;&lt;p&gt;1. Go to IAM &amp;amp; admin/IAM using https://console.cloud.google.com/iam-admin/iam&lt;/p&gt;&lt;p&gt;2. Go to the Members&lt;/p&gt;&lt;p&gt;3. Identify User-Managed user created service account with roles containing *Admin or *admin or role matching Editor or role matching Owner&lt;/p&gt;&lt;p&gt;4. Click the Delete bin icon to remove the role from the member (service account in this case)&lt;/p&gt;&lt;p&gt;From Command Line:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;gcloud projects get-iam-policy PROJECT_ID --format json &amp;gt; iam.json&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;1. Using a text editor, Remove Role which contains roles/*Admin or roles/*admin or matched roles/editor or matches 'roles/owner`. Add a role to the bindings array that defines the group members and the role for those members.&lt;/p&gt;&lt;p&gt;2. Update the project's IAM policy:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;gcloud projects set-iam-policy PROJECT_ID iam.json&lt;/p&gt;&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="CIS Google Cloud Platform Benchmark" url="https://www.cisecurity.org/benchmark/google_cloud_computing_platform/"/>
          </references>
          <standards>
            <standard ref="1.5" supportedStandardRef="cis-gcp-standard"/>
            <standard ref="1.5" supportedStandardRef="cis-gcp-standard-level-2"/>
            <standard ref="A07:2021-Identification and Authentication Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A2:2017-Broken Authentication" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;From Console:&lt;/p&gt;&lt;p&gt;1. Go to IAM &amp;amp; admin/IAM using https://console.cloud.google.com/iam-admin/iam&lt;/p&gt;&lt;p&gt;2. Go to the Members&lt;/p&gt;&lt;p&gt;3. Ensure that there are no User-Managed user created service account(s) with roles containing *Admin or *admin or role matching Editor or role matching Owner&lt;/p&gt;&lt;p&gt;From Command Line:&lt;/p&gt;&lt;p&gt;1. Get the policy that you want to modify, and write it to a JSON file: gcloud projects get-iam-policy PROJECT_ID --format json &amp;gt; iam.json&lt;/p&gt;&lt;p&gt;2. The contents of the JSON file will look similar to the following. Note that role of members group associated with each serviceaccount does not contain *Admin or *admin or does not match roles/editor or does not match roles/owner.&lt;/p&gt;&lt;p&gt;This recommendation is only applicable to User-Managed user-created service accounts. These accounts have the nomenclature: SERVICE_ACCOUNT_NAME@PROJECT_ID.iam.gserviceaccount.com. Note that some Google-managed, Google-created service accounts have the same naming format, and should be excluded (e.g., appsdev-apps-dev-script-auth@system.gserviceaccount.com which needs the Owner role).&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:53.489">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-NET03" name="Remove default and legacy networks" issueId="" issueLink="" platform="" cost="0" risk="61" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;order to prevent use of legacy networks, a project should not have a legacy network configured.&lt;/p&gt;&lt;p&gt;Rationale:&lt;/p&gt;&lt;p&gt;Legacy networks have a single network IPv4 prefix range and a single gateway IP address for the whole network. The network is global in scope and spans all cloud regions. Subnetworks cannot be created in a legacy network and are unable to switch from legacy to auto or custom subnet networks. Legacy networks can have an impact for high network traffic projects and are subject to a single point of contention or failure.&lt;/p&gt;&lt;p&gt;Remediation:&lt;/p&gt;&lt;p&gt;For each Google Cloud Platform project,&lt;/p&gt;&lt;p&gt;1. Follow the documentation and create a non-legacy network suitable for the organization's requirements.&lt;/p&gt;&lt;p&gt;2. Follow the documentation and delete the networks in the legacy mode.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="CIS Google Cloud Platform Benchmark" url="https://www.cisecurity.org/benchmark/google_cloud_computing_platform/"/>
          </references>
          <standards>
            <standard ref="3.1" supportedStandardRef="cis-gcp-standard-level-2"/>
            <standard ref="3.2" supportedStandardRef="cis-gcp-standard-level-2"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;For each Google Cloud Platform project,&lt;/p&gt;&lt;p&gt;1. Set the project name in the Google Cloud Shell:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;gcloud config set project &amp;lt;Project-ID&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;2. List the networks configured in that project:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;gcloud compute networks list&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;None of the listed networks should be in the legacy mode.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:53.320">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-IAM14" name="Restrict API key usage to call only APIs required by an application" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;API keys are insecure because they can be viewed publicly, such as from within a browser, or they can be accessed on a device where the key resides. It is recommended to restrict API keys to use (call) only APIs required by an application.&lt;/p&gt;&lt;p&gt;Rationale:&lt;/p&gt;&lt;p&gt;Security risks involved in using API-Keys are below:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;API keys are simple encrypted strings&lt;/li&gt;&lt;li&gt;API keys do not identify the user or the application making the API request&lt;/li&gt;&lt;li&gt;API keys are typically accessible to clients, making it easy to discover and steal an API key&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;In light of these potential risks, Google recommends using the standard authentication flow instead of API-Keys. However, there are limited cases where API keys are more appropriate. For example, if there is a mobile application that needs to use the Google Cloud Translation API, but doesn't otherwise need a backend server, API keys are the simplest way to authenticate to that API.&lt;/p&gt;&lt;p&gt;In order to reduce attack surfaces by providing least privileges, API-Keys can be restricted to use (call) only APIs required by an application.&lt;/p&gt;&lt;p&gt;Impact:&lt;/p&gt;&lt;p&gt;Setting API restrictions may break existing application functioning, if not done carefully.&lt;/p&gt;&lt;p&gt;Remediation:&lt;/p&gt;&lt;p&gt;From Console:&lt;/p&gt;&lt;p&gt;1. Go to APIs &amp;amp; Services\Credentials using https://console.cloud.google.com/apis/credentials&lt;/p&gt;&lt;p&gt;2. In the section API Keys, Click the API Key Name. The API Key properties display on a new page.&lt;/p&gt;&lt;p&gt;3. In the Key restrictions section go to API restrictions.&lt;/p&gt;&lt;p&gt;4. Click the Select API drop-down to choose an API.&lt;/p&gt;&lt;p&gt;5. Click Save.&lt;/p&gt;&lt;p&gt;6. Repeat steps 2,3,4,5 for every unrestricted API key&lt;/p&gt;&lt;p&gt;Note: Do not set API restrictions to Google Cloud APIs, as this option allows access to all services offered by Google cloud.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="CIS Google Cloud Platform Benchmark" url="https://www.cisecurity.org/benchmark/google_cloud_computing_platform/"/>
          </references>
          <standards>
            <standard ref="1.14" supportedStandardRef="cis-gcp-standard"/>
            <standard ref="1.14" supportedStandardRef="cis-gcp-standard-level-2"/>
            <standard ref="A05:2021-Security Misconfiguration" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A6:2017-Security Misconfiguration" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;From Console:&lt;/p&gt;&lt;p&gt;1. Go to APIs &amp;amp; Services\Credentials using https://console.cloud.google.com/apis/credentials&lt;/p&gt;&lt;p&gt;2. In the section API Keys, Click the API Key Name. The API Key properties display on a new page.&lt;/p&gt;&lt;p&gt;3. For every API Key, ensure the section Key restrictions parameter API restrictions is not set to None.&lt;/p&gt;&lt;p&gt;Or, Ensure API restrictions is not set to Google Cloud APIs&amp;nbsp;&lt;/p&gt;&lt;p&gt;Note: Google Cloud APIs represents the API collection of all cloud services/APIs offered by Google cloud.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:53.489">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-IAM13" name="Restrict API key usage to trusted hosts and apps" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Unrestricted keys are insecure because they can be viewed publicly, such as from within a browser, or they can be accessed on a device where the key resides. It is recommended to restrict API key usage to trusted hosts, HTTP referrers and apps.&lt;/p&gt;&lt;p&gt;Rationale:&lt;/p&gt;&lt;p&gt;Security risks involved in using API-Keys appear below:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;API keys are simple encrypted strings&lt;/li&gt;&lt;li&gt;API keys do not identify the user or the application making the API request&lt;/li&gt;&lt;li&gt;API keys are typically accessible to clients, making it easy to discover and steal an API key&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;In light of these potential risks, Google recommends using the standard authentication flow instead of API keys. However, there are limited cases where API keys are more appropriate. For example, if there is a mobile application that needs to use the Google Cloud Translation API, but doesn't otherwise need a backend server, API keys are the simplest way to authenticate to that API.&lt;/p&gt;&lt;p&gt;In order to reduce attack vectors, API-Keys can be restricted only to trusted hosts, HTTP referrers and applications.&lt;/p&gt;&lt;p&gt;Impact:&lt;/p&gt;&lt;p&gt;Setting Application Restrictions may break existing application functioning, if not done carefully.&lt;/p&gt;&lt;p&gt;Remediation:&lt;/p&gt;&lt;p&gt;From Console:&lt;/p&gt;&lt;p&gt;1. Go to APIs &amp;amp; Services\Credentials using https://console.cloud.google.com/apis/credentials&lt;/p&gt;&lt;p&gt;2. In the section API Keys, Click the API Key Name. The API Key properties display on a new page.&lt;/p&gt;&lt;p&gt;3. In the Key restrictions section, set the application restrictions to any of HTTP referrers, IP Adresses, Android Apps, iOs Apps.&lt;/p&gt;&lt;p&gt;4. Click Save.&lt;/p&gt;&lt;p&gt;5. Repeat steps 2,3,4 for every unrestricted API key. Note: Do not set HTTP referrers to wild-cards (* or *.[TLD] or .[TLD]/) allowing access to any/wide HTTP referrer(s) Do not set IP addresses and referrer to any host (0.0.0.0 or 0.0.0.0/0 or ::0)&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="CIS Google Cloud Platform Benchmark" url="https://www.cisecurity.org/benchmark/google_cloud_computing_platform/"/>
          </references>
          <standards>
            <standard ref="1.13" supportedStandardRef="cis-gcp-standard"/>
            <standard ref="1.13" supportedStandardRef="cis-gcp-standard-level-2"/>
            <standard ref="A05:2021-Security Misconfiguration" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A6:2017-Security Misconfiguration" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;From Console:&lt;/p&gt;&lt;p&gt;1. Go to APIs &amp;amp; Services\Credentials using https://console.cloud.google.com/apis/credentials&lt;/p&gt;&lt;p&gt;2. In the section API Keys, Click the API Key Name. The API Key properties display on a new page.&lt;/p&gt;&lt;p&gt;3. For every API Key, ensure the section Key restrictions parameter Application restrictions is not set to None.&lt;/p&gt;&lt;p&gt;Or,&amp;nbsp;&lt;/p&gt;&lt;p&gt;Ensure Application restrictions is set to HTTP referrers and the referrer is not set to wild-cards (* or *.[TLD] or *.[TLD]/*) allowing access to any/wide HTTP referrer(s)&amp;nbsp;&lt;/p&gt;&lt;p&gt;Or,&amp;nbsp;&lt;/p&gt;&lt;p&gt;Ensure Application restrictions is set to IP addresses and referrer is not set to any host (0.0.0.0 or 0.0.0.0/0 or ::0)&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:53.489">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-NET07" name="Restrict RDP access from the Internet" issueId="" issueLink="" platform="" cost="0" risk="61" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;GCP Firewall Rules are specific to a VPC Network. Each rule either allows or denies traffic when its conditions are met. Its conditions allow users to specify the type of traffic, such as ports and protocols, and the source or destination of the traffic, including IP addresses, subnets, and instances.&lt;/p&gt;&lt;p&gt;Firewall rules are defined at the VPC network level and are specific to the network in which they are defined. The rules themselves cannot be shared among networks. Firewall rules only support IPv4 traffic. When specifying a source for an ingress rule or a destination for an egress rule by address, an IPv4 address or IPv4 block in CIDR notation can be used. Generic (0.0.0.0/0) incoming traffic from the Internet to a VPC or VM instance using RDP on Port 3389 can be avoided.&lt;/p&gt;&lt;p&gt;Rationale:&lt;/p&gt;&lt;p&gt;GCP Firewall Rules within a VPC Network. These rules apply to outgoing (egress) traffic from instances and incoming (ingress) traffic to instances in the network. Egress and ingress traffic flows are controlled even if the traffic stays within the network (for example, instance-to-instance communication). For an instance to have outgoing Internet access, the network must have a valid Internet gateway route or custom route whose destination IP is specified. This route simply defines the path to the Internet, to avoid the most general (0.0.0.0/0) destination IP Range specified from the Internet through RDP with the default Port 3389. Generic access from the Internet to a specific IP Range should be restricted.&lt;/p&gt;&lt;p&gt;Impact:&lt;/p&gt;&lt;p&gt;All Remote Desktop Protocol (RDP) connections from outside of the network to the concerned VPC(s) will be blocked. There could be a business need where secure shell access is required from outside of the network to access resources associated with the VPC. In that case, specific source IP(s) should be mentioned in firewall rules to white-list access to RDP port for the concerned VPC(s).&lt;/p&gt;&lt;p&gt;Remediation:&lt;/p&gt;&lt;p&gt;From the Console:&lt;/p&gt;&lt;p&gt;1. Go to VPC Network.&lt;/p&gt;&lt;p&gt;2. Go to the Firewall Rules.&lt;/p&gt;&lt;p&gt;3. Click the Firewall Rule to be modified.&lt;/p&gt;&lt;p&gt;4. Click Edit.&lt;/p&gt;&lt;p&gt;5. Modify Source IP ranges to specific IP.&lt;/p&gt;&lt;p&gt;6. Click Save.&lt;/p&gt;&lt;p&gt;From Command Line:&amp;nbsp;&lt;/p&gt;&lt;p&gt;1.Update RDP Firewall rule with new SOURCE_RANGE from the below command:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;gcloud compute firewall-rules update FirewallName --allow=[PROTOCOL[:PORT[-PORT]],...] --source-ranges=[CIDR_RANGE,...]&lt;/p&gt;&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="CIS Google Cloud Platform Benchmark" url="https://www.cisecurity.org/benchmark/google_cloud_computing_platform/"/>
          </references>
          <standards>
            <standard ref="3.7" supportedStandardRef="cis-gcp-standard-level-2"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;From the Console:&lt;/p&gt;&lt;p&gt;1. Go to VPC network.&lt;/p&gt;&lt;p&gt;2. Go to the Firewall Rules.&lt;/p&gt;&lt;p&gt;3. Ensure Port is not equal to 3389 and Action is not Allow.&lt;/p&gt;&lt;p&gt;4. Ensure IP Ranges is not equal to 0.0.0.0/0 under Source filters.&lt;/p&gt;&lt;p&gt;From Command Line: gcloud compute firewall-rules list --format=table'(name,direction,sourceRanges,allowed.ports)'&lt;/p&gt;&lt;p&gt;Ensure that there is no rule matching the below criteria:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;SOURCE_RANGES is 0.0.0.0/0&lt;/li&gt;&lt;li&gt;AND DIRECTION is INGRESS&lt;/li&gt;&lt;li&gt;AND IPProtocol is TCP or ALL&lt;/li&gt;&lt;li&gt;AND PORTS is set to 3389 or range containing 3389 or Null (not set)&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Note:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;When ALL TCP ports are allowed in a rule, PORT does not have any value set (NULL)&lt;/li&gt;&lt;li&gt;When ALL Protocols are allowed in a rule, PORT does not have any value set (NULL)&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:53.320">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-NET06" name="Restrict SSH access from the Internet" issueId="" issueLink="" platform="" cost="0" risk="61" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;GCP Firewall Rules are specific to a VPC Network. Each rule either allows or denies traffic when its conditions are met. Its conditions allow the user to specify the type of traffic, such as ports and protocols, and the source or destination of the traffic, including IP addresses, subnets, and instances.&lt;/p&gt;&lt;p&gt;Firewall rules are defined at the VPC network level and are specific to the network in which they are defined. The rules themselves cannot be shared among networks. Firewall rules only support IPv4 traffic. When specifying a source for an ingress rule or a destination for an egress rule by address, only an IPv4 address or IPv4 block in CIDR notation can be used. Generic (0.0.0.0/0) incoming traffic from the internet to VPC or VM instance using SSH on Port 22 can be avoided.&lt;/p&gt;&lt;p&gt;Rationale:&lt;/p&gt;&lt;p&gt;GCP Firewall Rules within a VPC Network apply to outgoing (egress) traffic from instances and incoming (ingress) traffic to instances in the network. Egress and ingress traffic flows are controlled even if the traffic stays within the network (for example, instance-to-instance communication). For an instance to have outgoing Internet access, the network must have a valid Internet gateway route or custom route whose destination IP is specified. This route simply defines the path to the Internet, to avoid the most general (0.0.0.0/0) destination IP Range specified from the Internet through SSH with the default Port 22. Generic access from the Internet to a specific IP Range needs to be restricted.&lt;/p&gt;&lt;p&gt;Impact:&lt;/p&gt;&lt;p&gt;All Secure Shell (SSH) connections from outside of the network to the concerned VPC(s) will be blocked. There could be a business need where SSH access is required from outside of the network to access resources associated with the VPC. In that case, specific source IP(s) should be mentioned in firewall rules to white-list access to SSH port for the concerned VPC(s).&lt;/p&gt;&lt;p&gt;Remediation:&lt;/p&gt;&lt;p&gt;From the Console:&lt;/p&gt;&lt;p&gt;1. Go to VPC Network.&lt;/p&gt;&lt;p&gt;2. Go to the Firewall Rules.&lt;/p&gt;&lt;p&gt;3. Click the Firewall Rule you want to modify.&lt;/p&gt;&lt;p&gt;4. Click Edit.&lt;/p&gt;&lt;p&gt;5. Modify Source IP ranges to specific IP.&lt;/p&gt;&lt;p&gt;6. Click Save.&lt;/p&gt;&lt;p&gt;From Command Line: 1.Update the Firewall rule with the new SOURCE_RANGE from the below command:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;gcloud compute firewall-rules update FirewallName --allow=[PROTOCOL[:PORT[-PORT]],...] --source-ranges=[CIDR_RANGE,...]&lt;/p&gt;&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="CIS Google Cloud Platform Benchmark" url="https://www.cisecurity.org/benchmark/google_cloud_computing_platform/"/>
          </references>
          <standards>
            <standard ref="3.6" supportedStandardRef="cis-gcp-standard-level-2"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;From the Console:&lt;/p&gt;&lt;p&gt;1. Go to VPC network.&lt;/p&gt;&lt;p&gt;2. Go to the Firewall Rules.&lt;/p&gt;&lt;p&gt;3. Ensure that Port is not equal to 22 and Action is not set to Allow.&lt;/p&gt;&lt;p&gt;4. Ensure IP Ranges is not equal to 0.0.0.0/0 under Source filters.&lt;/p&gt;&lt;p&gt;From Command Line: gcloud compute firewall-rules list --format=table'(name,direction,sourceRanges,allowed)'&lt;/p&gt;&lt;p&gt;Ensure that there is no rule matching the below criteria:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;SOURCE_RANGES is 0.0.0.0/0&lt;/li&gt;&lt;li&gt;AND DIRECTION is INGRESS&lt;/li&gt;&lt;li&gt;AND IPProtocol is tcp or ALL&lt;/li&gt;&lt;li&gt;AND PORTS is set to 22 or range containing 22 or Null (not set)&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Note:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;When ALL TCP ports are allowed in a rule, PORT does not have any value set (NULL)&lt;/li&gt;&lt;li&gt;When ALL Protocols are allowed in a rule, PORT does not have any value set (NULL)&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:53.320">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-IAM10" name="Rotate keys within a period of 90 days" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Service Account keys consist of a key ID (Private_key_Id) and Private key, which are used to sign programmatic requests users make to Google cloud services accessible to that particular service account. It is recommended that all Service Account keys are regularly rotated.&lt;/p&gt;&lt;p&gt;Google Cloud Key Management Service stores cryptographic keys in a hierarchical structure designed for useful and elegant access control management.&lt;/p&gt;&lt;p&gt;The format for the rotation schedule depends on the client library that is used. For the gcloud command-line tool, the next rotation time must be in ISO or RFC3339 format, and the rotation period must be in the form INTEGER[UNIT], where units can be one of seconds (s), minutes (m), hours (h) or days (d).&lt;/p&gt;&lt;p&gt;It is recommended to rotate API keys every 90 days.&lt;/p&gt;&lt;p&gt;Rationale:&lt;/p&gt;&lt;p&gt;Security risks involved in using API-Keys are listed below:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;API keys are simple encrypted strings&lt;/li&gt;&lt;li&gt;API keys do not identify the user or the application making the API request&lt;/li&gt;&lt;li&gt;API keys are typically accessible to clients, making it easy to discover and steal an API key&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Because of these potential risks, Google recommends using the standard authentication flow instead of API Keys. However, there are limited cases where API keys are more appropriate. For example, if there is a mobile application that needs to use the Google Cloud Translation API, but doesn't otherwise need a backend server, API keys are the simplest way to authenticate to that API.&lt;/p&gt;&lt;p&gt;Once a key is stolen, it has no expiration, meaning it may be used indefinitely unless the project owner revokes or regenerates the key. Rotating API keys will reduce the window of opportunity for an access key that is associated with a compromised or terminated account to be used.&lt;/p&gt;&lt;p&gt;API keys should be rotated to ensure that data cannot be accessed with an old key that might have been lost, cracked, or stolen.&lt;/p&gt;&lt;p&gt;Impact:&lt;/p&gt;&lt;p&gt;Regenerating Key may break existing client connectivity as the client will try to connect with older API keys they have stored on devices.&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;Remediation:&lt;/p&gt;&lt;p&gt;From Console:&lt;/p&gt;&lt;p&gt;For user-managed/external keys:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Delete any external (user-managed) Service Account Key older than 90 days:&lt;ul&gt;&lt;li&gt;1. Go to APIs &amp;amp; Services\Credentials using https://console.cloud.google.com/apis/credentials&lt;/li&gt;&lt;li&gt;2. In the Section Service Account Keys, for every external (user-managed) service account key where creation date is greater than or equal to the past 90 days, click Delete Bin Icon to Delete Service Account key&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Create a new external (user-managed) Service Account Key for a Service Account:&lt;ul&gt;&lt;li&gt;1. Go to APIs &amp;amp; Services\Credentials using https://console.cloud.google.com/apis/credentials&lt;/li&gt;&lt;li&gt;2. Click Create Credentials and Select Service Account Key.&lt;/li&gt;&lt;li&gt;3. Choose the service account in the drop-down list for which an External (user-managed) Service Account key needs to be created.&lt;/li&gt;&lt;li&gt;4. Select the desired key type format among JSON or P12.&lt;/li&gt;&lt;li&gt;5. Click Create. It will download the private key. Keep it safe.&lt;/li&gt;&lt;li&gt;6. Click Close if prompted.&lt;/li&gt;&lt;li&gt;7. The site will redirect to the APIs &amp;amp; Services\Credentials page. Make a note of the new ID displayed in the Service account keys section.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;For KMS keys:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;1. Go to Cryptographic Keys by visiting: https://console.cloud.google.com/security/kms.&lt;/li&gt;&lt;li&gt;2. Click on the specific key ring&lt;/li&gt;&lt;li&gt;3. From the list of keys, choose the specific key and Click on Right side pop up the blade (3 dots).&lt;/li&gt;&lt;li&gt;4. Click on Edit rotation period.&lt;/li&gt;&lt;li&gt;5. On the pop-up window, Select a new rotation period in days which should be less than 90 and then choose Starting on date (date from which the rotation period begins).&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;For API keys:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;1. Go to APIs &amp;amp; Services\Credentials using https://console.cloud.google.com/apis/credentials&lt;/li&gt;&lt;li&gt;2. In the section API Keys, Click the API Key Name. The API Key properties display on a new page.&lt;/li&gt;&lt;li&gt;3. Click REGENERATE KEY to rotate API key.&lt;/li&gt;&lt;li&gt;4. Click Save.&lt;/li&gt;&lt;li&gt;5. Repeat steps 2,3,4 for every API key that has not been rotated in the last 90 days.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Note: Do not set HTTP referrers to wild-cards (* or *.[TLD] or .[TLD]/) allowing access to any/wide HTTP referrer(s) Do not set IP addresses and referrer to any host (0.0.0.0 or 0.0.0.0/0 or ::0)&lt;/p&gt;&lt;p&gt;From Command Line:&lt;/p&gt;&lt;p&gt;For KMS keys:&lt;/p&gt;&lt;p&gt;1. Update and schedule rotation by ROTATION_PERIOD and NEXT_ROTATION_TIME for each key: gcloud kms keys update new --keyring=KEY_RING --location=LOCATION --next-rotation-time=NEXT_ROTATION_TIME --rotation-period=ROTATION_PERIOD&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="CIS Google Cloud Platform Benchmark" url="https://www.cisecurity.org/benchmark/google_cloud_computing_platform/"/>
          </references>
          <standards>
            <standard ref="1.10" supportedStandardRef="cis-gcp-standard"/>
            <standard ref="1.10" supportedStandardRef="cis-gcp-standard-level-2"/>
            <standard ref="1.15" supportedStandardRef="cis-gcp-standard"/>
            <standard ref="1.15" supportedStandardRef="cis-gcp-standard-level-2"/>
            <standard ref="1.7" supportedStandardRef="cis-gcp-standard"/>
            <standard ref="1.7" supportedStandardRef="cis-gcp-standard-level-2"/>
            <standard ref="A05:2021-Security Misconfiguration" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A6:2017-Security Misconfiguration" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that all keys have a rotation period of 90 days.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:53.489">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-LOG07" name="Use Bucket Lock to configure retention policies" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Enabling retention policies on log buckets will protect logs stored in cloud storage buckets from being overwritten or accidentally deleted. It is recommended to set up retention policies and configure Bucket Lock on all storage buckets that are used as log sinks.&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Logs can be exported by creating one or more sinks that include a log filter and a destination. As Cloud Logging receives new log entries, they are compared against each sink. If a log entry matches a sink's filter, then a copy of the log entry is written to the destination.&lt;/p&gt; 
&lt;p&gt;Sinks can be configured to export logs in storage buckets. It is recommended to configure a data retention policy for these cloud storage buckets and to lock the data retention policy; thus permanently preventing the policy from being reduced or removed. This way, if the system is ever compromised by an attacker or a malicious insider who wants to cover their tracks, the activity logs are definitely preserved for forensics and security investigations.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Set a retention policy on a bucket&lt;/p&gt; 
&lt;p&gt;To add, modify, or remove a retention policy on a bucket:&lt;/p&gt; 
&lt;p&gt;1. In the Google Cloud console, go to the Cloud Storage Browser page.&lt;/p&gt; 
&lt;p&gt;2. In the list of buckets, click on the name of the bucket whose retention policy you want to change.&lt;/p&gt; 
&lt;p&gt;3. Select the Protection tab near the top of the page.&lt;/p&gt; 
&lt;p&gt;4. In the Retention policy section, set your retention policy:&lt;/p&gt; 
&lt;p&gt;a. If no retention policy currently applies to the bucket, click the + Set Retention Policy link. Choose a unit of time and a length of time for your retention period.&lt;/p&gt; 
&lt;p&gt;b. If a retention policy currently applies to a bucket, it appears in the section. Click Edit to modify the retention time or Delete to remove the retention policy entirely.&lt;/p&gt; 
&lt;p&gt;Lock a bucket&lt;/p&gt; 
&lt;p&gt;To lock a bucket and permanently restrict edits to the bucket's retention policy:&lt;/p&gt; 
&lt;p&gt;1. In the Google Cloud console, go to the Cloud Storage Browser page.&lt;/p&gt; 
&lt;p&gt;2. In the list of buckets, click on the name of the bucket that you want to lock the retention policy for.&lt;/p&gt; 
&lt;p&gt;3. Select the Protection tab near the top of the page.&lt;/p&gt; 
&lt;p&gt;4. In the Retention policy section, click the Lock button.&lt;/p&gt; 
&lt;p&gt;The Lock retention policy? dialog box appears.&lt;/p&gt; 
&lt;p&gt;5. Read the Permanent notice.&lt;/p&gt; 
&lt;p&gt;6. In the Bucket name text box, type in the name of your bucket.&lt;/p&gt; 
&lt;p&gt;7. Click Lock policy.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; Locking a bucket is an irreversible action. Once you lock a bucket, you cannot remove the retention policy from the bucket or decrease the retention period for the policy.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="CIS Google Cloud Platform Benchmark" url="https://www.cisecurity.org/benchmark/google_cloud_computing_platform/"/>
            <reference name="Retention policies and retention policy locks" url="https://cloud.google.com/storage/docs/bucket-lock"/>
          </references>
          <standards>
            <standard ref="2.3" supportedStandardRef="cis-gcp-standard"/>
            <standard ref="2.3" supportedStandardRef="cis-gcp-standard-level-2"/>
            <standard ref="A09:2021-Security Logging and Monitoring Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2017-Insufficient Logging-Monitoring" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>	&lt;p&gt;View a bucket's retention policy and lock status&lt;/p&gt;

	&lt;p&gt;To view what, if any, retention policy is set on a bucket and whether that retention policy is locked:&lt;/p&gt;

	&lt;p&gt;1. In the Google Cloud console, go to the Cloud Storage Browser page.&lt;/p&gt;

	&lt;p&gt;2. In the Column display options menu (Column options icon.), make sure Retention policy is checked.&lt;/p&gt;

	&lt;p&gt;3. In the list of buckets, if a bucket has a retention policy, the retention period is displayed in the Protection column for the bucket. If the retention policy is locked, an image of a lock appears directly to the left of the retention period.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:54.109">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-IAM17" name="Use GCP-managed service account keys only for each service account" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;User managed service accounts should not have user-managed keys.&lt;/p&gt;&lt;p&gt;Rationale:&lt;/p&gt;&lt;p&gt;Anyone who has access to the keys will be able to access resources through the service account. GCP-managed keys are used by Cloud Platform services such as App Engine and Compute Engine. These keys cannot be downloaded. Google will keep the keys and automatically rotate them on an approximately weekly basis. User-managed keys are created, downloadable, and managed by users. They expire 10 years from creation.&lt;/p&gt;&lt;p&gt;For user-managed keys, the user has to take ownership of key management activities which include:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Key storage&lt;/li&gt;&lt;li&gt;Key distribution&lt;/li&gt;&lt;li&gt;Key revocation&lt;/li&gt;&lt;li&gt;Key rotation&lt;/li&gt;&lt;li&gt;Protecting the keys from unauthorized users&lt;/li&gt;&lt;li&gt;Key recovery&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Even with key owner precautions, keys can be easily leaked by common development malpractices like checking keys into the source code or leaving them in the Downloads directory, or accidentally leaving them on support blogs/channels.&lt;/p&gt;&lt;p&gt;It is recommended to prevent user-managed service account keys.&lt;/p&gt;&lt;p&gt;Impact:&lt;/p&gt;&lt;p&gt;Deleting user-managed Service Account Keys may break communication with the applications using the corresponding keys.&lt;/p&gt;&lt;p&gt;Remediation:&lt;/p&gt;&lt;p&gt;From Console:&lt;/p&gt;&lt;p&gt;1. Go to the IAM page in the GCP Console using https://console.cloud.google.com/iam-admin/iam&lt;/p&gt;&lt;p&gt;2. In the left navigation pane, click Service accounts. All service accounts and their corresponding keys are listed.&lt;/p&gt;&lt;p&gt;3. Click the service account.&lt;/p&gt;&lt;p&gt;4. Click the edit and delete the keys.&lt;/p&gt;&lt;p&gt;From CLI: To delete a user managed Service Account Key,&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;gcloud iam service-accounts keys delete --iam-account=&amp;lt;user-managed-service-account-EMAIL&amp;gt; &amp;lt;KEY-ID&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="CIS Google Cloud Platform Benchmark" url="https://www.cisecurity.org/benchmark/google_cloud_computing_platform/"/>
          </references>
          <standards>
            <standard ref="1.4" supportedStandardRef="cis-gcp-standard"/>
            <standard ref="1.4" supportedStandardRef="cis-gcp-standard-level-2"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;From Console:&lt;/p&gt;&lt;p&gt;1. Go to the IAM page in the GCP Console using https://console.cloud.google.com/iam-admin/iam&lt;/p&gt;&lt;p&gt;2. In the left navigation pane, click Service accounts. All service accounts and their corresponding keys are listed.&lt;/p&gt;&lt;p&gt;3. Click the service accounts and check if keys exist.&lt;/p&gt;&lt;p&gt;From Command Line:&amp;nbsp;&lt;/p&gt;&lt;p&gt;List All the service accounts:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;gcloud iam service-accounts list&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Identify user-managed service accounts as such account EMAIL ends with iam.gserviceaccount.com&amp;nbsp;&lt;/p&gt;&lt;p&gt;For each user-managed service account, list the keys managed by the user:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;gcloud iam service-accounts keys list --iam-account=&amp;lt;Service Account&amp;gt; --managed-by=user&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;No keys should be listed.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:53.489">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="C-GCP-IAM-03" name="Use secret manager to avoid storing secrets in cloud functions environment variables" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Google Cloud Functions allow you to host serverless code that is executed when an event is triggered, without the requiring the management a host operating system. These functions can also store environment variables to be used by the code that may contain authentication or other information that needs to remain confidential.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Rationale&lt;/strong&gt;:&lt;/p&gt;&lt;p&gt;It is recommended to use the Secret Manager, because environment variables are stored unencrypted, and accessible for all users who have access to the code.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Impact&lt;/strong&gt;:&lt;/p&gt;&lt;p&gt;There should be no impact on the Cloud Function. There are minor costs after 10,000 requests a month to the Secret Manager API as well for a high use of other functions. Modifying the Cloud Function to use the Secret Manager may prevent it running to completion as its environment variables are.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation&lt;/strong&gt;:&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Enable Secret Manager API for your Project&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;From Console&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Within the project you wish to enable, select the Navigation hamburger menu in the top left. Hover over 'APIs &amp;amp; Services' to under the heading 'Serverless', then select 'Enabled APIs &amp;amp; Services' in the menu that opens up.&lt;/li&gt;&lt;li&gt;Click the button '+ Enable APIS and Services'&lt;/li&gt;&lt;li&gt;In the Search bar, search for 'Secret Manager API' and select it.&lt;/li&gt;&lt;li&gt;Click the blue box that says 'Enable'.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;From Command Line&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Within the project you wish to enable the API in, run the following command.&amp;nbsp;&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;gcloud services enable Secret Manager API&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;strong&gt;Reviewing Environment Variables That Should Be Migrated to Secret Manager&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;From Console&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Log in to the Google Cloud Web Portal (https://console.cloud.google.com/)&lt;/li&gt;&lt;li&gt;Go to Cloud Functions&lt;/li&gt;&lt;li&gt;Click on a function name from the list&lt;/li&gt;&lt;li&gt;Click on Edit and review the Runtime environment for variables that should be secrets. Leave this list open for the next step.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;From Command Line&lt;/p&gt;&lt;ul&gt;&lt;li&gt;To view a list of your cloud functions run cloud functions list&lt;/li&gt;&lt;li&gt;For each cloud function run the following command.&amp;nbsp;&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;gcloud functions describe &amp;lt;function_name&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;ul&gt;&lt;li&gt;Review the settings of the buildEnvironmentVariables and environmentVariables. Keep this information for the next step.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;Migrating Environment Variables to Secrets within the Secret Manager&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;From Console&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Go to the Secret Manager page in the Cloud Console.&lt;/li&gt;&lt;li&gt;On the Secret Manager page, click Create Secret.&lt;/li&gt;&lt;li&gt;On the Create secret page, under Name, enter the name of the Environment Variable you are replacing. This will then be the Secret Variable you will reference in your code.&lt;/li&gt;&lt;li&gt;You will also need to add a version. This is the actual value of the variable that will be referenced from the code. To add a secret version when creating the initial secret, in the Secret value field, enter the value from the Environment Variable you are replacing.&lt;/li&gt;&lt;li&gt;Leave the Regions section unchanged.&lt;/li&gt;&lt;li&gt;Click the Create secret button.&lt;/li&gt;&lt;li&gt;Repeat for all Environment Variables&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;From Command Line&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Run the following command with the Environment Variable name you are replacing in the &amp;lt;secret-id&amp;gt;. It is most secure to point this command to a file with the Environment Variable value located in it, as if you entered it via command line it would show up in your shell's command history.&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;gcloud secrets create &amp;lt;secret-id&amp;gt; --data-file="/path/to/file.txt"&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;strong&gt;Granting your Runtime's Service Account Access to Secrets&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;From Console&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Within the project containing your runtime login with account that has the 'roles/secretmanager.secretAccessor' permission.&lt;/li&gt;&lt;li&gt;Select the Navigation hamburger menu in the top left. Hover over 'Security' to under the then select 'Secret Manager' in the menu that opens up.&lt;/li&gt;&lt;li&gt;Click the name of a secret listed in this screen.&lt;/li&gt;&lt;li&gt;If it is not already open, click Show Info Panel in this screen to open the panel. 5.In the info panel, click Add principal. 6.In the New principals field, enter the service account your function uses for its identity. (If you need help locating or updating your runtime's service account, please see the 'docs/securing/function-identity#runtime_service_account' reference.)&lt;/li&gt;&lt;li&gt;In the Select a role dropdown, choose Secret Manager and then Secret Manager Secret Accessor.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;From Command Line&amp;nbsp;&lt;/p&gt;&lt;p&gt;As of the time of writing, using Google CLI to list Runtime variables is only in beta. Because this is likely to change we are not including it here.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Modifying the Code to use the Secrets in Secret Manager&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;From Console&lt;/p&gt;&lt;p&gt;This depends heavily on which language your runtime is in. For the sake of the brevity of this recommendation, please see the '/docs/creating-and-accessing-secrets#access' reference for language specific instructions.&amp;nbsp;&lt;/p&gt;&lt;p&gt;From Command Line&lt;/p&gt;&lt;p&gt;This depends heavily on which language your runtime is in. For the sake of the brevity of this recommendation, please see the' /docs/creating-and-accessing-secrets#access' reference for language specific instructions.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Deleting the Insecure Environment Variables&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Be certain to do this step last. Removing variables from code actively referencing them will prevent it from completing successfully.&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;From Console&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Select the Navigation hamburger menu in the top left. Hover over 'Security' then select 'Secret Manager' in the menu that opens up.&lt;/li&gt;&lt;li&gt;Click the name of a function. Click Edit.&lt;/li&gt;&lt;li&gt;Click Runtime, build and connections settings to expand the advanced configuration options.&lt;/li&gt;&lt;li&gt;Click 'Security'. Hover over the secret you want to remove, then click 'Delete'.&lt;/li&gt;&lt;li&gt;Click Next. Click Deploy. The latest version of the runtime will now reference the secrets in Secret Manager.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;From Command Line&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;gcloud functions deploy &amp;lt;Function name&amp;gt;--remove-env-vars &amp;lt;env vars&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;If you need to find the env vars to remove, they are from the step where 'gcloud functions describe &amp;lt;function_name&amp;gt;' was run.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Default Value:&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;By default Secret Manager is not enabled.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Google Cloud docs: Managing secrets" url="https://cloud.google.com/functions/docs/configuring/env-var#managing_secrets"/>
            <reference name="Google Cloud docs: Secret Manager Overview" url="https://cloud.google.com/secret-manager/docs/overview"/>
          </references>
          <standards>
            <standard ref="1.18" supportedStandardRef="cis-gcp-standard"/>
            <standard ref="1.18" supportedStandardRef="cis-gcp-standard-level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;&lt;strong&gt;Determine if Confidential Information is Stored in your Functions in Cleartext&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;From Console&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Log in to the Google Cloud Web Portal (https://console.cloud.google.com/)&lt;/li&gt;&lt;li&gt;Within the project you wish to audit, select the Navigation hamburger menu in the top left. Scroll down to under the heading 'Serverless', then select 'Cloud Functions'&lt;/li&gt;&lt;li&gt;Click on a function name from the list&lt;/li&gt;&lt;li&gt;Open the Variables tab and you will see both buildEnvironmentVariables and environmentVariables&lt;/li&gt;&lt;li&gt;Review the variables whether they are secrets&lt;/li&gt;&lt;li&gt;Repeat step 3-5 until all functions are reviewed&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;From Command Line&lt;/p&gt;&lt;ul&gt;&lt;li&gt;To view a list of your cloud functions run&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;gcloud functions list&lt;/p&gt;&lt;/blockquote&gt;&lt;ul&gt;&lt;li&gt;For each cloud function in the list run the following command.&amp;nbsp;&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;gcloud functions describe &amp;lt;function_name&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;ul&gt;&lt;li&gt;Review the settings of the buildEnvironmentVariables and environmentVariables. Determine if this is data that should not be publicly accessible.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;Determine if Secret Manager API is 'Enabled' for your Project&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;From Console&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Within the project you wish to audit, select the Navigation hamburger menu in the top left. Hover over 'APIs &amp;amp; Services' to under the heading 'Serverless', then select 'Enabled APIs &amp;amp; Services' in the menu that opens up.&lt;/li&gt;&lt;li&gt;Click the button '+ Enable APIS and Services'&lt;/li&gt;&lt;li&gt;In the Search bar, search for 'Secret Manager API' and select it.&lt;/li&gt;&lt;li&gt;If it is enabled, the blue box that normally says 'Enable' will instead say 'Manage'.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;From Command Line&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Within the project you wish to audit, run the following command.&amp;nbsp;&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;gcloud services list&lt;/p&gt;&lt;/blockquote&gt;&lt;ul&gt;&lt;li&gt;If 'Secret Manager API' is in the list, it is enabled.&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:53.490">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-IAM06" name="Use Security Key for 2-Step Verification for administrator or co-administrator accounts" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Ensure that the users with administrator and co-administrator accounts activate and configure the second factor authentication provided by Google. With 2-Step Verification, you can log into Google with a security key.&amp;nbsp; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  To activate and configure 2 Factor Authentication, you shall follow the following steps: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Go to the 2-Step Verification page section of &lt;a href="https://myaccount.google.com/signinoptions/two-step-verification"&gt;My Account&lt;/a&gt;.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Click Add security key.&lt;/li&gt; 
  &lt;li&gt;Follow the on-screen instructions.&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Google Cloud: mobile account" url="https://support.google.com/accounts/answer/6103523?co=GENIE.Platform%3DAndroid#phone"/>
            <reference name="Google support: answers" url="https://support.google.com/accounts/answer/6103534"/>
          </references>
          <standards>
            <standard ref="A07:2021-Identification and Authentication Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A2:2017-Broken Authentication" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Go to the 2-Step Verification page section of My Account.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Check that 2-Step Verification authentication is enabled and configured correctly.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-14T05:08:53.488">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="ACTIVITY LOGS ALERTS" name="Activity Logs alerts" desc="" library="Google Cloud Platform">
          <threats>
            <threat ref="UNAUTHORIZED-ACCESS-SYSTEMS" name="Attackers access the systems without being detected" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Google Cloud Platform" editable="true">
              <desc>&lt;p&gt;Attackers gain access to the systems and are not detected and consequently, changes made by attackers can not be audited or detected.&lt;/p&gt;</desc>
              <riskRating confidentiality="50" integrity="25" availability="25" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="GOOGLE-MON02">
                  <countermeasures>
                    <countermeasure ref="GOOGLE-MON02A" mitigation="17"/>
                  </countermeasures>
                </weakness>
                <weakness ref="GOOGLE-MON03">
                  <countermeasures>
                    <countermeasure ref="GOOGLE-MON05" mitigation="17"/>
                  </countermeasures>
                </weakness>
                <weakness ref="GOOGLE-MON04">
                  <countermeasures>
                    <countermeasure ref="GOOGLE-MON06" mitigation="16"/>
                  </countermeasures>
                </weakness>
                <weakness ref="GOOGLE-MON05">
                  <countermeasures>
                    <countermeasure ref="GOOGLE-MON07" mitigation="17"/>
                  </countermeasures>
                </weakness>
                <weakness ref="GOOGLE-MON06">
                  <countermeasures>
                    <countermeasure ref="GOOGLE-MON08" mitigation="17"/>
                  </countermeasures>
                </weakness>
                <weakness ref="GOOGLE-RESOURCES-STATUS">
                  <countermeasures>
                    <countermeasure ref="GOOGLE-MON01" mitigation="16"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="GOOGLE-MON01" mitigation="17"/>
                <countermeasure ref="GOOGLE-MON02A" mitigation="17"/>
                <countermeasure ref="GOOGLE-MON05" mitigation="17"/>
                <countermeasure ref="GOOGLE-MON06" mitigation="16"/>
                <countermeasure ref="GOOGLE-MON07" mitigation="16"/>
                <countermeasure ref="GOOGLE-MON08" mitigation="17"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="UNAUTHORIZED-ACCESS-SECURITY-SYSTEMS" name="Attackers gain undetected access to the security system configurations" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Google Cloud Platform" editable="true">
              <desc>Attackers could gain undetected access to the security system configurations and
                                changes made by attackers couldn't be audited or detected.
                            </desc>
              <riskRating confidentiality="50" integrity="50" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="GOOGLE-MON01">
                  <countermeasures>
                    <countermeasure ref="GOOGLE-MON03" mitigation="34"/>
                    <countermeasure ref="GOOGLE-MON04" mitigation="33"/>
                    <countermeasure ref="GOOGLE-MON13" mitigation="33"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="GOOGLE-MON03" mitigation="34"/>
                <countermeasure ref="GOOGLE-MON04" mitigation="33"/>
                <countermeasure ref="GOOGLE-MON13" mitigation="33"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="UNAUTHORIZED-ACCESS-NETWORK" name="Sensitive data is compromised through network access" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Google Cloud Platform" editable="true">
              <desc>Attackers gain undetected access to the network systems and changes made by the
                                attackers couldn't be audited or detected.
                            </desc>
              <riskRating confidentiality="50" integrity="50" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="GOOGLE-MON07">
                  <countermeasures>
                    <countermeasure ref="GOOGLE-MON09" mitigation="34"/>
                    <countermeasure ref="GOOGLE-MON10" mitigation="33"/>
                    <countermeasure ref="GOOGLE-MON11" mitigation="33"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="GOOGLE-MON09" mitigation="34"/>
                <countermeasure ref="GOOGLE-MON10" mitigation="33"/>
                <countermeasure ref="GOOGLE-MON11" mitigation="33"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="AUTHENTICATION" name="Authentication" desc="" library="Google Cloud Platform">
          <threats>
            <threat ref="GOOGLE-LOST-ACCESS-ROOT" name="Attackers gain unauthorized access to the root account due to lack of configuration of the account" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Google Cloud Platform" editable="true">
              <desc>&lt;p&gt;Attackers could gain unauthorized access to the administrator account due to lack of configuration of the account and its security mechanisms, such as modifying credentials and adding/removing user accounts.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="GOOGLE-IAM-01">
                  <countermeasures>
                    <countermeasure ref="GOOGLE-IAM06" mitigation="6"/>
                  </countermeasures>
                </weakness>
                <weakness ref="GOOGLE-MON01">
                  <countermeasures>
                    <countermeasure ref="GOOGLE-IAM09" mitigation="6"/>
                    <countermeasure ref="GOOGLE-IAM10" mitigation="6"/>
                    <countermeasure ref="GOOGLE-IAM11" mitigation="6"/>
                    <countermeasure ref="GOOGLE-IAM12" mitigation="6"/>
                    <countermeasure ref="GOOGLE-IAM13" mitigation="6"/>
                    <countermeasure ref="GOOGLE-IAM14" mitigation="6"/>
                    <countermeasure ref="GOOGLE-IAM15" mitigation="6"/>
                    <countermeasure ref="GOOGLE-IAM16" mitigation="6"/>
                    <countermeasure ref="GOOGLE-IAM17" mitigation="6"/>
                    <countermeasure ref="GOOGLE-IAM18" mitigation="6"/>
                    <countermeasure ref="GOOGLE-IAM19" mitigation="6"/>
                    <countermeasure ref="GOOGLE-IAM20" mitigation="6"/>
                  </countermeasures>
                </weakness>
                <weakness ref="GOOGLE-MON02">
                  <countermeasures>
                    <countermeasure ref="GOOGLE-IAM05" mitigation="16"/>
                  </countermeasures>
                </weakness>
                <weakness ref="LOST-SECURITY-ALERTS">
                  <countermeasures>
                    <countermeasure ref="GOOGLE-GOV01" mitigation="6"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="GOOGLE-GOV01" mitigation="6"/>
                <countermeasure ref="GOOGLE-IAM05" mitigation="16"/>
                <countermeasure ref="GOOGLE-IAM06" mitigation="6"/>
                <countermeasure ref="GOOGLE-IAM09" mitigation="6"/>
                <countermeasure ref="GOOGLE-IAM10" mitigation="6"/>
                <countermeasure ref="GOOGLE-IAM11" mitigation="6"/>
                <countermeasure ref="GOOGLE-IAM12" mitigation="6"/>
                <countermeasure ref="GOOGLE-IAM13" mitigation="6"/>
                <countermeasure ref="GOOGLE-IAM14" mitigation="6"/>
                <countermeasure ref="GOOGLE-IAM15" mitigation="6"/>
                <countermeasure ref="GOOGLE-IAM16" mitigation="6"/>
                <countermeasure ref="GOOGLE-IAM17" mitigation="6"/>
                <countermeasure ref="GOOGLE-IAM18" mitigation="6"/>
                <countermeasure ref="GOOGLE-IAM19" mitigation="6"/>
                <countermeasure ref="GOOGLE-IAM20" mitigation="6"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="GOOGLE-LOST-ACCESS-USER" name="Attackers gain unauthorized access to the user account due to lack of configuration of the account" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Google Cloud Platform" editable="true">
              <desc>&lt;p&gt;Attackers could gain unauthorized access to the user account due to lack of configuration of the account, for example, the security question to reset the password is configured incorrectly.&lt;/p&gt;</desc>
              <riskRating confidentiality="50" integrity="50" availability="50" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="GOOGLE-IAM03">
                  <countermeasures>
                    <countermeasure ref="C-GCP-IAM-01" mitigation="25"/>
                    <countermeasure ref="C-GCP-IAM-02" mitigation="25"/>
                    <countermeasure ref="C-GCP-IAM-03" mitigation="25"/>
                    <countermeasure ref="GOOGLE-IAM01" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-GCP-IAM-01" mitigation="25"/>
                <countermeasure ref="C-GCP-IAM-02" mitigation="25"/>
                <countermeasure ref="C-GCP-IAM-03" mitigation="25"/>
                <countermeasure ref="GOOGLE-IAM01" mitigation="25"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="AUTHORIZATION" name="Authorization" desc="" library="Google Cloud Platform">
          <threats>
            <threat ref="LOSS-CONTROL_ENV" name="Attackers gain unauthorized access to the control of the environment" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Google Cloud Platform" editable="true">
              <desc>&lt;p&gt;Attackers could potentially gain unauthorized access to the control of the environment, due to user accounts - or role groups - not being well defined and configured. As a consequence attackers may be able to make changes without root approval.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="75" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="GOOGLE-EXPIRATION-DATE">
                  <countermeasures>
                    <countermeasure ref="GOOGLE-IAM08" mitigation="20"/>
                  </countermeasures>
                </weakness>
                <weakness ref="GOOGLE_IAM-02">
                  <countermeasures>
                    <countermeasure ref="GOOGLE-IAM02" mitigation="20"/>
                    <countermeasure ref="GOOGLE-IAM03" mitigation="20"/>
                    <countermeasure ref="GOOGLE-IAM04" mitigation="20"/>
                    <countermeasure ref="GOOGLE-IAM07" mitigation="20"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="GOOGLE-IAM02" mitigation="20"/>
                <countermeasure ref="GOOGLE-IAM03" mitigation="20"/>
                <countermeasure ref="GOOGLE-IAM04" mitigation="20"/>
                <countermeasure ref="GOOGLE-IAM07" mitigation="20"/>
                <countermeasure ref="GOOGLE-IAM08" mitigation="20"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="LOGGING AND MONITORING" name="Logging and Monitoring" desc="" library="Google Cloud Platform">
          <threats>
            <threat ref="OWASP-A10-2017" name="Exploitation of insufficient logging and monitoring" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Google Cloud Platform" editable="true">
              <desc>	&lt;p&gt;Exploitation of insufficient logging and monitoring is the bedrock of nearly every major incident. Attackers rely on the lack of monitoring and timely response to achieve their goals without being detected.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="C-GCP-LOG-01" mitigation="12"/>
                    <countermeasure ref="C-GCP-LOG-02" mitigation="12"/>
                    <countermeasure ref="C-GCP-LOG-03" mitigation="12"/>
                    <countermeasure ref="GOOGLE-LOG01" mitigation="16"/>
                    <countermeasure ref="GOOGLE-LOG04" mitigation="12"/>
                    <countermeasure ref="GOOGLE-LOG05" mitigation="12"/>
                  </countermeasures>
                </weakness>
                <weakness ref="GOOGLE-LOGS03">
                  <countermeasures>
                    <countermeasure ref="GOOGLE-LOG06" mitigation="12"/>
                    <countermeasure ref="GOOGLE-LOG07" mitigation="12"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-GCP-LOG-01" mitigation="12"/>
                <countermeasure ref="C-GCP-LOG-02" mitigation="12"/>
                <countermeasure ref="C-GCP-LOG-03" mitigation="12"/>
                <countermeasure ref="GOOGLE-LOG01" mitigation="16"/>
                <countermeasure ref="GOOGLE-LOG04" mitigation="12"/>
                <countermeasure ref="GOOGLE-LOG05" mitigation="12"/>
                <countermeasure ref="GOOGLE-LOG06" mitigation="12"/>
                <countermeasure ref="GOOGLE-LOG07" mitigation="12"/>
              </countermeasures>
              <customFields>
                <customField ref="Mitre" value=""/>
                <customField ref="Records" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="NETWORKING" name="Networking" desc="" library="Google Cloud Platform">
          <threats>
            <threat ref="UNAUTHORISED-CONNECTION" name="Attackers gain unauthorized connection to the resources" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Google Cloud Platform" editable="true">
              <desc>Attackers could gain unauthorized connection to the resources through misconfigured
                                ports or security network configurations.
                            </desc>
              <riskRating confidentiality="25" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="GOOGLE-VNET01">
                  <countermeasures>
                    <countermeasure ref="GOOGLE-NET01" mitigation="16"/>
                    <countermeasure ref="GOOGLE-NET02" mitigation="12"/>
                    <countermeasure ref="GOOGLE-NET03" mitigation="12"/>
                    <countermeasure ref="GOOGLE-NET04" mitigation="12"/>
                    <countermeasure ref="GOOGLE-NET05" mitigation="12"/>
                    <countermeasure ref="GOOGLE-NET06" mitigation="12"/>
                    <countermeasure ref="GOOGLE-NET07" mitigation="12"/>
                    <countermeasure ref="GOOGLE-NET08" mitigation="12"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="GOOGLE-NET01" mitigation="16"/>
                <countermeasure ref="GOOGLE-NET02" mitigation="12"/>
                <countermeasure ref="GOOGLE-NET03" mitigation="12"/>
                <countermeasure ref="GOOGLE-NET04" mitigation="12"/>
                <countermeasure ref="GOOGLE-NET05" mitigation="12"/>
                <countermeasure ref="GOOGLE-NET06" mitigation="12"/>
                <countermeasure ref="GOOGLE-NET07" mitigation="12"/>
                <countermeasure ref="GOOGLE-NET08" mitigation="12"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="f8e14274-9f1a-415d-8d50-431232460add" diagramComponentId="7081bee1-795e-425c-987a-1240a56a2a2f" ref="8bc1f704-bd68-4a18-a395-06fe6b0efb1f" name="Artifact Management" desc="" library="CS-Default" parentComponentRef="3db09fc8-8382-48b7-aabb-d78dc04ba2da" componentDefinitionRef="empty-component">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses/>
      <countermeasures/>
      <usecases/>
    </component>
  </components>
</template>
