<?xml version="1.0" encoding="UTF-8"?>
<template ref="gcp-microservices-on-google-cloud" name="GCP - Microservices on Google Cloud" tags="">
  <desc/>
  <diagram draft="false">
    <schema></schema>
  </diagram>
  <trustZones>
    <trustZone ref="public" uuid="6376d53e-6461-412b-8e04-7b3fe2b397de" name="Public" desc="Untrusted public zone" trustRating="1"/>
  </trustZones>
  <questions/>
  <assets/>
  <settings/>
  <dataflows>
    <dataflow name="GCP Load Balancing -&gt; Empty Component" ref="06578e5e-af09-4028-8b4b-0e2b4d9a94d0" source="143dc021-c915-48d0-8b68-6f653c24704c" target="ec9c8d86-b4fb-43ab-8c48-323781a7c9a1">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Cloud DNS -&gt; Cache Assets - Cloud CDN" ref="0ed2239b-3f6c-4985-bca4-ad70868dfb03" source="8f95a153-70a2-400d-ae4a-d4606f39526f" target="e9c27a92-1b95-4151-b4ae-c89c9bd209ca">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Cache Assets - Cloud CDN -&gt; GCP Load Balancing" ref="4c8e2f66-b392-4b6d-85ea-f863a735673d" source="e9c27a92-1b95-4151-b4ae-c89c9bd209ca" target="143dc021-c915-48d0-8b68-6f653c24704c">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Empty Component -&gt; Event-driven Service Integration" ref="639e3454-d566-40a8-8a53-ad543e275c61" source="ec9c8d86-b4fb-43ab-8c48-323781a7c9a1" target="ae917821-12a8-4b3a-a19f-649aaae3b64b">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Static Assets - GCP Storage -&gt; Cache Assets - Cloud CDN" ref="6f1df041-82f1-42ff-9379-393a202ea11b" source="dfbc7f0b-83b2-4a5d-bc17-d048dbe31a09" target="e9c27a92-1b95-4151-b4ae-c89c9bd209ca">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Empty Component -&gt; Databases" ref="96249151-4c5f-4f77-b956-82cb62be2823" source="ec9c8d86-b4fb-43ab-8c48-323781a7c9a1" target="0be7889d-456d-4e5d-91c3-46f69ec973f8">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Databases -&gt; Empty Component" ref="c3e8c913-7c3a-428d-acac-01a3a30bed9d" source="0be7889d-456d-4e5d-91c3-46f69ec973f8" target="ec9c8d86-b4fb-43ab-8c48-323781a7c9a1">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Event-driven Service Integration -&gt; Empty Component" ref="e62f6ec9-c61e-4f3b-a441-c8b3f706a3a4" source="ae917821-12a8-4b3a-a19f-649aaae3b64b" target="ec9c8d86-b4fb-43ab-8c48-323781a7c9a1">
      <assets/>
      <tags/>
    </dataflow>
  </dataflows>
  <customFields>
    <customField ref="APT" value=""/>
    <customField ref="Application Details" value=""/>
    <customField ref="Application Downtime Cost" value=""/>
    <customField ref="Application Type" value=""/>
    <customField ref="Apply Standard at all times" value="1"/>
    <customField ref="Contact Email" value=""/>
    <customField ref="Custom Field A" value=""/>
    <customField ref="DEL" value=""/>
    <customField ref="GPS Environment" value="NO"/>
    <customField ref="Hosting Location" value="GCP"/>
    <customField ref="Milestone 1" value=""/>
    <customField ref="Milestone 1 - Deadline" value=""/>
    <customField ref="Milestone 2" value=""/>
    <customField ref="Milestone 2 - Deadline" value=""/>
    <customField ref="Milestone 3" value=""/>
    <customField ref="Milestone 3 - Deadline" value=""/>
    <customField ref="Product Review Session Details" value=""/>
    <customField ref="Project Management Details" value=""/>
    <customField ref="Project Manager" value=""/>
    <customField ref="Project Number" value="_::_"/>
    <customField ref="Project Owner Email" value="jrabe@iriusrisk.com"/>
    <customField ref="Ready for Workflow advancement?" value="NO"/>
    <customField ref="Requirements" value=""/>
    <customField ref="Test Custom" value=""/>
    <customField ref="Third Party Contact" value=""/>
    <customField ref="Third Party Organization" value=""/>
    <customField ref="UPS Template Picker" value="GCP Template"/>
    <customField ref="Use Case" value=""/>
    <customField ref="User Email Field" value=""/>
    <customField ref="VZ - Requirements" value="Type 1||Type 2"/>
  </customFields>
  <components>
    <component uuid="b0339f33-47b0-4a89-9fd6-8f3a7d0a8da2" diagramComponentId="57718217-01a2-41c0-b3a6-e7293d39a4bc" ref="955c173b-e9fd-42e0-9060-3df6c91ef19e" name="GCP Platform Environment" desc="" library="Google Cloud Platform" parentComponentRef="" componentDefinitionRef="google-cloud-platform-environment">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses>
        <weakness ref="GOOGLE-LOGS03" name="Audit logs can be deleted" state="0" impact="100" issueId="" issueLink="">
          <desc>There is no external backups of log records. If logs are deleted, there is no way to recover them.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:09.249">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="GOOGLE-MON02" name="Excessive use of administrator accounts" state="0" impact="100" issueId="" issueLink="">
          <desc>The administrator accounts are used for all actions, not only for the administrative ones. This is because these users do not have a personal or user account to perform their daily actions.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:09.507">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CWE-778" name="Insufficient Logging" state="0" impact="100" issueId="" issueLink="">
          <desc>When a critical security event occurs, the software either does not record the event or omits important details about the event when logging it. When critical security events are not logged properly, such as in the case of a failed login attempt, this can make malicious behavior more difficult to detect and may hinder forensic analyses after a successful attack.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:09.250">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="GOOGLE-MON03" name="Lack of 2FA" state="0" impact="100" issueId="" issueLink="">
          <desc>Login to the console without using Multi-factor Authentication (MFA) is considered as suspicious activity. Therefore connection without MFA must be audited and monitored and the corresponding security group must be informed and must validate this connection.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:09.854">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="LOST-SECURITY-ALERTS" name="Misconfigured Security contact details" state="0" impact="100" issueId="" issueLink="">
          <desc>The security contact details for the Azure subscription are not properly configured.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Access &amp;quot;Azure Security Center&amp;quot;.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;In the &amp;quot;Recommendations&amp;quot; tab choose &amp;quot;Provide security
                            contact details&amp;quot;.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Check that all fields are filled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:09.508">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="GOOGLE-IAM03" name="Misconfigured User Account" state="0" impact="100" issueId="" issueLink="">
          <desc>Key security settings such as resetting the password, and other password controls are not
                        configured.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:09.508">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="GOOGLE-IAM-01" name="Misconfigured authentication method for administrator accounts" state="0" impact="100" issueId="" issueLink="">
          <desc>The authentication method "Multi-factor Authentication" for the Administrator accounts is not
                        configured.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:09.508">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="GOOGLE_IAM-02" name="Misconfigured credentials for groups and roles" state="0" impact="100" issueId="" issueLink="">
          <desc>The credentials for the groups and roles are incorrectly configured and there are user accounts with more privileges than necessary.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:09.508">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="GOOGLE-EXPIRATION-DATE" name="Misconfigured security key expirations" state="0" impact="100" issueId="" issueLink="">
          <desc>The password and security key expiration is not configured and users are not obliged to change
                        their security credentials. Not frequently changing passwords, gives attackers the chance to
                        obtain credentials and gain access to the systems.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:09.508">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="GOOGLE-VNET01" name="Networks for Google Cloud resources are not properly segmented" state="0" impact="100" issueId="" issueLink="">
          <desc>Resources in the same VNet are compromised because when one of them is attacked and the
                        attackers gain access, they also gain access to all resources.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:09.061">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="GOOGLE-RESOURCES-STATUS" name="Undetected Resources status changes" state="0" impact="100" issueId="" issueLink="">
          <desc>Changes to the system status are not controlled with the consequence of system failure.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:09.854">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="GOOGLE-MON06" name="Undetected brute force attempts on the Google Cloud console" state="0" impact="100" issueId="" issueLink="">
          <desc>Failed connection attempts (brute force) must be audited and monitored and the corresponding personnel must be alerted and informed.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:09.854">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="GOOGLE-MON05" name="Undetected changes in the data encryption configuration" state="0" impact="100" issueId="" issueLink="">
          <desc>Changes to the database encryption must be audited and monitored. When there are changes to the database encryption, the security group must be alerted.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:09.854">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="GOOGLE-MON07" name="Undetected changes in the network configuration" state="0" impact="100" issueId="" issueLink="">
          <desc>Changes in network configurations (NACLs, route and gateway tables) are not detected because monitoring and alerts of network configuration changes are not in place.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:09.853">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="GOOGLE-MON01" name="Undetected changes in the security configurations" state="0" impact="100" issueId="" issueLink="">
          <desc>Monitoring and alerting for security configurations are not configured and changes cannot be detected.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:09.508">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="GOOGLE-MON04" name="Undetected changes in the security groups" state="0" impact="100" issueId="" issueLink="">
          <desc>Changes in the security groups must be traced and monitored and the corresponding personnel must approve these changes. If the configuration is not appropriate, attackers can gain access to security systems.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:09.854">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="GOOGLE-IAM03" name="Apply RBAC with pre-defined policies added into groups and roles" issueId="" issueLink="" platform="" cost="0" risk="64" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Define and create groups that relate to job functions (administrators, developers, accounting,
                        etc.) and assign the relevant permissions for each group, and then assign IAM users to those
                        groups. All the users in an IAM group inherit the permissions assigned to the group. That way,
                        you can make changes for everyone in a group in just one place. As people move around in your
                        company, you can simply change what IAM group their IAM user belongs to. This method is known as
                        Role Based Access Control (RBAC).&amp;nbsp;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        To add a team member and grant an IAM role to the member:
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Open the IAM page in the Cloud Platform Console and open the IAM page.&lt;/li&gt;
                        &lt;li&gt;Click Select a project.&lt;/li&gt;
                        &lt;li&gt;Select a project and click Open.&lt;/li&gt;
                        &lt;li&gt;Click Add to add new members to the project and set their permissions. In the Select a
                        role drop-down menu, click on a service name to find the roles that belong to that service.&amp;nbsp;&lt;/li&gt;
                        &lt;/ol&gt;To grant more than one role to the same project member:
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Open the IAM page in the Cloud Platform Console and open the IAM page.&lt;/li&gt;
                        &lt;li&gt;Click Select a project.&lt;/li&gt;
                        &lt;li&gt;Select a project and click Open.&lt;/li&gt;
                        &lt;li&gt;Enter the email address of the member and select all the roles that you want to grant
                        to the member. Click Add.&amp;nbsp;&lt;/li&gt;
                        &lt;/ol&gt;To grant a role to a member for more than one project:
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Open the IAM and Admin Projects page in the Cloud Platform Console and open the IAM
                        &amp;amp; ADMIN PROJECTS page.&lt;/li&gt;
                        &lt;li&gt;Select all the projects for which you want to grant permissions.&lt;/li&gt;
                        &lt;li&gt;In the IAM tab on the right pane, add the new member and select a role to grant the
                        role for all selected projects.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Granting, changing, and revoking access to resources" url="https://cloud.google.com/iam/docs/granting-changing-revoking-access"/>
          </references>
          <standards>
            <standard ref="A01:2021-Broken Access Control" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A5:2017-Broken Access Control" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Open the IAM page in the Cloud Platform Console and open the IAM page.&lt;/li&gt;
                            &lt;li&gt;Click Select a project and click Open.&lt;/li&gt;
                            &lt;li&gt;List all members from the project.&lt;/li&gt;
                            &lt;li&gt;Check that each member has been assigned to the correct roles.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:09.394">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-IAM08" name="Automatically rotate Google Service account keys" issueId="" issueLink="" platform="" cost="0" risk="64" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>The Google Service Keys shall be rotated to avoid unauthorized access.
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        To enable automatic rotation of a key, set the rotation schedule with the following gcloud
                        command-line syntax:&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        gcloud kms keys update KEY_NAME \&amp;nbsp;
                        &lt;/div&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        --location LOCATION \&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        --keyring KEYRING_NAME \&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        --rotation-period ROTATION_PERIOD \&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        --next-rotation-time NEXT_ROTATION_TIME&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;For example:&amp;nbsp;
                        &lt;div&gt;
                        gcloud kms keys update KEY_NAME&amp;nbsp;
                        &lt;/div&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        --rotation-period=30d&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        --next-rotation-time=2016-10-12T12:34:56.1234Z
                        &lt;/div&gt;
                        &lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Google Cloud docs: KMS rotation schedule" url="https://cloud.google.com/kms/docs/rotating-keys#kms-set-rotation-schedule-cli"/>
          </references>
          <standards>
            <standard ref="A05:2021-Security Misconfiguration" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A6:2017-Security Misconfiguration" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check automatic rotation of keys is enabled.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:09.394">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-IAM19" name="Avoid assigning Service Account roles to IAM users at project level" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;is recommended to assign the Service Account User (iam.serviceAccountUser) and Service Account Token Creator (iam.serviceAccountTokenCreator) roles to a user for a specific service account rather than assigning the role to a user at project level.&lt;/p&gt;&lt;p&gt;Rationale:&lt;/p&gt;&lt;p&gt;A service account is a special Google account that belongs to an application or a virtual machine (VM), instead of to an individual end-user. Application/VM-Instance uses the service account to call the service's Google API so that users aren't directly involved. In addition to being an identity, a service account is a resource that has IAM policies attached to it. These policies determine who can use the service account.&lt;/p&gt;&lt;p&gt;Users with IAM roles to update the App Engine and Compute Engine instances (such as App Engine Deployer or Compute Instance Admin) can effectively run code as the service accounts used to run these instances, and indirectly gain access to all the resources for which the service accounts have access. Similarly, SSH access to a Compute Engine instance may also provide the ability to execute code as that instance/Service account.&lt;/p&gt;&lt;p&gt;Based on business needs, there could be multiple user-managed service accounts configured for a project. Granting the iam.serviceAccountUser or iam.serviceAserviceAccountTokenCreatorccountUser roles to a user for a project gives the user access to all service accounts in the project, including service accounts that may be created in the future. This can result in elevation of privileges by using service accounts and corresponding Compute Engine instances.&lt;/p&gt;&lt;p&gt;In order to implement least privileges best practices, IAM users should not be assigned the Service Account User or Service Account Token Creator roles at the project level. Instead, these roles should be assigned to a user for a specific service account, giving that user access to the service account. The Service Account User allows a user to bind a service account to a long-running job service, whereas the Service Account Token Creator role allows a user to directly impersonate (or assert) the identity of a service account.&lt;/p&gt;&lt;p&gt;Impact:&lt;/p&gt;&lt;p&gt;After revoking Service Account User or Service Account Token Creator roles at the project level from all impacted user account(s), these roles should be assigned to a user(s) for specific service account(s) according to business needs.&lt;/p&gt;&lt;p&gt;Remediation:&lt;/p&gt;&lt;p&gt;From Console:&lt;/p&gt;&lt;p&gt;1. Go to the IAM page in the GCP Console by visiting: https://console.cloud.google.com/iam-admin/iam.&lt;/p&gt;&lt;p&gt;2. Click on the filter table text bar. Type Role: Service Account User&lt;/p&gt;&lt;p&gt;3. Click the Delete Bin icon in front of the role Service Account User for every user listed as a result of a filter.&lt;/p&gt;&lt;p&gt;4. Click on the filter table text bar. Type Role: Service Account Token Creator&lt;/p&gt;&lt;p&gt;5. Click the Delete Bin icon in front of the role Service Account Token Creator for every user listed as a result of a filter.&lt;/p&gt;&lt;p&gt;From Command Line:&lt;/p&gt;&lt;p&gt;1. Using a text editor, remove the bindings with the roles/iam.serviceAccountUser or roles/iam.serviceAccountTokenCreator.&lt;/p&gt;&lt;p&gt;2. Update the project's IAM policy:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;gcloud projects set-iam-policy PROJECT_ID iam.json&lt;/p&gt;&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="CIS Google Cloud Platform Benchmark" url="https://www.cisecurity.org/benchmark/google_cloud_computing_platform/"/>
          </references>
          <standards>
            <standard ref="1.6" supportedStandardRef="cis-gcp-standard"/>
            <standard ref="1.6" supportedStandardRef="cis-gcp-standard-level-2"/>
            <standard ref="A07:2021-Identification and Authentication Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A2:2017-Broken Authentication" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;From Console:&lt;/p&gt;&lt;p&gt;1. Go to the IAM page in the GCP Console by visiting https://console.cloud.google.com/iam-admin/iam&lt;/p&gt;&lt;p&gt;2. Click on the filter table text bar, Type Role: Service Account User.&lt;/p&gt;&lt;p&gt;3. Ensure no user is listed as a result of the filter.&lt;/p&gt;&lt;p&gt;4. Click on the filter table text bar, Type Role: Service Account Token Creator.&lt;/p&gt;&lt;p&gt;5. Ensure no user is listed as a result of the filter.&lt;/p&gt;&lt;p&gt;From Command Line: To ensure IAM users are not assigned Service Account User role at the project level:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;gcloud projects get-iam-policy PROJECT_ID --format json | jq '.bindings[].role' | grep "roles/iam.serviceAccountUser"&amp;nbsp;&lt;/p&gt;&lt;p&gt;gcloud projects get-iam-policy PROJECT_ID --format json | jq '.bindings[].role' | grep "roles/iam.serviceAccountTokenCreator"&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;These commands should not return any output.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:09.395">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-IAM12" name="Avoid using API keys on a project" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Keys are insecure because they can be viewed publicly, such as from within a browser, or they can be accessed on a device where the key resides. It is recommended to use standard authentication flow instead.&lt;/p&gt;&lt;p&gt;Rationale:&lt;/p&gt;&lt;p&gt;Security risks involved in using API-Keys appear below:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;API keys are simple encrypted strings&lt;/li&gt;&lt;li&gt;API keys do not identify the user or the application making the API request&lt;/li&gt;&lt;li&gt;API keys are typically accessible to clients, making it easy to discover and steal an API key&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;To avoid the security risk in using API keys, it is recommended to use standard authentication flow instead.&lt;/p&gt;&lt;p&gt;Impact:&lt;/p&gt;&lt;p&gt;Deleting an API key will break dependent applications (if any).&lt;/p&gt;&lt;p&gt;From Console:&lt;/p&gt;&lt;p&gt;1. Go to APIs &amp;amp; Services\Credentials using https://console.cloud.google.com/apis/credentials&lt;/p&gt;&lt;p&gt;2. In the section API Keys, to delete API Keys: Click the Delete Bin Icon in front of every API Key Name.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="CIS Google Cloud Platform Benchmark" url="https://www.cisecurity.org/benchmark/google_cloud_computing_platform/"/>
          </references>
          <standards>
            <standard ref="1.12" supportedStandardRef="cis-gcp-standard-level-2"/>
            <standard ref="A05:2021-Security Misconfiguration" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A6:2017-Security Misconfiguration" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;From Console:&lt;/p&gt;&lt;p&gt;1. Go to APIs &amp;amp; Services\Credentials using https://console.cloud.google.com/apis/credentials&lt;/p&gt;&lt;p&gt;2. In the section API Keys, no API key should be listed.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:09.395">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-IAM09" name="Avoid using personal accounts" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Use corporate login credentials instead of personal accounts, such as Gmail accounts.&lt;/p&gt;&lt;p&gt;Rationale:&lt;/p&gt;&lt;p&gt;It is recommended fully-managed corporate Google accounts be used for increased visibility, auditing, and controlling access to Cloud Platform resources. Email accounts based outside of the user's organization, such as personal accounts, should not be used for business purposes.&lt;/p&gt;&lt;p&gt;Remediation:&lt;/p&gt;&lt;p&gt;Follow the documentation and setup corporate login accounts.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="CIS Google Cloud Platform Benchmark" url="https://www.cisecurity.org/benchmark/google_cloud_computing_platform/"/>
          </references>
          <standards>
            <standard ref="1.1" supportedStandardRef="cis-gcp-standard"/>
            <standard ref="1.1" supportedStandardRef="cis-gcp-standard-level-2"/>
            <standard ref="A01:2021-Broken Access Control" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A5:2017-Broken Access Control" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;For each Google Cloud Platform project, list the accounts that have been granted access to that project:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;gcloud projects get-iam-policy PROJECT_ID&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Also list the accounts added on each folder:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;gcloud resource-manager folders get-iam-policy FOLDER_ID&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;And list your organization's IAM policy:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;gcloud organizations get-iam-policy ORGANIZATION_ID&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;No email accounts outside the organization domain should be granted permissions in the IAM policies. This excludes Google-owned service accounts.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:09.394">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-IAM20" name="Block access to Cloud KMS cryptokeys from unauthorized access" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;It is recommended that the IAM policy on Cloud KMS cryptokeys should restrict anonymous and/or public access.&lt;/p&gt;&lt;p&gt;Rationale:&lt;/p&gt;&lt;p&gt;Granting permissions to allUsers or allAuthenticatedUsers allows anyone to access the dataset. Such access might not be desirable if sensitive data is stored at the location. In this case, ensure that anonymous and/or public access to a Cloud KMS cryptokey is not allowed.&lt;/p&gt;&lt;p&gt;Impact:&lt;/p&gt;&lt;p&gt;Removing the binding for allUsers and allAuthenticatedUsers members denies accessing cryptokeys to anonymous or public users.&lt;/p&gt;&lt;p&gt;Remediation:&lt;/p&gt;&lt;p&gt;From Command Line:&lt;/p&gt;&lt;p&gt;1. List all Cloud KMS Cryptokeys.&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;gcloud kms keys list --keyring=[key_ring_name] --location=global --format=json | jq '.[].name'&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;2. Remove IAM policy binding for a KMS key to remove access to allUsers and allAuthenticatedUsers using the below command.&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;gcloud kms keys remove-iam-policy-binding [key_name] --keyring=[key_ring_name] --location=global --member='allAuthenticatedUsers' --role='[role]'&amp;nbsp;&lt;/p&gt;&lt;p&gt;gcloud kms keys remove-iam-policy-binding [key_name] --keyring=[key_ring_name] --location=global --member='allUsers' --role='[role]'&lt;/p&gt;&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="CIS Google Cloud Platform Benchmark" url="https://www.cisecurity.org/benchmark/google_cloud_computing_platform/"/>
          </references>
          <standards>
            <standard ref="1.9" supportedStandardRef="cis-gcp-standard"/>
            <standard ref="1.9" supportedStandardRef="cis-gcp-standard-level-2"/>
            <standard ref="A01:2021-Broken Access Control" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A5:2017-Broken Access Control" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;From Command Line:&lt;/p&gt;&lt;p&gt;1. List all Cloud KMS Cryptokeys.&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;gcloud kms keys list --keyring=[key_ring_name] --location=global --format=json | jq '.[].name'&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;2. Ensure the below command's output does not contain allUsers and allAuthenticatedUsers.&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;gcloud kms keys get-iam-policy [key_name] --keyring=[key_ring_name] --location=global --format=json | jq '.bindings[].members[]'&lt;/p&gt;&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:09.395">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-NET05" name="Configure Cloud DNS DNSSEC" issueId="" issueLink="" platform="" cost="0" risk="61" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Cloud Domain Name System (DNS) is a fast, reliable and cost-effective domain name system that powers millions of domains on the internet. Domain Name System Security Extensions (DNSSEC) in Cloud DNS enables domain owners to take easy steps to protect their domains against DNS hijacking and man-in-the-middle and other attacks.&lt;/p&gt;&lt;p&gt;Remediation:&lt;/p&gt;&lt;p&gt;From Console:&lt;/p&gt;&lt;p&gt;1. Go to Cloud DNS by visiting https://console.cloud.google.com/net-services/dns/zones.&lt;/p&gt;&lt;p&gt;2. For each zone of Type Public, set DNSSEC to On.&lt;/p&gt;&lt;p&gt;From Command Line: Use the below command to enable DNSSEC for Cloud DNS Zone Name.&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;gcloud dns managed-zones update ZONE_NAME --dnssec-state on&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Ensure RSASHA1 is not used for the key-signing/zone-signing key.&lt;/p&gt;&lt;p&gt;1. If it is necessary to change the settings for a managed zone where it has been enabled, NSSEC must be turned off and re-enabled with different settings. To turn off DNSSEC, run the following command:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;gcloud dns managed-zones update ZONE_NAME --dnssec-state off&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;2. To update key-signing for a reported managed DNS Zone, run the following command:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;gcloud dns managed-zones update ZONE_NAME --dnssec-state on --ksk-algorithm KSK_ALGORITHM --ksk-key-length KSK_KEY_LENGTH --zsk-algorithm ZSK_ALGORITHM --zsk-key-length ZSK_KEY_LENGTH --denial-of-existence DENIAL_OF_EXISTENCE&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="CIS Google Cloud Platform Benchmark" url="https://www.cisecurity.org/benchmark/google_cloud_computing_platform/"/>
          </references>
          <standards>
            <standard ref="3.3" supportedStandardRef="cis-gcp-standard-level-2"/>
            <standard ref="3.4" supportedStandardRef="cis-gcp-standard-level-2"/>
            <standard ref="3.5" supportedStandardRef="cis-gcp-standard-level-2"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure the property algorithm for keyType zone signing is not using RSASHA1.&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;gcloud dns managed-zones describe --format="json(dnsName,dnssecConfig.state,dnssecConfig.defaultKeySpecs)"&lt;/p&gt;&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:09.007">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-LOG05" name="Configure Cloud DNS Logging" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Cloud DNS logging records the queries from the name servers within your VPC to Stackdriver. Logged queries can come from Compute Engine VMs, GKE containers, or other GCP resources provisioned within the VPC.&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Security monitoring and forensics cannot depend solely on IP addresses from VPC flow logs, especially when considering the dynamic IP usage of cloud resources, HTTP virtual host routing, and other technology that can obscure the DNS name used by a client from the IP address. Monitoring of Cloud DNS logs provides visibility to DNS names requested by the clients within the VPC. These logs can be monitored for anomalous domain names, evaluated against threat intelligence.&lt;/p&gt; 
&lt;p&gt;Note: For full capture of DNS, firewall must block egress UDP/53 (DNS) and TCP/443 (DNS over HTTPS) to prevent client from using external DNS name server for resolution.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Enabling logging for private managed zones&lt;/p&gt; 
&lt;p&gt;Use DNS policies to enable or disable logging for your networks, or use the DNS managed zone itself to enable or disable logging for queries resolved by that zone.&lt;/p&gt; 
&lt;p&gt;Note: When you enable query logging, every DNS query to a Cloud DNS managed zone is logged.&lt;/p&gt; 
&lt;p&gt;To enable logging for a network that does not have a DNS policy, run the dns policies create command.&lt;/p&gt; 
&lt;p&gt;gcloud dns policies create POLICY_NAME \ -networks=NETWORK \ -enable-logging \ -description=DESCRIPTION&lt;/p&gt; 
&lt;p&gt;Replace the following:&lt;/p&gt; 
&lt;p&gt;- POLICY_NAME: the name of the DNS policy&lt;br&gt; - NETWORK: one or more networks in a comma-separated list&lt;br&gt; - DESCRIPTION: a description of the policy&lt;/p&gt; 
&lt;p&gt;To enable logging for a network that has an existing DNS policy, run the dns policies update command.&lt;/p&gt; 
&lt;p&gt;gcloud dns policies update POLICY_NAME \ -networks=NETWORK \ -enable-logging&lt;/p&gt; 
&lt;p&gt;Replace the following:&lt;/p&gt; 
&lt;p&gt;- POLICY_NAME: the name of the DNS policy&lt;br&gt; - NETWORK: one or more networks in a comma-separated list&lt;/p&gt; 
&lt;p&gt;Enabling and disabling logging for managed public zones&lt;/p&gt; 
&lt;p&gt;To turn on logging for an existing managed public zone, run the dns managed-zones update command.&lt;/p&gt; 
&lt;p&gt;gcloud dns managed-zones update ZONE_NAME -log-dns-queries \&lt;/p&gt; 
&lt;p&gt;Replace ZONE_NAME with the name of the DNS managed zone that you want to enable logging for.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; Enabling of Cloud DNS logging might result in your project being charged for the additional logs usage.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="CIS Google Cloud Platform Benchmark" url="https://www.cisecurity.org/benchmark/google_cloud_computing_platform/"/>
            <reference name="Cloud DNS Logging and monitoring" url="https://cloud.google.com/dns/docs/monitoring"/>
          </references>
          <standards>
            <standard ref="2.12" supportedStandardRef="cis-gcp-standard"/>
            <standard ref="2.12" supportedStandardRef="cis-gcp-standard-level-2"/>
            <standard ref="A09:2021-Security Logging and Monitoring Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2017-Insufficient Logging-Monitoring" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>	&lt;p&gt;From Command Line:&lt;/p&gt;

	&lt;p&gt;1. List all VPCs networks in a project: &lt;/p&gt;

	&lt;p&gt;gcloud compute networks list -format="table[box,title='All VPC Networks'](name:label='VPC Network Name')"&lt;/p&gt;

	&lt;p&gt;2. List all DNS policies, logging enablement, and associated VPC networks: &lt;/p&gt;

	&lt;p&gt;gcloud dns policies list -flatten="networks[]" -format="table[box,title='All DNS Policies By VPC Network'](name:label='Policy Name',enableLogging:label='LoggingEnabled':align=center,networks.networkUrl.basename():label='VPC Network Name')"&lt;/p&gt;

	&lt;p&gt;Each VPC Network should be associated with a DNS policy with logging enabled.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:09.183">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="C-GCP-IAM-01" name="Configure essential contacts for organization" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;It is recommended that Essential Contacts is configured to designate email addresses for Google Cloud services to notify of important technical or security information.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Rationale&lt;/strong&gt;:&lt;/p&gt;&lt;p&gt;Many Google Cloud services, such as Cloud Billing, send out notifications to share important information with Google Cloud users. By default, these notifications are sent to members with certain Identity and Access Management (IAM) roles. With Essential Contacts, you can customize who receives notifications by providing your own list of contacts.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation:&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;From Console:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Go to Essential Contacts by visiting https://console.cloud.google.com/iam-admin/essential-contacts&lt;/li&gt;&lt;li&gt;Make sure the organization appears in the resource selector at the top of the page. The resource selector tells you what project, folder, or organization you are currently managing contacts for.&lt;/li&gt;&lt;li&gt;Click +Add contact&lt;/li&gt;&lt;li&gt;In the Email and Confirm Email fields, enter the email address of the contact.&lt;/li&gt;&lt;li&gt;From the Notification categories drop-down menu, select the notification categories that you want the contact to receive communications for.&lt;/li&gt;&lt;li&gt;Click Save&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;From Command Line:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;To add an organization Essential Contacts run a command:&lt;/li&gt;&lt;/ol&gt;&lt;blockquote&gt;&lt;p&gt;gcloud essential-contacts create --email="&amp;lt;EMAIL&amp;gt;" \ --notification-categories="&amp;lt;NOTIFICATION_CATEGORIES&amp;gt;" \ --organization=&amp;lt;ORGANIZATION_ID&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;strong&gt;Default Value:&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;By default, there are no Essential Contacts configured.&lt;/p&gt;&lt;p&gt;In the absence of an Essential Contact, the following IAM roles are used to identify users to notify for the following categories:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Legal: roles/billing.admin&lt;/li&gt;&lt;li&gt;Security: roles/resourcemanager.organizationAdmin&lt;/li&gt;&lt;li&gt;Suspension: roles/owner&lt;/li&gt;&lt;li&gt;Technical: roles/owner&lt;/li&gt;&lt;li&gt;Technical Incidents: roles/owner&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="Google Cloud docs: Managing notification contacts" url="https://cloud.google.com/resource-manager/docs/managing-notification-contacts"/>
          </references>
          <standards>
            <standard ref="1.16" supportedStandardRef="cis-gcp-standard"/>
            <standard ref="1.16" supportedStandardRef="cis-gcp-standard-level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;From Console:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Go to Essential Contacts by visiting https://console.cloud.google.com/iam-admin/essential-contacts&lt;/li&gt;&lt;li&gt;Make sure the organization appears in the resource selector at the top of the page. The resource selector tells you what project, folder, or organization you are currently managing contacts for.&lt;/li&gt;&lt;li&gt;Ensure that appropriate email addresses are configured for each of the following notification categories:&lt;/li&gt;&lt;/ol&gt;&lt;ul&gt;&lt;li&gt;Legal&lt;/li&gt;&lt;li&gt;Security&lt;/li&gt;&lt;li&gt;Suspension&lt;/li&gt;&lt;li&gt;Technical&lt;/li&gt;&lt;li&gt;Technical Incidents&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Alternatively, appropriate email addresses can be configured for the All notification category to receive all possible important notifications.&amp;nbsp;&lt;/p&gt;&lt;p&gt;From Command Line:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;To list all configured organization Essential Contacts run a command: gcloud essential-contacts list --organization=&amp;lt;ORGANIZATION_ID&amp;gt;&lt;/li&gt;&lt;li&gt;Ensure at least one appropriate email address is configured for each of the following notification categories:&lt;/li&gt;&lt;/ol&gt;&lt;ul&gt;&lt;li&gt;LEGAL&lt;/li&gt;&lt;li&gt;SECURITY&lt;/li&gt;&lt;li&gt;SUSPENSION&lt;/li&gt;&lt;li&gt;TECHNICAL&lt;/li&gt;&lt;li&gt;TECHNICAL_INCIDENTS&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Alternatively, appropriate email addresses can be configured for the ALL notification category to receive all possible important notifications.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:09.395">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-NET04" name="Configure Firewall Rules for instances behind IAP" issueId="" issueLink="" platform="" cost="1" risk="61" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Access to VMs should be restricted by firewall rules that allow only IAP traffic by ensuring only connections proxied by the IAP are allowed. To ensure that load balancing works correctly health checks should also be allowed.&lt;/p&gt;&lt;p&gt;Rationale:&lt;/p&gt;&lt;p&gt;IAP ensure that access to VMs is controlled by authenticating incoming requests. However if the VM is still accessible from IP addresses other than the IAP it may still be possible to send unauthenticated requests to the instance. Care must be taken to ensure that loadbalancer health checks are not blocked as this would stop the loadbalancer from correctly knowing the health of the VM and loadbalancing correctly.&lt;/p&gt;&lt;p&gt;Impact:&lt;/p&gt;&lt;p&gt;If firewall rules are not configured correctly, legitimate business services could be negatively impacted.&lt;/p&gt;&lt;p&gt;Remediation:&lt;/p&gt;&lt;p&gt;From the Console:&lt;/p&gt;&lt;p&gt;1. Go to the Cloud Console VPC network &amp;gt; Firewall rules.&lt;/p&gt;&lt;p&gt;2. Select the checkbox next to the following rules:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;default-allow-http&lt;/li&gt;&lt;li&gt;default-allow-https&lt;/li&gt;&lt;li&gt;default-allow-internal&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;3. Click Delete.&lt;/p&gt;&lt;p&gt;4. Click Create firewall rule and set the following values:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Name: allow-iap-traffic&lt;/li&gt;&lt;li&gt;Targets: All instances in the network&lt;/li&gt;&lt;li&gt;Source IP ranges (press Enter after you paste each value in the box):&lt;ul&gt;&lt;li&gt;130.211.0.0/22&lt;/li&gt;&lt;li&gt;35.191.0.0/16&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Protocols and ports:&lt;ul&gt;&lt;li&gt;Specified protocols and ports&lt;/li&gt;&lt;li&gt;tcp:80&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;5. When you're finished updating values, click Create.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="CIS Google Cloud Platform Benchmark" url="https://www.cisecurity.org/benchmark/google_cloud_computing_platform/"/>
          </references>
          <standards>
            <standard ref="3.10" supportedStandardRef="cis-gcp-standard-level-2"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;From the Console:&lt;/p&gt;&lt;p&gt;1. Go to the Cloud Console VPC network &amp;gt; Firewall rules.&lt;/p&gt;&lt;p&gt;2. Verify that the only rules correspond to the following values:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Targets: All instances in the network&lt;/li&gt;&lt;li&gt;Source IP ranges (press Enter after you paste each value in the box):&lt;ul&gt;&lt;li&gt;130.211.0.0/22&lt;/li&gt;&lt;li&gt;35.191.0.0/16&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Protocols and ports:&lt;ul&gt;&lt;li&gt;Specified protocols and ports&lt;/li&gt;&lt;li&gt;tcp:80&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:09.006">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-LOG06" name="Configure sinks for all logs entries" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;It is recommended to create a sink that will export copies of all the log entries. This can help aggregate logs from multiple projects and export them to a Security Information and Event Management (SIEM).&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Log entries are held in Cloud Logging. To aggregate logs, export them to a SIEM. To keep them longer, it is recommended to set up a log sink. Exporting involves writing a filter that selects the log entries to export, and choosing a destination in Cloud Storage, BigQuery, or Cloud Pub/Sub. The filter and destination are held in an object called a sink. To ensure all log entries are exported to sinks, ensure that there is no filter configured for a sink. Sinks can be created in projects, organizations, folders, and billing accounts.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Create a sink (console)&lt;/p&gt; 
&lt;p&gt;You can create up to 200 sinks per Cloud project.&lt;/p&gt; 
&lt;p&gt;After you create the sink, ensure that Logging has the appropriate permissions to write logs to your sink's destination.&lt;/p&gt; 
&lt;p&gt;To create a sink, do the following:&lt;/p&gt; 
&lt;p&gt;1. In the Cloud console, go to the Logs Router page:&lt;/p&gt; 
&lt;p&gt;2. Select an existing Cloud project.&lt;/p&gt; 
&lt;p&gt;3. Select Create sink.&lt;/p&gt; 
&lt;p&gt;4. In the Sink details panel, enter the following details:&lt;/p&gt; 
&lt;p&gt;- Sink name: Provide an identifier for the sink; note that after you create the sink, you can't rename the sink but you can delete it and create a new sink.&lt;/p&gt; 
&lt;p&gt;- Sink description (optional): Describe the purpose or use case for the sink.&lt;/p&gt; 
&lt;p&gt;5. In the Sink destination panel, select the sink service and destination:&lt;/p&gt; 
&lt;p&gt;- Select sink service: Select the service where you want your logs routed.&lt;/p&gt; 
&lt;p&gt;Based on the service that you select, you can select from the following destinations:&lt;/p&gt; 
&lt;p&gt;- Cloud Logging bucket: Select or create a Logging bucket.&lt;br&gt; - BigQuery table: Select or create the particular dataset to receive the routed logs. You also have the option to use partitioned tables.&lt;br&gt; - Cloud Storage bucket: Select or create the particular Cloud Storage bucket to receive the routed logs.&lt;br&gt; - Pub/Sub topic: Select or create the particular topic to receive the routed logs.&lt;br&gt; - Splunk: Select the Pub/Sub topic for your Splunk service.&lt;br&gt; - Other Cloud project: Manually add the Logging, BigQuery, Cloud Storage, or Pub/Sub service and destination information in the following format:&lt;/p&gt; 
&lt;p&gt;SERVICE.googleapis.com/projects/PROJECT_ID/SINK_DESTINATION/DESTINATION_ID&lt;/p&gt; 
&lt;p&gt;For example, if your sink destination is a BigQuery dataset, the sink destination would be the following:&lt;/p&gt; 
&lt;p&gt;bigquery.googleapis.com/projects/PROJECT_ID/datasets/DATASET_ID&lt;/p&gt; 
&lt;p&gt;Note that if you are routing logs between Cloud projects, you still need the appropriate destination permissions.&lt;/p&gt; 
&lt;p&gt;6. In the Choose logs to include in sink panel, do the following:&lt;/p&gt; 
&lt;p&gt;a. In the Build inclusion filter field, enter a filter expression that matches the log entries you want to include. If you don't set a filter, all logs from your selected resource are routed to the destination.&lt;/p&gt; 
&lt;p&gt;For example, you might want to build a filter to route all Data Access logs to a single Logging bucket. This filter looks like the following:&lt;/p&gt; 
&lt;p&gt;LOG_ID("cloudaudit.googleapis.com/data_access") OR LOG_ID("externalaudit.googleapis.com/data_access")&lt;/p&gt; 
&lt;p&gt;Note that the length of a filter can't exceed 20,000 characters.&lt;/p&gt; 
&lt;p&gt;b. To verify you entered the correct filter, select Preview logs. This opens the Logs Explorer in a new tab with the filter prepopulated.&lt;/p&gt; 
&lt;p&gt;7. (Optional) In the Choose logs to filter out of sink panel, do the following:&lt;/p&gt; 
&lt;p&gt;a. In the Exclusion filter name field, enter a name.&lt;/p&gt; 
&lt;p&gt;b. In the Build an exclusion filter field, enter a filter expression that matches the log entries you want to exclude. You can also use the sample function to select a portion of the log entries to exclude.&lt;/p&gt; 
&lt;p&gt;Key Point: If you want your exclusion filter to be disabled when the sink is created, then select Disable after you enter your filter expression. You can update the sink later to enable the exclusion filter.&lt;/p&gt; 
&lt;p&gt;You can create up to 50 exclusion filters per sink. Note that the length of a filter can't exceed 20,000 characters.&lt;/p&gt; 
&lt;p&gt;8. Select Create sink.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; There are no costs or limitations in Cloud Logging for exporting logs, but the export destinations charge for storing or transmitting the log data.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="CIS Google Cloud Platform Benchmark" url="https://www.cisecurity.org/benchmark/google_cloud_computing_platform/"/>
            <reference name="Configure and manage sinks" url="https://cloud.google.com/logging/docs/export/configure_export_v2"/>
          </references>
          <standards>
            <standard ref="2.2" supportedStandardRef="cis-gcp-standard"/>
            <standard ref="2.2" supportedStandardRef="cis-gcp-standard-level-2"/>
            <standard ref="A09:2021-Security Logging and Monitoring Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2017-Insufficient Logging-Monitoring" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>	&lt;p&gt;From Console:&lt;/p&gt;

	&lt;p&gt;1. Go to Logging/Exports by visiting https://console.cloud.google.com/logs/exports.&lt;/p&gt;

	&lt;p&gt;2. For every sink, click the 3-dot button for Menu options and select View Filter.&lt;/p&gt;

	&lt;p&gt;3. Ensure there is at least one sink with an empty sink filter.&lt;/p&gt;

	&lt;p&gt;4. Additionally, ensure that the resource configured as Destination exists.&lt;/p&gt;

	&lt;p&gt;From Command Line:&lt;/p&gt;

	&lt;p&gt;1. Ensure that a sink with an empty filter exists. List the sinks for the project, folder or organization. If sinks are configured at a folder or organization level, they do not need to be configured for each project: &lt;/p&gt;

	&lt;p&gt;gcloud logging sinks list -folder=FOLDER_ID | -organization=ORGANIZATION_ID | -project=PROJECT_ID&lt;/p&gt;

	&lt;p&gt;The output should list at least one sink with an empty filter.&lt;/p&gt;

	&lt;p&gt;2. Additionally, ensure that the resource configured as Destination exists.&lt;/p&gt;

	&lt;p&gt;See https://cloud.google.com/sdk/gcloud/reference/beta/logging/sinks/list for more information.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:09.183">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-GOV01" name="Configure the reset security challenge questions for Administrator accounts" issueId="" issueLink="" platform="" cost="1" risk="62" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Ensure configuration of the security challenge questions for the Administrator accounts recover or reset password process are secure.&amp;nbsp; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt;&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Go to &lt;a href="https://myaccount.google.com/security#signin"&gt;Google Cloud Account&lt;/a&gt;.&lt;/li&gt; 
  &lt;li&gt;Fill in the fields from the &amp;quot;Recover Account Options&amp;quot; sections and click &amp;quot;Save&amp;quot;.&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Google Cloud: Security" url="https://myaccount.google.com/security#signin"/>
          </references>
          <standards>
            <standard ref="A05:2021-Security Misconfiguration" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A6:2017-Security Misconfiguration" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Go to &lt;a href="https://myaccount.google.com/security#signin"&gt;Google Cloud
                            account&lt;/a&gt;.&lt;/li&gt;
                            &lt;li&gt;Check that all fields from the &amp;quot;Recover Account Options&amp;quot;
                            sections are filled correctly.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:09.392">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-MON06" name="Create alerts for changes in the security groups and in the security group configurations" issueId="" issueLink="" platform="" cost="0" risk="61" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Create alerts for changes in the security groups and in the security group configurations&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Create alerts to monitor, audit and notify about changes to the Security Groups or the Security Groups configuration. It's vital that monitoring of Security Groups detects and reports any unauthorized changes in the security systems.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; To create an alerting policy, do the following:&lt;/p&gt; 
&lt;p&gt;1. In the Cloud Console, select Monitoring. &lt;br&gt; 2. Select Alerting.&lt;br&gt; 3. Click Create Policy to see the Create alerting policy page.&lt;br&gt; 4. Fill in the sections as follows:&lt;br&gt; - The Conditions section is already set up. Fill the condition correctly.&lt;br&gt; - In the Notifications section, click Add Notification and fill in your email address or another notification method.&lt;br&gt; - In the Name this policy section, you can accept the default.&lt;br&gt; 5. Click Save.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Google Cloud: monitoring alerts" url="https://cloud.google.com/monitoring/alerts/"/>
          </references>
          <standards>
            <standard ref="A09:2021-Security Logging and Monitoring Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2017-Insufficient Logging-Monitoring" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>	&lt;p&gt;1. In the Cloud console, select Monitoring.&lt;br /&gt;
2. In the navigation pane, select Alerting.&lt;br /&gt;
3. To see all policies and to enable filtering, click See all policies in the Policies pane.&lt;br /&gt;
4. Check there exists an Alerting Policy to notify when security groups and their configurations are changed or modified.&lt;br /&gt;
5. Check that this alert is configured correctly and its notifications are configured to be sent to the corresponding users.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:09.778">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-MON03" name="Create alerts for security policy changes" issueId="" issueLink="" platform="" cost="1" risk="61" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Create alerts for security policy changes&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Create alerts to monitor, audit and notify when the Security Policy changes. It's vital that monitoring of the Security Policy detects and reports any unauthorized changes in the security configurations. &lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; To create an alerting policy, do the following:&lt;/p&gt; 
&lt;p&gt;1. In the Cloud Console, select Monitoring. &lt;br&gt; 2. Select Alerting.&lt;br&gt; 3. Click Create Policy to see the Create alerting policy page.&lt;br&gt; 4. Fill in the sections as follows:&lt;br&gt; - The Conditions section shall be set up. In this case, you have to add the condition for the next methods: projects.getIamPolicy, projects.setIamPolicy, organizations.getIamPolicy and organizations.setIamPolicy&lt;br&gt; - In the Notifications section, click Add Notification and fill in your email address or another notification method.&lt;br&gt; - In the Name this policy section, you can accept the default.&lt;br&gt; 5. Click Save.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Google Cloud docs: Modify IAM policy" url="https://cloud.google.com/logging/docs/audit/configure-data-access?hl=es-419#getiampolicy-setiampolicy"/>
            <reference name="Google Cloud: monitoring alerts" url="https://cloud.google.com/monitoring/alerts/"/>
          </references>
          <standards>
            <standard ref="A09:2021-Security Logging and Monitoring Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2017-Insufficient Logging-Monitoring" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>	&lt;p&gt;1. In the Cloud console, select Monitoring.&lt;br /&gt;
2. In the navigation pane, select Alerting.&lt;br /&gt;
3. To see all policies and to enable filtering, click See all policies in the Policies pane.&lt;br /&gt;
4. Check there exists an Alerting Policy to notify for security policy changes.&lt;br /&gt;
5. Check this alert is configured correctly and notifications are configured to be sent to the corresponding users.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:09.777">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-MON13" name="Create alerts for the Logging of configuration changes" issueId="" issueLink="" platform="" cost="0" risk="61" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Create alerts for the Logging of configuration changes&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Create alerts for Logging changes to monitor, audit and notify about changes in this section by the corresponding personnel. It's vital that any unauthorized changes are detected and reported.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; To create an alerting policy, do the following:&lt;/p&gt; 
&lt;p&gt;1. In the Cloud Console, select Monitoring. &lt;br&gt; 2. Select Alerting.&lt;br&gt; 3. Click Create Policy to see the Create alerting policy page.&lt;br&gt; 4. Fill in the sections as follows:&lt;br&gt; - The Conditions section is already set up. You don't have to change it.&lt;br&gt; - In the Notifications section, click Add Notification and fill in your email address or another notification method.&lt;br&gt; - In the Name this policy section, you can accept the default.&lt;br&gt; 5. Click Save.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Google Cloud: monitoring alerts" url="https://cloud.google.com/monitoring/alerts/"/>
          </references>
          <standards>
            <standard ref="A09:2021-Security Logging and Monitoring Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2017-Insufficient Logging-Monitoring" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>	&lt;p&gt;1. In the Cloud console, select Monitoring.&lt;br /&gt;
2. In the navigation pane, select Alerting.&lt;br /&gt;
3. To see all policies and to enable filtering, click See all policies in the Policies pane.&lt;br /&gt;
4. Check there exists an Alerting Policy to notify when the Logging of configuration changes.&lt;br /&gt;
5. Check that this alert is configured correctly and its notifications are configured to be sent to the corresponding users&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:09.778">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-MON10" name="Create alerts for the VPC route table changes" issueId="" issueLink="" platform="" cost="0" risk="61" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Create alerts for the VPC route table changes&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Create alerts to monitor, audit and notify when the VPC Route Table changes. It's vital that monitoring of the VPC Route Table detects and reports any unauthorized access to the security network systems.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; To create an alerting policy, do the following:&lt;/p&gt; 
&lt;p&gt;1. In the Cloud Console, select Monitoring. &lt;br&gt; 2. Select Alerting.&lt;br&gt; 3. Click Create Policy to see the Create alerting policy page.&lt;br&gt; 4. Fill in the sections as follows:&lt;br&gt; - The Conditions section is already set up. Fill the condition correctly.&lt;br&gt; - In the Notifications section, click Add Notification and fill in your email address or another notification method.&lt;br&gt; - In the Name this policy section, you can accept the default.&lt;br&gt; 5. Click Save.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Google Cloud: monitoring alerts" url="https://cloud.google.com/monitoring/alerts/"/>
          </references>
          <standards>
            <standard ref="A09:2021-Security Logging and Monitoring Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2017-Insufficient Logging-Monitoring" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>	&lt;p&gt;1. In the Cloud console, select Monitoring.&lt;br /&gt;
2. In the navigation pane, select Alerting.&lt;br /&gt;
3. To see all policies and to enable filtering, click See all policies in the Policies pane.&lt;br /&gt;
4. Check there exists an Alerting Policy to notify when the VPC route table configuration changes.&lt;br /&gt;
5. Check that this alert is configured correctly and its notifications are configured to be sent to the corresponding users.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:09.778">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-MON11" name="Create alerts for VPC gateway changes" issueId="" issueLink="" platform="" cost="0" risk="61" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Create alerts for VPC gateway changes&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Create alerts to monitor, audit and notify when the VPC Gateway changes. It's vital that monitoring of the VPC Gateway detects and reports any unauthorized access to the security network systems.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; To create an alerting policy, do the following:&lt;br&gt; 1. In the Cloud Console, select Monitoring. &lt;br&gt; 2. Select Alerting.&lt;br&gt; 3. Click Create Policy to see the Create alerting policy page.&lt;br&gt; 4. Fill in the sections as follows:&lt;br&gt;- The Conditions section is already set up. Fill the condition correctly.&lt;br&gt;- In the Notifications section, click Add Notification and fill in your email address or another notification method.&lt;br&gt;- In the Name this policy section, you can accept the default.&lt;br&gt; 5. Click Save.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Google Cloud: monitoring alerts" url="https://cloud.google.com/monitoring/alerts/"/>
          </references>
          <standards>
            <standard ref="A09:2021-Security Logging and Monitoring Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2017-Insufficient Logging-Monitoring" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>	&lt;p&gt;1. In the Cloud console, select Monitoring.&lt;br /&gt;
2. In the navigation pane, select Alerting.&lt;br /&gt;
3. To see all policies and to enable filtering, click See all policies in the Policies pane.&lt;br /&gt;
4. Check there exists an Alerting Policy to notify when the VPC gateway configuration changes.&lt;br /&gt;
5. Check that this alert is configured correctly and its notifications are configured to be sent to the corresponding users.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:09.778">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-MON09" name="Create alerts for VPC NACL changes" issueId="" issueLink="" platform="" cost="0" risk="61" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Create alerts for VPC NACL changes&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Create alerts to monitor, audit and notify when the VPC NACL (Network Access Control List) changes. It's vital that monitoring of VPC NACL detects and reports any unauthorized access to the security network systems.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; To create an alerting policy, do the following:&lt;/p&gt; 
&lt;p&gt;1. In the Cloud Console, select Monitoring. &lt;br&gt; 2. Select Alerting.&lt;br&gt; 3. Click Create Policy to see the Create alerting policy page.&lt;br&gt; 4. Fill in the sections as follows:&lt;br&gt; - The Conditions section is already set up. Fill the condition correctly.&lt;br&gt; - In the Notifications section, click Add Notification and fill in your email address or another notification method.&lt;br&gt; - In the Name this policy section, you can accept the default.&lt;br&gt; 5. Click Save.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Google Cloud: monitoring alerts" url="https://cloud.google.com/monitoring/alerts/"/>
          </references>
          <standards>
            <standard ref="A09:2021-Security Logging and Monitoring Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2017-Insufficient Logging-Monitoring" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>	&lt;p&gt;1. In the Cloud console, select Monitoring.&lt;br /&gt;
2. In the navigation pane, select Alerting.&lt;br /&gt;
3. To see all policies and to enable filtering, click See all policies in the Policies pane.&lt;br /&gt;
4. Check there exists an Alerting Policy to notify when the VPC NACL configuration changes.&lt;br /&gt;
5. Check that this alert is configured correctly and its notifications are configured to be sent to the corresponding users&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:09.778">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-MON08" name="Create alerts to be notified about console login failure attempts" issueId="" issueLink="" platform="" cost="0" risk="61" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Create alerts to be notified about console login failure attempts&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Create alerts to monitor, audit and to be notified when there are several console login failure attempts. It's vital that monitoring of these connection attempts detects and reports any unauthorized access to the systems.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; To create an alerting policy, do the following:&lt;/p&gt; 
&lt;p&gt;1. In the Cloud Console, select Monitoring. &lt;br&gt; 2. Select Alerting.&lt;br&gt; 3. Click Create Policy to see the Create alerting policy page.&lt;br&gt; 4. Fill in the sections as follows:&lt;br&gt; - The Conditions section is already set up. Fill the condition correctly.&lt;br&gt; - In the Notifications section, click Add Notification and fill in your email address or another notification method.&lt;br&gt; - In the Name this policy section, you can accept the default.&lt;br&gt; 5. Click Save.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Google Cloud: monitoring alerts" url="https://cloud.google.com/monitoring/alerts/"/>
          </references>
          <standards>
            <standard ref="A09:2021-Security Logging and Monitoring Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2017-Insufficient Logging-Monitoring" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>	&lt;p&gt;1. In the Cloud console, select Monitoring.&lt;br /&gt;
2. In the navigation pane, select Alerting.&lt;br /&gt;
3. To see all policies and to enable filtering, click See all policies in the Policies pane.&lt;br /&gt;
4. Check there exists an Alerting Policy to notify when the console login failure attempts are greater than a fixed number.&lt;br /&gt;
5. Check that this alert is configured correctly and its notifications are configured to be sent to the corresponding users.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:09.778">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-MON05" name="Create alerts to be notified about console login without 2FA" issueId="" issueLink="" platform="" cost="0" risk="61" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Create alerts to be notified about console login without 2FA&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Create alerts to monitor, audit and notify when users log into the console without a Second Factor of Authentication. It's vital that monitoring of authentication to systems detects and reports any unauthorized access to them.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; To create an alerting policy, do the following:&lt;/p&gt; 
&lt;p&gt;1. In the Cloud Console, select Monitoring. &lt;br&gt; 2. Select Alerting.&lt;br&gt; 3. Click Create Policy to see the Create alerting policy page.&lt;br&gt; 4. Fill in the sections as follows:&lt;br&gt; - The Conditions section is already set up. Fill the condition correctly.&lt;br&gt; - In the Notifications section, click Add Notification and fill in your email address or another notification method.&lt;br&gt; - In the Name this policy section, you can accept the default.&lt;br&gt; 5. Click Save.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Google Cloud: monitoring alerts" url="https://cloud.google.com/monitoring/alerts/"/>
          </references>
          <standards>
            <standard ref="A09:2021-Security Logging and Monitoring Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2017-Insufficient Logging-Monitoring" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>	&lt;p&gt;1. In the Cloud console, select Monitoring.&lt;br /&gt;
2. In the navigation pane, select Alerting.&lt;br /&gt;
3. To see all policies and to enable filtering, click See all policies in the Policies pane.&lt;br /&gt;
4. Check there exists an Alerting Policy to notify when users are logged into the console without using 2 Factor authentication&lt;br /&gt;
5. Check that this alert is configured correctly and its notifications are configured to be sent to the corresponding users.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:09.777">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-MON04" name="Create alerts to detect the changes of activity alerts" issueId="" issueLink="" platform="" cost="0" risk="61" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Create alerts to detect the changes of activity alerts&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Create alerts to monitor, audit and notify about the changes of Monitoring alerts. It's vital that the monitoring of alerts detects and reports any unauthorized changes in the Monitoring systems.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; To create an alerting policy, do the following:&lt;/p&gt; 
&lt;p&gt;1. In the Cloud Console, select Monitoring. &lt;br&gt; 2. Select Alerting.&lt;br&gt; 3. Click Create Policy to see the Create alerting policy page.&lt;br&gt; 4. Fill in the sections as follows:&lt;br&gt; - The Conditions section is already set up. You don't have to change it.&lt;br&gt; - In the Notifications section, click Add Notification and fill in your email address or another notification method.&lt;br&gt; - In the Name this policy section, you can accept the default.&lt;br&gt; 5. Click Save.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Google Cloud: monitoring alerts" url="https://cloud.google.com/monitoring/alerts/"/>
          </references>
          <standards>
            <standard ref="A09:2021-Security Logging and Monitoring Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2017-Insufficient Logging-Monitoring" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>	&lt;p&gt;1. In the Cloud console, select Monitoring.&lt;br /&gt;
2. In the navigation pane, select Alerting.&lt;br /&gt;
3. To see all policies and to enable filtering, click See all policies in the Policies pane.&lt;br /&gt;
4. Check there exists an Alerting Policy to notify about the changes of activity alerts.&lt;br /&gt;
5. Check this alert is configured correctly and notifications are configured to be sent to the corresponding users.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:09.777">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-MON02A" name="Create alerts to notify about improper usage of the root account" issueId="" issueLink="" platform="" cost="0" risk="61" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Create alerts to notify about improper usage of the root account&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Create alerts to monitor, audit and notify about usage of the root account when this account is used frequently. It's vital that monitoring of root account usage detects and reports unauthorized or improper usage.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; To create an alerting policy, do the following:&lt;/p&gt; 
&lt;p&gt;1. In the Cloud Console, select Monitoring. &lt;br&gt; 2. Select Alerting.&lt;br&gt; 3. Click Create Policy to see the Create alerting policy page.&lt;br&gt; 4. Fill in the sections as follows:&lt;br&gt; - The Conditions section is already set up. Fill the condition correctly.&lt;br&gt; - In the Notifications section, click Add Notification and fill in your email address or another notification method.&lt;br&gt; - In the Name this policy section, you can accept the default.&lt;br&gt; 5. Click Save.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Google Cloud: monitoring alerts" url="https://cloud.google.com/monitoring/alerts/"/>
            <reference name="Managing metric-based alerting policies" url="https://cloud.google.com/monitoring/alerts/using-alerting-ui"/>
          </references>
          <standards>
            <standard ref="A09:2021-Security Logging and Monitoring Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2017-Insufficient Logging-Monitoring" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>	&lt;p&gt;1. In the Cloud console, select Monitoring.&lt;br /&gt;
2. In the navigation pane, select Alerting.&lt;br /&gt;
3. To see all policies and to enable filtering, click See all policies in the Policies pane.&lt;br /&gt;
4. Check there exists an Alerting Policy to notify about improper usage of administrator accounts.&lt;br /&gt;
5. Check this alert is configured correctly and notifications are configured to be sent to the corresponding users.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:09.777">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-MON07" name="Create alerts when the data encryption changes" issueId="" issueLink="" platform="" cost="0" risk="61" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Create alerts when the data encryption changes&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Create alerts to monitor, audit and notify when the data encryption changes. It's vital that monitoring of data encryption detects and reports any unauthorized changes in the system configurations.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; To create an alerting policy, do the following:&lt;/p&gt; 
&lt;p&gt;1. In the Cloud Console, select Monitoring. &lt;br&gt; 2. Select Alerting.&lt;br&gt; 3. Click Create Policy to see the Create alerting policy page.&lt;br&gt; 4. Fill in the sections as follows:&lt;br&gt; - The Conditions section is already set up. Fill the condition correctly.&lt;br&gt; - In the Notifications section, click Add Notification and fill in your email address or another notification method.&lt;br&gt; - In the Name this policy section, you can accept the default.&lt;br&gt; 5. Click Save.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Google Cloud: monitoring alerts" url="https://cloud.google.com/monitoring/alerts/"/>
          </references>
          <standards>
            <standard ref="A09:2021-Security Logging and Monitoring Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2017-Insufficient Logging-Monitoring" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>	&lt;p&gt;1. In the Cloud console, select Monitoring.&lt;br /&gt;
2. In the navigation pane, select Alerting.&lt;br /&gt;
3. To see all policies and to enable filtering, click See all policies in the Policies pane.&lt;br /&gt;
4. Check there exists an Alerting Policy to notify when the data encryption configuration changes.&lt;br /&gt;
5. Check that this alert is configured correctly and its notifications are configured to be sent to the corresponding users&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:09.778">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-MON01" name="Create an uptime check to alert when the server is down" issueId="" issueLink="" platform="" cost="0" risk="61" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Create an uptime check to alert when the server is down&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Create an uptime check to verify your web server is always accessible. The alerting policy controls who is notified when the uptime check fails.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Create an uptime check and an alerting policy&lt;/p&gt; 
&lt;p&gt;To create an uptime check, do the following:&lt;/p&gt; 
&lt;p&gt;1. In the Cloud console, select Monitoring.&lt;br&gt; 2. In the navigation pane, click Uptime checks.&lt;br&gt; 3. Click Create Uptime check.&lt;br&gt; 4. For the title, enter My Uptime Check and then click Next.&lt;br&gt; 5. Target:&lt;br&gt; a. Select HTTP as the protocol.&lt;br&gt; b. Select Instance as the Resource Type.&lt;br&gt; c. In the Applies To field, select Single and for the instance name select lamp-1-vm.&lt;br&gt; d. Leave all other fields at their default values and click Next.&lt;br&gt; 6. Response Validation: Leave these fields at their default values and click Next&lt;br&gt; 7. Alert &amp;amp; Notification:&lt;br&gt; a. Ensure that the toggle's label is Alerting is enabled.&lt;br&gt; b. Leave the name and duration fields at their default values.&lt;br&gt; c. To add a notification channel to the alerting policy, in the text box labeled Notification channels, click Menu. Select the channels to add and click OK. The notifications are grouped alphabetically for each channel type.&lt;br&gt; To add an entry to the checkbox list, click Manage notification channels and follow the instructions. When you return to this dialog, click Refresh.&lt;br&gt; 8. To verify your uptime check configuration, click Test. If you see a "Connection error - refused" message, you might have not installed the Apache HTTP Server or you might have specified the HTTPS check type rather than HTTP.&lt;br&gt; 9. Click Create. When the create action is successful, the message Check and alert created is displayed and then the Uptime checks dashboard page is displayed.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Google Cloud: monitoring gs checks" url="https://cloud.google.com/monitoring/quickstart-lamp#gs-checks"/>
            <reference name="Monitor a Compute Engine virtual machine" url="https://cloud.google.com/monitoring/monitor-compute-engine-virtual-machine"/>
          </references>
          <standards>
            <standard ref="A09:2021-Security Logging and Monitoring Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2017-Insufficient Logging-Monitoring" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>	&lt;p&gt;1. Check there exists an uptime Check alert to notify when the server is down.&lt;br /&gt;
2. Check that this uptime Check alert is configured correctly.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:09.776">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-IAM07" name="Create a process to create and manage the Google Service Keys" issueId="" issueLink="" platform="" cost="1" risk="64" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Create a process or mechanism to create, manage, or revoke the assignment of keys to users and
                        give them the least necessary access to resources. There are two types of service account keys:&amp;nbsp;
                        &lt;div&gt;
                        &lt;ul&gt;
                        &lt;li&gt;&lt;b&gt;GCP-managed keys:&lt;/b&gt;&amp;nbsp;These keys are used by Cloud Platform
                        services such as the App Engine and Compute Engine. These keys cannot be downloaded. Google will
                        keep the keys and automatically rotate them daily.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;&lt;b&gt;User-managed keys:&amp;nbsp;&lt;/b&gt;These keys are created, downloadable,
                        and managed by users. For user-managed keys, you need to ensure you have processes in place to
                        address key management requirements such as:&amp;nbsp;&lt;/li&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Key storage&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Key distribution&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Key revocation&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Key rotation&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Protecting the keys from unauthorized users.&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/ul&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Google Cloud docs: IAM manage account keys" url="https://cloud.google.com/iam/docs/understanding-service-accounts#managing_service_account_keys"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check there exists a mechanism or process to create, manage or revoke the assignment of
                            keys to users.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:09.394">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-IAM05" name="Create Individual Accounts for the administrator users" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Create individual accounts for administrator users and with these new accounts perform the necessary administrative actions. By creating service accounts for people accessing your account, you can give each Google user a unique set of security credentials and roles.&amp;nbsp; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The administrator accounts shall be used for administrative actions and for giving or revoking credentials to users' accounts. The administrator account shall be not used as a normal user account. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Open the Service Accounts page in the Cloud Platform Console and open the IAM page.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Click Select a project.&lt;/li&gt; 
  &lt;li&gt;Select your project and click Open.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Click Create Service Account.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Enter a service account name, select a role you wish to grant to the service account and click Create.&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Google Cloud docs: manage service accounts" url="https://cloud.google.com/iam/docs/creating-managing-service-accounts"/>
          </references>
          <standards>
            <standard ref="A07:2021-Identification and Authentication Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A2:2017-Broken Authentication" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Open the Service Accounts page in the Cloud Platform Console and open the IAM
                            page.&lt;/li&gt;
                            &lt;li&gt;Click Select a project.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Select your project and click Open.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Review that each administrator user has an individual Google Service Account.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:09.394">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-LOG04" name="Create log metric filters and alerts" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Create log metric filters and alerts&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; You can use log-based alerts to notify you whenever a specific message appears in your included logs. For example, if you want to know when an audit log records a particular data-access message, you can create a log-based alert that matches the message and notifies you when it appears.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Create a log-based alert (Logs Explorer)&lt;/p&gt; 
&lt;p&gt;You can create log-based alerts from the Logs Explorer page in the Google Cloud console or by using the Monitoring API.&lt;/p&gt; 
&lt;p&gt;The Logs Explorer interface for creating and editing log-based alerts guides you through the following steps:&lt;/p&gt; 
&lt;p&gt;- Provide a name and description for the alert.&lt;br&gt; - Choose the logs for which you want to receive a notification.&lt;br&gt; - Set the time between notifications.&lt;br&gt; - Set the time for automatic closure of incidents.&lt;br&gt; - Specify whom to notify.&lt;/p&gt; 
&lt;p&gt;For example, assume that you have an application that writes a syslog log entry with NOTICE severity when the application changes a network address. The log entries for network-address changes include a JSON payload that looks like the following:&lt;/p&gt; 
&lt;p&gt;"jsonPayload": { "type": "Configuration change", "action": "Set network address", "result": "IP_ADDRESS",&lt;br&gt; }&lt;/p&gt; 
&lt;p&gt;You want to create a log-based alert that notifies you when an invalid IPv4 address appears in the jsonPayload.result field of log entries in syslog with NOTICE severity.&lt;/p&gt; 
&lt;p&gt;To create the log-based alert, do the following:&lt;/p&gt; 
&lt;p&gt;1. In the Cloud console, select Logging, and then select Logs Explorer:&lt;/p&gt; 
&lt;p&gt;2. Use the Query pane to build a query that matches the message you want to use in your log-based alert.&lt;/p&gt; 
&lt;p&gt;For example, to find log entries with a severity level of NOTICE in the syslog log that have invalid IP addresses in the JSON payload, you can use the following query:&lt;/p&gt; 
&lt;p&gt;log_id("syslog")&lt;br&gt; severity = "NOTICE"&lt;br&gt; jsonPayload.result !~ "^((25[0-5]|2[0-4][0-9]|&lt;sup&gt;&lt;a&gt;01&lt;/a&gt;&lt;/sup&gt;?[0-9][0-9]?)(\.|$)){4}$"&lt;/p&gt; 
&lt;p&gt;Use Run query in the Query results pane to validate the query.&lt;/p&gt; 
&lt;p&gt;3. In the header of the Query results pane, click Create alert. When your window is narrow, the Create alert option might appear on the Actions menu instead.&lt;/p&gt; 
&lt;p&gt;4. In the Alert details pane, give the alert a name and description:&lt;/p&gt; 
&lt;p&gt;a. Enter a name for your alert in the Alert Name field. For example: "Network address: invalid IPv4 value".&lt;/p&gt; 
&lt;p&gt;b. Enter a description of this alert. You can also include information that might help the recipient of a notification diagnose the problem. The following string summarizes the reason for the alert:&lt;/p&gt; 
&lt;p&gt;Log-based alert in project ${project} detected an invalid IPv4 value..&lt;/p&gt; 
&lt;p&gt;5. To advance to the next step, click Next.&lt;/p&gt; 
&lt;p&gt;6. In the Choose logs to include in the alert pane, check the query and results by clicking Preview logs.&lt;/p&gt; 
&lt;p&gt;Google Cloud recommends building the query in the Logs Explorer Query pane. The query you built in the Query pane is also displayed on this pane, for example:&lt;/p&gt; 
&lt;p&gt;log_id("syslog")&lt;br&gt; severity = "NOTICE"&lt;br&gt; jsonPayload.result !~ "^((25[0-5]|2[0-4][0-9]|&lt;sup&gt;&lt;a&gt;01&lt;/a&gt;&lt;/sup&gt;?[0-9][0-9]?)(\.|$)){4}$"&lt;/p&gt; 
&lt;p&gt;You can edit the query in this pane, if necessary. If you edit the query, then check the results by clicking Preview logs.&lt;/p&gt; 
&lt;p&gt;7. Click Next.&lt;/p&gt; 
&lt;p&gt;8. Select the minimum time between notifications. This value lets you control the number of notifications you get from this alert if it is triggered multiple times. For this example, select 5 min from the options.&lt;/p&gt; 
&lt;p&gt;You can leave the incident auto-close duration at the default value, or you can set it to a different value by selecting a different option on the menu.&lt;/p&gt; 
&lt;p&gt;9. Click Next.&lt;/p&gt; 
&lt;p&gt;10. Select one or more notification channels for your alert. For this example, select an email notification channel.&lt;/p&gt; 
&lt;p&gt;If you already have an email notification channel configured, then you can select it from the list. If not, click Manage notification channels and add an email channel. For information about creating notification channels, see Managing notification channels.&lt;/p&gt; 
&lt;p&gt;11. Click Save.&lt;/p&gt; 
&lt;p&gt;Your log-based alert is now ready to test.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="CIS Google Cloud Platform Benchmark" url="https://www.cisecurity.org/benchmark/google_cloud_computing_platform/"/>
            <reference name="Managing log-based alerts" url="https://cloud.google.com/logging/docs/alerting/log-based-alerts"/>
          </references>
          <standards>
            <standard ref="2.10" supportedStandardRef="cis-gcp-standard"/>
            <standard ref="2.10" supportedStandardRef="cis-gcp-standard-level-2"/>
            <standard ref="2.11" supportedStandardRef="cis-gcp-standard"/>
            <standard ref="2.11" supportedStandardRef="cis-gcp-standard-level-2"/>
            <standard ref="2.4" supportedStandardRef="cis-gcp-standard"/>
            <standard ref="2.4" supportedStandardRef="cis-gcp-standard-level-2"/>
            <standard ref="2.5" supportedStandardRef="cis-gcp-standard"/>
            <standard ref="2.5" supportedStandardRef="cis-gcp-standard-level-2"/>
            <standard ref="2.6" supportedStandardRef="cis-gcp-standard"/>
            <standard ref="2.6" supportedStandardRef="cis-gcp-standard-level-2"/>
            <standard ref="2.7" supportedStandardRef="cis-gcp-standard"/>
            <standard ref="2.7" supportedStandardRef="cis-gcp-standard-level-2"/>
            <standard ref="2.8" supportedStandardRef="cis-gcp-standard"/>
            <standard ref="2.8" supportedStandardRef="cis-gcp-standard-level-2"/>
            <standard ref="2.9" supportedStandardRef="cis-gcp-standard"/>
            <standard ref="2.9" supportedStandardRef="cis-gcp-standard-level-2"/>
            <standard ref="A09:2021-Security Logging and Monitoring Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2017-Insufficient Logging-Monitoring" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>	&lt;p&gt;Test the example log-based alert&lt;/p&gt;

	&lt;p&gt;To test the alert you created in the Description section, you can manually write a log entry that matches the query. To write the log entry, do the following:&lt;/p&gt;

	&lt;p&gt;1. Configure the following log entry by changing the PROJECT_ID variable to your project ID:&lt;/p&gt;

	&lt;p&gt;{
  "entries": [
  {
    "logName": "projects/PROJECT_ID/logs/syslog",
    "jsonPayload": {
      "type": "Configuration change",
      "action": "Set network address",
      "result": "999.027.405.1",
    },
    "severity": "NOTICE",
    "resource": {
      "type": "generic_task",
      "labels" : {
        "project_id": "PROJECT_ID",
        "location": "us-east1",
        "namespace": "fake-task-2",
        "job": "write-log-entry",
        "task_id": "11",
      },
    },
  ],&lt;br /&gt;
}&lt;/p&gt;

	&lt;p&gt;2. Go to the logEntries.write reference page, or click the following button:&lt;/p&gt;

	&lt;p&gt;3. Copy the log entry you configured previously.&lt;/p&gt;

	&lt;p&gt;4. In the Try this API pane, do the following:&lt;/p&gt;

	&lt;p&gt;a. Replace the content of the Request body field in APIs Explorer with the log entry you copied in the previous step.&lt;/p&gt;

	&lt;p&gt;b. Click Execute. If prompted, follow the authentication flow.&lt;/p&gt;

	&lt;p&gt;If the logEntries.write call is successful, then you get an HTTP 200 response code and an empty response body, {}.&lt;/p&gt;

	&lt;p&gt;The log entry matches the filter specified for the alert in the following ways:&lt;/p&gt;

	&lt;p&gt;- The logName value specifies the syslog log in your Cloud project.&lt;br /&gt;
- The severity value for this log entry is NOTICE.&lt;br /&gt;
- The jsonPayload.result value is not a valid IPv4 address.&lt;/p&gt;

	&lt;p&gt;After you write the log entry, the following sequence occurs:&lt;/p&gt;

	&lt;p&gt;- The new log entry appears in the Logs Explorer and triggers the alert.&lt;br /&gt;
- An incident is opened in Cloud Monitoring.&lt;br /&gt;
- You receive a notification for the incident. If you configured an email notification channel, then the notification looks like the following screenshot:&lt;/p&gt;

	&lt;p&gt;You can click View incident in the email to see the incident in Cloud Monitoring.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:09.183">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-IAM04" name="Create mechanisms to ensure Least Privilege is applied" issueId="" issueLink="" platform="" cost="0" risk="64" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Create mechanisms to periodically review the group and user permissions to ensure the least
                        privilege for the user accounts. Granting least privilege ensures that users only have the
                        permissions required to complete their tasks rather than additional privileges that are not
                        required. Following this model ensures that, should an account be compromised, the blast radius
                        of damage is limited.&amp;nbsp;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        Allocate privileges via groups or roles via the recommendation in &amp;quot;Use RBAC with
                        pre-defined policies added into groups or roles&amp;quot;.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Open the IAM page in the Google Cloud Platform Console and open the IAM page.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Click Select a project.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Select a project and click Open.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Review the groups and users with access to the project and their permissions.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;If there is a user with more privileges, revoke the access as following:&lt;/li&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Select the user to revoke privileges.&lt;/li&gt;
                        &lt;li&gt;In the Roles(s) drop-down menu in the member's row, uncheck the roles you want to
                        revoke and click Save.&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Granting, changing, and revoking access to resources" url="https://cloud.google.com/iam/docs/granting-changing-revoking-access"/>
          </references>
          <standards>
            <standard ref="A01:2021-Broken Access Control" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A5:2017-Broken Access Control" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check there is a mechanism in place to ensure the enforcement of the Least Privilege
                            principle.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:09.394">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-IAM02" name="Define roles for the Google Service Accounts" issueId="" issueLink="" platform="" cost="0" risk="64" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Define and create the roles for the Google Cloud. For each role, you can use one of the
                        predefined roles or create a new custom role to ensure that each role has got the least minimum
                        permissions.&amp;nbsp;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;List all predefined roles and review them.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;If it's necessary, create new custom roles to ensure users have the least privileges.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="A01:2021-Broken Access Control" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A5:2017-Broken Access Control" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;List all roles.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Check that all fulfill the least privilege principle.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Check that all roles are defined correctly.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:09.394">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="C-GCP-LOG-03" name="Enable Access Approval" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;GCP Access Approval enables you to require your organizations' explicit approval whenever Google support try to access your projects. You can then select users within your organization who can approve these requests through giving them a security role in IAM. All access requests display which Google Employee requested them in an email or Pub/Sub message that you can choose to Approve. This adds an additional control and logging of who in your organization approved/denied these requests.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Rationale&lt;/strong&gt;:&lt;/p&gt;&lt;p&gt;Controlling access to your information is one of the foundations of information security. Google Employees do have access to your organizations' projects for support reasons. With Access Approval, organizations can then be certain that their information is accessed by only approved Google Personnel.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Impact:&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;To use Access Approval your organization will need have enabled Access Transparency and have at one of the following support level: Enhanced or Premium. There will be subscription costs associated with these support levels, as well as increased storage costs for storing the logs. You will also not be able to turn the Access Transparency which Access Approval depends on, off yourself. To do so you will need to submit a service request to Google Cloud Support. There will also be additional overhead in managing user permissions. There may also be a potential delay in support times as Google Personnel will have to wait for their access to be approved.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation&lt;/strong&gt;:&lt;/p&gt;&lt;p&gt;From Console:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;From the Google Cloud Home, within the project you wish to enable, click on the Navigation hamburger menu in the top left. Hover over the Security Menu. Select Access Approval in the middle of the column that opens.&lt;/li&gt;&lt;li&gt;The status will be displayed here. On this screen, there is an option to click Enroll. If it is greyed out and you see an error bar at the top of the screen that says Access Transparency is not enabled please view the corresponding reference within this section to enable it.&lt;/li&gt;&lt;li&gt;In the second screen click Enroll.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;Grant an IAM Group or User the role with permissions to Add Users to be Access Approval message Recipients&lt;/p&gt;&lt;ol&gt;&lt;li&gt;From the Google Cloud Home, within the project you wish to enable, click on the Navigation hamburger menu in the top left. Hover over the IAM and Admin. Select IAM in the middle of the column that opens.&lt;/li&gt;&lt;li&gt;Click the blue button the says +add at the top of the screen.&lt;/li&gt;&lt;li&gt;In the principals field, select a user or group by typing in their associated email address.&lt;/li&gt;&lt;li&gt;Click on the role field to expand it. In the filter field enter Access Approval Approver and select it.&lt;/li&gt;&lt;li&gt;Click save.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;Add a Group or User as an Approver for Access Approval Requests&lt;/p&gt;&lt;ol&gt;&lt;li&gt;As a user with the Access Approval Approver permission, within the project where you wish to add an email address to which request will be sent, click on the Navigation hamburger menu in the top left. Hover over the Security Menu. Select Access Approval in the middle of the column that opens.&lt;/li&gt;&lt;li&gt;Click Manage Settings&lt;/li&gt;&lt;li&gt;Under Set up approval notifications, enter the email address associated with a Google Cloud User or Group you wish to send Access Approval requests to. All future access approvals will be sent as emails to this address.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;From CLI:&lt;/p&gt;&lt;p&gt;To update all services in an entire project, run the following command from an account that has permissions as an 'Approver for Access Approval Requests'&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;gcloud access-approval settings update --project=&amp;lt;project name&amp;gt; --enrolled_services=all --notification_emails='&amp;lt;email recipient for access approval requests&amp;gt;@&amp;lt;domain name&amp;gt;'&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;strong&gt;Default Value:&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;By default Access Approval and its dependency of Access Transparency are not enabled.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Google Cloud docs: Access Approval" url="https://cloud.google.com/cloud-provider-access-management/access-approval/docs/overview"/>
          </references>
          <standards>
            <standard ref="2.15" supportedStandardRef="cis-gcp-standard-level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;&lt;strong&gt;Determine if Access Transparency is Enabled as it is a Dependency&lt;/strong&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;From the Google Cloud Home inside the project you wish to audit, click on the Navigation hamburger menu in the top left. Hover over the IAM &amp;amp; Admin Menu. Select settings in the middle of the column that opens.&lt;/li&gt;&lt;li&gt;The status should be "Enabled' under the heading Access Transparency&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;strong&gt;Determine if Access Approval is Enabled&lt;/strong&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;From the Google Cloud Home, within the project you wish to check, click on the Navigation hamburger menu in the top left. Hover over the Security Menu. Select Access Approval in the middle of the column that opens.&lt;/li&gt;&lt;li&gt;The status will be displayed here. If you see a screen saying you need to enroll in Access Approval, it is not enabled.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;From CLI:&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Determine if Access Approval is Enabled&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;From within the project you wish to audit, run the following command.&amp;nbsp;&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;gcloud access-approval settings get&lt;/p&gt;&lt;/blockquote&gt;&lt;ul&gt;&lt;li&gt;The status will be displayed in the output.&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:09.183">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="C-GCP-LOG-02" name="Enable Access Transparency" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;GCP Access Transparency provides audit logs for all actions that Google personnel take in your Google Cloud resources.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Rationale&lt;/strong&gt;:&lt;/p&gt;&lt;p&gt;Controlling access to your information is one of the foundations of information security. Given that Google Employees do have access to your organizations' projects for support reasons, you should have logging in place to view who, when, and why your information is being accessed.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Impact&lt;/strong&gt;:&lt;/p&gt;&lt;p&gt;To use Access Transparency your organization will need to have at one of the following support level: Premium, Enterprise, Platinum, or Gold. There will be subscription costs associated with support, as well as increased storage costs for storing the logs. You will also not be able to turn Access Transparency off yourself, and you will need to submit a service request to Google Cloud Support.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation:&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Add privileges to enable Access Transparency&lt;/strong&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;From the Google Cloud Home, within the project you wish to check, click on the Navigation hamburger menu in the top left. Hover over the 'IAM and Admin'. Select IAM in the top of the column that opens.&lt;/li&gt;&lt;li&gt;Click the blue button the says +add at the top of the screen.&lt;/li&gt;&lt;li&gt;In the principals field, select a user or group by typing in their associated email address.&lt;/li&gt;&lt;li&gt;Click on the role field to expand it. In the filter field enter Access Transparency Admin and select it.&lt;/li&gt;&lt;li&gt;Click save.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;strong&gt;Verify that the Google Cloud project is associated with a billing account&lt;/strong&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;From the Google Cloud Home, click on the Navigation hamburger menu in the top left. Select Billing.&lt;/li&gt;&lt;li&gt;If you see This project is not associated with a billing account you will need to enter billing information or switch to a project with a billing account.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;strong&gt;Enable Access Transparency&lt;/strong&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;From the Google Cloud Home, click on the Navigation hamburger menu in the top left. Hover over the IAM &amp;amp; Admin Menu. Select settings in the middle of the column that opens.&lt;/li&gt;&lt;li&gt;Click the blue button labeled Enable Access Transparency for Organization&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;strong&gt;Default Value:&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;By default Access Transparency is not enabled.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Google Cloud docs: Access Transparency" url="https://cloud.google.com/cloud-provider-access-management/access-transparency/docs/overview"/>
          </references>
          <standards>
            <standard ref="2.14" supportedStandardRef="cis-gcp-standard"/>
            <standard ref="2.14" supportedStandardRef="cis-gcp-standard-level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;&lt;strong&gt;Determine if Access Transparency is Enabled&lt;/strong&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;From the Google Cloud Home, click on the Navigation hamburger menu in the top left. Hover over the IAM &amp;amp; Admin Menu. Select settings in the middle of the column that opens.&lt;/li&gt;&lt;li&gt;The status will be under the heading Access Transparency. Status should be Enabled&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:09.183">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-LOG01" name="Enable all access logs" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Enable all access logs&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Enable all audit logs in the Google Cloud Platform to control and monitor the access of users and the configuration changes in the systems. &lt;br&gt; First, you have to know there are two types of audit logs in the Google Cloud Platform: &lt;br&gt; - Admin Activity audit logs that are enabled for all services and cannot be configured.&lt;br&gt; - Data Access audit logs that are not enabled by default and they shall be configured.&lt;/p&gt; 
&lt;p&gt;Remediation: &lt;br&gt; Configure Data Access audit logs with the Cloud console&lt;/p&gt; 
&lt;p&gt;You can also use the API or the Google Cloud CLI to perform these tasks programmatically.&lt;/p&gt; 
&lt;p&gt;To access audit log configuration options in the Cloud console, follow these steps:&lt;/p&gt; 
&lt;p&gt;1. From the Cloud console, select IAM &amp;amp; Admin &amp;gt; Audit Logs:&lt;/p&gt; 
&lt;p&gt;2. Select an existing Cloud project, folder, or organization at the top of the page.&lt;/p&gt; 
&lt;p&gt;Enable audit logs&lt;/p&gt; 
&lt;p&gt;To enable Data Access audit logs, do the following:&lt;/p&gt; 
&lt;p&gt;1. In the main table on the Audit Logs page, select one or more Google Cloud services from the Title column.&lt;/p&gt; 
&lt;p&gt;2. In the Log Type tab, select the Data Access audit log types that you want to enable and then click Save.&lt;/p&gt; 
&lt;p&gt;3. Where you have successfully enabled audit logs, the table includes a checkmark. In the following example, you see that, for the Cloud Composer API service, Admin Read and Data Read audit logs are enabled:&lt;/p&gt; 
&lt;p&gt;You can also enable audit logs for all Google Cloud services that produce Data Access audit logs. In the main table on the Audit Logs page, select all Google Cloud services.&lt;/p&gt; 
&lt;p&gt;Note that this bulk configuration method applies only to the Google Cloud services that are currently available. If a new Google Cloud service is added, it inherits your default audit configuration.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Configure Data Access audit logs" url="https://cloud.google.com/logging/docs/audit/configure-data-access#config-console"/>
            <reference name="Google Cloud docs: data access" url="https://cloud.google.com/logging/docs/audit/configure-data-access#project-and-organization"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="A09:2021-Security Logging and Monitoring Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2017-Insufficient Logging-Monitoring" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>	&lt;p&gt;Check that all audit logs in the Google Cloud Platform are enabled and configured.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:09.183">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="C-GCP-LOG-01" name="Enable Cloud Asset Inventory" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;GCP Cloud Asset Inventory is services that provides a historical view of GCP resources and IAM policies through a time-series database. The information recorded includes metadata on Google Cloud resources, metadata on policies set on Google Cloud projects or resources, and runtime information gathered within a Google Cloud resource.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Rationale:&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;The GCP resources and IAM policies captured by GCP Cloud Asset Inventory enables security analysis, resource change tracking, and compliance auditing.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Impact&lt;/strong&gt;:&lt;/p&gt;&lt;p&gt;It is recommended GCP Cloud Asset Inventory be enabled for all GCP projects.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation&lt;/strong&gt;:&lt;/p&gt;&lt;p&gt;From Console:&amp;nbsp;&lt;/p&gt;&lt;p&gt;Enable the Cloud Asset API:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;1Go to API &amp;amp; Services/Library by visiting https://console.cloud.google.com/apis/library&lt;/li&gt;&lt;li&gt;Search for Cloud Asset API and select the result for Cloud Asset API&lt;/li&gt;&lt;li&gt;Click the ENABLE button.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;From Command Line:&amp;nbsp;&lt;/p&gt;&lt;p&gt;Enable the Cloud Asset API:&lt;/p&gt;&lt;p&gt;Enable the Cloud Asset API through the services interface:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;gcloud services enable cloudasset.googleapis.com&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;strong&gt;Default Value:&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;The Cloud Asset Inventory API is disabled by default in each project.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Google Cloud docs: Asset Inventory" url="https://cloud.google.com/asset-inventory/docs"/>
          </references>
          <standards>
            <standard ref="2.13" supportedStandardRef="cis-gcp-standard"/>
            <standard ref="2.13" supportedStandardRef="cis-gcp-standard-level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;From Console:&amp;nbsp;&lt;/p&gt;&lt;p&gt;Ensure that the Cloud Asset API is enabled:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Go to API &amp;amp; Services/Library by visiting https://console.cloud.google.com/apis/library&lt;/li&gt;&lt;li&gt;Search for Cloud Asset API and select the result for Cloud Asset API&lt;/li&gt;&lt;li&gt;Ensure that API Enabled is displayed.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;From Command Line:&amp;nbsp;&lt;/p&gt;&lt;p&gt;Ensure that the Cloud Asset API is enabled:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Query enabled services:&amp;nbsp;&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;gcloud services list --enabled --filter=name:cloudasset.googleapis.com&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;If the API is listed, then it is enabled. If the response is Listed 0 items the API is not enabled.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:09.182">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-IAM15" name="Enable MFA for all non-service accounts" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Secure Sockets Layer (SSL) policies determine what port Transport Layer Security (TLS) features clients are permitted to use when connecting to load balancers. To prevent usage of insecure features, SSL policies should use (a) at least TLS 1.2 with the MODERN profile; or (b) the RESTRICTED profile, because it effectively requires clients to use TLS 1.2 regardless of the chosen minimum TLS version; or (3) a CUSTOM profile that does not support any of the following features:&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;TLS_RSA_WITH_AES_128_GCM_SHA256&amp;nbsp;&lt;/li&gt;&lt;li&gt;TLS_RSA_WITH_AES_256_GCM_SHA384&amp;nbsp;&lt;/li&gt;&lt;li&gt;TLS_RSA_WITH_AES_128_CBC_SHA&amp;nbsp;&lt;/li&gt;&lt;li&gt;TLS_RSA_WITH_AES_256_CBC_SHA&amp;nbsp;&lt;/li&gt;&lt;li&gt;TLS_RSA_WITH_3DES_EDE_CBC_SHA&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Rationale:&lt;/p&gt;&lt;p&gt;Load balancers are used to efficiently distribute traffic across multiple servers. Both SSL proxy and HTTPS load balancers are external load balancers, meaning they distribute traffic from the Internet to a GCP network. GCP customers can configure load balancer SSL policies with a minimum TLS version (1.0, 1.1, or 1.2) that clients can use to establish a connection, along with a profile (Compatible, Modern, Restricted, or Custom) that specifies permissible cipher suites. To comply with users using outdated protocols, GCP load balancers can be configured to permit insecure cipher suites. In fact, the GCP default SSL policy uses a minimum TLS version of 1.0 and a Compatible profile, which allows the widest range of insecure cipher suites. As a result, it is easy for customers to configure a load balancer without even knowing that they are permitting outdated cipher suites.&lt;/p&gt;&lt;p&gt;Impact:&lt;/p&gt;&lt;p&gt;Creating more secure SSL policies can prevent clients using older TLS versions from establishing a connection.&lt;/p&gt;&lt;p&gt;Remediation:&lt;/p&gt;&lt;p&gt;From Console: If the TargetSSLProxy or TargetHttpsProxy does not have an SSL policy configured, create a new SSL policy. Otherwise, modify the existing insecure policy.&lt;/p&gt;&lt;p&gt;1. Navigate to the SSL Policies page by visiting: https://console.cloud.google.com/net-security/sslpolicies&lt;/p&gt;&lt;p&gt;2. Click on the name of the insecure policy to go to its SSL policy details page.&lt;/p&gt;&lt;p&gt;3. Click EDIT.&lt;/p&gt;&lt;p&gt;4. Set Minimum TLS version to TLS 1.2.&lt;/p&gt;&lt;p&gt;5. Set Profile to Modern or Restricted.&lt;/p&gt;&lt;p&gt;6. Alternatively, if teh user selects the profile Custom, make sure that the following features are disabled:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;TLS_RSA_WITH_AES_128_GCM_SHA256&amp;nbsp;&lt;/p&gt;&lt;p&gt;TLS_RSA_WITH_AES_256_GCM_SHA384&amp;nbsp;&lt;/p&gt;&lt;p&gt;TLS_RSA_WITH_AES_128_CBC_SHA&amp;nbsp;&lt;/p&gt;&lt;p&gt;TLS_RSA_WITH_AES_256_CBC_SHA&amp;nbsp;&lt;/p&gt;&lt;p&gt;TLS_RSA_WITH_3DES_EDE_CBC_SHA&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;From Command Line:&lt;/p&gt;&lt;p&gt;1. For each insecure SSL policy, update it to use secure cyphers:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;gcloud compute ssl-policies update NAME [--profile COMPATIBLE|MODERN|RESTRICTED|CUSTOM] --min-tls-version 1.2 [--custom-features FEATURES]&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;2. If the target proxy has a GCP default SSL policy, use the following command corresponding to the proxy type to update it.&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;gcloud compute target-ssl-proxies update TARGET_SSL_PROXY_NAME --ssl-policy SSL_POLICY_NAME&amp;nbsp;&lt;/p&gt;&lt;p&gt;gcloud compute target-https-proxies update TARGET_HTTPS_POLICY_NAME --ssl-policy SSL_POLICY_NAME&lt;/p&gt;&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="CIS Google Cloud Platform Benchmark" url="https://www.cisecurity.org/benchmark/google_cloud_computing_platform/"/>
          </references>
          <standards>
            <standard ref="1.2" supportedStandardRef="cis-gcp-standard"/>
            <standard ref="1.2" supportedStandardRef="cis-gcp-standard-level-2"/>
            <standard ref="A05:2021-Security Misconfiguration" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A6:2017-Security Misconfiguration" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;From Console:&lt;/p&gt;&lt;p&gt;1. See all load balancers by visiting https://console.cloud.google.com/net-services/loadbalancing/loadBalancers/list.&lt;/p&gt;&lt;p&gt;2. For each load balancer for SSL (Proxy) or HTTPS, click on its name to go the Load balancer details page.&lt;/p&gt;&lt;p&gt;3. Ensure that each target proxy entry in the Frontend table has an SSL Policy configured.&lt;/p&gt;&lt;p&gt;4. Click on each SSL policy to go to its SSL policy details page.&lt;/p&gt;&lt;p&gt;5. Ensure that the SSL policy satisfies one of the following conditions:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;has a Min TLS set to TLS 1.2 and Profile set to Modern profile, or&lt;/li&gt;&lt;li&gt;has Profile set to Restricted. Note that a Restricted profile effectively requires clients to use TLS 1.2 regardless of the chosen minimum TLS version, or&lt;/li&gt;&lt;li&gt;has Profile set to Custom and the following features are all disabled:&amp;nbsp;&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;TLS_RSA_WITH_AES_128_GCM_SHA256&amp;nbsp;&lt;/p&gt;&lt;p&gt;TLS_RSA_WITH_AES_256_GCM_SHA384&amp;nbsp;&lt;/p&gt;&lt;p&gt;TLS_RSA_WITH_AES_128_CBC_SHA&amp;nbsp;&lt;/p&gt;&lt;p&gt;TLS_RSA_WITH_AES_256_CBC_SHA&amp;nbsp;&lt;/p&gt;&lt;p&gt;TLS_RSA_WITH_3DES_EDE_CBC_SHA&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;From Command Line:&lt;/p&gt;&lt;p&gt;1. List all TargetHttpsProxies and TargetSslProxies.&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;gcloud compute target-https-proxies list gcloud compute target-ssl-proxies list&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;2. For each target proxy, list its properties:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;gcloud compute target-https-proxies describe TARGET_HTTPS_PROXY_NAME gcloud compute target-ssl-proxies describe TARGET_SSL_PROXY_NAME&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;3. Ensure that the sslPolicy field is present and identifies the name of the SSL policy: sslPolicy: https://www.googleapis.com/compute/v1/projects/PROJECT_ID/global/sslPolicies/SSL_POLICY_NAME&lt;/p&gt;&lt;p&gt;If the sslPolicy field is missing from the configuration, it means that the GCP default policy is used, which is insecure.&lt;/p&gt;&lt;p&gt;4. Describe the SSL policy:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;gcloud compute ssl-policies describe SSL_POLICY_NAME&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;5. Ensure that the policy satisfies one of the following conditions:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;has Profile set to Modern and minTlsVersion set to TLS_1_2, or&lt;/li&gt;&lt;li&gt;has Profile set to Restricted, or&lt;/li&gt;&lt;li&gt;has Profile set to Custom and enabledFeatures does not contain any of the following values:&amp;nbsp;&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;TLS_RSA_WITH_AES_128_GCM_SHA256&amp;nbsp;&lt;/p&gt;&lt;p&gt;TLS_RSA_WITH_AES_256_GCM_SHA384&amp;nbsp;&lt;/p&gt;&lt;p&gt;TLS_RSA_WITH_AES_128_CBC_SHA&amp;nbsp;&lt;/p&gt;&lt;p&gt;TLS_RSA_WITH_AES_256_CBC_SHA&amp;nbsp;&lt;/p&gt;&lt;p&gt;TLS_RSA_WITH_3DES_EDE_CBC_SHA&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:09.395">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-IAM16" name="Enable Security Key Enforcement for all admin accounts" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Setup Security Key Enforcement for Google Cloud Platform admin accounts.&lt;/p&gt;&lt;p&gt;Rationale:&lt;/p&gt;&lt;p&gt;Google Cloud Platform users with Organization Administrator roles have the highest level of privilege in the organization. These accounts should be protected with the strongest form of two-factor authentication: Security Key Enforcement. Ensure that admins use Security Keys to log in instead of weaker second factors like SMS or one-time passwords (OTP). Security Keys are actual physical keys used to access Google Organization Administrator Accounts. They send an encrypted signature rather than a code, ensuring that logins cannot be phished.&lt;/p&gt;&lt;p&gt;Impact:&lt;/p&gt;&lt;p&gt;If an organization administrator loses access to their security key, the user could lose access to their account. For this reason, it is important to set up backup security keys.&lt;/p&gt;&lt;p&gt;Remediation:&lt;/p&gt;&lt;p&gt;Step 1: Identify users with the Organization Administrator role.&amp;nbsp;&lt;/p&gt;&lt;p&gt;Step 2: Setup Security Key Enforcement for each account. Learn more at: https://cloud.google.com/security-key/&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="CIS Google Cloud Platform Benchmark" url="https://www.cisecurity.org/benchmark/google_cloud_computing_platform/"/>
          </references>
          <standards>
            <standard ref="1.3" supportedStandardRef="cis-gcp-standard-level-2"/>
            <standard ref="A05:2021-Security Misconfiguration" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A6:2017-Security Misconfiguration" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Step 1: Identify users with Organization Administrator privileges:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;gcloud organizations get-iam-policy ORGANIZATION_ID&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Look for members granted the role "roles/resourcemanager.organizationAdmin".&amp;nbsp;&lt;/p&gt;&lt;p&gt;Step 2: Manually verify that Security Key Enforcement has been enabled for each account.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:09.395">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-NET08" name="Enable VPC Flow Logs for every subnet in a VPC Network" issueId="" issueLink="" platform="" cost="0" risk="61" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Flow Logs is a feature that enables users to capture information about the IP traffic going to and from network interfaces in the organization's VPC Subnets. Once a flow log is created, the user can view and retrieve its data in Stackdriver Logging. It is recommended that Flow Logs be enabled for every business-critical VPC subnet.&lt;/p&gt;&lt;p&gt;Rationale:&lt;/p&gt;&lt;p&gt;VPC networks and subnetworks not reserved for internal HTTP(S) load balancing provide logically isolated and secure network partitions where GCP resources can be launched. When Flow Logs are enabled for a subnet, VMs within that subnet start reporting on all Transmission Control Protocol (TCP) and User Datagram Protocol (UDP) flows. Each VM samples the TCP and UDP flows it sees, inbound and outbound, whether the flow is to or from another VM, a host in the on-premises datacenter, a Google service, or a host on the Internet. If two GCP VMs are communicating, and both are in subnets that have VPC Flow Logs enabled, both VMs report the flows.&lt;/p&gt;&lt;p&gt;Flow Logs supports the following use cases:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Network monitoring&lt;/li&gt;&lt;li&gt;Understanding network usage and optimizing network traffic expenses&lt;/li&gt;&lt;li&gt;Network forensics&lt;/li&gt;&lt;li&gt;Real-time security analysis&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Flow Logs provide visibility into network traffic for each VM inside the subnet and can be used to detect anomalous traffic or provide insight during security workflows.&lt;/p&gt;&lt;p&gt;Note: Subnets reserved for use by internal HTTP(S) load balancers do not support VPC flow logs.&lt;/p&gt;&lt;p&gt;Impact:&lt;/p&gt;&lt;p&gt;Standard pricing for Stackdriver Logging, BigQuery, or Cloud Pub/Sub applies. VPC Flow Logs generation will be charged starting in GA as described in reference: https://cloud.google.com/vpc/&lt;/p&gt;&lt;p&gt;Remediation:&lt;/p&gt;&lt;p&gt;From Console:&lt;/p&gt;&lt;p&gt;1. Go to the VPC network GCP Console visiting https://console.cloud.google.com/networking/networks/list&lt;/p&gt;&lt;p&gt;2. Click the name of a subnet, The Subnet details page displays.&lt;/p&gt;&lt;p&gt;3. Click the EDIT button.&lt;/p&gt;&lt;p&gt;4. Set Flow Logs to On.&lt;/p&gt;&lt;p&gt;5. Click Save.&lt;/p&gt;&lt;p&gt;From Command Line:&amp;nbsp;&lt;/p&gt;&lt;p&gt;To set Private Google access for a network subnet, run the following command:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;gcloud compute networks subnets update [SUBNET_NAME] --region [REGION] --enable-flow-logs&lt;/p&gt;&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="CIS Google Cloud Platform Benchmark" url="https://www.cisecurity.org/benchmark/google_cloud_computing_platform/"/>
          </references>
          <standards>
            <standard ref="3.8" supportedStandardRef="cis-gcp-standard-level-2"/>
            <standard ref="A09:2021-Security Logging and Monitoring Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2017-Insufficient Logging-Monitoring" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;From Console:&lt;/p&gt;&lt;p&gt;1. Go to the VPC network GCP Console visiting https://console.cloud.google.com/networking/networks/list&lt;/p&gt;&lt;p&gt;2. From the list of network subnets, make sure for each subnet Flow Logs is set to On&lt;/p&gt;&lt;p&gt;From Command Line:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;gcloud compute networks list --format json | \ jq -r '.[].subnetworks | .[]' | \ xargs -I {} gcloud compute networks subnets describe {} --format json | \ jq -r '. | "Subnet: \(.name) Purpose: \(.purpose) VPC Flow Log Enabled: \(has("enableFlowLogs"))"'&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;The output of the above command will list each subnet, the subnet's purpose, and a true or false value if Flow Logs are enabled. If the subnet's purpose is PRIVATE then Flow Logs should be true.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:09.007">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="C-GCP-IAM-02" name="Encrypt Dataproc Cluster using Customer-Managed Encryption Key" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;When you use Dataproc, cluster and job data is stored on Persistent Disks (PDs) associated with the Compute Engine VMs in your cluster and in a Cloud Storage staging bucket. This PD and bucket data is encrypted using a Google-generated data encryption key (DEK) and key encryption key (KEK). The CMEK feature allows you to create, use, and revoke the key encryption key (KEK). Google still controls the data encryption key (DEK).&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Rationale&lt;/strong&gt;:&lt;/p&gt;&lt;p&gt;Cloud services offer the ability to protect data related to those services using encryption keys managed by the customer within Cloud KMS. These encryption keys are called customer-managed encryption keys (CMEK). When you protect data in Google Cloud services with CMEK, the CMEK key is within your control.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation&lt;/strong&gt;:&lt;/p&gt;&lt;p&gt;From Console&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Login to the GCP Console and navigate to the Dataproc Cluster page by visiting https://console.cloud.google.com/dataproc/clusters.&lt;/li&gt;&lt;li&gt;Select the project from the projects dropdown list.&lt;/li&gt;&lt;li&gt;On the Dataproc Cluster page, click on the Create Cluster to create a new cluster with Customer managed encryption keys.&lt;/li&gt;&lt;li&gt;On Create a cluster page, perform below steps:&lt;ol&gt;&lt;li&gt;Inside Set up cluster section perform below steps: -In the Name textbox, provide a name for your cluster.&lt;ol&gt;&lt;li&gt;From Location select the location in which you want to deploy a cluster.&lt;/li&gt;&lt;li&gt;Configure other configurations as per your requirements.&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;Inside Configure Nodes and Customize cluster section configure the settings as per your requirements.&lt;/li&gt;&lt;li&gt;Inside Manage security section, perform below steps:&lt;ol&gt;&lt;li&gt;From Encryption, select Customer-managed key.&lt;/li&gt;&lt;li&gt;Select a customer-managed key from dropdown list.&lt;/li&gt;&lt;li&gt;Ensure that the selected KMS Key have Cloud KMS CryptoKey Encrypter/Decrypter role assign to Dataproc Cluster service account ("serviceAccount:service-&amp;lt;project_number&amp;gt;@compute-system.iam.gserviceaccount.com").&lt;/li&gt;&lt;li&gt;Click on Create to create a cluster.&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;Once the cluster is created migrate all your workloads from the older cluster to the new cluster and delete the old cluster by performing the below steps:&lt;ol&gt;&lt;li&gt;On the Clusters page, select the old cluster and click on Delete cluster.&lt;/li&gt;&lt;li&gt;On the Confirm deletion window, click on Confirm to delete the cluster.&lt;/li&gt;&lt;li&gt;Repeat step above for other Dataproc clusters available in the selected project.&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;Change the project from the project dropdown list and repeat the remediation procedure for other Dataproc clusters available in other projects.&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;From Command Line&lt;/p&gt;&lt;p&gt;Before creating cluster ensure that the selected KMS Key have Cloud KMS CryptoKey Encrypter/Decrypter role assign to Dataproc Cluster service account ("serviceAccount:service-&amp;lt;project_number&amp;gt;@compute-system.iam.gserviceaccount.com"). Run clusters create command to create new cluster with customer-managed key:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;gcloud dataproc clusters create &amp;lt;cluster_name&amp;gt; --region=us-central1 --gce-pd-kms-key=&amp;lt;key_resource_name&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;The above command will create a new cluster in the selected region. Once the cluster is created migrate all your workloads from the older cluster to the new cluster and Run clusters delete command to delete cluster:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;gcloud dataproc clusters delete &amp;lt;cluster_name&amp;gt; --region=us-central1&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Repeat step no. 1 to create a new Dataproc cluster. Change the project by running the below command and repeat the remediation procedure for other projects:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;gcloud config set project &amp;lt;project_ID&amp;gt;"&lt;/p&gt;&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Encryption at rest in Google Cloud" url="https://cloud.google.com/security/encryption-at-rest/default-encryption"/>
          </references>
          <standards>
            <standard ref="1.17" supportedStandardRef="cis-gcp-standard-level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;From Console&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Login to the GCP Console and navigate to the Dataproc Cluster page by visiting https://console.cloud.google.com/dataproc/clusters.&lt;/li&gt;&lt;li&gt;Select the project from the project dropdown list.&lt;/li&gt;&lt;li&gt;On the Dataproc Clusters page, select the cluster and click on the Name attribute value that you want to examine.&lt;/li&gt;&lt;li&gt;On the details page, select the Configurations tab.&lt;/li&gt;&lt;li&gt;On the Configurations tab, check the Encryption type configuration attribute value. If the value is set to Google-managed key, then Dataproc Cluster is not encrypted with Customer managed encryption keys.&lt;/li&gt;&lt;li&gt;Repeat step no. 3 - 5 for other Dataproc Clusters available in the selected project.&lt;/li&gt;&lt;li&gt;Change the project from the project dropdown list and repeat the audit procedure for other projects.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;From Command Line&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Run clusters list command to list all the Dataproc Clusters available in the region:&amp;nbsp;&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;gcloud dataproc clusters list --region='us-central1'&lt;/p&gt;&lt;/blockquote&gt;&lt;ul&gt;&lt;li&gt;Run clusters describe command to get the key details of the selected cluster:&amp;nbsp;&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;gcloud dataproc clusters describe &amp;lt;cluster_name&amp;gt; --region=us-central1 --flatten=config.encryptionConfig.gcePdKmsKeyName&lt;/p&gt;&lt;/blockquote&gt;&lt;ul&gt;&lt;li&gt;If the above command output return "null", then the selected cluster is not encrypted with Customer managed encryption keys.&lt;/li&gt;&lt;li&gt;Repeat step no. 2 and 3 for other Dataproc Clusters available in the selected region. Change the region by updating --region and repeat step no. 2 for other clusters available in the project. Change the project by running the below command and repeat the audit procedure for other Dataproc clusters available in other projects:&amp;nbsp;&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;gcloud config set project &amp;lt;project_ID&amp;gt;"&lt;/p&gt;&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:09.395">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-IAM11" name="Enforce separation of duties" issueId="" issueLink="" platform="" cost="1" risk="62" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;It is recommended that the principle of 'Separation of Duties' is enforced while assigning KMS related roles to users.&lt;/p&gt;&lt;p&gt;Rationale:&lt;/p&gt;&lt;p&gt;The built-in/predefined IAM role Cloud KMS Admin allows the user/identity to create, delete, and manage service account(s). The built-in/predefined IAM role Cloud KMS CryptoKey Encrypter/Decrypter allows the user/identity (with adequate privileges on concerned resources) to encrypt and decrypt data at rest using an encryption key(s).&lt;/p&gt;&lt;p&gt;The built-in/predefined IAM role Cloud KMS CryptoKey Encrypter allows the user/identity (with adequate privileges on concerned resources) to encrypt data at rest using an encryption key(s). The built-in/predefined IAM role Cloud KMS CryptoKey Decrypter allows the user/identity (with adequate privileges on concerned resources) to decrypt data at rest using an encryption key(s).&lt;/p&gt;&lt;p&gt;Separation of duties is the concept of ensuring that one individual does not have all necessary permissions to be able to complete a malicious action. In Cloud KMS, this could be an action such as using a key to access and decrypt data a user should not normally have access to. Separation of duties is a business control typically used in larger organizations, meant to help avoid security or privacy incidents and errors. It is considered best practice.&lt;/p&gt;&lt;p&gt;No user(s) should have Cloud KMS Admin and any of the Cloud KMS CryptoKey Encrypter/Decrypter, Cloud KMS CryptoKey Encrypter, Cloud KMS CryptoKey Decrypter roles assigned at the same time.&lt;/p&gt;&lt;p&gt;Impact:&lt;/p&gt;&lt;p&gt;Removed roles should be assigned to another user based on business needs.&lt;/p&gt;&lt;p&gt;Remediation:&lt;/p&gt;&lt;p&gt;From Console:&lt;/p&gt;&lt;p&gt;1. Go to IAM &amp;amp; Admin/IAM using https://console.cloud.google.com/iam-admin/iam&lt;/p&gt;&lt;p&gt;2. For any member having Cloud KMS Admin and any of the Cloud KMS CryptoKey Encrypter/Decrypter, Cloud KMS CryptoKey Encrypter, Cloud KMS CryptoKey Decrypter roles granted/assigned, click the Delete Bin icon to remove the role from the member.&lt;/p&gt;&lt;p&gt;Note: Removing a role should be done based on the business requirement.&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="CIS Google Cloud Platform Benchmark" url="https://www.cisecurity.org/benchmark/google_cloud_computing_platform/"/>
          </references>
          <standards>
            <standard ref="1.11" supportedStandardRef="cis-gcp-standard-level-2"/>
            <standard ref="1.8" supportedStandardRef="cis-gcp-standard-level-2"/>
            <standard ref="A05:2021-Security Misconfiguration" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A6:2017-Security Misconfiguration" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;From Console:&lt;/p&gt;&lt;p&gt;1. Go to IAM &amp;amp; Admin/IAM by visiting: https://console.cloud.google.com/iam-admin/iam&lt;/p&gt;&lt;p&gt;2. Ensure no member has the roles Cloud KMS Admin and any of the Cloud KMS CryptoKey Encrypter/Decrypter, Cloud KMS CryptoKey Encrypter, Cloud KMS CryptoKey Decrypter assigned.&lt;/p&gt;&lt;p&gt;From Command Line:&lt;/p&gt;&lt;p&gt;1. List all users and role assignments:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;gcloud projects get-iam-policy PROJECT_ID&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;2. Ensure that there are no common users found in the member section for roles cloudkms.admin and any one of Cloud KMS CryptoKey Encrypter/Decrypter, Cloud KMS CryptoKey Encrypter, Cloud KMS CryptoKey Decrypter&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:09.394">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-NET02" name="Isolate Google Cloud resources into separate VNets by function" issueId="" issueLink="" platform="" cost="1" risk="61" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Place the resources into separate VNets according to their use or function (production,
                        development, test). Placing such resources accordingly ensures that a resource of a high
                        security level is not exposed by the security settings of a lower labeled VNet.&amp;nbsp;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Identify the resources that exist in an incorrect VNet.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Migrate or move it to the correct VNet.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Google Cloud docs: Isolate resources" url="https://cloud.google.com/docs/enterprise/best-practices-for-enterprise-organizations#use_projects_to_fully_isolate_resources"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that the Google Cloud resources are isolated and separated in several VNets by the
                            function of the resources.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:09.006">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-NET01" name="Isolate groups of VM instances" issueId="" issueLink="" platform="" cost="1" risk="61" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Use networks within projects to isolate groups of VM instances.

                        Each project supports up to five isolated networks. Each network constitutes a global IP address
                        space. This means that you can create resources, such as Google Compute Engine Virtual Machine
                        (VM) instances, in multiple geographic regions, and the resources will share the same IP address
                        space because they are on the same virtual network. Note that, despite the flat network address
                        space, you still incur normal egress charges when you leave your zone. You can request a quota
                        increase to support up to 15 isolated networks in each project.</desc>
          <implementations/>
          <references>
            <reference name="Google Cloud docs: Isolate resources" url="https://cloud.google.com/docs/enterprise/best-practices-for-enterprise-organizations#use_projects_to_fully_isolate_resources"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check the projects are isolated using groups of VM instances.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:09.006">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-IAM01" name="Recertify user access" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Do regular reviews of service accounts on the system and verify they do not contain stolen or
                        fake accounts. This process ensures there are not any compromised accounts by former employees
                        or attackers.&amp;nbsp;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        At least every 90 days complete the following:&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Open the Service Accounts page in the Cloud Platform Console.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Click Select a project.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Select your project and click Open. All service accounts are listed in the Service
                        Accounts page.&lt;/li&gt;
                        &lt;li&gt;For any user that should not exist, select the user and click the Delete button.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Google Cloud docs: manage service accounts" url="https://cloud.google.com/iam/docs/creating-managing-service-accounts"/>
          </references>
          <standards>
            <standard ref="A07:2021-Identification and Authentication Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A2:2017-Broken Authentication" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Open the Service Accounts page in the Cloud Platform Console.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Click Select a project.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Select your project and click Open. All service accounts are listed in the Service
                            Accounts page.&lt;/li&gt;
                            &lt;li&gt;Check that the necessary users appear in the list.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;And check that there is a process to review the access users at least every 90
                            days.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:09.394">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-IAM18" name="Remove Admin privileges on Service Account" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;A service account is a special Google account that belongs to an application or a VM, instead of to an individual end-user. The application uses the service account to call the service's Google API so that users aren't directly involved. It's recommended not to use admin access for ServiceAccount.&lt;/p&gt;&lt;p&gt;Rationale:&lt;/p&gt;&lt;p&gt;Service accounts represent service-level security of the Resources (application or a VM) which can be determined by the roles assigned to it. Enrolling ServiceAccount with Admin rights gives full access to an assigned application or a VM. A ServiceAccount Access holder can perform critical actions like delete, update change settings, etc. without user intervention. For this reason, it's recommended that service accounts not have Admin rights.&lt;/p&gt;&lt;p&gt;Impact:&lt;/p&gt;&lt;p&gt;Removing *Admin or *adminorEditororOwner` role assignments from service accounts may break functionality that uses impacted service accounts. Required role(s) should be assigned to impacted service accounts in order to restore broken functionalities.&lt;/p&gt;&lt;p&gt;Remediation:&lt;/p&gt;&lt;p&gt;From Console&lt;/p&gt;&lt;p&gt;1. Go to IAM &amp;amp; admin/IAM using https://console.cloud.google.com/iam-admin/iam&lt;/p&gt;&lt;p&gt;2. Go to the Members&lt;/p&gt;&lt;p&gt;3. Identify User-Managed user created service account with roles containing *Admin or *admin or role matching Editor or role matching Owner&lt;/p&gt;&lt;p&gt;4. Click the Delete bin icon to remove the role from the member (service account in this case)&lt;/p&gt;&lt;p&gt;From Command Line:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;gcloud projects get-iam-policy PROJECT_ID --format json &amp;gt; iam.json&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;1. Using a text editor, Remove Role which contains roles/*Admin or roles/*admin or matched roles/editor or matches 'roles/owner`. Add a role to the bindings array that defines the group members and the role for those members.&lt;/p&gt;&lt;p&gt;2. Update the project's IAM policy:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;gcloud projects set-iam-policy PROJECT_ID iam.json&lt;/p&gt;&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="CIS Google Cloud Platform Benchmark" url="https://www.cisecurity.org/benchmark/google_cloud_computing_platform/"/>
          </references>
          <standards>
            <standard ref="1.5" supportedStandardRef="cis-gcp-standard"/>
            <standard ref="1.5" supportedStandardRef="cis-gcp-standard-level-2"/>
            <standard ref="A07:2021-Identification and Authentication Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A2:2017-Broken Authentication" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;From Console:&lt;/p&gt;&lt;p&gt;1. Go to IAM &amp;amp; admin/IAM using https://console.cloud.google.com/iam-admin/iam&lt;/p&gt;&lt;p&gt;2. Go to the Members&lt;/p&gt;&lt;p&gt;3. Ensure that there are no User-Managed user created service account(s) with roles containing *Admin or *admin or role matching Editor or role matching Owner&lt;/p&gt;&lt;p&gt;From Command Line:&lt;/p&gt;&lt;p&gt;1. Get the policy that you want to modify, and write it to a JSON file: gcloud projects get-iam-policy PROJECT_ID --format json &amp;gt; iam.json&lt;/p&gt;&lt;p&gt;2. The contents of the JSON file will look similar to the following. Note that role of members group associated with each serviceaccount does not contain *Admin or *admin or does not match roles/editor or does not match roles/owner.&lt;/p&gt;&lt;p&gt;This recommendation is only applicable to User-Managed user-created service accounts. These accounts have the nomenclature: SERVICE_ACCOUNT_NAME@PROJECT_ID.iam.gserviceaccount.com. Note that some Google-managed, Google-created service accounts have the same naming format, and should be excluded (e.g., appsdev-apps-dev-script-auth@system.gserviceaccount.com which needs the Owner role).&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:09.395">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-NET03" name="Remove default and legacy networks" issueId="" issueLink="" platform="" cost="0" risk="61" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;order to prevent use of legacy networks, a project should not have a legacy network configured.&lt;/p&gt;&lt;p&gt;Rationale:&lt;/p&gt;&lt;p&gt;Legacy networks have a single network IPv4 prefix range and a single gateway IP address for the whole network. The network is global in scope and spans all cloud regions. Subnetworks cannot be created in a legacy network and are unable to switch from legacy to auto or custom subnet networks. Legacy networks can have an impact for high network traffic projects and are subject to a single point of contention or failure.&lt;/p&gt;&lt;p&gt;Remediation:&lt;/p&gt;&lt;p&gt;For each Google Cloud Platform project,&lt;/p&gt;&lt;p&gt;1. Follow the documentation and create a non-legacy network suitable for the organization's requirements.&lt;/p&gt;&lt;p&gt;2. Follow the documentation and delete the networks in the legacy mode.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="CIS Google Cloud Platform Benchmark" url="https://www.cisecurity.org/benchmark/google_cloud_computing_platform/"/>
          </references>
          <standards>
            <standard ref="3.1" supportedStandardRef="cis-gcp-standard-level-2"/>
            <standard ref="3.2" supportedStandardRef="cis-gcp-standard-level-2"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;For each Google Cloud Platform project,&lt;/p&gt;&lt;p&gt;1. Set the project name in the Google Cloud Shell:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;gcloud config set project &amp;lt;Project-ID&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;2. List the networks configured in that project:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;gcloud compute networks list&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;None of the listed networks should be in the legacy mode.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:09.006">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-IAM14" name="Restrict API key usage to call only APIs required by an application" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;API keys are insecure because they can be viewed publicly, such as from within a browser, or they can be accessed on a device where the key resides. It is recommended to restrict API keys to use (call) only APIs required by an application.&lt;/p&gt;&lt;p&gt;Rationale:&lt;/p&gt;&lt;p&gt;Security risks involved in using API-Keys are below:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;API keys are simple encrypted strings&lt;/li&gt;&lt;li&gt;API keys do not identify the user or the application making the API request&lt;/li&gt;&lt;li&gt;API keys are typically accessible to clients, making it easy to discover and steal an API key&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;In light of these potential risks, Google recommends using the standard authentication flow instead of API-Keys. However, there are limited cases where API keys are more appropriate. For example, if there is a mobile application that needs to use the Google Cloud Translation API, but doesn't otherwise need a backend server, API keys are the simplest way to authenticate to that API.&lt;/p&gt;&lt;p&gt;In order to reduce attack surfaces by providing least privileges, API-Keys can be restricted to use (call) only APIs required by an application.&lt;/p&gt;&lt;p&gt;Impact:&lt;/p&gt;&lt;p&gt;Setting API restrictions may break existing application functioning, if not done carefully.&lt;/p&gt;&lt;p&gt;Remediation:&lt;/p&gt;&lt;p&gt;From Console:&lt;/p&gt;&lt;p&gt;1. Go to APIs &amp;amp; Services\Credentials using https://console.cloud.google.com/apis/credentials&lt;/p&gt;&lt;p&gt;2. In the section API Keys, Click the API Key Name. The API Key properties display on a new page.&lt;/p&gt;&lt;p&gt;3. In the Key restrictions section go to API restrictions.&lt;/p&gt;&lt;p&gt;4. Click the Select API drop-down to choose an API.&lt;/p&gt;&lt;p&gt;5. Click Save.&lt;/p&gt;&lt;p&gt;6. Repeat steps 2,3,4,5 for every unrestricted API key&lt;/p&gt;&lt;p&gt;Note: Do not set API restrictions to Google Cloud APIs, as this option allows access to all services offered by Google cloud.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="CIS Google Cloud Platform Benchmark" url="https://www.cisecurity.org/benchmark/google_cloud_computing_platform/"/>
          </references>
          <standards>
            <standard ref="1.14" supportedStandardRef="cis-gcp-standard"/>
            <standard ref="1.14" supportedStandardRef="cis-gcp-standard-level-2"/>
            <standard ref="A05:2021-Security Misconfiguration" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A6:2017-Security Misconfiguration" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;From Console:&lt;/p&gt;&lt;p&gt;1. Go to APIs &amp;amp; Services\Credentials using https://console.cloud.google.com/apis/credentials&lt;/p&gt;&lt;p&gt;2. In the section API Keys, Click the API Key Name. The API Key properties display on a new page.&lt;/p&gt;&lt;p&gt;3. For every API Key, ensure the section Key restrictions parameter API restrictions is not set to None.&lt;/p&gt;&lt;p&gt;Or, Ensure API restrictions is not set to Google Cloud APIs&amp;nbsp;&lt;/p&gt;&lt;p&gt;Note: Google Cloud APIs represents the API collection of all cloud services/APIs offered by Google cloud.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:09.395">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-IAM13" name="Restrict API key usage to trusted hosts and apps" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Unrestricted keys are insecure because they can be viewed publicly, such as from within a browser, or they can be accessed on a device where the key resides. It is recommended to restrict API key usage to trusted hosts, HTTP referrers and apps.&lt;/p&gt;&lt;p&gt;Rationale:&lt;/p&gt;&lt;p&gt;Security risks involved in using API-Keys appear below:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;API keys are simple encrypted strings&lt;/li&gt;&lt;li&gt;API keys do not identify the user or the application making the API request&lt;/li&gt;&lt;li&gt;API keys are typically accessible to clients, making it easy to discover and steal an API key&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;In light of these potential risks, Google recommends using the standard authentication flow instead of API keys. However, there are limited cases where API keys are more appropriate. For example, if there is a mobile application that needs to use the Google Cloud Translation API, but doesn't otherwise need a backend server, API keys are the simplest way to authenticate to that API.&lt;/p&gt;&lt;p&gt;In order to reduce attack vectors, API-Keys can be restricted only to trusted hosts, HTTP referrers and applications.&lt;/p&gt;&lt;p&gt;Impact:&lt;/p&gt;&lt;p&gt;Setting Application Restrictions may break existing application functioning, if not done carefully.&lt;/p&gt;&lt;p&gt;Remediation:&lt;/p&gt;&lt;p&gt;From Console:&lt;/p&gt;&lt;p&gt;1. Go to APIs &amp;amp; Services\Credentials using https://console.cloud.google.com/apis/credentials&lt;/p&gt;&lt;p&gt;2. In the section API Keys, Click the API Key Name. The API Key properties display on a new page.&lt;/p&gt;&lt;p&gt;3. In the Key restrictions section, set the application restrictions to any of HTTP referrers, IP Adresses, Android Apps, iOs Apps.&lt;/p&gt;&lt;p&gt;4. Click Save.&lt;/p&gt;&lt;p&gt;5. Repeat steps 2,3,4 for every unrestricted API key. Note: Do not set HTTP referrers to wild-cards (* or *.[TLD] or .[TLD]/) allowing access to any/wide HTTP referrer(s) Do not set IP addresses and referrer to any host (0.0.0.0 or 0.0.0.0/0 or ::0)&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="CIS Google Cloud Platform Benchmark" url="https://www.cisecurity.org/benchmark/google_cloud_computing_platform/"/>
          </references>
          <standards>
            <standard ref="1.13" supportedStandardRef="cis-gcp-standard"/>
            <standard ref="1.13" supportedStandardRef="cis-gcp-standard-level-2"/>
            <standard ref="A05:2021-Security Misconfiguration" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A6:2017-Security Misconfiguration" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;From Console:&lt;/p&gt;&lt;p&gt;1. Go to APIs &amp;amp; Services\Credentials using https://console.cloud.google.com/apis/credentials&lt;/p&gt;&lt;p&gt;2. In the section API Keys, Click the API Key Name. The API Key properties display on a new page.&lt;/p&gt;&lt;p&gt;3. For every API Key, ensure the section Key restrictions parameter Application restrictions is not set to None.&lt;/p&gt;&lt;p&gt;Or,&amp;nbsp;&lt;/p&gt;&lt;p&gt;Ensure Application restrictions is set to HTTP referrers and the referrer is not set to wild-cards (* or *.[TLD] or *.[TLD]/*) allowing access to any/wide HTTP referrer(s)&amp;nbsp;&lt;/p&gt;&lt;p&gt;Or,&amp;nbsp;&lt;/p&gt;&lt;p&gt;Ensure Application restrictions is set to IP addresses and referrer is not set to any host (0.0.0.0 or 0.0.0.0/0 or ::0)&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:09.395">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-NET07" name="Restrict RDP access from the Internet" issueId="" issueLink="" platform="" cost="0" risk="61" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;GCP Firewall Rules are specific to a VPC Network. Each rule either allows or denies traffic when its conditions are met. Its conditions allow users to specify the type of traffic, such as ports and protocols, and the source or destination of the traffic, including IP addresses, subnets, and instances.&lt;/p&gt;&lt;p&gt;Firewall rules are defined at the VPC network level and are specific to the network in which they are defined. The rules themselves cannot be shared among networks. Firewall rules only support IPv4 traffic. When specifying a source for an ingress rule or a destination for an egress rule by address, an IPv4 address or IPv4 block in CIDR notation can be used. Generic (0.0.0.0/0) incoming traffic from the Internet to a VPC or VM instance using RDP on Port 3389 can be avoided.&lt;/p&gt;&lt;p&gt;Rationale:&lt;/p&gt;&lt;p&gt;GCP Firewall Rules within a VPC Network. These rules apply to outgoing (egress) traffic from instances and incoming (ingress) traffic to instances in the network. Egress and ingress traffic flows are controlled even if the traffic stays within the network (for example, instance-to-instance communication). For an instance to have outgoing Internet access, the network must have a valid Internet gateway route or custom route whose destination IP is specified. This route simply defines the path to the Internet, to avoid the most general (0.0.0.0/0) destination IP Range specified from the Internet through RDP with the default Port 3389. Generic access from the Internet to a specific IP Range should be restricted.&lt;/p&gt;&lt;p&gt;Impact:&lt;/p&gt;&lt;p&gt;All Remote Desktop Protocol (RDP) connections from outside of the network to the concerned VPC(s) will be blocked. There could be a business need where secure shell access is required from outside of the network to access resources associated with the VPC. In that case, specific source IP(s) should be mentioned in firewall rules to white-list access to RDP port for the concerned VPC(s).&lt;/p&gt;&lt;p&gt;Remediation:&lt;/p&gt;&lt;p&gt;From the Console:&lt;/p&gt;&lt;p&gt;1. Go to VPC Network.&lt;/p&gt;&lt;p&gt;2. Go to the Firewall Rules.&lt;/p&gt;&lt;p&gt;3. Click the Firewall Rule to be modified.&lt;/p&gt;&lt;p&gt;4. Click Edit.&lt;/p&gt;&lt;p&gt;5. Modify Source IP ranges to specific IP.&lt;/p&gt;&lt;p&gt;6. Click Save.&lt;/p&gt;&lt;p&gt;From Command Line:&amp;nbsp;&lt;/p&gt;&lt;p&gt;1.Update RDP Firewall rule with new SOURCE_RANGE from the below command:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;gcloud compute firewall-rules update FirewallName --allow=[PROTOCOL[:PORT[-PORT]],...] --source-ranges=[CIDR_RANGE,...]&lt;/p&gt;&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="CIS Google Cloud Platform Benchmark" url="https://www.cisecurity.org/benchmark/google_cloud_computing_platform/"/>
          </references>
          <standards>
            <standard ref="3.7" supportedStandardRef="cis-gcp-standard-level-2"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;From the Console:&lt;/p&gt;&lt;p&gt;1. Go to VPC network.&lt;/p&gt;&lt;p&gt;2. Go to the Firewall Rules.&lt;/p&gt;&lt;p&gt;3. Ensure Port is not equal to 3389 and Action is not Allow.&lt;/p&gt;&lt;p&gt;4. Ensure IP Ranges is not equal to 0.0.0.0/0 under Source filters.&lt;/p&gt;&lt;p&gt;From Command Line: gcloud compute firewall-rules list --format=table'(name,direction,sourceRanges,allowed.ports)'&lt;/p&gt;&lt;p&gt;Ensure that there is no rule matching the below criteria:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;SOURCE_RANGES is 0.0.0.0/0&lt;/li&gt;&lt;li&gt;AND DIRECTION is INGRESS&lt;/li&gt;&lt;li&gt;AND IPProtocol is TCP or ALL&lt;/li&gt;&lt;li&gt;AND PORTS is set to 3389 or range containing 3389 or Null (not set)&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Note:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;When ALL TCP ports are allowed in a rule, PORT does not have any value set (NULL)&lt;/li&gt;&lt;li&gt;When ALL Protocols are allowed in a rule, PORT does not have any value set (NULL)&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:09.007">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-NET06" name="Restrict SSH access from the Internet" issueId="" issueLink="" platform="" cost="0" risk="61" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;GCP Firewall Rules are specific to a VPC Network. Each rule either allows or denies traffic when its conditions are met. Its conditions allow the user to specify the type of traffic, such as ports and protocols, and the source or destination of the traffic, including IP addresses, subnets, and instances.&lt;/p&gt;&lt;p&gt;Firewall rules are defined at the VPC network level and are specific to the network in which they are defined. The rules themselves cannot be shared among networks. Firewall rules only support IPv4 traffic. When specifying a source for an ingress rule or a destination for an egress rule by address, only an IPv4 address or IPv4 block in CIDR notation can be used. Generic (0.0.0.0/0) incoming traffic from the internet to VPC or VM instance using SSH on Port 22 can be avoided.&lt;/p&gt;&lt;p&gt;Rationale:&lt;/p&gt;&lt;p&gt;GCP Firewall Rules within a VPC Network apply to outgoing (egress) traffic from instances and incoming (ingress) traffic to instances in the network. Egress and ingress traffic flows are controlled even if the traffic stays within the network (for example, instance-to-instance communication). For an instance to have outgoing Internet access, the network must have a valid Internet gateway route or custom route whose destination IP is specified. This route simply defines the path to the Internet, to avoid the most general (0.0.0.0/0) destination IP Range specified from the Internet through SSH with the default Port 22. Generic access from the Internet to a specific IP Range needs to be restricted.&lt;/p&gt;&lt;p&gt;Impact:&lt;/p&gt;&lt;p&gt;All Secure Shell (SSH) connections from outside of the network to the concerned VPC(s) will be blocked. There could be a business need where SSH access is required from outside of the network to access resources associated with the VPC. In that case, specific source IP(s) should be mentioned in firewall rules to white-list access to SSH port for the concerned VPC(s).&lt;/p&gt;&lt;p&gt;Remediation:&lt;/p&gt;&lt;p&gt;From the Console:&lt;/p&gt;&lt;p&gt;1. Go to VPC Network.&lt;/p&gt;&lt;p&gt;2. Go to the Firewall Rules.&lt;/p&gt;&lt;p&gt;3. Click the Firewall Rule you want to modify.&lt;/p&gt;&lt;p&gt;4. Click Edit.&lt;/p&gt;&lt;p&gt;5. Modify Source IP ranges to specific IP.&lt;/p&gt;&lt;p&gt;6. Click Save.&lt;/p&gt;&lt;p&gt;From Command Line: 1.Update the Firewall rule with the new SOURCE_RANGE from the below command:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;gcloud compute firewall-rules update FirewallName --allow=[PROTOCOL[:PORT[-PORT]],...] --source-ranges=[CIDR_RANGE,...]&lt;/p&gt;&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="CIS Google Cloud Platform Benchmark" url="https://www.cisecurity.org/benchmark/google_cloud_computing_platform/"/>
          </references>
          <standards>
            <standard ref="3.6" supportedStandardRef="cis-gcp-standard-level-2"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;From the Console:&lt;/p&gt;&lt;p&gt;1. Go to VPC network.&lt;/p&gt;&lt;p&gt;2. Go to the Firewall Rules.&lt;/p&gt;&lt;p&gt;3. Ensure that Port is not equal to 22 and Action is not set to Allow.&lt;/p&gt;&lt;p&gt;4. Ensure IP Ranges is not equal to 0.0.0.0/0 under Source filters.&lt;/p&gt;&lt;p&gt;From Command Line: gcloud compute firewall-rules list --format=table'(name,direction,sourceRanges,allowed)'&lt;/p&gt;&lt;p&gt;Ensure that there is no rule matching the below criteria:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;SOURCE_RANGES is 0.0.0.0/0&lt;/li&gt;&lt;li&gt;AND DIRECTION is INGRESS&lt;/li&gt;&lt;li&gt;AND IPProtocol is tcp or ALL&lt;/li&gt;&lt;li&gt;AND PORTS is set to 22 or range containing 22 or Null (not set)&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Note:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;When ALL TCP ports are allowed in a rule, PORT does not have any value set (NULL)&lt;/li&gt;&lt;li&gt;When ALL Protocols are allowed in a rule, PORT does not have any value set (NULL)&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:09.007">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-IAM10" name="Rotate keys within a period of 90 days" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Service Account keys consist of a key ID (Private_key_Id) and Private key, which are used to sign programmatic requests users make to Google cloud services accessible to that particular service account. It is recommended that all Service Account keys are regularly rotated.&lt;/p&gt;&lt;p&gt;Google Cloud Key Management Service stores cryptographic keys in a hierarchical structure designed for useful and elegant access control management.&lt;/p&gt;&lt;p&gt;The format for the rotation schedule depends on the client library that is used. For the gcloud command-line tool, the next rotation time must be in ISO or RFC3339 format, and the rotation period must be in the form INTEGER[UNIT], where units can be one of seconds (s), minutes (m), hours (h) or days (d).&lt;/p&gt;&lt;p&gt;It is recommended to rotate API keys every 90 days.&lt;/p&gt;&lt;p&gt;Rationale:&lt;/p&gt;&lt;p&gt;Security risks involved in using API-Keys are listed below:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;API keys are simple encrypted strings&lt;/li&gt;&lt;li&gt;API keys do not identify the user or the application making the API request&lt;/li&gt;&lt;li&gt;API keys are typically accessible to clients, making it easy to discover and steal an API key&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Because of these potential risks, Google recommends using the standard authentication flow instead of API Keys. However, there are limited cases where API keys are more appropriate. For example, if there is a mobile application that needs to use the Google Cloud Translation API, but doesn't otherwise need a backend server, API keys are the simplest way to authenticate to that API.&lt;/p&gt;&lt;p&gt;Once a key is stolen, it has no expiration, meaning it may be used indefinitely unless the project owner revokes or regenerates the key. Rotating API keys will reduce the window of opportunity for an access key that is associated with a compromised or terminated account to be used.&lt;/p&gt;&lt;p&gt;API keys should be rotated to ensure that data cannot be accessed with an old key that might have been lost, cracked, or stolen.&lt;/p&gt;&lt;p&gt;Impact:&lt;/p&gt;&lt;p&gt;Regenerating Key may break existing client connectivity as the client will try to connect with older API keys they have stored on devices.&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;Remediation:&lt;/p&gt;&lt;p&gt;From Console:&lt;/p&gt;&lt;p&gt;For user-managed/external keys:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Delete any external (user-managed) Service Account Key older than 90 days:&lt;ul&gt;&lt;li&gt;1. Go to APIs &amp;amp; Services\Credentials using https://console.cloud.google.com/apis/credentials&lt;/li&gt;&lt;li&gt;2. In the Section Service Account Keys, for every external (user-managed) service account key where creation date is greater than or equal to the past 90 days, click Delete Bin Icon to Delete Service Account key&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Create a new external (user-managed) Service Account Key for a Service Account:&lt;ul&gt;&lt;li&gt;1. Go to APIs &amp;amp; Services\Credentials using https://console.cloud.google.com/apis/credentials&lt;/li&gt;&lt;li&gt;2. Click Create Credentials and Select Service Account Key.&lt;/li&gt;&lt;li&gt;3. Choose the service account in the drop-down list for which an External (user-managed) Service Account key needs to be created.&lt;/li&gt;&lt;li&gt;4. Select the desired key type format among JSON or P12.&lt;/li&gt;&lt;li&gt;5. Click Create. It will download the private key. Keep it safe.&lt;/li&gt;&lt;li&gt;6. Click Close if prompted.&lt;/li&gt;&lt;li&gt;7. The site will redirect to the APIs &amp;amp; Services\Credentials page. Make a note of the new ID displayed in the Service account keys section.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;For KMS keys:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;1. Go to Cryptographic Keys by visiting: https://console.cloud.google.com/security/kms.&lt;/li&gt;&lt;li&gt;2. Click on the specific key ring&lt;/li&gt;&lt;li&gt;3. From the list of keys, choose the specific key and Click on Right side pop up the blade (3 dots).&lt;/li&gt;&lt;li&gt;4. Click on Edit rotation period.&lt;/li&gt;&lt;li&gt;5. On the pop-up window, Select a new rotation period in days which should be less than 90 and then choose Starting on date (date from which the rotation period begins).&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;For API keys:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;1. Go to APIs &amp;amp; Services\Credentials using https://console.cloud.google.com/apis/credentials&lt;/li&gt;&lt;li&gt;2. In the section API Keys, Click the API Key Name. The API Key properties display on a new page.&lt;/li&gt;&lt;li&gt;3. Click REGENERATE KEY to rotate API key.&lt;/li&gt;&lt;li&gt;4. Click Save.&lt;/li&gt;&lt;li&gt;5. Repeat steps 2,3,4 for every API key that has not been rotated in the last 90 days.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Note: Do not set HTTP referrers to wild-cards (* or *.[TLD] or .[TLD]/) allowing access to any/wide HTTP referrer(s) Do not set IP addresses and referrer to any host (0.0.0.0 or 0.0.0.0/0 or ::0)&lt;/p&gt;&lt;p&gt;From Command Line:&lt;/p&gt;&lt;p&gt;For KMS keys:&lt;/p&gt;&lt;p&gt;1. Update and schedule rotation by ROTATION_PERIOD and NEXT_ROTATION_TIME for each key: gcloud kms keys update new --keyring=KEY_RING --location=LOCATION --next-rotation-time=NEXT_ROTATION_TIME --rotation-period=ROTATION_PERIOD&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="CIS Google Cloud Platform Benchmark" url="https://www.cisecurity.org/benchmark/google_cloud_computing_platform/"/>
          </references>
          <standards>
            <standard ref="1.10" supportedStandardRef="cis-gcp-standard"/>
            <standard ref="1.10" supportedStandardRef="cis-gcp-standard-level-2"/>
            <standard ref="1.15" supportedStandardRef="cis-gcp-standard"/>
            <standard ref="1.15" supportedStandardRef="cis-gcp-standard-level-2"/>
            <standard ref="1.7" supportedStandardRef="cis-gcp-standard"/>
            <standard ref="1.7" supportedStandardRef="cis-gcp-standard-level-2"/>
            <standard ref="A05:2021-Security Misconfiguration" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A6:2017-Security Misconfiguration" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that all keys have a rotation period of 90 days.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:09.394">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-LOG07" name="Use Bucket Lock to configure retention policies" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Enabling retention policies on log buckets will protect logs stored in cloud storage buckets from being overwritten or accidentally deleted. It is recommended to set up retention policies and configure Bucket Lock on all storage buckets that are used as log sinks.&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Logs can be exported by creating one or more sinks that include a log filter and a destination. As Cloud Logging receives new log entries, they are compared against each sink. If a log entry matches a sink's filter, then a copy of the log entry is written to the destination.&lt;/p&gt; 
&lt;p&gt;Sinks can be configured to export logs in storage buckets. It is recommended to configure a data retention policy for these cloud storage buckets and to lock the data retention policy; thus permanently preventing the policy from being reduced or removed. This way, if the system is ever compromised by an attacker or a malicious insider who wants to cover their tracks, the activity logs are definitely preserved for forensics and security investigations.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Set a retention policy on a bucket&lt;/p&gt; 
&lt;p&gt;To add, modify, or remove a retention policy on a bucket:&lt;/p&gt; 
&lt;p&gt;1. In the Google Cloud console, go to the Cloud Storage Browser page.&lt;/p&gt; 
&lt;p&gt;2. In the list of buckets, click on the name of the bucket whose retention policy you want to change.&lt;/p&gt; 
&lt;p&gt;3. Select the Protection tab near the top of the page.&lt;/p&gt; 
&lt;p&gt;4. In the Retention policy section, set your retention policy:&lt;/p&gt; 
&lt;p&gt;a. If no retention policy currently applies to the bucket, click the + Set Retention Policy link. Choose a unit of time and a length of time for your retention period.&lt;/p&gt; 
&lt;p&gt;b. If a retention policy currently applies to a bucket, it appears in the section. Click Edit to modify the retention time or Delete to remove the retention policy entirely.&lt;/p&gt; 
&lt;p&gt;Lock a bucket&lt;/p&gt; 
&lt;p&gt;To lock a bucket and permanently restrict edits to the bucket's retention policy:&lt;/p&gt; 
&lt;p&gt;1. In the Google Cloud console, go to the Cloud Storage Browser page.&lt;/p&gt; 
&lt;p&gt;2. In the list of buckets, click on the name of the bucket that you want to lock the retention policy for.&lt;/p&gt; 
&lt;p&gt;3. Select the Protection tab near the top of the page.&lt;/p&gt; 
&lt;p&gt;4. In the Retention policy section, click the Lock button.&lt;/p&gt; 
&lt;p&gt;The Lock retention policy? dialog box appears.&lt;/p&gt; 
&lt;p&gt;5. Read the Permanent notice.&lt;/p&gt; 
&lt;p&gt;6. In the Bucket name text box, type in the name of your bucket.&lt;/p&gt; 
&lt;p&gt;7. Click Lock policy.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; Locking a bucket is an irreversible action. Once you lock a bucket, you cannot remove the retention policy from the bucket or decrease the retention period for the policy.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="CIS Google Cloud Platform Benchmark" url="https://www.cisecurity.org/benchmark/google_cloud_computing_platform/"/>
            <reference name="Retention policies and retention policy locks" url="https://cloud.google.com/storage/docs/bucket-lock"/>
          </references>
          <standards>
            <standard ref="2.3" supportedStandardRef="cis-gcp-standard"/>
            <standard ref="2.3" supportedStandardRef="cis-gcp-standard-level-2"/>
            <standard ref="A09:2021-Security Logging and Monitoring Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2017-Insufficient Logging-Monitoring" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>	&lt;p&gt;View a bucket's retention policy and lock status&lt;/p&gt;

	&lt;p&gt;To view what, if any, retention policy is set on a bucket and whether that retention policy is locked:&lt;/p&gt;

	&lt;p&gt;1. In the Google Cloud console, go to the Cloud Storage Browser page.&lt;/p&gt;

	&lt;p&gt;2. In the Column display options menu (Column options icon.), make sure Retention policy is checked.&lt;/p&gt;

	&lt;p&gt;3. In the list of buckets, if a bucket has a retention policy, the retention period is displayed in the Protection column for the bucket. If the retention policy is locked, an image of a lock appears directly to the left of the retention period.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:09.183">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-IAM17" name="Use GCP-managed service account keys only for each service account" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;User managed service accounts should not have user-managed keys.&lt;/p&gt;&lt;p&gt;Rationale:&lt;/p&gt;&lt;p&gt;Anyone who has access to the keys will be able to access resources through the service account. GCP-managed keys are used by Cloud Platform services such as App Engine and Compute Engine. These keys cannot be downloaded. Google will keep the keys and automatically rotate them on an approximately weekly basis. User-managed keys are created, downloadable, and managed by users. They expire 10 years from creation.&lt;/p&gt;&lt;p&gt;For user-managed keys, the user has to take ownership of key management activities which include:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Key storage&lt;/li&gt;&lt;li&gt;Key distribution&lt;/li&gt;&lt;li&gt;Key revocation&lt;/li&gt;&lt;li&gt;Key rotation&lt;/li&gt;&lt;li&gt;Protecting the keys from unauthorized users&lt;/li&gt;&lt;li&gt;Key recovery&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Even with key owner precautions, keys can be easily leaked by common development malpractices like checking keys into the source code or leaving them in the Downloads directory, or accidentally leaving them on support blogs/channels.&lt;/p&gt;&lt;p&gt;It is recommended to prevent user-managed service account keys.&lt;/p&gt;&lt;p&gt;Impact:&lt;/p&gt;&lt;p&gt;Deleting user-managed Service Account Keys may break communication with the applications using the corresponding keys.&lt;/p&gt;&lt;p&gt;Remediation:&lt;/p&gt;&lt;p&gt;From Console:&lt;/p&gt;&lt;p&gt;1. Go to the IAM page in the GCP Console using https://console.cloud.google.com/iam-admin/iam&lt;/p&gt;&lt;p&gt;2. In the left navigation pane, click Service accounts. All service accounts and their corresponding keys are listed.&lt;/p&gt;&lt;p&gt;3. Click the service account.&lt;/p&gt;&lt;p&gt;4. Click the edit and delete the keys.&lt;/p&gt;&lt;p&gt;From CLI: To delete a user managed Service Account Key,&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;gcloud iam service-accounts keys delete --iam-account=&amp;lt;user-managed-service-account-EMAIL&amp;gt; &amp;lt;KEY-ID&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="CIS Google Cloud Platform Benchmark" url="https://www.cisecurity.org/benchmark/google_cloud_computing_platform/"/>
          </references>
          <standards>
            <standard ref="1.4" supportedStandardRef="cis-gcp-standard"/>
            <standard ref="1.4" supportedStandardRef="cis-gcp-standard-level-2"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;From Console:&lt;/p&gt;&lt;p&gt;1. Go to the IAM page in the GCP Console using https://console.cloud.google.com/iam-admin/iam&lt;/p&gt;&lt;p&gt;2. In the left navigation pane, click Service accounts. All service accounts and their corresponding keys are listed.&lt;/p&gt;&lt;p&gt;3. Click the service accounts and check if keys exist.&lt;/p&gt;&lt;p&gt;From Command Line:&amp;nbsp;&lt;/p&gt;&lt;p&gt;List All the service accounts:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;gcloud iam service-accounts list&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Identify user-managed service accounts as such account EMAIL ends with iam.gserviceaccount.com&amp;nbsp;&lt;/p&gt;&lt;p&gt;For each user-managed service account, list the keys managed by the user:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;gcloud iam service-accounts keys list --iam-account=&amp;lt;Service Account&amp;gt; --managed-by=user&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;No keys should be listed.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:09.395">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="C-GCP-IAM-03" name="Use secret manager to avoid storing secrets in cloud functions environment variables" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Google Cloud Functions allow you to host serverless code that is executed when an event is triggered, without the requiring the management a host operating system. These functions can also store environment variables to be used by the code that may contain authentication or other information that needs to remain confidential.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Rationale&lt;/strong&gt;:&lt;/p&gt;&lt;p&gt;It is recommended to use the Secret Manager, because environment variables are stored unencrypted, and accessible for all users who have access to the code.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Impact&lt;/strong&gt;:&lt;/p&gt;&lt;p&gt;There should be no impact on the Cloud Function. There are minor costs after 10,000 requests a month to the Secret Manager API as well for a high use of other functions. Modifying the Cloud Function to use the Secret Manager may prevent it running to completion as its environment variables are.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation&lt;/strong&gt;:&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Enable Secret Manager API for your Project&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;From Console&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Within the project you wish to enable, select the Navigation hamburger menu in the top left. Hover over 'APIs &amp;amp; Services' to under the heading 'Serverless', then select 'Enabled APIs &amp;amp; Services' in the menu that opens up.&lt;/li&gt;&lt;li&gt;Click the button '+ Enable APIS and Services'&lt;/li&gt;&lt;li&gt;In the Search bar, search for 'Secret Manager API' and select it.&lt;/li&gt;&lt;li&gt;Click the blue box that says 'Enable'.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;From Command Line&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Within the project you wish to enable the API in, run the following command.&amp;nbsp;&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;gcloud services enable Secret Manager API&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;strong&gt;Reviewing Environment Variables That Should Be Migrated to Secret Manager&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;From Console&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Log in to the Google Cloud Web Portal (https://console.cloud.google.com/)&lt;/li&gt;&lt;li&gt;Go to Cloud Functions&lt;/li&gt;&lt;li&gt;Click on a function name from the list&lt;/li&gt;&lt;li&gt;Click on Edit and review the Runtime environment for variables that should be secrets. Leave this list open for the next step.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;From Command Line&lt;/p&gt;&lt;ul&gt;&lt;li&gt;To view a list of your cloud functions run cloud functions list&lt;/li&gt;&lt;li&gt;For each cloud function run the following command.&amp;nbsp;&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;gcloud functions describe &amp;lt;function_name&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;ul&gt;&lt;li&gt;Review the settings of the buildEnvironmentVariables and environmentVariables. Keep this information for the next step.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;Migrating Environment Variables to Secrets within the Secret Manager&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;From Console&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Go to the Secret Manager page in the Cloud Console.&lt;/li&gt;&lt;li&gt;On the Secret Manager page, click Create Secret.&lt;/li&gt;&lt;li&gt;On the Create secret page, under Name, enter the name of the Environment Variable you are replacing. This will then be the Secret Variable you will reference in your code.&lt;/li&gt;&lt;li&gt;You will also need to add a version. This is the actual value of the variable that will be referenced from the code. To add a secret version when creating the initial secret, in the Secret value field, enter the value from the Environment Variable you are replacing.&lt;/li&gt;&lt;li&gt;Leave the Regions section unchanged.&lt;/li&gt;&lt;li&gt;Click the Create secret button.&lt;/li&gt;&lt;li&gt;Repeat for all Environment Variables&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;From Command Line&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Run the following command with the Environment Variable name you are replacing in the &amp;lt;secret-id&amp;gt;. It is most secure to point this command to a file with the Environment Variable value located in it, as if you entered it via command line it would show up in your shell's command history.&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;gcloud secrets create &amp;lt;secret-id&amp;gt; --data-file="/path/to/file.txt"&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;strong&gt;Granting your Runtime's Service Account Access to Secrets&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;From Console&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Within the project containing your runtime login with account that has the 'roles/secretmanager.secretAccessor' permission.&lt;/li&gt;&lt;li&gt;Select the Navigation hamburger menu in the top left. Hover over 'Security' to under the then select 'Secret Manager' in the menu that opens up.&lt;/li&gt;&lt;li&gt;Click the name of a secret listed in this screen.&lt;/li&gt;&lt;li&gt;If it is not already open, click Show Info Panel in this screen to open the panel. 5.In the info panel, click Add principal. 6.In the New principals field, enter the service account your function uses for its identity. (If you need help locating or updating your runtime's service account, please see the 'docs/securing/function-identity#runtime_service_account' reference.)&lt;/li&gt;&lt;li&gt;In the Select a role dropdown, choose Secret Manager and then Secret Manager Secret Accessor.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;From Command Line&amp;nbsp;&lt;/p&gt;&lt;p&gt;As of the time of writing, using Google CLI to list Runtime variables is only in beta. Because this is likely to change we are not including it here.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Modifying the Code to use the Secrets in Secret Manager&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;From Console&lt;/p&gt;&lt;p&gt;This depends heavily on which language your runtime is in. For the sake of the brevity of this recommendation, please see the '/docs/creating-and-accessing-secrets#access' reference for language specific instructions.&amp;nbsp;&lt;/p&gt;&lt;p&gt;From Command Line&lt;/p&gt;&lt;p&gt;This depends heavily on which language your runtime is in. For the sake of the brevity of this recommendation, please see the' /docs/creating-and-accessing-secrets#access' reference for language specific instructions.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Deleting the Insecure Environment Variables&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Be certain to do this step last. Removing variables from code actively referencing them will prevent it from completing successfully.&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;From Console&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Select the Navigation hamburger menu in the top left. Hover over 'Security' then select 'Secret Manager' in the menu that opens up.&lt;/li&gt;&lt;li&gt;Click the name of a function. Click Edit.&lt;/li&gt;&lt;li&gt;Click Runtime, build and connections settings to expand the advanced configuration options.&lt;/li&gt;&lt;li&gt;Click 'Security'. Hover over the secret you want to remove, then click 'Delete'.&lt;/li&gt;&lt;li&gt;Click Next. Click Deploy. The latest version of the runtime will now reference the secrets in Secret Manager.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;From Command Line&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;gcloud functions deploy &amp;lt;Function name&amp;gt;--remove-env-vars &amp;lt;env vars&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;If you need to find the env vars to remove, they are from the step where 'gcloud functions describe &amp;lt;function_name&amp;gt;' was run.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Default Value:&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;By default Secret Manager is not enabled.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Google Cloud docs: Managing secrets" url="https://cloud.google.com/functions/docs/configuring/env-var#managing_secrets"/>
            <reference name="Google Cloud docs: Secret Manager Overview" url="https://cloud.google.com/secret-manager/docs/overview"/>
          </references>
          <standards>
            <standard ref="1.18" supportedStandardRef="cis-gcp-standard"/>
            <standard ref="1.18" supportedStandardRef="cis-gcp-standard-level-2"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;&lt;strong&gt;Determine if Confidential Information is Stored in your Functions in Cleartext&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;From Console&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Log in to the Google Cloud Web Portal (https://console.cloud.google.com/)&lt;/li&gt;&lt;li&gt;Within the project you wish to audit, select the Navigation hamburger menu in the top left. Scroll down to under the heading 'Serverless', then select 'Cloud Functions'&lt;/li&gt;&lt;li&gt;Click on a function name from the list&lt;/li&gt;&lt;li&gt;Open the Variables tab and you will see both buildEnvironmentVariables and environmentVariables&lt;/li&gt;&lt;li&gt;Review the variables whether they are secrets&lt;/li&gt;&lt;li&gt;Repeat step 3-5 until all functions are reviewed&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;From Command Line&lt;/p&gt;&lt;ul&gt;&lt;li&gt;To view a list of your cloud functions run&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;gcloud functions list&lt;/p&gt;&lt;/blockquote&gt;&lt;ul&gt;&lt;li&gt;For each cloud function in the list run the following command.&amp;nbsp;&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;gcloud functions describe &amp;lt;function_name&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;ul&gt;&lt;li&gt;Review the settings of the buildEnvironmentVariables and environmentVariables. Determine if this is data that should not be publicly accessible.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;Determine if Secret Manager API is 'Enabled' for your Project&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;From Console&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Within the project you wish to audit, select the Navigation hamburger menu in the top left. Hover over 'APIs &amp;amp; Services' to under the heading 'Serverless', then select 'Enabled APIs &amp;amp; Services' in the menu that opens up.&lt;/li&gt;&lt;li&gt;Click the button '+ Enable APIS and Services'&lt;/li&gt;&lt;li&gt;In the Search bar, search for 'Secret Manager API' and select it.&lt;/li&gt;&lt;li&gt;If it is enabled, the blue box that normally says 'Enable' will instead say 'Manage'.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;From Command Line&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Within the project you wish to audit, run the following command.&amp;nbsp;&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;gcloud services list&lt;/p&gt;&lt;/blockquote&gt;&lt;ul&gt;&lt;li&gt;If 'Secret Manager API' is in the list, it is enabled.&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:09.395">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-IAM06" name="Use Security Key for 2-Step Verification for administrator or co-administrator accounts" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Ensure that the users with administrator and co-administrator accounts activate and configure the second factor authentication provided by Google. With 2-Step Verification, you can log into Google with a security key.&amp;nbsp; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  To activate and configure 2 Factor Authentication, you shall follow the following steps: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Go to the 2-Step Verification page section of &lt;a href="https://myaccount.google.com/signinoptions/two-step-verification"&gt;My Account&lt;/a&gt;.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Click Add security key.&lt;/li&gt; 
  &lt;li&gt;Follow the on-screen instructions.&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Google Cloud: mobile account" url="https://support.google.com/accounts/answer/6103523?co=GENIE.Platform%3DAndroid#phone"/>
            <reference name="Google support: answers" url="https://support.google.com/accounts/answer/6103534"/>
          </references>
          <standards>
            <standard ref="A07:2021-Identification and Authentication Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A2:2017-Broken Authentication" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Go to the 2-Step Verification page section of My Account.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Check that 2-Step Verification authentication is enabled and configured correctly.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:09.394">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="ACTIVITY LOGS ALERTS" name="Activity Logs alerts" desc="" library="Google Cloud Platform">
          <threats>
            <threat ref="UNAUTHORIZED-ACCESS-SYSTEMS" name="Attackers access the systems without being detected" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Google Cloud Platform" editable="true">
              <desc>&lt;p&gt;Attackers gain access to the systems and are not detected and consequently, changes made by attackers can not be audited or detected.&lt;/p&gt;</desc>
              <riskRating confidentiality="50" integrity="25" availability="25" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="GOOGLE-MON02">
                  <countermeasures>
                    <countermeasure ref="GOOGLE-MON02A" mitigation="17"/>
                  </countermeasures>
                </weakness>
                <weakness ref="GOOGLE-MON03">
                  <countermeasures>
                    <countermeasure ref="GOOGLE-MON05" mitigation="17"/>
                  </countermeasures>
                </weakness>
                <weakness ref="GOOGLE-MON04">
                  <countermeasures>
                    <countermeasure ref="GOOGLE-MON06" mitigation="16"/>
                  </countermeasures>
                </weakness>
                <weakness ref="GOOGLE-MON05">
                  <countermeasures>
                    <countermeasure ref="GOOGLE-MON07" mitigation="17"/>
                  </countermeasures>
                </weakness>
                <weakness ref="GOOGLE-MON06">
                  <countermeasures>
                    <countermeasure ref="GOOGLE-MON08" mitigation="17"/>
                  </countermeasures>
                </weakness>
                <weakness ref="GOOGLE-RESOURCES-STATUS">
                  <countermeasures>
                    <countermeasure ref="GOOGLE-MON01" mitigation="16"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="GOOGLE-MON01" mitigation="17"/>
                <countermeasure ref="GOOGLE-MON02A" mitigation="17"/>
                <countermeasure ref="GOOGLE-MON05" mitigation="17"/>
                <countermeasure ref="GOOGLE-MON06" mitigation="16"/>
                <countermeasure ref="GOOGLE-MON07" mitigation="16"/>
                <countermeasure ref="GOOGLE-MON08" mitigation="17"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="UNAUTHORIZED-ACCESS-SECURITY-SYSTEMS" name="Attackers gain undetected access to the security system configurations" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Google Cloud Platform" editable="true">
              <desc>Attackers could gain undetected access to the security system configurations and
                                changes made by attackers couldn't be audited or detected.
                            </desc>
              <riskRating confidentiality="50" integrity="50" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="GOOGLE-MON01">
                  <countermeasures>
                    <countermeasure ref="GOOGLE-MON03" mitigation="34"/>
                    <countermeasure ref="GOOGLE-MON04" mitigation="33"/>
                    <countermeasure ref="GOOGLE-MON13" mitigation="33"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="GOOGLE-MON03" mitigation="34"/>
                <countermeasure ref="GOOGLE-MON04" mitigation="33"/>
                <countermeasure ref="GOOGLE-MON13" mitigation="33"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="UNAUTHORIZED-ACCESS-NETWORK" name="Sensitive data is compromised through network access" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Google Cloud Platform" editable="true">
              <desc>Attackers gain undetected access to the network systems and changes made by the
                                attackers couldn't be audited or detected.
                            </desc>
              <riskRating confidentiality="50" integrity="50" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="GOOGLE-MON07">
                  <countermeasures>
                    <countermeasure ref="GOOGLE-MON09" mitigation="34"/>
                    <countermeasure ref="GOOGLE-MON10" mitigation="33"/>
                    <countermeasure ref="GOOGLE-MON11" mitigation="33"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="GOOGLE-MON09" mitigation="34"/>
                <countermeasure ref="GOOGLE-MON10" mitigation="33"/>
                <countermeasure ref="GOOGLE-MON11" mitigation="33"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="AUTHENTICATION" name="Authentication" desc="" library="Google Cloud Platform">
          <threats>
            <threat ref="GOOGLE-LOST-ACCESS-ROOT" name="Attackers gain unauthorized access to the root account due to lack of configuration of the account" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Google Cloud Platform" editable="true">
              <desc>&lt;p&gt;Attackers could gain unauthorized access to the administrator account due to lack of configuration of the account and its security mechanisms, such as modifying credentials and adding/removing user accounts.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="GOOGLE-IAM-01">
                  <countermeasures>
                    <countermeasure ref="GOOGLE-IAM06" mitigation="6"/>
                  </countermeasures>
                </weakness>
                <weakness ref="GOOGLE-MON01">
                  <countermeasures>
                    <countermeasure ref="GOOGLE-IAM09" mitigation="6"/>
                    <countermeasure ref="GOOGLE-IAM10" mitigation="6"/>
                    <countermeasure ref="GOOGLE-IAM11" mitigation="6"/>
                    <countermeasure ref="GOOGLE-IAM12" mitigation="6"/>
                    <countermeasure ref="GOOGLE-IAM13" mitigation="6"/>
                    <countermeasure ref="GOOGLE-IAM14" mitigation="6"/>
                    <countermeasure ref="GOOGLE-IAM15" mitigation="6"/>
                    <countermeasure ref="GOOGLE-IAM16" mitigation="6"/>
                    <countermeasure ref="GOOGLE-IAM17" mitigation="6"/>
                    <countermeasure ref="GOOGLE-IAM18" mitigation="6"/>
                    <countermeasure ref="GOOGLE-IAM19" mitigation="6"/>
                    <countermeasure ref="GOOGLE-IAM20" mitigation="6"/>
                  </countermeasures>
                </weakness>
                <weakness ref="GOOGLE-MON02">
                  <countermeasures>
                    <countermeasure ref="GOOGLE-IAM05" mitigation="16"/>
                  </countermeasures>
                </weakness>
                <weakness ref="LOST-SECURITY-ALERTS">
                  <countermeasures>
                    <countermeasure ref="GOOGLE-GOV01" mitigation="6"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="GOOGLE-GOV01" mitigation="6"/>
                <countermeasure ref="GOOGLE-IAM05" mitigation="16"/>
                <countermeasure ref="GOOGLE-IAM06" mitigation="6"/>
                <countermeasure ref="GOOGLE-IAM09" mitigation="6"/>
                <countermeasure ref="GOOGLE-IAM10" mitigation="6"/>
                <countermeasure ref="GOOGLE-IAM11" mitigation="6"/>
                <countermeasure ref="GOOGLE-IAM12" mitigation="6"/>
                <countermeasure ref="GOOGLE-IAM13" mitigation="6"/>
                <countermeasure ref="GOOGLE-IAM14" mitigation="6"/>
                <countermeasure ref="GOOGLE-IAM15" mitigation="6"/>
                <countermeasure ref="GOOGLE-IAM16" mitigation="6"/>
                <countermeasure ref="GOOGLE-IAM17" mitigation="6"/>
                <countermeasure ref="GOOGLE-IAM18" mitigation="6"/>
                <countermeasure ref="GOOGLE-IAM19" mitigation="6"/>
                <countermeasure ref="GOOGLE-IAM20" mitigation="6"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="GOOGLE-LOST-ACCESS-USER" name="Attackers gain unauthorized access to the user account due to lack of configuration of the account" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Google Cloud Platform" editable="true">
              <desc>&lt;p&gt;Attackers could gain unauthorized access to the user account due to lack of configuration of the account, for example, the security question to reset the password is configured incorrectly.&lt;/p&gt;</desc>
              <riskRating confidentiality="50" integrity="50" availability="50" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="GOOGLE-IAM03">
                  <countermeasures>
                    <countermeasure ref="C-GCP-IAM-01" mitigation="25"/>
                    <countermeasure ref="C-GCP-IAM-02" mitigation="25"/>
                    <countermeasure ref="C-GCP-IAM-03" mitigation="25"/>
                    <countermeasure ref="GOOGLE-IAM01" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-GCP-IAM-01" mitigation="25"/>
                <countermeasure ref="C-GCP-IAM-02" mitigation="25"/>
                <countermeasure ref="C-GCP-IAM-03" mitigation="25"/>
                <countermeasure ref="GOOGLE-IAM01" mitigation="25"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="AUTHORIZATION" name="Authorization" desc="" library="Google Cloud Platform">
          <threats>
            <threat ref="LOSS-CONTROL_ENV" name="Attackers gain unauthorized access to the control of the environment" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Google Cloud Platform" editable="true">
              <desc>&lt;p&gt;Attackers could potentially gain unauthorized access to the control of the environment, due to user accounts - or role groups - not being well defined and configured. As a consequence attackers may be able to make changes without root approval.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="75" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="GOOGLE-EXPIRATION-DATE">
                  <countermeasures>
                    <countermeasure ref="GOOGLE-IAM08" mitigation="20"/>
                  </countermeasures>
                </weakness>
                <weakness ref="GOOGLE_IAM-02">
                  <countermeasures>
                    <countermeasure ref="GOOGLE-IAM02" mitigation="20"/>
                    <countermeasure ref="GOOGLE-IAM03" mitigation="20"/>
                    <countermeasure ref="GOOGLE-IAM04" mitigation="20"/>
                    <countermeasure ref="GOOGLE-IAM07" mitigation="20"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="GOOGLE-IAM02" mitigation="20"/>
                <countermeasure ref="GOOGLE-IAM03" mitigation="20"/>
                <countermeasure ref="GOOGLE-IAM04" mitigation="20"/>
                <countermeasure ref="GOOGLE-IAM07" mitigation="20"/>
                <countermeasure ref="GOOGLE-IAM08" mitigation="20"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="LOGGING AND MONITORING" name="Logging and Monitoring" desc="" library="Google Cloud Platform">
          <threats>
            <threat ref="OWASP-A10-2017" name="Exploitation of insufficient logging and monitoring" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Google Cloud Platform" editable="true">
              <desc>	&lt;p&gt;Exploitation of insufficient logging and monitoring is the bedrock of nearly every major incident. Attackers rely on the lack of monitoring and timely response to achieve their goals without being detected.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="C-GCP-LOG-01" mitigation="12"/>
                    <countermeasure ref="C-GCP-LOG-02" mitigation="12"/>
                    <countermeasure ref="C-GCP-LOG-03" mitigation="12"/>
                    <countermeasure ref="GOOGLE-LOG01" mitigation="16"/>
                    <countermeasure ref="GOOGLE-LOG04" mitigation="12"/>
                    <countermeasure ref="GOOGLE-LOG05" mitigation="12"/>
                  </countermeasures>
                </weakness>
                <weakness ref="GOOGLE-LOGS03">
                  <countermeasures>
                    <countermeasure ref="GOOGLE-LOG06" mitigation="12"/>
                    <countermeasure ref="GOOGLE-LOG07" mitigation="12"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-GCP-LOG-01" mitigation="12"/>
                <countermeasure ref="C-GCP-LOG-02" mitigation="12"/>
                <countermeasure ref="C-GCP-LOG-03" mitigation="12"/>
                <countermeasure ref="GOOGLE-LOG01" mitigation="16"/>
                <countermeasure ref="GOOGLE-LOG04" mitigation="12"/>
                <countermeasure ref="GOOGLE-LOG05" mitigation="12"/>
                <countermeasure ref="GOOGLE-LOG06" mitigation="12"/>
                <countermeasure ref="GOOGLE-LOG07" mitigation="12"/>
              </countermeasures>
              <customFields>
                <customField ref="Mitre" value=""/>
                <customField ref="Records" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="NETWORKING" name="Networking" desc="" library="Google Cloud Platform">
          <threats>
            <threat ref="UNAUTHORISED-CONNECTION" name="Attackers gain unauthorized connection to the resources" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Google Cloud Platform" editable="true">
              <desc>Attackers could gain unauthorized connection to the resources through misconfigured
                                ports or security network configurations.
                            </desc>
              <riskRating confidentiality="25" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="GOOGLE-VNET01">
                  <countermeasures>
                    <countermeasure ref="GOOGLE-NET01" mitigation="16"/>
                    <countermeasure ref="GOOGLE-NET02" mitigation="12"/>
                    <countermeasure ref="GOOGLE-NET03" mitigation="12"/>
                    <countermeasure ref="GOOGLE-NET04" mitigation="12"/>
                    <countermeasure ref="GOOGLE-NET05" mitigation="12"/>
                    <countermeasure ref="GOOGLE-NET06" mitigation="12"/>
                    <countermeasure ref="GOOGLE-NET07" mitigation="12"/>
                    <countermeasure ref="GOOGLE-NET08" mitigation="12"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="GOOGLE-NET01" mitigation="16"/>
                <countermeasure ref="GOOGLE-NET02" mitigation="12"/>
                <countermeasure ref="GOOGLE-NET03" mitigation="12"/>
                <countermeasure ref="GOOGLE-NET04" mitigation="12"/>
                <countermeasure ref="GOOGLE-NET05" mitigation="12"/>
                <countermeasure ref="GOOGLE-NET06" mitigation="12"/>
                <countermeasure ref="GOOGLE-NET07" mitigation="12"/>
                <countermeasure ref="GOOGLE-NET08" mitigation="12"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="5913169f-48e5-4f98-aa97-9adee14789d5" diagramComponentId="fac5ae51-d2f9-45f5-85e8-71d74630feff" ref="bd766a74-1cd9-4229-a4bb-7942ef026c95" name="Microservice" desc="" library="microservices-library-dev" parentComponentRef="ec9c8d86-b4fb-43ab-8c48-323781a7c9a1" componentDefinitionRef="microservice">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses>
        <weakness ref="APP-AS-1" name="Application secrets at risk of exposure" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
  Ensuring that there is no sensitive data (such as credentials) in the application code or in configuration files is a challenge because the environments that containers run in have varying security controls and may provide access to unintended parties.&amp;nbsp; Developers need to consider the new threats brought about by multi-tenancy and shared platforms.&amp;nbsp; Not doing so can result in exposure of sensitive data.&amp;nbsp; 
&lt;/div&gt;Encryption methods are only useful if they are robust.&amp;nbsp; This is a particular challenge in container architectures as there are many competing interests and constraints which must be accounted for.&amp;nbsp; It is important that developers take ownership of encryption, while also working within the needs and requirements of the framework. Because of the complexity of containerized systems, and the general tendency of organizations to place security in the hands of operators, encryption of application secrets may be overlooked by developers.&amp;nbsp; This can result in exploitable vulnerabilities which administrators of the system are unaware of.&amp;nbsp;Some of the challenges of securing containerized systems include the variety of secrets which must be protected, and the fact that the available methods for protection may not be consistent between environments.&amp;nbsp; Organizations should be aware of these challenges and implement robust mechanisms which anticipate the problems inherent and provide mitigating strategies.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:07.813">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="APP-AA-1" name="Cloud-native environments may introduce risks to the microservice architecture" state="0" impact="100" issueId="" issueLink="">
          <desc>The use of cloud providers introduces many capabilities to container architectures, while also streamlining workflows and reducing the necessity of managing hardware.&amp;nbsp; However it also increases complexity, and this can make it more difficult to identify and mitigate vulnerabilities.&amp;nbsp; It can also result in a lack of ownership for security issues as developers assume that other parties are taking responsibility. Applications and containers which run or on otherwise access cloud providers must identify themselves.&amp;nbsp; Credentials and access control must be securely managed in order to prevent secret exposure and privilege escalation.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:07.813">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="IM-G-1" name="Code promotion across environments may introduce vulnerabilities" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
  Code and image provenance is a developer and application owner concern; verification requires certification and key management across the code promotion path. This can be a challenge as multiple parties and certificate owners may be involved. The absence can result in application version mismatches or running tampered images. 
&lt;/div&gt;&lt;div&gt;
  Developers and operators need to be equally engaged in the process of code promotion across application container environments. Today, developers can push code across application container environments without the need for operator interaction.&amp;nbsp; Systems should have robust policies and procedures in place to ensure that images are secured by developers at all stages of the build chain. 
&lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:08.118">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CO-G-1" name="Contention issues arise due to the elasticity of workload and dynamic resource requests" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
   Ensuring resource availability as needed to support workloads is a challenge.&amp;nbsp; This is because of the dynamic use and availability of resources in a potentially shared environment, combined with the possibly unpredictable use of an application. The absence can result in either the CMP being unable to allocate appropriate resources for an application container, or a resource shortage within the CMP. 
 &lt;/div&gt;&lt;div&gt;
  Resources usage which is not properly managed by developers will affect the usage of others in a shared environment. The absence may result in a DOS-style scenario. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:07.558">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="IM-G-2" name="Image contents may not be secure" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
  Images must have no known vulnerabilities or malicious code. Developers must help to ensure images have not been tampered with as they move from development to production. Applications of this feature include scanning images for vulnerabilities and malicious code and using image signing and validation mechanisms. 
&lt;/div&gt;&lt;div&gt;
  Ensuring that only the required components are packaged inside the image can be a challenge due to the complexity of applications. If this is not carefully managed it can result in the compromise of an unnecessary component.&amp;nbsp;&amp;nbsp; 
&lt;/div&gt;&lt;div&gt;
  Ensuring third-party components are free of vulnerabilities and updated as needed can be a challenge due to differing update frequencies by third-party vendors. This can result in the compromise of third-party components.&amp;nbsp; OS package managers are a particular challenge in this regard due to the large number of updates and downloads they maintain, and the fact that they often have unrestricted access to systems.&amp;nbsp; 
&lt;/div&gt;&lt;div&gt;
  Developers and operators need to be equally engaged in the process of code promotion across application container environments.&amp;nbsp; Developers should not assume that system wide security settings will mitigate potential application vulnerabilities.&amp;nbsp; Rather, they should ensure that their images have no known vulnerabilities or malicious code, and that they have not been tampered with as they move from development to production. 
&lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:08.118">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CO-N-1" name="Insecure networking settings may be exploited to gain access to containers or hosts" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
  Monitoring network activity and providing the infrastructure to do so can present a challenge because of the lack of network tooling and data storage. The absence can result in the exposure of sensitive information and diminished incident response and detection capabilities. 
&lt;/div&gt;&lt;div&gt;
  In container networking, communications between containers and hosts must be secured, network traffic must be monitored, and access to the network traffic, resources, and configurations must be controlled.&amp;nbsp; In terms of applications, communications between containers affect access control, limiting access to network traffic, resources, and configurations (leveraging network namespace). Other outcomes include isolating the container interfaces, monitoring network activity, and securing communications between containers via SSL/TLS or VPN. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:07.557">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CO-D-1" name="Insufficient scaling of container resources may lead to inefficient resource utilization" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
  Ensuring resource scaling requests take priority over other containers may provide a challenge.&amp;nbsp; This is due to complexity and implementation of the CMP to allow such prioritization. The absence can result in priority applications not being able to scale for user workloads. 
&lt;/div&gt;&lt;div&gt;
  It is a challenge for developers to define application performance profiles. Predictive application workload modeling is a complex task often substituted by a "common practice" or, equally precise, "by analogy".&amp;nbsp; This is largely due to lack of tooling in development environments. Both are likely to lead to inefficient resource utilization. 
&lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:07.557">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="APP-LM-1" name="Lack of continuous monitoring can result in application version mismatches and system availability issues" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
  The ephemeral nature of application containers increases the necessity of reliable and centralized monitoring of platform, host, and containers.&amp;nbsp; It is essential to ensure that container runtime actions and events are monitored and logged in order to allow timely identification and mitigation of problems and threats. 
&lt;/div&gt;&lt;div&gt;
  There may be a challenge for developers to understand which container versions are running and where. This information needs to be easily and quickly digestible by appropriate parties. The absence can result in application version mismatches and system availability issues. 
&lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:07.813">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="APP-G-1" name="Lifecycle events prevent secure startup and shutdown of applications" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
  Developing a containerized application that can be scaled up or down without notice is a challenge because of the extra effort required to design and implement the application in a manner where it can gracefully handle such scaling events while maintaining a secure state.&amp;nbsp; &amp;nbsp;It is a more robust approach to ensure that stateful containerized applications are aware of container scaling events to ensure transitions between secure states. 
&lt;/div&gt;&lt;div&gt;
  In an ideal world, either application containers are stateless, or the applications have been developed with clustering technologies to attach and release neighbors as they start and are terminated.&amp;nbsp; Some use cases, though, will have containers that have not been developed in such a manner, or which contain legacy applications that have migrated to containers. Such applications running inside a container may not be aware of pending lifecycle events issued by a CMP such as container start/stop/scale.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The containerized application should have an opportunity to be informed of the pending container's lifecycle events to manage its own lifecycle accordingly. This is essential to ensure the application's secure startup and shutdown.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:07.813">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CO-G-2" name="Mismanagement of container volumes can compromise underlying architecture" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
   In container volume management, it is essential to ensure the container has need-only access to data volumes and uses dedicated storage resources for runtime operations.&amp;nbsp; In the application, it is vital to ensure that access control exists for file system resources and raw storage devices, and that data is encrypted at rest in the data volumes.&amp;nbsp; Applications directly mounting a host directory should be avoided. 
 &lt;/div&gt;Building an image that minimizes using shared container volumes is imperative due to the risk of exposing sensitive data to the host or other containers, and the current reliance on sharing information with containers. This can result in exposure of sensitive data.&amp;nbsp;&amp;nbsp; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt;
   Building an image that does not share the host filesystem is equally crucial because exposing the host filesystem can result in compromising the underlying infrastructure, and other containers that share the same environment.&amp;nbsp; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:07.556">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="APP-LM-2" name="The complexity of container architectures can make logging and monitoring difficult to implement" state="0" impact="100" issueId="" issueLink="">
          <desc>Ensuring that coding policies include logging capabilities at the planning and design stages is a challenge due to the lack of presence of security concerns in the design phase and tooling.&amp;nbsp; In addition, there are many logging features which may be implemented in microservices and an absence of clear policies can result in lack of ownership from key parties, including developers.&amp;nbsp;&amp;nbsp;&lt;div&gt;
  Usually application logging is added after the fact as a response to an incident or audit.&amp;nbsp; Ensuring that application logs, starting with authentication logs, are captured for existing applications is a challenge due to lack of resources to modify the application and necessary guidance to do so.&amp;nbsp;&amp;nbsp;This will result in diminishing incident response and detection capabilities.&amp;nbsp; 
&lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:07.812">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="CSA-SACA-3.1.5:1" name="Applications must use secure network communication protocols" issueId="" issueLink="" platform="" cost="1" risk="61" state="Recommended" owner="JamesRabe" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Network traffic generated by the containers should maintain confidentiality regarding the applications and management by utilizing proper encryption protocols (i.e., SSL/TLS, IPSec). 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Selecting libraries that support secure communications to provide encryption and maintain confidentiality prevents information spillage and network traffic tampering. Tampering of network traffic may result in system compromise. 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.5" supportedStandardRef="csa-container-architectures"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Identify any communications in your application which will be sent as network traffic and ensure that encryption protocols have been applied.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:07.499">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="IM-G-2.2.1" name="Avoid using images with OS package managers" issueId="" issueLink="" platform="" cost="1" risk="78" state="Recommended" owner="JamesRabe" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Images with OS package managers or shells could contain unknown vulnerabilities.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Package managers are normally run with unrestricted access in order to allow them to modify critical system software. The package manager's actions, therefore, affect the entire system.&amp;nbsp;&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  If you must include OS packages, remove the package manager before deploying the container.&amp;nbsp; The following steps may also help mitigate the risk: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Use repositories you trust. Use only mirrors that belong to reputable organizations.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Manually update your systems (and local mirror caches).&lt;/li&gt; 
  &lt;li&gt;Use signed repository metadata.&lt;/li&gt; 
  &lt;li&gt;Use HTTPS for mirror communication.&lt;/li&gt; 
  &lt;li&gt;Use package managers that implement metadata expiration.&lt;/li&gt; 
  &lt;li&gt;Use distributions that properly make use of the package manager's security features.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="StackRox: Kubernetes Security 101" url="https://www.stackrox.com/post/2020/05/kubernetes-security-101/"/>
            <reference name="cs.arizona.edu: Attacks on Package Managers" url="https://www2.cs.arizona.edu/stork/packagemanagersecurity/attacks-on-package-managers.html"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Follow the steps for your particular OS to identify if package managers are installed on the container.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:08.047">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SACA-3.1.7:1" name="Create and follow coding policies to include logging capabilities" issueId="" issueLink="" platform="" cost="1" risk="62" state="Recommended" owner="JamesRabe" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  An application should provide logs regarding authentication, authorization, actions, and failures. The developer should include this capability as part of planning and design phases. For new applications, the developer should create and follow coding policies to include logging capabilities at the planning and design stages.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;&lt;br&gt;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Logging application authentication, authorization, actions, and failures provides a trail of evidence to follow when an investigation takes place and a root cause needs to be established. 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.7" supportedStandardRef="csa-container-architectures"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Review the logging capabilities for your application and ensure they have been planned and designed in a way which is consistent with the features of the container architecture.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:07.731">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SACA-3.1.10:2" name="Create common libraries for developers to handle sensitive data and secrets in the backend application code" issueId="" issueLink="" platform="" cost="1" risk="78" state="Recommended" owner="JamesRabe" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  To enable consistent ways of addressing the handling of sensitive data and secrets within backend application code, a common set of libraries should be provided to developers. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Application developers are not necessarily security developers and should devote time to developing application features, not security. Security that is required within applications should be easy to use and made clear, so that minimum effort is spent and consistency across applications is achieved. 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.10" supportedStandardRef="csa-container-architectures"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Verify that libraries exist for securing sensitive data and that they have been applied to your applications.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:07.732">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SACA-3.1.9:1" name="Developers should receive sufficient training on volume management" issueId="" issueLink="" platform="" cost="1" risk="78" state="Recommended" owner="JamesRabe" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Developers should receive sufficient training to ensure development of applications that minimize the need to use shared container volumes and that do not require any access to host directories. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div style=""&gt;
   Shared volumes can result in exposure of sensitive data. Images which share the host volumes or filesystem can result in the compromise of the underlying infrastructure and other containers sharing the same environment. Avoiding these configurations is a challenge, which is why developer training is essential. 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.9" supportedStandardRef="csa-container-architectures"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Ensure that relevant training is available and up to date.&amp;nbsp;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:07.500">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SACA-3.1.17:3" name="Encrypt the sensitive application and create a container entry point application that decrypts and executes the main application" issueId="" issueLink="" platform="" cost="1" risk="78" state="Recommended" owner="JamesRabe" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  By encrypting the sensitive application, the risk of unintended exposure of the sensitive application can be mitigated. This allows the container image (and sensitive application) to be stored, transmitted, or shared without unauthorized exposure. Encryption and decryption of the application should be treated as any other data encryption/decryption process. For sensitive applications, developers should encrypt the sensitive application, then create a container entry point application that decrypts and executes the main application. 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.17" supportedStandardRef="csa-container-architectures"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that an appropriate level of encryption has been applied to any sensitive data in the application.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:07.732">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SACA-3.1.12:1" name="Ensure sustainable system performance by balancing system resources" issueId="" issueLink="" platform="" cost="1" risk="73" state="Recommended" owner="JamesRabe" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Working with the operator and architect, the developer should ensure that the binaries and libraries are optimized to operate in a containerized infrastructure. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Default configurations or those that are suitable for non-containerized systems may conflict with the needs of container architectures.&amp;nbsp; Developers need to be aware of the environmental impacts on their applications. 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.12" supportedStandardRef="csa-container-architectures"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Review optimization configurations to ensure they are compliant with the needs or policies of the container architecture.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:07.500">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SAC-3.1.1:1" name="Establish a root of trust" issueId="" issueLink="" platform="" cost="1" risk="78" state="Recommended" owner="JamesRabe" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  A public key infrastructure (PKI) allows creation and management of a hierarchy of digital certificates for encryption and digital signatures. A PKI may already exist in an organization-certificates from this new or existing system can be used to sign container images and later verify their provenance and integrity. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  To ensure the integrity of the build chain, the developer must have the ability to digitally sign and provide a digital signature for the code and/or binary artifacts that will be promoted between environments or to the next promotion phase. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  By signing a container image with a certificate that is part of a PKI, container management platform (CMP), users can easily verify the source of an image. This is important as once the source of the image is determined, users can ensure that the image has been through appropriate scrutiny before being promoted for production use. 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.1" supportedStandardRef="csa-container-architectures"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that all existing images are appropriately signed or verified, using keys provided by your organization.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:08.048">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="IM-G-2.3.1" name="Harden all applications in an image" issueId="" issueLink="" platform="" cost="1" risk="78" state="Recommended" owner="JamesRabe" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;span style="line-height: 107%; font-size: 14.6667px;"&gt;&lt;font face="Times New Roman, serif"&gt; 
   &lt;div style=""&gt; 
    &lt;div style=""&gt; 
     &lt;b&gt;Description:&lt;/b&gt; 
    &lt;/div&gt; 
    &lt;div style=""&gt;
      Ensure that applications are secure and follow best practices. 
    &lt;/div&gt; 
    &lt;div style=""&gt; 
     &lt;br&gt; 
    &lt;/div&gt; 
    &lt;div style=""&gt; 
     &lt;b&gt;Rationale:&lt;/b&gt; 
    &lt;/div&gt; 
    &lt;div style=""&gt;
      When deploying applications in a containerized system, vulnerabilities that compromise the application can in turn compromise the entire architecture.&amp;nbsp; This is a result of the way containers and pods communicate and access resources throughout the whole cluster. 
    &lt;/div&gt; 
    &lt;div style=""&gt; 
     &lt;br&gt; 
    &lt;/div&gt; 
    &lt;div style=""&gt; 
     &lt;b&gt;Remediation:&lt;/b&gt; 
    &lt;/div&gt; 
    &lt;div style=""&gt;
      Analyze source code regularly to ensure it is following best practices to avoid vulnerabilities.&amp;nbsp; &amp;nbsp;Continuously test your application against common attack practices, like SQL injection, DDoS attack, etc. There are various dynamic analysis tools available to assist.&amp;nbsp; 
    &lt;/div&gt; 
   &lt;/div&gt;&lt;/font&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;span style="font-family: &amp;quot;Times New Roman&amp;quot;, serif; font-size: 11pt;"&gt;&lt;br&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div style=""&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="The New Stack: A Security Checklist for Cloud Native Kubernetes Environments" url="https://thenewstack.io/a-security-checklist-for-cloud-native-kubernetes-environments/"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Use a reliable tool such as Veracode or Synopsys to analyze source code for vulnerabilities before deploying.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:08.048">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SACA-3.1.17:2" name="Identify a data at rest (DAR) solution" issueId="" issueLink="" platform="" cost="1" risk="78" state="Recommended" owner="JamesRabe" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The developer should utilize a DAR solution, if at all possible, that has been FIPS 140-2 validated. The developer should also analyze the application programming interface (API) and a compatible key management system (KMS).&amp;nbsp; The developer should also utilize the latest advanced encryption standard (AES) with the highest possible key length. Developers also have to take into account if the solution has been validated by an impartial third party and if the solution is viable in the intended operational environment. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  With a FIPS-validated solution and a compatible KMS, there is some third party validation that the solution is secure and thus a higher level of assurance.&amp;nbsp; Robust use of AES will ensure data confidentiality. 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.17" supportedStandardRef="csa-container-architectures"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that encryption is included and that the level is appropriate to the application security needs and the wider system policies.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:07.732">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SACA-3.1.7:2" name="Implement plans to capture application logs" issueId="" issueLink="" platform="" cost="1" risk="62" state="Recommended" owner="JamesRabe" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  An existing application should provide logs regarding authentication, authorization, actions, and failures. If any of these logging items have not been implemented, developers should provide these capabilities as part of the maintenance phase. For existing applications, the developer should implement plans to capture application logs, starting with authentication logs 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Logging application authentication, authorization, actions, and failures provides a trail of evidence to follow when an investigation takes place and a root cause needs to be established. 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.7" supportedStandardRef="csa-container-architectures"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Review the logging capabilities for your application and ensure they have been applied in a way which is consistent with the features of the container architecture.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:07.732">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SACA-3.1.6:3" name="Include only necessary components inside the image" issueId="" issueLink="" platform="" cost="1" risk="78" state="Recommended" owner="JamesRabe" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Developers should trim down images to include only necessary components. It is preferred to use a baseline image with minimal set of packages over a full OS distribution.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Removing unnecessary components from the image will reduce the number of potentially outdated or unpatched packages and therefore reduce the number of security vulnerabilities. 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.6" supportedStandardRef="csa-container-architectures"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Perform a suitable scan based on your operating system for extraneous tools and components.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:08.048">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SACA-3.1.11:1" name="Left the application in an unknown state if a containerized application is unaware of the container's transitions" issueId="" issueLink="" platform="" cost="1" risk="73" state="Recommended" owner="JamesRabe" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The CMP should provide the encapsulated application an opportunity to perform a graceful transition to a known secure state. The conventional solution is to allow an application to be notified of the container lifecycle events. Resources, freed after container's removal, should be released back to the pool in a well known state and containers should be allowed to log any state changing events. The container's lifecycle (start/stop/scaled) is managed by CMP. From a developer's perspective, the application could be left in an unknown state if a containerized application is unaware of the container's transitions 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  It is essential to inform the application of the container's lifecycle events, so that it may take appropriate action to ensure a secure startup and shutdown. 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.11" supportedStandardRef="csa-container-architectures"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Review the container's stop start process and ensure that any related and relevant configurations have been applied to your applications.&amp;nbsp;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:07.732">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="APP-AA-1.1.2" name="Limit credential exposure" issueId="" issueLink="" platform="" cost="1" risk="73" state="Recommended" owner="JamesRabe" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Harden credentials before deploying applications 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Plain text (non-encrypted) credentials (account passwords, SSH Keys, DevOps secrets, etc.) may be embedded into source code because it helps to simplify deployments at scale.&amp;nbsp; This poses formidable security risks that are routinely exploited by malware and hackers. In some cases, a threat actor may insert hardcoded credentials to create a backdoor, allowing them persistent access to a device, application, or system. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Hardcoded credentials are favored cyberattack targets for password guessing exploits, allowing hackers and malware to hijack systems, and software. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Don't define credentials in your application code. Use managed identities for cloud resources to let your pod request access to cloud provider.&amp;nbsp; Avoid the use of fixed or shared credentials. 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="BeyondTrust: Hardcoded and Embedded Credentials are an IT Security Hazard" url="https://www.beyondtrust.com/blog/entry/hardcoded-and-embedded-credentials-are-an-it-security-hazard-heres-what-you-need-to-know"/>
            <reference name="Microsoft docs: Best practices for pod security in Azure Kubernetes Service" url="https://docs.microsoft.com/en-us/azure/aks/developer-best-practices-pod-security"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Review application code before deployment for embedded credentials.&amp;nbsp; Carry out pen testing of applications to find overlooked credential vulnerabilities.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:07.732">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SACA-3.1.10:1" name="Provide training and best practices guidance to developers" issueId="" issueLink="" platform="" cost="1" risk="78" state="Recommended" owner="JamesRabe" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Backend Developers should be informed and trained on threats arising from multi-tenancy on public clouds.&amp;nbsp; They also need to be trained and provided with templates for how to use the secret management feature within their apps so they avoid the practice of hard-coding static secrets within application code. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Backend Developers are accustomed to the practice of baking sensitive information into server code from the days when server-side was considered trusted environment. Raising the awareness of the nuances and threats present in current public cloud environments helps drive in the need to avoid such practices 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.10" supportedStandardRef="csa-container-architectures"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Ensure that relevant training is available and up to date.&amp;nbsp;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:07.732">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="IM-G-2.1.1" name="Remove components which are only required for development" issueId="" issueLink="" platform="" cost="1" risk="78" state="Recommended" owner="JamesRabe" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Tools that are essential during application development can create security risks in deployment 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Any unnecessary component is another potential entrance point for an attacker.&amp;nbsp; Debuggers and common tools like Curl that are useful to attackers should not be included in images in deployment. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Perform an analysis of the entire container before deployment and remove any components or functions you do not need. 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="StackRox: Kubernetes Security 101" url="https://www.stackrox.com/post/2020/05/kubernetes-security-101/"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Perform a suitable scan based on your operating system for extraneous tools and components.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:08.048">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="IM-G-2.3.2" name="Secure any dependencies" issueId="" issueLink="" platform="" cost="1" risk="78" state="Recommended" owner="JamesRabe" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Ensure that any dependencies used by applications are also secure. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;&lt;br&gt;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  It is hard to keep to track of all the packages an application uses and to make sure they are not vulnerable.&amp;nbsp; Even if you ensure that your own application is free of vulnerabilities, if the base packages and dependencies are not secure, the container could still be vulnerable to attacks. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Regularly perform a full dependency analysis for code to uncover your open source and other dependencies for any vulnerabilities they contain. 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="IBM: Journey to Kubernetes Security" url="https://developer.ibm.com/technologies/containers/articles/journey-to-kubernetes-security/"/>
            <reference name="snyk: Kubernetes Security" url="https://snyk.io/learn/kubernetes-security/"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Use a suitable vulnerability scanner to carry out a full dependency analysis for code to uncover your dependencies and any vulnerabilities they contain.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:08.049">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="IM-G-2.1.2" name="Secure the container base image" issueId="" issueLink="" platform="" cost="1" risk="78" state="Recommended" owner="JamesRabe" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;&lt;b&gt;Description: &lt;/b&gt;&lt;br&gt;Ensure that container images are built using secure and approved base images&lt;br&gt;&lt;br&gt;&lt;b&gt;Rationale:&lt;/b&gt;&lt;br&gt;Vulnerabilities in software packages can be exploited by hackers or malicious users to obtain unauthorized access to local or cloud resources. &lt;br&gt;&lt;br&gt;&lt;b&gt;Remediation:&lt;/b&gt;&lt;br&gt;Select minimal base images, add only what you require, and scan them for vulnerabilities.&amp;nbsp; &amp;nbsp;Ideally, the tool you choose for this function should be aware of your base image choice and alert you when there is an updated version of your base image, or if there are alternate base images that can reduce vulnerabilities.&lt;br&gt;&lt;br&gt;Only deploy authorized container images that you've analyzed, scanned, and signed (i.e. Software Supply Chain Security). Grafeas, TUF, and Notary can help here.&lt;br&gt;&lt;br&gt;Ensure that only images from image registries on allow lists are used to launch containers in your Kubernetes environment.&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Peter Benjamin: Kubernetes Security Best-Practices" url="https://dev.to/petermbenjamin/kubernetes-security-best-practices-hlk"/>
            <reference name="StackRox: Kubernetes Security 101" url="https://www.stackrox.com/post/2020/05/kubernetes-security-101/"/>
            <reference name="snyk: Kubernetes Security" url="https://snyk.io/learn/kubernetes-security/"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;&lt;font face="Times New Roman, serif"&gt;Please follow your 3rd party image scanning provider's guidelines for enabling Image Scanning.&lt;/font&gt;&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:08.049">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SACA-3.1.6:1" name="Sign images as part of the image build process and validate images before use" issueId="" issueLink="" platform="" cost="1" risk="78" state="Recommended" owner="JamesRabe" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Images should be signed as part of the build process and validated before used. Signing and validation can be achieved through GNU Privacy Guard (GPG) signatures on image contents or through similar methods. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Digital signing of image content at build time and validation of the signed data before usage ensures that image data cannot be tampered with between build and run time. 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.6" supportedStandardRef="csa-container-architectures"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Review your applications to ensure that the appropriate signing has taken place.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:08.049">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SACA-3.1.3:1" name="Use clear versioning schemes to identify application versions running in containers" issueId="" issueLink="" platform="" cost="1" risk="62" state="Recommended" owner="JamesRabe" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  By defining and using an accepted versioning scheme, a development team can have version numbers automatically implemented as part of a build process. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  By applying versions either to a container name, tag, or label, the developer is then able to easily identify application versions running in containers. 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.3" supportedStandardRef="csa-container-architectures"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Review container names, tags, or labels to check that they contain version numbers in line with your organizational or system policies.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:07.732">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="APP-AA-1.1.1" name="Use IAM for access control" issueId="" issueLink="" platform="" cost="1" risk="73" state="Recommended" owner="JamesRabe" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;div&gt; 
  &lt;b&gt;Description:&lt;/b&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   Implement authentication and access control with the Identity and Access Management (IAM) service provided by the cloud provider. 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;b&gt;Rationale:&lt;/b&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   Applications which have access to the full scope of the cloud provider may perform actions outside of their scope.&amp;nbsp; This can be exploited by attackers to gain access to large areas of the cluster. 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;b&gt;Remediation:&lt;/b&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   Use IAM roles to provide fine-grained access.&amp;nbsp; Assign roles only the specific amount of resources they need, or allow them&amp;nbsp; to perform only a particular amount of activities. 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="IBM: Journey to Kubernetes Security" url="https://developer.ibm.com/technologies/containers/articles/journey-to-kubernetes-security/"/>
            <reference name="we45: Security Essentials for a Developer - Kubernetes" url="https://we45.com/blog/security-essentials-for-a-developer-kubernetes/"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Use the relevant tools for your cloud provider to audit the use of IAM roles in applications.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:07.732">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SACA-3.1.17:1" name="Use standard, commonly available authentication systems" issueId="" issueLink="" platform="" cost="1" risk="78" state="Recommended" owner="JamesRabe" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  When either data or applications are encrypted within a container, having a reliable method to authorize use of encryption keys is required. Alternatively, applications must be written to support multiple authentication methods, introducing unnecessary complexity. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  By using common authentication methods, this ensures a predictable ability to authenticate and authorize the use of encryption keys across CMPs.&amp;nbsp; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.17" supportedStandardRef="csa-container-architectures"/>
            <standard ref="K06 - Broken Authentication" supportedStandardRef="owasp-kubernetes-top-10-2022"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Verify that an encryption policy or standard exists for your organization, and that it has been applied.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:07.733">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SACA-3.1.6:2" name="Use vulnerability scanning tools as part of the development process" issueId="" issueLink="" platform="" cost="1" risk="78" state="Recommended" owner="JamesRabe" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Developers should use vulnerability scanning tools as part of the development process and the CI pipeline, and integrate a vulnerability assessment into the build process. They will also want to consider failing a build if the vulnerability assessment fails. Once a vulnerability is identified, apply security patches to the vulnerable component and rebuild the image. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  A vulnerability scanner will identify and alert on the use of third-party components with known security vulnerabilities. Applying vulnerability scanning as part of the development cycle improves the security quality of the images, since well-known vulnerabilities are identified and patched before software gets into runtime environment. 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.6" supportedStandardRef="csa-container-architectures"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check if a protocol exists for vulnerability scanning in your organization and, if so, that it has been utilized.&amp;nbsp; If one does not exist, use one of the recommended tools to ensure that your own applications and containers do not contain vulnerabilities.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:08.049">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SACA-3.1.14:1" name="Utilize resource control features to orchestrate intra-container resource utilization, prioritization and allocation thresholds" issueId="" issueLink="" platform="" cost="1" risk="62" state="Recommended" owner="JamesRabe" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Developers should expect the presence of horizontal infrastructure scaling capability but should avoid the need for vertical scaling by ensuring that the application can function within the parameters established by the configuration management team. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The developer must obtain the resource utilization and hardening parameters and incorporate those configurations into the software development environment and testing scripts. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The application developer must accept that the application under development will not have on-hand the entirety of computing resources available in the production environment. Even in the presence of auto-scale, auto-scaling capability has limits and does not scale out infinitely.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Without testing application functions within defined production parameters, the risk of poor application performance goes up, not down. Proper configuration of resource and security functionality as appropriate to the CMP in use ensures that a resource consumption fault or runaway container processes do not affect adjacent containers.&amp;nbsp; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.14" supportedStandardRef="csa-container-architectures"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Review the capabilities of the CMP in terms of the relevant thresholds and ensure your application is compliant.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:07.500">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="access-sensitive-data" name="Access sensitive data" desc="" library="microservices-library-dev">
          <threats>
            <threat ref="UNCONFIGURED-SECURITY-DATA" name="Sensitive data is exposed through weak security configurations" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="microservices-library-dev" editable="true">
              <desc>Weak security configurations make possible for an attacker to access sensitive data like API keys, credentials, etc.</desc>
              <riskRating confidentiality="100" integrity="75" availability="75" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="APP-AS-1">
                  <countermeasures>
                    <countermeasure ref="CSA-SACA-3.1.10:1" mitigation="20"/>
                    <countermeasure ref="CSA-SACA-3.1.10:2" mitigation="20"/>
                    <countermeasure ref="CSA-SACA-3.1.17:1" mitigation="20"/>
                    <countermeasure ref="CSA-SACA-3.1.17:2" mitigation="20"/>
                    <countermeasure ref="CSA-SACA-3.1.17:3" mitigation="20"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CSA-SACA-3.1.10:1" mitigation="20"/>
                <countermeasure ref="CSA-SACA-3.1.10:2" mitigation="20"/>
                <countermeasure ref="CSA-SACA-3.1.17:1" mitigation="20"/>
                <countermeasure ref="CSA-SACA-3.1.17:2" mitigation="20"/>
                <countermeasure ref="CSA-SACA-3.1.17:3" mitigation="20"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="authentication-and-authorization" name="Authentication and Authorization" desc="" library="microservices-library-dev">
          <threats>
            <threat ref="CLOUD-VULNERABILITIES" name="Attackers use known cloud vulnerabilities to access unauthorized data" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="microservices-library-dev" editable="true">
              <desc>Known vulnerabilities in a specific cloud environment are used to exploit a system, allowing an attacker to access unauthorized data</desc>
              <riskRating confidentiality="75" integrity="75" availability="100" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="APP-AA-1">
                  <countermeasures>
                    <countermeasure ref="APP-AA-1.1.1" mitigation="50"/>
                    <countermeasure ref="APP-AA-1.1.2" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="APP-AA-1.1.1" mitigation="50"/>
                <countermeasure ref="APP-AA-1.1.2" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="deployment" name="Deployment" desc="" library="microservices-library-dev">
          <threats>
            <threat ref="CAPEC-130" name="Excessive Allocation" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="microservices-library-dev" editable="true">
              <desc>&lt;p&gt;An adversary causes the target to allocate excessive resources to servicing the attackers' request, thereby reducing the resources available for legitimate services and degrading or denying services. Usually, this attack focuses on memory allocation, but any finite resource on the target could be the attacked, including bandwidth, processing cycles, or other resources.&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;This attack does not attempt to force this allocation through a large number of requests (that would be Resource Depletion through Flooding) but instead uses one or a small number of requests that are carefully formatted to force the target to allocate excessive resources to service this request(s). Often this attack takes advantage of a bug in the target to cause the target to allocate resources vastly beyond what would be needed for a normal request.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CO-D-1">
                  <countermeasures>
                    <countermeasure ref="CSA-SACA-3.1.14:1" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CSA-SACA-3.1.14:1" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="general" name="General" desc="" library="microservices-library-dev">
          <threats>
            <threat ref="IMAGE-MODIFICATION" name="Attackers compromise images by modifying their content" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="microservices-library-dev" editable="true">
              <desc>An attacker modifies/forges a microservices image to introduce vulnerabilities in the system</desc>
              <riskRating confidentiality="100" integrity="100" availability="75" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="IM-G-2">
                  <countermeasures>
                    <countermeasure ref="CSA-SACA-3.1.6:3" mitigation="20"/>
                    <countermeasure ref="IM-G-2.1.1" mitigation="16"/>
                    <countermeasure ref="IM-G-2.1.2" mitigation="16"/>
                    <countermeasure ref="IM-G-2.2.1" mitigation="16"/>
                    <countermeasure ref="IM-G-2.3.1" mitigation="16"/>
                    <countermeasure ref="IM-G-2.3.2" mitigation="16"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CSA-SACA-3.1.6:3" mitigation="20"/>
                <countermeasure ref="IM-G-2.1.1" mitigation="16"/>
                <countermeasure ref="IM-G-2.1.2" mitigation="16"/>
                <countermeasure ref="IM-G-2.2.1" mitigation="16"/>
                <countermeasure ref="IM-G-2.3.1" mitigation="16"/>
                <countermeasure ref="IM-G-2.3.2" mitigation="16"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="OWASP A1:2017" name="Attackers gain access to the sensitive data through injecting code in the repositories" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="microservices-library-dev" editable="true">
              <desc>Almost any source of data can be an injection vector: environment variables,
                                parameters, external and internal web services, and all types of users. Injection flaws
                                occur when an attacker can send hostile data to an interpreter.
                            </desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="IM-G-1">
                  <countermeasures>
                    <countermeasure ref="CSA-SAC-3.1.1:1" mitigation="34"/>
                    <countermeasure ref="CSA-SACA-3.1.6:1" mitigation="33"/>
                    <countermeasure ref="CSA-SACA-3.1.6:2" mitigation="33"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CSA-SAC-3.1.1:1" mitigation="34"/>
                <countermeasure ref="CSA-SACA-3.1.6:1" mitigation="33"/>
                <countermeasure ref="CSA-SACA-3.1.6:2" mitigation="33"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="SCALABILITY-ISSUES" name="Availability is compromised through attacks against scalability configuration" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="microservices-library-dev" editable="true">
              <desc>An attacker compromise the availability of a system by exploiting scalability configurations in order to consume resources</desc>
              <riskRating confidentiality="75" integrity="75" availability="100" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="APP-G-1">
                  <countermeasures>
                    <countermeasure ref="CSA-SACA-3.1.11:1" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CO-G-1">
                  <countermeasures>
                    <countermeasure ref="CSA-SACA-3.1.12:1" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CSA-SACA-3.1.11:1" mitigation="100"/>
                <countermeasure ref="CSA-SACA-3.1.12:1" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="UNAUTHORIZED-ACCESS-CONTAINER-VOLUMES" name="Sensitive data is compromised by unauthorized access to container volumes" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="microservices-library-dev" editable="true">
              <desc>An attacker find flaws to access container volumes without permission</desc>
              <riskRating confidentiality="100" integrity="75" availability="75" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CO-G-2">
                  <countermeasures>
                    <countermeasure ref="CSA-SACA-3.1.9:1" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CSA-SACA-3.1.9:1" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="logging-and-monitoring" name="Logging and Monitoring" desc="" library="microservices-library-dev">
          <threats>
            <threat ref="OWASP A10:2017" name="Exploitation of insufficient logging and monitoring" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="microservices-library-dev" editable="true">
              <desc>	&lt;p&gt;Exploitation of insufficient logging and monitoring is the bedrock of nearly every major incident.&lt;br /&gt;
 Attackers rely on the lack of monitoring and timely response to achieve their goals without being detected.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="APP-LM-1">
                  <countermeasures>
                    <countermeasure ref="CSA-SACA-3.1.3:1" mitigation="34"/>
                  </countermeasures>
                </weakness>
                <weakness ref="APP-LM-2">
                  <countermeasures>
                    <countermeasure ref="CSA-SACA-3.1.7:1" mitigation="33"/>
                    <countermeasure ref="CSA-SACA-3.1.7:2" mitigation="33"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CSA-SACA-3.1.3:1" mitigation="34"/>
                <countermeasure ref="CSA-SACA-3.1.7:1" mitigation="33"/>
                <countermeasure ref="CSA-SACA-3.1.7:2" mitigation="33"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="networking" name="Networking" desc="" library="microservices-library-dev">
          <threats>
            <threat ref="UNAUTHORIZED-ACCESS-NETWORK" name="Sensitive data is compromised through network access" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="microservices-library-dev" editable="true">
              <desc>Attackers gain undetected access to the network systems and changes made by the
                                attackers couldn't be audited or detected.
                            </desc>
              <riskRating confidentiality="50" integrity="50" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CO-N-1">
                  <countermeasures>
                    <countermeasure ref="CSA-SACA-3.1.5:1" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CSA-SACA-3.1.5:1" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="de2c4a5d-c7a3-4a27-95ed-31ac0d5472eb" diagramComponentId="124a9809-2860-4d1b-bc23-336ce8ddc214" ref="135aa974-ad0a-4f9f-9b48-3cbc1207a538" name="GCP SQLServer" desc="" library="Google Cloud Platform" parentComponentRef="0be7889d-456d-4e5d-91c3-46f69ec973f8" componentDefinitionRef="google-sqlserver">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses>
        <weakness ref="GOOGLE-USECURE-CREDENTIALS" name="Credentials are not securely stored" state="0" impact="100" issueId="" issueLink="">
          <desc>The credentials that are used to access the resources are not securely stored and can be
                        accessed by unauthorized personnel.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:12.177">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="GOOGLE-MON02" name="Excessive use of administrator accounts" state="0" impact="100" issueId="" issueLink="">
          <desc>The administrator accounts are used for all actions, not only for the administrative ones. This is because these users do not have a personal or user account to perform their daily actions.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:12.177">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CWE-778" name="Insufficient Logging" state="0" impact="100" issueId="" issueLink="">
          <desc>When a critical security event occurs, the software either does not record the event or omits important details about the event when logging it. When critical security events are not logged properly, such as in the case of a failed login attempt, this can make malicious behavior more difficult to detect and may hinder forensic analyses after a successful attack.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:12.177">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="GOOGLE-MON03" name="Lack of 2FA" state="0" impact="100" issueId="" issueLink="">
          <desc>Login to the console without using Multi-factor Authentication (MFA) is considered as suspicious activity. Therefore connection without MFA must be audited and monitored and the corresponding security group must be informed and must validate this connection.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:12.176">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="GOOGLE-IAM03" name="Misconfigured User Account" state="0" impact="100" issueId="" issueLink="">
          <desc>Key security settings such as resetting the password, and other password controls are not
                        configured.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:12.177">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="GOOGLE-IAM-01" name="Misconfigured authentication method for administrator accounts" state="0" impact="100" issueId="" issueLink="">
          <desc>The authentication method "Multi-factor Authentication" for the Administrator accounts is not
                        configured.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:12.177">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="GOOGLE_IAM-02" name="Misconfigured credentials for groups and roles" state="0" impact="100" issueId="" issueLink="">
          <desc>The credentials for the groups and roles are incorrectly configured and there are user accounts with more privileges than necessary.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:12.176">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="GOOGLE-EXPIRATION-DATE" name="Misconfigured security key expirations" state="0" impact="100" issueId="" issueLink="">
          <desc>The password and security key expiration is not configured and users are not obliged to change
                        their security credentials. Not frequently changing passwords, gives attackers the chance to
                        obtain credentials and gain access to the systems.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:12.177">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="GOOGLE-MON01" name="Undetected changes in the security configurations" state="0" impact="100" issueId="" issueLink="">
          <desc>Monitoring and alerting for security configurations are not configured and changes cannot be detected.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:12.412">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="GOOGLE-IAM03" name="Apply RBAC with pre-defined policies added into groups and roles" issueId="" issueLink="" platform="" cost="0" risk="64" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Define and create groups that relate to job functions (administrators, developers, accounting,
                        etc.) and assign the relevant permissions for each group, and then assign IAM users to those
                        groups. All the users in an IAM group inherit the permissions assigned to the group. That way,
                        you can make changes for everyone in a group in just one place. As people move around in your
                        company, you can simply change what IAM group their IAM user belongs to. This method is known as
                        Role Based Access Control (RBAC).&amp;nbsp;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        To add a team member and grant an IAM role to the member:
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Open the IAM page in the Cloud Platform Console and open the IAM page.&lt;/li&gt;
                        &lt;li&gt;Click Select a project.&lt;/li&gt;
                        &lt;li&gt;Select a project and click Open.&lt;/li&gt;
                        &lt;li&gt;Click Add to add new members to the project and set their permissions. In the Select a
                        role drop-down menu, click on a service name to find the roles that belong to that service.&amp;nbsp;&lt;/li&gt;
                        &lt;/ol&gt;To grant more than one role to the same project member:
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Open the IAM page in the Cloud Platform Console and open the IAM page.&lt;/li&gt;
                        &lt;li&gt;Click Select a project.&lt;/li&gt;
                        &lt;li&gt;Select a project and click Open.&lt;/li&gt;
                        &lt;li&gt;Enter the email address of the member and select all the roles that you want to grant
                        to the member. Click Add.&amp;nbsp;&lt;/li&gt;
                        &lt;/ol&gt;To grant a role to a member for more than one project:
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Open the IAM and Admin Projects page in the Cloud Platform Console and open the IAM
                        &amp;amp; ADMIN PROJECTS page.&lt;/li&gt;
                        &lt;li&gt;Select all the projects for which you want to grant permissions.&lt;/li&gt;
                        &lt;li&gt;In the IAM tab on the right pane, add the new member and select a role to grant the
                        role for all selected projects.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Granting, changing, and revoking access to resources" url="https://cloud.google.com/iam/docs/granting-changing-revoking-access"/>
          </references>
          <standards>
            <standard ref="A01:2021-Broken Access Control" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A5:2017-Broken Access Control" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Open the IAM page in the Cloud Platform Console and open the IAM page.&lt;/li&gt;
                            &lt;li&gt;Click Select a project and click Open.&lt;/li&gt;
                            &lt;li&gt;List all members from the project.&lt;/li&gt;
                            &lt;li&gt;Check that each member has been assigned to the correct roles.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:12.076">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-IAM08" name="Automatically rotate Google Service account keys" issueId="" issueLink="" platform="" cost="0" risk="64" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>The Google Service Keys shall be rotated to avoid unauthorized access.
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        To enable automatic rotation of a key, set the rotation schedule with the following gcloud
                        command-line syntax:&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        gcloud kms keys update KEY_NAME \&amp;nbsp;
                        &lt;/div&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        --location LOCATION \&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        --keyring KEYRING_NAME \&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        --rotation-period ROTATION_PERIOD \&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        --next-rotation-time NEXT_ROTATION_TIME&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;For example:&amp;nbsp;
                        &lt;div&gt;
                        gcloud kms keys update KEY_NAME&amp;nbsp;
                        &lt;/div&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        --rotation-period=30d&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        --next-rotation-time=2016-10-12T12:34:56.1234Z
                        &lt;/div&gt;
                        &lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Google Cloud docs: KMS rotation schedule" url="https://cloud.google.com/kms/docs/rotating-keys#kms-set-rotation-schedule-cli"/>
          </references>
          <standards>
            <standard ref="A05:2021-Security Misconfiguration" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A6:2017-Security Misconfiguration" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check automatic rotation of keys is enabled.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:12.076">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-SQLSERVER1" name="Configure Cloud SQL Server instance settings" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Remediation:&lt;/p&gt;&lt;p&gt;Using Console:&lt;/p&gt;&lt;p&gt;1. Go to the Cloud SQL Instances page in the Google Cloud Console by visiting https://console.cloud.google.com/sql/instances.&lt;/p&gt;&lt;p&gt;2. Select the SQL Server instance for which you want to enable to database flag.&lt;/p&gt;&lt;p&gt;3. Click Edit.&lt;/p&gt;&lt;p&gt;4. Scroll down to the Flags section.&lt;/p&gt;&lt;p&gt;5. To set a flag that has not been set on the instance before, click Add item and set the following flags from the drop-down menu&lt;/p&gt;&lt;ul&gt;&lt;li&gt;external scripts enabled, and set its value to off.&lt;/li&gt;&lt;li&gt;cross db ownership chaining, and set its value to off.&lt;/li&gt;&lt;li&gt;user connections, and set its value to your organization recommended value.&lt;/li&gt;&lt;li&gt;remote access, and set its value to off.&lt;/li&gt;&lt;li&gt;3625, and set its value to off.&lt;/li&gt;&lt;li&gt;contained database authentication, and set its value to off.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;6. Click Save to save your changes.&lt;/p&gt;&lt;p&gt;7. Confirm your changes under Flags on the Overview page.&lt;/p&gt;&lt;p&gt;Using Command Line:&lt;/p&gt;&lt;p&gt;1. List all Cloud SQL database Instances gcloud sql instances list&lt;/p&gt;&lt;p&gt;2. Configure the database flags for every Cloud SQL SQL Server database instance using the below command.&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;gcloud sql instances patch INSTANCE_NAME --database-flags "external scripts enabled=off"&amp;nbsp;&lt;/p&gt;&lt;p&gt;gcloud sql instances patch INSTANCE_NAME --database-flags "cross db ownership chaining=off"&lt;/p&gt;&lt;p&gt;gcloud sql instances patch INSTANCE_NAME --database-flags "user connections=[0-32,767]"&lt;/p&gt;&lt;p&gt;gcloud sql instances patch INSTANCE_NAME --database-flags "remote access=off"&lt;/p&gt;&lt;p&gt;gcloud sql instances patch INSTANCE_NAME --database-flags "3625=off"&lt;/p&gt;&lt;p&gt;gcloud sql instances patch INSTANCE_NAME --database-flags "contained database authentication=off"&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;3. Clear "user options" database flag using the following command scheme:&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;gcloud sql instances patch [INSTANCE_NAME] --database-flags [FLAG1=VALUE1,FLAG2=VALUE2]&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Note : This command will overwrite all database flags previously set. To keep those and add new ones, include the values for all flags you want set on the instance; any flag not specifically included is set to its default value. For flags that do not take a value, specify the flag name followed by an equals sign ("=").&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="CIS Google Cloud Platform Benchmark" url="https://www.cisecurity.org/benchmark/google_cloud_computing_platform/"/>
          </references>
          <standards>
            <standard ref="6.3.1" supportedStandardRef="cis-gcp-standard"/>
            <standard ref="6.3.1" supportedStandardRef="cis-gcp-standard-level-2"/>
            <standard ref="6.3.2" supportedStandardRef="cis-gcp-standard"/>
            <standard ref="6.3.2" supportedStandardRef="cis-gcp-standard-level-2"/>
            <standard ref="6.3.3" supportedStandardRef="cis-gcp-standard"/>
            <standard ref="6.3.3" supportedStandardRef="cis-gcp-standard-level-2"/>
            <standard ref="6.3.4" supportedStandardRef="cis-gcp-standard"/>
            <standard ref="6.3.4" supportedStandardRef="cis-gcp-standard-level-2"/>
            <standard ref="6.3.5" supportedStandardRef="cis-gcp-standard"/>
            <standard ref="6.3.5" supportedStandardRef="cis-gcp-standard-level-2"/>
            <standard ref="6.3.6" supportedStandardRef="cis-gcp-standard"/>
            <standard ref="6.3.6" supportedStandardRef="cis-gcp-standard-level-2"/>
            <standard ref="6.3.7" supportedStandardRef="cis-gcp-standard"/>
            <standard ref="6.3.7" supportedStandardRef="cis-gcp-standard-level-2"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Using Console:&lt;/p&gt;&lt;p&gt;1. Go to the Cloud SQL Instances page in the Google Cloud Console by visiting https://console.cloud.google.com/sql/instances.&lt;/p&gt;&lt;p&gt;2. Select the instance to open its Instance Overview page&lt;/p&gt;&lt;p&gt;3. Ensure the database flag that has been set is listed under the Database flags section.&lt;/p&gt;&lt;p&gt;Using Command Line:&lt;/p&gt;&lt;p&gt;1. List all Cloud SQL database Instances gcloud sql instances list&lt;/p&gt;&lt;p&gt;2. Ensure the below commands returns off or empty for every Cloud SQL SQL Server database instance&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;gcloud sql instances describe INSTANCE_NAME --format=json | jq '.settings.databaseFlags[] | select(.name=="external scripts enabled")|.value'&lt;/p&gt;&lt;p&gt;gcloud sql instances describe INSTANCE_NAME --format=json | jq '.settings.databaseFlags[] | select(.name=="cross db ownership chaining")|.value'&lt;/p&gt;&lt;p&gt;gcloud sql instances describe INSTANCE_NAME --format=json | jq '.settings.databaseFlags[] | select(.name=="user options")|.value'&lt;/p&gt;&lt;p&gt;gcloud sql instances describe INSTANCE_NAME --format=json | jq '.settings.databaseFlags[] | select(.name=="remote access")|.value'&lt;/p&gt;&lt;p&gt;gcloud sql instances describe INSTANCE_NAME --format=json | jq '.settings.databaseFlags[] | select(.name=="3625")|.value'&lt;/p&gt;&lt;p&gt;gcloud sql instances describe INSTANCE_NAME --format=json | jq '.settings.databaseFlags[] | select(.name=="contained database authentication")|.value'&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;3. Ensure the below command returns value, which is according to your organization recommended value, for every Cloud SQL SQL Server database instance.&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;gcloud sql instances describe INSTANCE_NAME --format=json | jq '.settings.databaseFlags[] | select(.name=="user connections")|.value'&lt;/p&gt;&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:12.379">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-IAM05" name="Create Individual Accounts for the administrator users" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Create individual accounts for administrator users and with these new accounts perform the necessary administrative actions. By creating service accounts for people accessing your account, you can give each Google user a unique set of security credentials and roles.&amp;nbsp; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The administrator accounts shall be used for administrative actions and for giving or revoking credentials to users' accounts. The administrator account shall be not used as a normal user account. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Open the Service Accounts page in the Cloud Platform Console and open the IAM page.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Click Select a project.&lt;/li&gt; 
  &lt;li&gt;Select your project and click Open.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Click Create Service Account.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Enter a service account name, select a role you wish to grant to the service account and click Create.&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Google Cloud docs: manage service accounts" url="https://cloud.google.com/iam/docs/creating-managing-service-accounts"/>
          </references>
          <standards>
            <standard ref="A07:2021-Identification and Authentication Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A2:2017-Broken Authentication" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Open the Service Accounts page in the Cloud Platform Console and open the IAM
                            page.&lt;/li&gt;
                            &lt;li&gt;Click Select a project.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Select your project and click Open.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Review that each administrator user has an individual Google Service Account.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:12.076">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-IAM04" name="Create mechanisms to ensure Least Privilege is applied" issueId="" issueLink="" platform="" cost="0" risk="64" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Create mechanisms to periodically review the group and user permissions to ensure the least
                        privilege for the user accounts. Granting least privilege ensures that users only have the
                        permissions required to complete their tasks rather than additional privileges that are not
                        required. Following this model ensures that, should an account be compromised, the blast radius
                        of damage is limited.&amp;nbsp;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        Allocate privileges via groups or roles via the recommendation in &amp;quot;Use RBAC with
                        pre-defined policies added into groups or roles&amp;quot;.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Open the IAM page in the Google Cloud Platform Console and open the IAM page.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Click Select a project.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Select a project and click Open.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Review the groups and users with access to the project and their permissions.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;If there is a user with more privileges, revoke the access as following:&lt;/li&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Select the user to revoke privileges.&lt;/li&gt;
                        &lt;li&gt;In the Roles(s) drop-down menu in the member's row, uncheck the roles you want to
                        revoke and click Save.&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Granting, changing, and revoking access to resources" url="https://cloud.google.com/iam/docs/granting-changing-revoking-access"/>
          </references>
          <standards>
            <standard ref="A01:2021-Broken Access Control" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A5:2017-Broken Access Control" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check there is a mechanism in place to ensure the enforcement of the Least Privilege
                            principle.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:12.076">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-IAM02" name="Define roles for the Google Service Accounts" issueId="" issueLink="" platform="" cost="0" risk="64" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Define and create the roles for the Google Cloud. For each role, you can use one of the
                        predefined roles or create a new custom role to ensure that each role has got the least minimum
                        permissions.&amp;nbsp;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;List all predefined roles and review them.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;If it's necessary, create new custom roles to ensure users have the least privileges.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="A01:2021-Broken Access Control" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A5:2017-Broken Access Control" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;List all roles.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Check that all fulfill the least privilege principle.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Check that all roles are defined correctly.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:12.076">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-LOG01" name="Enable all access logs" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Enable all access logs&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Enable all audit logs in the Google Cloud Platform to control and monitor the access of users and the configuration changes in the systems. &lt;br&gt; First, you have to know there are two types of audit logs in the Google Cloud Platform: &lt;br&gt; - Admin Activity audit logs that are enabled for all services and cannot be configured.&lt;br&gt; - Data Access audit logs that are not enabled by default and they shall be configured.&lt;/p&gt; 
&lt;p&gt;Remediation: &lt;br&gt; Configure Data Access audit logs with the Cloud console&lt;/p&gt; 
&lt;p&gt;You can also use the API or the Google Cloud CLI to perform these tasks programmatically.&lt;/p&gt; 
&lt;p&gt;To access audit log configuration options in the Cloud console, follow these steps:&lt;/p&gt; 
&lt;p&gt;1. From the Cloud console, select IAM &amp;amp; Admin &amp;gt; Audit Logs:&lt;/p&gt; 
&lt;p&gt;2. Select an existing Cloud project, folder, or organization at the top of the page.&lt;/p&gt; 
&lt;p&gt;Enable audit logs&lt;/p&gt; 
&lt;p&gt;To enable Data Access audit logs, do the following:&lt;/p&gt; 
&lt;p&gt;1. In the main table on the Audit Logs page, select one or more Google Cloud services from the Title column.&lt;/p&gt; 
&lt;p&gt;2. In the Log Type tab, select the Data Access audit log types that you want to enable and then click Save.&lt;/p&gt; 
&lt;p&gt;3. Where you have successfully enabled audit logs, the table includes a checkmark. In the following example, you see that, for the Cloud Composer API service, Admin Read and Data Read audit logs are enabled:&lt;/p&gt; 
&lt;p&gt;You can also enable audit logs for all Google Cloud services that produce Data Access audit logs. In the main table on the Audit Logs page, select all Google Cloud services.&lt;/p&gt; 
&lt;p&gt;Note that this bulk configuration method applies only to the Google Cloud services that are currently available. If a new Google Cloud service is added, it inherits your default audit configuration.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Configure Data Access audit logs" url="https://cloud.google.com/logging/docs/audit/configure-data-access#config-console"/>
            <reference name="Google Cloud docs: data access" url="https://cloud.google.com/logging/docs/audit/configure-data-access#project-and-organization"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="A09:2021-Security Logging and Monitoring Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2017-Insufficient Logging-Monitoring" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>	&lt;p&gt;Check that all audit logs in the Google Cloud Platform are enabled and configured.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:12.076">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-IAM01" name="Recertify user access" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Do regular reviews of service accounts on the system and verify they do not contain stolen or
                        fake accounts. This process ensures there are not any compromised accounts by former employees
                        or attackers.&amp;nbsp;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        At least every 90 days complete the following:&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Open the Service Accounts page in the Cloud Platform Console.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Click Select a project.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Select your project and click Open. All service accounts are listed in the Service
                        Accounts page.&lt;/li&gt;
                        &lt;li&gt;For any user that should not exist, select the user and click the Delete button.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Google Cloud docs: manage service accounts" url="https://cloud.google.com/iam/docs/creating-managing-service-accounts"/>
          </references>
          <standards>
            <standard ref="A07:2021-Identification and Authentication Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A2:2017-Broken Authentication" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Open the Service Accounts page in the Cloud Platform Console.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Click Select a project.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Select your project and click Open. All service accounts are listed in the Service
                            Accounts page.&lt;/li&gt;
                            &lt;li&gt;Check that the necessary users appear in the list.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;And check that there is a process to review the access users at least every 90
                            days.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:12.075">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-STO02" name="Securely store your credentials" issueId="" issueLink="" platform="" cost="0" risk="64" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Make sure that you securely store your credentials. This can be done differently depending on
                        your environment and where you store your credentials. For example, if you store your
                        credentials in a configuration file, make sure that you set appropriate permissions on that file
                        to prevent unwanted access. If you are using Google App Engine, consider using StorageByKeyName
                        to store your credentials.</desc>
          <implementations/>
          <references>
            <reference name="Google Cloud docs: Best practices storage" url="https://cloud.google.com/storage/docs/best-practices"/>
          </references>
          <standards>
            <standard ref="A02:2021-Cryptographic Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A3:2017-Sensitive Data Exposure" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that the credentials are stored securely.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:12.077">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-USER-MFA" name="Setup Multi-factor Authentication for Google Cloud Platform accounts" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Setup Multi-factor Authentication for Google Cloud Platform accounts 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  Multi-factor authentication requires more than one mechanism to authenticate a user. This secures user logins from attackers exploiting stolen or weak credentials. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  Deploy 2-Step Verification 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Step 1: Notify users of 2-Step Verification deployment (required) 
&lt;/div&gt; 
&lt;div&gt;
  Before deploying 2-Step Verification, communicate your company's plans to your users, including: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - What is 2-Step Verification and why your company is using it 
&lt;/div&gt; 
&lt;div&gt;
  - Whether 2-Step Verification is optional or required 
&lt;/div&gt; 
&lt;div&gt;
  - If required, give the date by which users must turn on 2-Step Verification 
&lt;/div&gt; 
&lt;div&gt;
  - Which 2-Step Verification method is required or recommended. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Step 2: Set up basic 2-Step Verification (required) 
&lt;/div&gt; 
&lt;div&gt;
  Next, let your users turn on 2-Step Verification. By default, users can turn on 2-Step Verification and use any verification method. (G Suite accounts created before December 2016 have 2-Step Verification turned off by default). 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Applying 2-Step Verification settings 
&lt;/div&gt; 
&lt;div&gt;
  You can customize 2-Step Verification settings for organizational units and exception groups-a group of users within organizational unit. For example, require security keys for a small team in your Sales organizational unit. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  How exception groups work 
&lt;/div&gt; 
&lt;div&gt;
  - You can assign one exception group to an organizational unit. 
&lt;/div&gt; 
&lt;div&gt;
  - Users in the exception group must belong to the organizational unit. 
&lt;/div&gt; 
&lt;div&gt;
  - 2-Step Verification settings apply to users in the exception group (not to group addresses or nested groups). 
&lt;/div&gt; 
&lt;div&gt;
  - Create the groups in Admin console, Groups API, or Directory Sync (not Google Groups). 
&lt;/div&gt; 
&lt;div&gt;
  For easier identification, you might include the organizational unit in the name of exception groups (for example, exgrp_OU_name). 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Also: 
&lt;/div&gt; 
&lt;div&gt;
  - Allow users to turn on 2-Step Verification 
&lt;/div&gt; 
&lt;div&gt;
  - Tell your users to enroll in 2-Step Verification 
&lt;/div&gt; 
&lt;div&gt;
  - Track users' enrollment&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Step 3: Enforce 2-Step Verification (optional) 
&lt;/div&gt; 
&lt;div&gt;
  Make sure users are enrolled in 2-Step Verification before turning on enforcement. Users who aren't enrolled can't sign in to their accounts. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Also: 
&lt;/div&gt; 
&lt;div&gt;
  - Ensure a smooth transition to an enforcement policy 
&lt;/div&gt; 
&lt;div&gt;
  - Choose a 2-Step Verification method to enforce 
&lt;/div&gt; 
&lt;div&gt;
  - Turn on enforcement 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  For more details please follow the Reference URL. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Deploy 2-Step Verification" url="https://support.google.com/a/answer/9176657"/>
          </references>
          <standards>
            <standard ref="A07:2021-Identification and Authentication Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A2:2017-Broken Authentication" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  For each Google Cloud Platform project, folder, or organization: 
&lt;/div&gt; 
&lt;div&gt;
  1. Identify non-service accounts. 
&lt;/div&gt; 
&lt;div&gt;
  2. Manually verify that multi-factor authentication for each account is set. 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:12.077">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-IAM06" name="Use Security Key for 2-Step Verification for administrator or co-administrator accounts" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Ensure that the users with administrator and co-administrator accounts activate and configure the second factor authentication provided by Google. With 2-Step Verification, you can log into Google with a security key.&amp;nbsp; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  To activate and configure 2 Factor Authentication, you shall follow the following steps: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Go to the 2-Step Verification page section of &lt;a href="https://myaccount.google.com/signinoptions/two-step-verification"&gt;My Account&lt;/a&gt;.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Click Add security key.&lt;/li&gt; 
  &lt;li&gt;Follow the on-screen instructions.&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Google Cloud: mobile account" url="https://support.google.com/accounts/answer/6103523?co=GENIE.Platform%3DAndroid#phone"/>
            <reference name="Google support: answers" url="https://support.google.com/accounts/answer/6103534"/>
          </references>
          <standards>
            <standard ref="A07:2021-Identification and Authentication Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A2:2017-Broken Authentication" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Go to the 2-Step Verification page section of My Account.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Check that 2-Step Verification authentication is enabled and configured correctly.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:12.076">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="AUTHENTICATION" name="Authentication" desc="" library="Google Cloud Platform">
          <threats>
            <threat ref="GOOGLE-LOST-ACCESS-ROOT" name="Attackers gain unauthorized access to the root account due to lack of configuration of the account" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Google Cloud Platform" editable="true">
              <desc>&lt;p&gt;Attackers could gain unauthorized access to the administrator account due to lack of configuration of the account and its security mechanisms, such as modifying credentials and adding/removing user accounts.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="GOOGLE-IAM-01">
                  <countermeasures>
                    <countermeasure ref="GOOGLE-IAM06" mitigation="50"/>
                  </countermeasures>
                </weakness>
                <weakness ref="GOOGLE-MON02">
                  <countermeasures>
                    <countermeasure ref="GOOGLE-IAM05" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="GOOGLE-IAM05" mitigation="50"/>
                <countermeasure ref="GOOGLE-IAM06" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="GOOGLE-LOST-ACCESS-USER" name="Attackers gain unauthorized access to the user account due to lack of configuration of the account" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Google Cloud Platform" editable="true">
              <desc>&lt;p&gt;Attackers could gain unauthorized access to the user account due to lack of configuration of the account, for example, the security question to reset the password is configured incorrectly.&lt;/p&gt;</desc>
              <riskRating confidentiality="50" integrity="50" availability="50" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="GOOGLE-IAM03">
                  <countermeasures>
                    <countermeasure ref="GOOGLE-IAM01" mitigation="50"/>
                  </countermeasures>
                </weakness>
                <weakness ref="GOOGLE-MON03">
                  <countermeasures>
                    <countermeasure ref="GOOGLE-USER-MFA" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="GOOGLE-IAM01" mitigation="50"/>
                <countermeasure ref="GOOGLE-USER-MFA" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="AUTHORIZATION" name="Authorization" desc="" library="Google Cloud Platform">
          <threats>
            <threat ref="LOSS-CONTROL_ENV" name="Attackers gain unauthorized access to the control of the environment" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Google Cloud Platform" editable="true">
              <desc>&lt;p&gt;Attackers could potentially gain unauthorized access to the control of the environment, due to user accounts - or role groups - not being well defined and configured. As a consequence attackers may be able to make changes without root approval.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="75" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="GOOGLE-EXPIRATION-DATE">
                  <countermeasures>
                    <countermeasure ref="GOOGLE-IAM08" mitigation="25"/>
                  </countermeasures>
                </weakness>
                <weakness ref="GOOGLE_IAM-02">
                  <countermeasures>
                    <countermeasure ref="GOOGLE-IAM02" mitigation="25"/>
                    <countermeasure ref="GOOGLE-IAM03" mitigation="25"/>
                    <countermeasure ref="GOOGLE-IAM04" mitigation="25"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="GOOGLE-IAM02" mitigation="25"/>
                <countermeasure ref="GOOGLE-IAM03" mitigation="25"/>
                <countermeasure ref="GOOGLE-IAM04" mitigation="25"/>
                <countermeasure ref="GOOGLE-IAM08" mitigation="25"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="GENERAL" name="General" desc="" library="Google Cloud Platform">
          <threats>
            <threat ref="ACCESS-TO-DATA" name="Sensitive data is compromised through unauthorized access to data storage" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Google Cloud Platform" editable="true">
              <desc>&lt;p&gt;A data breach is a security violation in which sensitive, protected or confidential data is copied, transmitted, viewed, stolen or used by an individual unauthorized to do so. Sensitive data could be exposed due to a bad configuration in user permissions.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="GOOGLE-USECURE-CREDENTIALS">
                  <countermeasures>
                    <countermeasure ref="GOOGLE-STO02" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="GOOGLE-STO02" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="GOOGLE CLOUD PLATFORM" name="Google Cloud Platform" desc="" library="Google Cloud Platform">
          <threats>
            <threat ref="GOOGLE-LOST-ACCESS-ROOT" name="Attackers gain unauthorized access to the root account due to lack of configuration of the account" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Google Cloud Platform" editable="true">
              <desc>&lt;p&gt;Attackers could gain unauthorized access to the administrator account due to lack of configuration of the account and its security mechanisms, such as modifying credentials and adding/removing user accounts.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="GOOGLE-MON01">
                  <countermeasures>
                    <countermeasure ref="GOOGLE-SQLSERVER1" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="GOOGLE-SQLSERVER1" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="LOGGING AND MONITORING" name="Logging and Monitoring" desc="" library="Google Cloud Platform">
          <threats>
            <threat ref="OWASP A10:2017" name="Exploitation of insufficient logging and monitoring" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Google Cloud Platform" editable="true">
              <desc>	&lt;p&gt;Exploitation of insufficient logging and monitoring is the bedrock of nearly every major incident.&lt;br /&gt;
 Attackers rely on the lack of monitoring and timely response to achieve their goals without being detected.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="GOOGLE-LOG01" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="GOOGLE-LOG01" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="a0d196c4-3874-435d-9f41-3da31d36b945" diagramComponentId="63c04f11-2016-4c4f-990e-b78329664ca1" ref="f3fcd3e2-cf79-4da3-8cc5-acbc8e7bce1e" name="GCP SQL" desc="" library="Google Cloud Platform" parentComponentRef="0be7889d-456d-4e5d-91c3-46f69ec973f8" componentDefinitionRef="google-sql">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses>
        <weakness ref="GOOGLE-BACKUP" name="There is no recover or backup mechanism" state="0" impact="100" issueId="" issueLink="">
          <desc>There are no processes or mechanisms to regularly save the data to another place in order to
                        have an older version of the data to restore in case of loss. Consequently the data cannot be
                        easily recovered or they cannot be recovered at all.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:06.904">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="GOOGLE-NET-21" name="Unauthorized connection between the client and the SQL database" state="0" impact="100" issueId="" issueLink="">
          <desc>All connections to SQL Database are allowed and the firewall and other security networks
                        methods are not configured to deny connections.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:06.903">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="GOOGLE-LOGS01" name="Undetected changes in the SQL database information and configuration" state="0" impact="100" issueId="" issueLink="">
          <desc>Changes in the SQL database information and configuration are not detected and audited,
                        because the Google Cloud mechanisms that are used to notify about these changes are disabled.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:06.904">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="GOOGLE-SQL04" name="Create a plan for backups and perform backups regularly" issueId="" issueLink="" platform="" cost="1" risk="59" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Create a mechanism to do regularly backups from the SQL database and save it into another
                        place.</desc>
          <implementations/>
          <references>
            <reference name="Google Cloud docs: SQL Best practices backing up" url="https://cloud.google.com/compute/docs/instances/sql-server/best-practices?-419#backing_up"/>
          </references>
          <standards>
            <standard ref="6.7" supportedStandardRef="cis-gcp-standard"/>
            <standard ref="6.7" supportedStandardRef="cis-gcp-standard-level-2"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check there exists a mechanism to do backups of the SQL databases frequently and these
                            backups are placed into another secure place.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:06.838">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-SQL01" name="Enable SSL channel encryption to connect to the database" issueId="" issueLink="" platform="" cost="1" risk="61" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Enable and configure SSL encryption with the certificates to connect to the SQL database. This
                        way only users with the appropriate certificate can connect to the SQL database. Remediation:
                        You can create up to 10 client certificates for each instance. If you lose the private key for a
                        certificate, you must create a new one; the private key cannot be recovered.&amp;nbsp;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Go to the Cloud SQL Instances page in the &lt;a
                        href="https://console.cloud.google.com/sql/instances"&gt;Google Cloud Platform Console&lt;/a&gt;.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Click the instance name to open its Instance details page.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Select the SSL tab.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;In the SSL Connections section, click Allow only SSL connection to enforce that only
                        SSL connections can connect to the instances. (This step is not required. However, if you do not
                        require SSL for all connections, any issue with your SSL configuration can cause all connections
                        to default silently to unencrypted.)&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;In the Client Certificates section, click Create a Client Certificate.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;In the New client certificate dialog box, give the certificate a name unique for this
                        instance and click Add.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;In the first section of the New SSL certificate created dialog box, click the link to
                        download the private key to a file named client-key.pem. (Important: Store this private key
                        securely. If you lose it, you must create a new client certificate.)&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;In the second section, click the link to download the client certificate to a file
                        named client-cert.pem.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;In the third section, click the link to download the server certificate to a file
                        named server-ca.pem.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Click Close.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Google Cloud docs: MySQL SSL configuration" url="https://cloud.google.com/sql/docs/mysql/configure-ssl-instance?-419#introduction"/>
          </references>
          <standards>
            <standard ref="6.4" supportedStandardRef="cis-gcp-standard"/>
            <standard ref="6.4" supportedStandardRef="cis-gcp-standard-level-2"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Go to the Cloud SQL Instances page in the Google Cloud Platform Console.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Click the instance name to open its Instance details page.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Select the SSL tab.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;In the SSL Connections section, check that the SSL Connections are configured and
                            enabled correctly.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:06.837">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-SQL06" name="Remove public IPs from Cloud SQL database instances" issueId="" issueLink="" platform="" cost="0" risk="61" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;It is recommended to configure Second Generation Sql instance to use private IPs instead of public IPs.&lt;/p&gt;&lt;p&gt;Rationale:&lt;/p&gt;&lt;p&gt;To lower the organization's attack surface, Cloud SQL databases should not have public IPs. Private IPs provide improved network security and lower latency for your application.&lt;/p&gt;&lt;p&gt;Impact:&lt;/p&gt;&lt;p&gt;Removing the public IP address on SQL instances may break some applications that relied on it for database connectivity.&lt;/p&gt;&lt;p&gt;Remediation:&lt;/p&gt;&lt;p&gt;From Console:&lt;/p&gt;&lt;p&gt;1. Go to the Cloud SQL Instances page in the Google Cloud Console: https://console.cloud.google.com/sql/instances&lt;/p&gt;&lt;p&gt;2. Click the instance name to open its Instance details page.&lt;/p&gt;&lt;p&gt;3. Select the Connections tab.&lt;/p&gt;&lt;p&gt;4. Deselect the Public IP checkbox.&lt;/p&gt;&lt;p&gt;5. Click Save to update the instance.&lt;/p&gt;&lt;p&gt;From Command Line:&lt;/p&gt;&lt;p&gt;1. For every instance remove its public IP and assign a private IP instead:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;gcloud beta sql instances patch INSTANCE_NAME --network=VPC_NETWOR_NAME --no-assign-ip&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;2. Confirm the changes using the following command::&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;gcloud sql instances describe INSTANCE_NAME&lt;/p&gt;&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="CIS Google Cloud Platform Benchmark" url="https://www.cisecurity.org/benchmark/google_cloud_computing_platform/"/>
          </references>
          <standards>
            <standard ref="6.6" supportedStandardRef="cis-gcp-standard-level-2"/>
            <standard ref="A05:2021-Security Misconfiguration" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A6:2017-Security Misconfiguration" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;From Console:&lt;/p&gt;&lt;p&gt;1. Go to the Cloud SQL Instances page in the Google Cloud Console: https://console.cloud.google.com/sql/instances&lt;/p&gt;&lt;p&gt;2. Ensure that every instance has a private IP address and no public IP address configured.&lt;/p&gt;&lt;p&gt;From Command Line:&lt;/p&gt;&lt;p&gt;1. List all Cloud SQL database instances using the following command:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;gcloud sql instances list&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;2. For every instance of type instanceType: CLOUD_SQL_INSTANCE with backendType: SECOND_GEN, get detailed configuration. Ignore instances of type READ_REPLICA_INSTANCE because these instances inherit their settings from the primary instance. Also, note that first generation instances cannot be configured to have a private IP address.&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;gcloud sql instances describe INSTANCE_NAME&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;3. Ensure that the setting ipAddresses has an IP address configured of type: PRIVATE and has no IP address of type: PRIMARY. PRIMARY email addresses are public addresses. An instance can have both a private and public address at the same time. Note also that you cannot use private IP with First Generation instances.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:06.838">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-SQL02" name="Restrict network access to the database" issueId="" issueLink="" platform="" cost="1" risk="61" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Use the Windows Server Advanced Firewall, and specify the IP addresses of your client
                        computers. The Windows Advanced Firewall is an important security component in Windows Server.
                        When you set up your SQL Server environment to be able to connect to the database from other
                        client machines, configure the firewall to allow incoming traffic:&amp;nbsp;
                        &lt;div&gt;
                        netsh advfirewall firewall add rule name=&amp;quot;SQL Access&amp;quot; ^ dir=in action=allow ^
                        program=&amp;quot;%programfiles%\Microsoft SQL
                        Server\MSSQL12.MSSQLSERVER\MSSQL\Binn\sqlservr.exe&amp;quot; ^ remoteip=[LOCAL_SUBNET]
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        When you use this firewall rule, it is a good practice to specify the IP address of your client
                        machines. Specify a comma-delimited list of IP addresses with no whitespaces for the remoteip
                        parameter in place of [LOCAL_SUBNET]. Also, note that the path for the program parameter might
                        change depending on the version of SQL Server that you use. The SQL Server application image
                        includes an SQL Server Windows firewall rule. This rule is fairly unrestricted, so consider
                        disabling it before your system goes to production.
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Google Cloud docs: SQL Best practices" url="https://cloud.google.com/compute/docs/instances/sql-server/best-practices?-419"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that the network access is restricted when you try to access to the databases.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:06.838">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-SQL05" name="Use Stackdriver Monitoring" issueId="" issueLink="" platform="" cost="1" risk="59" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Install the beta Stackdriver Monitoring agent for Microsoft Windows to send several monitoring
                        data points into the Stackdriver system.&amp;nbsp;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        To install the agent on a VM instance running Windows, perform the following steps after you
                        have established an RDP or similar connection to your instance and have logged into Windows:&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;If you use an HTTP proxy, run the following command from an administrator command
                        prompt to set the http_proxy environment variable so that the agent can send data to Stackdriver
                        Monitoring using outbound HTTPS: setx http_proxy http://YOUR-PROXY /m&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Browse to the following URL.&amp;nbsp;&lt;/li&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Download and run the agent's installer:
                        https://repo.stackdriver.com/windows/StackdriverMonitoring-GCM-45.exe&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;This can also be done via the following PowerShell commands: cd C:\Users\[USERNAME]
                        invoke-webrequest https://repo.stackdriver.com/windows/StackdriverMonitoring-GCM-45.exe -OutFile
                        StackdriverMonitoring-GCM-45.exe; .\StackdriverMonitoring-GCM-45.exe&amp;nbsp;&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;li&gt;Your agent installation is now complete.&amp;nbsp;&lt;/li&gt;
                        &lt;/ol&gt;To install the agent on a VM instance running Linux, these instructions work for both
                        Google Compute Engine instances and Amazon EC2 instances:&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Run the following commands on your VM instance to install the monitoring agent: curl
                        -sSO https://dl.google.com/cloudagents/install-monitoring-agent.sh sudo bash
                        install-monitoring-agent.sh At the end of the installation, you should see something like the
                        following message. Restarting services [ ok ] Restarting stackdriver-agent (via systemctl):
                        stackdriver-agent.service.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;If you use an HTTP proxy, do the following: a. Edit the Monitoring agent's
                        system-defaults file to set PROXY_URL to the URL of your HTTP proxy. This URL comes from your
                        configuration, not from a value Google provides. The name of the configuration file depends on
                        your version of Linux: For Debian and Ubuntu, edit /etc/default/stackdriver-agent For Amazon
                        Linux, Red Hat, and CentOS, edit /etc/sysconfig/stackdriver b. Restart the Monitoring agent by
                        running the following command on your VM instance. sudo service stackdriver-agent restart You
                        have finished installing the agent.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Google Cloud docs: SQL Best practices monitoring" url="https://cloud.google.com/compute/docs/instances/sql-server/best-practices?-419#monitoring"/>
            <reference name="Google Cloud: monitoring install agent in linux" url="https://cloud.google.com/monitoring/agent/install-agent?hl=es-419#linux-install"/>
            <reference name="Google Cloud: monitoring install agent in windows" url="https://cloud.google.com/monitoring/agent/install-agent?hl=es-419#windows-install"/>
          </references>
          <standards>
            <standard ref="A09:2021-Security Logging and Monitoring Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2017-Insufficient Logging-Monitoring" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Check that the Stackdriver Monitoring agent for Microsoft Windows is installed and
                            configured to receive the monitoring data points into the Stackdriver system.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Check that the monitoring data points are received for the corresponding users.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:06.838">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="GOOGLE CLOUD PLATFORM" name="Google Cloud Platform" desc="" library="Google Cloud Platform">
          <threats>
            <threat ref="LOSS-DATA-REMOVED" name="Attackers destroy the data and the data cannot be recovered" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Google Cloud Platform" editable="true">
              <desc>&lt;p&gt;Attackers gain access to the systems and data with excessive permissions and they remove all the information from the system, which might lead to permanent loss of data, including sensitive or personal data.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="50" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="GOOGLE-BACKUP">
                  <countermeasures>
                    <countermeasure ref="GOOGLE-SQL04" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="GOOGLE-SQL04" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="UNAUTHORISED-CONNECTION" name="Attackers gain unauthorized connection to the resources" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Google Cloud Platform" editable="true">
              <desc>Attackers could gain unauthorized connection to the resources through misconfigured
                                ports or security network configurations.
                            </desc>
              <riskRating confidentiality="25" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="GOOGLE-NET-21">
                  <countermeasures>
                    <countermeasure ref="GOOGLE-SQL01" mitigation="34"/>
                    <countermeasure ref="GOOGLE-SQL02" mitigation="33"/>
                    <countermeasure ref="GOOGLE-SQL06" mitigation="33"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="GOOGLE-SQL01" mitigation="34"/>
                <countermeasure ref="GOOGLE-SQL02" mitigation="33"/>
                <countermeasure ref="GOOGLE-SQL06" mitigation="33"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="UNAUDITABLE-CHANGES-GOOGLE" name="Attackers make undetected and unaudited changes to system configurations" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Google Cloud Platform" editable="true">
              <desc>If audit trails are not properly protected, an attacker could gain access to the
                                system, modify the status of resources or exfiltrate sensitive data without being
                                detected.</desc>
              <riskRating confidentiality="25" integrity="75" availability="50" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="GOOGLE-LOGS01">
                  <countermeasures>
                    <countermeasure ref="GOOGLE-SQL05" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="GOOGLE-SQL05" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="1040ac58-ef70-435d-acb1-23ce6a15e568" diagramComponentId="82e434ec-c6c2-4b39-a3b2-cdd84d4ec09a" ref="0be7889d-456d-4e5d-91c3-46f69ec973f8" name="Databases" desc="" library="CS-Default" parentComponentRef="955c173b-e9fd-42e0-9060-3df6c91ef19e" componentDefinitionRef="empty-component">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses/>
      <countermeasures/>
      <usecases/>
    </component>
    <component uuid="cdd105a1-831c-4fdd-af25-ae11a9075fb3" diagramComponentId="d1b0c03d-1b5e-48b9-a781-1b51fb1c5b5d" ref="95c54fc2-85ff-48a2-a465-b8e0d9f07309" name="GCP Choreography - Pub/Sub" desc="" library="Google Cloud Platform" parentComponentRef="ae917821-12a8-4b3a-a19f-649aaae3b64b" componentDefinitionRef="CD-GOOGLE-CLOUD-PUB-SUB">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses>
        <weakness ref="CWE-778" name="Insufficient Logging" state="0" impact="100" issueId="" issueLink="">
          <desc>When a critical security event occurs, the software either does not record the event or omits important details about the event when logging it. When critical security events are not logged properly, such as in the case of a failed login attempt, this can make malicious behavior more difficult to detect and may hinder forensic analyses after a successful attack.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:07.376">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="GOOGLE_IAM-02" name="Misconfigured credentials for groups and roles" state="0" impact="100" issueId="" issueLink="">
          <desc>The credentials for the groups and roles are incorrectly configured and there are user accounts with more privileges than necessary.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:07.375">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="C-GOOGLE-CLOUD-PUB-SUB1" name="Control access to Cloud Pub/Sub using IAM" issueId="" issueLink="" platform="" cost="0" risk="64" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Control access to Cloud Pub/Sub using IAM&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Pub/Sub uses Identity and Access Management (IAM) for access control.&lt;br&gt; In Pub/Sub, access control can be configured at the project level and at the individual resource level. For example: - Grant access on a per-topic or per-subscription basis, rather than for the whole Cloud project. - If you have view-only access to a single topic or subscription, you cannot view the topic or subscription using the Google Cloud console. Instead, you can use Google Cloud CLI. - Grant access with limited capabilities, such as to only publish messages to a topic, or to only consume messages from a subscription, but not to delete the topic or subscription. - Grant access to all Pub/Sub resources within a project to a group of developers.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Controlling access through the Google Cloud console&lt;/p&gt; 
&lt;p&gt;You can use the GCP Console to manage access control for your topics and projects.&lt;/p&gt; 
&lt;p&gt;To set access controls at the project level, follow these steps:&lt;/p&gt; 1. In the Google Cloud console, go to the IAM page. 2. Select your project. 3. Click Add. 4. Type in one or more principal names. 5. In the Select a role list, select the role you want to grant. 6. Click Save. 7. Verify that the principal is listed with the role that you granted. 
&lt;p&gt;To set access controls for topics and subscriptions, follow these steps:&lt;/p&gt; 1. In the Google Cloud console, go to the Pub/Sub Topics list. 2.If needed, select your Pub/Sub-enabled project. 3. Perform one of the following steps: 
&lt;p&gt; -To set roles for one or more topics, select the topics. - To set roles for a subscription attached to a topic, click the topic ID. In the Topic details page, click the subscription ID. The Subscription details page appears.&lt;/p&gt; 4. If the info panel is hidden, click Show info panel. 5. In the Permissions tab, click Add principal. 6. Type in one or more principal names. 7. In the Select a role list, select the role you want to grant. 8. Click Save. 
&lt;p&gt; For more information, please see Reference URLs.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Access control with IAM" url="https://cloud.google.com/debugger/docs/iam"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>	&lt;p&gt;Testing permissions&lt;/p&gt;

	&lt;p&gt;You can use the testIamPermissions() method to check which of the given permissions the caller can add or remove for the given resource. It takes as parameters a resource name and a set of permissions, and returns the caller's subset of permissions.&lt;/p&gt;

	&lt;p&gt;For code samples to test permissions for a subscription please see Reference URLs.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:07.337">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="C-GOOGLE-CLOUD-PUB-SUB2" name="Create alerting policies for Cloud Pub/Sub" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Create alerting policies for Cloud Pub/Sub&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; The Pub/Sub API exports metrics via Cloud Monitoring. Cloud Monitoring lets you to create monitoring dashboards and alerting policies or access the metrics programmatically.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; To create an alerting policy, do the following:&lt;/p&gt; 
&lt;p&gt;1. In the Google Cloud console, select Monitoring or click the following button.&lt;/p&gt; 
&lt;p&gt;2. Select Alerting.&lt;/p&gt; 
&lt;p&gt;3. Click Create Policy to see the Create alerting policy page.&lt;/p&gt; 
&lt;p&gt;a. Click Add condition and complete the dialog.&lt;/p&gt; 
&lt;p&gt;A condition describes a monitored resource, a metric for that resource, and when the condition is met. An alerting policy must have at least 1 condition, however alerting policies can contain up to 6 conditions. When an alerting policy has exactly 1 condition and when that condition is met, an incident is created. When an alerting policy has multiple conditions, you specify how these conditions are combined. For more information, see Policies with multiple conditions.&lt;/p&gt; 
&lt;p&gt;b. Click Next to advance to the notifications section.&lt;/p&gt; 
&lt;p&gt;c. To be informed when an incident is created, add a notification channel to your alerting policy. You can add multiple notification channels. For details about your choices of notification channels, see Notification options.&lt;/p&gt; 
&lt;p&gt;To add a notification channel, click Notification channels. In the dialog, select one or more notification channels from the menu and then click OK.&lt;/p&gt; 
&lt;p&gt;To add a notification channel to the list of channels, click Manage notification channels. You are taken to the Notification channels page in a new browser tab. From this page, you can update the configured notification channels. When you have completed your updates, return to the original tab, click Refresh, and then select the notification channels to add to the alerting policy.&lt;/p&gt; 
&lt;p&gt;d. (Optional) To be notified when an incident is opened and closed, then select Notify on incident closure. By default, notifications are sent only when an incident is opened.&lt;/p&gt; 
&lt;p&gt;e. (Optional) If the field Incident auto close duration is shown, then set the value of this field to be the duration that Monitoring should wait before closing incidents when observations stop arriving. The default value of this field is seven days. The minimum auto-close duration is 30 minutes.&lt;/p&gt; 
&lt;p&gt;For example, assume that you have an alert with a metric threshold condition that monitors a virtual machine (VM). If you turn down the VM while an incident is open, then by default Monitoring waits for seven days before it closes the incident.&lt;/p&gt; 
&lt;p&gt;f. Click Next to advance to the documentation section.&lt;/p&gt; 
&lt;p&gt;g. Click Name and enter a policy name. This name is included in notifications and it is displayed in the Policies page.&lt;/p&gt; 
&lt;p&gt;h. (Optional) Specify the documentation to be included in notifications. To format your documentation, you can use Markdown. To pull information out of the policy itself to tailor the content of your documentation, you can use variables. For more information about how you can format and tailor the content of this field, see Using Markdown and variables in documentation templates.&lt;/p&gt; 
&lt;p&gt;For example, documentation might include a title such as Addressing High CPU Usage and details that identify the project:&lt;/p&gt; 
&lt;p&gt; &lt;/p&gt;
&lt;ol&gt; 
 &lt;li&gt;Addressing High CPU Usage&lt;/li&gt; 
&lt;/ol&gt;
&lt;p&gt;&lt;/p&gt; 
&lt;p&gt;This note contains information about high CPU Usage.&lt;/p&gt; 
&lt;p&gt;You can include variables in the documentation. For example:&lt;/p&gt; 
&lt;p&gt;This alert originated from the project ${project}, using&lt;br&gt; the variable $${project}.&lt;/p&gt; 
&lt;p&gt;The value replaces the variable only in notifications. The Preview Markdown pane, and the other places in the Google Cloud console that show the documentation, reflect only the Markdown formatting:&lt;/p&gt; 
&lt;p&gt;You can also include channel-specific tagging to control notifications.&lt;/p&gt; 
&lt;p&gt;4. Click Save.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Monitoring overview" url="https://cloud.google.com/pubsub/docs/monitoring"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>	&lt;p&gt;Ensure that you have created alerting policies for Cloud Pub/Sub.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:07.338">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="AUTHORIZATION" name="Authorization" desc="" library="Google Cloud Platform">
          <threats>
            <threat ref="LOSS-CONTROL_ENV" name="Attackers gain unauthorized access to the control of the environment" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Google Cloud Platform" editable="true">
              <desc>&lt;p&gt;Attackers could potentially gain unauthorized access to the control of the environment, due to user accounts - or role groups - not being well defined and configured. As a consequence attackers may be able to make changes without root approval.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="75" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="GOOGLE_IAM-02">
                  <countermeasures>
                    <countermeasure ref="C-GOOGLE-CLOUD-PUB-SUB1" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-GOOGLE-CLOUD-PUB-SUB1" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Records" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="LOGGING AND MONITORING" name="Logging and Monitoring" desc="" library="Google Cloud Platform">
          <threats>
            <threat ref="OWASP-A10-2017" name="Exploitation of insufficient logging and monitoring" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Google Cloud Platform" editable="true">
              <desc>	&lt;p&gt;Exploitation of insufficient logging and monitoring is the bedrock of nearly every major incident. Attackers rely on the lack of monitoring and timely response to achieve their goals without being detected.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="C-GOOGLE-CLOUD-PUB-SUB2" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-GOOGLE-CLOUD-PUB-SUB2" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Records" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="dbc63498-0333-4c7f-b13c-1828e52e0a15" diagramComponentId="8bc2d192-5749-4895-b6a6-c27a151adcf7" ref="9c777314-d3ac-4881-9fba-7034d51a4776" name="GCP Kubernetes" desc="" library="Google Cloud Platform" parentComponentRef="ec9c8d86-b4fb-43ab-8c48-323781a7c9a1" componentDefinitionRef="google-kubernetes">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses>
        <weakness ref="GOOGLE-KEY-ACCESS" name="Container Builder has no access to the CryptoKey" state="0" impact="100" issueId="" issueLink="">
          <desc>The Container Builder has no access to the CryptoKey in order to create and view the keys.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:07.117">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="GOOGLE-USECURE-CREDENTIALS" name="Credentials are not securely stored" state="0" impact="100" issueId="" issueLink="">
          <desc>The credentials that are used to access the resources are not securely stored and can be
                        accessed by unauthorized personnel.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:07.117">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="GOOGLE-KEY-CREATE" name="Keys for encryption are not created" state="0" impact="100" issueId="" issueLink="">
          <desc>There are no keys to encrypt the communication between the users and the Google Container.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:07.117">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="GOOGLE_IAM-02" name="Misconfigured credentials for groups and roles" state="0" impact="100" issueId="" issueLink="">
          <desc>The credentials for the groups and roles are incorrectly configured and there are user accounts with more privileges than necessary.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:07.117">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="GOOGLE-LOGS01" name="Undetected changes in the SQL database information and configuration" state="0" impact="100" issueId="" issueLink="">
          <desc>Changes in the SQL database information and configuration are not detected and audited,
                        because the Google Cloud mechanisms that are used to notify about these changes are disabled.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:07.117">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="GOOGLE-CONT04" name="Assign IAM roles to grant access to the Container Builder" issueId="" issueLink="" platform="" cost="1" risk="64" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Manage and assign roles with the corresponding permissions for access to the Container Builder
                        systems. In this process, the assignment of roles shall adhere to the Principle of Least
                        Privilege.
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        Therefore, each role with access to the containers shall be assigned only with the permissions
                        the user needs for their specific tasks.&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        To grant IAM roles for a new team member or service account:&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Open the Identity and Access Management page in the Google Cloud Platform Console.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Select your project, and click Continue.&lt;/li&gt;
                        &lt;li&gt;Click Add.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Enter the team member's or service account's email address.&lt;/li&gt;
                        &lt;li&gt;Select the desired Role Title from the drop-down menu. Container Builder roles are
                        found under Container Builder.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Click Add.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Google Cloud: manage IAM roles via console" url="https://cloud.google.com/container-builder/docs/securing-builds/configure-access-control#managing_iam_roles_via_the_console_name_short"/>
          </references>
          <standards>
            <standard ref="A01:2021-Broken Access Control" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A5:2017-Broken Access Control" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Open the Identity and Access Management page in the Google Cloud Platform Console.&lt;/li&gt;
                            &lt;li&gt;Select your project, and click Continue.&lt;/li&gt;
                            &lt;li&gt;Check for each IAM role that the access to the Container Builder is assigned and
                            configured correctly.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:07.070">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-CONT01" name="Create a Cloud KMS KeyRing and CryptoKey" issueId="" issueLink="" platform="" cost="1" risk="64" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Create the Cryptokey or the KeyRing to create the keys to connect to the Google Cloud
                        Containers.
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        You can create KeyRings and CryptoKeys using the gcloud kms keyrings create and gcloud kms keys
                        create commands.&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        To create a KeyRing, run the following command in your shell or terminal window: gcloud kms
                        keyrings create [KEYRING-NAME] \&amp;nbsp;
                        &lt;/div&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        --location=global&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;To create a CryptoKey:&amp;nbsp;
                        &lt;div&gt;
                        gcloud kms keys create [KEY-NAME] \&amp;nbsp;
                        &lt;/div&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        --location=global \&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        --keyring=[KEYRING-NAME] \&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        --purpose=encryption&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;where: [KEYRING-NAME] is the name of the KeyRing to create [KEY-NAME] is the
                        name of the CryptoKey to create.</desc>
          <implementations/>
          <references>
            <reference name="Google Cloud docs: KMS Keyring and Cryptokey" url="https://cloud.google.com/container-builder/docs/securing-builds/use-encrypted-secrets-credentials#creating_a_cloud_kms_keyring_and_cryptokey"/>
            <reference name="Google Cloud: create keyring" url="https://cloud.google.com/sdk/gcloud/reference/kms/keyrings/create"/>
            <reference name="Google Cloud: create keys" url="https://cloud.google.com/sdk/gcloud/reference/kms/keys/create"/>
          </references>
          <standards>
            <standard ref="A05:2021-Security Misconfiguration" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A6:2017-Security Misconfiguration" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that each Google Cloud Container has the respective CryptoKey or KeyRing.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:07.069">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-CONT05" name="Enable the logs for Google Container Builder" issueId="" issueLink="" platform="" cost="1" risk="59" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>The Admin activity logs are enabled and logged by default but the Data access logs for
                        Container Builder operations are not recorded by default. You shall enable the Data Access audit
                        logs in the project to follow the access to the Google Cloud Container.&amp;nbsp;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        To enable the audit logs for the containers, you shall go to the file auditConfigs and add the
                        following code:&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ul&gt;
                        &lt;li&gt;In JSON:&amp;nbsp;&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/div&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        &amp;quot;auditConfigs&amp;quot;: [ {&amp;nbsp;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        &amp;quot;service&amp;quot;: &amp;quot;[SERVICE]&amp;quot;,&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &amp;quot;auditLogConfigs&amp;quot;: [&amp;nbsp;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        { &amp;quot;logType&amp;quot;: &amp;quot;ADMIN_READ&amp;quot; },&amp;nbsp;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        { &amp;quot;logType&amp;quot;: &amp;quot;DATA_READ&amp;quot; },&amp;nbsp;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        { &amp;quot;logType&amp;quot;: &amp;quot;DATA_WRITE&amp;quot; },&amp;nbsp;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        ]
                        &lt;/div&gt;
                        &lt;/blockquote&gt;}, ]&amp;nbsp;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;ul&gt;
                        &lt;li&gt;In YAML:&amp;nbsp;&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        auditConfigs:&amp;nbsp;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        - auditLogConfigs:&amp;nbsp;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        - logType: ADMIN_READ&amp;nbsp;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        - logType: DATA_WRITE&amp;nbsp;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        - logType: DATA_READ service: [SERVICE]&amp;nbsp;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;br /&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;Note: the param [SERVICE] shall be replaced with each service of the
                        containers, the services are the following: projects.builds.get, projects.builds.list,
                        projects.triggers.list, projects.triggers.get</desc>
          <implementations/>
          <references>
            <reference name="Google Cloud docs: enable logs for Container Builder" url="https://cloud.google.com/container-builder/docs/securing-builds/audit-logs#enable"/>
          </references>
          <standards>
            <standard ref="A09:2021-Security Logging and Monitoring Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2017-Insufficient Logging-Monitoring" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that the logs are enabled for the Google Containers and they show the correct
                            information about the access of users.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:07.070">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-CONT03" name="Encrypt the files using the CryptoKey" issueId="" issueLink="" platform="" cost="1" risk="64" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>The files shall be encrypted before their storage into a repository or datastore.&amp;nbsp;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        To encrypt a file, run the following command in your shell or terminal window:&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        gcloud kms encrypt \&amp;nbsp;
                        &lt;/div&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        --plaintext-file=secrets.json \&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        --ciphertext-file=secrets.json.enc \&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        --location=global \&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        --keyring=[KEYRING-NAME] \&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        --key=[KEY-NAME]&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;This produces an encrypted file named secrets.json.enc, which contains the
                        contents of secrets.json.</desc>
          <implementations/>
          <references>
            <reference name="Google Cloud docs: encrypting with Cryptokey" url="https://cloud.google.com/container-builder/docs/securing-builds/use-encrypted-secrets-credentials#encrypting_a_file_using_the_cryptokey"/>
          </references>
          <standards>
            <standard ref="A02:2021-Cryptographic Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A3:2017-Sensitive Data Exposure" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that all files are encrypted before they are stored into a repository or data
                            store.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:07.070">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-CONT02" name="Grant the Container Builder service account access to the CryptoKey" issueId="" issueLink="" platform="" cost="1" risk="64" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>To decrypt your resource during your build, you must grant the Container Builder service
                        account the permissions to access your CryptoKey. If it only needs to decrypt the file, you need
                        only grant decrypt permission.&amp;nbsp;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        To grant permission:&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Google Cloud Console:&amp;nbsp;&lt;/li&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Visit the GCP Console IAM menu.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Copy the Container Builder service account email address, which contains
                        @cloudbuild.gserviceaccount.com.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Visit the GCP Console Encryption Keys menu.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Select your KeyRing from the list, then click Permission.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Fill the Add members field with the service account email address.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;From the Roles drop-down menu, choose Cloud KMS CryptoKey Decrypter.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Click Add.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/ul&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Google Cloud docs: grant access with Cryptokey" url="https://cloud.google.com/container-builder/docs/securing-builds/use-encrypted-secrets-credentials#grant_the_product_name_short_service_account_access_to_the_cryptokey"/>
          </references>
          <standards>
            <standard ref="A01:2021-Broken Access Control" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A5:2017-Broken Access Control" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Visit the GCP Console IAM menu.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Copy the Container Builder service account email address, which contains
                            @cloudbuild.gserviceaccount.com.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Visit the GCP Console Encryption Keys menu.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Select your KeyRing from the list, then click Permission.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Check that the respective user accounts are listed.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:07.070">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="GOOGLE CLOUD PLATFORM" name="Google Cloud Platform" desc="" library="Google Cloud Platform">
          <threats>
            <threat ref="LOSS-CONTROL_ENV" name="Attackers gain unauthorized access to the control of the environment" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Google Cloud Platform" editable="true">
              <desc>&lt;p&gt;Attackers could potentially gain unauthorized access to the control of the environment, due to user accounts - or role groups - not being well defined and configured. As a consequence attackers may be able to make changes without root approval.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="75" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="GOOGLE_IAM-02">
                  <countermeasures>
                    <countermeasure ref="GOOGLE-CONT04" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="GOOGLE-CONT04" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="UNAUDITABLE-CHANGES-GOOGLE" name="Attackers make undetected and unaudited changes to system configurations" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Google Cloud Platform" editable="true">
              <desc>If audit trails are not properly protected, an attacker could gain access to the
                                system, modify the status of resources or exfiltrate sensitive data without being
                                detected.</desc>
              <riskRating confidentiality="25" integrity="75" availability="50" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="GOOGLE-LOGS01">
                  <countermeasures>
                    <countermeasure ref="GOOGLE-CONT05" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="GOOGLE-CONT05" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="ACCESS-TO-DATA" name="Sensitive data is compromised through unauthorized access to data storage" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Google Cloud Platform" editable="true">
              <desc>&lt;p&gt;A data breach is a security violation in which sensitive, protected or confidential data is copied, transmitted, viewed, stolen or used by an individual unauthorized to do so. Sensitive data could be exposed due to a bad configuration in user permissions.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="GOOGLE-KEY-ACCESS">
                  <countermeasures>
                    <countermeasure ref="GOOGLE-CONT02" mitigation="33"/>
                  </countermeasures>
                </weakness>
                <weakness ref="GOOGLE-KEY-CREATE">
                  <countermeasures>
                    <countermeasure ref="GOOGLE-CONT01" mitigation="33"/>
                  </countermeasures>
                </weakness>
                <weakness ref="GOOGLE-USECURE-CREDENTIALS">
                  <countermeasures>
                    <countermeasure ref="GOOGLE-CONT03" mitigation="34"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="GOOGLE-CONT01" mitigation="33"/>
                <countermeasure ref="GOOGLE-CONT02" mitigation="33"/>
                <countermeasure ref="GOOGLE-CONT03" mitigation="34"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="ea8c9c3f-99c9-4d2a-ae70-d33bd0ad9b9a" diagramComponentId="7fd5ee1c-a4fa-4b85-aa56-edeed24e7eb6" ref="eea1550a-5549-45f1-af35-47f3cf8d1348" name="GCP Bigtable" desc="" library="Google Cloud Platform" parentComponentRef="0be7889d-456d-4e5d-91c3-46f69ec973f8" componentDefinitionRef="google-bigtable">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses>
        <weakness ref="GOOGLE-USECURE-CREDENTIALS" name="Credentials are not securely stored" state="0" impact="100" issueId="" issueLink="">
          <desc>The credentials that are used to access the resources are not securely stored and can be
                        accessed by unauthorized personnel.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:11.595">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="GOOGLE-MON02" name="Excessive use of administrator accounts" state="0" impact="100" issueId="" issueLink="">
          <desc>The administrator accounts are used for all actions, not only for the administrative ones. This is because these users do not have a personal or user account to perform their daily actions.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:11.595">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CWE-778" name="Insufficient Logging" state="0" impact="100" issueId="" issueLink="">
          <desc>When a critical security event occurs, the software either does not record the event or omits important details about the event when logging it. When critical security events are not logged properly, such as in the case of a failed login attempt, this can make malicious behavior more difficult to detect and may hinder forensic analyses after a successful attack.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:11.596">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="GOOGLE-MON03" name="Lack of 2FA" state="0" impact="100" issueId="" issueLink="">
          <desc>Login to the console without using Multi-factor Authentication (MFA) is considered as suspicious activity. Therefore connection without MFA must be audited and monitored and the corresponding security group must be informed and must validate this connection.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:11.595">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="GOOGLE-IAM03" name="Misconfigured User Account" state="0" impact="100" issueId="" issueLink="">
          <desc>Key security settings such as resetting the password, and other password controls are not
                        configured.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:11.596">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="GOOGLE-IAM-01" name="Misconfigured authentication method for administrator accounts" state="0" impact="100" issueId="" issueLink="">
          <desc>The authentication method "Multi-factor Authentication" for the Administrator accounts is not
                        configured.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:11.596">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="GOOGLE_IAM-02" name="Misconfigured credentials for groups and roles" state="0" impact="100" issueId="" issueLink="">
          <desc>The credentials for the groups and roles are incorrectly configured and there are user accounts with more privileges than necessary.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:11.594">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="GOOGLE-EXPIRATION-DATE" name="Misconfigured security key expirations" state="0" impact="100" issueId="" issueLink="">
          <desc>The password and security key expiration is not configured and users are not obliged to change
                        their security credentials. Not frequently changing passwords, gives attackers the chance to
                        obtain credentials and gain access to the systems.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:11.596">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="GOOGLE-BACKUP" name="There is no recover or backup mechanism" state="0" impact="100" issueId="" issueLink="">
          <desc>There are no processes or mechanisms to regularly save the data to another place in order to
                        have an older version of the data to restore in case of loss. Consequently the data cannot be
                        easily recovered or they cannot be recovered at all.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:11.596">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="GOOGLE-IAM03" name="Apply RBAC with pre-defined policies added into groups and roles" issueId="" issueLink="" platform="" cost="0" risk="64" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Define and create groups that relate to job functions (administrators, developers, accounting,
                        etc.) and assign the relevant permissions for each group, and then assign IAM users to those
                        groups. All the users in an IAM group inherit the permissions assigned to the group. That way,
                        you can make changes for everyone in a group in just one place. As people move around in your
                        company, you can simply change what IAM group their IAM user belongs to. This method is known as
                        Role Based Access Control (RBAC).&amp;nbsp;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        To add a team member and grant an IAM role to the member:
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Open the IAM page in the Cloud Platform Console and open the IAM page.&lt;/li&gt;
                        &lt;li&gt;Click Select a project.&lt;/li&gt;
                        &lt;li&gt;Select a project and click Open.&lt;/li&gt;
                        &lt;li&gt;Click Add to add new members to the project and set their permissions. In the Select a
                        role drop-down menu, click on a service name to find the roles that belong to that service.&amp;nbsp;&lt;/li&gt;
                        &lt;/ol&gt;To grant more than one role to the same project member:
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Open the IAM page in the Cloud Platform Console and open the IAM page.&lt;/li&gt;
                        &lt;li&gt;Click Select a project.&lt;/li&gt;
                        &lt;li&gt;Select a project and click Open.&lt;/li&gt;
                        &lt;li&gt;Enter the email address of the member and select all the roles that you want to grant
                        to the member. Click Add.&amp;nbsp;&lt;/li&gt;
                        &lt;/ol&gt;To grant a role to a member for more than one project:
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Open the IAM and Admin Projects page in the Cloud Platform Console and open the IAM
                        &amp;amp; ADMIN PROJECTS page.&lt;/li&gt;
                        &lt;li&gt;Select all the projects for which you want to grant permissions.&lt;/li&gt;
                        &lt;li&gt;In the IAM tab on the right pane, add the new member and select a role to grant the
                        role for all selected projects.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Granting, changing, and revoking access to resources" url="https://cloud.google.com/iam/docs/granting-changing-revoking-access"/>
          </references>
          <standards>
            <standard ref="A01:2021-Broken Access Control" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A5:2017-Broken Access Control" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Open the IAM page in the Cloud Platform Console and open the IAM page.&lt;/li&gt;
                            &lt;li&gt;Click Select a project and click Open.&lt;/li&gt;
                            &lt;li&gt;List all members from the project.&lt;/li&gt;
                            &lt;li&gt;Check that each member has been assigned to the correct roles.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:11.508">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-IAM08" name="Automatically rotate Google Service account keys" issueId="" issueLink="" platform="" cost="0" risk="64" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>The Google Service Keys shall be rotated to avoid unauthorized access.
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        To enable automatic rotation of a key, set the rotation schedule with the following gcloud
                        command-line syntax:&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        gcloud kms keys update KEY_NAME \&amp;nbsp;
                        &lt;/div&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        --location LOCATION \&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        --keyring KEYRING_NAME \&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        --rotation-period ROTATION_PERIOD \&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        --next-rotation-time NEXT_ROTATION_TIME&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;For example:&amp;nbsp;
                        &lt;div&gt;
                        gcloud kms keys update KEY_NAME&amp;nbsp;
                        &lt;/div&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        --rotation-period=30d&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        --next-rotation-time=2016-10-12T12:34:56.1234Z
                        &lt;/div&gt;
                        &lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Google Cloud docs: KMS rotation schedule" url="https://cloud.google.com/kms/docs/rotating-keys#kms-set-rotation-schedule-cli"/>
          </references>
          <standards>
            <standard ref="A05:2021-Security Misconfiguration" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A6:2017-Security Misconfiguration" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check automatic rotation of keys is enabled.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:11.508">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-BIGTABLE1" name="Control access to Cloud Bigtable using IAM access control" issueId="" issueLink="" platform="" cost="0" risk="64" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Control access to Cloud Bigtable using IAM access control 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  Cloud Bigtable uses Identity and Access Management (IAM) for access control. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  For Cloud Bigtable, you can configure access control at the project, instance, and table levels. Here are some examples of using access control at the project level: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - Allow a user to read from, but not write to, any table within the project. 
&lt;/div&gt; 
&lt;div&gt;
  - Allow a user to read from and write to any table within the project, but not manage instances. 
&lt;/div&gt; 
&lt;div&gt;
  - Allow a user to read from and write to any table within the project, and manage instances. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Here are some examples of using access control at the instance level: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - Allow a user to read from any table in only one instance in a project that has multiple instances. 
&lt;/div&gt; 
&lt;div&gt;
  - Allow a user to manage only one instance in a project that has multiple instances. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Examples of using access control at the table level include the following: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - Allow a user to write to a table but not read from the table. 
&lt;/div&gt; 
&lt;div&gt;
  - Allow a user to read from a table but not write to the table. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  Project-level IAM management 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Granting access 
&lt;/div&gt; 
&lt;div&gt;
  To grant an IAM role to a member on a project, do the following: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  1.In the Cloud Console, go to the IAM page. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  2. Click Add. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  3. Enter an email address. You can add individuals, service accounts, or Google Groups as members, but every project must have at least one individual as a member. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  4. Select a role. Roles give members the appropriate level of permission. For best security practices, we strongly recommend giving the member the least amount of privilege needed. Members with Owner-level permissions are also project owners and can manage all aspects of the project, including shutting it down. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  5. Click Save. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  To grant a role to a member for more than one project, do the following: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  1. In the Cloud Console, go to the Manage resources page. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  2. Select all the projects for which you want to grant permissions. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  3. Click Show info panel, followed by the Permissions tab. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  4. Enter an email address in the New members field, and select the desired role from the dropdown menu. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  5. Click Save. The member is granted the selected role in each of the selected projects. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Instance-level IAM management 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  1. Go to the Cloud Bigtable instances page in the Cloud Console. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  2. Check the boxes next to the instances whose roles you want to manage. An information panel appears. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  3. In the information panel, click Permissions. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  4. Under Add members, start typing the email address of the user or service account you want to add, then click the email address of the user or service account. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  5. Click the Select a role drop-down list, then click Cloud Bigtable to select a predefined role or Custom to select a custom role. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  6. Click the name of each role that you want to assign. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  7. Click Add. The user or service account is granted the roles that you specified at the instance level. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Table-level IAM management 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  1. Go to the Cloud Bigtable instances page in the Cloud Console. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  2. Click the name of the instance that contains the table whose IAM you are setting. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  3. Select Tables in the left navigation pane. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  4. Check the boxes next to the tables whose roles you want to manage. An information panel appears. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  5. In the information panel, click Permissions. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  6. Under Add members, start typing the email address of the user or service account you want to add, then click the email address of the user or service account. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  7. Click the Select a role drop-down list, then click Cloud Bigtable to select a predefined role or Custom to select a custom role. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  8. Click the name of each role that you want to assign. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  9. Click Add. The user or service account is granted the roles that you specified at the table level. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Access control for Cloud Bigtable" url="https://cloud.google.com/bigtable/docs/access-control"/>
            <reference name="Granting, changing, and revoking access to resources" url="https://cloud.google.com/iam/docs/granting-changing-revoking-access"/>
          </references>
          <standards>
            <standard ref="A01:2021-Broken Access Control" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A5:2017-Broken Access Control" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Testing permissions 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Most Google Cloud resources expose the testIamPermissions() method, which allows you to programmatically check whether the currently authenticated caller has been granted one or more specific IAM permissions on the resource. The testIamPermissions() method takes a resource identifier and a set of permissions as input parameters, and returns the set of permissions that the caller is allowed. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  You can use the testIamPermissions() method to determine whether a user should have access to an administrative tool in a web application. For example, you can use this method to decide, based on the user's permissions, whether to display detailed information about a Google Cloud resource. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Note: If you need to test a permission so that you can troubleshoot access to a resource, use the Policy Troubleshooter instead. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  For example, to determine if the currently authenticated user has the permission to delete a project, call the projects.testIamPermissions() method by providing the project ID (such as foo-project) and the resourcemanager.projects.delete permission as input parameters. If the caller has been granted the resourcemanager.projects.delete permission, it will be listed in the response body. If the caller does not have this permission, the response body will list no permissions. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The testIamPermissions() method is intended for third-party graphical user interfaces (GUIs) that need to display Google Cloud resources based on what the authenticated user has permissions to see. For example, the Cloud Console internally uses the testIamPermissions() method to determine what resources and functionality are visible to you after authenticating. Different users are typically granted different permissions, and the Cloud Console hides or exposes items accordingly. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  How to test permissions 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  This example shows how to test the resourcemanager.projects.get and resourcemanager.projects.delete permissions for a Google Cloud project. To test permissions for other Google Cloud resources, use the testIamPermissions() method exposed by each resource. For example, you can test the IAM permissions for a Cloud Storage bucket. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  In this example, the user has an IAM role that allows them to get information about a project, but not to delete projects. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The Resource Manager API's projects.testIamPermissions method accepts a list of permissions and tests which of the permissions a member has. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Before using any of the request data below, make the following replacements: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  project-id: Your Google Cloud project ID. 
&lt;/div&gt; 
&lt;div&gt;
  HTTP method and URL: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  POST https://cloudresourcemanager.googleapis.com/v1/projects/project-id:testIamPermissions 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Request JSON body: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  { 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; "permissions":&amp;nbsp; [ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; "resourcemanager.projects.get", 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; "resourcemanager.projects.delete" 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; ] 
&lt;/div&gt; 
&lt;div&gt;
  } 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Note: Ensure you have set the GOOGLE_APPLICATION_CREDENTIALS environment variable to your service account private key file path. 
&lt;/div&gt; 
&lt;div&gt;
  Save the request body in a file called request.json, and execute the following command: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  curl -X POST \ 
&lt;/div&gt; 
&lt;div&gt;
  -H "Authorization: Bearer "$(gcloud auth application-default print-access-token) \ 
&lt;/div&gt; 
&lt;div&gt;
  -H "Content-Type: application/json; charset=utf-8" \ 
&lt;/div&gt; 
&lt;div&gt;
  -d @request.json \ 
&lt;/div&gt; 
&lt;div&gt;
  https://cloudresourcemanager.googleapis.com/v1/projects/project-id:testIamPermissions 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  You should receive a JSON response similar to the following: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  { 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; "permissions": [ 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; "resourcemanager.projects.get" 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; ] 
&lt;/div&gt; 
&lt;div&gt;
  } 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:11.507">
              <output/>
            </source>
            <references>
              <reference name="Testing permissions" url="https://cloud.google.com/iam/docs/testing-permissions"/>
            </references>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-BIGTABLE4" name="Create alerts to monitor Google Cloud Bigtable resources using Cloud Monitoring" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Create alerts to monitor Google BigQuery resources using Cloud Monitoring 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  Cloud Bigtable exports usage metrics that you can monitor programmatically using Cloud Monitoring. You can use the Cloud Monitoring API or the Metrics Explorer to track Cloud Bigtable usage metrics. In addition, you can set up alerting policies based on usage metrics, and you can add charts for Cloud Bigtable usage metrics to a custom dashboard. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  To view usage metrics in the Metrics Explorer: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  1. Open the Monitoring page in the Cloud Console. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  If you are prompted to choose an account, choose the account that you use to access Google Cloud. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  2. Click Resources, then click Metrics Explorer. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  3. Under Find resource type and metric, type bigtable. A list of Cloud Bigtable resources and metrics appears. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  4. Click a metric to view a chart for that metric. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  To create an alerting policy, do the following: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  1. In the Cloud Console, select Monitoring: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  If this is the first time you access Monitoring for a Google Cloud project, then the project must be associated with a Workspace. This process is automatic if you have never used Monitoring or if you have never created a multi-project Workspace. However, if you have ever created a multi-project Workspace, then a dialog appears and you can either create a new Workspace or add this project to an existing Workspace. After you make your selection, click Add. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  2. Select Alerting. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  3. Click Create Policy to see the Create alerting policy page: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  a. Click Add condition and complete the dialog. For information on the fields in a condition, see Specifying conditions. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  A condition describes a monitored resource, a metric for that resource, and when the condition is met. An alerting policy must have at least 1 condition, however alerting policies can contain up to 6 conditions. If an alerting policy has exactly 1 condition and if the condition is met, then an incident is created. If an alerting policy has multiple conditions, then you specify how these conditions are combined. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  b. Click Next to advance to the notifications section. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  c. To be informed when an incident is created, add a notification channel to your alerting policy. You can add multiple notification channels. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  To add a notification channel, click Notification channels. In the dialog, select one or more notification channels from the menu and then click OK. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  If a notification channel that you want to add isn't listed, then click Manage notification channels. You are taken to the Notification channels page in a new browser tab. From this page, you can update the configured notification channels. When you have completed your updates, return to the original tab, click Refresh, and then select the notification channels to add to the alerting policy. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  d. Click Next to advance to the documentation section. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  e. Click Name and enter a policy name. This name is included in notifications and it is displayed in the Policies page. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  f. (Optional) Specify the documentation to be included in notifications. You can use Markdown to format your documentation, or use plain text. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  In addition to Markdown, you can use variables to pull information out of the policy itself to tailor the content of your documentation. 
&lt;/div&gt; 
&lt;div&gt;
  You can also include channel-specific tagging to control notifications. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  4. Click Save. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Monitoring Cloud Bigtable" url="https://cloud.google.com/bigtable/docs/monitoring-instance"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="A09:2021-Security Logging and Monitoring Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2017-Insufficient Logging-Monitoring" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Viewing alerts 
&lt;/div&gt; 
&lt;div&gt;
  When an alert is triggered by a metric threshold condition, Monitoring creates an incident (and a corresponding event). 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  You can review incidents from the Monitoring Alerting &amp;gt; Incidents page. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  If you defined a notification mechanism in the alert policy, such as an email or SMS notification, Monitoring also sends a notification of the incident. 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:11.508">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-IAM05" name="Create Individual Accounts for the administrator users" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Create individual accounts for administrator users and with these new accounts perform the necessary administrative actions. By creating service accounts for people accessing your account, you can give each Google user a unique set of security credentials and roles.&amp;nbsp; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The administrator accounts shall be used for administrative actions and for giving or revoking credentials to users' accounts. The administrator account shall be not used as a normal user account. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Open the Service Accounts page in the Cloud Platform Console and open the IAM page.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Click Select a project.&lt;/li&gt; 
  &lt;li&gt;Select your project and click Open.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Click Create Service Account.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Enter a service account name, select a role you wish to grant to the service account and click Create.&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Google Cloud docs: manage service accounts" url="https://cloud.google.com/iam/docs/creating-managing-service-accounts"/>
          </references>
          <standards>
            <standard ref="A07:2021-Identification and Authentication Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A2:2017-Broken Authentication" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Open the Service Accounts page in the Cloud Platform Console and open the IAM
                            page.&lt;/li&gt;
                            &lt;li&gt;Click Select a project.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Select your project and click Open.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Review that each administrator user has an individual Google Service Account.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:11.508">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-IAM04" name="Create mechanisms to ensure Least Privilege is applied" issueId="" issueLink="" platform="" cost="0" risk="64" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Create mechanisms to periodically review the group and user permissions to ensure the least
                        privilege for the user accounts. Granting least privilege ensures that users only have the
                        permissions required to complete their tasks rather than additional privileges that are not
                        required. Following this model ensures that, should an account be compromised, the blast radius
                        of damage is limited.&amp;nbsp;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        Allocate privileges via groups or roles via the recommendation in &amp;quot;Use RBAC with
                        pre-defined policies added into groups or roles&amp;quot;.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Open the IAM page in the Google Cloud Platform Console and open the IAM page.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Click Select a project.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Select a project and click Open.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Review the groups and users with access to the project and their permissions.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;If there is a user with more privileges, revoke the access as following:&lt;/li&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Select the user to revoke privileges.&lt;/li&gt;
                        &lt;li&gt;In the Roles(s) drop-down menu in the member's row, uncheck the roles you want to
                        revoke and click Save.&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Granting, changing, and revoking access to resources" url="https://cloud.google.com/iam/docs/granting-changing-revoking-access"/>
          </references>
          <standards>
            <standard ref="A01:2021-Broken Access Control" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A5:2017-Broken Access Control" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check there is a mechanism in place to ensure the enforcement of the Least Privilege
                            principle.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:11.508">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-IAM02" name="Define roles for the Google Service Accounts" issueId="" issueLink="" platform="" cost="0" risk="64" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Define and create the roles for the Google Cloud. For each role, you can use one of the
                        predefined roles or create a new custom role to ensure that each role has got the least minimum
                        permissions.&amp;nbsp;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;List all predefined roles and review them.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;If it's necessary, create new custom roles to ensure users have the least privileges.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="A01:2021-Broken Access Control" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A5:2017-Broken Access Control" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;List all roles.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Check that all fulfill the least privilege principle.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Check that all roles are defined correctly.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:11.508">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-IAM01" name="Recertify user access" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Do regular reviews of service accounts on the system and verify they do not contain stolen or
                        fake accounts. This process ensures there are not any compromised accounts by former employees
                        or attackers.&amp;nbsp;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        At least every 90 days complete the following:&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Open the Service Accounts page in the Cloud Platform Console.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Click Select a project.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Select your project and click Open. All service accounts are listed in the Service
                        Accounts page.&lt;/li&gt;
                        &lt;li&gt;For any user that should not exist, select the user and click the Delete button.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Google Cloud docs: manage service accounts" url="https://cloud.google.com/iam/docs/creating-managing-service-accounts"/>
          </references>
          <standards>
            <standard ref="A07:2021-Identification and Authentication Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A2:2017-Broken Authentication" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Open the Service Accounts page in the Cloud Platform Console.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Click Select a project.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Select your project and click Open. All service accounts are listed in the Service
                            Accounts page.&lt;/li&gt;
                            &lt;li&gt;Check that the necessary users appear in the list.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;And check that there is a process to review the access users at least every 90
                            days.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:11.508">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-STO02" name="Securely store your credentials" issueId="" issueLink="" platform="" cost="0" risk="64" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Make sure that you securely store your credentials. This can be done differently depending on
                        your environment and where you store your credentials. For example, if you store your
                        credentials in a configuration file, make sure that you set appropriate permissions on that file
                        to prevent unwanted access. If you are using Google App Engine, consider using StorageByKeyName
                        to store your credentials.</desc>
          <implementations/>
          <references>
            <reference name="Google Cloud docs: Best practices storage" url="https://cloud.google.com/storage/docs/best-practices"/>
          </references>
          <standards>
            <standard ref="A02:2021-Cryptographic Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A3:2017-Sensitive Data Exposure" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that the credentials are stored securely.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:11.509">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-USER-MFA" name="Setup Multi-factor Authentication for Google Cloud Platform accounts" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Setup Multi-factor Authentication for Google Cloud Platform accounts 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  Multi-factor authentication requires more than one mechanism to authenticate a user. This secures user logins from attackers exploiting stolen or weak credentials. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  Deploy 2-Step Verification 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Step 1: Notify users of 2-Step Verification deployment (required) 
&lt;/div&gt; 
&lt;div&gt;
  Before deploying 2-Step Verification, communicate your company's plans to your users, including: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - What is 2-Step Verification and why your company is using it 
&lt;/div&gt; 
&lt;div&gt;
  - Whether 2-Step Verification is optional or required 
&lt;/div&gt; 
&lt;div&gt;
  - If required, give the date by which users must turn on 2-Step Verification 
&lt;/div&gt; 
&lt;div&gt;
  - Which 2-Step Verification method is required or recommended. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Step 2: Set up basic 2-Step Verification (required) 
&lt;/div&gt; 
&lt;div&gt;
  Next, let your users turn on 2-Step Verification. By default, users can turn on 2-Step Verification and use any verification method. (G Suite accounts created before December 2016 have 2-Step Verification turned off by default). 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Applying 2-Step Verification settings 
&lt;/div&gt; 
&lt;div&gt;
  You can customize 2-Step Verification settings for organizational units and exception groups-a group of users within organizational unit. For example, require security keys for a small team in your Sales organizational unit. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  How exception groups work 
&lt;/div&gt; 
&lt;div&gt;
  - You can assign one exception group to an organizational unit. 
&lt;/div&gt; 
&lt;div&gt;
  - Users in the exception group must belong to the organizational unit. 
&lt;/div&gt; 
&lt;div&gt;
  - 2-Step Verification settings apply to users in the exception group (not to group addresses or nested groups). 
&lt;/div&gt; 
&lt;div&gt;
  - Create the groups in Admin console, Groups API, or Directory Sync (not Google Groups). 
&lt;/div&gt; 
&lt;div&gt;
  For easier identification, you might include the organizational unit in the name of exception groups (for example, exgrp_OU_name). 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Also: 
&lt;/div&gt; 
&lt;div&gt;
  - Allow users to turn on 2-Step Verification 
&lt;/div&gt; 
&lt;div&gt;
  - Tell your users to enroll in 2-Step Verification 
&lt;/div&gt; 
&lt;div&gt;
  - Track users' enrollment&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Step 3: Enforce 2-Step Verification (optional) 
&lt;/div&gt; 
&lt;div&gt;
  Make sure users are enrolled in 2-Step Verification before turning on enforcement. Users who aren't enrolled can't sign in to their accounts. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Also: 
&lt;/div&gt; 
&lt;div&gt;
  - Ensure a smooth transition to an enforcement policy 
&lt;/div&gt; 
&lt;div&gt;
  - Choose a 2-Step Verification method to enforce 
&lt;/div&gt; 
&lt;div&gt;
  - Turn on enforcement 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  For more details please follow the Reference URL. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Deploy 2-Step Verification" url="https://support.google.com/a/answer/9176657"/>
          </references>
          <standards>
            <standard ref="A07:2021-Identification and Authentication Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A2:2017-Broken Authentication" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  For each Google Cloud Platform project, folder, or organization: 
&lt;/div&gt; 
&lt;div&gt;
  1. Identify non-service accounts. 
&lt;/div&gt; 
&lt;div&gt;
  2. Manually verify that multi-factor authentication for each account is set. 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:11.509">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-BIGTABLE2" name="Use a service account instead of a user account for almost all Cloud Bigtable use cases" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Use a service account instead of a user account for almost all Cloud Bigtable use cases 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  Service accounts are recommended by Google Cloud for almost all use cases, whether you are developing locally or in a production application. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  What are service accounts? 
&lt;/div&gt; 
&lt;div&gt;
  A service account is a special kind of account used by an application or a virtual machine (VM) instance, not a person. Applications use service accounts to make authorized API calls, authorized as either the service account itself, or as Google Workspace or Cloud Identity users through domain-wide delegation. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  For example, a Compute Engine VM may run as a service account, and that account can be given permissions to access the resources it needs. This way the service account is the identity of the service, and the service account's permissions control which resources the service can access. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  A service account is identified by its email address, which is unique to the account. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Differences between a service account and a user account 
&lt;/div&gt; 
&lt;div&gt;
  Service accounts differ from user accounts in a few key ways: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - Service accounts do not have passwords, and cannot log in via browsers or cookies. 
&lt;/div&gt; 
&lt;div&gt;
  - Service accounts are associated with private/public RSA key-pairs that are used for authentication to Google. 
&lt;/div&gt; 
&lt;div&gt;
  - You can let other users or service accounts impersonate a service account. 
&lt;/div&gt; 
&lt;div&gt;
  - Service accounts are not members of your Google Workspace domain, unlike user accounts. For example, if you share assets with all members in your Google Workspace domain, they will not be shared with service accounts. Similarly, any assets created by a service account cannot be owned or managed by Google Workspace or Cloud Identity admins. This doesn't apply when using domain-wide delegation, because API calls are authorized as the impersonated user, not the service account itself. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  1. In the Cloud Console, go to the Create service account key page. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  2. From the Service account list, select New service account. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  3. In the Service account name field, enter a name. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  4. From the Role list, select Project &amp;gt; Owner. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Note: The Role field affects which resources your service account can access in your project. You can revoke these roles or grant additional roles later. In production environments, do not grant the Owner, Editor, or Viewer roles. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  5. Click Create. A JSON file that contains your key downloads to your computer. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Authentication information for Cloud Bigtable" url="https://cloud.google.com/bigtable/docs/authentication"/>
          </references>
          <standards>
            <standard ref="A01:2021-Broken Access Control" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A5:2017-Broken Access Control" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  1. Open the Service Accounts page in the Cloud Platform Console.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt;
  2. Click Select a project.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt;
  3. Select your project and click Open. All service accounts are listed in the Service Accounts page. 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:11.507">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-BIGTABLE3" name="Use Cloud Bigtable backups or replication" issueId="" issueLink="" platform="" cost="0" risk="59" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Use Cloud Bigtable backups or replication 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  Overview of replication 
&lt;/div&gt; 
&lt;div&gt;
  Replication for Cloud Bigtable enables you to increase the availability and durability of your data by copying it across multiple regions or multiple zones within the same region. You can also isolate workloads by routing different types of requests to different clusters. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Overview of backups 
&lt;/div&gt; 
&lt;div&gt;
  What backups are for: 
&lt;/div&gt; 
&lt;div&gt;
  Backups can help you recover from application-level data corruption or from operator errors such as accidentally deleting a table. 
&lt;/div&gt; 
&lt;div&gt;
  What backups are not for: 
&lt;/div&gt; 
&lt;div&gt;
  Backups are not intended for protection against regional or zonal failures. Use replication if you need the ability to fail over to different regions or zones. 
&lt;/div&gt; 
&lt;div&gt;
  Backups are not readable, so they are not useful for offline analytics. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  Creating a table backup 
&lt;/div&gt; 
&lt;div&gt;
  1.Go to the Cloud Bigtable instances page in the Cloud Console. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  2. Click the instance that contains the table you want to back up. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  3. In the left navigation pane, click Tables. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  4. Click Create backup for the table you want to back up. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  5. If you are using replication, use the dropdown menu to choose the Cluster ID for the cluster that should store the backup. (If you clicked Create backup next to a cluster ID rather than an instance ID on the Tables page, the cluster is pre-selected.) 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  6. Enter a unique ID for the backup. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  7. Set an expiration date. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  8. Click Create. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The console displays the Backups page filtered to show the backup and its details. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  9. Click Activity to view the status of the backup. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The status column displays Backup complete when the backup has been completed. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  How to use replication 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  To use replication in a Cloud Bigtable instance, create a new instance with more than 1 cluster or add clusters to an existing instance. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Cloud Bigtable supports up to 4 replicated clusters located in Google Cloud zones where Cloud Bigtable is available. An instance's clusters must each be in unique zones. You can create an additional cluster in any zone where Cloud Bigtable is available. Placing clusters in different zones or regions enables you to access your data even if one Google Cloud zone or region becomes unavailable. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Creating an instance 
&lt;/div&gt; 
&lt;div&gt;
  To create a Cloud Bigtable instance: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  1. Open the Create Instance page in the Cloud Console. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  2. Enter a name for the instance. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The Cloud Console displays this name to identify your instance. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  3. Enter an instance ID. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The instance ID is a permanent identifier for the instance. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  4. Click Continue. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  5. Choose whether to use an SSD or HDD disk for your clusters. In most cases, SSD is best. This choice is permanent. Learn more. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  6. Click Continue. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  7. Enter a cluster ID for the first cluster. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The cluster ID is a permanent identifier for the cluster. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  8. Choose the region and zone where the first cluster will run. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  If you plan to use replication within a single region, make sure Cloud Bigtable is available in at least one other zone in that region. View the zone list. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  9. Choose the number of Cloud Bigtable nodes for the first cluster. If you aren't sure how many nodes you need, use the default. You can add more nodes later. Learn more. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  10. To enable replication now, click Add cluster, enter the settings for the second cluster, then click Add. Repeat this step to create up to 4 clusters in the instance. You can also enable replication later by adding a cluster. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  An instance's clusters must each be in unique zones. You can create an additional cluster in any zone where Cloud Bigtable is available. If the Add cluster button is disabled, change the zone for your first cluster. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  11. Click Create to create the instance. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  12. Next, review the replication settings in the default app profile to see if they make sense for your replication use case. You might need to update the default app profile or create custom app profiles. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  Replicated clusters in different regions typically have higher replication latency than replicated clusters in the same region. 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Cloud Bigtable backups" url="https://cloud.google.com/bigtable/docs/backups"/>
            <reference name="Managing backups" url="https://cloud.google.com/bigtable/docs/managing-backups"/>
            <reference name="Overview of replication" url="https://cloud.google.com/bigtable/docs/replication-overview"/>
          </references>
          <standards>
            <standard ref="A05:2021-Security Misconfiguration" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A6:2017-Security Misconfiguration" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Checking the status of an operation for backups 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  1. Go to the Cloud Bigtable instances page in the Cloud Console. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  2. Click the instance that contains the backup. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  3. In the left navigation pane, click Backups. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  4. On the Backups page, click Activity. The status column displays the current status for each operation. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Operation statuses when restoring a table include the following: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - Waiting to copy 
&lt;/div&gt; 
&lt;div&gt;
  - Restoring backup 
&lt;/div&gt; 
&lt;div&gt;
  - Initializing 
&lt;/div&gt; 
&lt;div&gt;
  - Ready-optimizing 
&lt;/div&gt; 
&lt;div&gt;
  - Ready 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Operations statuses when create a backup include the following: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - Creating backup 
&lt;/div&gt; 
&lt;div&gt;
  - Backup complete 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Replication 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Review the replication settings in the default app profile to see if they make sense for your replication use case. You might need to update the default app profile or create custom app profiles. 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:11.508">
              <output/>
            </source>
            <references>
              <reference name="Configuring App Profiles" url="https://cloud.google.com/bigtable/docs/configuring-app-profiles"/>
            </references>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-IAM06" name="Use Security Key for 2-Step Verification for administrator or co-administrator accounts" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Ensure that the users with administrator and co-administrator accounts activate and configure the second factor authentication provided by Google. With 2-Step Verification, you can log into Google with a security key.&amp;nbsp; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  To activate and configure 2 Factor Authentication, you shall follow the following steps: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Go to the 2-Step Verification page section of &lt;a href="https://myaccount.google.com/signinoptions/two-step-verification"&gt;My Account&lt;/a&gt;.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Click Add security key.&lt;/li&gt; 
  &lt;li&gt;Follow the on-screen instructions.&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Google Cloud: mobile account" url="https://support.google.com/accounts/answer/6103523?co=GENIE.Platform%3DAndroid#phone"/>
            <reference name="Google support: answers" url="https://support.google.com/accounts/answer/6103534"/>
          </references>
          <standards>
            <standard ref="A07:2021-Identification and Authentication Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A2:2017-Broken Authentication" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Go to the 2-Step Verification page section of My Account.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Check that 2-Step Verification authentication is enabled and configured correctly.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:11.508">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="authentication" name="Authentication" desc="" library="Google Cloud Platform">
          <threats>
            <threat ref="GOOGLE-LOST-ACCESS-ROOT" name="Attackers gain unauthorized access to the root account due to lack of configuration of the account" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Google Cloud Platform" editable="true">
              <desc>&lt;p&gt;Attackers could gain unauthorized access to the administrator account due to lack of configuration of the account and its security mechanisms, such as modifying credentials and adding/removing user accounts.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="GOOGLE-IAM-01">
                  <countermeasures>
                    <countermeasure ref="GOOGLE-IAM06" mitigation="50"/>
                  </countermeasures>
                </weakness>
                <weakness ref="GOOGLE-MON02">
                  <countermeasures>
                    <countermeasure ref="GOOGLE-IAM05" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="GOOGLE-IAM05" mitigation="50"/>
                <countermeasure ref="GOOGLE-IAM06" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="GOOGLE-LOST-ACCESS-USER" name="Attackers gain unauthorized access to the user account due to lack of configuration of the account" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Google Cloud Platform" editable="true">
              <desc>&lt;p&gt;Attackers could gain unauthorized access to the user account due to lack of configuration of the account, for example, the security question to reset the password is configured incorrectly.&lt;/p&gt;</desc>
              <riskRating confidentiality="50" integrity="50" availability="50" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="GOOGLE-IAM03">
                  <countermeasures>
                    <countermeasure ref="GOOGLE-BIGTABLE2" mitigation="34"/>
                    <countermeasure ref="GOOGLE-IAM01" mitigation="33"/>
                  </countermeasures>
                </weakness>
                <weakness ref="GOOGLE-MON03">
                  <countermeasures>
                    <countermeasure ref="GOOGLE-USER-MFA" mitigation="33"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="GOOGLE-BIGTABLE2" mitigation="34"/>
                <countermeasure ref="GOOGLE-IAM01" mitigation="33"/>
                <countermeasure ref="GOOGLE-USER-MFA" mitigation="33"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="authorization" name="Authorization" desc="" library="Google Cloud Platform">
          <threats>
            <threat ref="LOSS-CONTROL_ENV" name="Attackers gain unauthorized access to the control of the environment" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Google Cloud Platform" editable="true">
              <desc>&lt;p&gt;Attackers could potentially gain unauthorized access to the control of the environment, due to user accounts - or role groups - not being well defined and configured. As a consequence attackers may be able to make changes without root approval.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="75" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="GOOGLE-EXPIRATION-DATE">
                  <countermeasures>
                    <countermeasure ref="GOOGLE-IAM08" mitigation="20"/>
                  </countermeasures>
                </weakness>
                <weakness ref="GOOGLE_IAM-02">
                  <countermeasures>
                    <countermeasure ref="GOOGLE-BIGTABLE1" mitigation="20"/>
                    <countermeasure ref="GOOGLE-IAM02" mitigation="20"/>
                    <countermeasure ref="GOOGLE-IAM03" mitigation="20"/>
                    <countermeasure ref="GOOGLE-IAM04" mitigation="20"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="GOOGLE-BIGTABLE1" mitigation="20"/>
                <countermeasure ref="GOOGLE-IAM02" mitigation="20"/>
                <countermeasure ref="GOOGLE-IAM03" mitigation="20"/>
                <countermeasure ref="GOOGLE-IAM04" mitigation="20"/>
                <countermeasure ref="GOOGLE-IAM08" mitigation="20"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="general" name="General" desc="" library="Google Cloud Platform">
          <threats>
            <threat ref="LOSS-DATA-REMOVED" name="Attackers destroy the data and the data cannot be recovered" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Google Cloud Platform" editable="true">
              <desc>&lt;p&gt;Attackers gain access to the systems and data with excessive permissions and they remove all the information from the system, which might lead to permanent loss of data, including sensitive or personal data.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="50" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="GOOGLE-BACKUP">
                  <countermeasures>
                    <countermeasure ref="GOOGLE-BIGTABLE3" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="GOOGLE-BIGTABLE3" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="ACCESS-TO-DATA" name="Sensitive data is compromised through unauthorized access to data storage" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Google Cloud Platform" editable="true">
              <desc>&lt;p&gt;A data breach is a security violation in which sensitive, protected or confidential data is copied, transmitted, viewed, stolen or used by an individual unauthorized to do so. Sensitive data could be exposed due to a bad configuration in user permissions.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="GOOGLE-USECURE-CREDENTIALS">
                  <countermeasures>
                    <countermeasure ref="GOOGLE-STO02" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="GOOGLE-STO02" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="logging-and-monitoring" name="Logging and Monitoring" desc="" library="Google Cloud Platform">
          <threats>
            <threat ref="OWASP A10:2017" name="Exploitation of insufficient logging and monitoring" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Google Cloud Platform" editable="true">
              <desc>	&lt;p&gt;Exploitation of insufficient logging and monitoring is the bedrock of nearly every major incident.&lt;br /&gt;
 Attackers rely on the lack of monitoring and timely response to achieve their goals without being detected.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="GOOGLE-BIGTABLE4" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="GOOGLE-BIGTABLE4" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="0062d1fb-415d-438c-b0bb-878ef22fa628" diagramComponentId="860195b6-dbf5-4b79-8d97-db1b4cebc22a" ref="8f95a153-70a2-400d-ae4a-d4606f39526f" name="Cloud DNS" desc="" library="CS-Default" parentComponentRef="955c173b-e9fd-42e0-9060-3df6c91ef19e" componentDefinitionRef="empty-component">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses/>
      <countermeasures/>
      <usecases/>
    </component>
    <component uuid="5ec8707d-b819-42fc-aa50-a5c1ceccb7b7" diagramComponentId="314cc30f-333a-4a37-a880-e4f4a799a3a7" ref="dfbc7f0b-83b2-4a5d-bc17-d048dbe31a09" name="Static Assets - GCP Storage" desc="" library="Google Cloud Platform" parentComponentRef="955c173b-e9fd-42e0-9060-3df6c91ef19e" componentDefinitionRef="google-storage">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses>
        <weakness ref="GOOGLE-USECURE-CREDENTIALS" name="Credentials are not securely stored" state="0" impact="100" issueId="" issueLink="">
          <desc>The credentials that are used to access the resources are not securely stored and can be
                        accessed by unauthorized personnel.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:11.911">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="GOOGLE-OBSOLETE-APPS-ACCESS" name="Obsolete applications have access to the resources" state="0" impact="100" issueId="" issueLink="">
          <desc>There are obsolete applications that no one uses, with permissions to access the resources.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:11.912">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="GOOGLE-EASY-FIND-RESOURCES" name="Resources are exposed" state="0" impact="100" issueId="" issueLink="">
          <desc>When you are into a VNet, you can search its resources, but that shall be used only when you
                        know the resource name. The problem occurs when you don't know these names and you can easily
                        find the resources. Therefore anyone with access to the system could easily find all the
                        resources and gain access, regardless of having any information about them.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:11.912">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="GOOGLE-BACKUP" name="There is no recover or backup mechanism" state="0" impact="100" issueId="" issueLink="">
          <desc>There are no processes or mechanisms to regularly save the data to another place in order to
                        have an older version of the data to restore in case of loss. Consequently the data cannot be
                        easily recovered or they cannot be recovered at all.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:11.912">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="GOOGLE-STO05" name="Block access to Cloud Storage buckets from unauthorized access" issueId="" issueLink="" platform="" cost="1" risk="64" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;It is recommended that IAM policy on Cloud Storage bucket does not allows anonymous or public access.&lt;/p&gt;&lt;p&gt;Rationale:&lt;/p&gt;&lt;p&gt;Allowing anonymous or public access grants permissions to anyone to access bucket content. Such access might not be desired if you are storing any sensitive data. Hence, ensure that anonymous or public access to a bucket is not allowed.&lt;/p&gt;&lt;p&gt;Impact:&lt;/p&gt;&lt;p&gt;No storage buckets would be publicly accessible. You would have to explicitly administer bucket access.&lt;/p&gt;&lt;p&gt;Remediation:&lt;/p&gt;&lt;p&gt;From Console:&lt;/p&gt;&lt;p&gt;1. Go to Storage browser by visiting https://console.cloud.google.com/storage/browser.&lt;/p&gt;&lt;p&gt;2. Click on the bucket name to go to its Bucket details page.&lt;/p&gt;&lt;p&gt;3. Click on the Permissions tab.&lt;/p&gt;&lt;p&gt;4. Click Delete button in front of allUsers and allAuthenticatedUsers to remove that particular role assignment.&lt;/p&gt;&lt;p&gt;From Command Line:&amp;nbsp;&lt;/p&gt;&lt;p&gt;Remove allUsers and allAuthenticatedUsers access.&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;gsutil iam ch -d allUsers gs://BUCKET_NAME&amp;nbsp;&lt;/p&gt;&lt;p&gt;gsutil iam ch -d allAuthenticatedUsers gs://BUCKET_NAME&lt;/p&gt;&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="CIS Google Cloud Platform Benchmark" url="https://www.cisecurity.org/benchmark/google_cloud_computing_platform/"/>
          </references>
          <standards>
            <standard ref="5.1" supportedStandardRef="cis-gcp-standard"/>
            <standard ref="5.1" supportedStandardRef="cis-gcp-standard-level-2"/>
            <standard ref="A01:2021-Broken Access Control" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A5:2017-Broken Access Control" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;From Console:&lt;/p&gt;&lt;p&gt;1. Go to Storage browser by visiting https://console.cloud.google.com/storage/browser.&lt;/p&gt;&lt;p&gt;2. Click on each bucket name to go to its Bucket details page.&lt;/p&gt;&lt;p&gt;3. Click on the Permissions tab.&lt;/p&gt;&lt;p&gt;4. Ensure that allUsers and allAuthenticatedUsers are not in the Members list.&lt;/p&gt;&lt;p&gt;From Command Line:&lt;/p&gt;&lt;p&gt;1. List all buckets in a project gsutil ls&lt;/p&gt;&lt;p&gt;2. Check the IAM Policy for each bucket: gsutil iam get gs://BUCKET_NAME&lt;/p&gt;&lt;p&gt;No role should contain allUsers and/or allAuthenticatedUsers as a member.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:11.855">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-STO04" name="Enable Data Storage versioning" issueId="" issueLink="" platform="" cost="1" risk="59" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Enable data storage versioning to make data backups and avoid accidental or intentional
                        removal of the data.&amp;nbsp;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        To enable Object Versioning on a bucket:&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Using GSUTIL: Use the gsutil versioning set on command, replacing [VALUES_IN_BRACKETS]
                        with the appropriate values: gsutil versioning set on gs://[BUCKET_NAME]&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Using REST APIS:&amp;nbsp;&lt;/li&gt;
                        &lt;ul&gt;
                        &lt;li&gt;JSON API:&amp;nbsp;&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/ul&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;ol&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Get an authorization access token from the OAuth 2.0 Playground. Configure the
                        playground to use your own OAuth credentials.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Create a .json file that contains the following information: {&amp;quot;versioning&amp;quot;:
                        { &amp;quot;enabled&amp;quot;: true }}&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Use cURL to call the JSON API with a PATCH Bucket request, replacing
                        [VALUES_IN_BRACKETS] with the appropriate values:&amp;nbsp;&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/ol&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        curl -X PATCH --data-binary @[JSON_FILE_NAME].json \&amp;nbsp;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        -H &amp;quot;Authorization: Bearer [OAUTH2_TOKEN]&amp;quot; \&amp;nbsp;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        -H &amp;quot;Content-Type: application/json&amp;quot; \ &amp;quot;https://www.googleapis.com/storage/v1/b/[BUCKET_NAME]?fields=versioning&amp;quot;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;ul&gt;
                        &lt;ul&gt;
                        &lt;li&gt;XML API:&amp;nbsp;&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/ul&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;ol&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Get an authorization access token from the OAuth 2.0 Playground. Configure the
                        playground to use your own OAuth credentials.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Create an .xml file that contains the following information, replacing
                        [VALUES_IN_BRACKETS] with the appropriate values: Enabled&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Use cURL to call the XML API, with a PUT Bucket request and versioning query string
                        parameter, replacing [VALUES_IN_BRACKETS] with the appropriate values:&amp;nbsp;&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/ol&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        curl -X PUT --data-binary @[XML_FILE_NAME].xml \
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        -H &amp;quot;Authorization: Bearer [OAUTH2_TOKEN]&amp;quot; \
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        &amp;quot;https://storage.googleapis.com/[BUCKET_NAME]?versioning&amp;quot;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;
                        &lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Google Cloud docs: enable versioning" url="https://cloud.google.com/storage/docs/using-object-versioning#enable-object-versioning-xml"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that Data Storage versioning is enabled.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:11.855">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-STO06" name="Enable uniform bucket-level access for Cloud Storage buckets" issueId="" issueLink="" platform="" cost="1" risk="64" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;It is recommended that uniform bucket-level access is enabled on Cloud Storage buckets.&lt;/p&gt;&lt;p&gt;Rationale:&lt;/p&gt;&lt;p&gt;It is recommended to use uniform bucket-level access to unify and simplify how you grant access to your Cloud Storage resources.&lt;/p&gt;&lt;p&gt;Cloud Storage offers two systems for granting users permission to access your buckets and objects: Cloud Identity and Access Management (Cloud IAM) and Access Control Lists (ACLs). These systems act in parallel - in order for a user to access a Cloud Storage resource, only one of the systems needs to grant the user permission. Cloud IAM is used throughout Google Cloud and allows you to grant a variety of permissions at the bucket and project levels. ACLs are used only by Cloud Storage and have limited permission options, but they allow you to grant permissions on a per-object basis.&lt;/p&gt;&lt;p&gt;In order to support a uniform permissioning system, Cloud Storage has uniform bucket-level access. Using this feature disables ACLs for all Cloud Storage resources: access to Cloud Storage resources then is granted exclusively through Cloud IAM. Enabling uniform bucket-level access guarantees that if a Storage bucket is not publicly accessible, no object in the bucket is publicly accessible either.&lt;/p&gt;&lt;p&gt;Impact:&lt;/p&gt;&lt;p&gt;If you enable uniform bucket-level access, you revoke access from users who gain their access solely through object ACLs.&lt;/p&gt;&lt;p&gt;Certain Google Cloud services, such as Stackdriver, Cloud Audit Logs, and Datastore, cannot export to Cloud Storage buckets that have uniform bucket-level access enabled.&lt;/p&gt;&lt;p&gt;Remediation:&lt;/p&gt;&lt;p&gt;From Console:&lt;/p&gt;&lt;p&gt;1. Open the Cloud Storage browser in the Google Cloud Console by visiting: https://console.cloud.google.com/storage/browser&lt;/p&gt;&lt;p&gt;2. In the list of buckets, click on the name of the desired bucket.&lt;/p&gt;&lt;p&gt;3. Select the Permissions tab near the top of the page.&lt;/p&gt;&lt;p&gt;4. In the text box that starts with This bucket uses fine-grained access control..., click Edit.&lt;/p&gt;&lt;p&gt;5. In the pop-up menu that appears, select Uniform.&lt;/p&gt;&lt;p&gt;6. Click Save.&lt;/p&gt;&lt;p&gt;From Command Line: Use the on option in a uniformbucketlevelaccess set command:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;gsutil uniformbucketlevelaccess set on gs://BUCKET_NAME/&lt;/p&gt;&lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="CIS Google Cloud Platform Benchmark" url="https://www.cisecurity.org/benchmark/google_cloud_computing_platform/"/>
          </references>
          <standards>
            <standard ref="5.2" supportedStandardRef="cis-gcp-standard-level-2"/>
            <standard ref="A01:2021-Broken Access Control" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A5:2017-Broken Access Control" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;From Console:&lt;/p&gt;&lt;p&gt;1. Open the Cloud Storage browser in the Google Cloud Console by visiting: https://console.cloud.google.com/storage/browser&lt;/p&gt;&lt;p&gt;2. For each bucket, make sure that Access control column has the value Uniform.&lt;/p&gt;&lt;p&gt;From Command Line:&lt;/p&gt;&lt;p&gt;1. List all buckets in a project&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;gsutil ls&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;2. For each bucket, verify that uniform bucket-level access is enabled.&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;gsutil uniformbucketlevelaccess get gs://BUCKET_NAME/&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;If uniform bucket-level access is enabled, the response looks like:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;Uniform bucket-level access setting for gs://BUCKET_NAME/:&amp;nbsp;&lt;/p&gt;&lt;p&gt;Enabled: True&amp;nbsp;&lt;/p&gt;&lt;p&gt;LockedTime: LOCK_DATE&lt;/p&gt;&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:11.855">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-STO01" name="Revoke access to Storage for unnecessary applications" issueId="" issueLink="" platform="" cost="1" risk="64" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Create a mechanism or process to review all applications with access to the Data Storage and
                        verify that these applications should have access. If an application should not have access to
                        the data storage, you have to revoke the access from this application.&amp;nbsp;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;To revoke the access from an application, go to the &lt;a
                        href="https://www.google.com/accounts/ManageAccount"&gt;Google Account&lt;/a&gt;.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Click in to Authorizing applications and sites.&lt;/li&gt;
                        &lt;li&gt;In the next page, you can revoke access for applications by clicking Revoke Access
                        next to the application.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Google Cloud docs: Best practices Storage" url="https://cloud.google.com/storage/docs/best-practices#security"/>
          </references>
          <standards>
            <standard ref="A01:2021-Broken Access Control" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A5:2017-Broken Access Control" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that there are only the necessary accesses from applications to the data storages.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:11.854">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-STO02" name="Securely store your credentials" issueId="" issueLink="" platform="" cost="0" risk="64" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Make sure that you securely store your credentials. This can be done differently depending on
                        your environment and where you store your credentials. For example, if you store your
                        credentials in a configuration file, make sure that you set appropriate permissions on that file
                        to prevent unwanted access. If you are using Google App Engine, consider using StorageByKeyName
                        to store your credentials.</desc>
          <implementations/>
          <references>
            <reference name="Google Cloud docs: Best practices storage" url="https://cloud.google.com/storage/docs/best-practices"/>
          </references>
          <standards>
            <standard ref="A02:2021-Cryptographic Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A3:2017-Sensitive Data Exposure" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that the credentials are stored securely.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:11.854">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-STO03" name="Use apropriate names for the buckets" issueId="" issueLink="" platform="" cost="1" risk="64" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Google Cloud Storage requests refer to buckets and objects by their names. As a result, even
                        though ACLs will prevent unauthorized third parties from operating on buckets or objects, a
                        third party can attempt requests with bucket or object names and determine their existence by
                        observing the error responses.&amp;nbsp;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        It can then be possible for information in bucket or object names to be leaked. If you are
                        concerned about the privacy of your bucket or object names, you should take appropriate
                        precautions, such as:
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Choosing bucket and object names that are difficult to guess. For example, a bucket
                        named mybucket-gtbytul3 is random enough that unauthorized third parties cannot feasibly guess
                        it or enumerate other bucket names from it.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Avoiding use of sensitive information as part of bucket or object names. For example,
                        instead of naming your bucket mysecretproject-prodbucket, name it somemeaninglesscodename-prod.
                        In some applications, you may want to keep sensitive metadata in custom Google Cloud Storage
                        headers such as x-goog-meta, rather than encoding the metadata in object names.&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Google Cloud docs: Best practices Storage" url="https://cloud.google.com/storage/docs/best-practices#security"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that all buckets are named appropriately.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:11.854">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="GOOGLE CLOUD PLATFORM" name="Google Cloud Platform" desc="" library="Google Cloud Platform">
          <threats>
            <threat ref="LOSS-DATA-REMOVED" name="Attackers destroy the data and the data cannot be recovered" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Google Cloud Platform" editable="true">
              <desc>&lt;p&gt;Attackers gain access to the systems and data with excessive permissions and they remove all the information from the system, which might lead to permanent loss of data, including sensitive or personal data.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="50" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="GOOGLE-BACKUP">
                  <countermeasures>
                    <countermeasure ref="GOOGLE-STO04" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="GOOGLE-STO04" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="ACCESS-TO-RESOURCES" name="Attackers gain access to the resources" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Google Cloud Platform" editable="true">
              <desc>Explicit naming of resources, missing security policies or misconfigurations on user permissions can lead attackers to exploit resources.</desc>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="GOOGLE-EASY-FIND-RESOURCES">
                  <countermeasures>
                    <countermeasure ref="GOOGLE-STO03" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="GOOGLE-STO03" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="ACCESS-TO-DATA" name="Sensitive data is compromised through unauthorized access to data storage" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Google Cloud Platform" editable="true">
              <desc>&lt;p&gt;A data breach is a security violation in which sensitive, protected or confidential data is copied, transmitted, viewed, stolen or used by an individual unauthorized to do so. Sensitive data could be exposed due to a bad configuration in user permissions.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="GOOGLE-EASY-FIND-RESOURCES">
                  <countermeasures>
                    <countermeasure ref="GOOGLE-STO05" mitigation="25"/>
                    <countermeasure ref="GOOGLE-STO06" mitigation="25"/>
                  </countermeasures>
                </weakness>
                <weakness ref="GOOGLE-OBSOLETE-APPS-ACCESS">
                  <countermeasures>
                    <countermeasure ref="GOOGLE-STO01" mitigation="25"/>
                  </countermeasures>
                </weakness>
                <weakness ref="GOOGLE-USECURE-CREDENTIALS">
                  <countermeasures>
                    <countermeasure ref="GOOGLE-STO02" mitigation="25"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="GOOGLE-STO01" mitigation="25"/>
                <countermeasure ref="GOOGLE-STO02" mitigation="25"/>
                <countermeasure ref="GOOGLE-STO05" mitigation="25"/>
                <countermeasure ref="GOOGLE-STO06" mitigation="25"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="3b383531-3c32-42f5-a8d7-41133d29194c" diagramComponentId="d617a217-8174-4f9d-ae0f-828ac0faa23d" ref="ec9c8d86-b4fb-43ab-8c48-323781a7c9a1" name="Empty Component" desc="" library="CS-Default" parentComponentRef="955c173b-e9fd-42e0-9060-3df6c91ef19e" componentDefinitionRef="empty-component">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses/>
      <countermeasures/>
      <usecases/>
    </component>
    <component uuid="8b9b8434-1445-4ed8-8f6c-51346edecf63" diagramComponentId="c300f4cc-6067-4149-ae4a-b63d5fba4173" ref="ae917821-12a8-4b3a-a19f-649aaae3b64b" name="Event-driven Service Integration" desc="" library="CS-Default" parentComponentRef="955c173b-e9fd-42e0-9060-3df6c91ef19e" componentDefinitionRef="empty-component">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses/>
      <countermeasures/>
      <usecases/>
    </component>
    <component uuid="37ba4b95-508d-47c9-8113-d6d0869b1b88" diagramComponentId="b3f7882b-320e-494d-8a33-9ebaeb972f4c" ref="e9c27a92-1b95-4151-b4ae-c89c9bd209ca" name="Cache Assets - Cloud CDN" desc="" library="CS-Default" parentComponentRef="955c173b-e9fd-42e0-9060-3df6c91ef19e" componentDefinitionRef="empty-component">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses/>
      <countermeasures/>
      <usecases/>
    </component>
    <component uuid="445d87ba-a3a6-4c6b-b01f-b81df00730c5" diagramComponentId="8b2b9c1c-5940-4d82-ae84-575f67317d70" ref="041f6cae-09f7-4abc-9706-0d276a25015b" name="Microservice" desc="" library="microservices-library-dev" parentComponentRef="ec9c8d86-b4fb-43ab-8c48-323781a7c9a1" componentDefinitionRef="microservice">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses>
        <weakness ref="APP-AS-1" name="Application secrets at risk of exposure" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
  Ensuring that there is no sensitive data (such as credentials) in the application code or in configuration files is a challenge because the environments that containers run in have varying security controls and may provide access to unintended parties.&amp;nbsp; Developers need to consider the new threats brought about by multi-tenancy and shared platforms.&amp;nbsp; Not doing so can result in exposure of sensitive data.&amp;nbsp; 
&lt;/div&gt;Encryption methods are only useful if they are robust.&amp;nbsp; This is a particular challenge in container architectures as there are many competing interests and constraints which must be accounted for.&amp;nbsp; It is important that developers take ownership of encryption, while also working within the needs and requirements of the framework. Because of the complexity of containerized systems, and the general tendency of organizations to place security in the hands of operators, encryption of application secrets may be overlooked by developers.&amp;nbsp; This can result in exploitable vulnerabilities which administrators of the system are unaware of.&amp;nbsp;Some of the challenges of securing containerized systems include the variety of secrets which must be protected, and the fact that the available methods for protection may not be consistent between environments.&amp;nbsp; Organizations should be aware of these challenges and implement robust mechanisms which anticipate the problems inherent and provide mitigating strategies.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:05.615">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="APP-AA-1" name="Cloud-native environments may introduce risks to the microservice architecture" state="0" impact="100" issueId="" issueLink="">
          <desc>The use of cloud providers introduces many capabilities to container architectures, while also streamlining workflows and reducing the necessity of managing hardware.&amp;nbsp; However it also increases complexity, and this can make it more difficult to identify and mitigate vulnerabilities.&amp;nbsp; It can also result in a lack of ownership for security issues as developers assume that other parties are taking responsibility. Applications and containers which run or on otherwise access cloud providers must identify themselves.&amp;nbsp; Credentials and access control must be securely managed in order to prevent secret exposure and privilege escalation.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:05.614">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="IM-G-1" name="Code promotion across environments may introduce vulnerabilities" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
  Code and image provenance is a developer and application owner concern; verification requires certification and key management across the code promotion path. This can be a challenge as multiple parties and certificate owners may be involved. The absence can result in application version mismatches or running tampered images. 
&lt;/div&gt;&lt;div&gt;
  Developers and operators need to be equally engaged in the process of code promotion across application container environments. Today, developers can push code across application container environments without the need for operator interaction.&amp;nbsp; Systems should have robust policies and procedures in place to ensure that images are secured by developers at all stages of the build chain. 
&lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:05.350">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CO-G-1" name="Contention issues arise due to the elasticity of workload and dynamic resource requests" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
   Ensuring resource availability as needed to support workloads is a challenge.&amp;nbsp; This is because of the dynamic use and availability of resources in a potentially shared environment, combined with the possibly unpredictable use of an application. The absence can result in either the CMP being unable to allocate appropriate resources for an application container, or a resource shortage within the CMP. 
 &lt;/div&gt;&lt;div&gt;
  Resources usage which is not properly managed by developers will affect the usage of others in a shared environment. The absence may result in a DOS-style scenario. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:05.892">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="IM-G-2" name="Image contents may not be secure" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
  Images must have no known vulnerabilities or malicious code. Developers must help to ensure images have not been tampered with as they move from development to production. Applications of this feature include scanning images for vulnerabilities and malicious code and using image signing and validation mechanisms. 
&lt;/div&gt;&lt;div&gt;
  Ensuring that only the required components are packaged inside the image can be a challenge due to the complexity of applications. If this is not carefully managed it can result in the compromise of an unnecessary component.&amp;nbsp;&amp;nbsp; 
&lt;/div&gt;&lt;div&gt;
  Ensuring third-party components are free of vulnerabilities and updated as needed can be a challenge due to differing update frequencies by third-party vendors. This can result in the compromise of third-party components.&amp;nbsp; OS package managers are a particular challenge in this regard due to the large number of updates and downloads they maintain, and the fact that they often have unrestricted access to systems.&amp;nbsp; 
&lt;/div&gt;&lt;div&gt;
  Developers and operators need to be equally engaged in the process of code promotion across application container environments.&amp;nbsp; Developers should not assume that system wide security settings will mitigate potential application vulnerabilities.&amp;nbsp; Rather, they should ensure that their images have no known vulnerabilities or malicious code, and that they have not been tampered with as they move from development to production. 
&lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:05.350">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CO-N-1" name="Insecure networking settings may be exploited to gain access to containers or hosts" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
  Monitoring network activity and providing the infrastructure to do so can present a challenge because of the lack of network tooling and data storage. The absence can result in the exposure of sensitive information and diminished incident response and detection capabilities. 
&lt;/div&gt;&lt;div&gt;
  In container networking, communications between containers and hosts must be secured, network traffic must be monitored, and access to the network traffic, resources, and configurations must be controlled.&amp;nbsp; In terms of applications, communications between containers affect access control, limiting access to network traffic, resources, and configurations (leveraging network namespace). Other outcomes include isolating the container interfaces, monitoring network activity, and securing communications between containers via SSL/TLS or VPN. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:05.892">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CO-D-1" name="Insufficient scaling of container resources may lead to inefficient resource utilization" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
  Ensuring resource scaling requests take priority over other containers may provide a challenge.&amp;nbsp; This is due to complexity and implementation of the CMP to allow such prioritization. The absence can result in priority applications not being able to scale for user workloads. 
&lt;/div&gt;&lt;div&gt;
  It is a challenge for developers to define application performance profiles. Predictive application workload modeling is a complex task often substituted by a "common practice" or, equally precise, "by analogy".&amp;nbsp; This is largely due to lack of tooling in development environments. Both are likely to lead to inefficient resource utilization. 
&lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:05.892">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="APP-LM-1" name="Lack of continuous monitoring can result in application version mismatches and system availability issues" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
  The ephemeral nature of application containers increases the necessity of reliable and centralized monitoring of platform, host, and containers.&amp;nbsp; It is essential to ensure that container runtime actions and events are monitored and logged in order to allow timely identification and mitigation of problems and threats. 
&lt;/div&gt;&lt;div&gt;
  There may be a challenge for developers to understand which container versions are running and where. This information needs to be easily and quickly digestible by appropriate parties. The absence can result in application version mismatches and system availability issues. 
&lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:05.614">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="APP-G-1" name="Lifecycle events prevent secure startup and shutdown of applications" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
  Developing a containerized application that can be scaled up or down without notice is a challenge because of the extra effort required to design and implement the application in a manner where it can gracefully handle such scaling events while maintaining a secure state.&amp;nbsp; &amp;nbsp;It is a more robust approach to ensure that stateful containerized applications are aware of container scaling events to ensure transitions between secure states. 
&lt;/div&gt;&lt;div&gt;
  In an ideal world, either application containers are stateless, or the applications have been developed with clustering technologies to attach and release neighbors as they start and are terminated.&amp;nbsp; Some use cases, though, will have containers that have not been developed in such a manner, or which contain legacy applications that have migrated to containers. Such applications running inside a container may not be aware of pending lifecycle events issued by a CMP such as container start/stop/scale.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The containerized application should have an opportunity to be informed of the pending container's lifecycle events to manage its own lifecycle accordingly. This is essential to ensure the application's secure startup and shutdown.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:05.614">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CO-G-2" name="Mismanagement of container volumes can compromise underlying architecture" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
   In container volume management, it is essential to ensure the container has need-only access to data volumes and uses dedicated storage resources for runtime operations.&amp;nbsp; In the application, it is vital to ensure that access control exists for file system resources and raw storage devices, and that data is encrypted at rest in the data volumes.&amp;nbsp; Applications directly mounting a host directory should be avoided. 
 &lt;/div&gt;Building an image that minimizes using shared container volumes is imperative due to the risk of exposing sensitive data to the host or other containers, and the current reliance on sharing information with containers. This can result in exposure of sensitive data.&amp;nbsp;&amp;nbsp; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt;
   Building an image that does not share the host filesystem is equally crucial because exposing the host filesystem can result in compromising the underlying infrastructure, and other containers that share the same environment.&amp;nbsp; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:05.891">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="APP-LM-2" name="The complexity of container architectures can make logging and monitoring difficult to implement" state="0" impact="100" issueId="" issueLink="">
          <desc>Ensuring that coding policies include logging capabilities at the planning and design stages is a challenge due to the lack of presence of security concerns in the design phase and tooling.&amp;nbsp; In addition, there are many logging features which may be implemented in microservices and an absence of clear policies can result in lack of ownership from key parties, including developers.&amp;nbsp;&amp;nbsp;&lt;div&gt;
  Usually application logging is added after the fact as a response to an incident or audit.&amp;nbsp; Ensuring that application logs, starting with authentication logs, are captured for existing applications is a challenge due to lack of resources to modify the application and necessary guidance to do so.&amp;nbsp;&amp;nbsp;This will result in diminishing incident response and detection capabilities.&amp;nbsp; 
&lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:05.614">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="CSA-SACA-3.1.5:1" name="Applications must use secure network communication protocols" issueId="" issueLink="" platform="" cost="1" risk="61" state="Recommended" owner="JamesRabe" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Network traffic generated by the containers should maintain confidentiality regarding the applications and management by utilizing proper encryption protocols (i.e., SSL/TLS, IPSec). 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Selecting libraries that support secure communications to provide encryption and maintain confidentiality prevents information spillage and network traffic tampering. Tampering of network traffic may result in system compromise. 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.5" supportedStandardRef="csa-container-architectures"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Identify any communications in your application which will be sent as network traffic and ensure that encryption protocols have been applied.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:05.846">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="IM-G-2.2.1" name="Avoid using images with OS package managers" issueId="" issueLink="" platform="" cost="1" risk="78" state="Recommended" owner="JamesRabe" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Images with OS package managers or shells could contain unknown vulnerabilities.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Package managers are normally run with unrestricted access in order to allow them to modify critical system software. The package manager's actions, therefore, affect the entire system.&amp;nbsp;&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  If you must include OS packages, remove the package manager before deploying the container.&amp;nbsp; The following steps may also help mitigate the risk: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Use repositories you trust. Use only mirrors that belong to reputable organizations.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Manually update your systems (and local mirror caches).&lt;/li&gt; 
  &lt;li&gt;Use signed repository metadata.&lt;/li&gt; 
  &lt;li&gt;Use HTTPS for mirror communication.&lt;/li&gt; 
  &lt;li&gt;Use package managers that implement metadata expiration.&lt;/li&gt; 
  &lt;li&gt;Use distributions that properly make use of the package manager's security features.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="StackRox: Kubernetes Security 101" url="https://www.stackrox.com/post/2020/05/kubernetes-security-101/"/>
            <reference name="cs.arizona.edu: Attacks on Package Managers" url="https://www2.cs.arizona.edu/stork/packagemanagersecurity/attacks-on-package-managers.html"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Follow the steps for your particular OS to identify if package managers are installed on the container.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:05.278">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SACA-3.1.7:1" name="Create and follow coding policies to include logging capabilities" issueId="" issueLink="" platform="" cost="1" risk="62" state="Recommended" owner="JamesRabe" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  An application should provide logs regarding authentication, authorization, actions, and failures. The developer should include this capability as part of planning and design phases. For new applications, the developer should create and follow coding policies to include logging capabilities at the planning and design stages.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;&lt;br&gt;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Logging application authentication, authorization, actions, and failures provides a trail of evidence to follow when an investigation takes place and a root cause needs to be established. 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.7" supportedStandardRef="csa-container-architectures"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Review the logging capabilities for your application and ensure they have been planned and designed in a way which is consistent with the features of the container architecture.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:05.521">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SACA-3.1.10:2" name="Create common libraries for developers to handle sensitive data and secrets in the backend application code" issueId="" issueLink="" platform="" cost="1" risk="78" state="Recommended" owner="JamesRabe" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  To enable consistent ways of addressing the handling of sensitive data and secrets within backend application code, a common set of libraries should be provided to developers. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Application developers are not necessarily security developers and should devote time to developing application features, not security. Security that is required within applications should be easy to use and made clear, so that minimum effort is spent and consistency across applications is achieved. 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.10" supportedStandardRef="csa-container-architectures"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Verify that libraries exist for securing sensitive data and that they have been applied to your applications.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:05.521">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SACA-3.1.9:1" name="Developers should receive sufficient training on volume management" issueId="" issueLink="" platform="" cost="1" risk="78" state="Recommended" owner="JamesRabe" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Developers should receive sufficient training to ensure development of applications that minimize the need to use shared container volumes and that do not require any access to host directories. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div style=""&gt;
   Shared volumes can result in exposure of sensitive data. Images which share the host volumes or filesystem can result in the compromise of the underlying infrastructure and other containers sharing the same environment. Avoiding these configurations is a challenge, which is why developer training is essential. 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.9" supportedStandardRef="csa-container-architectures"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Ensure that relevant training is available and up to date.&amp;nbsp;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:05.846">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SACA-3.1.17:3" name="Encrypt the sensitive application and create a container entry point application that decrypts and executes the main application" issueId="" issueLink="" platform="" cost="1" risk="78" state="Recommended" owner="JamesRabe" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  By encrypting the sensitive application, the risk of unintended exposure of the sensitive application can be mitigated. This allows the container image (and sensitive application) to be stored, transmitted, or shared without unauthorized exposure. Encryption and decryption of the application should be treated as any other data encryption/decryption process. For sensitive applications, developers should encrypt the sensitive application, then create a container entry point application that decrypts and executes the main application. 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.17" supportedStandardRef="csa-container-architectures"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that an appropriate level of encryption has been applied to any sensitive data in the application.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:05.521">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SACA-3.1.12:1" name="Ensure sustainable system performance by balancing system resources" issueId="" issueLink="" platform="" cost="1" risk="73" state="Recommended" owner="JamesRabe" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Working with the operator and architect, the developer should ensure that the binaries and libraries are optimized to operate in a containerized infrastructure. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Default configurations or those that are suitable for non-containerized systems may conflict with the needs of container architectures.&amp;nbsp; Developers need to be aware of the environmental impacts on their applications. 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.12" supportedStandardRef="csa-container-architectures"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Review optimization configurations to ensure they are compliant with the needs or policies of the container architecture.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:05.846">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SAC-3.1.1:1" name="Establish a root of trust" issueId="" issueLink="" platform="" cost="1" risk="78" state="Recommended" owner="JamesRabe" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  A public key infrastructure (PKI) allows creation and management of a hierarchy of digital certificates for encryption and digital signatures. A PKI may already exist in an organization-certificates from this new or existing system can be used to sign container images and later verify their provenance and integrity. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  To ensure the integrity of the build chain, the developer must have the ability to digitally sign and provide a digital signature for the code and/or binary artifacts that will be promoted between environments or to the next promotion phase. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  By signing a container image with a certificate that is part of a PKI, container management platform (CMP), users can easily verify the source of an image. This is important as once the source of the image is determined, users can ensure that the image has been through appropriate scrutiny before being promoted for production use. 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.1" supportedStandardRef="csa-container-architectures"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that all existing images are appropriately signed or verified, using keys provided by your organization.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:05.279">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="IM-G-2.3.1" name="Harden all applications in an image" issueId="" issueLink="" platform="" cost="1" risk="78" state="Recommended" owner="JamesRabe" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;span style="line-height: 107%; font-size: 14.6667px;"&gt;&lt;font face="Times New Roman, serif"&gt; 
   &lt;div style=""&gt; 
    &lt;div style=""&gt; 
     &lt;b&gt;Description:&lt;/b&gt; 
    &lt;/div&gt; 
    &lt;div style=""&gt;
      Ensure that applications are secure and follow best practices. 
    &lt;/div&gt; 
    &lt;div style=""&gt; 
     &lt;br&gt; 
    &lt;/div&gt; 
    &lt;div style=""&gt; 
     &lt;b&gt;Rationale:&lt;/b&gt; 
    &lt;/div&gt; 
    &lt;div style=""&gt;
      When deploying applications in a containerized system, vulnerabilities that compromise the application can in turn compromise the entire architecture.&amp;nbsp; This is a result of the way containers and pods communicate and access resources throughout the whole cluster. 
    &lt;/div&gt; 
    &lt;div style=""&gt; 
     &lt;br&gt; 
    &lt;/div&gt; 
    &lt;div style=""&gt; 
     &lt;b&gt;Remediation:&lt;/b&gt; 
    &lt;/div&gt; 
    &lt;div style=""&gt;
      Analyze source code regularly to ensure it is following best practices to avoid vulnerabilities.&amp;nbsp; &amp;nbsp;Continuously test your application against common attack practices, like SQL injection, DDoS attack, etc. There are various dynamic analysis tools available to assist.&amp;nbsp; 
    &lt;/div&gt; 
   &lt;/div&gt;&lt;/font&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;span style="font-family: &amp;quot;Times New Roman&amp;quot;, serif; font-size: 11pt;"&gt;&lt;br&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div style=""&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="The New Stack: A Security Checklist for Cloud Native Kubernetes Environments" url="https://thenewstack.io/a-security-checklist-for-cloud-native-kubernetes-environments/"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Use a reliable tool such as Veracode or Synopsys to analyze source code for vulnerabilities before deploying.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:05.279">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SACA-3.1.17:2" name="Identify a data at rest (DAR) solution" issueId="" issueLink="" platform="" cost="1" risk="78" state="Recommended" owner="JamesRabe" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The developer should utilize a DAR solution, if at all possible, that has been FIPS 140-2 validated. The developer should also analyze the application programming interface (API) and a compatible key management system (KMS).&amp;nbsp; The developer should also utilize the latest advanced encryption standard (AES) with the highest possible key length. Developers also have to take into account if the solution has been validated by an impartial third party and if the solution is viable in the intended operational environment. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  With a FIPS-validated solution and a compatible KMS, there is some third party validation that the solution is secure and thus a higher level of assurance.&amp;nbsp; Robust use of AES will ensure data confidentiality. 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.17" supportedStandardRef="csa-container-architectures"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that encryption is included and that the level is appropriate to the application security needs and the wider system policies.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:05.522">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SACA-3.1.7:2" name="Implement plans to capture application logs" issueId="" issueLink="" platform="" cost="1" risk="62" state="Recommended" owner="JamesRabe" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  An existing application should provide logs regarding authentication, authorization, actions, and failures. If any of these logging items have not been implemented, developers should provide these capabilities as part of the maintenance phase. For existing applications, the developer should implement plans to capture application logs, starting with authentication logs 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Logging application authentication, authorization, actions, and failures provides a trail of evidence to follow when an investigation takes place and a root cause needs to be established. 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.7" supportedStandardRef="csa-container-architectures"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Review the logging capabilities for your application and ensure they have been applied in a way which is consistent with the features of the container architecture.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:05.522">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SACA-3.1.6:3" name="Include only necessary components inside the image" issueId="" issueLink="" platform="" cost="1" risk="78" state="Recommended" owner="JamesRabe" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Developers should trim down images to include only necessary components. It is preferred to use a baseline image with minimal set of packages over a full OS distribution.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Removing unnecessary components from the image will reduce the number of potentially outdated or unpatched packages and therefore reduce the number of security vulnerabilities. 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.6" supportedStandardRef="csa-container-architectures"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Perform a suitable scan based on your operating system for extraneous tools and components.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:05.280">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SACA-3.1.11:1" name="Left the application in an unknown state if a containerized application is unaware of the container's transitions" issueId="" issueLink="" platform="" cost="1" risk="73" state="Recommended" owner="JamesRabe" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The CMP should provide the encapsulated application an opportunity to perform a graceful transition to a known secure state. The conventional solution is to allow an application to be notified of the container lifecycle events. Resources, freed after container's removal, should be released back to the pool in a well known state and containers should be allowed to log any state changing events. The container's lifecycle (start/stop/scaled) is managed by CMP. From a developer's perspective, the application could be left in an unknown state if a containerized application is unaware of the container's transitions 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  It is essential to inform the application of the container's lifecycle events, so that it may take appropriate action to ensure a secure startup and shutdown. 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.11" supportedStandardRef="csa-container-architectures"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Review the container's stop start process and ensure that any related and relevant configurations have been applied to your applications.&amp;nbsp;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:05.522">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="APP-AA-1.1.2" name="Limit credential exposure" issueId="" issueLink="" platform="" cost="1" risk="73" state="Recommended" owner="JamesRabe" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Harden credentials before deploying applications 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Plain text (non-encrypted) credentials (account passwords, SSH Keys, DevOps secrets, etc.) may be embedded into source code because it helps to simplify deployments at scale.&amp;nbsp; This poses formidable security risks that are routinely exploited by malware and hackers. In some cases, a threat actor may insert hardcoded credentials to create a backdoor, allowing them persistent access to a device, application, or system. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Hardcoded credentials are favored cyberattack targets for password guessing exploits, allowing hackers and malware to hijack systems, and software. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Don't define credentials in your application code. Use managed identities for cloud resources to let your pod request access to cloud provider.&amp;nbsp; Avoid the use of fixed or shared credentials. 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="BeyondTrust: Hardcoded and Embedded Credentials are an IT Security Hazard" url="https://www.beyondtrust.com/blog/entry/hardcoded-and-embedded-credentials-are-an-it-security-hazard-heres-what-you-need-to-know"/>
            <reference name="Microsoft docs: Best practices for pod security in Azure Kubernetes Service" url="https://docs.microsoft.com/en-us/azure/aks/developer-best-practices-pod-security"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Review application code before deployment for embedded credentials.&amp;nbsp; Carry out pen testing of applications to find overlooked credential vulnerabilities.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:05.522">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SACA-3.1.10:1" name="Provide training and best practices guidance to developers" issueId="" issueLink="" platform="" cost="1" risk="78" state="Recommended" owner="JamesRabe" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Backend Developers should be informed and trained on threats arising from multi-tenancy on public clouds.&amp;nbsp; They also need to be trained and provided with templates for how to use the secret management feature within their apps so they avoid the practice of hard-coding static secrets within application code. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Backend Developers are accustomed to the practice of baking sensitive information into server code from the days when server-side was considered trusted environment. Raising the awareness of the nuances and threats present in current public cloud environments helps drive in the need to avoid such practices 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.10" supportedStandardRef="csa-container-architectures"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Ensure that relevant training is available and up to date.&amp;nbsp;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:05.522">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="IM-G-2.1.1" name="Remove components which are only required for development" issueId="" issueLink="" platform="" cost="1" risk="78" state="Recommended" owner="JamesRabe" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Tools that are essential during application development can create security risks in deployment 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Any unnecessary component is another potential entrance point for an attacker.&amp;nbsp; Debuggers and common tools like Curl that are useful to attackers should not be included in images in deployment. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Perform an analysis of the entire container before deployment and remove any components or functions you do not need. 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="StackRox: Kubernetes Security 101" url="https://www.stackrox.com/post/2020/05/kubernetes-security-101/"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Perform a suitable scan based on your operating system for extraneous tools and components.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:05.280">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="IM-G-2.3.2" name="Secure any dependencies" issueId="" issueLink="" platform="" cost="1" risk="78" state="Recommended" owner="JamesRabe" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Ensure that any dependencies used by applications are also secure. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;&lt;br&gt;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  It is hard to keep to track of all the packages an application uses and to make sure they are not vulnerable.&amp;nbsp; Even if you ensure that your own application is free of vulnerabilities, if the base packages and dependencies are not secure, the container could still be vulnerable to attacks. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Regularly perform a full dependency analysis for code to uncover your open source and other dependencies for any vulnerabilities they contain. 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="IBM: Journey to Kubernetes Security" url="https://developer.ibm.com/technologies/containers/articles/journey-to-kubernetes-security/"/>
            <reference name="snyk: Kubernetes Security" url="https://snyk.io/learn/kubernetes-security/"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Use a suitable vulnerability scanner to carry out a full dependency analysis for code to uncover your dependencies and any vulnerabilities they contain.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:05.280">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="IM-G-2.1.2" name="Secure the container base image" issueId="" issueLink="" platform="" cost="1" risk="78" state="Recommended" owner="JamesRabe" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;&lt;b&gt;Description: &lt;/b&gt;&lt;br&gt;Ensure that container images are built using secure and approved base images&lt;br&gt;&lt;br&gt;&lt;b&gt;Rationale:&lt;/b&gt;&lt;br&gt;Vulnerabilities in software packages can be exploited by hackers or malicious users to obtain unauthorized access to local or cloud resources. &lt;br&gt;&lt;br&gt;&lt;b&gt;Remediation:&lt;/b&gt;&lt;br&gt;Select minimal base images, add only what you require, and scan them for vulnerabilities.&amp;nbsp; &amp;nbsp;Ideally, the tool you choose for this function should be aware of your base image choice and alert you when there is an updated version of your base image, or if there are alternate base images that can reduce vulnerabilities.&lt;br&gt;&lt;br&gt;Only deploy authorized container images that you've analyzed, scanned, and signed (i.e. Software Supply Chain Security). Grafeas, TUF, and Notary can help here.&lt;br&gt;&lt;br&gt;Ensure that only images from image registries on allow lists are used to launch containers in your Kubernetes environment.&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Peter Benjamin: Kubernetes Security Best-Practices" url="https://dev.to/petermbenjamin/kubernetes-security-best-practices-hlk"/>
            <reference name="StackRox: Kubernetes Security 101" url="https://www.stackrox.com/post/2020/05/kubernetes-security-101/"/>
            <reference name="snyk: Kubernetes Security" url="https://snyk.io/learn/kubernetes-security/"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;&lt;font face="Times New Roman, serif"&gt;Please follow your 3rd party image scanning provider's guidelines for enabling Image Scanning.&lt;/font&gt;&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:05.280">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SACA-3.1.6:1" name="Sign images as part of the image build process and validate images before use" issueId="" issueLink="" platform="" cost="1" risk="78" state="Recommended" owner="JamesRabe" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Images should be signed as part of the build process and validated before used. Signing and validation can be achieved through GNU Privacy Guard (GPG) signatures on image contents or through similar methods. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Digital signing of image content at build time and validation of the signed data before usage ensures that image data cannot be tampered with between build and run time. 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.6" supportedStandardRef="csa-container-architectures"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Review your applications to ensure that the appropriate signing has taken place.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:05.280">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SACA-3.1.3:1" name="Use clear versioning schemes to identify application versions running in containers" issueId="" issueLink="" platform="" cost="1" risk="62" state="Recommended" owner="JamesRabe" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  By defining and using an accepted versioning scheme, a development team can have version numbers automatically implemented as part of a build process. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  By applying versions either to a container name, tag, or label, the developer is then able to easily identify application versions running in containers. 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.3" supportedStandardRef="csa-container-architectures"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Review container names, tags, or labels to check that they contain version numbers in line with your organizational or system policies.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:05.523">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="APP-AA-1.1.1" name="Use IAM for access control" issueId="" issueLink="" platform="" cost="1" risk="73" state="Recommended" owner="JamesRabe" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;div&gt; 
  &lt;b&gt;Description:&lt;/b&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   Implement authentication and access control with the Identity and Access Management (IAM) service provided by the cloud provider. 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;b&gt;Rationale:&lt;/b&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   Applications which have access to the full scope of the cloud provider may perform actions outside of their scope.&amp;nbsp; This can be exploited by attackers to gain access to large areas of the cluster. 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;b&gt;Remediation:&lt;/b&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   Use IAM roles to provide fine-grained access.&amp;nbsp; Assign roles only the specific amount of resources they need, or allow them&amp;nbsp; to perform only a particular amount of activities. 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="IBM: Journey to Kubernetes Security" url="https://developer.ibm.com/technologies/containers/articles/journey-to-kubernetes-security/"/>
            <reference name="we45: Security Essentials for a Developer - Kubernetes" url="https://we45.com/blog/security-essentials-for-a-developer-kubernetes/"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Use the relevant tools for your cloud provider to audit the use of IAM roles in applications.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:05.523">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SACA-3.1.17:1" name="Use standard, commonly available authentication systems" issueId="" issueLink="" platform="" cost="1" risk="78" state="Recommended" owner="JamesRabe" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  When either data or applications are encrypted within a container, having a reliable method to authorize use of encryption keys is required. Alternatively, applications must be written to support multiple authentication methods, introducing unnecessary complexity. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  By using common authentication methods, this ensures a predictable ability to authenticate and authorize the use of encryption keys across CMPs.&amp;nbsp; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.17" supportedStandardRef="csa-container-architectures"/>
            <standard ref="K06 - Broken Authentication" supportedStandardRef="owasp-kubernetes-top-10-2022"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Verify that an encryption policy or standard exists for your organization, and that it has been applied.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:05.523">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SACA-3.1.6:2" name="Use vulnerability scanning tools as part of the development process" issueId="" issueLink="" platform="" cost="1" risk="78" state="Recommended" owner="JamesRabe" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Developers should use vulnerability scanning tools as part of the development process and the CI pipeline, and integrate a vulnerability assessment into the build process. They will also want to consider failing a build if the vulnerability assessment fails. Once a vulnerability is identified, apply security patches to the vulnerable component and rebuild the image. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  A vulnerability scanner will identify and alert on the use of third-party components with known security vulnerabilities. Applying vulnerability scanning as part of the development cycle improves the security quality of the images, since well-known vulnerabilities are identified and patched before software gets into runtime environment. 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.6" supportedStandardRef="csa-container-architectures"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check if a protocol exists for vulnerability scanning in your organization and, if so, that it has been utilized.&amp;nbsp; If one does not exist, use one of the recommended tools to ensure that your own applications and containers do not contain vulnerabilities.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:05.280">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SACA-3.1.14:1" name="Utilize resource control features to orchestrate intra-container resource utilization, prioritization and allocation thresholds" issueId="" issueLink="" platform="" cost="1" risk="62" state="Recommended" owner="JamesRabe" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Developers should expect the presence of horizontal infrastructure scaling capability but should avoid the need for vertical scaling by ensuring that the application can function within the parameters established by the configuration management team. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The developer must obtain the resource utilization and hardening parameters and incorporate those configurations into the software development environment and testing scripts. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The application developer must accept that the application under development will not have on-hand the entirety of computing resources available in the production environment. Even in the presence of auto-scale, auto-scaling capability has limits and does not scale out infinitely.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Without testing application functions within defined production parameters, the risk of poor application performance goes up, not down. Proper configuration of resource and security functionality as appropriate to the CMP in use ensures that a resource consumption fault or runaway container processes do not affect adjacent containers.&amp;nbsp; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.14" supportedStandardRef="csa-container-architectures"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Review the capabilities of the CMP in terms of the relevant thresholds and ensure your application is compliant.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:05.846">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="access-sensitive-data" name="Access sensitive data" desc="" library="microservices-library-dev">
          <threats>
            <threat ref="UNCONFIGURED-SECURITY-DATA" name="Sensitive data is exposed through weak security configurations" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="microservices-library-dev" editable="true">
              <desc>Weak security configurations make possible for an attacker to access sensitive data like API keys, credentials, etc.</desc>
              <riskRating confidentiality="100" integrity="75" availability="75" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="APP-AS-1">
                  <countermeasures>
                    <countermeasure ref="CSA-SACA-3.1.10:1" mitigation="20"/>
                    <countermeasure ref="CSA-SACA-3.1.10:2" mitigation="20"/>
                    <countermeasure ref="CSA-SACA-3.1.17:1" mitigation="20"/>
                    <countermeasure ref="CSA-SACA-3.1.17:2" mitigation="20"/>
                    <countermeasure ref="CSA-SACA-3.1.17:3" mitigation="20"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CSA-SACA-3.1.10:1" mitigation="20"/>
                <countermeasure ref="CSA-SACA-3.1.10:2" mitigation="20"/>
                <countermeasure ref="CSA-SACA-3.1.17:1" mitigation="20"/>
                <countermeasure ref="CSA-SACA-3.1.17:2" mitigation="20"/>
                <countermeasure ref="CSA-SACA-3.1.17:3" mitigation="20"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="authentication-and-authorization" name="Authentication and Authorization" desc="" library="microservices-library-dev">
          <threats>
            <threat ref="CLOUD-VULNERABILITIES" name="Attackers use known cloud vulnerabilities to access unauthorized data" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="microservices-library-dev" editable="true">
              <desc>Known vulnerabilities in a specific cloud environment are used to exploit a system, allowing an attacker to access unauthorized data</desc>
              <riskRating confidentiality="75" integrity="75" availability="100" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="APP-AA-1">
                  <countermeasures>
                    <countermeasure ref="APP-AA-1.1.1" mitigation="50"/>
                    <countermeasure ref="APP-AA-1.1.2" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="APP-AA-1.1.1" mitigation="50"/>
                <countermeasure ref="APP-AA-1.1.2" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="deployment" name="Deployment" desc="" library="microservices-library-dev">
          <threats>
            <threat ref="CAPEC-130" name="Excessive Allocation" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="microservices-library-dev" editable="true">
              <desc>&lt;p&gt;An adversary causes the target to allocate excessive resources to servicing the attackers' request, thereby reducing the resources available for legitimate services and degrading or denying services. Usually, this attack focuses on memory allocation, but any finite resource on the target could be the attacked, including bandwidth, processing cycles, or other resources.&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;This attack does not attempt to force this allocation through a large number of requests (that would be Resource Depletion through Flooding) but instead uses one or a small number of requests that are carefully formatted to force the target to allocate excessive resources to service this request(s). Often this attack takes advantage of a bug in the target to cause the target to allocate resources vastly beyond what would be needed for a normal request.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CO-D-1">
                  <countermeasures>
                    <countermeasure ref="CSA-SACA-3.1.14:1" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CSA-SACA-3.1.14:1" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="general" name="General" desc="" library="microservices-library-dev">
          <threats>
            <threat ref="IMAGE-MODIFICATION" name="Attackers compromise images by modifying their content" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="microservices-library-dev" editable="true">
              <desc>An attacker modifies/forges a microservices image to introduce vulnerabilities in the system</desc>
              <riskRating confidentiality="100" integrity="100" availability="75" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="IM-G-2">
                  <countermeasures>
                    <countermeasure ref="CSA-SACA-3.1.6:3" mitigation="20"/>
                    <countermeasure ref="IM-G-2.1.1" mitigation="16"/>
                    <countermeasure ref="IM-G-2.1.2" mitigation="16"/>
                    <countermeasure ref="IM-G-2.2.1" mitigation="16"/>
                    <countermeasure ref="IM-G-2.3.1" mitigation="16"/>
                    <countermeasure ref="IM-G-2.3.2" mitigation="16"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CSA-SACA-3.1.6:3" mitigation="20"/>
                <countermeasure ref="IM-G-2.1.1" mitigation="16"/>
                <countermeasure ref="IM-G-2.1.2" mitigation="16"/>
                <countermeasure ref="IM-G-2.2.1" mitigation="16"/>
                <countermeasure ref="IM-G-2.3.1" mitigation="16"/>
                <countermeasure ref="IM-G-2.3.2" mitigation="16"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="OWASP A1:2017" name="Attackers gain access to the sensitive data through injecting code in the repositories" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="microservices-library-dev" editable="true">
              <desc>Almost any source of data can be an injection vector: environment variables,
                                parameters, external and internal web services, and all types of users. Injection flaws
                                occur when an attacker can send hostile data to an interpreter.
                            </desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="IM-G-1">
                  <countermeasures>
                    <countermeasure ref="CSA-SAC-3.1.1:1" mitigation="34"/>
                    <countermeasure ref="CSA-SACA-3.1.6:1" mitigation="33"/>
                    <countermeasure ref="CSA-SACA-3.1.6:2" mitigation="33"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CSA-SAC-3.1.1:1" mitigation="34"/>
                <countermeasure ref="CSA-SACA-3.1.6:1" mitigation="33"/>
                <countermeasure ref="CSA-SACA-3.1.6:2" mitigation="33"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="SCALABILITY-ISSUES" name="Availability is compromised through attacks against scalability configuration" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="microservices-library-dev" editable="true">
              <desc>An attacker compromise the availability of a system by exploiting scalability configurations in order to consume resources</desc>
              <riskRating confidentiality="75" integrity="75" availability="100" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="APP-G-1">
                  <countermeasures>
                    <countermeasure ref="CSA-SACA-3.1.11:1" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CO-G-1">
                  <countermeasures>
                    <countermeasure ref="CSA-SACA-3.1.12:1" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CSA-SACA-3.1.11:1" mitigation="100"/>
                <countermeasure ref="CSA-SACA-3.1.12:1" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="UNAUTHORIZED-ACCESS-CONTAINER-VOLUMES" name="Sensitive data is compromised by unauthorized access to container volumes" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="microservices-library-dev" editable="true">
              <desc>An attacker find flaws to access container volumes without permission</desc>
              <riskRating confidentiality="100" integrity="75" availability="75" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CO-G-2">
                  <countermeasures>
                    <countermeasure ref="CSA-SACA-3.1.9:1" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CSA-SACA-3.1.9:1" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="logging-and-monitoring" name="Logging and Monitoring" desc="" library="microservices-library-dev">
          <threats>
            <threat ref="OWASP A10:2017" name="Exploitation of insufficient logging and monitoring" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="microservices-library-dev" editable="true">
              <desc>	&lt;p&gt;Exploitation of insufficient logging and monitoring is the bedrock of nearly every major incident.&lt;br /&gt;
 Attackers rely on the lack of monitoring and timely response to achieve their goals without being detected.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="APP-LM-1">
                  <countermeasures>
                    <countermeasure ref="CSA-SACA-3.1.3:1" mitigation="34"/>
                  </countermeasures>
                </weakness>
                <weakness ref="APP-LM-2">
                  <countermeasures>
                    <countermeasure ref="CSA-SACA-3.1.7:1" mitigation="33"/>
                    <countermeasure ref="CSA-SACA-3.1.7:2" mitigation="33"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CSA-SACA-3.1.3:1" mitigation="34"/>
                <countermeasure ref="CSA-SACA-3.1.7:1" mitigation="33"/>
                <countermeasure ref="CSA-SACA-3.1.7:2" mitigation="33"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="networking" name="Networking" desc="" library="microservices-library-dev">
          <threats>
            <threat ref="UNAUTHORIZED-ACCESS-NETWORK" name="Sensitive data is compromised through network access" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="microservices-library-dev" editable="true">
              <desc>Attackers gain undetected access to the network systems and changes made by the
                                attackers couldn't be audited or detected.
                            </desc>
              <riskRating confidentiality="50" integrity="50" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CO-N-1">
                  <countermeasures>
                    <countermeasure ref="CSA-SACA-3.1.5:1" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CSA-SACA-3.1.5:1" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="ee8159ee-cd4a-4a5f-a01b-3c9f63d9438f" diagramComponentId="e3ec0beb-285f-452b-9016-59ae8afe6f03" ref="6b60a68f-5d29-43c4-b624-ca4b06c79684" name="Microservice" desc="" library="microservices-library-dev" parentComponentRef="ec9c8d86-b4fb-43ab-8c48-323781a7c9a1" componentDefinitionRef="microservice">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses>
        <weakness ref="APP-AS-1" name="Application secrets at risk of exposure" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
  Ensuring that there is no sensitive data (such as credentials) in the application code or in configuration files is a challenge because the environments that containers run in have varying security controls and may provide access to unintended parties.&amp;nbsp; Developers need to consider the new threats brought about by multi-tenancy and shared platforms.&amp;nbsp; Not doing so can result in exposure of sensitive data.&amp;nbsp; 
&lt;/div&gt;Encryption methods are only useful if they are robust.&amp;nbsp; This is a particular challenge in container architectures as there are many competing interests and constraints which must be accounted for.&amp;nbsp; It is important that developers take ownership of encryption, while also working within the needs and requirements of the framework. Because of the complexity of containerized systems, and the general tendency of organizations to place security in the hands of operators, encryption of application secrets may be overlooked by developers.&amp;nbsp; This can result in exploitable vulnerabilities which administrators of the system are unaware of.&amp;nbsp;Some of the challenges of securing containerized systems include the variety of secrets which must be protected, and the fact that the available methods for protection may not be consistent between environments.&amp;nbsp; Organizations should be aware of these challenges and implement robust mechanisms which anticipate the problems inherent and provide mitigating strategies.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:11.243">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="APP-AA-1" name="Cloud-native environments may introduce risks to the microservice architecture" state="0" impact="100" issueId="" issueLink="">
          <desc>The use of cloud providers introduces many capabilities to container architectures, while also streamlining workflows and reducing the necessity of managing hardware.&amp;nbsp; However it also increases complexity, and this can make it more difficult to identify and mitigate vulnerabilities.&amp;nbsp; It can also result in a lack of ownership for security issues as developers assume that other parties are taking responsibility. Applications and containers which run or on otherwise access cloud providers must identify themselves.&amp;nbsp; Credentials and access control must be securely managed in order to prevent secret exposure and privilege escalation.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:11.243">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="IM-G-1" name="Code promotion across environments may introduce vulnerabilities" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
  Code and image provenance is a developer and application owner concern; verification requires certification and key management across the code promotion path. This can be a challenge as multiple parties and certificate owners may be involved. The absence can result in application version mismatches or running tampered images. 
&lt;/div&gt;&lt;div&gt;
  Developers and operators need to be equally engaged in the process of code promotion across application container environments. Today, developers can push code across application container environments without the need for operator interaction.&amp;nbsp; Systems should have robust policies and procedures in place to ensure that images are secured by developers at all stages of the build chain. 
&lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:10.861">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CO-G-1" name="Contention issues arise due to the elasticity of workload and dynamic resource requests" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
   Ensuring resource availability as needed to support workloads is a challenge.&amp;nbsp; This is because of the dynamic use and availability of resources in a potentially shared environment, combined with the possibly unpredictable use of an application. The absence can result in either the CMP being unable to allocate appropriate resources for an application container, or a resource shortage within the CMP. 
 &lt;/div&gt;&lt;div&gt;
  Resources usage which is not properly managed by developers will affect the usage of others in a shared environment. The absence may result in a DOS-style scenario. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:11.047">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="IM-G-2" name="Image contents may not be secure" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
  Images must have no known vulnerabilities or malicious code. Developers must help to ensure images have not been tampered with as they move from development to production. Applications of this feature include scanning images for vulnerabilities and malicious code and using image signing and validation mechanisms. 
&lt;/div&gt;&lt;div&gt;
  Ensuring that only the required components are packaged inside the image can be a challenge due to the complexity of applications. If this is not carefully managed it can result in the compromise of an unnecessary component.&amp;nbsp;&amp;nbsp; 
&lt;/div&gt;&lt;div&gt;
  Ensuring third-party components are free of vulnerabilities and updated as needed can be a challenge due to differing update frequencies by third-party vendors. This can result in the compromise of third-party components.&amp;nbsp; OS package managers are a particular challenge in this regard due to the large number of updates and downloads they maintain, and the fact that they often have unrestricted access to systems.&amp;nbsp; 
&lt;/div&gt;&lt;div&gt;
  Developers and operators need to be equally engaged in the process of code promotion across application container environments.&amp;nbsp; Developers should not assume that system wide security settings will mitigate potential application vulnerabilities.&amp;nbsp; Rather, they should ensure that their images have no known vulnerabilities or malicious code, and that they have not been tampered with as they move from development to production. 
&lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:10.860">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CO-N-1" name="Insecure networking settings may be exploited to gain access to containers or hosts" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
  Monitoring network activity and providing the infrastructure to do so can present a challenge because of the lack of network tooling and data storage. The absence can result in the exposure of sensitive information and diminished incident response and detection capabilities. 
&lt;/div&gt;&lt;div&gt;
  In container networking, communications between containers and hosts must be secured, network traffic must be monitored, and access to the network traffic, resources, and configurations must be controlled.&amp;nbsp; In terms of applications, communications between containers affect access control, limiting access to network traffic, resources, and configurations (leveraging network namespace). Other outcomes include isolating the container interfaces, monitoring network activity, and securing communications between containers via SSL/TLS or VPN. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:11.047">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CO-D-1" name="Insufficient scaling of container resources may lead to inefficient resource utilization" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
  Ensuring resource scaling requests take priority over other containers may provide a challenge.&amp;nbsp; This is due to complexity and implementation of the CMP to allow such prioritization. The absence can result in priority applications not being able to scale for user workloads. 
&lt;/div&gt;&lt;div&gt;
  It is a challenge for developers to define application performance profiles. Predictive application workload modeling is a complex task often substituted by a "common practice" or, equally precise, "by analogy".&amp;nbsp; This is largely due to lack of tooling in development environments. Both are likely to lead to inefficient resource utilization. 
&lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:11.047">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="APP-LM-1" name="Lack of continuous monitoring can result in application version mismatches and system availability issues" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
  The ephemeral nature of application containers increases the necessity of reliable and centralized monitoring of platform, host, and containers.&amp;nbsp; It is essential to ensure that container runtime actions and events are monitored and logged in order to allow timely identification and mitigation of problems and threats. 
&lt;/div&gt;&lt;div&gt;
  There may be a challenge for developers to understand which container versions are running and where. This information needs to be easily and quickly digestible by appropriate parties. The absence can result in application version mismatches and system availability issues. 
&lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:11.243">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="APP-G-1" name="Lifecycle events prevent secure startup and shutdown of applications" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
  Developing a containerized application that can be scaled up or down without notice is a challenge because of the extra effort required to design and implement the application in a manner where it can gracefully handle such scaling events while maintaining a secure state.&amp;nbsp; &amp;nbsp;It is a more robust approach to ensure that stateful containerized applications are aware of container scaling events to ensure transitions between secure states. 
&lt;/div&gt;&lt;div&gt;
  In an ideal world, either application containers are stateless, or the applications have been developed with clustering technologies to attach and release neighbors as they start and are terminated.&amp;nbsp; Some use cases, though, will have containers that have not been developed in such a manner, or which contain legacy applications that have migrated to containers. Such applications running inside a container may not be aware of pending lifecycle events issued by a CMP such as container start/stop/scale.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The containerized application should have an opportunity to be informed of the pending container's lifecycle events to manage its own lifecycle accordingly. This is essential to ensure the application's secure startup and shutdown.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:11.243">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CO-G-2" name="Mismanagement of container volumes can compromise underlying architecture" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
   In container volume management, it is essential to ensure the container has need-only access to data volumes and uses dedicated storage resources for runtime operations.&amp;nbsp; In the application, it is vital to ensure that access control exists for file system resources and raw storage devices, and that data is encrypted at rest in the data volumes.&amp;nbsp; Applications directly mounting a host directory should be avoided. 
 &lt;/div&gt;Building an image that minimizes using shared container volumes is imperative due to the risk of exposing sensitive data to the host or other containers, and the current reliance on sharing information with containers. This can result in exposure of sensitive data.&amp;nbsp;&amp;nbsp; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt;
   Building an image that does not share the host filesystem is equally crucial because exposing the host filesystem can result in compromising the underlying infrastructure, and other containers that share the same environment.&amp;nbsp; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:11.046">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="APP-LM-2" name="The complexity of container architectures can make logging and monitoring difficult to implement" state="0" impact="100" issueId="" issueLink="">
          <desc>Ensuring that coding policies include logging capabilities at the planning and design stages is a challenge due to the lack of presence of security concerns in the design phase and tooling.&amp;nbsp; In addition, there are many logging features which may be implemented in microservices and an absence of clear policies can result in lack of ownership from key parties, including developers.&amp;nbsp;&amp;nbsp;&lt;div&gt;
  Usually application logging is added after the fact as a response to an incident or audit.&amp;nbsp; Ensuring that application logs, starting with authentication logs, are captured for existing applications is a challenge due to lack of resources to modify the application and necessary guidance to do so.&amp;nbsp;&amp;nbsp;This will result in diminishing incident response and detection capabilities.&amp;nbsp; 
&lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:11.242">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="CSA-SACA-3.1.5:1" name="Applications must use secure network communication protocols" issueId="" issueLink="" platform="" cost="1" risk="61" state="Recommended" owner="JamesRabe" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Network traffic generated by the containers should maintain confidentiality regarding the applications and management by utilizing proper encryption protocols (i.e., SSL/TLS, IPSec). 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Selecting libraries that support secure communications to provide encryption and maintain confidentiality prevents information spillage and network traffic tampering. Tampering of network traffic may result in system compromise. 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.5" supportedStandardRef="csa-container-architectures"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Identify any communications in your application which will be sent as network traffic and ensure that encryption protocols have been applied.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:11.001">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="IM-G-2.2.1" name="Avoid using images with OS package managers" issueId="" issueLink="" platform="" cost="1" risk="78" state="Recommended" owner="JamesRabe" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Images with OS package managers or shells could contain unknown vulnerabilities.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Package managers are normally run with unrestricted access in order to allow them to modify critical system software. The package manager's actions, therefore, affect the entire system.&amp;nbsp;&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  If you must include OS packages, remove the package manager before deploying the container.&amp;nbsp; The following steps may also help mitigate the risk: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Use repositories you trust. Use only mirrors that belong to reputable organizations.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Manually update your systems (and local mirror caches).&lt;/li&gt; 
  &lt;li&gt;Use signed repository metadata.&lt;/li&gt; 
  &lt;li&gt;Use HTTPS for mirror communication.&lt;/li&gt; 
  &lt;li&gt;Use package managers that implement metadata expiration.&lt;/li&gt; 
  &lt;li&gt;Use distributions that properly make use of the package manager's security features.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="StackRox: Kubernetes Security 101" url="https://www.stackrox.com/post/2020/05/kubernetes-security-101/"/>
            <reference name="cs.arizona.edu: Attacks on Package Managers" url="https://www2.cs.arizona.edu/stork/packagemanagersecurity/attacks-on-package-managers.html"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Follow the steps for your particular OS to identify if package managers are installed on the container.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:10.800">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SACA-3.1.7:1" name="Create and follow coding policies to include logging capabilities" issueId="" issueLink="" platform="" cost="1" risk="62" state="Recommended" owner="JamesRabe" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  An application should provide logs regarding authentication, authorization, actions, and failures. The developer should include this capability as part of planning and design phases. For new applications, the developer should create and follow coding policies to include logging capabilities at the planning and design stages.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;&lt;br&gt;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Logging application authentication, authorization, actions, and failures provides a trail of evidence to follow when an investigation takes place and a root cause needs to be established. 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.7" supportedStandardRef="csa-container-architectures"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Review the logging capabilities for your application and ensure they have been planned and designed in a way which is consistent with the features of the container architecture.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:11.183">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SACA-3.1.10:2" name="Create common libraries for developers to handle sensitive data and secrets in the backend application code" issueId="" issueLink="" platform="" cost="1" risk="78" state="Recommended" owner="JamesRabe" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  To enable consistent ways of addressing the handling of sensitive data and secrets within backend application code, a common set of libraries should be provided to developers. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Application developers are not necessarily security developers and should devote time to developing application features, not security. Security that is required within applications should be easy to use and made clear, so that minimum effort is spent and consistency across applications is achieved. 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.10" supportedStandardRef="csa-container-architectures"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Verify that libraries exist for securing sensitive data and that they have been applied to your applications.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:11.184">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SACA-3.1.9:1" name="Developers should receive sufficient training on volume management" issueId="" issueLink="" platform="" cost="1" risk="78" state="Recommended" owner="JamesRabe" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Developers should receive sufficient training to ensure development of applications that minimize the need to use shared container volumes and that do not require any access to host directories. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div style=""&gt;
   Shared volumes can result in exposure of sensitive data. Images which share the host volumes or filesystem can result in the compromise of the underlying infrastructure and other containers sharing the same environment. Avoiding these configurations is a challenge, which is why developer training is essential. 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.9" supportedStandardRef="csa-container-architectures"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Ensure that relevant training is available and up to date.&amp;nbsp;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:11.001">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SACA-3.1.17:3" name="Encrypt the sensitive application and create a container entry point application that decrypts and executes the main application" issueId="" issueLink="" platform="" cost="1" risk="78" state="Recommended" owner="JamesRabe" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  By encrypting the sensitive application, the risk of unintended exposure of the sensitive application can be mitigated. This allows the container image (and sensitive application) to be stored, transmitted, or shared without unauthorized exposure. Encryption and decryption of the application should be treated as any other data encryption/decryption process. For sensitive applications, developers should encrypt the sensitive application, then create a container entry point application that decrypts and executes the main application. 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.17" supportedStandardRef="csa-container-architectures"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that an appropriate level of encryption has been applied to any sensitive data in the application.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:11.184">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SACA-3.1.12:1" name="Ensure sustainable system performance by balancing system resources" issueId="" issueLink="" platform="" cost="1" risk="73" state="Recommended" owner="JamesRabe" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Working with the operator and architect, the developer should ensure that the binaries and libraries are optimized to operate in a containerized infrastructure. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Default configurations or those that are suitable for non-containerized systems may conflict with the needs of container architectures.&amp;nbsp; Developers need to be aware of the environmental impacts on their applications. 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.12" supportedStandardRef="csa-container-architectures"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Review optimization configurations to ensure they are compliant with the needs or policies of the container architecture.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:11.001">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SAC-3.1.1:1" name="Establish a root of trust" issueId="" issueLink="" platform="" cost="1" risk="78" state="Recommended" owner="JamesRabe" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  A public key infrastructure (PKI) allows creation and management of a hierarchy of digital certificates for encryption and digital signatures. A PKI may already exist in an organization-certificates from this new or existing system can be used to sign container images and later verify their provenance and integrity. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  To ensure the integrity of the build chain, the developer must have the ability to digitally sign and provide a digital signature for the code and/or binary artifacts that will be promoted between environments or to the next promotion phase. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  By signing a container image with a certificate that is part of a PKI, container management platform (CMP), users can easily verify the source of an image. This is important as once the source of the image is determined, users can ensure that the image has been through appropriate scrutiny before being promoted for production use. 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.1" supportedStandardRef="csa-container-architectures"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that all existing images are appropriately signed or verified, using keys provided by your organization.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:10.800">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="IM-G-2.3.1" name="Harden all applications in an image" issueId="" issueLink="" platform="" cost="1" risk="78" state="Recommended" owner="JamesRabe" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;span style="line-height: 107%; font-size: 14.6667px;"&gt;&lt;font face="Times New Roman, serif"&gt; 
   &lt;div style=""&gt; 
    &lt;div style=""&gt; 
     &lt;b&gt;Description:&lt;/b&gt; 
    &lt;/div&gt; 
    &lt;div style=""&gt;
      Ensure that applications are secure and follow best practices. 
    &lt;/div&gt; 
    &lt;div style=""&gt; 
     &lt;br&gt; 
    &lt;/div&gt; 
    &lt;div style=""&gt; 
     &lt;b&gt;Rationale:&lt;/b&gt; 
    &lt;/div&gt; 
    &lt;div style=""&gt;
      When deploying applications in a containerized system, vulnerabilities that compromise the application can in turn compromise the entire architecture.&amp;nbsp; This is a result of the way containers and pods communicate and access resources throughout the whole cluster. 
    &lt;/div&gt; 
    &lt;div style=""&gt; 
     &lt;br&gt; 
    &lt;/div&gt; 
    &lt;div style=""&gt; 
     &lt;b&gt;Remediation:&lt;/b&gt; 
    &lt;/div&gt; 
    &lt;div style=""&gt;
      Analyze source code regularly to ensure it is following best practices to avoid vulnerabilities.&amp;nbsp; &amp;nbsp;Continuously test your application against common attack practices, like SQL injection, DDoS attack, etc. There are various dynamic analysis tools available to assist.&amp;nbsp; 
    &lt;/div&gt; 
   &lt;/div&gt;&lt;/font&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;span style="font-family: &amp;quot;Times New Roman&amp;quot;, serif; font-size: 11pt;"&gt;&lt;br&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div style=""&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="The New Stack: A Security Checklist for Cloud Native Kubernetes Environments" url="https://thenewstack.io/a-security-checklist-for-cloud-native-kubernetes-environments/"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Use a reliable tool such as Veracode or Synopsys to analyze source code for vulnerabilities before deploying.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:10.801">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SACA-3.1.17:2" name="Identify a data at rest (DAR) solution" issueId="" issueLink="" platform="" cost="1" risk="78" state="Recommended" owner="JamesRabe" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The developer should utilize a DAR solution, if at all possible, that has been FIPS 140-2 validated. The developer should also analyze the application programming interface (API) and a compatible key management system (KMS).&amp;nbsp; The developer should also utilize the latest advanced encryption standard (AES) with the highest possible key length. Developers also have to take into account if the solution has been validated by an impartial third party and if the solution is viable in the intended operational environment. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  With a FIPS-validated solution and a compatible KMS, there is some third party validation that the solution is secure and thus a higher level of assurance.&amp;nbsp; Robust use of AES will ensure data confidentiality. 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.17" supportedStandardRef="csa-container-architectures"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that encryption is included and that the level is appropriate to the application security needs and the wider system policies.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:11.184">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SACA-3.1.7:2" name="Implement plans to capture application logs" issueId="" issueLink="" platform="" cost="1" risk="62" state="Recommended" owner="JamesRabe" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  An existing application should provide logs regarding authentication, authorization, actions, and failures. If any of these logging items have not been implemented, developers should provide these capabilities as part of the maintenance phase. For existing applications, the developer should implement plans to capture application logs, starting with authentication logs 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Logging application authentication, authorization, actions, and failures provides a trail of evidence to follow when an investigation takes place and a root cause needs to be established. 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.7" supportedStandardRef="csa-container-architectures"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Review the logging capabilities for your application and ensure they have been applied in a way which is consistent with the features of the container architecture.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:11.184">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SACA-3.1.6:3" name="Include only necessary components inside the image" issueId="" issueLink="" platform="" cost="1" risk="78" state="Recommended" owner="JamesRabe" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Developers should trim down images to include only necessary components. It is preferred to use a baseline image with minimal set of packages over a full OS distribution.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Removing unnecessary components from the image will reduce the number of potentially outdated or unpatched packages and therefore reduce the number of security vulnerabilities. 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.6" supportedStandardRef="csa-container-architectures"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Perform a suitable scan based on your operating system for extraneous tools and components.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:10.801">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SACA-3.1.11:1" name="Left the application in an unknown state if a containerized application is unaware of the container's transitions" issueId="" issueLink="" platform="" cost="1" risk="73" state="Recommended" owner="JamesRabe" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The CMP should provide the encapsulated application an opportunity to perform a graceful transition to a known secure state. The conventional solution is to allow an application to be notified of the container lifecycle events. Resources, freed after container's removal, should be released back to the pool in a well known state and containers should be allowed to log any state changing events. The container's lifecycle (start/stop/scaled) is managed by CMP. From a developer's perspective, the application could be left in an unknown state if a containerized application is unaware of the container's transitions 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  It is essential to inform the application of the container's lifecycle events, so that it may take appropriate action to ensure a secure startup and shutdown. 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.11" supportedStandardRef="csa-container-architectures"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Review the container's stop start process and ensure that any related and relevant configurations have been applied to your applications.&amp;nbsp;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:11.184">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="APP-AA-1.1.2" name="Limit credential exposure" issueId="" issueLink="" platform="" cost="1" risk="73" state="Recommended" owner="JamesRabe" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Harden credentials before deploying applications 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Plain text (non-encrypted) credentials (account passwords, SSH Keys, DevOps secrets, etc.) may be embedded into source code because it helps to simplify deployments at scale.&amp;nbsp; This poses formidable security risks that are routinely exploited by malware and hackers. In some cases, a threat actor may insert hardcoded credentials to create a backdoor, allowing them persistent access to a device, application, or system. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Hardcoded credentials are favored cyberattack targets for password guessing exploits, allowing hackers and malware to hijack systems, and software. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Don't define credentials in your application code. Use managed identities for cloud resources to let your pod request access to cloud provider.&amp;nbsp; Avoid the use of fixed or shared credentials. 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="BeyondTrust: Hardcoded and Embedded Credentials are an IT Security Hazard" url="https://www.beyondtrust.com/blog/entry/hardcoded-and-embedded-credentials-are-an-it-security-hazard-heres-what-you-need-to-know"/>
            <reference name="Microsoft docs: Best practices for pod security in Azure Kubernetes Service" url="https://docs.microsoft.com/en-us/azure/aks/developer-best-practices-pod-security"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Review application code before deployment for embedded credentials.&amp;nbsp; Carry out pen testing of applications to find overlooked credential vulnerabilities.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:11.184">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SACA-3.1.10:1" name="Provide training and best practices guidance to developers" issueId="" issueLink="" platform="" cost="1" risk="78" state="Recommended" owner="JamesRabe" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Backend Developers should be informed and trained on threats arising from multi-tenancy on public clouds.&amp;nbsp; They also need to be trained and provided with templates for how to use the secret management feature within their apps so they avoid the practice of hard-coding static secrets within application code. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Backend Developers are accustomed to the practice of baking sensitive information into server code from the days when server-side was considered trusted environment. Raising the awareness of the nuances and threats present in current public cloud environments helps drive in the need to avoid such practices 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.10" supportedStandardRef="csa-container-architectures"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Ensure that relevant training is available and up to date.&amp;nbsp;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:11.184">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="IM-G-2.1.1" name="Remove components which are only required for development" issueId="" issueLink="" platform="" cost="1" risk="78" state="Recommended" owner="JamesRabe" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Tools that are essential during application development can create security risks in deployment 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Any unnecessary component is another potential entrance point for an attacker.&amp;nbsp; Debuggers and common tools like Curl that are useful to attackers should not be included in images in deployment. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Perform an analysis of the entire container before deployment and remove any components or functions you do not need. 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="StackRox: Kubernetes Security 101" url="https://www.stackrox.com/post/2020/05/kubernetes-security-101/"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Perform a suitable scan based on your operating system for extraneous tools and components.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:10.801">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="IM-G-2.3.2" name="Secure any dependencies" issueId="" issueLink="" platform="" cost="1" risk="78" state="Recommended" owner="JamesRabe" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Ensure that any dependencies used by applications are also secure. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;&lt;br&gt;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  It is hard to keep to track of all the packages an application uses and to make sure they are not vulnerable.&amp;nbsp; Even if you ensure that your own application is free of vulnerabilities, if the base packages and dependencies are not secure, the container could still be vulnerable to attacks. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Regularly perform a full dependency analysis for code to uncover your open source and other dependencies for any vulnerabilities they contain. 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="IBM: Journey to Kubernetes Security" url="https://developer.ibm.com/technologies/containers/articles/journey-to-kubernetes-security/"/>
            <reference name="snyk: Kubernetes Security" url="https://snyk.io/learn/kubernetes-security/"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Use a suitable vulnerability scanner to carry out a full dependency analysis for code to uncover your dependencies and any vulnerabilities they contain.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:10.801">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="IM-G-2.1.2" name="Secure the container base image" issueId="" issueLink="" platform="" cost="1" risk="78" state="Recommended" owner="JamesRabe" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;&lt;b&gt;Description: &lt;/b&gt;&lt;br&gt;Ensure that container images are built using secure and approved base images&lt;br&gt;&lt;br&gt;&lt;b&gt;Rationale:&lt;/b&gt;&lt;br&gt;Vulnerabilities in software packages can be exploited by hackers or malicious users to obtain unauthorized access to local or cloud resources. &lt;br&gt;&lt;br&gt;&lt;b&gt;Remediation:&lt;/b&gt;&lt;br&gt;Select minimal base images, add only what you require, and scan them for vulnerabilities.&amp;nbsp; &amp;nbsp;Ideally, the tool you choose for this function should be aware of your base image choice and alert you when there is an updated version of your base image, or if there are alternate base images that can reduce vulnerabilities.&lt;br&gt;&lt;br&gt;Only deploy authorized container images that you've analyzed, scanned, and signed (i.e. Software Supply Chain Security). Grafeas, TUF, and Notary can help here.&lt;br&gt;&lt;br&gt;Ensure that only images from image registries on allow lists are used to launch containers in your Kubernetes environment.&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Peter Benjamin: Kubernetes Security Best-Practices" url="https://dev.to/petermbenjamin/kubernetes-security-best-practices-hlk"/>
            <reference name="StackRox: Kubernetes Security 101" url="https://www.stackrox.com/post/2020/05/kubernetes-security-101/"/>
            <reference name="snyk: Kubernetes Security" url="https://snyk.io/learn/kubernetes-security/"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;&lt;font face="Times New Roman, serif"&gt;Please follow your 3rd party image scanning provider's guidelines for enabling Image Scanning.&lt;/font&gt;&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:10.801">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SACA-3.1.6:1" name="Sign images as part of the image build process and validate images before use" issueId="" issueLink="" platform="" cost="1" risk="78" state="Recommended" owner="JamesRabe" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Images should be signed as part of the build process and validated before used. Signing and validation can be achieved through GNU Privacy Guard (GPG) signatures on image contents or through similar methods. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Digital signing of image content at build time and validation of the signed data before usage ensures that image data cannot be tampered with between build and run time. 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.6" supportedStandardRef="csa-container-architectures"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Review your applications to ensure that the appropriate signing has taken place.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:10.801">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SACA-3.1.3:1" name="Use clear versioning schemes to identify application versions running in containers" issueId="" issueLink="" platform="" cost="1" risk="62" state="Recommended" owner="JamesRabe" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  By defining and using an accepted versioning scheme, a development team can have version numbers automatically implemented as part of a build process. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  By applying versions either to a container name, tag, or label, the developer is then able to easily identify application versions running in containers. 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.3" supportedStandardRef="csa-container-architectures"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Review container names, tags, or labels to check that they contain version numbers in line with your organizational or system policies.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:11.185">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="APP-AA-1.1.1" name="Use IAM for access control" issueId="" issueLink="" platform="" cost="1" risk="73" state="Recommended" owner="JamesRabe" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;div&gt; 
  &lt;b&gt;Description:&lt;/b&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   Implement authentication and access control with the Identity and Access Management (IAM) service provided by the cloud provider. 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;b&gt;Rationale:&lt;/b&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   Applications which have access to the full scope of the cloud provider may perform actions outside of their scope.&amp;nbsp; This can be exploited by attackers to gain access to large areas of the cluster. 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;b&gt;Remediation:&lt;/b&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   Use IAM roles to provide fine-grained access.&amp;nbsp; Assign roles only the specific amount of resources they need, or allow them&amp;nbsp; to perform only a particular amount of activities. 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="IBM: Journey to Kubernetes Security" url="https://developer.ibm.com/technologies/containers/articles/journey-to-kubernetes-security/"/>
            <reference name="we45: Security Essentials for a Developer - Kubernetes" url="https://we45.com/blog/security-essentials-for-a-developer-kubernetes/"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Use the relevant tools for your cloud provider to audit the use of IAM roles in applications.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:11.184">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SACA-3.1.17:1" name="Use standard, commonly available authentication systems" issueId="" issueLink="" platform="" cost="1" risk="78" state="Recommended" owner="JamesRabe" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  When either data or applications are encrypted within a container, having a reliable method to authorize use of encryption keys is required. Alternatively, applications must be written to support multiple authentication methods, introducing unnecessary complexity. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  By using common authentication methods, this ensures a predictable ability to authenticate and authorize the use of encryption keys across CMPs.&amp;nbsp; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.17" supportedStandardRef="csa-container-architectures"/>
            <standard ref="K06 - Broken Authentication" supportedStandardRef="owasp-kubernetes-top-10-2022"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Verify that an encryption policy or standard exists for your organization, and that it has been applied.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:11.185">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SACA-3.1.6:2" name="Use vulnerability scanning tools as part of the development process" issueId="" issueLink="" platform="" cost="1" risk="78" state="Recommended" owner="JamesRabe" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Developers should use vulnerability scanning tools as part of the development process and the CI pipeline, and integrate a vulnerability assessment into the build process. They will also want to consider failing a build if the vulnerability assessment fails. Once a vulnerability is identified, apply security patches to the vulnerable component and rebuild the image. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  A vulnerability scanner will identify and alert on the use of third-party components with known security vulnerabilities. Applying vulnerability scanning as part of the development cycle improves the security quality of the images, since well-known vulnerabilities are identified and patched before software gets into runtime environment. 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.6" supportedStandardRef="csa-container-architectures"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check if a protocol exists for vulnerability scanning in your organization and, if so, that it has been utilized.&amp;nbsp; If one does not exist, use one of the recommended tools to ensure that your own applications and containers do not contain vulnerabilities.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:10.801">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SACA-3.1.14:1" name="Utilize resource control features to orchestrate intra-container resource utilization, prioritization and allocation thresholds" issueId="" issueLink="" platform="" cost="1" risk="62" state="Recommended" owner="JamesRabe" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Developers should expect the presence of horizontal infrastructure scaling capability but should avoid the need for vertical scaling by ensuring that the application can function within the parameters established by the configuration management team. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The developer must obtain the resource utilization and hardening parameters and incorporate those configurations into the software development environment and testing scripts. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The application developer must accept that the application under development will not have on-hand the entirety of computing resources available in the production environment. Even in the presence of auto-scale, auto-scaling capability has limits and does not scale out infinitely.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Without testing application functions within defined production parameters, the risk of poor application performance goes up, not down. Proper configuration of resource and security functionality as appropriate to the CMP in use ensures that a resource consumption fault or runaway container processes do not affect adjacent containers.&amp;nbsp; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.14" supportedStandardRef="csa-container-architectures"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Review the capabilities of the CMP in terms of the relevant thresholds and ensure your application is compliant.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:11.001">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="access-sensitive-data" name="Access sensitive data" desc="" library="microservices-library-dev">
          <threats>
            <threat ref="UNCONFIGURED-SECURITY-DATA" name="Sensitive data is exposed through weak security configurations" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="microservices-library-dev" editable="true">
              <desc>Weak security configurations make possible for an attacker to access sensitive data like API keys, credentials, etc.</desc>
              <riskRating confidentiality="100" integrity="75" availability="75" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="APP-AS-1">
                  <countermeasures>
                    <countermeasure ref="CSA-SACA-3.1.10:1" mitigation="20"/>
                    <countermeasure ref="CSA-SACA-3.1.10:2" mitigation="20"/>
                    <countermeasure ref="CSA-SACA-3.1.17:1" mitigation="20"/>
                    <countermeasure ref="CSA-SACA-3.1.17:2" mitigation="20"/>
                    <countermeasure ref="CSA-SACA-3.1.17:3" mitigation="20"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CSA-SACA-3.1.10:1" mitigation="20"/>
                <countermeasure ref="CSA-SACA-3.1.10:2" mitigation="20"/>
                <countermeasure ref="CSA-SACA-3.1.17:1" mitigation="20"/>
                <countermeasure ref="CSA-SACA-3.1.17:2" mitigation="20"/>
                <countermeasure ref="CSA-SACA-3.1.17:3" mitigation="20"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="authentication-and-authorization" name="Authentication and Authorization" desc="" library="microservices-library-dev">
          <threats>
            <threat ref="CLOUD-VULNERABILITIES" name="Attackers use known cloud vulnerabilities to access unauthorized data" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="microservices-library-dev" editable="true">
              <desc>Known vulnerabilities in a specific cloud environment are used to exploit a system, allowing an attacker to access unauthorized data</desc>
              <riskRating confidentiality="75" integrity="75" availability="100" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="APP-AA-1">
                  <countermeasures>
                    <countermeasure ref="APP-AA-1.1.1" mitigation="50"/>
                    <countermeasure ref="APP-AA-1.1.2" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="APP-AA-1.1.1" mitigation="50"/>
                <countermeasure ref="APP-AA-1.1.2" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="deployment" name="Deployment" desc="" library="microservices-library-dev">
          <threats>
            <threat ref="CAPEC-130" name="Excessive Allocation" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="microservices-library-dev" editable="true">
              <desc>&lt;p&gt;An adversary causes the target to allocate excessive resources to servicing the attackers' request, thereby reducing the resources available for legitimate services and degrading or denying services. Usually, this attack focuses on memory allocation, but any finite resource on the target could be the attacked, including bandwidth, processing cycles, or other resources.&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;This attack does not attempt to force this allocation through a large number of requests (that would be Resource Depletion through Flooding) but instead uses one or a small number of requests that are carefully formatted to force the target to allocate excessive resources to service this request(s). Often this attack takes advantage of a bug in the target to cause the target to allocate resources vastly beyond what would be needed for a normal request.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CO-D-1">
                  <countermeasures>
                    <countermeasure ref="CSA-SACA-3.1.14:1" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CSA-SACA-3.1.14:1" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="general" name="General" desc="" library="microservices-library-dev">
          <threats>
            <threat ref="IMAGE-MODIFICATION" name="Attackers compromise images by modifying their content" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="microservices-library-dev" editable="true">
              <desc>An attacker modifies/forges a microservices image to introduce vulnerabilities in the system</desc>
              <riskRating confidentiality="100" integrity="100" availability="75" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="IM-G-2">
                  <countermeasures>
                    <countermeasure ref="CSA-SACA-3.1.6:3" mitigation="20"/>
                    <countermeasure ref="IM-G-2.1.1" mitigation="16"/>
                    <countermeasure ref="IM-G-2.1.2" mitigation="16"/>
                    <countermeasure ref="IM-G-2.2.1" mitigation="16"/>
                    <countermeasure ref="IM-G-2.3.1" mitigation="16"/>
                    <countermeasure ref="IM-G-2.3.2" mitigation="16"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CSA-SACA-3.1.6:3" mitigation="20"/>
                <countermeasure ref="IM-G-2.1.1" mitigation="16"/>
                <countermeasure ref="IM-G-2.1.2" mitigation="16"/>
                <countermeasure ref="IM-G-2.2.1" mitigation="16"/>
                <countermeasure ref="IM-G-2.3.1" mitigation="16"/>
                <countermeasure ref="IM-G-2.3.2" mitigation="16"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="OWASP A1:2017" name="Attackers gain access to the sensitive data through injecting code in the repositories" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="microservices-library-dev" editable="true">
              <desc>Almost any source of data can be an injection vector: environment variables,
                                parameters, external and internal web services, and all types of users. Injection flaws
                                occur when an attacker can send hostile data to an interpreter.
                            </desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="IM-G-1">
                  <countermeasures>
                    <countermeasure ref="CSA-SAC-3.1.1:1" mitigation="34"/>
                    <countermeasure ref="CSA-SACA-3.1.6:1" mitigation="33"/>
                    <countermeasure ref="CSA-SACA-3.1.6:2" mitigation="33"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CSA-SAC-3.1.1:1" mitigation="34"/>
                <countermeasure ref="CSA-SACA-3.1.6:1" mitigation="33"/>
                <countermeasure ref="CSA-SACA-3.1.6:2" mitigation="33"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="SCALABILITY-ISSUES" name="Availability is compromised through attacks against scalability configuration" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="microservices-library-dev" editable="true">
              <desc>An attacker compromise the availability of a system by exploiting scalability configurations in order to consume resources</desc>
              <riskRating confidentiality="75" integrity="75" availability="100" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="APP-G-1">
                  <countermeasures>
                    <countermeasure ref="CSA-SACA-3.1.11:1" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CO-G-1">
                  <countermeasures>
                    <countermeasure ref="CSA-SACA-3.1.12:1" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CSA-SACA-3.1.11:1" mitigation="100"/>
                <countermeasure ref="CSA-SACA-3.1.12:1" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="UNAUTHORIZED-ACCESS-CONTAINER-VOLUMES" name="Sensitive data is compromised by unauthorized access to container volumes" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="microservices-library-dev" editable="true">
              <desc>An attacker find flaws to access container volumes without permission</desc>
              <riskRating confidentiality="100" integrity="75" availability="75" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CO-G-2">
                  <countermeasures>
                    <countermeasure ref="CSA-SACA-3.1.9:1" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CSA-SACA-3.1.9:1" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="logging-and-monitoring" name="Logging and Monitoring" desc="" library="microservices-library-dev">
          <threats>
            <threat ref="OWASP A10:2017" name="Exploitation of insufficient logging and monitoring" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="microservices-library-dev" editable="true">
              <desc>	&lt;p&gt;Exploitation of insufficient logging and monitoring is the bedrock of nearly every major incident.&lt;br /&gt;
 Attackers rely on the lack of monitoring and timely response to achieve their goals without being detected.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="APP-LM-1">
                  <countermeasures>
                    <countermeasure ref="CSA-SACA-3.1.3:1" mitigation="34"/>
                  </countermeasures>
                </weakness>
                <weakness ref="APP-LM-2">
                  <countermeasures>
                    <countermeasure ref="CSA-SACA-3.1.7:1" mitigation="33"/>
                    <countermeasure ref="CSA-SACA-3.1.7:2" mitigation="33"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CSA-SACA-3.1.3:1" mitigation="34"/>
                <countermeasure ref="CSA-SACA-3.1.7:1" mitigation="33"/>
                <countermeasure ref="CSA-SACA-3.1.7:2" mitigation="33"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="networking" name="Networking" desc="" library="microservices-library-dev">
          <threats>
            <threat ref="UNAUTHORIZED-ACCESS-NETWORK" name="Sensitive data is compromised through network access" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="microservices-library-dev" editable="true">
              <desc>Attackers gain undetected access to the network systems and changes made by the
                                attackers couldn't be audited or detected.
                            </desc>
              <riskRating confidentiality="50" integrity="50" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CO-N-1">
                  <countermeasures>
                    <countermeasure ref="CSA-SACA-3.1.5:1" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CSA-SACA-3.1.5:1" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="4d7a5d02-2054-4957-ae4b-6375cd2bb8f7" diagramComponentId="a25d95a5-96ee-4aaa-af91-be772856f4c0" ref="143dc021-c915-48d0-8b68-6f653c24704c" name="GCP Load Balancing" desc="" library="Google Cloud Platform" parentComponentRef="955c173b-e9fd-42e0-9060-3df6c91ef19e" componentDefinitionRef="google-load-balancing">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses>
        <weakness ref="CWE-770" name="Allocation of Resources Without Limits or Throttling" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;The software allocates a reusable resource or group of resources on behalf of an actor without imposing any restrictions on how many resources can be allocated, in violation of the intended security policy.&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:08.414">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="GOOGLE-USECURE-CREDENTIALS" name="Credentials are not securely stored" state="0" impact="100" issueId="" issueLink="">
          <desc>The credentials that are used to access the resources are not securely stored and can be
                        accessed by unauthorized personnel.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:08.763">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="DATA-TRANSMIT-CLEAR" name="Data is transmitted in clear text" state="0" impact="100" issueId="" issueLink="">
          <desc>Data is not protected when transmitted to applications or customers and it can be read or modified by unauthorized actors.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:08.414">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="GOOGLE-MON02" name="Excessive use of administrator accounts" state="0" impact="100" issueId="" issueLink="">
          <desc>The administrator accounts are used for all actions, not only for the administrative ones. This is because these users do not have a personal or user account to perform their daily actions.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:08.763">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CWE-778" name="Insufficient Logging" state="0" impact="100" issueId="" issueLink="">
          <desc>When a critical security event occurs, the software either does not record the event or omits important details about the event when logging it. When critical security events are not logged properly, such as in the case of a failed login attempt, this can make malicious behavior more difficult to detect and may hinder forensic analyses after a successful attack.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:08.414">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="GOOGLE-MON03" name="Lack of 2FA" state="0" impact="100" issueId="" issueLink="">
          <desc>Login to the console without using Multi-factor Authentication (MFA) is considered as suspicious activity. Therefore connection without MFA must be audited and monitored and the corresponding security group must be informed and must validate this connection.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:08.762">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="GOOGLE-IAM03" name="Misconfigured User Account" state="0" impact="100" issueId="" issueLink="">
          <desc>Key security settings such as resetting the password, and other password controls are not
                        configured.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:08.414">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="GOOGLE-IAM-01" name="Misconfigured authentication method for administrator accounts" state="0" impact="100" issueId="" issueLink="">
          <desc>The authentication method "Multi-factor Authentication" for the Administrator accounts is not
                        configured.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:08.763">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="GOOGLE_IAM-02" name="Misconfigured credentials for groups and roles" state="0" impact="100" issueId="" issueLink="">
          <desc>The credentials for the groups and roles are incorrectly configured and there are user accounts with more privileges than necessary.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:08.413">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="GOOGLE-EXPIRATION-DATE" name="Misconfigured security key expirations" state="0" impact="100" issueId="" issueLink="">
          <desc>The password and security key expiration is not configured and users are not obliged to change
                        their security credentials. Not frequently changing passwords, gives attackers the chance to
                        obtain credentials and gain access to the systems.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:08.763">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="GOOGLE-NET-01" name="Unauthorized connection attempts on open ports" state="0" impact="100" issueId="" issueLink="">
          <desc>Receiving unauthorized connections to open ports is most likely an attack. To avoid this, access to the network must be as restricted as possible, so that only the necessary ports are open and the minimum inbound traffic is accepted.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:08.414">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="GOOGLE-IAM03" name="Apply RBAC with pre-defined policies added into groups and roles" issueId="" issueLink="" platform="" cost="0" risk="64" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Define and create groups that relate to job functions (administrators, developers, accounting,
                        etc.) and assign the relevant permissions for each group, and then assign IAM users to those
                        groups. All the users in an IAM group inherit the permissions assigned to the group. That way,
                        you can make changes for everyone in a group in just one place. As people move around in your
                        company, you can simply change what IAM group their IAM user belongs to. This method is known as
                        Role Based Access Control (RBAC).&amp;nbsp;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        To add a team member and grant an IAM role to the member:
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Open the IAM page in the Cloud Platform Console and open the IAM page.&lt;/li&gt;
                        &lt;li&gt;Click Select a project.&lt;/li&gt;
                        &lt;li&gt;Select a project and click Open.&lt;/li&gt;
                        &lt;li&gt;Click Add to add new members to the project and set their permissions. In the Select a
                        role drop-down menu, click on a service name to find the roles that belong to that service.&amp;nbsp;&lt;/li&gt;
                        &lt;/ol&gt;To grant more than one role to the same project member:
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Open the IAM page in the Cloud Platform Console and open the IAM page.&lt;/li&gt;
                        &lt;li&gt;Click Select a project.&lt;/li&gt;
                        &lt;li&gt;Select a project and click Open.&lt;/li&gt;
                        &lt;li&gt;Enter the email address of the member and select all the roles that you want to grant
                        to the member. Click Add.&amp;nbsp;&lt;/li&gt;
                        &lt;/ol&gt;To grant a role to a member for more than one project:
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Open the IAM and Admin Projects page in the Cloud Platform Console and open the IAM
                        &amp;amp; ADMIN PROJECTS page.&lt;/li&gt;
                        &lt;li&gt;Select all the projects for which you want to grant permissions.&lt;/li&gt;
                        &lt;li&gt;In the IAM tab on the right pane, add the new member and select a role to grant the
                        role for all selected projects.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Granting, changing, and revoking access to resources" url="https://cloud.google.com/iam/docs/granting-changing-revoking-access"/>
          </references>
          <standards>
            <standard ref="A01:2021-Broken Access Control" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A5:2017-Broken Access Control" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Open the IAM page in the Cloud Platform Console and open the IAM page.&lt;/li&gt;
                            &lt;li&gt;Click Select a project and click Open.&lt;/li&gt;
                            &lt;li&gt;List all members from the project.&lt;/li&gt;
                            &lt;li&gt;Check that each member has been assigned to the correct roles.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:08.693">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-IAM08" name="Automatically rotate Google Service account keys" issueId="" issueLink="" platform="" cost="0" risk="64" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>The Google Service Keys shall be rotated to avoid unauthorized access.
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        To enable automatic rotation of a key, set the rotation schedule with the following gcloud
                        command-line syntax:&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        gcloud kms keys update KEY_NAME \&amp;nbsp;
                        &lt;/div&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        --location LOCATION \&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        --keyring KEYRING_NAME \&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        --rotation-period ROTATION_PERIOD \&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        --next-rotation-time NEXT_ROTATION_TIME&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;For example:&amp;nbsp;
                        &lt;div&gt;
                        gcloud kms keys update KEY_NAME&amp;nbsp;
                        &lt;/div&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        --rotation-period=30d&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        --next-rotation-time=2016-10-12T12:34:56.1234Z
                        &lt;/div&gt;
                        &lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Google Cloud docs: KMS rotation schedule" url="https://cloud.google.com/kms/docs/rotating-keys#kms-set-rotation-schedule-cli"/>
          </references>
          <standards>
            <standard ref="A05:2021-Security Misconfiguration" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A6:2017-Security Misconfiguration" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check automatic rotation of keys is enabled.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:08.694">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-VM04" name="Block all inbound port traffic from 0.0.0.0/0" issueId="" issueLink="" platform="" cost="1" risk="61" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Create a Firewall rule to filter the ingress/egress network traffic to Google Cloud resources
                        and deny the access to the resources by default. Set the limit inbound access to all TCP or all
                        ports to avoid undue exposure to risk.
                        &lt;b&gt;&amp;nbsp;&lt;/b&gt;
                        &lt;div&gt;
                        &lt;b&gt;&lt;br /&gt;&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Go to the Firewall rules page in the &lt;a
                        href="https://console.cloud.google.com//networking/firewalls/list"&gt;Google Cloud Platform
                        Console&lt;/a&gt;.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Click Create firewall rule.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Enter a Name for the firewall rule. This name must be unique for the project.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Specify the Network where the firewall rule is implemented.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Specify the Priority of the rule. If this rule will not conflict with any other rules,
                        you can leave the priority on the default of 1000. This rules shall have the highest priority,
                        because the other rules modify this rule.&lt;/li&gt;
                        &lt;li&gt;Indicate the Direction of traffic to which you want the rule to apply. In your case
                        ingress.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Indicate the Action as Deny.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Specify the Targets of the rule.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Select IP ranges if you want the rule to apply to packets from certain source IP
                        ranges only, then specify those ranges in the Source IP ranges field. In your case, the IP
                        traffic is 0.0.0.0/0.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Specify which Protocols and ports the rule should apply to. In your case, deny all
                        traffic ports.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Click Create.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Google Cloud docs: create firewall rules" url="https://cloud.google.com/vpc/docs/using-firewalls#creating_firewall_rules"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Go to the Firewall rules page in the Google Cloud Platform Console.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Check that the corresponding Firewall rule is configured and implemented.&lt;/li&gt;
                            &lt;li&gt;Check that the inbound traffic from the ip 0.0.0.0/0 is blocked.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:08.329">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-LOAD-BALANCING5" name="Configure Load Balancing with zonal NEGs" issueId="" issueLink="" platform="" cost="0" risk="61" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Configure Load Balancing with zonal NEGs&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Container-native load balancing enables several kinds of load balancers to target Pods directly and to evenly distribute their traffic to Pods. It leverages a data model called network endpoint groups (NEGs). NEGs are collections of network endpoints represented by IP-port pairs.&lt;br&gt; Among other benefits, container-native load balancing provides increased visibility and security. It helps containers troubleshoot their services at the pod level. It can preserve the source IP in the HTTP header to make it easier to trace back to the source of the traffic. Since the container sees the packets arrive from the load balancer rather than through a source NAT from another node, they can now create firewall rules using node-level network policies.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Creating zonal network endpoint groups&lt;/p&gt; 
&lt;p&gt;To create a zonal network endpoint group:&lt;/p&gt; 
&lt;p&gt;1. Go to the Network Endpoint Groups page in the Google Cloud Console.&lt;br&gt; 2. Click CREATE NETWORK ENDPOINT GROUP.&lt;br&gt; 3. For the Network endpoint group type, select Network endpoint type: Zonal.&lt;br&gt; 4. Enter the Name of the network endpoint group.&lt;br&gt; 5. Select the VPC Network location.&lt;br&gt; 6. Select the VPC network.&lt;br&gt; 7. Select the Subnet.&lt;br&gt; 8. Select the Zone.&lt;br&gt; 9. Select the Network endpoint type.&lt;br&gt; 10. Enter the Network endpoint default port.&lt;br&gt; 11. Click Create&lt;/p&gt; 
&lt;p&gt;Adding endpoints to a network endpoint group&lt;/p&gt; 
&lt;p&gt;To add endpoints to a network endpoint group:&lt;/p&gt; 
&lt;p&gt;1. Go to the Network Endpoint Groups page in the Google Cloud Console.&lt;br&gt; 2. Click the Name of the network endpoint group to which you want to add endpoints. You see the Network endpoint group detail page.&lt;br&gt; 3. In the Network endpoints in this group section, click Add network endpoint. You see the Add network endpoint page.&lt;br&gt; 4. Select a VM instance to add its internal IP addresses as network endpoints and click Add. You see the Network interface, zone, and subnet of the VM.&lt;br&gt; 5. Enter the IP address or range of the new network endpoint.&lt;br&gt; 6. Select the Port type.&lt;br&gt; a. If you select Default, the endpoint uses the default port for all endpoints in the network endpoint group.&lt;br&gt; b. If you select Custom, enter the Port number for the endpoint to use.&lt;br&gt; 7. To add more endpoints, click Add network endpoint and repeat steps 5 and 6.&lt;br&gt; 8. After you add all the endpoints that you need, click Add.&lt;/p&gt; 
&lt;p&gt;Adding a zonal NEG to a backend service&lt;/p&gt; 
&lt;p&gt;To add a network endpoint group to a backend service:&lt;/p&gt; 
&lt;p&gt;1. Go to the Load balancing page in the Google Cloud Console.&lt;br&gt; 2. Click the name of the load balancer whose backend service you want to edit.&lt;br&gt; 3. On the Load balancer details page, click Edit.&lt;br&gt; 4. On the Edit load balancer page, click Backend configuration.&lt;br&gt; 5. On the Backend configuration page, click Edit.&lt;br&gt; 6. Click Add backend.&lt;br&gt; 7. Select a Zonal network endpoint group and click Done.&lt;br&gt; 8. Click Update.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Setting up zonal NEGs" url="https://cloud.google.com/load-balancing/docs/negs/setting-up-zonal-negs"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Listing network endpoint groups&lt;/p&gt;

	&lt;p&gt;To view a list of network endpoint groups, go to the Network Endpoint Groups page in the Google Cloud Console.&lt;/p&gt;


	&lt;p&gt;Describing a specific network endpoint group&lt;/p&gt;

	&lt;p&gt;To get the details of a specific network endpoint group:&lt;/p&gt;

	&lt;p&gt;1. Go to the Network Endpoint Groups page in the Google Cloud Console.&lt;br /&gt;
2. Click the name of the network endpoint group whose details you want to see.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:08.329">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-LOAD-BALANCING1" name="Control access to Cloud Load Balancing using IAM access control" issueId="" issueLink="" platform="" cost="0" risk="64" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Control access to Cloud Load Balancing using IAM access control&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; When you use Cloud Load Balancing, you make API requests. Each API request requires that the Identity and Access Management (IAM) member who makes the request has appropriate permission to create, modify, or delete the associated resources.&lt;/p&gt; 
&lt;p&gt;In IAM, permission to access a Google Cloud resource isn't granted directly to the end user. Instead, permissions are grouped into roles, and roles are granted to authenticated members. Members can be of the following types: a user, group, service account, or Google domain. An IAM policy defines and enforces what roles are granted to which members, and this policy is then attached to a resource.&lt;/p&gt; 
&lt;p&gt;Identity and Access Management (IAM) Conditions let you define IAM policies with conditional grants. You specify conditions in the role bindings of a resource's IAM policy. If a condition exists, the role is granted only when the condition expression evaluates to true. Each condition expression is a set of logic statements, allowing you to specify one or many attributes.&lt;/p&gt; 
&lt;p&gt;In addition, use organization policy constraints to enforce load balancer settings across an entire project, folder, or organization.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Example condition expressions for load balancing&lt;/p&gt; 
&lt;p&gt;The following condition expression, which can be used in an IAM policy, permits an API request only if one of the following is true:&lt;/p&gt; 
&lt;p&gt;- The request doesn't involve creating a forwarding rule.&lt;br&gt; - The request is to create a forwarding rule that has one of the internal schemes.&lt;/p&gt; 
&lt;p&gt;!compute.isForwardingRuleCreationOperation() || ( compute.isForwardingRuleCreationOperation() &amp;amp;&amp;amp; compute.matchLoadBalancingSchemes(['INTERNAL', 'INTERNAL_MANAGED', 'INTERNAL_SELF_MANAGED'])&lt;br&gt; )&lt;/p&gt; 
&lt;p&gt;The effect of this policy is to cause a permissions error message to appear if a member tries to create a forwarding rule with the EXTERNAL load balancing scheme, because the load balancing scheme EXTERNAL is omitted.&lt;/p&gt; 
&lt;p&gt;Example policy&lt;/p&gt; 
&lt;p&gt;This example IAM policy for a project grants the IAM member jane@example.com the Load Balancer Admin predefined role, excluding the ability to create external load balancers (because the load balancing scheme EXTERNAL is omitted). jane@example.com can create internal load balancers, and can manage, modify, and delete any load balancer.&lt;/p&gt; 
&lt;p&gt;{ "bindings": [ { "role": "roles/compute.loadBalancerAdmin", "members": ["user:jane@example.com"], "condition": { "title": "only_internal_lb_schemes", "description": "Internal LB creation only permitted", "expression": " !compute.isForwardingRuleCreationOperation() || ( compute.isForwardingRuleCreationOperation() &amp;amp;&amp;amp; compute.matchLoadBalancingSchemes(['INTERNAL', 'INTERNAL_MANAGED', 'INTERNAL_SELF_MANAGED']) ) " } } ]&lt;br&gt; }&lt;/p&gt; 
&lt;p&gt;Granting GKE service account permissions for specific types of forwarding rules&lt;/p&gt; 
&lt;p&gt;You can also use IAM Conditions to limit access to the GKE service account to create only specific types of forwarding rules.&lt;/p&gt; 
&lt;p&gt;This JSON example demonstrates a complete IAM policy to grant the GKE service account (service-@container-engine-robot.iam.gserviceaccount.com) the Kubernetes Engine Service Agent role. This role allows the service account to create, modify, and delete load balancer components, except for external forwarding rules.&lt;/p&gt; 
&lt;p&gt;Using this conditional grant, the GKE service account can only create new internal forwarding rules, but can manage all existing forwarding rules.&lt;/p&gt; 
&lt;p&gt;{ "bindings": [ { "role": "roles/container.serviceAgent", "members": ["serviceAccount:service-@container-engine-robot.iam.gserviceaccount.com"], "condition": { "title": "only_internal_lb_schemes", "description": "Internal LB Creation Only Permitted", "expression": "( compute.isForwardingRuleCreationOperation() &amp;amp;&amp;amp; compute.matchLoadBalancingSchemes(['INTERNAL', 'INTERNAL_MANAGED', 'INTERNAL_SELF_MANAGED']) ) || !compute.isForwardingRuleCreationOperation() " } } ]&lt;br&gt; }&lt;/p&gt; 
&lt;p&gt;Absent other grants, attempting to create a new GKE Service of type LoadBalancer, without the annotation for an internal TCP/UDP load balancer, results in an error message like the following:&lt;/p&gt; 
&lt;p&gt;Error creating load balancer (will retry): failed to ensure load balancer for&lt;br&gt; service default/SERVICE-NAME: failed to create forwarding rule for load balancer&lt;br&gt; (a01d427111c7011ea96e142010a80006(default/SERVICE-NAME)): googleapi: Error 403:&lt;br&gt; Required 'compute.forwardingRules.create' permission for&lt;br&gt; 'projects/[project-id]/regions/[region]/forwardingRules/[forwarding-rule-name]',&lt;br&gt; forbidden&lt;/p&gt; 
&lt;p&gt;Additionally, absent other grants, attempting to create a new Ingress object, using the Cloud Load Balancing Ingress controller, results in a similar error message because the Cloud Load Balancing Ingress controller needs to create an external HTTP load balancer.&lt;/p&gt; 
&lt;p&gt;In the above examples, GKE error messages are available using the kubectl describe and kubectl get events -w commands.&lt;/p&gt; 
&lt;p&gt;Setting up an organization policy&lt;/p&gt; 
&lt;p&gt;To set the Cloud Load Balancing organization policy from the console, complete the following steps:&lt;/p&gt; 
&lt;p&gt;1. In the Google Cloud Console, go to the Organization policies page.&lt;br&gt; 2. In the Filter field, type load and select constraints/compute.restrictLoadBalancerCreationForTypes.&lt;br&gt; 3. Click Restrict Load Balancer Creation Based on Load Balancer Types.&lt;br&gt; 4. Click Edit to edit your existing Cloud Load Balancing policy constraints.&lt;br&gt; 5. To create a custom policy, select Customize.&lt;br&gt; 6. After making any changes, click Save to apply the constraint settings.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="IAM Conditions for forwarding rules" url="https://cloud.google.com/load-balancing/docs/access-control/iam-conditions"/>
            <reference name="Organization policy constraints for Cloud Load Balancing" url="https://cloud.google.com/load-balancing/docs/org-policy-constraints"/>
          </references>
          <standards>
            <standard ref="A01:2021-Broken Access Control" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A5:2017-Broken Access Control" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Testing permissions&lt;/p&gt;

	&lt;p&gt;Most Google Cloud resources expose the testIamPermissions() method, which allows you to programmatically check whether the currently authenticated caller has been granted one or more specific IAM permissions on the resource. The testIamPermissions() method takes a resource identifier and a set of permissions as input parameters, and returns the set of permissions that the caller is allowed.&lt;/p&gt;

	&lt;p&gt;You can use the testIamPermissions() method to determine whether a user should have access to an administrative tool in a web application. For example, you can use this method to decide, based on the user's permissions, whether to display detailed information about a Google Cloud resource.&lt;/p&gt;

	&lt;p&gt;Note: If you need to test a permission so that you can troubleshoot access to a resource, use the Policy Troubleshooter instead.&lt;/p&gt;

	&lt;p&gt;For example, to determine if the currently authenticated user has the permission to delete a project, call the projects.testIamPermissions() method by providing the project ID (such as foo-project) and the resourcemanager.projects.delete permission as input parameters. If the caller has been granted the resourcemanager.projects.delete permission, it will be listed in the response body. If the caller does not have this permission, the response body will list no permissions.&lt;/p&gt;

	&lt;p&gt;The testIamPermissions() method is intended for third-party graphical user interfaces (GUIs) that need to display Google Cloud resources based on what the authenticated user has permissions to see. For example, the Cloud Console internally uses the testIamPermissions() method to determine what resources and functionality are visible to you after authenticating. Different users are typically granted different permissions, and the Cloud Console hides or exposes items accordingly.&lt;/p&gt;

	&lt;p&gt;How to test permissions&lt;/p&gt;

	&lt;p&gt;This example shows how to test the resourcemanager.projects.get and resourcemanager.projects.delete permissions for a Google Cloud project. To test permissions for other Google Cloud resources, use the testIamPermissions() method exposed by each resource. For example, you can test the IAM permissions for a Cloud Storage bucket.&lt;/p&gt;

	&lt;p&gt;In this example, the user has an IAM role that allows them to get information about a project, but not to delete projects.&lt;/p&gt;

	&lt;p&gt;The Resource Manager API's projects.testIamPermissions method accepts a list of permissions and tests which of the permissions a member has.&lt;/p&gt;

	&lt;p&gt;Before using any of the request data below, make the following replacements:&lt;/p&gt;

	&lt;p&gt;project-id: Your Google Cloud project ID.&lt;br /&gt;
HTTP method and URL:&lt;/p&gt;

	&lt;p&gt;POST https://cloudresourcemanager.googleapis.com/v1/projects/project-id:testIamPermissions&lt;/p&gt;

	&lt;p&gt;Request JSON body:&lt;/p&gt;

	&lt;p&gt;{
  "permissions":  [
    "resourcemanager.projects.get",
    "resourcemanager.projects.delete"
  ]&lt;br /&gt;
}&lt;/p&gt;

	&lt;p&gt;Note: Ensure you have set the GOOGLE_APPLICATION_CREDENTIALS environment variable to your service account private key file path.&lt;br /&gt;
Save the request body in a file called request.json, and execute the following command:&lt;/p&gt;

	&lt;p&gt;curl -X POST \&lt;br /&gt;
-H "Authorization: Bearer "$(gcloud auth application-default print-access-token) \&lt;br /&gt;
-H "Content-Type: application/json; charset=utf-8" \&lt;br /&gt;
-d @request.json \&lt;br /&gt;
https://cloudresourcemanager.googleapis.com/v1/projects/project-id:testIamPermissions&lt;/p&gt;

	&lt;p&gt;You should receive a JSON response similar to the following:&lt;/p&gt;

	&lt;p&gt;{
  "permissions": [
    "resourcemanager.projects.get"
  ]&lt;br /&gt;
}&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:08.328">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-LOAD-BALANCING3" name="Create health checks for Cloud Load Balancing" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Create health checks for Cloud Load Balancing&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Google Cloud provides health checking mechanisms that determine whether backend instances respond properly to traffic. Create and use health checks for load balancers and Traffic Director.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Creating health checks&lt;/p&gt; 
&lt;p&gt;Google Cloud allows you to create or select a health check when you complete the load balancer's backend configuration in the Cloud Console.&lt;/p&gt; 
&lt;p&gt;You can also create a health check independently of load balancer configuration in the Cloud Console. This is useful if you need to create your health check first, or if you need to use a health check for multiple load balancers. You can create a health check using the Cloud Console, the gcloud command-line tool, or the REST APIs.&lt;/p&gt; 
&lt;p&gt;Note: You must use legacy HTTP health checks for target pool based-network load balancers. You can select or create a legacy health check when you complete the network load balancer's configuration in the Cloud Console.&lt;/p&gt; 
&lt;p&gt;1. Go to the Health checks page in the Google Cloud Console.&lt;br&gt; 2. Click Create a health check.&lt;br&gt; 3. On the Create a health check page, supply the following information:&lt;br&gt; - Name: Provide a name for the health check.&lt;br&gt; - Description: Optionally, provide a description.&lt;br&gt; - Protocol: Choose a health check protocol.&lt;br&gt; - Port: Provide a port number. When you create a health check in the Cloud Console, you must specify the port using a port number.&lt;br&gt; - Proxy protocol: Optionally, you can append a proxy header to the requests made by the health check probe systems.&lt;br&gt; - Request path and Response: For HTTP, HTTPS, and HTTP2 protocols, you can optionally provide a URL path for the health check probe systems to contact. For more information, see Additional flags for HTTP, HTTPS, and HTTP/2 health checks.&lt;br&gt; - Request and Response: For TCP and SSL protocols, you can specify an ASCII text string to send and expected text response string. For more information, see Additional flags for SSL and TCP health checks.&lt;br&gt; - Check interval: Define the amount of time from the start of one probe to the start of the next one.&lt;br&gt; - Timeout: Define the amount of time that Google Cloud waits for a response to a probe. Its value must be less than or equal to the check interval.&lt;br&gt; - Healthy threshold: Define the number of sequential probes that must succeed for the VM instance to be considered healthy.&lt;br&gt; - Unhealthy threshold: Define the number of sequential probes that must fail for the VM instance to be considered unhealthy.&lt;br&gt; 4. Click Create.&lt;/p&gt; 
&lt;p&gt;Required firewall rules&lt;/p&gt; 
&lt;p&gt;You need to create ingress firewall rules applicable to all VMs being load balanced to allow traffic from health check prober IP ranges.&lt;/p&gt; 
&lt;p&gt;The following example creates an ingress firewall rule for the following load balancers:&lt;/p&gt; 
&lt;p&gt;- Internal TCP/UDP Load Balancing (health checks)&lt;br&gt; - Internal HTTP Load Balancing (health checks)&lt;br&gt; - TCP Proxy Load Balancing (health checks)&lt;br&gt; - SSL Proxy Load Balancing (health checks)&lt;br&gt; - HTTP Load Balancing (health checks and legacy health checks)&lt;/p&gt; 
&lt;p&gt;For these load balancers, the source IP ranges for health checks (including legacy health checks if used for HTTP Load Balancing) are:&lt;/p&gt; 
&lt;p&gt;- 35.191.0.0/16&lt;br&gt; - 130.211.0.0/22&lt;/p&gt; 
&lt;p&gt;1. Go to the Firewall page in the Google Cloud Console.&lt;br&gt; 2. Click Create firewall rule.&lt;br&gt; 3. On the Create a firewall rule page, supply the following information:&lt;br&gt; - Name: Provide a name for the rule. For this example, use fw-allow-health-checks.&lt;br&gt; - Network: Choose a VPC network.&lt;br&gt; - Priority: Enter a number for the priority. Lower numbers have higher priorities. Be sure that the firewall rule has a higher priority than other rules that might deny ingress traffic.&lt;br&gt; - Direction of traffic: Choose ingress.&lt;br&gt; - Action on match: Choose allow.&lt;br&gt; - Targets: Choose Specified target tags, and then enter tags in the Target tags text box. For this example, use allow-health-checks.&lt;br&gt; - Source filter: Choose IP ranges.&lt;br&gt; - Source IP ranges: 35.191.0.0/16,130.211.0.0/22&lt;br&gt; - Allowed protocols and ports: Use tcp. TCP is the underlying protocol for all health check protocols.&lt;br&gt; - Click Create.&lt;br&gt; 4. On each of your instances being load balanced, add the network tag so that this new ingress firewall rule applies to them. This example uses allow-health-checks for the network tag.&lt;/p&gt; 
&lt;p&gt;Associating health checks with load balancers and Traffic Director&lt;/p&gt; 
&lt;p&gt;Matching the protocol&lt;/p&gt; 
&lt;p&gt;It's best to use a health check (or legacy health check) whose protocol matches the protocol used by the load balancer's backend service or target pool. However, the health check protocols and load balancer protocols do not need to be the same. As examples:&lt;/p&gt; 
&lt;p&gt;- For Internal TCP/UDP Load Balancing, you can only use TCP or UDP for the backend service's protocol. If you serve HTTP traffic from VMs behind an internal TCP/UDP load balancer, it makes sense to employ a health check using the HTTP protocol.&lt;/p&gt; 
&lt;p&gt;- A target pool-based network load balancer must use a legacy HTTP health check. It cannot use a legacy HTTPS health check or any non-legacy health check. If you use a target pool-based network load balancer to balance TCP traffic, you need to run an HTTP service on the VMs being load balanced so that they can respond to health check probes.&lt;/p&gt; 
&lt;p&gt;A backend service-based network load balancer can use non-legacy health checks. That is, you can use a health check whose protocol matches the protocol used by the network load balancer's backend service.&lt;/p&gt; 
&lt;p&gt;- For backend services that use the gRPC protocol, use only gRPC or TCP health checks. Do not use HTTP or HTTP/2 health checks.&lt;/p&gt; 
&lt;p&gt;Associate using the console&lt;/p&gt; 
&lt;p&gt;To associate a health check with an existing internal TCP/UDP load balancer, TCP proxy load balancer, SSL proxy load balancer, external HTTP load balancer, or backend service-based network load balancer:&lt;/p&gt; 
&lt;p&gt;1. Go to the Load balancing page in the Google Cloud Console.&lt;br&gt; 2. Click on a load balancer to view its details.&lt;br&gt; 3. Click Edit, and then click Backend configuration.&lt;br&gt; 4. Choose a health check from the Health check menu.&lt;br&gt; 5. Click Update.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Creating health checks" url="https://cloud.google.com/load-balancing/docs/health-checks"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="A09:2021-Security Logging and Monitoring Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2017-Insufficient Logging-Monitoring" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Checking health check status&lt;br /&gt;
After you associate a health check with a backend service or a target pool, you can get the instantaneous health check state for the load balancer's backends.&lt;/p&gt;

	&lt;p&gt;1.Go to the load balancing summary page.&lt;br /&gt;
2. Click the name of a load balancer.&lt;br /&gt;
3. Under Backend, inspect the Healthy column. Health status is reported for each backend instance group or network endpoint group.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:08.328">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-IAM05" name="Create Individual Accounts for the administrator users" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Create individual accounts for administrator users and with these new accounts perform the necessary administrative actions. By creating service accounts for people accessing your account, you can give each Google user a unique set of security credentials and roles.&amp;nbsp; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The administrator accounts shall be used for administrative actions and for giving or revoking credentials to users' accounts. The administrator account shall be not used as a normal user account. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Open the Service Accounts page in the Cloud Platform Console and open the IAM page.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Click Select a project.&lt;/li&gt; 
  &lt;li&gt;Select your project and click Open.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Click Create Service Account.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Enter a service account name, select a role you wish to grant to the service account and click Create.&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Google Cloud docs: manage service accounts" url="https://cloud.google.com/iam/docs/creating-managing-service-accounts"/>
          </references>
          <standards>
            <standard ref="A07:2021-Identification and Authentication Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A2:2017-Broken Authentication" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Open the Service Accounts page in the Cloud Platform Console and open the IAM
                            page.&lt;/li&gt;
                            &lt;li&gt;Click Select a project.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Select your project and click Open.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Review that each administrator user has an individual Google Service Account.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:08.693">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-IAM04" name="Create mechanisms to ensure Least Privilege is applied" issueId="" issueLink="" platform="" cost="0" risk="64" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Create mechanisms to periodically review the group and user permissions to ensure the least
                        privilege for the user accounts. Granting least privilege ensures that users only have the
                        permissions required to complete their tasks rather than additional privileges that are not
                        required. Following this model ensures that, should an account be compromised, the blast radius
                        of damage is limited.&amp;nbsp;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        Allocate privileges via groups or roles via the recommendation in &amp;quot;Use RBAC with
                        pre-defined policies added into groups or roles&amp;quot;.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Open the IAM page in the Google Cloud Platform Console and open the IAM page.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Click Select a project.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Select a project and click Open.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Review the groups and users with access to the project and their permissions.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;If there is a user with more privileges, revoke the access as following:&lt;/li&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Select the user to revoke privileges.&lt;/li&gt;
                        &lt;li&gt;In the Roles(s) drop-down menu in the member's row, uncheck the roles you want to
                        revoke and click Save.&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Granting, changing, and revoking access to resources" url="https://cloud.google.com/iam/docs/granting-changing-revoking-access"/>
          </references>
          <standards>
            <standard ref="A01:2021-Broken Access Control" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A5:2017-Broken Access Control" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check there is a mechanism in place to ensure the enforcement of the Least Privilege
                            principle.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:08.693">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-IAM02" name="Define roles for the Google Service Accounts" issueId="" issueLink="" platform="" cost="0" risk="64" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Define and create the roles for the Google Cloud. For each role, you can use one of the
                        predefined roles or create a new custom role to ensure that each role has got the least minimum
                        permissions.&amp;nbsp;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;List all predefined roles and review them.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;If it's necessary, create new custom roles to ensure users have the least privileges.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="A01:2021-Broken Access Control" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A5:2017-Broken Access Control" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;List all roles.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Check that all fulfill the least privilege principle.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Check that all roles are defined correctly.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:08.693">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-LOG01" name="Enable all access logs" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Enable all access logs&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Enable all audit logs in the Google Cloud Platform to control and monitor the access of users and the configuration changes in the systems. &lt;br&gt; First, you have to know there are two types of audit logs in the Google Cloud Platform: &lt;br&gt; - Admin Activity audit logs that are enabled for all services and cannot be configured.&lt;br&gt; - Data Access audit logs that are not enabled by default and they shall be configured.&lt;/p&gt; 
&lt;p&gt;Remediation: &lt;br&gt; Configure Data Access audit logs with the Cloud console&lt;/p&gt; 
&lt;p&gt;You can also use the API or the Google Cloud CLI to perform these tasks programmatically.&lt;/p&gt; 
&lt;p&gt;To access audit log configuration options in the Cloud console, follow these steps:&lt;/p&gt; 
&lt;p&gt;1. From the Cloud console, select IAM &amp;amp; Admin &amp;gt; Audit Logs:&lt;/p&gt; 
&lt;p&gt;2. Select an existing Cloud project, folder, or organization at the top of the page.&lt;/p&gt; 
&lt;p&gt;Enable audit logs&lt;/p&gt; 
&lt;p&gt;To enable Data Access audit logs, do the following:&lt;/p&gt; 
&lt;p&gt;1. In the main table on the Audit Logs page, select one or more Google Cloud services from the Title column.&lt;/p&gt; 
&lt;p&gt;2. In the Log Type tab, select the Data Access audit log types that you want to enable and then click Save.&lt;/p&gt; 
&lt;p&gt;3. Where you have successfully enabled audit logs, the table includes a checkmark. In the following example, you see that, for the Cloud Composer API service, Admin Read and Data Read audit logs are enabled:&lt;/p&gt; 
&lt;p&gt;You can also enable audit logs for all Google Cloud services that produce Data Access audit logs. In the main table on the Audit Logs page, select all Google Cloud services.&lt;/p&gt; 
&lt;p&gt;Note that this bulk configuration method applies only to the Google Cloud services that are currently available. If a new Google Cloud service is added, it inherits your default audit configuration.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Configure Data Access audit logs" url="https://cloud.google.com/logging/docs/audit/configure-data-access#config-console"/>
            <reference name="Google Cloud docs: data access" url="https://cloud.google.com/logging/docs/audit/configure-data-access#project-and-organization"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="A09:2021-Security Logging and Monitoring Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2017-Insufficient Logging-Monitoring" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>	&lt;p&gt;Check that all audit logs in the Google Cloud Platform are enabled and configured.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:08.694">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-LOAD-BALANCING2" name="Enable connection draining on Load Balancers" issueId="" issueLink="" platform="" cost="0" risk="78" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Enable connection draining on Load Balancers&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Connection draining is a process that ensures that existing, in-progress requests are given time to complete when a VM is removed from an instance group or when an endpoint is removed from a zonal NEG.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Enabling connection draining&lt;/p&gt; 
&lt;p&gt;Updating a load balancer&lt;/p&gt; 
&lt;p&gt;1. Go to the Load balancing page in the Google Cloud Console.&lt;br&gt; 2. Click Edit for your load balancer or create a new load balancer.&lt;br&gt; 3. Click Backend configuration.&lt;br&gt; 4. Click Advanced configurations at the bottom of your backend service.&lt;br&gt; 5. In the Connection draining timeout field, enter a value from 0 - 3600. A setting of 0 disables connection draining.&lt;/p&gt; 
&lt;p&gt;Updating Traffic Director&lt;/p&gt; 
&lt;p&gt;1. Go to the Traffic Director page in the Google Cloud Console.&lt;br&gt; 2. Click the Name of your service.&lt;br&gt; 3. Click Advanced configurations at the bottom of your service.&lt;br&gt; 4. In the Connection draining timeout field, enter a value from 0 - 3600. A setting of 0 disables connection draining.&lt;br&gt; 5. Click Save.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Enabling connection draining" url="https://cloud.google.com/load-balancing/docs/enabling-connection-draining"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="10" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="13" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="14" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="16" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="22" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="3" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="7" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API4:2019-Lack of Resources and Rate Limiting" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that connection draining is enabled on Load Balancers.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:08.328">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-LOAD-BALANCING4" name="Enable logging of Load Balancing health checks" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Enable logging of Load Balancing health checks&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; You can get logs of load balancing health checks when an endpoint changes in health status. You can use health check logs for the following:&lt;/p&gt; 
&lt;p&gt;- Live debugging and troubleshooting your endpoint health status&lt;br&gt; - Getting visibility into your endpoint's health status&lt;br&gt; - Auditing and compliance purposes&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Enabling logging on a new health check&lt;/p&gt; 
&lt;p&gt;1. Go to the Health check page in the Google Cloud Console.&lt;br&gt; 2. Click Create a health check.&lt;br&gt; 3. Set the Logs radio button to On.&lt;br&gt; 4. Continue setting up your health check.&lt;/p&gt; 
&lt;p&gt;Enabling logging on an existing health check&lt;/p&gt; 
&lt;p&gt;1. Go to the Health check page in the Google Cloud Console.&lt;br&gt; 2. Click the name of your health check.&lt;br&gt; 3. Click Edit.&lt;br&gt; 4. Set the Logs radio button to On.&lt;br&gt; 5. Click Save.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Health check logging" url="https://cloud.google.com/load-balancing/docs/health-check-logging"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="A09:2021-Security Logging and Monitoring Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2017-Insufficient Logging-Monitoring" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Viewing logs&lt;/p&gt;

	&lt;p&gt;To view logs, go to the Logs viewer.&lt;/p&gt;

	&lt;p&gt;Health check logs are indexed by instance group or network endpoint group.&lt;/p&gt;

	&lt;p&gt;To see all logs, in the first pull-down menu select GCE Instance Group or Network Endpoint Group, depending on your type of backend.&lt;/p&gt;

	&lt;p&gt;Alternatively, go to the Logs viewer and paste the following into the Filter by label or text search field. Replace PROJECT_ID with your project's ID.&lt;/p&gt;


	&lt;p&gt;logName="projects/PROJECT_ID/logs/compute.googleapis.com%2Fhealthchecks"&lt;/p&gt;

	&lt;p&gt;You can also get logs based on more specific searches. For example, the following filter shows all logs for a specified backend instance IP address:&lt;/p&gt;


  logName="projects/PROJECT_ID/logs/compute.googleapis.com%2Fhealthchecks"
jsonPayload.healthCheckProbeResult.ipAddress="IP_ADDRESS"

	&lt;p&gt;Log fields of type boolean typically only appear if they have a value of true. If a boolean field has a value of false, that field is omitted from the log.&lt;/p&gt;

	&lt;p&gt;UTF-8 encoding is enforced for log fields. Characters that are not UTF-8 characters are replaced with question marks.&lt;/p&gt;

	&lt;p&gt;You can configure export of logs-based metrics for load balancer health checks.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:08.328">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-IAM01" name="Recertify user access" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Do regular reviews of service accounts on the system and verify they do not contain stolen or
                        fake accounts. This process ensures there are not any compromised accounts by former employees
                        or attackers.&amp;nbsp;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        At least every 90 days complete the following:&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Open the Service Accounts page in the Cloud Platform Console.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Click Select a project.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Select your project and click Open. All service accounts are listed in the Service
                        Accounts page.&lt;/li&gt;
                        &lt;li&gt;For any user that should not exist, select the user and click the Delete button.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Google Cloud docs: manage service accounts" url="https://cloud.google.com/iam/docs/creating-managing-service-accounts"/>
          </references>
          <standards>
            <standard ref="A07:2021-Identification and Authentication Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A2:2017-Broken Authentication" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Open the Service Accounts page in the Cloud Platform Console.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Click Select a project.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Select your project and click Open. All service accounts are listed in the Service
                            Accounts page.&lt;/li&gt;
                            &lt;li&gt;Check that the necessary users appear in the list.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;And check that there is a process to review the access users at least every 90
                            days.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:08.692">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-STO02" name="Securely store your credentials" issueId="" issueLink="" platform="" cost="0" risk="64" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Make sure that you securely store your credentials. This can be done differently depending on
                        your environment and where you store your credentials. For example, if you store your
                        credentials in a configuration file, make sure that you set appropriate permissions on that file
                        to prevent unwanted access. If you are using Google App Engine, consider using StorageByKeyName
                        to store your credentials.</desc>
          <implementations/>
          <references>
            <reference name="Google Cloud docs: Best practices storage" url="https://cloud.google.com/storage/docs/best-practices"/>
          </references>
          <standards>
            <standard ref="A02:2021-Cryptographic Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A3:2017-Sensitive Data Exposure" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that the credentials are stored securely.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:08.694">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-USER-MFA" name="Setup Multi-factor Authentication for Google Cloud Platform accounts" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Setup Multi-factor Authentication for Google Cloud Platform accounts 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  Multi-factor authentication requires more than one mechanism to authenticate a user. This secures user logins from attackers exploiting stolen or weak credentials. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  Deploy 2-Step Verification 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Step 1: Notify users of 2-Step Verification deployment (required) 
&lt;/div&gt; 
&lt;div&gt;
  Before deploying 2-Step Verification, communicate your company's plans to your users, including: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - What is 2-Step Verification and why your company is using it 
&lt;/div&gt; 
&lt;div&gt;
  - Whether 2-Step Verification is optional or required 
&lt;/div&gt; 
&lt;div&gt;
  - If required, give the date by which users must turn on 2-Step Verification 
&lt;/div&gt; 
&lt;div&gt;
  - Which 2-Step Verification method is required or recommended. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Step 2: Set up basic 2-Step Verification (required) 
&lt;/div&gt; 
&lt;div&gt;
  Next, let your users turn on 2-Step Verification. By default, users can turn on 2-Step Verification and use any verification method. (G Suite accounts created before December 2016 have 2-Step Verification turned off by default). 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Applying 2-Step Verification settings 
&lt;/div&gt; 
&lt;div&gt;
  You can customize 2-Step Verification settings for organizational units and exception groups-a group of users within organizational unit. For example, require security keys for a small team in your Sales organizational unit. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  How exception groups work 
&lt;/div&gt; 
&lt;div&gt;
  - You can assign one exception group to an organizational unit. 
&lt;/div&gt; 
&lt;div&gt;
  - Users in the exception group must belong to the organizational unit. 
&lt;/div&gt; 
&lt;div&gt;
  - 2-Step Verification settings apply to users in the exception group (not to group addresses or nested groups). 
&lt;/div&gt; 
&lt;div&gt;
  - Create the groups in Admin console, Groups API, or Directory Sync (not Google Groups). 
&lt;/div&gt; 
&lt;div&gt;
  For easier identification, you might include the organizational unit in the name of exception groups (for example, exgrp_OU_name). 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Also: 
&lt;/div&gt; 
&lt;div&gt;
  - Allow users to turn on 2-Step Verification 
&lt;/div&gt; 
&lt;div&gt;
  - Tell your users to enroll in 2-Step Verification 
&lt;/div&gt; 
&lt;div&gt;
  - Track users' enrollment&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Step 3: Enforce 2-Step Verification (optional) 
&lt;/div&gt; 
&lt;div&gt;
  Make sure users are enrolled in 2-Step Verification before turning on enforcement. Users who aren't enrolled can't sign in to their accounts. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Also: 
&lt;/div&gt; 
&lt;div&gt;
  - Ensure a smooth transition to an enforcement policy 
&lt;/div&gt; 
&lt;div&gt;
  - Choose a 2-Step Verification method to enforce 
&lt;/div&gt; 
&lt;div&gt;
  - Turn on enforcement 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  For more details please follow the Reference URL. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Deploy 2-Step Verification" url="https://support.google.com/a/answer/9176657"/>
          </references>
          <standards>
            <standard ref="A07:2021-Identification and Authentication Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A2:2017-Broken Authentication" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  For each Google Cloud Platform project, folder, or organization: 
&lt;/div&gt; 
&lt;div&gt;
  1. Identify non-service accounts. 
&lt;/div&gt; 
&lt;div&gt;
  2. Manually verify that multi-factor authentication for each account is set. 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:08.694">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-IAP" name="Use Identity-Aware Proxy (IAP)" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Use Identity-Aware Proxy (IAP)&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; IAP lets you establish a central authorization layer for applications accessed by HTTPS, so you can use an application-level access control model instead of relying on network-level firewalls.&lt;/p&gt; 
&lt;p&gt;IAP policies scale across your organization. You can define access policies centrally and apply them to all of your applications and resources. When you assign a dedicated team to create and enforce policies, you protect your project from incorrect policy definition or implementation in any application.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Enabling IAP&lt;/p&gt; 
&lt;p&gt;To get started with IAP using the App Engine quickstart, or learn how to enable IAP for Compute Engine , IAP for GKE , or IAP for on-premises apps, please see the Reference URL for specific instructions about each case.&lt;/p&gt; 
&lt;p&gt;Setting up IAP access (general steps for all cases)&lt;/p&gt; 
&lt;p&gt;1. Go to the Identity-Aware Proxy page.&lt;br&gt; 2. Select the project you want to secure with IAP.&lt;br&gt; 3. Select the checkbox next to the resource you want to add members to.&lt;br&gt; 4. On the right side panel, click Add member.&lt;br&gt; 5. In the Add members dialog that appears, enter the email addresses of groups or individuals who should have the IAP-secured Web App User role for the project.&lt;/p&gt; 
&lt;p&gt;The following kinds of accounts can be members:&lt;/p&gt; 
&lt;p&gt;- Google Account: user@gmail.com&lt;br&gt; - Google Group: admins@googlegroups.com&lt;br&gt; - Service account: server@example.gserviceaccount.com&lt;br&gt; - Google Workspace domain: example.com&lt;/p&gt; 
&lt;p&gt;Make sure to add a Google Account that you have access to.&lt;/p&gt; 
&lt;p&gt;6. Select Cloud IAP &amp;gt; IAP-secured Web App User from the Roles drop-down list.&lt;br&gt; 7. Click Save.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Identity-Aware Proxy overview" url="https://cloud.google.com/iap/docs/concepts-overview"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that Identity-Aware Proxy (IAP) is enabled.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:08.327">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-IAM06" name="Use Security Key for 2-Step Verification for administrator or co-administrator accounts" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Ensure that the users with administrator and co-administrator accounts activate and configure the second factor authentication provided by Google. With 2-Step Verification, you can log into Google with a security key.&amp;nbsp; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  To activate and configure 2 Factor Authentication, you shall follow the following steps: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Go to the 2-Step Verification page section of &lt;a href="https://myaccount.google.com/signinoptions/two-step-verification"&gt;My Account&lt;/a&gt;.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Click Add security key.&lt;/li&gt; 
  &lt;li&gt;Follow the on-screen instructions.&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Google Cloud: mobile account" url="https://support.google.com/accounts/answer/6103523?co=GENIE.Platform%3DAndroid#phone"/>
            <reference name="Google support: answers" url="https://support.google.com/accounts/answer/6103534"/>
          </references>
          <standards>
            <standard ref="A07:2021-Identification and Authentication Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A2:2017-Broken Authentication" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Go to the 2-Step Verification page section of My Account.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Check that 2-Step Verification authentication is enabled and configured correctly.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:08.694">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-LOAD-BALANCING6" name="Use SSL certificates for Load Balancers" issueId="" issueLink="" platform="" cost="0" risk="64" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Use SSL certificates for Load Balancers&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Transport Layer Security (TLS) is an encryption protocol used in SSL certificates to protect network communications.&lt;/p&gt; 
&lt;p&gt;Google Cloud uses SSL certificates to provide privacy and security from a client to a load balancer. To achieve this, the load balancer must have an SSL certificate and the certificate's corresponding private key. Communication between the client and the load balancer remains private-illegible to any third party that doesn't have this private key.&lt;/p&gt; 
&lt;p&gt;You can obtain your own self-managed certificates or you can use Google-managed certificates, which Google obtains and manages for you.&lt;/p&gt; 
&lt;p&gt;For external HTTP load balancer and SSL proxy load balancer, you can reference either Google-managed, self-managed, or a combination of both types of SSL certificates on one target proxy. The certificates can be referenced in any order. For internal HTTP load balancer, you must use self-managed certificates.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Using self-managed SSL certificates&lt;/p&gt; 
&lt;p&gt;Step 1: Create a private key and certificate&lt;br&gt; If you already have a private key and a certificate from a certificate authority (CA), skip this section and go to Creating an SSL certificate resource.&lt;/p&gt; 
&lt;p&gt;Select or create a private key&lt;/p&gt; 
&lt;p&gt;A Google Cloud SSL certificate includes both a private key and the certificate itself, both in PEM format. Your private key must meet the following criteria:&lt;/p&gt; 
&lt;p&gt;- It must be in PEM format.&lt;br&gt; - It cannot be protected by a passphrase. Google Cloud stores your private key in its own encrypted format.&lt;br&gt; - Its encryption algorithm must be either RSA-2048 or ECDSA P-256.&lt;/p&gt; 
&lt;p&gt;You can create a new private key with RSA-2048 encryption in the PEM format using the following OpenSSL command.&lt;/p&gt; 
&lt;p&gt;openssl genrsa -out PRIVATE_KEY_FILE 2048&lt;/p&gt; 
&lt;p&gt;Replace PRIVATE_KEY_FILE with the path and filename for the new private key file.&lt;/p&gt; 
&lt;p&gt;Create a CSR&lt;/p&gt; 
&lt;p&gt;After you have a private key, you can generate a certificate signing request (CSR) in the PEM format using OpenSSL. Your CSR must meet the following criteria:&lt;/p&gt; 
&lt;p&gt;- It must be in PEM format.&lt;br&gt; - It must have a common name (CN) or a subject alternative name (SAN) attribute. Practically speaking, your certificate should contain both CN and SAN attributes, even if it is for a single domain-modern clients, like the current versions of macOS and iOS don't rely on just the CN attribute.&lt;/p&gt; 
&lt;p&gt;1. Create an OpenSSL configuration file. In the following example, subject alternative names are defined in the [sans_list].&lt;/p&gt; 
&lt;p&gt;cat &amp;lt;&amp;lt;'EOF' &amp;gt;CONFIG_FILE&lt;br&gt; [req]&lt;br&gt; default_bits = 2048&lt;br&gt; req_extensions = extension_requirements&lt;br&gt; distinguished_name = dn_requirements&lt;/p&gt; 
&lt;p&gt;[extension_requirements]&lt;br&gt; basicConstraints = CA:FALSE&lt;br&gt; keyUsage = nonRepudiation, digitalSignature, keyEncipherment&lt;br&gt; subjectAltName = @sans_list&lt;/p&gt; 
&lt;p&gt;[dn_requirements]&lt;br&gt; countryName = Country Name (2 letter code)&lt;br&gt; stateOrProvinceName = State or Province Name (full name)&lt;br&gt; localityName = Locality Name (eg, city)&lt;br&gt; 0.organizationName = Organization Name (eg, company)&lt;br&gt; organizationalUnitName = Organizational Unit Name (eg, section)&lt;br&gt; commonName = Common Name (e.g. server FQDN or YOUR name)&lt;br&gt; emailAddress = Email Address&lt;/p&gt; 
&lt;p&gt;[sans_list]&lt;br&gt; DNS.1 = SUBJECT_ALTERNATIVE_NAME_1&lt;br&gt; DNS.2 = SUBJECT_ALTERNATIVE_NAME_2&lt;/p&gt; 
&lt;p&gt;EOF&lt;/p&gt; 
&lt;p&gt;2. Run the following OpenSSL command to create a certificate signing request (CSR) file. The command is interactive; you are prompted for attributes except for the subject alternative names, which you defined in the [sans_list] of the CONFIG_FILE in the previous step.&lt;/p&gt; 
&lt;p&gt;openssl req -new -key PRIVATE_KEY_FILE \ -out CSR_FILE \ -config CONFIG_FILE&lt;/p&gt; 
&lt;p&gt;For both steps, replace the placeholders with valid values:&lt;/p&gt; 
&lt;p&gt;- CONFIG_FILE: The path, including the file name, for the OpenSSL configuration file. (You can delete the file after you complete this procedure.)&lt;br&gt; - SUBJECT_ALTERNATIVE_NAME_1 and SUBJECT_ALTERNATIVE_NAME_2: Subject Alternative Names for your certificate. If your certificate is only for one host name, you should only define a single subject alternative name that matches the Common Name. If you need more than two subject alternative names, add them to the configuration file, incrementing the number after DNS (DNS.3, DNS.4, etc.).&lt;br&gt; - PRIVATE_KEY_FILE: The path to the private key file&lt;br&gt; - CSR_FILE: The path, including the file name, for the CSR&lt;/p&gt; 
&lt;p&gt;Sign the CSR&lt;/p&gt; 
&lt;p&gt;When a Certificate Authority (CA) signs your CSR, it uses its own private key to create a certificate.&lt;/p&gt; 
&lt;p&gt;Using a publicly-trusted CA&lt;/p&gt; 
&lt;p&gt;- If you request a publicly-trusted CA to sign your CSR, the resulting certificate is trusted by all clients that trust that public CA.&lt;br&gt; - To produce a signed certificate, the public CA only needs your CSR.&lt;/p&gt; 
&lt;p&gt;Managing your own CA&lt;/p&gt; 
&lt;p&gt;- If you manage your own CA, you can use it to sign your CSR. Using your CA to sign your CSR creates an internally-trusted certificate when your clients have also been configured to trust your own CA.&lt;/p&gt; 
&lt;p&gt;Using a self-signed certificate&lt;/p&gt; 
&lt;p&gt;- If you use the same private key that you used to create the CSR to sign the CSR, you create a self-signed certificate. Self-signed certificates are not trusted by any client unless the client is configured to skip certificate validation. For example, a web browser client displays a message asking you if you want to trust a self-signed certificate. You should only use self-signed certificates for testing.&lt;/p&gt; 
&lt;p&gt;If you manage your own CA, or if you want to create a self-signed certificate for testing, you can use the following OpenSSL command:&lt;/p&gt; 
&lt;p&gt;openssl x509 -req \ -signkey PRIVATE_KEY_FILE \ -in CSR_FILE \ -out CERTIFICATE_FILE \ -days TERM&lt;/p&gt; 
&lt;p&gt;Replace the placeholders with valid values:&lt;/p&gt; 
&lt;p&gt;- PRIVATE_KEY_FILE: The path to the private key for your CA; if creating a self-signed certificate for testing, this private key is the same as the one used to create the CSR.&lt;br&gt; - CSR_FILE: The path to the CSR&lt;br&gt; - CERTIFICATE_FILE: The path to the certificate file to create&lt;br&gt; - TERM: The number of days, from now, during which the certificate should be considered valid by clients that verify it&lt;/p&gt; 
&lt;p&gt;Wildcards in common names&lt;/p&gt; 
&lt;p&gt;Your self-managed SSL certificates can use a wildcard in the common name. For example, a certificate with the common name *.example.com. matches the hostnames www.example.com and foo.example.com, but not a.b.example.com or example.com. When the load balancer selects a certificate, it always prefers to match a hostname to certificates without wildcards over certificates with wildcards.&lt;/p&gt; 
&lt;p&gt;Certificates with wildcard fragments, such as f*.example.com, aren't supported.&lt;/p&gt; 
&lt;p&gt;Step 2: Create a self-managed SSL certificate resource&lt;/p&gt; 
&lt;p&gt;Before you can create a Google Cloud SSL certificate resource, you must have a private key and certificate. Refer to Creating a private key and certificate if you have not already created or obtained them.&lt;/p&gt; 
&lt;p&gt;You can work with global SSL certificates on the Certificates tab on the Load Balancing page.&lt;/p&gt; 
&lt;p&gt;1. Go to the Certificates page in the Google Cloud Console.&lt;br&gt; 2. Click Create SSL certificate.&lt;br&gt; 3. Enter a name and an optional description for the certificate.&lt;br&gt; 4. Select Upload my certificate.&lt;br&gt; 5. Paste in your certificate or click Upload to navigate to your certificate file.&lt;br&gt; You can choose to include the CA certificate chain in the same file as the certificate. Google Cloud does not validate the certificate chain for you - validation is your responsibility.&lt;br&gt; 6. Paste in your private key or click Upload to navigate to your private key file.&lt;br&gt; 7. Click Create.&lt;/p&gt; 
&lt;p&gt;Step 3: Associate an SSL certificate with a target proxy&lt;/p&gt; 
&lt;p&gt;You must associate at least one SSL certificate with each target HTTPS or SSL proxy. You can configure the target proxy with up to the maximum number of SSL certificates per target HTTPS or target SSL proxy. You can reference multiple self-managed certificates on the same target proxy.&lt;/p&gt; 
&lt;p&gt;Note: When replacing an existing SSL certificate, first create the replacement SSL certificate and associate it with the load balancer's target proxy before you delete the old SSL certificate.&lt;/p&gt; 
&lt;p&gt;When you use the Google Cloud Console to edit an existing load balancer, you automatically associate the SSL certificate with the appropriate target proxy.&lt;/p&gt; 
&lt;p&gt;Step 4: Update the DNS A and AAAA records to point to the load balancer's IP address&lt;/p&gt; 
&lt;p&gt;At your registrar's site, DNS host, or ISP (wherever your DNS records are managed), add or update the DNS A records (for IPv4) and DNS AAAA records (for IPv6) for your domains and any subdomains so that they point to the IP address associated with the load balancer's forwarding rule or rules.&lt;/p&gt; 
&lt;p&gt;If you are using Cloud DNS and Google Domains, set up your domains and update your name servers.&lt;/p&gt; 
&lt;p&gt;If you are using multiple domains for a single certificate, you must add or update DNS records for all of the domains and any subdomains so that they all point to your load balancer's IP address.&lt;/p&gt; 
&lt;p&gt;Important: Make sure that your domain name resolves directly to the IP address of your external HTTP load balancer. It cannot resolve to any other IP address, even if that other IP address passes, proxies, or caches responses for your load balancer. For example, you cannot use self-managed certificates if your domain name resolves to the external IP address of a third-party CDN provider.&lt;/p&gt; 
&lt;p&gt;After waiting for DNS propagation to complete, you can verify your setup by running the dig command. For example, suppose your domain is www.example.com. Run the following dig command:&lt;/p&gt; 
&lt;p&gt;dig www.example.com&lt;/p&gt; 
&lt;dl&gt; 
 &lt;dt&gt;
   &amp;lt;&amp;lt;&amp;gt;&amp;gt; DiG 9.10.6 &amp;lt;&amp;lt;&amp;gt;&amp;gt; www.example.com 
  &lt;dl&gt; 
   &lt;dt&gt;
     global options: +cmd 
   &lt;/dt&gt; 
   &lt;dt&gt;
     Got answer: 
   &lt;/dt&gt; 
   &lt;dt&gt;
     &amp;gt;&amp;gt;HEADER&amp;lt;&amp;lt; opcode: QUERY, status: NOERROR, id: 31748 
   &lt;/dt&gt; 
   &lt;dt&gt;
     flags: qr rd ra; QUERY: 1, ANSWER: 4, AUTHORITY: 0, ADDITIONAL: 1 
   &lt;/dt&gt; 
  &lt;/dl&gt; 
 &lt;/dt&gt; 
&lt;/dl&gt; 
&lt;p&gt; &lt;/p&gt; 
&lt;dl&gt; 
 &lt;dt&gt;
   OPT PSEUDOSECTION: 
 &lt;/dt&gt; 
&lt;/dl&gt; 
&lt;dl&gt; 
 &lt;dt&gt;
   EDNS: version: 0, flags:; udp: 512 
  &lt;dl&gt; 
   &lt;dt&gt;
     QUESTION SECTION: 
   &lt;/dt&gt; 
  &lt;/dl&gt; 
 &lt;/dt&gt; 
&lt;/dl&gt; ;www.example.com. IN A 
&lt;p&gt;&lt;/p&gt; 
&lt;p&gt; &lt;/p&gt; 
&lt;dl&gt; 
 &lt;dt&gt;
   ANSWER SECTION: 
  &lt;br&gt; www.example.com. 1742 IN CNAME www.example.com.edgekey.net. 
  &lt;br&gt; www.example.com.edgekey.net. 21330 IN CNAME www.example.com.edgekey.net.globalredir.akadns.net. 
  &lt;br&gt; www.example.com.edgekey.net.globalredir.akadns.net. 3356 IN CNAME e6858.dsce9.akamaiedge.net. 
  &lt;br&gt; e6858.dsce9.akamaiedge.net. 19 IN A 203.0.113.5 
 &lt;/dt&gt; 
&lt;/dl&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;p&gt; &lt;/p&gt; 
&lt;dl&gt; 
 &lt;dt&gt;
   Query time: 43 msec 
 &lt;/dt&gt; 
 &lt;dt&gt;
   SERVER: 8.8.8.8#53(8.8.8.8) 
 &lt;/dt&gt; 
 &lt;dt&gt;
   WHEN: Wed Jun 03 16:54:44 PDT 2020 
 &lt;/dt&gt; 
 &lt;dt&gt;
   MSG SIZE rcvd: 193 
 &lt;/dt&gt; 
&lt;/dl&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;p&gt;In this example, 203.0.113.5 is your load balancer's IP address.&lt;/p&gt; 
&lt;p&gt;Using Google-managed SSL certificates&lt;/p&gt; 
&lt;p&gt;Step 1. Create a Google-managed SSL certificate&lt;/p&gt; 
&lt;p&gt;You can create a Google-managed certificate before, during, or after creating your load balancer. During the process of creating a load balancer in the Cloud Console, you can use the Cloud Console to create your certificate. Alternatively, you can create your certificate before or after creating your load balancer. This step shows you how to create a certificate that you can later add to one or more load balancers.&lt;/p&gt; 
&lt;p&gt;If you have already created your Google-managed SSL certificate, you can skip this step.&lt;/p&gt; 
&lt;p&gt;You can work with global SSL certificates on the Certificates tab on the Load Balancing page.&lt;/p&gt; 
&lt;p&gt;1. Go to the Certificates page in the Google Cloud Console.&lt;br&gt; 2. Click Create SSL certificate.&lt;br&gt; 3. Enter a name and an optional description for the certificate.&lt;br&gt; 4. Select Create Google-managed certificate.&lt;br&gt; 5. Add the domains.&lt;br&gt; 6. Click Create.&lt;/p&gt; 
&lt;p&gt;Checking the Google-managed SSL certificate status&lt;/p&gt; 
&lt;p&gt;You can check the status of your global SSL certificates on the Certificates tab on the Load Balancing page.&lt;/p&gt; 
&lt;p&gt;1. Go to the Certificates page in the Google Cloud Console.&lt;br&gt; 2. (Optional) Filter the list of SSL certificates.&lt;br&gt; 3. Check the Status column.&lt;br&gt; 4. To view more details, click the certificate name.&lt;/p&gt; 
&lt;p&gt;At this point, the certificate status and the domain status are PROVISIONING. After you complete the steps on this page, the statuses change to ACTIVE.&lt;/p&gt; 
&lt;p&gt;Step 2: Create or update your load balancer&lt;/p&gt; 
&lt;p&gt;To become ACTIVE, the Google-managed SSL certificate must be associated with a load balancer, specifically the load balancer's target proxy.&lt;/p&gt; 
&lt;p&gt;After you've created your SSL certificate and it's in the PROVISIONING state, you can use it during the creation of your load balancer or you can use it to update an existing load balancer, as described here:&lt;/p&gt; 
&lt;p&gt;When you update an external HTTP load balancer or SSL proxy load balancer using the Google Cloud Console, Google Cloud automatically associates your SSL certificate with the correct target proxy.&lt;/p&gt; 
&lt;p&gt;1. Go to the Load balancing page in the Google Cloud Console.&lt;br&gt; 2. Click the name of your load balancer.&lt;br&gt; 3. Click Edit.&lt;br&gt; 4. Click Frontend configuration.&lt;br&gt; 5. Click the correct front end (must be HTTPS, HTTP/2, SSL).&lt;br&gt; 6. Click Additional certificates, and select your Google-managed certificate from the drop-down list.&lt;br&gt; 7. Click Create.&lt;/p&gt; 
&lt;p&gt;Each target HTTPS proxy or target SSL proxy must reference at least one SSL certificate. A target proxy can reference more than one SSL certificate.&lt;/p&gt; 
&lt;p&gt;Important: For SSL proxy load balancers with Google-managed SSL certificates, the frontend ports must include 443 for the certificates to be provisioned and renewed successfully.&lt;/p&gt; 
&lt;p&gt;Step 3: Verify the target proxy association&lt;/p&gt; 
&lt;p&gt;After you've created or updated your load balancer, you can make sure that the SSL certificate is associated with your load balancer's target proxy by running the following command.&lt;/p&gt; 
&lt;p&gt;For external HTTPS load balancers:&lt;/p&gt; 
&lt;p&gt;gcloud compute target-https-proxies describe target-https-proxy-name \ -global \ -format="get(sslCertificates)"&lt;/p&gt; 
&lt;p&gt;For SSL proxy load balancers:&lt;/p&gt; 
&lt;p&gt;gcloud compute target-ssl-proxies describe target-ssl-proxy-name \ -format="get(sslCertificates)"&lt;/p&gt; 
&lt;p&gt;At this point, your Google-managed certificate status might still be PROVISIONING. Google Cloud is working with the Certificate Authority to issue the certificate. Provisioning a Google-managed certificate might take up to 60 minutes.&lt;/p&gt; 
&lt;p&gt;Step 4: Update the DNS A and AAAA records to point to the load balancer's IP address&lt;/p&gt; 
&lt;p&gt;Your DNS records might be managed at your registrar's site, DNS host, or ISP. Where your DNS records are managed, make sure to add or update the DNS A records (for IPv4) and DNS AAAA records (for IPv6) for your domains and any subdomains.&lt;/p&gt; 
&lt;p&gt;Make sure that the records point to the IP address that is associated with the load balancer's forwarding rule or rules.&lt;/p&gt; 
&lt;p&gt;If you are using Cloud DNS and Google Domains, set up your domains and update your name servers.&lt;/p&gt; 
&lt;p&gt;If you have multiple domains in a Google-managed certificate, add or update DNS records for all of the domains and subdomains. They all must point to your load balancer's IP address.&lt;/p&gt; 
&lt;p&gt;Important: Make sure that your domains are pointed directly at your load balancer's IP address. For external HTTP load balancers that have Cloud CDN enabled, some third-party CDN providers might prevent validation requests from succeeding. This can happen if the CDN provider is actively proxying HTTP traffic.&lt;br&gt; After waiting for DNS propagation to complete, you can verify your setup by running the dig command. For example, suppose your domain is www.example.com. Run the following dig command:&lt;/p&gt; 
&lt;p&gt;dig www.example.com&lt;/p&gt; 
&lt;dl&gt; 
 &lt;dt&gt;
   &amp;lt;&amp;lt;&amp;gt;&amp;gt; DiG 9.10.6 &amp;lt;&amp;lt;&amp;gt;&amp;gt; www.example.com 
  &lt;dl&gt; 
   &lt;dt&gt;
     global options: +cmd 
   &lt;/dt&gt; 
   &lt;dt&gt;
     Got answer: 
   &lt;/dt&gt; 
   &lt;dt&gt;
     &amp;gt;&amp;gt;HEADER&amp;lt;&amp;lt; opcode: QUERY, status: NOERROR, id: 31748 
   &lt;/dt&gt; 
   &lt;dt&gt;
     flags: qr rd ra; QUERY: 1, ANSWER: 4, AUTHORITY: 0, ADDITIONAL: 1 
   &lt;/dt&gt; 
  &lt;/dl&gt; 
 &lt;/dt&gt; 
&lt;/dl&gt; 
&lt;p&gt; &lt;/p&gt; 
&lt;dl&gt; 
 &lt;dt&gt;
   OPT PSEUDOSECTION: 
 &lt;/dt&gt; 
&lt;/dl&gt; 
&lt;dl&gt; 
 &lt;dt&gt;
   EDNS: version: 0, flags:; udp: 512 
  &lt;dl&gt; 
   &lt;dt&gt;
     QUESTION SECTION: 
   &lt;/dt&gt; 
  &lt;/dl&gt; 
 &lt;/dt&gt; 
&lt;/dl&gt; ;www.example.com. IN A 
&lt;p&gt;&lt;/p&gt; 
&lt;p&gt; &lt;/p&gt; 
&lt;dl&gt; 
 &lt;dt&gt;
   ANSWER SECTION: 
  &lt;br&gt; www.example.com. 1742 IN CNAME www.example.com.edgekey.net. 
  &lt;br&gt; www.example.com.edgekey.net. 21330 IN CNAME www.example.com.edgekey.net.globalredir.akadns.net. 
  &lt;br&gt; www.example.com.edgekey.net.globalredir.akadns.net. 3356 IN CNAME e6858.dsce9.akamaiedge.net. 
  &lt;br&gt; e6858.dsce9.akamaiedge.net. 212 IN A 203.0.113.5 
 &lt;/dt&gt; 
&lt;/dl&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;p&gt; &lt;/p&gt; 
&lt;dl&gt; 
 &lt;dt&gt;
   Query time: 43 msec 
 &lt;/dt&gt; 
 &lt;dt&gt;
   SERVER: 8.8.8.8#53(8.8.8.8) 
 &lt;/dt&gt; 
 &lt;dt&gt;
   WHEN: Wed Jun 03 16:54:44 PDT 2020 
 &lt;/dt&gt; 
 &lt;dt&gt;
   MSG SIZE rcvd: 193 
  &lt;br&gt; In this example, 203.0.113.5 is your load balancer's IP address. 
 &lt;/dt&gt; 
&lt;/dl&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;p&gt;Also, rerun the following command:&lt;/p&gt; 
&lt;p&gt;gcloud compute ssl-certificates describe CERTIFICATE_NAME \ -format="get(managed.domainStatus)"&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Using Google-managed SSL certificates" url="https://cloud.google.com/load-balancing/docs/ssl-certificates/google-managed-certs"/>
            <reference name="Using self-managed SSL certificates" url="https://cloud.google.com/load-balancing/docs/ssl-certificates/self-managed-certs"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Test with OpenSSL&lt;/p&gt;

	&lt;p&gt;After the certificate and domain statuses are active, it can take up to 30 minutes for your load balancer to begin using your Google-managed or your self-managed SSL certificate.&lt;/p&gt;

	&lt;p&gt;To test, run the following OpenSSL command, replacing DOMAIN with your DNS name and IP_ADDRESS with the IP address of your load balancer.&lt;/p&gt;

	&lt;p&gt;echo | openssl s_client -showcerts -servername DOMAIN -connect IP_ADDRESS:443 -verify 99 -verify_return_error&lt;/p&gt;

	&lt;p&gt;This command outputs the certificates that the load balancer presents to the client. Along with other detailed information, the output should include the certificate chain and Verify return code: 0 (ok).&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:08.329">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="AUTHENTICATION" name="Authentication" desc="" library="Google Cloud Platform">
          <threats>
            <threat ref="GOOGLE-LOST-ACCESS-ROOT" name="Attackers gain unauthorized access to the root account due to lack of configuration of the account" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Google Cloud Platform" editable="true">
              <desc>&lt;p&gt;Attackers could gain unauthorized access to the administrator account due to lack of configuration of the account and its security mechanisms, such as modifying credentials and adding/removing user accounts.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="GOOGLE-IAM-01">
                  <countermeasures>
                    <countermeasure ref="GOOGLE-IAM06" mitigation="50"/>
                  </countermeasures>
                </weakness>
                <weakness ref="GOOGLE-MON02">
                  <countermeasures>
                    <countermeasure ref="GOOGLE-IAM05" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="GOOGLE-IAM05" mitigation="50"/>
                <countermeasure ref="GOOGLE-IAM06" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="GOOGLE-LOST-ACCESS-USER" name="Attackers gain unauthorized access to the user account due to lack of configuration of the account" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Google Cloud Platform" editable="true">
              <desc>&lt;p&gt;Attackers could gain unauthorized access to the user account due to lack of configuration of the account, for example, the security question to reset the password is configured incorrectly.&lt;/p&gt;</desc>
              <riskRating confidentiality="50" integrity="50" availability="50" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="GOOGLE-IAM03">
                  <countermeasures>
                    <countermeasure ref="GOOGLE-IAM01" mitigation="50"/>
                    <countermeasure ref="GOOGLE-IAP" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="GOOGLE-MON03">
                  <countermeasures>
                    <countermeasure ref="GOOGLE-USER-MFA" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="GOOGLE-IAM01" mitigation="50"/>
                <countermeasure ref="GOOGLE-IAP" mitigation="100"/>
                <countermeasure ref="GOOGLE-USER-MFA" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="AUTHORIZATION" name="Authorization" desc="" library="Google Cloud Platform">
          <threats>
            <threat ref="LOSS-CONTROL_ENV" name="Attackers gain unauthorized access to the control of the environment" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Google Cloud Platform" editable="true">
              <desc>&lt;p&gt;Attackers could potentially gain unauthorized access to the control of the environment, due to user accounts - or role groups - not being well defined and configured. As a consequence attackers may be able to make changes without root approval.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="75" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="GOOGLE-EXPIRATION-DATE">
                  <countermeasures>
                    <countermeasure ref="GOOGLE-IAM08" mitigation="25"/>
                  </countermeasures>
                </weakness>
                <weakness ref="GOOGLE_IAM-02">
                  <countermeasures>
                    <countermeasure ref="GOOGLE-IAM02" mitigation="25"/>
                    <countermeasure ref="GOOGLE-IAM03" mitigation="25"/>
                    <countermeasure ref="GOOGLE-IAM04" mitigation="25"/>
                    <countermeasure ref="GOOGLE-LOAD-BALANCING1" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="GOOGLE-IAM02" mitigation="25"/>
                <countermeasure ref="GOOGLE-IAM03" mitigation="25"/>
                <countermeasure ref="GOOGLE-IAM04" mitigation="25"/>
                <countermeasure ref="GOOGLE-IAM08" mitigation="25"/>
                <countermeasure ref="GOOGLE-LOAD-BALANCING1" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="GENERAL" name="General" desc="" library="Google Cloud Platform">
          <threats>
            <threat ref="CAPEC-130/01" name="Denial of service through resource exhaustion" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Google Cloud Platform" editable="true">
              <desc>&lt;p&gt;An attacker causes the target to allocate excessive resources to servicing the attackers' request, thereby reducing the resources available for legitimate services and degrading or denying services. Usually, this attack focuses on memory allocation, but any finite resource on the target could be the attacked, including bandwidth, processing cycles, or other resources.&amp;nbsp;&lt;/p&gt;&lt;p&gt;This attack does not attempt to force this allocation through a large number of requests (that would be Resource Depletion through Flooding) but instead uses one or a small number of requests that are carefully formatted to force the target to allocate excessive resources to service this request(s). Often this attack takes advantage of a bug in the target to cause the target to allocate resources vastly beyond what would be needed for a normal request.&amp;nbsp;&lt;/p&gt;&lt;p&gt;For example, using an Integer Attack, the attacker could cause a variable that controls allocation for a request to hold an excessively large value. Excessive allocation of resources can render a service degraded or unavailable to legitimate users and can even lead to crashing of the target.&lt;/p&gt;</desc>
              <riskRating confidentiality="50" integrity="50" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-770">
                  <countermeasures>
                    <countermeasure ref="GOOGLE-LOAD-BALANCING2" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="GOOGLE-LOAD-BALANCING2" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="ACCESS-TO-DATA" name="Sensitive data is compromised through unauthorized access to data storage" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Google Cloud Platform" editable="true">
              <desc>&lt;p&gt;A data breach is a security violation in which sensitive, protected or confidential data is copied, transmitted, viewed, stolen or used by an individual unauthorized to do so. Sensitive data could be exposed due to a bad configuration in user permissions.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="GOOGLE-USECURE-CREDENTIALS">
                  <countermeasures>
                    <countermeasure ref="GOOGLE-STO02" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="GOOGLE-STO02" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="LOGGING AND MONITORING" name="Logging and Monitoring" desc="" library="Google Cloud Platform">
          <threats>
            <threat ref="OWASP A10:2017" name="Exploitation of insufficient logging and monitoring" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Google Cloud Platform" editable="true">
              <desc>	&lt;p&gt;Exploitation of insufficient logging and monitoring is the bedrock of nearly every major incident.&lt;br /&gt;
 Attackers rely on the lack of monitoring and timely response to achieve their goals without being detected.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="GOOGLE-LOAD-BALANCING3" mitigation="50"/>
                    <countermeasure ref="GOOGLE-LOAD-BALANCING4" mitigation="50"/>
                    <countermeasure ref="GOOGLE-LOG01" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="GOOGLE-LOAD-BALANCING3" mitigation="50"/>
                <countermeasure ref="GOOGLE-LOAD-BALANCING4" mitigation="50"/>
                <countermeasure ref="GOOGLE-LOG01" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="NETWORKING" name="Networking" desc="" library="Google Cloud Platform">
          <threats>
            <threat ref="GOOGLE-UNAUTHORISED-CONNECTION" name="Attackers gain unauthorized connection to the resources" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Google Cloud Platform" editable="true">
              <desc>&lt;p&gt;Attackers could gain an unauthorized connection to the resources through misconfigured ports or security network configurations.&lt;/p&gt;</desc>
              <riskRating confidentiality="25" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="GOOGLE-NET-01">
                  <countermeasures>
                    <countermeasure ref="GOOGLE-LOAD-BALANCING5" mitigation="50"/>
                    <countermeasure ref="GOOGLE-VM04" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="GOOGLE-LOAD-BALANCING5" mitigation="50"/>
                <countermeasure ref="GOOGLE-VM04" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="DATA-EXPOSED-CHANNEL" name="The data is exposed through the transmission channel" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Google Cloud Platform" editable="true">
              <desc>&lt;p&gt;Attackers can obtain the data through the transmitted channel because this does not have the security measures in place to protect the data&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="DATA-TRANSMIT-CLEAR">
                  <countermeasures>
                    <countermeasure ref="GOOGLE-LOAD-BALANCING6" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="GOOGLE-LOAD-BALANCING6" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="52d80adf-4056-44ce-a3df-5beac3cafb5c" diagramComponentId="69535c82-b439-40cc-904c-cd963b6f3f9a" ref="84b06c40-3d15-4b8d-a60e-0f382035ec3e" name="Orchestration Workflows (Empty)" desc="" library="CS-Default" parentComponentRef="ae917821-12a8-4b3a-a19f-649aaae3b64b" componentDefinitionRef="empty-component">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses/>
      <countermeasures/>
      <usecases/>
    </component>
    <component uuid="b71526fe-dbce-4759-81b6-e5b45b3eddbf" diagramComponentId="f1bd1776-20f7-4b59-8bec-485560d6b101" ref="9ac45156-3c83-4076-89db-1cec9383ddd3" name="GCP MySQL" desc="" library="Google Cloud Platform" parentComponentRef="0be7889d-456d-4e5d-91c3-46f69ec973f8" componentDefinitionRef="google-mysql">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses>
        <weakness ref="GOOGLE-USECURE-CREDENTIALS" name="Credentials are not securely stored" state="0" impact="100" issueId="" issueLink="">
          <desc>The credentials that are used to access the resources are not securely stored and can be
                        accessed by unauthorized personnel.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:06.234">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="DATA-TRANSMIT-CLEAR" name="Data is transmitted in clear text" state="0" impact="100" issueId="" issueLink="">
          <desc>Data is not protected when transmitted to applications or customers and it can be read or modified by unauthorized actors.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:06.572">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="GOOGLE-MON02" name="Excessive use of administrator accounts" state="0" impact="100" issueId="" issueLink="">
          <desc>The administrator accounts are used for all actions, not only for the administrative ones. This is because these users do not have a personal or user account to perform their daily actions.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:06.234">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CWE-778" name="Insufficient Logging" state="0" impact="100" issueId="" issueLink="">
          <desc>When a critical security event occurs, the software either does not record the event or omits important details about the event when logging it. When critical security events are not logged properly, such as in the case of a failed login attempt, this can make malicious behavior more difficult to detect and may hinder forensic analyses after a successful attack.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:06.235">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="GOOGLE-MON03" name="Lack of 2FA" state="0" impact="100" issueId="" issueLink="">
          <desc>Login to the console without using Multi-factor Authentication (MFA) is considered as suspicious activity. Therefore connection without MFA must be audited and monitored and the corresponding security group must be informed and must validate this connection.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:06.234">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="GOOGLE-IAM03" name="Misconfigured User Account" state="0" impact="100" issueId="" issueLink="">
          <desc>Key security settings such as resetting the password, and other password controls are not
                        configured.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:06.235">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="GOOGLE-IAM-01" name="Misconfigured authentication method for administrator accounts" state="0" impact="100" issueId="" issueLink="">
          <desc>The authentication method "Multi-factor Authentication" for the Administrator accounts is not
                        configured.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:06.235">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="GOOGLE_IAM-02" name="Misconfigured credentials for groups and roles" state="0" impact="100" issueId="" issueLink="">
          <desc>The credentials for the groups and roles are incorrectly configured and there are user accounts with more privileges than necessary.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:06.234">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="GOOGLE-EXPIRATION-DATE" name="Misconfigured security key expirations" state="0" impact="100" issueId="" issueLink="">
          <desc>The password and security key expiration is not configured and users are not obliged to change
                        their security credentials. Not frequently changing passwords, gives attackers the chance to
                        obtain credentials and gain access to the systems.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:06.235">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="GOOGLE-ACCESSIBLE-SENSITIVE-DATA" name="Sensitive data is accessible" state="0" impact="100" issueId="" issueLink="">
          <desc>Sensitive data is not encrypted and is exposed.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:06.572">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="GOOGLE-NOT-PATCHED" name="The instances are not patched" state="0" impact="100" issueId="" issueLink="">
          <desc>The instances are not patched with the last updates for the correspondent Operative System (OS), and the instances have got weaknesses which are solved in the last updates.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:06.572">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="GOOGLE-BACKUP" name="There is no recover or backup mechanism" state="0" impact="100" issueId="" issueLink="">
          <desc>There are no processes or mechanisms to regularly save the data to another place in order to
                        have an older version of the data to restore in case of loss. Consequently the data cannot be
                        easily recovered or they cannot be recovered at all.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:06.572">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="GOOGLE-NET-01" name="Unauthorized connection attempts on open ports" state="0" impact="100" issueId="" issueLink="">
          <desc>Receiving unauthorized connections to open ports is most likely an attack. To avoid this, access to the network must be as restricted as possible, so that only the necessary ports are open and the minimum inbound traffic is accepted.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:06.572">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="GOOGLE-MON01" name="Undetected changes in the security configurations" state="0" impact="100" issueId="" issueLink="">
          <desc>Monitoring and alerting for security configurations are not configured and changes cannot be detected.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:06.571">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="GOOGLE-IAM03" name="Apply RBAC with pre-defined policies added into groups and roles" issueId="" issueLink="" platform="" cost="0" risk="64" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Define and create groups that relate to job functions (administrators, developers, accounting,
                        etc.) and assign the relevant permissions for each group, and then assign IAM users to those
                        groups. All the users in an IAM group inherit the permissions assigned to the group. That way,
                        you can make changes for everyone in a group in just one place. As people move around in your
                        company, you can simply change what IAM group their IAM user belongs to. This method is known as
                        Role Based Access Control (RBAC).&amp;nbsp;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        To add a team member and grant an IAM role to the member:
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Open the IAM page in the Cloud Platform Console and open the IAM page.&lt;/li&gt;
                        &lt;li&gt;Click Select a project.&lt;/li&gt;
                        &lt;li&gt;Select a project and click Open.&lt;/li&gt;
                        &lt;li&gt;Click Add to add new members to the project and set their permissions. In the Select a
                        role drop-down menu, click on a service name to find the roles that belong to that service.&amp;nbsp;&lt;/li&gt;
                        &lt;/ol&gt;To grant more than one role to the same project member:
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Open the IAM page in the Cloud Platform Console and open the IAM page.&lt;/li&gt;
                        &lt;li&gt;Click Select a project.&lt;/li&gt;
                        &lt;li&gt;Select a project and click Open.&lt;/li&gt;
                        &lt;li&gt;Enter the email address of the member and select all the roles that you want to grant
                        to the member. Click Add.&amp;nbsp;&lt;/li&gt;
                        &lt;/ol&gt;To grant a role to a member for more than one project:
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Open the IAM and Admin Projects page in the Cloud Platform Console and open the IAM
                        &amp;amp; ADMIN PROJECTS page.&lt;/li&gt;
                        &lt;li&gt;Select all the projects for which you want to grant permissions.&lt;/li&gt;
                        &lt;li&gt;In the IAM tab on the right pane, add the new member and select a role to grant the
                        role for all selected projects.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Granting, changing, and revoking access to resources" url="https://cloud.google.com/iam/docs/granting-changing-revoking-access"/>
          </references>
          <standards>
            <standard ref="A01:2021-Broken Access Control" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A5:2017-Broken Access Control" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Open the IAM page in the Cloud Platform Console and open the IAM page.&lt;/li&gt;
                            &lt;li&gt;Click Select a project and click Open.&lt;/li&gt;
                            &lt;li&gt;List all members from the project.&lt;/li&gt;
                            &lt;li&gt;Check that each member has been assigned to the correct roles.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:06.132">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-IAM08" name="Automatically rotate Google Service account keys" issueId="" issueLink="" platform="" cost="0" risk="64" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>The Google Service Keys shall be rotated to avoid unauthorized access.
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        To enable automatic rotation of a key, set the rotation schedule with the following gcloud
                        command-line syntax:&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        gcloud kms keys update KEY_NAME \&amp;nbsp;
                        &lt;/div&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        --location LOCATION \&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        --keyring KEYRING_NAME \&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        --rotation-period ROTATION_PERIOD \&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        --next-rotation-time NEXT_ROTATION_TIME&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;For example:&amp;nbsp;
                        &lt;div&gt;
                        gcloud kms keys update KEY_NAME&amp;nbsp;
                        &lt;/div&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        --rotation-period=30d&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        --next-rotation-time=2016-10-12T12:34:56.1234Z
                        &lt;/div&gt;
                        &lt;/blockquote&gt;</desc>
          <implementations/>
          <references>
            <reference name="Google Cloud docs: KMS rotation schedule" url="https://cloud.google.com/kms/docs/rotating-keys#kms-set-rotation-schedule-cli"/>
          </references>
          <standards>
            <standard ref="A05:2021-Security Misconfiguration" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A6:2017-Security Misconfiguration" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check automatic rotation of keys is enabled.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:06.132">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-MYSQL9" name="Configure Cloud SQL MySQL instance settings" issueId="" issueLink="" platform="" cost="0" risk="64" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;ul&gt;&lt;li&gt;Ensure that a MySQL database instance does not allow anyone to connect with administrative privileges&lt;/li&gt;&lt;li&gt;Ensure 'skip_show_database' database flag for Cloud SQL Mysql instance is set to 'on'&lt;/li&gt;&lt;li&gt;Ensure that the 'local_infile' database flag for a Cloud SQL Mysql instance is set to 'off'&lt;/li&gt;&lt;/ul&gt;&lt;blockquote&gt;&lt;p&gt;gcloud sql users set-password [USER_NAME] [HOST] --instance=[INSTANCE_NAME] --password=[PASSWORD]&lt;/p&gt;&lt;p&gt;gcloud sql instances patch INSTANCE_NAME --database-flags &lt;strong&gt;local_infile=off&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;gcloud sql instances patch INSTANCE_NAME --database-flags &lt;strong&gt;skip_show_database=on&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Note : This command will overwrite all database flags previously set. To keep those and add new ones, include the values for all flags you want set on the instance; any flag not specifically included is set to its default value. For flags that do not take a value, specify the flag name followed by an equals sign ("=").&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="CIS Google Cloud Platform Benchmark" url="https://www.cisecurity.org/benchmark/google_cloud_computing_platform/"/>
          </references>
          <standards>
            <standard ref="6.1.1" supportedStandardRef="cis-gcp-standard"/>
            <standard ref="6.1.1" supportedStandardRef="cis-gcp-standard-level-2"/>
            <standard ref="6.1.2" supportedStandardRef="cis-gcp-standard"/>
            <standard ref="6.1.2" supportedStandardRef="cis-gcp-standard-level-2"/>
            <standard ref="6.1.3" supportedStandardRef="cis-gcp-standard"/>
            <standard ref="6.1.3" supportedStandardRef="cis-gcp-standard-level-2"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Check that the flags are set correctly. For example:&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;gcloud sql instances describe INSTANCE_NAME --format=json | jq '.settings.databaseFlags[] | select(.name=="skip_show_database")|.value'&lt;/p&gt;&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:06.489">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-MYSQL7" name="Configure connection organization policies on Cloud SQL instances" issueId="" issueLink="" platform="" cost="0" risk="61" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Configure connection organization policies on Cloud SQL instances&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Connection organization policies provide centralized control of the public IP settings for Cloud SQL, to reduce the security attack surface of Cloud SQL instances from the Internet. An organization policy administrator can use a connection policy to restrict public IP configurations of Cloud SQL at the project, folder, or organization level.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; How to add connection organization policies on Cloud SQL instances&lt;/p&gt; 
&lt;p&gt;Before you begin&lt;/p&gt; 
&lt;p&gt;1. In the Google Cloud Console, on the project selector page, select or create a Google Cloud project.&lt;br&gt; Note: If you don't plan to keep the resources that you create in this procedure, create a project instead of selecting an existing project. After you finish these steps, you can delete the project, removing all resources associated with the project.&lt;br&gt; 2. Make sure that billing is enabled for your Cloud project. Learn how to confirm that billing is enabled for your project.&lt;br&gt; 3. Install and initialize the Cloud SDK.&lt;br&gt; 4. Add the Organization Policy Administrator role (roles/ orgpolicy.policyAdmin) to your user or service account from the IAM &amp;amp; Admin page.&lt;br&gt; 5. See Restrictions before performing this procedure.&lt;/p&gt; 
&lt;p&gt;Configuring the organization policy&lt;/p&gt; 
&lt;p&gt;To configure the organization policy:&lt;/p&gt; 
&lt;p&gt;1. Go to the Organization policies page.&lt;br&gt; 2. Click projects dropdown menu in the top tab, and then select the project, folder, or organization that requires the organization policy. The Organization policies page displays a list of organization policy constraints that are available.&lt;br&gt; 3. Filter for the constraint name or display_name.&lt;br&gt; Connection policy constraints:&lt;br&gt; - To disable access to or from the Internet:&lt;/p&gt; 
&lt;p&gt;name: "constraints/sql.restrictPublicIp"&lt;br&gt; display_name: "Restrict Public IP access on Cloud SQL instances"&lt;/p&gt; 
&lt;p&gt;- To disable access from the internet when IAM authentication is missing (this does not affect access using Private IP):&lt;/p&gt; 
&lt;p&gt;name: "constraints/sql.restrictAuthorizedNetworks"&lt;br&gt; display_name: "Restrict Authorized Networks on Cloud SQL instances"&lt;/p&gt; 
&lt;p&gt;4. Select the policy Name from the list.&lt;br&gt; 5. Click Edit.&lt;br&gt; 6. Select Customize.&lt;br&gt; 7. Change Enforcement to On.&lt;br&gt; 8. Click Save. A message displays that says the constraint is updated.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Configuring connection organization policies" url="https://cloud.google.com/sql/docs/mysql/org-policy/configure-org-policy"/>
            <reference name="Connection organization policies" url="https://cloud.google.com/sql/docs/mysql/org-policy/org-policy"/>
          </references>
          <standards>
            <standard ref="6.5" supportedStandardRef="cis-gcp-standard"/>
            <standard ref="6.5" supportedStandardRef="cis-gcp-standard-level-2"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that connection organization policies are configured for your Cloud SQL instances.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:06.489">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-MYSQL6" name="Configure private services access for Cloud SQL instances" issueId="" issueLink="" platform="" cost="0" risk="61" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Configure private services access for Cloud SQL instances&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Google Cloud and third parties (together known as service producers) can offer services with internal IP addresses that are hosted in a VPC network. Private services access enables you to reach those internal IP addresses. This is useful if you want your VM instances in your VPC network to use internal IP addresses instead of external IP addresses. Cloud SQL uses internal IP addresses for private IP.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; If you are using private IP for any of your Cloud SQL instances, you only need to configure private services access one time for every Google Cloud project that has or needs to connect to a Cloud SQL instance.&lt;/p&gt; 
&lt;p&gt;If your Google Cloud project has a Cloud SQL instance, you can either configure it yourself or let Cloud SQL do it for you to use private IP.&lt;/p&gt; 
&lt;p&gt;Cloud SQL configures private services access for you when all the conditions below are true:&lt;/p&gt; 
&lt;p&gt;- You have not yet configured private services access in the Google Cloud project.&lt;br&gt; - You are enabling private IP for the first time for any Cloud SQL instance in the Google Cloud project.&lt;br&gt; - When enabling private IP in the instance's Connections page, you select both the default associated networking and Use an automatically allocated IP range options.&lt;/p&gt; 
&lt;p&gt;You can see the results in the VPC networks page by selecting the default VPC network, and then selecting the Private service connection link.&lt;/p&gt; 
&lt;p&gt;Otherwise, you need to configure private services access manually, as described in the sections below.&lt;/p&gt; 
&lt;p&gt;Configuring private services access for Cloud SQL&lt;/p&gt; 
&lt;p&gt;You can configure private services access in the default or your own VPC network. This is recommended if:&lt;/p&gt; 
&lt;p&gt;- You want to control the size of the IP address range that is allocated. For example, if you anticipate creating many Cloud SQL instances, you might choose in advance to allocate an IP range that can hold them all. If instances are going to be created in multiple regions or different database types, a /20 or larger range is recommended.&lt;/p&gt; 
&lt;p&gt;- You want to set up private services access from the command line (using gcloud).&lt;/p&gt; 
&lt;p&gt;- You are using Shared VPC and your organization has a network administrator (IAM roles/compute.networkAdmin) in the host project. The network administrator can perform the steps below in the host project to configure private services access. Users who were delegated privileges in the service project(s) can launch Cloud SQL instances by following the instructions in the earlier sections.&lt;/p&gt; 
&lt;p&gt;Private services access is implemented as a VPC peering connection between your VPC network and the underlying Google services VPC network where your Cloud SQL instance resides. Even though multiple ip ranges can be allocated, the IP range used for the private IP will always be done by Google.&lt;/p&gt; 
&lt;p&gt;Important: When you create a private connection between your VPC network and the Cloud SQL service, it becomes available for use by any Google service that supports private services access. If you later delete the private connection, you remove private connectivity to your Cloud SQL instances and any other service that is using that connection. Removing the private connection does not delete or deprovision any resources.&lt;/p&gt; 
&lt;p&gt;There are two parts to the private services access configuration process:&lt;br&gt; - Allocating an IP address range.&lt;br&gt; - Creating a private connection from your VPC network to the service producer network.&lt;/p&gt; 
&lt;p&gt;Allocating an IP address range&lt;/p&gt; 
&lt;p&gt;1. Go to the VPC networks page in the Google Cloud Console.&lt;br&gt; 2. Select the VPC network that you want to use.&lt;br&gt; 3. Select the Private service connection tab.&lt;br&gt; 4. Select the Allocated IP ranges for services tab.&lt;br&gt; 5. Click Allocate IP range.&lt;br&gt; 6. For the Name of the allocated range, specify google-managed-services-VPC_NETWORK_NAME, where VPC_NETWORK_NAME is the name of the VPC network you are connecting (for example, google-managed-services-default). The Description is optional.&lt;br&gt; 7. Select the Custom option, then enter the IP address range to allocate, in CIDR notation.&lt;br&gt; 8. Click Allocate to create the allocated range.&lt;/p&gt; 
&lt;p&gt;Creating a private connection&lt;/p&gt; 
&lt;p&gt;1. Go to the VPC networks page in the Google Cloud Console.&lt;br&gt; 2. Select the VPC network that you want to use.&lt;br&gt; 3. Select the Private service connection tab.&lt;br&gt; 4. Select the Private connections to services tab.&lt;br&gt; 5. Click Create connection to create a private connection between your network and a service producer.&lt;br&gt; 6. For the Assigned allocation, select one or more existing allocated ranges that are not being used by other service producers.&lt;br&gt; 7. Click Connect to create the connection.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Configuring private services access" url="https://cloud.google.com/sql/docs/mysql/configure-private-services-access"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that private services access for Cloud SQL instances is configured either automatically or manually.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:06.489">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-MYSQL1" name="Control access to Cloud SQL for MySQL using IAM access control" issueId="" issueLink="" platform="" cost="0" risk="64" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Control access to Cloud SQL for MySQL using IAM access control&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Configuring access control involves controlling who or what can access the instance. Access control occurs on two levels:&lt;/p&gt; 
&lt;p&gt;- Instance-level access&lt;br&gt; Instance-level access authorizes access to your Cloud SQL instance from an application or client (running on App Engine or externally) or from another Google Cloud service, such as Compute Engine.&lt;br&gt; - Database access&lt;br&gt; Database access uses the MySQL Access Privilege System to control which MySQL users have access to the data in your instance.&lt;/p&gt; 
&lt;p&gt;Google Cloud offers Identity and Access Management (IAM), which lets you give more granular access to specific Google Cloud resources and prevents unwanted access to other resources. &lt;br&gt; Cloud SQL provides a set of predefined roles designed to help you control access to your Cloud SQL resources. You can also create your own custom roles, if the predefined roles do not provide the sets of permissions you need. In addition, the legacy basic roles (Editor, Viewer, and Owner) are also still available to you, although they do not provide the same fine-grained control as the Cloud SQL roles. In particular, the basic roles provide access to resources across Google Cloud, rather than just for Cloud SQL.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Predefined roles&lt;/p&gt; 
&lt;p&gt;Cloud SQL provides some predefined roles you can use to provide finer-grained permissions to project members. The role you grant to a project member controls what actions the member can take. Project members can be individuals, groups, or service accounts.&lt;/p&gt; 
&lt;p&gt;You can grant multiple roles to the same project member, and you can change the roles granted to a project member at any time, provided you have the permissions to do so.&lt;/p&gt; 
&lt;p&gt;The broader roles include the more narrowly defined roles. For example, the Cloud SQL Editor role includes all of the permissions of the Cloud SQL Viewer role, along with the addition permissions of the Cloud SQL Editor role. Likewise, the Cloud SQL Admin role includes all of the permissions of the Cloud SQL Editor role, along with its additional permissions.&lt;/p&gt; 
&lt;p&gt;The basic roles (Owner, Editor, Viewer) provide permissions across Google Cloud. The roles specific to Cloud SQL provide only Cloud SQL permissions, except for the following Google Cloud permissions, which are needed for general Google Cloud usage:&lt;/p&gt; 
&lt;p&gt;- resourcemanager.projects.get&lt;br&gt; - resourcemanager.projects.list&lt;br&gt; - serviceusage.quotas.get&lt;br&gt; - serviceusage.services.get&lt;br&gt; - serviceusage.services.use&lt;/p&gt; 
&lt;p&gt;To see the full list of predefined roles and their Cloud SQL permissions please see Reference URL.&lt;/p&gt; 
&lt;p&gt;Custom roles&lt;/p&gt; 
&lt;p&gt;If the predefined roles do not address your unique business requirements, you can define your own custom roles with permissions that you specify. To support this, IAM offers custom roles.&lt;/p&gt; 
&lt;p&gt;When you create custom roles for Cloud SQL, make sure that if you include either cloudsql.instances.list or cloudsql.instances.get, that you include them both. Otherwise, the Cloud Console will not function correctly for Cloud SQL.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Instance access control" url="https://cloud.google.com/sql/docs/mysql/instance-access-control"/>
            <reference name="Project access control" url="https://cloud.google.com/sql/docs/mysql/project-access-control"/>
          </references>
          <standards>
            <standard ref="A01:2021-Broken Access Control" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A5:2017-Broken Access Control" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Testing permissions&lt;/p&gt;

	&lt;p&gt;Most Google Cloud resources expose the testIamPermissions() method, which allows you to programmatically check whether the currently authenticated caller has been granted one or more specific IAM permissions on the resource. The testIamPermissions() method takes a resource identifier and a set of permissions as input parameters, and returns the set of permissions that the caller is allowed.&lt;/p&gt;

	&lt;p&gt;You can use the testIamPermissions() method to determine whether a user should have access to an administrative tool in a web application. For example, you can use this method to decide, based on the user's permissions, whether to display detailed information about a Google Cloud resource.&lt;/p&gt;

	&lt;p&gt;Note: If you need to test a permission so that you can troubleshoot access to a resource, use the Policy Troubleshooter instead.&lt;/p&gt;

	&lt;p&gt;For example, to determine if the currently authenticated user has the permission to delete a project, call the projects.testIamPermissions() method by providing the project ID (such as foo-project) and the resourcemanager.projects.delete permission as input parameters. If the caller has been granted the resourcemanager.projects.delete permission, it will be listed in the response body. If the caller does not have this permission, the response body will list no permissions.&lt;/p&gt;

	&lt;p&gt;The testIamPermissions() method is intended for third-party graphical user interfaces (GUIs) that need to display Google Cloud resources based on what the authenticated user has permissions to see. For example, the Cloud Console internally uses the testIamPermissions() method to determine what resources and functionality are visible to you after authenticating. Different users are typically granted different permissions, and the Cloud Console hides or exposes items accordingly.&lt;/p&gt;

	&lt;p&gt;How to test permissions&lt;/p&gt;

	&lt;p&gt;This example shows how to test the resourcemanager.projects.get and resourcemanager.projects.delete permissions for a Google Cloud project. To test permissions for other Google Cloud resources, use the testIamPermissions() method exposed by each resource. For example, you can test the IAM permissions for a Cloud Storage bucket.&lt;/p&gt;

	&lt;p&gt;In this example, the user has an IAM role that allows them to get information about a project, but not to delete projects.&lt;/p&gt;

	&lt;p&gt;The Resource Manager API's projects.testIamPermissions method accepts a list of permissions and tests which of the permissions a member has.&lt;/p&gt;

	&lt;p&gt;Before using any of the request data below, make the following replacements:&lt;/p&gt;

	&lt;p&gt;project-id: Your Google Cloud project ID.&lt;br /&gt;
HTTP method and URL:&lt;/p&gt;

	&lt;p&gt;POST https://cloudresourcemanager.googleapis.com/v1/projects/project-id:testIamPermissions&lt;/p&gt;

	&lt;p&gt;Request JSON body:&lt;/p&gt;

	&lt;p&gt;{
  ""permissions"":  [
    ""resourcemanager.projects.get"",
    ""resourcemanager.projects.delete""
  ]&lt;br /&gt;
}&lt;/p&gt;

	&lt;p&gt;Note: Ensure you have set the GOOGLE_APPLICATION_CREDENTIALS environment variable to your service account private key file path.&lt;br /&gt;
Save the request body in a file called request.json, and execute the following command:&lt;/p&gt;

	&lt;p&gt;curl -X POST \&lt;br /&gt;
-H ""Authorization: Bearer ""$(gcloud auth application-default print-access-token) \&lt;br /&gt;
-H ""Content-Type: application/json; charset=utf-8"" \&lt;br /&gt;
-d @request.json \&lt;br /&gt;
https://cloudresourcemanager.googleapis.com/v1/projects/project-id:testIamPermissions&lt;/p&gt;

	&lt;p&gt;You should receive a JSON response similar to the following:&lt;/p&gt;

	&lt;p&gt;{
  ""permissions"": [
    ""resourcemanager.projects.get""
  ]&lt;br /&gt;
}&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:06.487">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-MYSQL4" name="Create cross-region read replicas for Cloud SQL instances" issueId="" issueLink="" platform="" cost="1" risk="59" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Create cross-region read replicas for Cloud SQL instances&lt;/p&gt;

	&lt;p&gt;Rationale:&lt;br /&gt;
Cross-region replication lets you create a read replica in a different region from the primary instance. You create a cross-region read replica the same way as you create an in-region replica.&lt;br /&gt;
The general idea is to create a replica in another region, wait until replication catches up, promote it, and then direct clients to the newly promoted instance.&lt;/p&gt;

	&lt;p&gt;Cross-region replicas:&lt;br /&gt;
- Improve read performance by making replicas available closer to your application's region.&lt;br /&gt;
- Provide additional disaster recovery capability to guard against a regional failure.&lt;br /&gt;
- Let you migrate data from one region to another with minimum downtime.&lt;/p&gt;

	&lt;p&gt;Remediation:&lt;br /&gt;
Creating a read replica&lt;/p&gt;

	&lt;p&gt;The steps for creating a read replica are below.&lt;/p&gt;

	&lt;p&gt;1. Go to the Cloud SQL Instances page in the Google Cloud Console.&lt;br /&gt;
2. Find the instance you want to create a replica for, and open its more actions menu at the far right of the listing.&lt;br /&gt;
3. Select Create read replica.&lt;br /&gt;
If you do not see that choice, the instance is a replica; you cannot create a replica of a replica.&lt;br /&gt;
4. If the instance had backups and binary logging enabled, continue with Step 6. Otherwise, select Automate backups and Enable binary logging, click Continue, and then click Save and restart to restart the instance.&lt;br /&gt;
Enabling binary logging causes the instance to be restarted.&lt;br /&gt;
5. In the Create read replica page, update the instance ID, if needed, and any other configuration options required, including name, region, and zone.&lt;br /&gt;
6. Click Create.&lt;br /&gt;
Cloud SQL creates a backup, if needed, and creates the replica. You are returned to the instance page for the primary.&lt;/p&gt;


	&lt;p&gt;Promoting a replica&lt;/p&gt;

	&lt;p&gt;To promote a replica to a standalone instance:&lt;/p&gt;

	&lt;p&gt;1. Go to the Cloud SQL Instances page in the Google Cloud Console.&lt;br /&gt;
2. Select a replica instance by clicking its name.&lt;br /&gt;
3. Click Promote replica in the button bar.&lt;br /&gt;
4. Click OK.&lt;/p&gt;

	&lt;p&gt;Impact:&lt;br /&gt;
None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Creating read replicas" url="https://cloud.google.com/sql/docs/mysql/replication/create-replica"/>
            <reference name="Promoting replicas for regional migration or disaster recovery" url="https://cloud.google.com/sql/docs/mysql/replication/cross-region-replicas"/>
            <reference name="Replication in Cloud SQL" url="https://cloud.google.com/sql/docs/mysql/replication"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Confirm that the promoted instance is configured correctly. In particular, enable automated backups and consider configuring the instance for high availability.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:06.488">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-IAM05" name="Create Individual Accounts for the administrator users" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Create individual accounts for administrator users and with these new accounts perform the necessary administrative actions. By creating service accounts for people accessing your account, you can give each Google user a unique set of security credentials and roles.&amp;nbsp; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The administrator accounts shall be used for administrative actions and for giving or revoking credentials to users' accounts. The administrator account shall be not used as a normal user account. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Open the Service Accounts page in the Cloud Platform Console and open the IAM page.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Click Select a project.&lt;/li&gt; 
  &lt;li&gt;Select your project and click Open.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Click Create Service Account.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Enter a service account name, select a role you wish to grant to the service account and click Create.&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Google Cloud docs: manage service accounts" url="https://cloud.google.com/iam/docs/creating-managing-service-accounts"/>
          </references>
          <standards>
            <standard ref="A07:2021-Identification and Authentication Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A2:2017-Broken Authentication" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Open the Service Accounts page in the Cloud Platform Console and open the IAM
                            page.&lt;/li&gt;
                            &lt;li&gt;Click Select a project.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Select your project and click Open.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Review that each administrator user has an individual Google Service Account.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:06.132">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-IAM04" name="Create mechanisms to ensure Least Privilege is applied" issueId="" issueLink="" platform="" cost="0" risk="64" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Create mechanisms to periodically review the group and user permissions to ensure the least
                        privilege for the user accounts. Granting least privilege ensures that users only have the
                        permissions required to complete their tasks rather than additional privileges that are not
                        required. Following this model ensures that, should an account be compromised, the blast radius
                        of damage is limited.&amp;nbsp;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        Allocate privileges via groups or roles via the recommendation in &amp;quot;Use RBAC with
                        pre-defined policies added into groups or roles&amp;quot;.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Open the IAM page in the Google Cloud Platform Console and open the IAM page.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Click Select a project.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Select a project and click Open.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Review the groups and users with access to the project and their permissions.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;If there is a user with more privileges, revoke the access as following:&lt;/li&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Select the user to revoke privileges.&lt;/li&gt;
                        &lt;li&gt;In the Roles(s) drop-down menu in the member's row, uncheck the roles you want to
                        revoke and click Save.&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Granting, changing, and revoking access to resources" url="https://cloud.google.com/iam/docs/granting-changing-revoking-access"/>
          </references>
          <standards>
            <standard ref="A01:2021-Broken Access Control" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A5:2017-Broken Access Control" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check there is a mechanism in place to ensure the enforcement of the Least Privilege
                            principle.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:06.132">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-IAM02" name="Define roles for the Google Service Accounts" issueId="" issueLink="" platform="" cost="0" risk="64" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Define and create the roles for the Google Cloud. For each role, you can use one of the
                        predefined roles or create a new custom role to ensure that each role has got the least minimum
                        permissions.&amp;nbsp;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;List all predefined roles and review them.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;If it's necessary, create new custom roles to ensure users have the least privileges.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="A01:2021-Broken Access Control" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A5:2017-Broken Access Control" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;List all roles.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Check that all fulfill the least privilege principle.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Check that all roles are defined correctly.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:06.132">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-MYSQL2" name="Disable local_infile database flag for MySQL" issueId="" issueLink="" platform="" cost="0" risk="64" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Disable local_infile database flag for MySQL&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; The local_infile flag controls the server-side LOCAL capability for LOAD DATA statements. Depending on the local_infile setting, the server refuses or permits local data loading by clients that have LOCAL enabled on the client side.&lt;br&gt; To explicitly cause the server to refuse LOAD DATA LOCAL statements (regardless of how client programs and libraries are configured at build time or runtime), start mysqld with local_infile disabled. local_infile can also be set at runtime.&lt;br&gt; Due to security issues associated with the local_infile flag, it is recommended to disable it.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; How to set local_infile flag to off&lt;/p&gt; 
&lt;p&gt;From Console:&lt;br&gt; 1. Go to the Cloud SQL Instances page in the Google Cloud Console.&lt;br&gt; 2. Select the MySQL instance where the database flag needs to be enabled.&lt;br&gt; 3. Click Edit.&lt;br&gt; 4. Scroll down to the Flags section.&lt;br&gt; 5. To set a flag that has not been set on the instance before, click Add item, choose the flag local_infile from the drop-down menu, and set its value to off.&lt;br&gt; 6. Click Save.&lt;br&gt; 7. Confirm the changes under Flags on the Overview page.&lt;/p&gt; 
&lt;p&gt;From Command Line:&lt;br&gt; 1. List all Cloud SQL database instances using the following command: gcloud sql instances list&lt;br&gt; 2. Configure the local_infile database flag for every Cloud SQL MySQL database instance using the below command:&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;gcloud sql instances patch INSTANCE_NAME -database-flags local_infile=off&lt;/p&gt; 
&lt;p&gt;Note : This command will overwrite all database flags that were previously set. To keep those and add new ones, include the values for all flags to be set on the instance; any flag not specifically included is set to its default value. For flags that do not take a value, specify the flag name followed by an equals sign ("=").&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; Disabling local_infile makes the server refuse local data loading by clients that have LOCAL enabled on the client side.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Configuring database flags" url="https://cloud.google.com/sql/docs/mysql/flags"/>
            <reference name="Security Considerations for LOAD DATA LOCAL" url="https://dev.mysql.com/doc/refman/5.7/en/load-data-local-security.html"/>
          </references>
          <standards>
            <standard ref="6.1.3" supportedStandardRef="cis-gcp-standard"/>
            <standard ref="6.1.3" supportedStandardRef="cis-gcp-standard-level-2"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that local_infile database flag for MySQL is disabled&lt;/p&gt;

	&lt;p&gt;From Console:&lt;br /&gt;
1. Go to the Cloud SQL Instances page in the Google Cloud Console.&lt;br /&gt;
2. Select the instance to open its Instance Overview page&lt;br /&gt;
3. Ensure the database flag local_infile that has been set is listed under the Database flags section.&lt;/p&gt;

	&lt;p&gt;From Command Line:&lt;br /&gt;
1. List all Cloud SQL database instances: gcloud sql instances list&lt;br /&gt;
2. Ensure the below command returns off for every Cloud SQL MySQL database instance. gcloud sql instances describe INSTANCE_NAME -format=json | jq '.settings.databaseFlags[] | select(.name=="local_infile")|.value'&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:06.488">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-LOG01" name="Enable all access logs" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Enable all access logs&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Enable all audit logs in the Google Cloud Platform to control and monitor the access of users and the configuration changes in the systems. &lt;br&gt; First, you have to know there are two types of audit logs in the Google Cloud Platform: &lt;br&gt; - Admin Activity audit logs that are enabled for all services and cannot be configured.&lt;br&gt; - Data Access audit logs that are not enabled by default and they shall be configured.&lt;/p&gt; 
&lt;p&gt;Remediation: &lt;br&gt; Configure Data Access audit logs with the Cloud console&lt;/p&gt; 
&lt;p&gt;You can also use the API or the Google Cloud CLI to perform these tasks programmatically.&lt;/p&gt; 
&lt;p&gt;To access audit log configuration options in the Cloud console, follow these steps:&lt;/p&gt; 
&lt;p&gt;1. From the Cloud console, select IAM &amp;amp; Admin &amp;gt; Audit Logs:&lt;/p&gt; 
&lt;p&gt;2. Select an existing Cloud project, folder, or organization at the top of the page.&lt;/p&gt; 
&lt;p&gt;Enable audit logs&lt;/p&gt; 
&lt;p&gt;To enable Data Access audit logs, do the following:&lt;/p&gt; 
&lt;p&gt;1. In the main table on the Audit Logs page, select one or more Google Cloud services from the Title column.&lt;/p&gt; 
&lt;p&gt;2. In the Log Type tab, select the Data Access audit log types that you want to enable and then click Save.&lt;/p&gt; 
&lt;p&gt;3. Where you have successfully enabled audit logs, the table includes a checkmark. In the following example, you see that, for the Cloud Composer API service, Admin Read and Data Read audit logs are enabled:&lt;/p&gt; 
&lt;p&gt;You can also enable audit logs for all Google Cloud services that produce Data Access audit logs. In the main table on the Audit Logs page, select all Google Cloud services.&lt;/p&gt; 
&lt;p&gt;Note that this bulk configuration method applies only to the Google Cloud services that are currently available. If a new Google Cloud service is added, it inherits your default audit configuration.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Configure Data Access audit logs" url="https://cloud.google.com/logging/docs/audit/configure-data-access#config-console"/>
            <reference name="Google Cloud docs: data access" url="https://cloud.google.com/logging/docs/audit/configure-data-access#project-and-organization"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="A09:2021-Security Logging and Monitoring Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2017-Insufficient Logging-Monitoring" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>	&lt;p&gt;Check that all audit logs in the Google Cloud Platform are enabled and configured.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:06.132">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-MYSQL3" name="Enable high availability on MySQL instances" issueId="" issueLink="" platform="" cost="1" risk="59" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Enable high availability on MySQL instances&lt;/p&gt;

	&lt;p&gt;Rationale:&lt;br /&gt;
The HA configuration, sometimes called a cluster, provides data redundancy. A Cloud SQL instance configured for HA is also called a regional instance and is located in a primary and secondary zone within the configured region. Within a regional instance, the configuration is made up of a primary instance and a standby instance. Through synchronous replication to each zone's persistent disk, all writes made to the primary instance are also made to the standby instance. In the event of an instance or zone failure, this configuration reduces downtime, and your data continues to be available to client applications.&lt;/p&gt;

	&lt;p&gt;Remediation:&lt;br /&gt;
Creating a new instance configured for high availability&lt;/p&gt;

	&lt;p&gt;When you create an instance and configure it for high availability, Cloud SQL creates it as a regional instance.&lt;/p&gt;

	&lt;p&gt;To create an instance configured for high availability:&lt;/p&gt;

	&lt;p&gt;1. Go to the Cloud SQL Instances page in the Google Cloud Console.&lt;br /&gt;
2. Create an instance.&lt;br /&gt;
3. On the Instance info page, select Show configuration options.&lt;br /&gt;
4. Open Backups, recovery, and high availability.&lt;br /&gt;
5. Select the High availability (regional) radio button.&lt;br /&gt;
Leave the Automate backups and Enable point-in-time recovery checkboxes enabled.&lt;/p&gt;


	&lt;p&gt;Configuring an existing instance for high availability&lt;/p&gt;

	&lt;p&gt;Configuring an existing instance for high availability causes a few minutes of downtime while the instance is reconfigured.&lt;/p&gt;

	&lt;p&gt;To configure an existing instance for high availability:&lt;/p&gt;

	&lt;p&gt;1. Go to the Cloud SQL Instances page in the Google Cloud Console.&lt;br /&gt;
2. Click the instance name to open its Overview page.&lt;br /&gt;
3. Click Edit.&lt;br /&gt;
4. Open Backups, recovery, and high availability.&lt;br /&gt;
5. Enable the Automate backups and Enable point-in-time recovery checkboxes.&lt;br /&gt;
6. Select High availability (regional).&lt;br /&gt;
7. Click Save.&lt;br /&gt;
You are returned to the instance page for the primary instance while the instance is updated.&lt;/p&gt;

	&lt;p&gt;Impact:&lt;br /&gt;
Once you start the high availability configuration on an instance, you cannot stop it. This operation restarts the instance. It typically takes only a few minutes for the configuration and restart to complete. But if the instance has a large disk or load, it might take up to an hour.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Enabling and disabling high availability on an instance" url="https://cloud.google.com/sql/docs/mysql/configure-ha"/>
            <reference name="Overview of the high availability configuration" url="https://cloud.google.com/sql/docs/mysql/high-availability"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Initiating failover&lt;/p&gt;

	&lt;p&gt;Testing failover is optional, but is recommended so that you can see how your application responds in the event of a failover.&lt;/p&gt;

	&lt;p&gt;Note: This feature helps you test your application's response to an automatic failover. Make sure your instance has completed any previous failover (so it is responding to connection requests) before you trigger another failover.&lt;/p&gt;

	&lt;p&gt;1. Go to the Cloud SQL Instances page in the Google Cloud Console.&lt;br /&gt;
2. Click the primary instance name to open its Instance details page.&lt;br /&gt;
3. Click Failover in the button bar.&lt;/p&gt;

	&lt;p&gt;The instance fails over and is not available to serve data for a few minutes.&lt;/p&gt;


	&lt;p&gt;Verifying an instance has high availability&lt;/p&gt;

	&lt;p&gt;To verify an instance has high availability:&lt;/p&gt;

	&lt;p&gt;1. Go to the Cloud SQL Instances page in the Google Cloud Console.&lt;br /&gt;
2. Click an instance name to open its Instance details page.&lt;br /&gt;
3. Under Configuration, it shows Highly available (regional).&lt;/p&gt;

	&lt;p&gt;Note: The new high availability does not use the legacy failover replica. You will not see a failover replica in the instances list unless you are using the legacy configuration.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:06.488">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-MYSQL8" name="Encrypt data in transit for MySQL" issueId="" issueLink="" platform="" cost="0" risk="64" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Encrypt data in transit for MySQL&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; SSL/TLS provides security when connecting to Cloud SQL. SSL/TLS is automatically provided when using:&lt;br&gt; - The Cloud SQL Proxy&lt;br&gt; - The Java Socket Library&lt;br&gt; - The built-in mechanisms in the App Engine environments.&lt;br&gt; In these situations, self-managed SSL/TLS certificates are not required.&lt;br&gt; When connecting to an instance with a public IP address, you must authorize using one of the above methods or using self-managed SSL/TLS certificates.&lt;br&gt; If requiring SSL/TLS certificates is enabled, then all connections must use certificates or the Cloud SQL Proxy, whether using public or private IP.&lt;/p&gt; 
&lt;p&gt;The Cloud SQL Proxy provides secure access to your instances without the need for Authorized networks or for configuring SSL.&lt;br&gt; Accessing your Cloud SQL instance using the Cloud SQL Proxy offers the following advantages:&lt;br&gt; - Secure connections: The proxy automatically encrypts traffic to and from the database using TLS 1.2 with a 128-bit AES cipher; SSL certificates are used to verify client and server identities.&lt;br&gt; - Easier connection management: The proxy handles authentication with Cloud SQL, removing the need to provide static IP addresses.&lt;br&gt; The proxy does not provide a new connectivity path; it relies on existing IP connectivity. To connect to a Cloud SQL instance using private IP, the proxy must be on a resource with access to the same VPC network as the instance.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Cloud SQL Proxy&lt;/p&gt; 
&lt;p&gt;To use the proxy, you must meet the following requirements:&lt;/p&gt; 
&lt;p&gt;- The Cloud SQL Admin API must be enabled.&lt;br&gt; - You must provide the proxy with Google Cloud authentication credentials.&lt;br&gt; - You must provide the proxy with a valid database user account and password.&lt;br&gt; - The instance must either have a public IPv4 address, or be configured to use private IP.&lt;/p&gt; 
&lt;p&gt;The public IP address does not need to be accessible to any external address (it does not need to be added as an authorized network address).&lt;/p&gt; 
&lt;p&gt;Installing the Cloud SQL Proxy&lt;/p&gt; 
&lt;p&gt;Download and install Cloud SQL Proxy. Please see Reference URL for specific instructions about each OS.&lt;/p&gt; 
&lt;p&gt;Proxy startup options&lt;/p&gt; 
&lt;p&gt;When you start the proxy, you provide it with the following information:&lt;/p&gt; 
&lt;p&gt;- What Cloud SQL instances to establish connections to&lt;br&gt; - Where it will listen for data coming from your application to be sent to Cloud SQL&lt;br&gt; - Where it will find the credentials it will use to authenticate your application to Cloud SQL&lt;br&gt; - If required, which IP address type to use.&lt;/p&gt; 
&lt;p&gt;The proxy startup options you provide determine whether it will listen on a TCP port or on a Unix socket. If it is listening on a Unix socket, it creates the socket at the location you choose; usually, the /cloudsql/ directory. For TCP, the proxy listens on localhost by default.&lt;/p&gt; 
&lt;p&gt;Run the cloud_sql_proxy executable with the argument -help to view the complete list of startup options.&lt;/p&gt; 
&lt;p&gt;Note: The Cloud SQL Proxy does not support Unix sockets on Windows.&lt;/p&gt; 
&lt;p&gt;You can install the proxy anywhere in your local environment. The location of the proxy binaries does not impact where it listens for data from your application.&lt;/p&gt; 
&lt;p&gt;Requiring SSL/TLS&lt;/p&gt; 
&lt;p&gt;When requiring SSL/TLS is enabled, you can either use the Cloud SQL Proxy or SSL/TLS certificates to connect to your Cloud SQL instance. If you do not require SSL/TLS, clients without a valid certificate are allowed to connect.&lt;br&gt; If you plan to connect using SSL/TLS, Google Cloud recommends that you enforce all connections to use SSL/TLS.&lt;/p&gt; 
&lt;p&gt;To enable requiring SSL/TLS:&lt;/p&gt; 
&lt;p&gt;1. Go to the Cloud SQL Instances page in the Google Cloud Console.&lt;br&gt; 2. Click the instance name to open its Instance details page.&lt;br&gt; 3. Click the Connections link in the left navigation pane.&lt;br&gt; 4. Scroll down to the SSL connections section.&lt;br&gt; 5. Click Allow only SSL connections.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="About the Cloud SQL Proxy" url="https://cloud.google.com/sql/docs/mysql/sql-proxy"/>
            <reference name="Authorizing with SSL/TLS certificates" url="https://cloud.google.com/sql/docs/mysql/authorize-ssl"/>
            <reference name="Configuring SSL/TLS certificates" url="https://cloud.google.com/sql/docs/mysql/configure-ssl-instance"/>
          </references>
          <standards>
            <standard ref="A02:2021-Cryptographic Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A3:2017-Sensitive Data Exposure" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Server certificates&lt;/p&gt;

	&lt;p&gt;Cloud SQL creates a server certificate automatically when you create your instance. As long as the server certificate is valid, you do not need to actively manage your server certificate. However, the certificate has an expiration date of 10 years; after that date, it is no longer valid, and clients are not able to establish a secure connection to your instance using that certificate. You are notified when the server certificate is nearing expiration.&lt;/p&gt;

	&lt;p&gt;In the console you can get information about your server certificate, such as when it was created and when it expires, or manually create a new one.&lt;/p&gt;

	&lt;p&gt;1. Go to the Cloud SQL Instances page in the Google Cloud Console.&lt;br /&gt;
2. Click the instance name to open its Instance details page.&lt;br /&gt;
3. Click the Connections link in the left navigation pane.&lt;br /&gt;
4. Scroll down to the Configure SSL server certificates section.&lt;br /&gt;
You can see the expiration date of your server certificate in the table.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:06.489">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-MYSQL5" name="Find and set maintenance windows for Cloud SQL instances" issueId="" issueLink="" platform="" cost="0" risk="70" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Find and set maintenance windows for Cloud SQL instances&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Cloud SQL instances need occasional updates to fix bugs, prevent security exploits, and perform upgrades. After applying updates, Cloud SQL restarts the instances, which can cause a disruption in service. During maintenance, HA primary instances do not fail over to standby instances.&lt;/p&gt; 
&lt;p&gt;Maintenance windows are blocks of time when Cloud SQL schedules this maintenance to take place.&lt;br&gt; If you want to get notification of upcoming maintenance updates, you must do both of the following:&lt;br&gt; - Set your preferred maintenance options on instances. You can control the day of the week and time when an instance receives updates.&lt;br&gt; - Opt in to get notifications for when maintenance occurs. This helps you plan for disruptions.&lt;br&gt; If you do not specify a preferred window, disruptive updates can happen at any time, although they generally only occur every few months.&lt;br&gt; Note: Maintenance and updates for severe security issues can happen during a deny maintenance period.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Setting a preferred window for maintenance on an instance&lt;/p&gt; 
&lt;p&gt;To set a preferred maintenance window:&lt;/p&gt; 
&lt;p&gt;1. Go to the Instances page.&lt;br&gt; 2. Click an Instance name.&lt;br&gt; 3. On the Cloud SQL instance Overview page, click Edit maintenance preferences.&lt;br&gt; 4. Under Configuration options, open Maintenance.&lt;br&gt; 5. Configure the following options:&lt;br&gt; - Preferred window. Set the day and hour range when updates can occur on this instance.&lt;br&gt; - Order of update. Set the order for updating this instance, in relation to updates to other instances. Set timing to Any, Earlier, or Later. Instances using the Earlier setting receive updates up to a week before instances using the Later setting, when comparing instances that reside in the same location.&lt;/p&gt; 
&lt;p&gt;Opting in to maintenance notifications&lt;/p&gt; 
&lt;p&gt;Even when you opt in to notifications, you do not receive them unless you set a preferred window for maintenance on an instance&lt;/p&gt; 
&lt;p&gt;Note: If you select Any for the maintenance window, you do not receive notifications, even if you opt in for them.&lt;/p&gt; 
&lt;p&gt;1. Go to the Communication page.&lt;br&gt; 2. In the row for Cloud SQL, Maintenance window, select the radio button under Email to turn it ON.&lt;br&gt; Each user that needs to receive notifications must opt in separately.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Finding and setting maintenance windows" url="https://cloud.google.com/sql/docs/mysql/set-maintenance-window"/>
            <reference name="Overview of maintenance on Cloud SQL instances" url="https://cloud.google.com/sql/docs/mysql/maintenance"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Finding maintenance notifications in the Cloud Console&lt;/p&gt;

	&lt;p&gt;You can view maintenance notifications in a few places in the Cloud Console:&lt;/p&gt;

	&lt;p&gt;- On the ACTIVITY dashboard, look for instances marked with SQL Maintenance.&lt;br /&gt;
- When an instance is scheduled for maintenance, the date for maintenance is listed on the Instances page in the Maintenance column. The Maintenance column is usually hidden, but it displays automatically when maintenance is scheduled. You can also select Maintenance from the Column display options (Column display options icon is three lines) if you want the Maintenance column to always show up.&lt;br /&gt;
- Alternatively, you can select an instance to go to the Instance details page. If the instance is scheduled for maintenance, you will see a message in the Maintenance pane.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:06.489">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-IAM01" name="Recertify user access" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Do regular reviews of service accounts on the system and verify they do not contain stolen or
                        fake accounts. This process ensures there are not any compromised accounts by former employees
                        or attackers.&amp;nbsp;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        At least every 90 days complete the following:&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Open the Service Accounts page in the Cloud Platform Console.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Click Select a project.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Select your project and click Open. All service accounts are listed in the Service
                        Accounts page.&lt;/li&gt;
                        &lt;li&gt;For any user that should not exist, select the user and click the Delete button.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Google Cloud docs: manage service accounts" url="https://cloud.google.com/iam/docs/creating-managing-service-accounts"/>
          </references>
          <standards>
            <standard ref="A07:2021-Identification and Authentication Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A2:2017-Broken Authentication" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Open the Service Accounts page in the Cloud Platform Console.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Click Select a project.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Select your project and click Open. All service accounts are listed in the Service
                            Accounts page.&lt;/li&gt;
                            &lt;li&gt;Check that the necessary users appear in the list.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;And check that there is a process to review the access users at least every 90
                            days.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:06.131">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-STO02" name="Securely store your credentials" issueId="" issueLink="" platform="" cost="0" risk="64" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Make sure that you securely store your credentials. This can be done differently depending on
                        your environment and where you store your credentials. For example, if you store your
                        credentials in a configuration file, make sure that you set appropriate permissions on that file
                        to prevent unwanted access. If you are using Google App Engine, consider using StorageByKeyName
                        to store your credentials.</desc>
          <implementations/>
          <references>
            <reference name="Google Cloud docs: Best practices storage" url="https://cloud.google.com/storage/docs/best-practices"/>
          </references>
          <standards>
            <standard ref="A02:2021-Cryptographic Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A3:2017-Sensitive Data Exposure" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that the credentials are stored securely.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:06.132">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-USER-MFA" name="Setup Multi-factor Authentication for Google Cloud Platform accounts" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Setup Multi-factor Authentication for Google Cloud Platform accounts 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  Multi-factor authentication requires more than one mechanism to authenticate a user. This secures user logins from attackers exploiting stolen or weak credentials. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  Deploy 2-Step Verification 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Step 1: Notify users of 2-Step Verification deployment (required) 
&lt;/div&gt; 
&lt;div&gt;
  Before deploying 2-Step Verification, communicate your company's plans to your users, including: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - What is 2-Step Verification and why your company is using it 
&lt;/div&gt; 
&lt;div&gt;
  - Whether 2-Step Verification is optional or required 
&lt;/div&gt; 
&lt;div&gt;
  - If required, give the date by which users must turn on 2-Step Verification 
&lt;/div&gt; 
&lt;div&gt;
  - Which 2-Step Verification method is required or recommended. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Step 2: Set up basic 2-Step Verification (required) 
&lt;/div&gt; 
&lt;div&gt;
  Next, let your users turn on 2-Step Verification. By default, users can turn on 2-Step Verification and use any verification method. (G Suite accounts created before December 2016 have 2-Step Verification turned off by default). 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Applying 2-Step Verification settings 
&lt;/div&gt; 
&lt;div&gt;
  You can customize 2-Step Verification settings for organizational units and exception groups-a group of users within organizational unit. For example, require security keys for a small team in your Sales organizational unit. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  How exception groups work 
&lt;/div&gt; 
&lt;div&gt;
  - You can assign one exception group to an organizational unit. 
&lt;/div&gt; 
&lt;div&gt;
  - Users in the exception group must belong to the organizational unit. 
&lt;/div&gt; 
&lt;div&gt;
  - 2-Step Verification settings apply to users in the exception group (not to group addresses or nested groups). 
&lt;/div&gt; 
&lt;div&gt;
  - Create the groups in Admin console, Groups API, or Directory Sync (not Google Groups). 
&lt;/div&gt; 
&lt;div&gt;
  For easier identification, you might include the organizational unit in the name of exception groups (for example, exgrp_OU_name). 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Also: 
&lt;/div&gt; 
&lt;div&gt;
  - Allow users to turn on 2-Step Verification 
&lt;/div&gt; 
&lt;div&gt;
  - Tell your users to enroll in 2-Step Verification 
&lt;/div&gt; 
&lt;div&gt;
  - Track users' enrollment&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Step 3: Enforce 2-Step Verification (optional) 
&lt;/div&gt; 
&lt;div&gt;
  Make sure users are enrolled in 2-Step Verification before turning on enforcement. Users who aren't enrolled can't sign in to their accounts. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Also: 
&lt;/div&gt; 
&lt;div&gt;
  - Ensure a smooth transition to an enforcement policy 
&lt;/div&gt; 
&lt;div&gt;
  - Choose a 2-Step Verification method to enforce 
&lt;/div&gt; 
&lt;div&gt;
  - Turn on enforcement 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  For more details please follow the Reference URL. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Deploy 2-Step Verification" url="https://support.google.com/a/answer/9176657"/>
          </references>
          <standards>
            <standard ref="A07:2021-Identification and Authentication Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A2:2017-Broken Authentication" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  For each Google Cloud Platform project, folder, or organization: 
&lt;/div&gt; 
&lt;div&gt;
  1. Identify non-service accounts. 
&lt;/div&gt; 
&lt;div&gt;
  2. Manually verify that multi-factor authentication for each account is set. 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:06.132">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="GOOGLE-IAM06" name="Use Security Key for 2-Step Verification for administrator or co-administrator accounts" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="JamesRabe" library="Google Cloud Platform" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Ensure that the users with administrator and co-administrator accounts activate and configure the second factor authentication provided by Google. With 2-Step Verification, you can log into Google with a security key.&amp;nbsp; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  To activate and configure 2 Factor Authentication, you shall follow the following steps: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Go to the 2-Step Verification page section of &lt;a href="https://myaccount.google.com/signinoptions/two-step-verification"&gt;My Account&lt;/a&gt;.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Click Add security key.&lt;/li&gt; 
  &lt;li&gt;Follow the on-screen instructions.&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Google Cloud: mobile account" url="https://support.google.com/accounts/answer/6103523?co=GENIE.Platform%3DAndroid#phone"/>
            <reference name="Google support: answers" url="https://support.google.com/accounts/answer/6103534"/>
          </references>
          <standards>
            <standard ref="A07:2021-Identification and Authentication Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A2:2017-Broken Authentication" supportedStandardRef="owasp-top-10-2017"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Go to the 2-Step Verification page section of My Account.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Check that 2-Step Verification authentication is enabled and configured correctly.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:06.132">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="AUTHENTICATION" name="Authentication" desc="" library="Google Cloud Platform">
          <threats>
            <threat ref="GOOGLE-LOST-ACCESS-ROOT" name="Attackers gain unauthorized access to the root account due to lack of configuration of the account" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Google Cloud Platform" editable="true">
              <desc>&lt;p&gt;Attackers could gain unauthorized access to the administrator account due to lack of configuration of the account and its security mechanisms, such as modifying credentials and adding/removing user accounts.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="GOOGLE-IAM-01">
                  <countermeasures>
                    <countermeasure ref="GOOGLE-IAM06" mitigation="50"/>
                  </countermeasures>
                </weakness>
                <weakness ref="GOOGLE-MON02">
                  <countermeasures>
                    <countermeasure ref="GOOGLE-IAM05" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="GOOGLE-IAM05" mitigation="50"/>
                <countermeasure ref="GOOGLE-IAM06" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="GOOGLE-LOST-ACCESS-USER" name="Attackers gain unauthorized access to the user account due to lack of configuration of the account" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Google Cloud Platform" editable="true">
              <desc>&lt;p&gt;Attackers could gain unauthorized access to the user account due to lack of configuration of the account, for example, the security question to reset the password is configured incorrectly.&lt;/p&gt;</desc>
              <riskRating confidentiality="50" integrity="50" availability="50" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="GOOGLE-IAM03">
                  <countermeasures>
                    <countermeasure ref="GOOGLE-IAM01" mitigation="50"/>
                  </countermeasures>
                </weakness>
                <weakness ref="GOOGLE-MON03">
                  <countermeasures>
                    <countermeasure ref="GOOGLE-USER-MFA" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="GOOGLE-IAM01" mitigation="50"/>
                <countermeasure ref="GOOGLE-USER-MFA" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="AUTHORIZATION" name="Authorization" desc="" library="Google Cloud Platform">
          <threats>
            <threat ref="LOSS-CONTROL_ENV" name="Attackers gain unauthorized access to the control of the environment" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Google Cloud Platform" editable="true">
              <desc>&lt;p&gt;Attackers could potentially gain unauthorized access to the control of the environment, due to user accounts - or role groups - not being well defined and configured. As a consequence attackers may be able to make changes without root approval.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="75" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="GOOGLE-EXPIRATION-DATE">
                  <countermeasures>
                    <countermeasure ref="GOOGLE-IAM08" mitigation="25"/>
                  </countermeasures>
                </weakness>
                <weakness ref="GOOGLE_IAM-02">
                  <countermeasures>
                    <countermeasure ref="GOOGLE-IAM02" mitigation="25"/>
                    <countermeasure ref="GOOGLE-IAM03" mitigation="25"/>
                    <countermeasure ref="GOOGLE-IAM04" mitigation="25"/>
                    <countermeasure ref="GOOGLE-MYSQL1" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="GOOGLE-IAM02" mitigation="25"/>
                <countermeasure ref="GOOGLE-IAM03" mitigation="25"/>
                <countermeasure ref="GOOGLE-IAM04" mitigation="25"/>
                <countermeasure ref="GOOGLE-IAM08" mitigation="25"/>
                <countermeasure ref="GOOGLE-MYSQL1" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="GENERAL" name="General" desc="" library="Google Cloud Platform">
          <threats>
            <threat ref="LOSS-DATA-REMOVED" name="Attackers destroy the data and the data cannot be recovered" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Google Cloud Platform" editable="true">
              <desc>&lt;p&gt;Attackers gain access to the systems and data with excessive permissions and they remove all the information from the system, which might lead to permanent loss of data, including sensitive or personal data.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="50" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="GOOGLE-BACKUP">
                  <countermeasures>
                    <countermeasure ref="GOOGLE-MYSQL3" mitigation="50"/>
                    <countermeasure ref="GOOGLE-MYSQL4" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="GOOGLE-MYSQL3" mitigation="50"/>
                <countermeasure ref="GOOGLE-MYSQL4" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="UNAUTHZ-SERVICES-NOT-UPDATE" name="Attackers gain access to the system exploiting a known vulnerability" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Google Cloud Platform" editable="true">
              <desc>&lt;p&gt;Attackers can gain access to the systems because the security patches for each system have not been applied or the licenses of the products have expired.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="GOOGLE-NOT-PATCHED">
                  <countermeasures>
                    <countermeasure ref="GOOGLE-MYSQL5" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="GOOGLE-MYSQL5" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="LOSS-CONTROL_ENV" name="Attackers gain unauthorized access to the control of the environment" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Google Cloud Platform" editable="true">
              <desc>&lt;p&gt;Attackers could potentially gain unauthorized access to the control of the environment, due to user accounts - or role groups - not being well defined and configured. As a consequence attackers may be able to make changes without root approval.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="75" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="GOOGLE-MON01">
                  <countermeasures>
                    <countermeasure ref="GOOGLE-MYSQL9" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="GOOGLE-MYSQL9" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="ACCESS-TO-DATA" name="Sensitive data is compromised through unauthorized access to data storage" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Google Cloud Platform" editable="true">
              <desc>&lt;p&gt;A data breach is a security violation in which sensitive, protected or confidential data is copied, transmitted, viewed, stolen or used by an individual unauthorized to do so. Sensitive data could be exposed due to a bad configuration in user permissions.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="GOOGLE-ACCESSIBLE-SENSITIVE-DATA">
                  <countermeasures>
                    <countermeasure ref="GOOGLE-MYSQL2" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="GOOGLE-USECURE-CREDENTIALS">
                  <countermeasures>
                    <countermeasure ref="GOOGLE-STO02" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="GOOGLE-MYSQL2" mitigation="100"/>
                <countermeasure ref="GOOGLE-STO02" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="LOGGING AND MONITORING" name="Logging and Monitoring" desc="" library="Google Cloud Platform">
          <threats>
            <threat ref="OWASP A10:2017" name="Exploitation of insufficient logging and monitoring" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Google Cloud Platform" editable="true">
              <desc>	&lt;p&gt;Exploitation of insufficient logging and monitoring is the bedrock of nearly every major incident.&lt;br /&gt;
 Attackers rely on the lack of monitoring and timely response to achieve their goals without being detected.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="GOOGLE-LOG01" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="GOOGLE-LOG01" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="NETWORKING" name="Networking" desc="" library="Google Cloud Platform">
          <threats>
            <threat ref="GOOGLE-UNAUTHORISED-CONNECTION" name="Attackers gain unauthorized connection to the resources" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Google Cloud Platform" editable="true">
              <desc>&lt;p&gt;Attackers could gain an unauthorized connection to the resources through misconfigured ports or security network configurations.&lt;/p&gt;</desc>
              <riskRating confidentiality="25" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="GOOGLE-NET-01">
                  <countermeasures>
                    <countermeasure ref="GOOGLE-MYSQL6" mitigation="50"/>
                    <countermeasure ref="GOOGLE-MYSQL7" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="GOOGLE-MYSQL6" mitigation="50"/>
                <countermeasure ref="GOOGLE-MYSQL7" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="DATA-EXPOSED-CHANNEL" name="The data is exposed through the transmission channel" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Google Cloud Platform" editable="true">
              <desc>&lt;p&gt;Attackers can obtain the data through the transmitted channel because this does not have the security measures in place to protect the data&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="DATA-TRANSMIT-CLEAR">
                  <countermeasures>
                    <countermeasure ref="GOOGLE-MYSQL8" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="GOOGLE-MYSQL8" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="3a87008a-d0ab-4549-92d6-85cf99c98736" diagramComponentId="98bcd8d7-9f9b-4ffb-ac46-afc765b0e277" ref="55d41d75-51f0-4674-b6b4-9c3feb2a0ce5" name="Microservice" desc="" library="microservices-library-dev" parentComponentRef="ec9c8d86-b4fb-43ab-8c48-323781a7c9a1" componentDefinitionRef="microservice">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses>
        <weakness ref="APP-AS-1" name="Application secrets at risk of exposure" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
  Ensuring that there is no sensitive data (such as credentials) in the application code or in configuration files is a challenge because the environments that containers run in have varying security controls and may provide access to unintended parties.&amp;nbsp; Developers need to consider the new threats brought about by multi-tenancy and shared platforms.&amp;nbsp; Not doing so can result in exposure of sensitive data.&amp;nbsp; 
&lt;/div&gt;Encryption methods are only useful if they are robust.&amp;nbsp; This is a particular challenge in container architectures as there are many competing interests and constraints which must be accounted for.&amp;nbsp; It is important that developers take ownership of encryption, while also working within the needs and requirements of the framework. Because of the complexity of containerized systems, and the general tendency of organizations to place security in the hands of operators, encryption of application secrets may be overlooked by developers.&amp;nbsp; This can result in exploitable vulnerabilities which administrators of the system are unaware of.&amp;nbsp;Some of the challenges of securing containerized systems include the variety of secrets which must be protected, and the fact that the available methods for protection may not be consistent between environments.&amp;nbsp; Organizations should be aware of these challenges and implement robust mechanisms which anticipate the problems inherent and provide mitigating strategies.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:10.584">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="APP-AA-1" name="Cloud-native environments may introduce risks to the microservice architecture" state="0" impact="100" issueId="" issueLink="">
          <desc>The use of cloud providers introduces many capabilities to container architectures, while also streamlining workflows and reducing the necessity of managing hardware.&amp;nbsp; However it also increases complexity, and this can make it more difficult to identify and mitigate vulnerabilities.&amp;nbsp; It can also result in a lack of ownership for security issues as developers assume that other parties are taking responsibility. Applications and containers which run or on otherwise access cloud providers must identify themselves.&amp;nbsp; Credentials and access control must be securely managed in order to prevent secret exposure and privilege escalation.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:10.584">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="IM-G-1" name="Code promotion across environments may introduce vulnerabilities" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
  Code and image provenance is a developer and application owner concern; verification requires certification and key management across the code promotion path. This can be a challenge as multiple parties and certificate owners may be involved. The absence can result in application version mismatches or running tampered images. 
&lt;/div&gt;&lt;div&gt;
  Developers and operators need to be equally engaged in the process of code promotion across application container environments. Today, developers can push code across application container environments without the need for operator interaction.&amp;nbsp; Systems should have robust policies and procedures in place to ensure that images are secured by developers at all stages of the build chain. 
&lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:10.362">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CO-G-1" name="Contention issues arise due to the elasticity of workload and dynamic resource requests" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
   Ensuring resource availability as needed to support workloads is a challenge.&amp;nbsp; This is because of the dynamic use and availability of resources in a potentially shared environment, combined with the possibly unpredictable use of an application. The absence can result in either the CMP being unable to allocate appropriate resources for an application container, or a resource shortage within the CMP. 
 &lt;/div&gt;&lt;div&gt;
  Resources usage which is not properly managed by developers will affect the usage of others in a shared environment. The absence may result in a DOS-style scenario. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:10.165">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="IM-G-2" name="Image contents may not be secure" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
  Images must have no known vulnerabilities or malicious code. Developers must help to ensure images have not been tampered with as they move from development to production. Applications of this feature include scanning images for vulnerabilities and malicious code and using image signing and validation mechanisms. 
&lt;/div&gt;&lt;div&gt;
  Ensuring that only the required components are packaged inside the image can be a challenge due to the complexity of applications. If this is not carefully managed it can result in the compromise of an unnecessary component.&amp;nbsp;&amp;nbsp; 
&lt;/div&gt;&lt;div&gt;
  Ensuring third-party components are free of vulnerabilities and updated as needed can be a challenge due to differing update frequencies by third-party vendors. This can result in the compromise of third-party components.&amp;nbsp; OS package managers are a particular challenge in this regard due to the large number of updates and downloads they maintain, and the fact that they often have unrestricted access to systems.&amp;nbsp; 
&lt;/div&gt;&lt;div&gt;
  Developers and operators need to be equally engaged in the process of code promotion across application container environments.&amp;nbsp; Developers should not assume that system wide security settings will mitigate potential application vulnerabilities.&amp;nbsp; Rather, they should ensure that their images have no known vulnerabilities or malicious code, and that they have not been tampered with as they move from development to production. 
&lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:10.362">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CO-N-1" name="Insecure networking settings may be exploited to gain access to containers or hosts" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
  Monitoring network activity and providing the infrastructure to do so can present a challenge because of the lack of network tooling and data storage. The absence can result in the exposure of sensitive information and diminished incident response and detection capabilities. 
&lt;/div&gt;&lt;div&gt;
  In container networking, communications between containers and hosts must be secured, network traffic must be monitored, and access to the network traffic, resources, and configurations must be controlled.&amp;nbsp; In terms of applications, communications between containers affect access control, limiting access to network traffic, resources, and configurations (leveraging network namespace). Other outcomes include isolating the container interfaces, monitoring network activity, and securing communications between containers via SSL/TLS or VPN. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:10.165">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CO-D-1" name="Insufficient scaling of container resources may lead to inefficient resource utilization" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
  Ensuring resource scaling requests take priority over other containers may provide a challenge.&amp;nbsp; This is due to complexity and implementation of the CMP to allow such prioritization. The absence can result in priority applications not being able to scale for user workloads. 
&lt;/div&gt;&lt;div&gt;
  It is a challenge for developers to define application performance profiles. Predictive application workload modeling is a complex task often substituted by a "common practice" or, equally precise, "by analogy".&amp;nbsp; This is largely due to lack of tooling in development environments. Both are likely to lead to inefficient resource utilization. 
&lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:10.165">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="APP-LM-1" name="Lack of continuous monitoring can result in application version mismatches and system availability issues" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
  The ephemeral nature of application containers increases the necessity of reliable and centralized monitoring of platform, host, and containers.&amp;nbsp; It is essential to ensure that container runtime actions and events are monitored and logged in order to allow timely identification and mitigation of problems and threats. 
&lt;/div&gt;&lt;div&gt;
  There may be a challenge for developers to understand which container versions are running and where. This information needs to be easily and quickly digestible by appropriate parties. The absence can result in application version mismatches and system availability issues. 
&lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:10.583">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="APP-G-1" name="Lifecycle events prevent secure startup and shutdown of applications" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
  Developing a containerized application that can be scaled up or down without notice is a challenge because of the extra effort required to design and implement the application in a manner where it can gracefully handle such scaling events while maintaining a secure state.&amp;nbsp; &amp;nbsp;It is a more robust approach to ensure that stateful containerized applications are aware of container scaling events to ensure transitions between secure states. 
&lt;/div&gt;&lt;div&gt;
  In an ideal world, either application containers are stateless, or the applications have been developed with clustering technologies to attach and release neighbors as they start and are terminated.&amp;nbsp; Some use cases, though, will have containers that have not been developed in such a manner, or which contain legacy applications that have migrated to containers. Such applications running inside a container may not be aware of pending lifecycle events issued by a CMP such as container start/stop/scale.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The containerized application should have an opportunity to be informed of the pending container's lifecycle events to manage its own lifecycle accordingly. This is essential to ensure the application's secure startup and shutdown.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:10.583">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CO-G-2" name="Mismanagement of container volumes can compromise underlying architecture" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
   In container volume management, it is essential to ensure the container has need-only access to data volumes and uses dedicated storage resources for runtime operations.&amp;nbsp; In the application, it is vital to ensure that access control exists for file system resources and raw storage devices, and that data is encrypted at rest in the data volumes.&amp;nbsp; Applications directly mounting a host directory should be avoided. 
 &lt;/div&gt;Building an image that minimizes using shared container volumes is imperative due to the risk of exposing sensitive data to the host or other containers, and the current reliance on sharing information with containers. This can result in exposure of sensitive data.&amp;nbsp;&amp;nbsp; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt;
   Building an image that does not share the host filesystem is equally crucial because exposing the host filesystem can result in compromising the underlying infrastructure, and other containers that share the same environment.&amp;nbsp; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:10.165">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="APP-LM-2" name="The complexity of container architectures can make logging and monitoring difficult to implement" state="0" impact="100" issueId="" issueLink="">
          <desc>Ensuring that coding policies include logging capabilities at the planning and design stages is a challenge due to the lack of presence of security concerns in the design phase and tooling.&amp;nbsp; In addition, there are many logging features which may be implemented in microservices and an absence of clear policies can result in lack of ownership from key parties, including developers.&amp;nbsp;&amp;nbsp;&lt;div&gt;
  Usually application logging is added after the fact as a response to an incident or audit.&amp;nbsp; Ensuring that application logs, starting with authentication logs, are captured for existing applications is a challenge due to lack of resources to modify the application and necessary guidance to do so.&amp;nbsp;&amp;nbsp;This will result in diminishing incident response and detection capabilities.&amp;nbsp; 
&lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:10.583">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="CSA-SACA-3.1.5:1" name="Applications must use secure network communication protocols" issueId="" issueLink="" platform="" cost="1" risk="61" state="Recommended" owner="JamesRabe" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Network traffic generated by the containers should maintain confidentiality regarding the applications and management by utilizing proper encryption protocols (i.e., SSL/TLS, IPSec). 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Selecting libraries that support secure communications to provide encryption and maintain confidentiality prevents information spillage and network traffic tampering. Tampering of network traffic may result in system compromise. 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.5" supportedStandardRef="csa-container-architectures"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Identify any communications in your application which will be sent as network traffic and ensure that encryption protocols have been applied.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:10.115">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="IM-G-2.2.1" name="Avoid using images with OS package managers" issueId="" issueLink="" platform="" cost="1" risk="78" state="Recommended" owner="JamesRabe" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Images with OS package managers or shells could contain unknown vulnerabilities.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Package managers are normally run with unrestricted access in order to allow them to modify critical system software. The package manager's actions, therefore, affect the entire system.&amp;nbsp;&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  If you must include OS packages, remove the package manager before deploying the container.&amp;nbsp; The following steps may also help mitigate the risk: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Use repositories you trust. Use only mirrors that belong to reputable organizations.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Manually update your systems (and local mirror caches).&lt;/li&gt; 
  &lt;li&gt;Use signed repository metadata.&lt;/li&gt; 
  &lt;li&gt;Use HTTPS for mirror communication.&lt;/li&gt; 
  &lt;li&gt;Use package managers that implement metadata expiration.&lt;/li&gt; 
  &lt;li&gt;Use distributions that properly make use of the package manager's security features.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="StackRox: Kubernetes Security 101" url="https://www.stackrox.com/post/2020/05/kubernetes-security-101/"/>
            <reference name="cs.arizona.edu: Attacks on Package Managers" url="https://www2.cs.arizona.edu/stork/packagemanagersecurity/attacks-on-package-managers.html"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Follow the steps for your particular OS to identify if package managers are installed on the container.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:10.305">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SACA-3.1.7:1" name="Create and follow coding policies to include logging capabilities" issueId="" issueLink="" platform="" cost="1" risk="62" state="Recommended" owner="JamesRabe" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  An application should provide logs regarding authentication, authorization, actions, and failures. The developer should include this capability as part of planning and design phases. For new applications, the developer should create and follow coding policies to include logging capabilities at the planning and design stages.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;&lt;br&gt;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Logging application authentication, authorization, actions, and failures provides a trail of evidence to follow when an investigation takes place and a root cause needs to be established. 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.7" supportedStandardRef="csa-container-architectures"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Review the logging capabilities for your application and ensure they have been planned and designed in a way which is consistent with the features of the container architecture.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:10.517">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SACA-3.1.10:2" name="Create common libraries for developers to handle sensitive data and secrets in the backend application code" issueId="" issueLink="" platform="" cost="1" risk="78" state="Recommended" owner="JamesRabe" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  To enable consistent ways of addressing the handling of sensitive data and secrets within backend application code, a common set of libraries should be provided to developers. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Application developers are not necessarily security developers and should devote time to developing application features, not security. Security that is required within applications should be easy to use and made clear, so that minimum effort is spent and consistency across applications is achieved. 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.10" supportedStandardRef="csa-container-architectures"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Verify that libraries exist for securing sensitive data and that they have been applied to your applications.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:10.517">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SACA-3.1.9:1" name="Developers should receive sufficient training on volume management" issueId="" issueLink="" platform="" cost="1" risk="78" state="Recommended" owner="JamesRabe" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Developers should receive sufficient training to ensure development of applications that minimize the need to use shared container volumes and that do not require any access to host directories. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div style=""&gt;
   Shared volumes can result in exposure of sensitive data. Images which share the host volumes or filesystem can result in the compromise of the underlying infrastructure and other containers sharing the same environment. Avoiding these configurations is a challenge, which is why developer training is essential. 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.9" supportedStandardRef="csa-container-architectures"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Ensure that relevant training is available and up to date.&amp;nbsp;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:10.116">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SACA-3.1.17:3" name="Encrypt the sensitive application and create a container entry point application that decrypts and executes the main application" issueId="" issueLink="" platform="" cost="1" risk="78" state="Recommended" owner="JamesRabe" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  By encrypting the sensitive application, the risk of unintended exposure of the sensitive application can be mitigated. This allows the container image (and sensitive application) to be stored, transmitted, or shared without unauthorized exposure. Encryption and decryption of the application should be treated as any other data encryption/decryption process. For sensitive applications, developers should encrypt the sensitive application, then create a container entry point application that decrypts and executes the main application. 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.17" supportedStandardRef="csa-container-architectures"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that an appropriate level of encryption has been applied to any sensitive data in the application.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:10.518">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SACA-3.1.12:1" name="Ensure sustainable system performance by balancing system resources" issueId="" issueLink="" platform="" cost="1" risk="73" state="Recommended" owner="JamesRabe" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Working with the operator and architect, the developer should ensure that the binaries and libraries are optimized to operate in a containerized infrastructure. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Default configurations or those that are suitable for non-containerized systems may conflict with the needs of container architectures.&amp;nbsp; Developers need to be aware of the environmental impacts on their applications. 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.12" supportedStandardRef="csa-container-architectures"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Review optimization configurations to ensure they are compliant with the needs or policies of the container architecture.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:10.116">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SAC-3.1.1:1" name="Establish a root of trust" issueId="" issueLink="" platform="" cost="1" risk="78" state="Recommended" owner="JamesRabe" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  A public key infrastructure (PKI) allows creation and management of a hierarchy of digital certificates for encryption and digital signatures. A PKI may already exist in an organization-certificates from this new or existing system can be used to sign container images and later verify their provenance and integrity. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  To ensure the integrity of the build chain, the developer must have the ability to digitally sign and provide a digital signature for the code and/or binary artifacts that will be promoted between environments or to the next promotion phase. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  By signing a container image with a certificate that is part of a PKI, container management platform (CMP), users can easily verify the source of an image. This is important as once the source of the image is determined, users can ensure that the image has been through appropriate scrutiny before being promoted for production use. 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.1" supportedStandardRef="csa-container-architectures"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that all existing images are appropriately signed or verified, using keys provided by your organization.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:10.306">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="IM-G-2.3.1" name="Harden all applications in an image" issueId="" issueLink="" platform="" cost="1" risk="78" state="Recommended" owner="JamesRabe" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;span style="line-height: 107%; font-size: 14.6667px;"&gt;&lt;font face="Times New Roman, serif"&gt; 
   &lt;div style=""&gt; 
    &lt;div style=""&gt; 
     &lt;b&gt;Description:&lt;/b&gt; 
    &lt;/div&gt; 
    &lt;div style=""&gt;
      Ensure that applications are secure and follow best practices. 
    &lt;/div&gt; 
    &lt;div style=""&gt; 
     &lt;br&gt; 
    &lt;/div&gt; 
    &lt;div style=""&gt; 
     &lt;b&gt;Rationale:&lt;/b&gt; 
    &lt;/div&gt; 
    &lt;div style=""&gt;
      When deploying applications in a containerized system, vulnerabilities that compromise the application can in turn compromise the entire architecture.&amp;nbsp; This is a result of the way containers and pods communicate and access resources throughout the whole cluster. 
    &lt;/div&gt; 
    &lt;div style=""&gt; 
     &lt;br&gt; 
    &lt;/div&gt; 
    &lt;div style=""&gt; 
     &lt;b&gt;Remediation:&lt;/b&gt; 
    &lt;/div&gt; 
    &lt;div style=""&gt;
      Analyze source code regularly to ensure it is following best practices to avoid vulnerabilities.&amp;nbsp; &amp;nbsp;Continuously test your application against common attack practices, like SQL injection, DDoS attack, etc. There are various dynamic analysis tools available to assist.&amp;nbsp; 
    &lt;/div&gt; 
   &lt;/div&gt;&lt;/font&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;span style="font-family: &amp;quot;Times New Roman&amp;quot;, serif; font-size: 11pt;"&gt;&lt;br&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div style=""&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="The New Stack: A Security Checklist for Cloud Native Kubernetes Environments" url="https://thenewstack.io/a-security-checklist-for-cloud-native-kubernetes-environments/"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Use a reliable tool such as Veracode or Synopsys to analyze source code for vulnerabilities before deploying.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:10.306">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SACA-3.1.17:2" name="Identify a data at rest (DAR) solution" issueId="" issueLink="" platform="" cost="1" risk="78" state="Recommended" owner="JamesRabe" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The developer should utilize a DAR solution, if at all possible, that has been FIPS 140-2 validated. The developer should also analyze the application programming interface (API) and a compatible key management system (KMS).&amp;nbsp; The developer should also utilize the latest advanced encryption standard (AES) with the highest possible key length. Developers also have to take into account if the solution has been validated by an impartial third party and if the solution is viable in the intended operational environment. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  With a FIPS-validated solution and a compatible KMS, there is some third party validation that the solution is secure and thus a higher level of assurance.&amp;nbsp; Robust use of AES will ensure data confidentiality. 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.17" supportedStandardRef="csa-container-architectures"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that encryption is included and that the level is appropriate to the application security needs and the wider system policies.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:10.518">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SACA-3.1.7:2" name="Implement plans to capture application logs" issueId="" issueLink="" platform="" cost="1" risk="62" state="Recommended" owner="JamesRabe" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  An existing application should provide logs regarding authentication, authorization, actions, and failures. If any of these logging items have not been implemented, developers should provide these capabilities as part of the maintenance phase. For existing applications, the developer should implement plans to capture application logs, starting with authentication logs 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Logging application authentication, authorization, actions, and failures provides a trail of evidence to follow when an investigation takes place and a root cause needs to be established. 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.7" supportedStandardRef="csa-container-architectures"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Review the logging capabilities for your application and ensure they have been applied in a way which is consistent with the features of the container architecture.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:10.518">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SACA-3.1.6:3" name="Include only necessary components inside the image" issueId="" issueLink="" platform="" cost="1" risk="78" state="Recommended" owner="JamesRabe" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Developers should trim down images to include only necessary components. It is preferred to use a baseline image with minimal set of packages over a full OS distribution.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Removing unnecessary components from the image will reduce the number of potentially outdated or unpatched packages and therefore reduce the number of security vulnerabilities. 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.6" supportedStandardRef="csa-container-architectures"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Perform a suitable scan based on your operating system for extraneous tools and components.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:10.306">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SACA-3.1.11:1" name="Left the application in an unknown state if a containerized application is unaware of the container's transitions" issueId="" issueLink="" platform="" cost="1" risk="73" state="Recommended" owner="JamesRabe" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The CMP should provide the encapsulated application an opportunity to perform a graceful transition to a known secure state. The conventional solution is to allow an application to be notified of the container lifecycle events. Resources, freed after container's removal, should be released back to the pool in a well known state and containers should be allowed to log any state changing events. The container's lifecycle (start/stop/scaled) is managed by CMP. From a developer's perspective, the application could be left in an unknown state if a containerized application is unaware of the container's transitions 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  It is essential to inform the application of the container's lifecycle events, so that it may take appropriate action to ensure a secure startup and shutdown. 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.11" supportedStandardRef="csa-container-architectures"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Review the container's stop start process and ensure that any related and relevant configurations have been applied to your applications.&amp;nbsp;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:10.518">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="APP-AA-1.1.2" name="Limit credential exposure" issueId="" issueLink="" platform="" cost="1" risk="73" state="Recommended" owner="JamesRabe" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Harden credentials before deploying applications 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Plain text (non-encrypted) credentials (account passwords, SSH Keys, DevOps secrets, etc.) may be embedded into source code because it helps to simplify deployments at scale.&amp;nbsp; This poses formidable security risks that are routinely exploited by malware and hackers. In some cases, a threat actor may insert hardcoded credentials to create a backdoor, allowing them persistent access to a device, application, or system. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Hardcoded credentials are favored cyberattack targets for password guessing exploits, allowing hackers and malware to hijack systems, and software. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Don't define credentials in your application code. Use managed identities for cloud resources to let your pod request access to cloud provider.&amp;nbsp; Avoid the use of fixed or shared credentials. 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="BeyondTrust: Hardcoded and Embedded Credentials are an IT Security Hazard" url="https://www.beyondtrust.com/blog/entry/hardcoded-and-embedded-credentials-are-an-it-security-hazard-heres-what-you-need-to-know"/>
            <reference name="Microsoft docs: Best practices for pod security in Azure Kubernetes Service" url="https://docs.microsoft.com/en-us/azure/aks/developer-best-practices-pod-security"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Review application code before deployment for embedded credentials.&amp;nbsp; Carry out pen testing of applications to find overlooked credential vulnerabilities.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:10.518">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SACA-3.1.10:1" name="Provide training and best practices guidance to developers" issueId="" issueLink="" platform="" cost="1" risk="78" state="Recommended" owner="JamesRabe" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Backend Developers should be informed and trained on threats arising from multi-tenancy on public clouds.&amp;nbsp; They also need to be trained and provided with templates for how to use the secret management feature within their apps so they avoid the practice of hard-coding static secrets within application code. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Backend Developers are accustomed to the practice of baking sensitive information into server code from the days when server-side was considered trusted environment. Raising the awareness of the nuances and threats present in current public cloud environments helps drive in the need to avoid such practices 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.10" supportedStandardRef="csa-container-architectures"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Ensure that relevant training is available and up to date.&amp;nbsp;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:10.518">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="IM-G-2.1.1" name="Remove components which are only required for development" issueId="" issueLink="" platform="" cost="1" risk="78" state="Recommended" owner="JamesRabe" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Tools that are essential during application development can create security risks in deployment 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Any unnecessary component is another potential entrance point for an attacker.&amp;nbsp; Debuggers and common tools like Curl that are useful to attackers should not be included in images in deployment. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Perform an analysis of the entire container before deployment and remove any components or functions you do not need. 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="StackRox: Kubernetes Security 101" url="https://www.stackrox.com/post/2020/05/kubernetes-security-101/"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Perform a suitable scan based on your operating system for extraneous tools and components.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:10.306">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="IM-G-2.3.2" name="Secure any dependencies" issueId="" issueLink="" platform="" cost="1" risk="78" state="Recommended" owner="JamesRabe" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Ensure that any dependencies used by applications are also secure. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;&lt;br&gt;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  It is hard to keep to track of all the packages an application uses and to make sure they are not vulnerable.&amp;nbsp; Even if you ensure that your own application is free of vulnerabilities, if the base packages and dependencies are not secure, the container could still be vulnerable to attacks. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Regularly perform a full dependency analysis for code to uncover your open source and other dependencies for any vulnerabilities they contain. 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="IBM: Journey to Kubernetes Security" url="https://developer.ibm.com/technologies/containers/articles/journey-to-kubernetes-security/"/>
            <reference name="snyk: Kubernetes Security" url="https://snyk.io/learn/kubernetes-security/"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Use a suitable vulnerability scanner to carry out a full dependency analysis for code to uncover your dependencies and any vulnerabilities they contain.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:10.306">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="IM-G-2.1.2" name="Secure the container base image" issueId="" issueLink="" platform="" cost="1" risk="78" state="Recommended" owner="JamesRabe" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;&lt;b&gt;Description: &lt;/b&gt;&lt;br&gt;Ensure that container images are built using secure and approved base images&lt;br&gt;&lt;br&gt;&lt;b&gt;Rationale:&lt;/b&gt;&lt;br&gt;Vulnerabilities in software packages can be exploited by hackers or malicious users to obtain unauthorized access to local or cloud resources. &lt;br&gt;&lt;br&gt;&lt;b&gt;Remediation:&lt;/b&gt;&lt;br&gt;Select minimal base images, add only what you require, and scan them for vulnerabilities.&amp;nbsp; &amp;nbsp;Ideally, the tool you choose for this function should be aware of your base image choice and alert you when there is an updated version of your base image, or if there are alternate base images that can reduce vulnerabilities.&lt;br&gt;&lt;br&gt;Only deploy authorized container images that you've analyzed, scanned, and signed (i.e. Software Supply Chain Security). Grafeas, TUF, and Notary can help here.&lt;br&gt;&lt;br&gt;Ensure that only images from image registries on allow lists are used to launch containers in your Kubernetes environment.&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Peter Benjamin: Kubernetes Security Best-Practices" url="https://dev.to/petermbenjamin/kubernetes-security-best-practices-hlk"/>
            <reference name="StackRox: Kubernetes Security 101" url="https://www.stackrox.com/post/2020/05/kubernetes-security-101/"/>
            <reference name="snyk: Kubernetes Security" url="https://snyk.io/learn/kubernetes-security/"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;&lt;font face="Times New Roman, serif"&gt;Please follow your 3rd party image scanning provider's guidelines for enabling Image Scanning.&lt;/font&gt;&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:10.306">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SACA-3.1.6:1" name="Sign images as part of the image build process and validate images before use" issueId="" issueLink="" platform="" cost="1" risk="78" state="Recommended" owner="JamesRabe" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Images should be signed as part of the build process and validated before used. Signing and validation can be achieved through GNU Privacy Guard (GPG) signatures on image contents or through similar methods. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Digital signing of image content at build time and validation of the signed data before usage ensures that image data cannot be tampered with between build and run time. 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.6" supportedStandardRef="csa-container-architectures"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Review your applications to ensure that the appropriate signing has taken place.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:10.306">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SACA-3.1.3:1" name="Use clear versioning schemes to identify application versions running in containers" issueId="" issueLink="" platform="" cost="1" risk="62" state="Recommended" owner="JamesRabe" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  By defining and using an accepted versioning scheme, a development team can have version numbers automatically implemented as part of a build process. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  By applying versions either to a container name, tag, or label, the developer is then able to easily identify application versions running in containers. 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.3" supportedStandardRef="csa-container-architectures"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Review container names, tags, or labels to check that they contain version numbers in line with your organizational or system policies.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:10.518">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="APP-AA-1.1.1" name="Use IAM for access control" issueId="" issueLink="" platform="" cost="1" risk="73" state="Recommended" owner="JamesRabe" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;div&gt; 
  &lt;b&gt;Description:&lt;/b&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   Implement authentication and access control with the Identity and Access Management (IAM) service provided by the cloud provider. 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;b&gt;Rationale:&lt;/b&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   Applications which have access to the full scope of the cloud provider may perform actions outside of their scope.&amp;nbsp; This can be exploited by attackers to gain access to large areas of the cluster. 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;b&gt;Remediation:&lt;/b&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   Use IAM roles to provide fine-grained access.&amp;nbsp; Assign roles only the specific amount of resources they need, or allow them&amp;nbsp; to perform only a particular amount of activities. 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="IBM: Journey to Kubernetes Security" url="https://developer.ibm.com/technologies/containers/articles/journey-to-kubernetes-security/"/>
            <reference name="we45: Security Essentials for a Developer - Kubernetes" url="https://we45.com/blog/security-essentials-for-a-developer-kubernetes/"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Use the relevant tools for your cloud provider to audit the use of IAM roles in applications.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:10.518">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SACA-3.1.17:1" name="Use standard, commonly available authentication systems" issueId="" issueLink="" platform="" cost="1" risk="78" state="Recommended" owner="JamesRabe" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  When either data or applications are encrypted within a container, having a reliable method to authorize use of encryption keys is required. Alternatively, applications must be written to support multiple authentication methods, introducing unnecessary complexity. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  By using common authentication methods, this ensures a predictable ability to authenticate and authorize the use of encryption keys across CMPs.&amp;nbsp; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.17" supportedStandardRef="csa-container-architectures"/>
            <standard ref="K06 - Broken Authentication" supportedStandardRef="owasp-kubernetes-top-10-2022"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Verify that an encryption policy or standard exists for your organization, and that it has been applied.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:10.518">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SACA-3.1.6:2" name="Use vulnerability scanning tools as part of the development process" issueId="" issueLink="" platform="" cost="1" risk="78" state="Recommended" owner="JamesRabe" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Developers should use vulnerability scanning tools as part of the development process and the CI pipeline, and integrate a vulnerability assessment into the build process. They will also want to consider failing a build if the vulnerability assessment fails. Once a vulnerability is identified, apply security patches to the vulnerable component and rebuild the image. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  A vulnerability scanner will identify and alert on the use of third-party components with known security vulnerabilities. Applying vulnerability scanning as part of the development cycle improves the security quality of the images, since well-known vulnerabilities are identified and patched before software gets into runtime environment. 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.6" supportedStandardRef="csa-container-architectures"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check if a protocol exists for vulnerability scanning in your organization and, if so, that it has been utilized.&amp;nbsp; If one does not exist, use one of the recommended tools to ensure that your own applications and containers do not contain vulnerabilities.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:10.306">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SACA-3.1.14:1" name="Utilize resource control features to orchestrate intra-container resource utilization, prioritization and allocation thresholds" issueId="" issueLink="" platform="" cost="1" risk="62" state="Recommended" owner="JamesRabe" library="microservices-library-dev" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Developers should expect the presence of horizontal infrastructure scaling capability but should avoid the need for vertical scaling by ensuring that the application can function within the parameters established by the configuration management team. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The developer must obtain the resource utilization and hardening parameters and incorporate those configurations into the software development environment and testing scripts. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The application developer must accept that the application under development will not have on-hand the entirety of computing resources available in the production environment. Even in the presence of auto-scale, auto-scaling capability has limits and does not scale out infinitely.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Without testing application functions within defined production parameters, the risk of poor application performance goes up, not down. Proper configuration of resource and security functionality as appropriate to the CMP in use ensures that a resource consumption fault or runaway container processes do not affect adjacent containers.&amp;nbsp; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.14" supportedStandardRef="csa-container-architectures"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Review the capabilities of the CMP in terms of the relevant thresholds and ensure your application is compliant.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-15T18:43:10.116">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="access-sensitive-data" name="Access sensitive data" desc="" library="microservices-library-dev">
          <threats>
            <threat ref="UNCONFIGURED-SECURITY-DATA" name="Sensitive data is exposed through weak security configurations" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="microservices-library-dev" editable="true">
              <desc>Weak security configurations make possible for an attacker to access sensitive data like API keys, credentials, etc.</desc>
              <riskRating confidentiality="100" integrity="75" availability="75" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="APP-AS-1">
                  <countermeasures>
                    <countermeasure ref="CSA-SACA-3.1.10:1" mitigation="20"/>
                    <countermeasure ref="CSA-SACA-3.1.10:2" mitigation="20"/>
                    <countermeasure ref="CSA-SACA-3.1.17:1" mitigation="20"/>
                    <countermeasure ref="CSA-SACA-3.1.17:2" mitigation="20"/>
                    <countermeasure ref="CSA-SACA-3.1.17:3" mitigation="20"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CSA-SACA-3.1.10:1" mitigation="20"/>
                <countermeasure ref="CSA-SACA-3.1.10:2" mitigation="20"/>
                <countermeasure ref="CSA-SACA-3.1.17:1" mitigation="20"/>
                <countermeasure ref="CSA-SACA-3.1.17:2" mitigation="20"/>
                <countermeasure ref="CSA-SACA-3.1.17:3" mitigation="20"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="authentication-and-authorization" name="Authentication and Authorization" desc="" library="microservices-library-dev">
          <threats>
            <threat ref="CLOUD-VULNERABILITIES" name="Attackers use known cloud vulnerabilities to access unauthorized data" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="microservices-library-dev" editable="true">
              <desc>Known vulnerabilities in a specific cloud environment are used to exploit a system, allowing an attacker to access unauthorized data</desc>
              <riskRating confidentiality="75" integrity="75" availability="100" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="APP-AA-1">
                  <countermeasures>
                    <countermeasure ref="APP-AA-1.1.1" mitigation="50"/>
                    <countermeasure ref="APP-AA-1.1.2" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="APP-AA-1.1.1" mitigation="50"/>
                <countermeasure ref="APP-AA-1.1.2" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="deployment" name="Deployment" desc="" library="microservices-library-dev">
          <threats>
            <threat ref="CAPEC-130" name="Excessive Allocation" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="microservices-library-dev" editable="true">
              <desc>&lt;p&gt;An adversary causes the target to allocate excessive resources to servicing the attackers' request, thereby reducing the resources available for legitimate services and degrading or denying services. Usually, this attack focuses on memory allocation, but any finite resource on the target could be the attacked, including bandwidth, processing cycles, or other resources.&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;This attack does not attempt to force this allocation through a large number of requests (that would be Resource Depletion through Flooding) but instead uses one or a small number of requests that are carefully formatted to force the target to allocate excessive resources to service this request(s). Often this attack takes advantage of a bug in the target to cause the target to allocate resources vastly beyond what would be needed for a normal request.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CO-D-1">
                  <countermeasures>
                    <countermeasure ref="CSA-SACA-3.1.14:1" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CSA-SACA-3.1.14:1" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="general" name="General" desc="" library="microservices-library-dev">
          <threats>
            <threat ref="IMAGE-MODIFICATION" name="Attackers compromise images by modifying their content" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="microservices-library-dev" editable="true">
              <desc>An attacker modifies/forges a microservices image to introduce vulnerabilities in the system</desc>
              <riskRating confidentiality="100" integrity="100" availability="75" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="IM-G-2">
                  <countermeasures>
                    <countermeasure ref="CSA-SACA-3.1.6:3" mitigation="20"/>
                    <countermeasure ref="IM-G-2.1.1" mitigation="16"/>
                    <countermeasure ref="IM-G-2.1.2" mitigation="16"/>
                    <countermeasure ref="IM-G-2.2.1" mitigation="16"/>
                    <countermeasure ref="IM-G-2.3.1" mitigation="16"/>
                    <countermeasure ref="IM-G-2.3.2" mitigation="16"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CSA-SACA-3.1.6:3" mitigation="20"/>
                <countermeasure ref="IM-G-2.1.1" mitigation="16"/>
                <countermeasure ref="IM-G-2.1.2" mitigation="16"/>
                <countermeasure ref="IM-G-2.2.1" mitigation="16"/>
                <countermeasure ref="IM-G-2.3.1" mitigation="16"/>
                <countermeasure ref="IM-G-2.3.2" mitigation="16"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="OWASP A1:2017" name="Attackers gain access to the sensitive data through injecting code in the repositories" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="microservices-library-dev" editable="true">
              <desc>Almost any source of data can be an injection vector: environment variables,
                                parameters, external and internal web services, and all types of users. Injection flaws
                                occur when an attacker can send hostile data to an interpreter.
                            </desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="IM-G-1">
                  <countermeasures>
                    <countermeasure ref="CSA-SAC-3.1.1:1" mitigation="34"/>
                    <countermeasure ref="CSA-SACA-3.1.6:1" mitigation="33"/>
                    <countermeasure ref="CSA-SACA-3.1.6:2" mitigation="33"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CSA-SAC-3.1.1:1" mitigation="34"/>
                <countermeasure ref="CSA-SACA-3.1.6:1" mitigation="33"/>
                <countermeasure ref="CSA-SACA-3.1.6:2" mitigation="33"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="SCALABILITY-ISSUES" name="Availability is compromised through attacks against scalability configuration" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="microservices-library-dev" editable="true">
              <desc>An attacker compromise the availability of a system by exploiting scalability configurations in order to consume resources</desc>
              <riskRating confidentiality="75" integrity="75" availability="100" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="APP-G-1">
                  <countermeasures>
                    <countermeasure ref="CSA-SACA-3.1.11:1" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CO-G-1">
                  <countermeasures>
                    <countermeasure ref="CSA-SACA-3.1.12:1" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CSA-SACA-3.1.11:1" mitigation="100"/>
                <countermeasure ref="CSA-SACA-3.1.12:1" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="UNAUTHORIZED-ACCESS-CONTAINER-VOLUMES" name="Sensitive data is compromised by unauthorized access to container volumes" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="microservices-library-dev" editable="true">
              <desc>An attacker find flaws to access container volumes without permission</desc>
              <riskRating confidentiality="100" integrity="75" availability="75" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CO-G-2">
                  <countermeasures>
                    <countermeasure ref="CSA-SACA-3.1.9:1" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CSA-SACA-3.1.9:1" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="logging-and-monitoring" name="Logging and Monitoring" desc="" library="microservices-library-dev">
          <threats>
            <threat ref="OWASP A10:2017" name="Exploitation of insufficient logging and monitoring" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="microservices-library-dev" editable="true">
              <desc>	&lt;p&gt;Exploitation of insufficient logging and monitoring is the bedrock of nearly every major incident.&lt;br /&gt;
 Attackers rely on the lack of monitoring and timely response to achieve their goals without being detected.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="APP-LM-1">
                  <countermeasures>
                    <countermeasure ref="CSA-SACA-3.1.3:1" mitigation="34"/>
                  </countermeasures>
                </weakness>
                <weakness ref="APP-LM-2">
                  <countermeasures>
                    <countermeasure ref="CSA-SACA-3.1.7:1" mitigation="33"/>
                    <countermeasure ref="CSA-SACA-3.1.7:2" mitigation="33"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CSA-SACA-3.1.3:1" mitigation="34"/>
                <countermeasure ref="CSA-SACA-3.1.7:1" mitigation="33"/>
                <countermeasure ref="CSA-SACA-3.1.7:2" mitigation="33"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="networking" name="Networking" desc="" library="microservices-library-dev">
          <threats>
            <threat ref="UNAUTHORIZED-ACCESS-NETWORK" name="Sensitive data is compromised through network access" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="microservices-library-dev" editable="true">
              <desc>Attackers gain undetected access to the network systems and changes made by the
                                attackers couldn't be audited or detected.
                            </desc>
              <riskRating confidentiality="50" integrity="50" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CO-N-1">
                  <countermeasures>
                    <countermeasure ref="CSA-SACA-3.1.5:1" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CSA-SACA-3.1.5:1" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
  </components>
</template>
