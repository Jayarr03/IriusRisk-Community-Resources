<?xml version="1.0" encoding="UTF-8"?>
<template ref="azure-iot-device-connectivity-for-healthcare-facilities" name="Azure - IoT device connectivity for healthcare facilities" tags="">
  <desc/>
  <diagram draft="false">
    <schema></schema>
  </diagram>
  <trustZones>
    <trustZone ref="public" uuid="6376d53e-6461-412b-8e04-7b3fe2b397de" name="Public" desc="Untrusted public zone" trustRating="1"/>
    <trustZone ref="internet" uuid="f0ba7722-39b6-4c81-8290-a30a248bb8d9" name="Internet" desc="Untrusted Internet public zone" trustRating="1"/>
  </trustZones>
  <questions/>
  <assets/>
  <settings/>
  <dataflows>
    <dataflow name="Blood Pressure Monitor (Empty) -&gt; 5G Radio Access Network (RAN) Device (Empty)" ref="025300ad-a553-4f76-bb4c-7f62b7506dc3" source="7b8920c9-2c52-47cf-9920-6171ad5d8204" target="089fe994-3899-406a-9e7b-302f35902b26">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Azure Machine Learning -&gt; Azure Time Series Insights" ref="2af9c52e-0903-454c-b632-7136c7e62f73" source="9aaf4f70-d8b3-4f7c-8951-ac8d0be3c9a4" target="47acafba-83ea-40b1-9c5a-583590853716">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Azure IoT Hub -&gt; Azure Digital Twins (Empty)" ref="2f0060da-e4c6-43be-8b20-6f5071ab859c" source="00df5ce6-b6a2-4be6-b32b-f09615eb0019" target="d7e6358e-7bbd-4423-9094-54e0b6106e9b">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Azure IoT Edge -&gt; Azure IoT Hub" ref="4726155e-8fe0-4a09-8af5-7fc9d22d6f82" source="b6268fac-0c0b-4733-a128-7caa17450787" target="00df5ce6-b6a2-4be6-b32b-f09615eb0019">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Air Quality Sensor (Empty) -&gt; 5G Radio Access Network (RAN) Device (Empty)" ref="b00e77fe-5b34-4fb6-b105-b5d73c05a352" source="66a46be1-ce6d-4f78-b84c-94107c0c753b" target="089fe994-3899-406a-9e7b-302f35902b26">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Azure IoT Hub -&gt; Azure Machine Learning" ref="b7c20891-d80b-493f-8743-a9ffd658e889" source="00df5ce6-b6a2-4be6-b32b-f09615eb0019" target="9aaf4f70-d8b3-4f7c-8951-ac8d0be3c9a4">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="5G Radio Access Network (RAN) Device (Empty) -&gt; Azure IoT Edge" ref="bea65910-0dc9-467c-8ce2-b7397899a3eb" source="089fe994-3899-406a-9e7b-302f35902b26" target="b6268fac-0c0b-4733-a128-7caa17450787">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Patient Monitor (Empty) -&gt; 5G Radio Access Network (RAN) Device (Empty)" ref="e1b0b66a-488c-4165-9e32-daa765602cc4" source="abd206fb-f60c-47dd-99e2-47fbe0afc31a" target="089fe994-3899-406a-9e7b-302f35902b26">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Azure Time Series Insights -&gt; Azure Data Lake Storage" ref="e5c55791-0f5c-4a24-b180-d82e580e3f66" source="47acafba-83ea-40b1-9c5a-583590853716" target="37a697d3-cb6d-4dd1-847a-7e64ebec4441">
      <assets/>
      <tags/>
    </dataflow>
  </dataflows>
  <customFields>
    <customField ref="APT" value=""/>
    <customField ref="Application Details" value=""/>
    <customField ref="Application Downtime Cost" value=""/>
    <customField ref="Application Type" value=""/>
    <customField ref="Apply Standard at all times" value="1"/>
    <customField ref="Contact Email" value=""/>
    <customField ref="Custom Field A" value=""/>
    <customField ref="DEL" value=""/>
    <customField ref="GPS Environment" value="NO"/>
    <customField ref="Hosting Location" value="GCP"/>
    <customField ref="Milestone 1" value=""/>
    <customField ref="Milestone 1 - Deadline" value=""/>
    <customField ref="Milestone 2" value=""/>
    <customField ref="Milestone 2 - Deadline" value=""/>
    <customField ref="Milestone 3" value=""/>
    <customField ref="Milestone 3 - Deadline" value=""/>
    <customField ref="Product Review Session Details" value=""/>
    <customField ref="Project Management Details" value=""/>
    <customField ref="Project Manager" value=""/>
    <customField ref="Project Number" value="_::_"/>
    <customField ref="Project Owner Email" value="jrabe@iriusrisk.com"/>
    <customField ref="Ready for Workflow advancement?" value="NO"/>
    <customField ref="Requirements" value=""/>
    <customField ref="Test Custom" value=""/>
    <customField ref="Third Party Contact" value=""/>
    <customField ref="Third Party Organization" value=""/>
    <customField ref="UPS Template Picker" value="GCP Template"/>
    <customField ref="Use Case" value=""/>
    <customField ref="User Email Field" value=""/>
    <customField ref="VZ - Requirements" value="Type 1||Type 2"/>
  </customFields>
  <components>
    <component uuid="d8a034d7-6db7-4d58-92e0-4966cd9c88ee" diagramComponentId="1ef06354-5e60-4ad8-af90-db521566fda0" ref="66a46be1-ce6d-4f78-b84c-94107c0c753b" name="Air Quality Sensor (Empty)" desc="" library="CS-Default" parentComponentRef="d02aad8a-ada6-44e2-85a9-61fbe1f72465" componentDefinitionRef="empty-component">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="internet"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses/>
      <countermeasures/>
      <usecases/>
    </component>
    <component uuid="9b286afe-9258-4fbb-99d1-8d00fe0cd786" diagramComponentId="e70e68db-e231-435f-840d-b469d773c6e4" ref="00df5ce6-b6a2-4be6-b32b-f09615eb0019" name="Azure IoT Hub" desc="" library="Microsoft-Azure" parentComponentRef="ce742726-74c5-4638-87db-954bb474c93e" componentDefinitionRef="CD-MICROSOFT-AZURE-IOT-HUB">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses>
        <weakness ref="AZURE-VNET01" name="Networks for Azure resources are not properly segmented. Without proper segmentation, when attackers gain access to one resource, any other resources in the same VNet are compromised" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        Resources in the same VNet are compromised because when one of them is attacked and the
                        attackers gain access, they also gain access to all resources.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            Identify the resources and the Microsoft Azure instances.
                            &lt;/div&gt;
                            &lt;div&gt;
                            Check that the resources are in the correct VNet.
                            &lt;/div&gt;
                            &lt;div&gt;
                            Check that the Microsoft Azure instances&amp;nbsp;are into different VNets.
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-20T17:12:07.193">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="C-AZURE-IOT-HUB1" name="Secure Azure IoT Hub using Azure Private link" issueId="" issueLink="" platform="" cost="0" risk="61" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Secure Azure IoT Hub using Azure Private link&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; IoT Hub does not support deploying directly into a virtual network, because of this you cannot leverage certain networking features with the offering's resources such as network security groups, route tables, or other network-dependent appliances such as an Azure Firewall.&lt;br&gt; To secure IoT Hub to a private networking environment, use Azure Private Link.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Set up a private endpoint for IoT Hub ingress&lt;/p&gt; 
&lt;p&gt;Private endpoint works for IoT Hub device APIs (like device-to-cloud messages) as well as service APIs (like creating and updating devices).&lt;/p&gt; 
&lt;p&gt;1. In Azure portal, select Networking, Private endpoint connections, and click the + Private endpoint.&lt;/p&gt; 
&lt;p&gt;2. Provide the subscription, resource group, name, and region to create the new private endpoint in. Ideally, private endpoint should be created in the same region as your hub.&lt;/p&gt; 
&lt;p&gt;3. Click Next: Resource, and provide the subscription for your IoT Hub resource, and select "Microsoft.Devices/IotHubs" as resource type, your IoT Hub name as resource, and iotHub as target subresource.&lt;/p&gt; 
&lt;p&gt;4. Click Next: Configuration and provide your virtual network and subnet to create the private endpoint in. Select the option to integrate with Azure private DNS zone, if desired.&lt;/p&gt; 
&lt;p&gt;5. Click Next: Tags, and optionally provide any tags for your resource.&lt;/p&gt; 
&lt;p&gt;6. Click Review + create to create your private link resource.&lt;/p&gt; 
&lt;p&gt;For more information about egress connectivity to from IoT Hub to other Azure resources, please see Reference URL.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="IoT Hub support for virtual networks with Private Link and Managed Identity" url="https://docs.microsoft.com/en-us/azure/iot-hub/virtual-network-support"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>	&lt;p&gt;Ensure that Azure IoT Hub is secured using Azure Private link.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-20T17:12:07.152">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="NETWORKING" name="Networking" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="AZURE-UNAUTHORISED-CONNECTION" name="Attackers perform unauthorized network access" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;Attackers could perform unauthorized network access to the resources through misconfigured ports or security network configurations.&lt;/p&gt;</desc>
              <riskRating confidentiality="25" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-VNET01">
                  <countermeasures>
                    <countermeasure ref="C-AZURE-IOT-HUB1" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-AZURE-IOT-HUB1" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="70ca524e-05e9-4d60-aa7a-9b50bc382dd5" diagramComponentId="ad516550-013e-4f2e-9b6d-a75dd4dd69f5" ref="37a697d3-cb6d-4dd1-847a-7e64ebec4441" name="Azure Data Lake Storage" desc="" library="Microsoft-Azure" parentComponentRef="ce742726-74c5-4638-87db-954bb474c93e" componentDefinitionRef="CD-MICROSOFT-AZURE-DATA-LAKE-STORAGE">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses>
        <weakness ref="CWE-16" name="Configuration" state="0" impact="100" issueId="" issueLink="">
          <desc>Weaknesses in this category are typically introduced during the
                        configuration of the software.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-20T17:12:09.203">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CWE-778" name="Insufficient Logging" state="0" impact="100" issueId="" issueLink="">
          <desc>When a critical security event occurs, the software either does not record the event or omits important details about the event when logging it. When critical security events are not logged properly, such as in the case of a failed login attempt, this can make malicious behavior more difficult to detect and may hinder forensic analyses after a successful attack.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-20T17:12:09.202">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AZURE-ACCESS-01" name="Misconfigured credentials for groups and roles" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        The credentials for groups and roles are not correctly configured and there are user accounts with more privileges than necessary.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each user has got assigned the correct groups.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All groups&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each group has got assigned the correct roles to achieve principle of
                            least privilege.&lt;/li&gt;
                            &lt;li&gt;Check that the roles for the Cloud Service are well assigned.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;div&gt;
                            &lt;/div&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-20T17:12:09.203">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AZURE-VNET01" name="Networks for Azure resources are not properly segmented. Without proper segmentation, when attackers gain access to one resource, any other resources in the same VNet are compromised" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        Resources in the same VNet are compromised because when one of them is attacked and the
                        attackers gain access, they also gain access to all resources.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            Identify the resources and the Microsoft Azure instances.
                            &lt;/div&gt;
                            &lt;div&gt;
                            Check that the resources are in the correct VNet.
                            &lt;/div&gt;
                            &lt;div&gt;
                            Check that the Microsoft Azure instances&amp;nbsp;are into different VNets.
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-20T17:12:09.202">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AZURE-ACCESS-DATA-01" name="Sensitive data are accessible" state="0" impact="100" issueId="" issueLink="">
          <desc>Sensitive data are not encrypted and the sensitive data is exposed.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-20T17:12:09.203">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AZURE-MONITOR-BACKUPS" name="There is not a recover or backup mechanism" state="0" impact="100" issueId="" issueLink="">
          <desc>There are not any processes or mechanisms to regularly save the data to another place in order to have an older version of the data to restore in case of loss. Consequently the data cannot be easily recovered or they cannot be recovered at all.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-20T17:12:09.203">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AZURE-NET-01" name="Unauthorized connection attempts on open ports" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        Receiving unauthorized connections to open ports makes systems vulnerable to attacks. To
                        avoid this, access to the network must be as restricted as possible, so that only the necessary
                        ports are open and the minimum inbound traffic is accepted.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Check that each Azure resources have got their Network Security Groups.&lt;/li&gt;
                            &lt;li&gt;Check that a set of these groups achieve with the principle of the least
                            privilege.&lt;/li&gt;
                            &lt;li&gt;Check that the inbound/outbound security rules are enabled and correctly
                            configured.&lt;/li&gt;
                            &lt;li&gt;In &amp;quot;Inbound security rules&amp;quot;, check that all the traffic from
                            0.0.0.0/0&amp;nbsp;is blocked.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-20T17:12:09.203">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="AZ-S03" name="Configure Azure Storage settings for each storage" issueId="" issueLink="" platform="" cost="0" risk="59" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;There are some options that must be selected to secure Azure Storages.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Checklist:&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Ensure that 'Secure transfer required' is set to 'Enabled'&lt;/li&gt;&lt;li&gt;Ensure that storage account access keys are periodically regenerated&lt;/li&gt;&lt;li&gt;Ensure Storage logging is enabled for Queue service for read, write, and delete requests&lt;/li&gt;&lt;li&gt;Ensure that shared access signature tokens expire within an hour&lt;/li&gt;&lt;li&gt;Ensure that 'Public access level' is set to Private for blob containers&lt;/li&gt;&lt;li&gt;Ensure default network access rule for Storage Accounts is set to deny&lt;/li&gt;&lt;li&gt;Ensure 'Trusted Microsoft Services' is enabled for Storage Account access&lt;/li&gt;&lt;li&gt;Ensure soft delete is enabled for Azure Storage&lt;/li&gt;&lt;li&gt;Ensure storage for critical data are encrypted with Customer Managed Key&lt;/li&gt;&lt;li&gt;Ensure Storage logging is enabled for Blob service for read, write, and delete requests&lt;/li&gt;&lt;li&gt;Ensure Storage logging is enabled for Table service for read, write, and delete requests&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;From Azure Console&lt;/strong&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Go to Storage Accounts&lt;/li&gt;&lt;li&gt;For each storage account&lt;ol&gt;&lt;li&gt;Go to Configuration&lt;ol&gt;&lt;li&gt;Go to Allow Blob public access&lt;ol&gt;&lt;li&gt;Set Disabled if no anonymous access is needed on the storage account&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;Set Secure transfer required to Enabled&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;Go to Diagnostics settings (classic) from Monitoring (classic)&lt;ol&gt;&lt;li&gt;Set the Status to On, if set to Off.&lt;/li&gt;&lt;li&gt;Select Queue properties.&lt;ol&gt;&lt;li&gt;Select Read, Write and Delete options under the Logging section to enable Storage Logging for Queue service.&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;Select Blob properties&lt;ol&gt;&lt;li&gt;Select Read, Write and Delete options under the Logging section to enable Storage Logging for Blob service.&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;Select Table properties&lt;ol&gt;&lt;li&gt;Select Read, Write and Delete options under the Logging section to enable Storage Logging for Table service.&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;Go to Shared access signature&lt;ol&gt;&lt;li&gt;Set Start and expiry date/time within an hour&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;Go to Containers under BLOB SERVICE&lt;ol&gt;&lt;li&gt;For each container, click Access policy&lt;ol&gt;&lt;li&gt;Set Public access level to Private (no anonymous access)&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;Go to Firewalls and virtual networks&lt;ol&gt;&lt;li&gt;Ensure that you have elected to allow access from Selected networks.&lt;/li&gt;&lt;li&gt;Enable check box for Allow trusted Microsoft services to access this storage account.&lt;/li&gt;&lt;li&gt;Add rules to allow traffic from specific network.&lt;/li&gt;&lt;li&gt;Click Save to apply your changes.&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;Go to Data Protection&lt;ol&gt;&lt;li&gt;Select set soft delete enabled and enter a number of days you want to retain soft deleted data.&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;Go to Encryption&lt;ol&gt;&lt;li&gt;Set Customer Managed Keys&lt;/li&gt;&lt;li&gt;Select the Encryption key and enter the appropriate setting value&lt;/li&gt;&lt;li&gt;Click Save&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;Ensure that storage account access keys are periodically regenerated by following Microsoft Azure documentation for &lt;a href="https://docs.microsoft.com/en-us/azure/storage/common/storage-account-create?tabs=azure-portal#regenerate-storage-access-keys"&gt;regenerating storage account access keys&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;Alternatively, some of these actions can be done with the Azure CLI 2.0.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Using Azure Command Line Interface 2.0&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Use the below command to enable Secure transfer required for a Storage Account&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;az storage account update --name &amp;lt;storageAccountName&amp;gt; --resource-group &amp;lt;resourceGroupName&amp;gt; --https-only true&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Use the below command to enable the Storage Logging for Queue service.&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;az storage logging update --account-name &amp;lt;storageAccountName&amp;gt; --account-key &amp;lt;storageAccountKey&amp;gt; --services q --log rwd --retention 90&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Ensure the below command output contains null&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;az storage container list --account-name &amp;lt;accountName&amp;gt; --account-key &amp;lt;accountKey&amp;gt; --query '[*].properties.publicAccess'&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Ensure allowBlobPublicAccess is false&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;az storage account show --name &amp;lt;storage-account&amp;gt; --resource-group &amp;lt;resource-group&amp;gt; --query allowBlobPublicAccess --output tsv&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Identify the container name from previous command. Set the permission for public access to private(off) for the above container name, using the below command&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;az storage container set-permission --name &amp;lt;containerName&amp;gt; --public-access off --account-name &amp;lt;accountName&amp;gt; --account-key &amp;lt;accountKey&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Set Disabled if no anonymous access is wanted on the storage account&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;az storage account update --name &amp;lt;storage-account&amp;gt; --resource-group &amp;lt;resource-group&amp;gt; --allow-blob-public-access false&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Use the below command to update default-action to Deny.&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;az storage account update --name &amp;lt;StorageAccountName&amp;gt; --resource-group &amp;lt;resourceGroupName&amp;gt; --default-action Deny&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Use the below command to update trusted Microsoft services.&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;az storage account update --name &amp;lt;StorageAccountName&amp;gt; --resource-group &amp;lt;resourceGroupName&amp;gt; --bypass AzureServices&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Update retention days in below command&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;az storage blob service-properties delete-policy update --days-retained &amp;lt;RetentionDaysValue&amp;gt; --account-name &amp;lt;StorageAccountName&amp;gt; --enable true&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Use the below command to enable the Storage Logging for Blob service.&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;az storage logging update --account-name &amp;lt;storageAccountName&amp;gt; --account-key &amp;lt;storageAccountKey&amp;gt; --services b --log rwd --retention 90&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Use the below command to enable the Storage Logging for Table service.&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;az storage logging update --account-name &amp;lt;storageAccountName&amp;gt; --account-key &amp;lt;storageAccountKey&amp;gt; --services t --log rwd --retention 90&lt;/p&gt;&lt;/blockquote&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1" supportedStandardRef="cis-azure-standard"/>
            <standard ref="3.1" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="3.10" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="3.11" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="3.2" supportedStandardRef="cis-azure-standard"/>
            <standard ref="3.2" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="3.3" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="3.4" supportedStandardRef="cis-azure-standard"/>
            <standard ref="3.4" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="3.5" supportedStandardRef="cis-azure-standard"/>
            <standard ref="3.5" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="3.6" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="3.7" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="3.8" supportedStandardRef="cis-azure-standard"/>
            <standard ref="3.8" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="3.9" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="API7:2019-Security Misconfiguration" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Follow the paths detailed in the description and ensure the values are set correctly.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-20T17:12:09.117">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="C-AZURE-STORAGE2" name="Configure operational backup for Azure Blob Storage" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Configure operational backup for Azure Blob Storage&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Azure Backup lets you easily configure operational backup for protecting block blobs in your storage accounts.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Enable Azure Backup and configure the backup source on a desired frequency and with a desired retention period. Azure Backup lets you easily configure operational backup for protecting block blobs in your storage accounts. Backup of blobs is configured at the storage account level. So, all blobs in the storage account are protected with operational backup.&lt;br&gt; You can configure backup for multiple storage accounts using the Backup Center. You can also configure backup for a storage account using the storage account's Data Protection properties.&lt;/p&gt; 
&lt;p&gt;Note&lt;br&gt; Azure Backup is currently only supported for Azure Blob storage. Queue and table data can be backed up by using the AzCopy command line tool.&lt;/p&gt; 
&lt;p&gt;For detailed information please see Reference URLs.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Configure operational backup for Azure Blobs" url="https://learn.microsoft.com/en-us/azure/backup/blob-backup-configure-manage"/>
            <reference name="Overview of operational backup for Azure Blobs" url="https://learn.microsoft.com/en-us/azure/backup/blob-backup-overview"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>	&lt;p&gt;Ensure you have configured operational backup for Azure Blob Storage.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-20T17:12:09.118">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-AZURE-STORAGE4" name="Configure private endpoints for Azure Storage" issueId="" issueLink="" platform="" cost="0" risk="61" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Configure private endpoints for Azure Storage&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; You can use private endpoints for your Azure Storage accounts to allow clients on a virtual network (VNet) to securely access data over a Private Link. The private endpoint uses a separate IP address from the VNet address space for each storage account service. Network traffic between the clients on the VNet and the storage account traverses over the VNet and a private link on the Microsoft backbone network, eliminating exposure from the public internet.&lt;/p&gt; 
&lt;p&gt;Note&lt;br&gt; Private endpoints are not available for general-purpose v1 storage accounts.&lt;/p&gt; 
&lt;p&gt;Using private endpoints for your storage account enables you to:&lt;br&gt; - Secure your storage account by configuring the storage firewall to block all connections on the public endpoint for the storage service.&lt;br&gt; - Increase security for the virtual network (VNet), by enabling you to block exfiltration of data from the VNet.&lt;br&gt; - Securely connect to storage accounts from on-premises networks that connect to the VNet using VPN or ExpressRoutes with private-peering.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Create storage account with a private endpoint&lt;/p&gt; 
&lt;p&gt;In this section, you'll create a storage account and configure the private endpoint.&lt;/p&gt; 
&lt;p&gt;1. In the left-hand menu, select Create a resource &amp;gt; Storage &amp;gt; Storage account, or search for Storage account in the search box.&lt;/p&gt; 
&lt;p&gt;2. In the Basics tab of Create storage account enter or select the following information:&lt;/p&gt; 
&lt;p&gt;Project Details &lt;br&gt; Subscription: Select your Azure subscription.&lt;br&gt; Resource Group: Select myResourceGroup.&lt;br&gt; Instance details &lt;br&gt; Storage account name: Enter mystorageaccount. If the name is unavailable, enter a unique name.&lt;br&gt; Location: Select (US) East US.&lt;br&gt; Performance: Leave the default Standard.&lt;br&gt; Redundancy: Select Locally-redundant storage (LRS).&lt;/p&gt; 
&lt;p&gt;3. Select the Networking tab or select the Next: Networking button.&lt;/p&gt; 
&lt;p&gt;4. In the Networking tab, under Network connectivity select Disable public access and use private access.&lt;/p&gt; 
&lt;p&gt;5. In Private endpoint, select + Add private endpoint.&lt;/p&gt; 
&lt;p&gt;6. In Create private endpoint enter or select the following information:&lt;/p&gt; 
&lt;p&gt;Subscription: Select your Azure subscription.&lt;br&gt; Resource Group: Select myResourceGroup.&lt;br&gt; Location: Select East US.&lt;br&gt; Name: Enter myPrivateEndpoint.&lt;br&gt; Storage sub-resource: Leave the default blob.&lt;br&gt; Networking&lt;br&gt; Virtual network: Select myVNet.&lt;br&gt; Subnet: Select mySubnet.&lt;br&gt; Private DNS integration&lt;br&gt; Integrate with private DNS zone: Leave the default Yes.&lt;br&gt; Private DNS Zone: Leave the default (New) privatelink.blob.core.windows.net.&lt;/p&gt; 
&lt;p&gt;7. Select OK.&lt;/p&gt; 
&lt;p&gt;8. Select Review + create.&lt;/p&gt; 
&lt;p&gt;9. Select Create.&lt;/p&gt; 
&lt;p&gt;10. Select Resource groups in the left-hand navigation pane.&lt;/p&gt; 
&lt;p&gt;11. Select myResourceGroup.&lt;/p&gt; 
&lt;p&gt;12. Select the storage account you created in the previous steps.&lt;/p&gt; 
&lt;p&gt;13. In the Security + networking section of the storage account, select Access keys.&lt;/p&gt; 
&lt;p&gt;14. Select Show keys, then select copy on the Connection string for key1.&lt;/p&gt; 
&lt;p&gt;For more information please see Reference URLs.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Tutorial: Connect to a storage account using an Azure Private Endpoint" url="https://learn.microsoft.com/en-us/azure/private-link/tutorial-private-endpoint-storage-portal"/>
            <reference name="Use private endpoints for Azure Storage" url="https://learn.microsoft.com/en-us/azure/storage/common/storage-private-endpoints"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>	&lt;p&gt;Test connectivity to private endpoint&lt;/p&gt;

	&lt;p&gt;In this section, you'll use the virtual machine described in Reference URLs to connect to the storage account across the private endpoint using Microsoft Azure Storage Explorer.&lt;/p&gt;

	&lt;p&gt;1. Select Resource groups in the left-hand navigation pane.&lt;/p&gt;

	&lt;p&gt;2. Select myResourceGroup.&lt;/p&gt;

	&lt;p&gt;3. Select myVM.&lt;/p&gt;

	&lt;p&gt;4. On the overview page for myVM, select Connect then Bastion.&lt;/p&gt;

	&lt;p&gt;5. Enter the username and password that you entered during the virtual machine creation.&lt;/p&gt;

	&lt;p&gt;6. Select Connect button.&lt;/p&gt;

	&lt;p&gt;7. Open Windows PowerShell on the server after you connect.&lt;/p&gt;

	&lt;p&gt;8. Enter nslookup &lt;storage-account-name&gt;.blob.core.windows.net. Replace &lt;storage-account-name&gt; with the name of the storage account you created in the previous steps. You'll receive a message similar to what is displayed below:&lt;/p&gt;

	&lt;p&gt;Server:  UnKnown&lt;br /&gt;
Address:  168.63.129.16&lt;/p&gt;

	&lt;p&gt;Non-authoritative answer:&lt;br /&gt;
Name:    mystorageaccount.privatelink.blob.core.windows.net&lt;br /&gt;
Address:  10.1.0.5&lt;br /&gt;
Aliases:  mystorageaccount.blob.core.windows.net&lt;br /&gt;
A private IP address of 10.1.0.5 is returned for the storage account name. This address is in mySubnet subnet of myVNet virtual network you created previously.&lt;/p&gt;

	&lt;p&gt;9. Install Microsoft Azure Storage Explorer on the virtual machine.&lt;/p&gt;

	&lt;p&gt;10. Select Finish after the Microsoft Azure Storage Explorer is installed. Leave the box checked to open the application.&lt;/p&gt;

	&lt;p&gt;11. In the Select Resource screen, select Storage account or service to add a connection in Microsoft Azure Storage Explorer to your storage account that you created in the previous steps.&lt;/p&gt;

	&lt;p&gt;12. In the Select Connection Method screen, select Connection string, and then Next.&lt;/p&gt;

	&lt;p&gt;13. In the box under Connection String, paste the connection string from the storage account you copied in the previous steps. The storage account name will automatically populate in the box under Display name.&lt;/p&gt;

	&lt;p&gt;14. Select Next.&lt;/p&gt;

	&lt;p&gt;15. Verify the settings are correct in Summary.&lt;/p&gt;

	&lt;p&gt;16. Select Connect, then select mystorageaccount from the Storage Accounts left-hand menu.&lt;/p&gt;

	&lt;p&gt;17. Under Blob Containers, you see mycontainer that you created in the previous steps.&lt;/p&gt;

	&lt;p&gt;18. Close the connection to myVM.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-20T17:12:09.118">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-IDS-IPS" name="Deploy network-based IDS/IPS" issueId="" issueLink="" platform="" cost="0" risk="61" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Deploy network-based intrusion detection/intrusion prevention systems (IDS/IPS)&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Select an offer from Azure Marketplace that supports IDS/IPS functionality with payload inspection capabilities. If intrusion detection and/or prevention based on payload inspection is not a requirement, Azure Firewall with Threat Intelligence can be used. Azure Firewall Threat intelligence-based filtering can alert and deny traffic to and from known malicious IP addresses and domains. The IP addresses and domains are sourced from the Microsoft Threat Intelligence feed.&lt;/p&gt; 
&lt;p&gt;Deploy the firewall solution of your choice at each of your organization's network boundaries to detect and/or deny malicious traffic.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Set up the network&lt;/p&gt; 
&lt;p&gt;First, create a resource group to contain the resources needed to deploy the firewall. Then create a VNet, subnets, and a test server.&lt;br&gt; For more information please see Reference URL.&lt;/p&gt; 
&lt;p&gt;Deploy the firewall&lt;/p&gt; 
&lt;p&gt;Deploy the firewall into the VNet.&lt;/p&gt; 
&lt;p&gt;1. On the Azure portal menu or from the Home page, select Create a resource.&lt;/p&gt; 
&lt;p&gt;2. Type firewall in the search box and press Enter.&lt;/p&gt; 
&lt;p&gt;3. Select Firewall and then select Create.&lt;/p&gt; 
&lt;p&gt;4. On the Create a Firewall page, use the following values to configure the firewall:&lt;/p&gt; 
&lt;p&gt;Subscription: &lt;br&gt; Resource group: Test-FW-RG&lt;br&gt; Name: Test-FW01&lt;br&gt; Location: Select the same location that you used previously&lt;br&gt; Choose a virtual network: Use existing: Test-FW-VN&lt;br&gt; Public IP address: Add new&lt;br&gt; Name: fw-pip&lt;/p&gt; 
&lt;p&gt;5. Select Review + create.&lt;/p&gt; 
&lt;p&gt;6. Review the summary, and then select Create to create the firewall.&lt;/p&gt; 
&lt;p&gt;This will take a few minutes to deploy.&lt;/p&gt; 
&lt;p&gt;7. After deployment completes, go to the Test-FW-RG resource group, and select the Test-FW01 firewall.&lt;/p&gt; 
&lt;p&gt;8. Note the firewall private and public IP addresses. You will use these addresses later.&lt;/p&gt; 
&lt;p&gt;Create a default route&lt;/p&gt; 
&lt;p&gt;For the Workload-SN subnet, configure the outbound default route to go through the firewall.&lt;/p&gt; 
&lt;p&gt;1. On the Azure portal menu, select All services or search for and select All services from any page.&lt;/p&gt; 
&lt;p&gt;2. Under Networking, select Route tables.&lt;/p&gt; 
&lt;p&gt;3. Select Add.&lt;/p&gt; 
&lt;p&gt;4. For Name, type Firewall-route.&lt;/p&gt; 
&lt;p&gt;5. For Subscription, select your subscription.&lt;/p&gt; 
&lt;p&gt;6. For Resource group, select Test-FW-RG.&lt;/p&gt; 
&lt;p&gt;7. For Location, select the same location that you used previously.&lt;/p&gt; 
&lt;p&gt;8. Select Create.&lt;/p&gt; 
&lt;p&gt;9. Select Refresh, and then select the Firewall-route route table.&lt;/p&gt; 
&lt;p&gt;10. Select Subnets and then select Associate.&lt;/p&gt; 
&lt;p&gt;11. Select Virtual network &amp;gt; Test-FW-VN.&lt;/p&gt; 
&lt;p&gt;12. For Subnet, select Workload-SN. Make sure that you select only the Workload-SN subnet for this route, otherwise your firewall will not work correctly.&lt;/p&gt; 
&lt;p&gt;13. Select OK.&lt;/p&gt; 
&lt;p&gt;14. Select Routes and then select Add.&lt;/p&gt; 
&lt;p&gt;15. For Route name, type fw-dg.&lt;/p&gt; 
&lt;p&gt;16. For Address prefix, type 0.0.0.0/0.&lt;/p&gt; 
&lt;p&gt;17. For Next hop type, select Virtual appliance.&lt;/p&gt; 
&lt;p&gt;Azure Firewall is actually a managed service, but virtual appliance works in this situation.&lt;/p&gt; 
&lt;p&gt;18. For Next hop address, type the private IP address for the firewall that you noted previously.&lt;/p&gt; 
&lt;p&gt;19. Select OK.&lt;/p&gt; 
&lt;p&gt;Configure an application rule&lt;/p&gt; 
&lt;p&gt;This is the application rule that allows outbound access to www.google.com.&lt;/p&gt; 
&lt;p&gt;1. Open the Test-FW-RG, and select the Test-FW01 firewall.&lt;br&gt; 2. On the Test-FW01 page, under Settings, select Rules.&lt;br&gt; 3. Select the Application rule collection tab.&lt;br&gt; 4. Select Add application rule collection.&lt;br&gt; 5. For Name, type App-Coll01.&lt;br&gt; 6. For Priority, type 200.&lt;br&gt; 7. For Action, select Allow.&lt;br&gt; 8. Under Rules, Target FQDNs, for Name, type Allow-Google.&lt;br&gt; 9. For Source type, select IP address.&lt;br&gt; 10. For Source, type 10.0.2.0/24.&lt;br&gt; 11. For Protocol:port, type http, https.&lt;br&gt; 12. For Target FQDNS, type www.google.com&lt;br&gt; 13. Select Add.&lt;/p&gt; 
&lt;p&gt;Azure Firewall includes a built-in rule collection for infrastructure FQDNs that are allowed by default. These FQDNs are specific for the platform and cannot be used for other purposes. For more information, see Infrastructure FQDNs.&lt;/p&gt; 
&lt;p&gt;Configure a network rule&lt;/p&gt; 
&lt;p&gt;This is the network rule that allows outbound access to two IP addresses at port 53 (DNS).&lt;/p&gt; 
&lt;p&gt;1. Select the Network rule collection tab.&lt;/p&gt; 
&lt;p&gt;2. Select Add network rule collection.&lt;/p&gt; 
&lt;p&gt;3. For Name, type Net-Coll01.&lt;/p&gt; 
&lt;p&gt;4. For Priority, type 200.&lt;/p&gt; 
&lt;p&gt;5. For Action, select Allow.&lt;/p&gt; 
&lt;p&gt;6. Under Rules, IP addresses, for Name, type Allow-DNS.&lt;/p&gt; 
&lt;p&gt;7. For Protocol, select UDP.&lt;/p&gt; 
&lt;p&gt;8. For Source type, select IP address.&lt;/p&gt; 
&lt;p&gt;9. For Source, type 10.0.2.0/24.&lt;/p&gt; 
&lt;p&gt;10. For Destination type select IP address.&lt;/p&gt; 
&lt;p&gt;11. For Destination address, type 209.244.0.3,209.244.0.4&lt;/p&gt; 
&lt;p&gt;These are public DNS servers operated by CenturyLink.&lt;/p&gt; 
&lt;p&gt;12. For Destination Ports, type 53.&lt;/p&gt; 
&lt;p&gt;13. Select Add.&lt;/p&gt; 
&lt;p&gt;Configure a DNAT rule&lt;/p&gt; 
&lt;p&gt;This rule allows you to connect a remote desktop to the Srv-Work virtual machine through the firewall.&lt;/p&gt; 
&lt;p&gt;1. Select the NAT rule collection tab.&lt;br&gt; 2. Select Add NAT rule collection.&lt;br&gt; 3. For Name, type rdp.&lt;br&gt; 4. For Priority, type 200.&lt;br&gt; 5. Under Rules, for Name, type rdp-nat.&lt;br&gt; 6. For Protocol, select TCP.&lt;br&gt; 7. For Source type, select IP address.&lt;br&gt; 8. For Source, type *.&lt;br&gt; 9. For Destination address, type the firewall public IP address.&lt;br&gt; 10. For Destination Ports, type 3389.&lt;br&gt; 11. For Translated address, type the Srv-work private IP address.&lt;br&gt; 12. For Translated port, type 3389.&lt;br&gt; 13. Select Add.&lt;/p&gt; 
&lt;p&gt;Change the primary and secondary DNS address for the Srv-Work network interface&lt;/p&gt; 
&lt;p&gt;For testing purposes in this tutorial, configure the server's primary and secondary DNS addresses. This is not a general Azure Firewall requirement.&lt;/p&gt; 
&lt;p&gt;1. On the Azure portal menu, select Resource groups or search for and select Resource groups from any page. Select the Test-FW-RG resource group.&lt;br&gt; 2. Select the network interface for the Srv-Work virtual machine.&lt;br&gt; 3. Under Settings, select DNS servers.&lt;br&gt; 4. Under DNS servers, select Custom.&lt;br&gt; 5. Type 209.244.0.3 in the Add DNS server text box, and 209.244.0.4 in the next text box.&lt;br&gt; 6. Select Save.&lt;br&gt; 7. Restart the Srv-Work virtual machine.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Tutorial: Deploy and configure Azure Firewall using the Azure portal" url="https://docs.microsoft.com/en-us/azure/firewall/tutorial-firewall-deploy-portal"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Test the firewall&lt;/p&gt;

  &lt;p&gt;Now, test the firewall to confirm that it works as expected.&lt;/p&gt;

  &lt;p&gt;1. Connect a remote desktop to firewall public IP address and sign in to the Srv-Work virtual machine.&lt;/p&gt;

  &lt;p&gt;2. Open Internet Explorer and browse to https://www.google.com.&lt;/p&gt;

  &lt;p&gt;3. Select OK &gt; Close on the Internet Explorer security alerts.&lt;/p&gt;

  &lt;p&gt;You should see the Google home page.&lt;/p&gt;

  &lt;p&gt;4. Browse to https://www.microsoft.com.&lt;/p&gt;

  &lt;p&gt;You should be blocked by the firewall.&lt;/p&gt;

  &lt;p&gt;So now you've verified that the firewall rules are working:&lt;/p&gt;

  &lt;p&gt;- You can browse to the one allowed FQDN, but not to any others.&lt;br /&gt;
- You can resolve DNS names using the configured external DNS server.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-20T17:12:09.118">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-AZURE-STORAGE1" name="Discover, classify, and label sensitive data for Azure Storage" issueId="" issueLink="" platform="" cost="0" risk="64" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Discover, classify, and label sensitive data for Azure Storage&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Establish and maintain an inventory of the sensitive data, based on the defined sensitive data scope. Use tools to discover, classify and label the in- scope sensitive data.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Use tools such as Microsoft Purview, Azure Information Protection and Azure SQL Data Discovery and Classification to centrally scan, classify and label the sensitive data resides in Azure Storage.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Connect to Azure Blob storage in Microsoft Purview" url="https://learn.microsoft.com/en-us/azure/purview/register-scan-azure-blob-storage-source"/>
            <reference name="Security Control v3: Data protection" url="https://learn.microsoft.com/en-us/security/benchmark/azure/security-controls-v3-data-protection#dp-1-discover-classify-and-label-sensitive-data"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>	&lt;p&gt;Ensure you are using a tool such as Microsoft Purview, Azure Information Protection and Azure SQL Data Discovery and Classification to centrally scan, classify and label the sensitive data that reside in Azure Storage.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-20T17:12:09.118">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-SECURITY-CENTER4" name="Enable Azure Defender" issueId="" issueLink="" platform="" cost="1" risk="62" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Enable Azure Defender&lt;/p&gt;

	&lt;p&gt;Rationale:&lt;br /&gt;
Azure Defender provides security alerts and advanced threat protection for virtual machines, SQL databases, containers, web applications, your network, and more.&lt;/p&gt;

	&lt;p&gt;When you enable Azure Defender from the Pricing and settings area of Azure Security Center, the following Defender plans are all enabled simultaneously and provide comprehensive defenses for the compute, data, and service layers of your environment:&lt;/p&gt;

	&lt;p&gt;- Azure Defender for servers&lt;br /&gt;
- Azure Defender for App Service&lt;br /&gt;
- Azure Defender for Storage&lt;br /&gt;
- Azure Defender for SQL&lt;br /&gt;
- Azure Defender for Kubernetes&lt;br /&gt;
- Azure Defender for container registries&lt;br /&gt;
- Azure Defender for Key Vault&lt;br /&gt;
- Azure Defender for Resource Manager&lt;br /&gt;
- Azure Defender for DNS&lt;/p&gt;

	&lt;p&gt;Each plan in Azure Defender is priced separately and can be individually set to on or off. For example, you might want to turn off Azure Defender for App Service on subscriptions that don't have an associated Azure App Service plan.&lt;/p&gt;

	&lt;p&gt;Remediation:&lt;br /&gt;
To enable Azure Defender on one subscription:&lt;/p&gt;

	&lt;p&gt;1. From Security Center's main menu, select Pricing &amp;amp; settings.&lt;br /&gt;
2. Select the subscription or workspace that you want to protect.&lt;br /&gt;
3. Select Azure Defender on to upgrade.&lt;br /&gt;
4. Select Save.&lt;/p&gt;

	&lt;p&gt;Tip: You'll notice that each plan in Azure Defender is priced separately and can be individually set to on or off. For example, you might want to turn off Azure Defender for App Service on subscriptions that don't have an associated Azure App Service plan.&lt;/p&gt;


	&lt;p&gt;To enable Azure Defender on multiple subscriptions or workspaces:&lt;/p&gt;

	&lt;p&gt;1. From Security Center's sidebar, select Getting started.&lt;/p&gt;

	&lt;p&gt;The Upgrade tab lists subscriptions and workspaces eligible for onboarding.&lt;/p&gt;

	&lt;p&gt;2. From the Select subscriptions and workspaces to enable Azure Defender on list, select the subscriptions and workspaces to upgrade and select Upgrade to enable Azure Defender.&lt;/p&gt;

	&lt;p&gt;- If you select subscriptions and workspaces that aren't eligible for trial, the next step will upgrade them and charges will begin.&lt;br /&gt;
- If you select a workspace that's eligible for a free trial, the next step will begin a trial.&lt;/p&gt;

	&lt;p&gt;Impact:&lt;br /&gt;
Turning on Azure Defender in Azure Security Center incurs an additional cost per resource.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Introduction to Azure Defender" url="https://docs.microsoft.com/en-us/azure/security-center/azure-defender"/>
            <reference name="Quickstart: Enable Azure Defender" url="https://docs.microsoft.com/en-us/azure/security-center/enable-azure-defender"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="2.1" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="2.2" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="2.3" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="2.4" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="2.5" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="2.6" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="2.7" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="2.8" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="DP-3" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="ES-1" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="IM-8" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;To ensure that Azure Defender is enabled from Azure portal&lt;/p&gt;

	&lt;p&gt;1. Go to Security Center&lt;br /&gt;
2. Select Pricing &amp;amp; settings blade&lt;br /&gt;
3. Click on the subscription name&lt;br /&gt;
4. Select the Azure Defender plans blade&lt;br /&gt;
5. Review the chosen pricing tier. For the desired resource type Plan should be set to On.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-20T17:12:09.118">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-NSG-FLOW-LOGS" name="Enable NSG flow logs" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Enable NSG flow logs&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; A network security group (NSG) enables you to filter inbound traffic to, and outbound traffic from, a virtual machine (VM). You can log network traffic that flows through an NSG with Network Watcher's NSG flow log capability.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Enable NSG flow log&lt;/p&gt; 
&lt;p&gt;1. NSG flow log data is written to an Azure Storage account. To create an Azure Storage account, select + Create a resource at the top, left corner of the portal.&lt;/p&gt; 
&lt;p&gt;2. Select Storage, then select Storage account - blob, file, table, queue.&lt;/p&gt; 
&lt;p&gt;3. Enter, or select the following information, accept the remaining defaults, and then select Create.&lt;/p&gt; 
&lt;p&gt;Name: 3-24 characters in length, can only contain lowercase letters and numbers, and must be unique across all Azure Storage accounts.&lt;br&gt; Location: Select East US&lt;br&gt; Resource group: Select Use existing, and then select myResourceGroup&lt;/p&gt; 
&lt;p&gt;The storage account may take around minute to create. Do not continue with remaining steps until the storage account is created. In all cases, the storage account must be in the same region as the NSG.&lt;/p&gt; 
&lt;p&gt;4. In the top, left corner of portal, select All services. In the Filter box, type Network Watcher. When Network Watcher appears in the search results, select it.&lt;/p&gt; 
&lt;p&gt;5. Under LOGS, select NSG flow logs.&lt;/p&gt; 
&lt;p&gt;6. From the list of NSGs, select the NSG named myVm-nsg.&lt;/p&gt; 
&lt;p&gt;7. Under Flow logs settings, select On.&lt;/p&gt; 
&lt;p&gt;8. Select the flow logging version. Version 2 contains flow-session statistics (Bytes and Packets)&lt;/p&gt; 
&lt;p&gt;9. Select the storage account that you created in step 3.&lt;/p&gt; 
&lt;p&gt;Note: NSG Flow Logs do not work with storage accounts that have hierarchical namespace enabled.&lt;/p&gt; 
&lt;p&gt;10. In the top, left corner of portal, select All services. In the Filter box, type Network Watcher. When Network Watcher appears in the search results, select it.&lt;/p&gt; 
&lt;p&gt;11. Set Retention (days) to 5, and then select Save.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Tutorial: Log network traffic to and from a virtual machine using the Azure portal" url="https://docs.microsoft.com/en-us/azure/network-watcher/network-watcher-nsg-flow-logging-portal"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that NSG flow logs are enabled.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-20T17:12:09.118">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-N09" name="Isolate Azure instances into different VNets" issueId="" issueLink="" platform="" cost="0" risk="61" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Specify a VNet for the Azure instance as a launch parameter. Applications that run on the Cloud instance can use the VNet security configuration when they access Azure resources.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  You can configure an Azure cloud service from Solution Explorer in Visual Studio. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Create a virtual network with multiple subnets" url="https://docs.microsoft.com/en-us/azure/virtual-network/virtual-networks-create-vnet-arm-pportal"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that the Azure instances are into different VNets.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-20T17:12:09.117">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-AZURE-STORAGE3" name="Restrict access with Azure Storage Firewall" issueId="" issueLink="" platform="" cost="0" risk="61" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Restrict access with Azure Storage Firewall&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; By default, storage accounts accept connections from clients on any network. Configure your storage account's firewall by restricting access to clients from specific public IP address ranges, select virtual networks, or specific Azure resources.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Change the default network access rule&lt;/p&gt; 
&lt;p&gt;1. Go to the storage account you want to secure.&lt;/p&gt; 
&lt;p&gt;2. Locate the Networking settings under Security + networking.&lt;/p&gt; 
&lt;p&gt;3. Choose which type of public network access you want to allow.&lt;/p&gt; 
&lt;p&gt;- To allow traffic from all networks, select Enabled from all networks.&lt;/p&gt; 
&lt;p&gt;- To allow traffic only from specific virtual networks, select Enabled from selected virtual networks and IP addresses.&lt;/p&gt; 
&lt;p&gt;- To block traffic from all networks, select Disabled.&lt;/p&gt; 
&lt;p&gt;4. Select Save to apply your changes.&lt;/p&gt; 
&lt;p&gt;Caution&lt;br&gt; By design, access to a storage account from trusted services takes the highest precedence over other network access restrictions. For this reason, if you set Public network access to Disabled after previously setting it to Enabled from selected virtual networks and IP addresses, any resource instances and exceptions you had previously configured, including Allow Azure services on the trusted services list to access this storage account, will remain in effect. As a result, those resources and services may still have access to the storage account after setting Public network access to Disabled.&lt;/p&gt; 
&lt;p&gt;For more information please see Reference URL.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; Changing this setting can impact your application's ability to connect to Azure Storage. Make sure to grant access to any allowed networks or set up access through a private endpoint before you change this setting.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Change the default network access rule" url="https://learn.microsoft.com/en-us/azure/storage/common/storage-network-security?tabs=azure-portal#change-the-default-network-access-rule"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>	&lt;p&gt;Ensure access is restricted with Azure Storage Firewall.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-20T17:12:09.118">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-MANAGED-ID" name="Use Managed Identities" issueId="" issueLink="" platform="" cost="0" risk="64" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Use Managed Identities&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Use Managed Identities to provide Azure services with an automatically managed identity in Azure AD. Managed Identities allows you to authenticate to any service that supports Azure AD authentication to Azure Resource Manager and can be used with API/Azure Portal/CLI/PowerShell.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Enable system-assigned managed identity during creation of a VM&lt;/p&gt; 
&lt;p&gt;To enable system-assigned managed identity on a VM during its creation, your account needs the Virtual Machine Contributor role assignment. No additional Azure AD directory role assignments are required.&lt;/p&gt; 
&lt;p&gt;- Under the Management tab in the Identity section, switch Managed service identity to On.&lt;/p&gt; 
&lt;p&gt;Enable system-assigned managed identity on an existing VM&lt;/p&gt; 
&lt;p&gt;To enable system-assigned managed identity on a VM that was originally provisioned without it, your account needs the Virtual Machine Contributor role assignment. No additional Azure AD directory role assignments are required.&lt;/p&gt; 
&lt;p&gt;1. Sign in to the Azure portal using an account associated with the Azure subscription that contains the VM.&lt;/p&gt; 
&lt;p&gt;2. Navigate to the desired Virtual Machine and select Identity.&lt;/p&gt; 
&lt;p&gt;3. Under System assigned, Status, select On and then click Save:&lt;/p&gt; 
&lt;p&gt;Assign a user-assigned managed identity to an existing VM&lt;/p&gt; 
&lt;p&gt;To assign a user-assigned identity to a VM, your account needs the Virtual Machine Contributor and Managed Identity Operator role assignments. No additional Azure AD directory role assignments are required.&lt;/p&gt; 
&lt;p&gt;1. Sign in to the Azure portal using an account associated with the Azure subscription that contains the VM.&lt;/p&gt; 
&lt;p&gt;2. Navigate to the desired VM and click Identity, User assigned and then +Add.&lt;/p&gt; 
&lt;p&gt;3. Click the user-assigned identity you want to add to the VM and then click Add.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Configure managed identities for Azure resources on a VM using the Azure portal" url="https://docs.microsoft.com/en-us/azure/active-directory/managed-identities-azure-resources/qs-configure-portal-windows-vm"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that you manage identities securely and automatically.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-20T17:12:09.118">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="AUTHORIZATION" name="Authorization" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="LOSS-CONTROL_ENV" name="Attackers gain unauthorized access to the control of the environment" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;Attackers could potentially gain unauthorized access to the control of the environment, due to user accounts - or role groups - not being well defined and configured. As a consequence attackers may be able to make changes without root approval.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="75" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-ACCESS-01">
                  <countermeasures>
                    <countermeasure ref="AZURE-MANAGED-ID" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZURE-MANAGED-ID" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Records" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="GENERAL" name="General" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="UNCONFIGURED-SECURITY" name="Attackers gain access to the system by exploiting weak security configurations" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>Weak security configurations like using sharing passwords in plain text, using weak passwords, using obsolete encryption algorithms, etc. can lead attackers to gain access to the system.</desc>
              <riskRating confidentiality="75" integrity="50" availability="25" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-16">
                  <countermeasures>
                    <countermeasure ref="AZ-S03" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-S03" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="AZURE-DATA-DELETED-EASY" name="Data is intentionally or accidentally deleted" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;Data can be deleted intentionally or accidentally and cannot be recovered. Attackers could rely on the lack of backup and recovery mechanisms.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-MONITOR-BACKUPS">
                  <countermeasures>
                    <countermeasure ref="C-AZURE-STORAGE2" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-AZURE-STORAGE2" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Records" value=""/>
              </customFields>
            </threat>
            <threat ref="ACCESS-TO-DATA" name="Sensitive data is compromised through unauthorized access to data storage" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;A data breach is a security violation in which sensitive, protected or confidential data is copied, transmitted, viewed, stolen or used by an individual unauthorized to do so. Sensitive data could be exposed due to a bad configuration in user permissions.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-ACCESS-DATA-01">
                  <countermeasures>
                    <countermeasure ref="C-AZURE-STORAGE1" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-AZURE-STORAGE1" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Records" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="LOGGING AND MONITORING" name="Logging and Monitoring" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="OWASP-A10-2017" name="Exploitation of insufficient logging and monitoring" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>	&lt;p&gt;Exploitation of insufficient logging and monitoring is the bedrock of nearly every major incident. Attackers rely on the lack of monitoring and timely response to achieve their goals without being detected.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="AZURE-NSG-FLOW-LOGS" mitigation="50"/>
                    <countermeasure ref="AZURE-SECURITY-CENTER4" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZURE-NSG-FLOW-LOGS" mitigation="50"/>
                <countermeasure ref="AZURE-SECURITY-CENTER4" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="Records" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="NETWORKING" name="Networking" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="AZURE-UNAUTHORISED-CONNECTION" name="Attackers perform unauthorized network access" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;Attackers could perform unauthorized network access to the resources through misconfigured ports or security network configurations.&lt;/p&gt;</desc>
              <riskRating confidentiality="25" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-NET-01">
                  <countermeasures>
                    <countermeasure ref="AZURE-IDS-IPS" mitigation="25"/>
                    <countermeasure ref="C-AZURE-STORAGE3" mitigation="25"/>
                    <countermeasure ref="C-AZURE-STORAGE4" mitigation="25"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AZURE-VNET01">
                  <countermeasures>
                    <countermeasure ref="AZ-N09" mitigation="25"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-N09" mitigation="25"/>
                <countermeasure ref="AZURE-IDS-IPS" mitigation="25"/>
                <countermeasure ref="C-AZURE-STORAGE3" mitigation="25"/>
                <countermeasure ref="C-AZURE-STORAGE4" mitigation="25"/>
              </countermeasures>
              <customFields>
                <customField ref="Records" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="6ef19e7b-2bdd-45da-8abb-3c9347daad9e" diagramComponentId="2c20b5bf-52af-46ff-a298-e5b13cc3afb5" ref="d02aad8a-ada6-44e2-85a9-61fbe1f72465" name="Hospital" desc="" library="CS-Default" parentComponentRef="" componentDefinitionRef="empty-component">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="internet"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses/>
      <countermeasures/>
      <usecases/>
    </component>
    <component uuid="71be99cf-b2be-4435-9f7c-428bddfd0266" diagramComponentId="4b29173a-c9b2-4a88-88c5-53f1017739f7" ref="7b8920c9-2c52-47cf-9920-6171ad5d8204" name="Blood Pressure Monitor (Empty)" desc="" library="CS-Default" parentComponentRef="d02aad8a-ada6-44e2-85a9-61fbe1f72465" componentDefinitionRef="empty-component">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="internet"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses/>
      <countermeasures/>
      <usecases/>
    </component>
    <component uuid="5aa64555-e194-47c1-8586-3c20bce4ed30" diagramComponentId="4a235b2c-6c06-4a5c-8c60-fb692a974465" ref="b6268fac-0c0b-4733-a128-7caa17450787" name="Azure IoT Edge" desc="" library="Microsoft-Azure" parentComponentRef="d02aad8a-ada6-44e2-85a9-61fbe1f72465" componentDefinitionRef="CD-MICROSOFT-AZURE-IOT-EDGE">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="internet"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses>
        <weakness ref="DATA-TRANSMIT-CLEAR" name="Data is transmitted in clear text" state="0" impact="100" issueId="" issueLink="">
          <desc>Data is not protected when transmitted to applications or customers and it can be read or modified by unauthorized actors.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-20T17:12:06.720">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="C-AZURE-IOT-EDGE1" name="Create and provision IoT Edge devices at scale on Linux using X.509 certificates" issueId="" issueLink="" platform="" cost="0" risk="64" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Create and provision IoT Edge devices at scale on Linux using X.509 certificates&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Using X.509 certificates as an attestation mechanism is an excellent way to scale production and simplify device provisioning. Typically, X.509 certificates are arranged in a certificate chain of trust. Starting with a self-signed or trusted root certificate, each certificate in the chain signs the next lower certificate. This pattern creates a delegated chain of trust from the root certificate down through each intermediate certificate to the final "leaf" certificate installed on a device.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; In order to auto-provision one or more Linux IoT Edge devices using X.509 certificates, the tasks are as follows:&lt;/p&gt; 
&lt;p&gt;1. Generate certificates and keys.&lt;br&gt; 2. Create either an individual enrollment for a single device or a group enrollment for a set of devices.&lt;br&gt; 3. Install the IoT Edge runtime and register the device with IoT Hub.&lt;/p&gt; 
&lt;p&gt;For more information about each task, please see Reference URL.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Create and provision IoT Edge devices at scale on Linux using X.509 certificates" url="https://docs.microsoft.com/en-us/azure/iot-edge/how-to-provision-devices-at-scale-linux-x509"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>	&lt;p&gt;Verify successful installation&lt;/p&gt;

	&lt;p&gt;If the runtime started successfully, you can go into your IoT Hub and start deploying IoT Edge modules to your device.&lt;/p&gt;

	&lt;p&gt;You can verify that the individual or the group enrollment that you created in Device Provisioning Service was used. Navigate to your Device Provisioning Service instance in the Azure portal. Open the enrollment details for the individual or the group enrollment that you created. In case of individual enrollment, notice that the status of the enrollment is assigned and the device ID is listed. In case of group enrollment, go to the Registration Records tab to view all devices registered in that group.&lt;/p&gt;

	&lt;p&gt;Use the following commands on your device to verify that the IoT Edge installed and started successfully.&lt;/p&gt;

	&lt;p&gt;- Check the status of the IoT Edge service.&lt;/p&gt;

	&lt;p&gt;sudo iotedge system status&lt;/p&gt;

	&lt;p&gt;- Examine service logs.&lt;/p&gt;

	&lt;p&gt;sudo iotedge system logs&lt;/p&gt;

	&lt;p&gt;- List running modules.&lt;/p&gt;

	&lt;p&gt;sudo iotedge list&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-20T17:12:04.752">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="NETWORKING" name="Networking" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="DATA-EXPOSED-CHANNEL" name="The data is exposed through the transmission channel" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;Attackers can obtain the data through the transmitted channel because this does not have the security measures in place to protect the data&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="DATA-TRANSMIT-CLEAR">
                  <countermeasures>
                    <countermeasure ref="C-AZURE-IOT-EDGE1" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-AZURE-IOT-EDGE1" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="697c2b4d-b19d-49f9-9be8-f4d01657392a" diagramComponentId="b58eb53a-39ba-4e21-8199-02f353c154ba" ref="9aaf4f70-d8b3-4f7c-8951-ac8d0be3c9a4" name="Azure Machine Learning" desc="" library="Microsoft-Azure" parentComponentRef="ce742726-74c5-4638-87db-954bb474c93e" componentDefinitionRef="CD-MICROSOFT-AZURE-MACH-LEARN">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses>
        <weakness ref="AZURE-VNET01" name="Networks for Azure resources are not properly segmented. Without proper segmentation, when attackers gain access to one resource, any other resources in the same VNet are compromised" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        Resources in the same VNet are compromised because when one of them is attacked and the
                        attackers gain access, they also gain access to all resources.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            Identify the resources and the Microsoft Azure instances.
                            &lt;/div&gt;
                            &lt;div&gt;
                            Check that the resources are in the correct VNet.
                            &lt;/div&gt;
                            &lt;div&gt;
                            Check that the Microsoft Azure instances&amp;nbsp;are into different VNets.
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-20T17:12:07.444">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-NET-01" name="Unauthorized connection attempts on open ports" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        Receiving unauthorized connections to open ports makes systems vulnerable to attacks. To
                        avoid this, access to the network must be as restricted as possible, so that only the necessary
                        ports are open and the minimum inbound traffic is accepted.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Check that each Azure resources have got their Network Security Groups.&lt;/li&gt;
                            &lt;li&gt;Check that a set of these groups achieve with the principle of the least
                            privilege.&lt;/li&gt;
                            &lt;li&gt;Check that the inbound/outbound security rules are enabled and correctly
                            configured.&lt;/li&gt;
                            &lt;li&gt;In &amp;quot;Inbound security rules&amp;quot;, check that all the traffic from
                            0.0.0.0/0&amp;nbsp;is blocked.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-20T17:12:07.443">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="AZ-N09" name="Isolate Azure instances into different VNets" issueId="" issueLink="" platform="" cost="0" risk="61" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Specify a VNet for the Azure instance as a launch parameter. Applications that run on the Cloud instance can use the VNet security configuration when they access Azure resources.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  You can configure an Azure cloud service from Solution Explorer in Visual Studio. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Create a virtual network with multiple subnets" url="https://docs.microsoft.com/en-us/azure/virtual-network/virtual-networks-create-vnet-arm-pportal"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that the Azure instances are into different VNets.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-20T17:12:07.377">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-N01" name="Set Network Security Groups to be as restrictive as possible" issueId="" issueLink="" platform="" cost="0" risk="61" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Use Network Security Groups (NSG) to filter the ingress/egress network traffic to Azure resources. Set the limit all the traffic (ingress/egress) on the NSG in order to force the use of least privilege into the NSG.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Identify Azure resources for each NSG.&lt;/li&gt; 
  &lt;li&gt;Create a set of least privilege NSG for those resources.&lt;/li&gt; 
  &lt;li&gt;Place the resources in those security groups.&lt;/li&gt; 
  &lt;li&gt;Change the inbound/outbound security rules to fulfill the least privilege.&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - How to open ports to a virtual machine with the Azure portal" url="https://docs.microsoft.com/en-us/azure/virtual-machines/windows/nsg-quickstart-portal"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Check that each Azure resources has got their Network Security Groups.&lt;/li&gt;
                            &lt;li&gt;Check that a set of these groups achieve with the principle of the least
                            privilege.&lt;/li&gt;
                            &lt;li&gt;Check that the inbound/outbound security rules are enabled and correctly
                            configured.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-20T17:12:07.378">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="NETWORKING" name="Networking" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="AZURE-UNAUTHORISED-CONNECTION" name="Attackers perform unauthorized network access" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;Attackers could perform unauthorized network access to the resources through misconfigured ports or security network configurations.&lt;/p&gt;</desc>
              <riskRating confidentiality="25" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-NET-01">
                  <countermeasures>
                    <countermeasure ref="AZ-N01" mitigation="50"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AZURE-VNET01">
                  <countermeasures>
                    <countermeasure ref="AZ-N09" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-N01" mitigation="50"/>
                <countermeasure ref="AZ-N09" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="78ac8647-abe4-4bfa-b50d-54d9b7e966c6" diagramComponentId="4207ed27-1fb6-46f4-9c63-b454264efd2f" ref="47acafba-83ea-40b1-9c5a-583590853716" name="Azure Time Series Insights" desc="" library="Microsoft-Azure" parentComponentRef="ce742726-74c5-4638-87db-954bb474c93e" componentDefinitionRef="CD-MICROSOFT-AZURE-TIME-SERIES-INSIGHTS">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses>
        <weakness ref="AZURE-ACCESS-01" name="Misconfigured credentials for groups and roles" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        The credentials for groups and roles are not correctly configured and there are user accounts with more privileges than necessary.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each user has got assigned the correct groups.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All groups&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each group has got assigned the correct roles to achieve principle of
                            least privilege.&lt;/li&gt;
                            &lt;li&gt;Check that the roles for the Cloud Service are well assigned.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;div&gt;
                            &lt;/div&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-20T17:12:09.538">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="C-AZURE-TIME-SERIES-INSIGHTS1" name="Control access to Azure Time Series Insights" issueId="" issueLink="" platform="" cost="0" risk="64" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Control access to Azure Time Series Insights&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Configure security to grant data access to Azure Time Series Insights.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Grant data access&lt;/p&gt; 
&lt;p&gt;Follow these steps to grant data access for a user principal.&lt;/p&gt; 
&lt;p&gt;1. Select Data Access Policies, and then select + Add.&lt;/p&gt; 
&lt;p&gt;2. Choose Select user. Search for the user name or email address to locate the user you want to add. Select Select to confirm the selection.&lt;/p&gt; 
&lt;p&gt;3. Choose Select role. Choose the appropriate access role for the user:&lt;/p&gt; 
&lt;p&gt;- Select Contributor if you want to allow the user to change reference data and share saved queries and perspectives with other users of the environment.&lt;/p&gt; 
&lt;p&gt;- Otherwise, select Reader to allow the user to query data in the environment and save personal, not shared, queries in the environment.&lt;/p&gt; 
&lt;p&gt;Select OK to confirm the role choice.&lt;/p&gt; 
&lt;p&gt;4. Select OK on the Select User Role page.&lt;/p&gt; 
&lt;p&gt;5. Confirm that the Data Access Policies page lists the users and the roles for each user.&lt;/p&gt; 
&lt;p&gt;Provide guest access from another Azure AD tenant&lt;/p&gt; 
&lt;p&gt;Follow these steps to grant guest access to an Azure Time Series Insights environment to an Azure AD user from another tenant.&lt;/p&gt; 
&lt;p&gt;1. Go to Azure portal, click on Azure Active Directory, scroll down on the Overview tab and then select Guest user.&lt;/p&gt; 
&lt;p&gt;2. Enter the email address for the user you want to invite. This email address must be associated with Azure AD. You can optionally include a personal message with the invitation.&lt;/p&gt; 
&lt;p&gt;3. Look for the confirmation bubble that appears on the screen. You can also click on Notifications to confirm that the guest user was added.&lt;/p&gt; 
&lt;p&gt;4. Go back to your Time Series Insights environment to add the newly created guest user. Click on Data Access Policies as described under Grant data access. Select user. Search for the email address of the guest user you invited to locate the user you want to add. Then, Select to confirm the selection.&lt;/p&gt; 
&lt;p&gt;5. Choose Select role. Choose the appropriate access role for the guest user:&lt;/p&gt; 
&lt;p&gt;- Select Contributor if you want to allow the user to change reference data and share saved queries and perspectives with other users of the environment.&lt;/p&gt; 
&lt;p&gt;- Otherwise, select Reader to allow the user to query data in the environment and save personal, not shared, queries in the environment.&lt;/p&gt; 
&lt;p&gt;Select OK to confirm the role choice.&lt;/p&gt; 
&lt;p&gt;6. Select OK on the Select User Role page.&lt;/p&gt; 
&lt;p&gt;7. Confirm that the Data Access Policies page lists the guest user and the roles for each guest user.&lt;/p&gt; 
&lt;p&gt;8. Now, the guest user will receive an invitation email at the email address specified above. The guest user will select Get Started to confirm their acceptance and connect to Azure Cloud.&lt;/p&gt; 
&lt;p&gt;9. After selecting Get Started, the guest user will be presented with a permissions box associated with the administrator's organization. Upon granting permission by selecting Accept, they will be signed in.&lt;/p&gt; 
&lt;p&gt;10. The administrator shares the environment URL with their guest.&lt;/p&gt; 
&lt;p&gt;11. After the guest user is signed in to the email address you used to invite them, and they accept the invitation, they will be directed to Azure portal.&lt;/p&gt; 
&lt;p&gt;12. The guest can now access the shared environment using the environment URL provided by the administrator. They can enter that URL into their web browser for immediate access.&lt;/p&gt; 
&lt;p&gt;13. The administrator's tenant will be displayed to the guest user after selecting their profile icon in the upper-right corner of the Time Series explorer.&lt;/p&gt; 
&lt;p&gt;After the guest user selects the administrator's tenant, they will have the ability to select the shared Azure Time Series Insights environment.&lt;/p&gt; 
&lt;p&gt;They now have all the capabilities associated with the role that you provided them with in step 5.&lt;/p&gt; 
&lt;p&gt;Warning&lt;br&gt; Access Policies grant Azure AD Users and/or Groups Data Plane access to your Time Series Insights Environment. An Azure Active Directory is tied to a Tenant. So if you decide to move your Subscription between Tenants, make sure to follow the procedure for when the Subscription is moved across Tenants following the Reference URL.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Grant data access to an environment" url="https://docs.microsoft.com/en-us/azure/time-series-insights/concepts-access-policies"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>	&lt;p&gt;Ensure that access to Azure Time Series Insights is properly configured.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-20T17:12:09.508">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="AUTHORIZATION" name="Authorization" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="LOSS-CONTROL_ENV" name="Attackers gain unauthorized access to the control of the environment" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;Attackers could potentially gain unauthorized access to the control of the environment, due to user accounts - or role groups - not being well defined and configured. As a consequence attackers may be able to make changes without root approval.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="75" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-ACCESS-01">
                  <countermeasures>
                    <countermeasure ref="C-AZURE-TIME-SERIES-INSIGHTS1" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-AZURE-TIME-SERIES-INSIGHTS1" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="1a63b1d8-39e0-4ec4-8bc5-31f951fb2530" diagramComponentId="61f780ec-ffd8-4216-bb4d-90b4c03e131b" ref="abd206fb-f60c-47dd-99e2-47fbe0afc31a" name="Patient Monitor (Empty)" desc="" library="CS-Default" parentComponentRef="d02aad8a-ada6-44e2-85a9-61fbe1f72465" componentDefinitionRef="empty-component">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="internet"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses/>
      <countermeasures/>
      <usecases/>
    </component>
    <component uuid="4b27093c-16a9-49b0-99e3-8ae18505f6fd" diagramComponentId="0b4175c3-8653-46e2-96cc-7c1a0b5118c3" ref="089fe994-3899-406a-9e7b-302f35902b26" name="5G Radio Access Network (RAN) Device (Empty)" desc="" library="CS-Default" parentComponentRef="d02aad8a-ada6-44e2-85a9-61fbe1f72465" componentDefinitionRef="empty-component">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="internet"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses/>
      <countermeasures/>
      <usecases/>
    </component>
    <component uuid="808fb4e4-3ff1-4917-a082-1e2f0e0a61de" diagramComponentId="92342871-b1ed-4816-8729-2f7f1326a172" ref="ce742726-74c5-4638-87db-954bb474c93e" name="Azure Environment" desc="" library="Microsoft-Azure" parentComponentRef="" componentDefinitionRef="microsoft-azure-environment">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses>
        <weakness ref="AZURE-LOGS03" name="Audit logs can be deleted" state="0" impact="100" issueId="" issueLink="">
          <desc>There is no external backups of log records. If logs are deleted, there is no way to recover
                        them.ed.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Activity Logs&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Push the button &amp;quot;Export&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;All Regions&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;Export to a storage account&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that all fields are correctly filled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-20T17:12:08.506">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CWE-16" name="Configuration" state="0" impact="100" issueId="" issueLink="">
          <desc>Weaknesses in this category are typically introduced during the
                        configuration of the software.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-20T17:12:08.148">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-MON02" name="Excessive use of administrator accounts" state="0" impact="100" issueId="" issueLink="">
          <desc>The administrator accounts are used for all actions, not only for administrative actions. This
                        is because these users have not got a personal or a user account to do the daily actions.&amp;nbsp;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that there is any rule to notify when there is a bad usage of the root
                            account.&lt;/li&gt;
                            &lt;li&gt;Check if these rules are enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-20T17:12:07.767">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-MON03" name="Lack of 2FA" state="0" impact="100" issueId="" issueLink="">
          <desc>Logging into the console without using Multi-factor Authentication (MFA) and without being detected. The connection without MFA must be audited and monitored, the correct security group must be informed and the connection must be validated.&amp;nbsp;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that there is any rule to notify when someone tries to login into the
                            console without MFA.&lt;/li&gt;
                            &lt;li&gt;Check if these rules are enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-20T17:12:07.767">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZ-W04" name="Misconfigured Authentication Method for Administrator Accounts" state="0" impact="100" issueId="" issueLink="">
          <desc>The authentication method &amp;quot;Multi-factor Authentication&amp;quot; for the Administrator accounts is not configured.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;Multi-Factor Authentication&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check all Administrator accounts have got the MFA flag enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-20T17:12:08.148">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="LOST-SECURITY-ALERTS" name="Misconfigured Security contact details" state="0" impact="100" issueId="" issueLink="">
          <desc>The security contact details for the Azure subscription are not properly configured.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Access &amp;quot;Azure Security Center&amp;quot;.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;In the &amp;quot;Recommendations&amp;quot; tab choose &amp;quot;Provide security
                            contact details&amp;quot;.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Check that all fields are filled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-20T17:12:08.148">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-IDENTITY-03" name="Misconfigured User Account" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        Key security settings such as resetting the password and other password controls are not
                        configured.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log in to the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each user has got an assigned account.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;Password reset&amp;quot; &amp;gt; &amp;quot;Authentication Method&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that the security confirmation measures and the security criteria are well
                            filled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-20T17:12:08.147">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-ACCESS-01" name="Misconfigured credentials for groups and roles" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        The credentials for groups and roles are not correctly configured and there are user accounts with more privileges than necessary.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each user has got assigned the correct groups.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All groups&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each group has got assigned the correct roles to achieve principle of
                            least privilege.&lt;/li&gt;
                            &lt;li&gt;Check that the roles for the Cloud Service are well assigned.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;div&gt;
                            &lt;/div&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-20T17:12:08.148">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-EXPIRATION-DATE" name="Misconfigured password expiration" state="0" impact="100" issueId="" issueLink="">
          <desc>The password expiration is not configured and users are not obliged to change their passwords.
                        Not change frequently the passwords gives facilities to attackers to obtain them.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            Check that the password expiration has got the correct values. Therefore, we can obtain the
                            values using the Get-MsolPasswordPolicy cmdlet from the Azure Active Directory Module for
                            Windows PowerShell. With the following command:
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;br /&gt;
                            &lt;/div&gt;
                            &lt;blockquote&gt;
                            &lt;div&gt;
                            PS C:\&amp;gt; Get-MsolPasswordPolicy -DomainName contoso.com
                            &lt;/div&gt;
                            &lt;/blockquote&gt;
                            &lt;div&gt;
                            &lt;br /&gt;
                            &lt;/div&gt;
                            &lt;div&gt;
                            More information: Doc MS Azure
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-20T17:12:08.148">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-VNET01" name="Networks for Azure resources are not properly segmented. Without proper segmentation, when attackers gain access to one resource, any other resources in the same VNet are compromised" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        Resources in the same VNet are compromised because when one of them is attacked and the
                        attackers gain access, they also gain access to all resources.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            Identify the resources and the Microsoft Azure instances.
                            &lt;/div&gt;
                            &lt;div&gt;
                            Check that the resources are in the correct VNet.
                            &lt;/div&gt;
                            &lt;div&gt;
                            Check that the Microsoft Azure instances&amp;nbsp;are into different VNets.
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-20T17:12:08.692">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-LOGS02" name="Non-auditable connections to the web application" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        The status connection or failed attempts cannot be audited because they are not recorded into
                        the logs.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Go to the Azure portal.&lt;/li&gt;
                            &lt;li&gt;Go to the blade for your web app and in &amp;quot;Monitoring&amp;quot; &amp;gt;&amp;gt;
                            &amp;quot;Diagnostics logs&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that the &amp;quot;Detailed error messages&amp;quot; is enabled.&lt;/li&gt;
                            &lt;li&gt;Check that the &amp;quot;Failed request tracing&amp;quot; is enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-20T17:12:08.506">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-LOGS01" name="Non-auditable resource changes" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        The Diagnostic Logs are not activated and configured. Therefore, the changes or the access to
                        the resources are not recorded into the logs.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Go to the Azure portal.&lt;/li&gt;
                            &lt;li&gt;Go to the blade for your web app and in &amp;quot;Monitoring&amp;quot; &amp;gt;&amp;gt;
                            &amp;quot;Diagnostics logs&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that &amp;quot;Application Logging (Filesystem)&amp;quot; and &amp;quot;Application
                            Logging (Blob)&amp;quot; are enabled.&lt;/li&gt;
                            &lt;li&gt;Check that the type &amp;quot;Storage&amp;quot; or &amp;quot;File System&amp;quot;
                            are enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-20T17:12:08.505">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="LOST-ACCESS-ROOT-01" name="The Root Account is mis-configured" state="0" impact="100" issueId="" issueLink="">
          <desc>The administrator account is not configured. The security question to recover or reset the
                        password and the authentication method are not configured.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-20T17:12:08.147">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-MON06" name="Undetected brute force attempts on MS Azure management console" state="0" impact="100" issueId="" issueLink="">
          <desc>The failure connection attempts (brute force) must be audited and monitored and correspondent
                        personnel must be alerted and informed.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that there is any rule to notify when several console login failure attempts
                            occur.&lt;/li&gt;
                            &lt;li&gt;Check if these rules are enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-20T17:12:07.767">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-MON05" name="Undetected changes in data encryption configuration" state="0" impact="100" issueId="" issueLink="">
          <desc>The changes on the database encryption must be audited and monitored. When there are changes
                        on the database encryption, the security group must be alerted.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that there is any rule to alert when the Transparent Data Encryption is
                            disabled.&lt;/li&gt;
                            &lt;li&gt;Check if these rules are enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-20T17:12:07.767">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-MON07" name="Undetected changes in network configuration" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        Changes in network configurations (NACLs, route and gateway tables) are not detected because
                        monitoring and alerting on the network is not configured to detect these changes.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that there is any rule to notify when the VPC NACL changes.&lt;/li&gt;
                            &lt;li&gt;Check that there is any rule to notify when the VPC route table changes.&lt;/li&gt;
                            &lt;li&gt;Check that there is any rule to notify when the VPC gateway changes.&lt;/li&gt;
                            &lt;li&gt;Check if these rules are enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-20T17:12:07.766">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-MON01" name="Undetected changes in security configurations" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        Monitoring and alerting for security configurations are not configured and changes cannot be
                        detected.&amp;nbsp;
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that there is any rule to alert when the Activity Logs configuration
                            changes.&lt;/li&gt;
                            &lt;li&gt;Check that there is any rule to alert when the security policy changes.&lt;/li&gt;
                            &lt;li&gt;Check that there is any rule to alert when the recommended configuration changes.&lt;/li&gt;
                            &lt;li&gt;Check that there is any rule to notify when activity alerts changes.&lt;/li&gt;
                            &lt;li&gt;Check if these rules are enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-20T17:12:07.766">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-MON04" name="Undetected changes in security groups" state="0" impact="100" issueId="" issueLink="">
          <desc>The changes in security groups must be traced and monitored and the correspondent personnel
                        must approve these changes. If the situation is not the correct, attackers can access to
                        security systems.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that there is any rule to notify when the security groups or security group
                            configurations change.&lt;/li&gt;
                            &lt;li&gt;Check if these rules are enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-20T17:12:07.766">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="AZ-A09" name="Apply RBAC with pre-defined policies added into groups or roles" issueId="" issueLink="" platform="" cost="0" risk="64" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Define and create groups that relate to job functions (administrators, developers, accounting,
                        etc.) and assign the relevant permissions for each group, and then assign IAM users to those
                        groups.&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &amp;nbsp;&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        All the users in an IAM group inherit the permissions assigned to the group. That way, you can
                        make changes for everyone in a group in just one place. As people move around in your company,
                        you can simply change what IAM group their IAM user belongs to. This method is known as Role
                        Based Access Control (RBAC).&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Remove a user from a group:&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;ol&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                        &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                        &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Click on the user name. All the groups the user belongs are there.&lt;/li&gt;
                        &lt;li&gt;Choose the group and &amp;quot;Remove&amp;quot;.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/ol&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Create a group and add user:&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;ol&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                        &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                        &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All groups&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Click &amp;quot;New Group&amp;quot; and fill the information.&lt;/li&gt;
                        &lt;li&gt;Search and add the user.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Create a group and add members in Azure Active Directory" url="https://docs.microsoft.com/en-us/azure/active-directory/active-directory-groups-create-azure-portal"/>
            <reference name="MS Azure - Use Role-Based Access Control to manage access to your Azure subscription resources" url="https://docs.microsoft.com/en-us/azure/active-directory/role-based-access-control-configure"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each user has got assigned the correct groups.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All groups&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each group has got assigned the correct roles.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-20T17:12:08.042">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-A08" name="Configure a strong security challenge questions for the user account" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        &lt;div&gt;
                        &lt;div&gt;
                        Activate and configure the security challenge question and the possibility of resetting the
                        password by confirming the user's identity is allowed. Make sure that the security confirmation
                        measures match the security criteria. Otherwise, it could make a weak confirmation and allow the&amp;nbsp;password
                        reset to malicious users.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation: &amp;nbsp;&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Log in to the Azure portal as an owner.&lt;/li&gt;
                        &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                        &lt;li&gt;Select &amp;quot;Password reset&amp;quot; &amp;gt; &amp;quot;Authentication Method&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Choose the security confirmation measures that match the security criteria and click
                        &amp;quot;Save&amp;quot;.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;ol&gt;
                        &lt;/ol&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Azure AD self-service password reset" url="https://docs.microsoft.com/en-us/azure/active-directory/active-directory-passwords-getting-started"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log in to the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;Password reset&amp;quot; &amp;gt; &amp;quot;Authentication Method&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that the security confirmation measures and the security criteria are well
                            filled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-20T17:12:08.043">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-A12" name="Configure password expiration" issueId="" issueLink="" platform="" cost="0" risk="64" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        &lt;div&gt;
                        Configure the password expiration to force after a determinate time, the password code shall be
                        changed for the users.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Configure password management to match security criteria. This value is configurable
                        using the Set-MsolPasswordPolicy cmdlet from the Azure Active Directory Module for Windows
                        PowerShell. With the following command as the example:&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        &lt;div&gt;
                        Set-MsolPasswordPolicy -ValidityPeriod 60 -NotificationDays 14&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;This command updates the tenant so that all users passwords expire after 60
                        days. The users receive notification 14 days prior to that expiry.
                        &lt;/blockquote&gt;
                        &lt;div&gt;
                        &lt;div&gt;
                        More information:&amp;nbsp;
                        &lt;a
                        href="https://docs.microsoft.com/en-us/powershell/module/msonline/set-msolpasswordpolicy?view=azureadps-1.0"&gt;Doc
                        MS Azure&lt;/a&gt;
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;ul&gt;
                        &lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Password policies and restrictions in Azure Active Directory" url="https://docs.microsoft.com/en-us/azure/active-directory/active-directory-passwords-policy"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            Check that the password expiration has got the correct values. Therefore, we can obtain the
                            values using the Get-MsolPasswordPolicy cmdlet from the Azure Active Directory Module for
                            Windows PowerShell. With the following command:
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;br /&gt;
                            &lt;/div&gt;
                            &lt;blockquote&gt;
                            &lt;div&gt;
                            PS C:\&amp;gt; Get-MsolPasswordPolicy -DomainName contoso.com
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;br /&gt;
                            &lt;/div&gt;
                            &lt;/blockquote&gt;More information:
                            &lt;a
                            href="https://docs.microsoft.com/en-us/powershell/module/msonline/get-msolpasswordpolicy?view=azureadps-1.0"&gt;Doc
                            MS Azure&lt;/a&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-20T17:12:08.044">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-A11" name="Configure roles for the Cloud Service" issueId="" issueLink="" platform="" cost="0" risk="64" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Define and create the roles for the Azure Cloud Service. For each role, define the permissions and also configure how that role runs. When you launch an Azure instance, you shall specify a role for the instance as a launch parameter. Applications that run on the Cloud instance use the role's credentials when they access Azure resources. This role's permissions determine what the application is allowed to do.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Configure an Azure cloud service from Solution Explorer in Visual Studio.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Use Role-Based Access Control to manage access to your Azure subscription resources" url="https://docs.microsoft.com/en-us/azure/active-directory/role-based-access-control-configure"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that the roles for the Cloud Service are well assigned.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-20T17:12:08.044">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-A02" name="Configure the security challenge questions for the administrator account" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Activate and configure the security challenge question and the possibility of resetting the password by confirming the user's identity is allowed. In case of being an owner account of the subscription that has full administration access, it is necessary to do this, as a security measure that this password is lost. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The security confirmation measures will depend on those specified by the Active Directory administrator. Make sure that the security confirmation measures match the security criteria. Otherwise, it could make a weak confirmation and allow the password reset to malicious users. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Using the console:&amp;nbsp;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;ol&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Open https://aka.ms/ssprsetup and Log into the account.&lt;/li&gt; 
   &lt;li&gt;Respond to security measures.&amp;nbsp;&lt;/li&gt; 
   &lt;li&gt;Once all needed controls are finished, click on accept.&lt;/li&gt; 
  &lt;/ol&gt; 
 &lt;/ol&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Using the portal:&lt;/li&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt; 
   &lt;li&gt;Select Azure Active Directory.&lt;/li&gt; 
   &lt;li&gt;Select &amp;quot;Password reset&amp;quot; &amp;gt; &amp;quot;Authentication Method&amp;quot;.&lt;/li&gt; 
   &lt;li&gt;Choose the security confirmation measures that match the security criteria and click &amp;quot;Save&amp;quot;.&lt;/li&gt; 
  &lt;/ol&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Azure AD self-service password reset" url="https://docs.microsoft.com/en-us/azure/active-directory/active-directory-passwords-getting-started"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Using the portal:
                            &lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;Password reset&amp;quot; &amp;gt; &amp;quot;Authentication Method&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that the security confirmation measures and the security criteria are filled
                            and enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-20T17:12:08.044">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-M04" name="Create alerts due of Transparent Data Encryption Deletion" issueId="" issueLink="" platform="" cost="0" risk="61" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Create alerts for the Activity Logs changes to monitor, audit and notify about the changes of
                        Transparent Data Encryption to the correspondent personnel. It's vital that these unauthorized
                        changes are detected.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Push &amp;quot;Add activity log alert&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Filling the fields with the corresponding values.&lt;/li&gt;
                        &lt;li&gt;Select in actions the personnel should be received this information.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Create activity log alerts" url="https://docs.microsoft.com/en-us/azure/monitoring-and-diagnostics/monitoring-activity-log-alerts"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that there is any rule to alert when the Transparent Data Encryption is
                            disabled.&lt;/li&gt;
                            &lt;li&gt;Check if these rules are enabled.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-20T17:12:07.640">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-M12" name="Create alerts for changes in security groups and in security groups configurations" issueId="" issueLink="" platform="" cost="0" risk="61" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Create alerts for the Activity Logs changes to monitor, audit and notify about the changes in
                        the security groups or in security groups configurations to the correspondent personnel. It's
                        vital that these unauthorized changes are detected.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Push &amp;quot;Add activity log alert&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Filling the fields with the corresponding values.&lt;/li&gt;
                        &lt;li&gt;Select in actions the personnel should be received this information.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Create activity log alerts" url="https://docs.microsoft.com/en-us/azure/monitoring-and-diagnostics/monitoring-activity-log-alerts"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that there is any rule to notify when the security groups or security group
                            configurations change.&lt;/li&gt;
                            &lt;li&gt;Check if these rules are enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-20T17:12:07.641">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-M01" name="Create alerts for changes on Activity Logs configuration" issueId="" issueLink="" platform="" cost="0" risk="61" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Create alerts for the Activity Logs changes to monitor, audit and notify about the changes to the correspondent personnel. It's vital that these unauthorized changes are detected.&lt;/p&gt;&lt;p&gt;Checklist:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Ensure that Activity Log Alert exists for:&amp;nbsp;&lt;ul&gt;&lt;li&gt;Create Policy Assignment&lt;/li&gt;&lt;li&gt;Delete Policy Assignment&lt;/li&gt;&lt;li&gt;Create or Update Network Security Group&lt;/li&gt;&lt;li&gt;Delete Network Security Group&lt;/li&gt;&lt;li&gt;Create or Update Network Security Group Rule&lt;/li&gt;&lt;li&gt;Delete Network Security Group Rule&lt;/li&gt;&lt;li&gt;Create or Update Security Solution&lt;/li&gt;&lt;li&gt;Delete Security Solution&lt;/li&gt;&lt;li&gt;Create or Update or Delete SQL Server Firewall Rule&lt;br&gt;&amp;nbsp;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;Remediation:&lt;/strong&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Go to Monitor&lt;/li&gt;&lt;li&gt;Select Alerts&lt;ol&gt;&lt;li&gt;For each one of the elements in the checklist, click On New Alert Rule&lt;ol&gt;&lt;li&gt;Under Scope, click Select resource&lt;/li&gt;&lt;li&gt;Select the appropriate subscription under Filter by subscription&lt;/li&gt;&lt;li&gt;Select Policy Assignment under Filter by resource type&lt;/li&gt;&lt;li&gt;Select All for Filter by location&lt;/li&gt;&lt;li&gt;Click on the subscription resource from the entries populated under Resource&lt;/li&gt;&lt;li&gt;Verify Selection preview shows All Policy assignment (policyAssignments) and your selected subscription name&lt;/li&gt;&lt;li&gt;Click Done&lt;/li&gt;&lt;li&gt;Under Condition click Add Condition&lt;/li&gt;&lt;li&gt;Select the corresponding element from the checklist&lt;/li&gt;&lt;li&gt;Click Done&lt;/li&gt;&lt;li&gt;Under Action group, select Add action groups and complete creation process or select appropriate action group&lt;/li&gt;&lt;li&gt;Under Alert rule details, enter Alert rule name and Description&lt;/li&gt;&lt;li&gt;Select appropriate resource group to save the alert to&lt;/li&gt;&lt;li&gt;Check Enable alert rule upon creation checkbox&lt;/li&gt;&lt;li&gt;Click Create alert rule&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;/ol&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Create activity log alerts" url="https://docs.microsoft.com/en-us/azure/monitoring-and-diagnostics/monitoring-activity-log-alerts"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5.2.1" supportedStandardRef="cis-azure-standard"/>
            <standard ref="5.2.1" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="5.2.2" supportedStandardRef="cis-azure-standard"/>
            <standard ref="5.2.2" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="5.2.3" supportedStandardRef="cis-azure-standard"/>
            <standard ref="5.2.3" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="5.2.4" supportedStandardRef="cis-azure-standard"/>
            <standard ref="5.2.4" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="5.2.5" supportedStandardRef="cis-azure-standard"/>
            <standard ref="5.2.5" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="5.2.6" supportedStandardRef="cis-azure-standard"/>
            <standard ref="5.2.6" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="5.2.7" supportedStandardRef="cis-azure-standard"/>
            <standard ref="5.2.7" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="5.2.8" supportedStandardRef="cis-azure-standard"/>
            <standard ref="5.2.8" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="5.2.9" supportedStandardRef="cis-azure-standard"/>
            <standard ref="5.2.9" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="LT-4" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Go to "Monitor" and then to "Alerts".&lt;/li&gt;&lt;li&gt;Check that there is any rule to alert when the Activity Logs configuration changes.&lt;/li&gt;&lt;li&gt;Check if these rules are enabled.&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-20T17:12:07.641">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-M02" name="Create alerts for security policy changes" issueId="" issueLink="" platform="" cost="0" risk="61" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Create alerts for the Activity Logs changes to monitor, audit and notify about the Management
                        Security Policies changes to the correspondent personnel. It's vital that these unauthorized
                        changes are detected.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Push &amp;quot;Add activity log alert&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Filling the fields with the corresponding values.&lt;/li&gt;
                        &lt;li&gt;Select in actions the personnel should be received this information.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Create activity log alerts" url="https://docs.microsoft.com/en-us/azure/monitoring-and-diagnostics/monitoring-activity-log-alerts"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that there is any rule to alert when the security policy changes.&lt;/li&gt;
                            &lt;li&gt;Check if these rules are enabled.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-20T17:12:07.641">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-M08" name="Create alerts for VPC gateway changes" issueId="" issueLink="" platform="" cost="0" risk="61" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Create alerts for the Activity Logs changes to monitor, audit and notify about the changes in
                        the VPC gateway tables to the correspondent personnel. It's vital that these unauthorized
                        changes are detected.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &amp;nbsp;VPC gateways are used as a means of sending traffic outside of VPC (i.e. to the
                        Internet) and are vital in ensuring traffic flows to correct destination. Therefore alerting on
                        changes to VPC gateways ensuring traffic continues to flow as expected via the correct gateway.&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Push &amp;quot;Add activity log alert&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Filling the fields with the corresponding values.&lt;/li&gt;
                        &lt;li&gt;Select in actions the personnel should be received this information.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Create activity log alerts" url="https://docs.microsoft.com/en-us/azure/monitoring-and-diagnostics/monitoring-activity-log-alerts"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that there is any rule to notify when the VPC gateway changes.&lt;/li&gt;
                            &lt;li&gt;Check if these rules are enabled.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-20T17:12:07.641">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-M06" name="Create alerts for VPC NACL changes" issueId="" issueLink="" platform="" cost="0" risk="61" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Create alerts for the Activity Logs changes to monitor, audit and notify about the changes in
                        the Network Access Control Lists (NACLs) to the correspondent personnel. It's vital that these
                        unauthorized changes are detected.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        The Network Access Control Lists (NACLs) control inbound and outbound access to &amp;amp; from
                        MS Azure subnets and work like packet filters to protect the network. Therefore alerting on
                        changes to NACLs help ensure that the subnets protected by them are not exposed.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Push &amp;quot;Add activity log alert&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Filling the fields with the corresponding values.&lt;/li&gt;
                        &lt;li&gt;Select in actions the personnel should be received this information.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Create activity log alerts" url="https://docs.microsoft.com/en-us/azure/monitoring-and-diagnostics/monitoring-activity-log-alerts"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that there is any rule to notify when the VPC NACL changes.&lt;/li&gt;
                            &lt;li&gt;Check if these rules are enabled.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-20T17:12:07.641">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-M07" name="Create alerts for VPC route table changes" issueId="" issueLink="" platform="" cost="0" risk="61" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Create alerts for the Activity Logs changes to monitor, audit and notify about the changes in
                        the VPC route tables to the correspondent personnel. It's vital that these unauthorized changes
                        are detected.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        VPC route table provides a means of routing network traffic between subnets and via gateways and
                        ensures traffic flows via the correct path. Therefore alerting on changes to route tables
                        ensuring the traffic continues to flow as expected.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Push &amp;quot;Add activity log alert&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Filling the fields with the corresponding values.&lt;/li&gt;
                        &lt;li&gt;Select in actions the personnel should be received this information.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Create activity log alerts" url="https://docs.microsoft.com/en-us/azure/monitoring-and-diagnostics/monitoring-activity-log-alerts"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that there is any rule to notify when the VPC route table changes.&lt;/li&gt;
                            &lt;li&gt;Check if these rules are enabled.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-20T17:12:07.641">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-M03" name="Create alerts to detect changes in the recommendation configurations" issueId="" issueLink="" platform="" cost="0" risk="61" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Create alerts for the Activity Logs changes to monitor, audit and notify about the changes in
                        the recommendation configurations to the correspondent personnel. It's vital that these
                        unauthorized changes are detected.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Push &amp;quot;Add activity log alert&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Filling the fields with the corresponding values.&lt;/li&gt;
                        &lt;li&gt;Select in actions the personnel should be received this information.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Create activity log alerts" url="https://docs.microsoft.com/en-us/azure/monitoring-and-diagnostics/monitoring-activity-log-alerts"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that there is any rule to alert when the recommended configuration changes.&lt;/li&gt;
                            &lt;li&gt;Check if these rules are enabled.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-20T17:12:07.641">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-M09" name="Create alerts to detect changes on activity alerts" issueId="" issueLink="" platform="" cost="0" risk="61" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Create alerts for the Activity Logs changes to monitor, audit and notify about the alert
                        modifications to the correspondent personnel. It's vital that these unauthorized changes are
                        detected.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Push &amp;quot;Add activity log alert&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Filling the fields with the corresponding values.&lt;/li&gt;
                        &lt;li&gt;Select in actions the personnel should be received this information.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Create activity log alerts" url="https://docs.microsoft.com/en-us/azure/monitoring-and-diagnostics/monitoring-activity-log-alerts"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that there is any rule to notify when activity alerts&amp;nbsp;changes.&lt;/li&gt;
                            &lt;li&gt;Check if these rules are enabled.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-20T17:12:07.641">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-M10" name="Create alerts to notify a bad usage of the root account" issueId="" issueLink="" platform="" cost="0" risk="61" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Create alerts for the Activity Logs changes to monitor, audit and notify about the usage of the
                        root accounts to the correspondent personnel. It's vital that these unauthorized changes are
                        detected.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Push &amp;quot;Add activity log alert&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Filling the fields with the corresponding values.&lt;/li&gt;
                        &lt;li&gt;Select in actions the personnel should be received this information.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Create activity log alerts" url="https://docs.microsoft.com/en-us/azure/monitoring-and-diagnostics/monitoring-activity-log-alerts"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that there is any rule to notify when there is a bad usage of the root
                            account.&lt;/li&gt;
                            &lt;li&gt;Check if these rules are enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-20T17:12:07.641">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-M11" name="Create alerts to notify about the console login without MFA" issueId="" issueLink="" platform="" cost="0" risk="61" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Create alerts for Activity Log changes to monitor, audit and notify about the user's login into
                        the console without Multi-factor Authentication to the correspondent personnel. It's vital that
                        these unauthorized changes are detected.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Push &amp;quot;Add activity log alert&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Filling the fields with the corresponding values.&lt;/li&gt;
                        &lt;li&gt;Select in actions the personnel should be received this information.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Create activity log alerts" url="https://docs.microsoft.com/en-us/azure/monitoring-and-diagnostics/monitoring-activity-log-alerts"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that there is any rule to notify when someone tries to login into the
                            console without MFA.&lt;/li&gt;
                            &lt;li&gt;Check if these rules are enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-20T17:12:07.641">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-M05" name="Create alerts to notify the console login failure attempts" issueId="" issueLink="" platform="" cost="0" risk="61" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Create alerts for the Activity Logs changes to monitor, audit and notify about the console login
                        failure attempts to the correspondent personnel. It's vital that these unauthorized changes are
                        detected.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Push &amp;quot;Add activity log alert&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Filling the fields with the corresponding values.&lt;/li&gt;
                        &lt;li&gt;Select in actions the personnel should be received this information.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Create activity log alerts" url="https://docs.microsoft.com/en-us/azure/monitoring-and-diagnostics/monitoring-activity-log-alerts"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that there is any rule to notify when several&amp;nbsp;console login failure
                            attempts occur.&lt;/li&gt;
                            &lt;li&gt;Check if these rules are enabled.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-20T17:12:07.642">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-AD19" name="Create a resource lock administrator role" issueId="" issueLink="" platform="" cost="0" risk="59" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Resource locking is a powerful protection mechanism that can prevent inadvertent modification/deletion of resources within Azure subscriptions/Resource Groups and is a recommended NIST configuration.&lt;/p&gt;&lt;p&gt;Rationale:&lt;/p&gt;&lt;p&gt;Given the resource lock functionality is outside of standard Role Based Access Control(RBAC), it would be prudent to create a resource lock administrator role to prevent inadvertent unlocking of resources.&lt;/p&gt;&lt;p&gt;Impact:&lt;/p&gt;&lt;p&gt;By adding this role is you can have specific permissions granted for managing just resource locks rather than needing to provide the wide owner or contributor role reducing the risk of the user being able to do unintentional damage.&lt;/p&gt;&lt;p&gt;Remediation:&lt;/p&gt;&lt;p&gt;From Azure Console&lt;/p&gt;&lt;ol&gt;&lt;li&gt;In the Azure portal, open a subscription or resource group where you want the custom role to be assignable.&lt;/li&gt;&lt;li&gt;Select Access control (IAM)&lt;/li&gt;&lt;li&gt;Click Add&lt;/li&gt;&lt;li&gt;Select Add custom role`.&lt;/li&gt;&lt;li&gt;In the Custom Role Name field enter Resource Lock Administrator&lt;/li&gt;&lt;li&gt;In the Description field enter Can Administer Resource Locks&lt;/li&gt;&lt;li&gt;For Baseline permissions select Start from scratch&lt;/li&gt;&lt;li&gt;Click next&lt;/li&gt;&lt;li&gt;In the Permissions tab select Add permissions&lt;/li&gt;&lt;li&gt;In the Search for a permission box, type in Microsoft.Authorization/locks to search for permissions.&lt;/li&gt;&lt;li&gt;Select the check box next to the permission called Microsoft.Authorization/locks&lt;/li&gt;&lt;li&gt;Click add&lt;/li&gt;&lt;li&gt;Click Review+create&lt;/li&gt;&lt;li&gt;Click Create&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;Assign the newly created role to the appropriate user. Using PowerShell: Below is a power shell definition for a resource lock administrator role created at an Azure Management group level&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;Import-Module Az.Accounts Connect-AzAccount $role = Get-AzRoleDefinition "User Access Administrator" $role.Id = $null $role.Name = "Resource Lock Administrator" $role.Description = "Can Administer Resource Locks" $role.Actions.Clear() $role.Actions.Add("Microsoft.Authorization/locks/*") $role.AssignableScopes.Clear() * Scope at the Management group level Management group $role.AssignableScopes.Add("/providers/Microsoft.Management/managementGroups/MG-Name") New-AzRoleDefinition -Role $role Get-AzureRmRoleDefinition "Resource Lock Administrator"&lt;/p&gt;&lt;/blockquote&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="1.23" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="14" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="16" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="8" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="9" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API7:2019-Security Misconfiguration" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="GS-2" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="GS-6" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="PA-1" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="PA-2" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="PA-5" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="PA-7" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;From Azure Console&lt;/p&gt;&lt;ol&gt;&lt;li&gt;In the Azure portal, open a subscription or resource group where you want the view assigned roles.&lt;/li&gt;&lt;li&gt;Select Access control (IAM)&lt;/li&gt;&lt;li&gt;Select Roles&lt;/li&gt;&lt;li&gt;Search for the custom role named &amp;lt;role_name&amp;gt; Ex. from remediation "Resource Lock Administrator"&lt;/li&gt;&lt;li&gt;Ensure that the role is assigned the appropriate user/users&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-20T17:12:08.044">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-A03" name="Create Individual Accounts for the administrator users" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Create an individual account for the administrator users and with this new accounts By creating individual Azure users for people accessing your account, you can give each Azure user a unique set of security credentials.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The administrator accounts shall be used for the administrative actions and for giving or revoke credentials to the user's account. The administrator account shall be not used as a normal user account. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt; 
  &lt;li&gt;Select Azure Active Directory.&lt;/li&gt; 
  &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt; 
  &lt;li&gt;Select &amp;quot;Add New User&amp;quot;.&lt;/li&gt; 
  &lt;li&gt;Fill the required information and click &amp;quot;Create&amp;quot;.&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt; 
&lt;div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Add new users to Azure Active Directory" url="https://docs.microsoft.com/en-us/azure/active-directory/add-users-azure-active-directory"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each user has got a user account assigned.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-20T17:12:08.044">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-A10" name="Create mechanisms to ensure the principle of least privilege is applied" issueId="" issueLink="" platform="" cost="0" risk="64" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Create the mechanisms to review periodically the group and user permissions to ensure the least privilege for the user accounts. Granting least privilege ensures that users only have the permissions required to complete their jobs rather than additional privileges that are not required. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Following this model ensures that, should an account be compromised, the blast radius of damage is limited&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Allocate privileges via groups or roles via the recommendation in "Use RBAC with pre-defined policies added into groups or roles".&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt; 
&lt;div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Create a group and add members in Azure Active Directory" url="https://docs.microsoft.com/en-us/azure/active-directory/active-directory-groups-create-azure-portal"/>
            <reference name="MS Azure - Use Role-Based Access Control to manage access to your Azure subscription resources" url="https://docs.microsoft.com/en-us/azure/active-directory/role-based-access-control-configure"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that the principle of least privilege is achieved in the assignation of roles and
                            groups to the users.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-20T17:12:08.044">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-L03" name="Enable Detailed error messages" issueId="" issueLink="" platform="" cost="0" risk="59" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Enable the detailed error information for HTTP status codes that indicate a failure (status code
                        400 or greater) is saved into the logs files. This may contain information that can help
                        determine why the server returned the error code.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Go to the Azure portal.&lt;/li&gt;
                        &lt;li&gt;Go to the blade for your web app and in &amp;quot;Monitoring&amp;quot; &amp;gt;&amp;gt;
                        &amp;quot;Diagnostics logs&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Enable the &amp;quot;Detailed error messages&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Push &amp;quot;Save&amp;quot; to save the changes.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Enable diagnostics logging for web apps in Azure App Service" url="https://docs.microsoft.com/en-us/azure/app-service-web/web-sites-enable-diagnostic-log"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Go to the Azure portal.&lt;/li&gt;
                            &lt;li&gt;Go to the blade for your web app and in &amp;quot;Monitoring&amp;quot; &amp;gt;&amp;gt;
                            &amp;quot;Diagnostics logs&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that the &amp;quot;Detailed error messages&amp;quot; is enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-20T17:12:08.436">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-L01" name="Enable diagnostic logs auditing for Microsoft Azure" issueId="" issueLink="" platform="" cost="0" risk="59" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Diagnostic Logs capture activity to the data access plane while the Activity log is a subscription-level log for the control plane. Resource-level diagnostic logs provide insight into operations that were performed within that resource itself, for example, getting a secret from a Key Vault. Currently, 32 Azure resources support Diagnostic Logging (See the references section for a complete list), including Network Security Groups, Load Balancers, Key Vault, AD, Logic Apps and CosmosDB. The content of these logs varies by resource type. For example, Windows event system logs are a category of diagnostics logs for VMs, and blob, table, and queue logs are categories of diagnostics logs for storage accounts.&lt;/p&gt;&lt;p&gt;A number of back-end services were not configured to log and store Diagnostic Logs for certain activities or for a sufficient length. It is crucial that logging systems are correctly configured to log all relevant activities and retain those logs for a sufficient length of time. By default, Diagnostic Logs are not enabled. Given that the mean time to detection in an enterprise is 240 days, a minimum retention period of two years is recommended.&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation:&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;The specific steps for configuring resources within the Azure console vary depending on resource, but typically the steps are:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Go to the resource&lt;/li&gt;&lt;li&gt;Click on Diagnostic settings&lt;/li&gt;&lt;li&gt;In the blade that appears, click "Add diagnostic setting"&lt;/li&gt;&lt;li&gt;Configure the diagnostic settings&lt;/li&gt;&lt;li&gt;Click on Save&lt;/li&gt;&lt;/ol&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Enable diagnostics logging for web apps in Azure App Service" url="https://docs.microsoft.com/en-us/azure/app-service-web/web-sites-enable-diagnostic-log"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5.3" supportedStandardRef="cis-azure-standard"/>
            <standard ref="5.3" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="LT-4" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="LT-5" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Go to the resource&lt;/li&gt;&lt;li&gt;Click on Diagnostic settings&lt;/li&gt;&lt;li&gt;In the blade that appears, click "Add diagnostic setting"&lt;/li&gt;&lt;li&gt;Configure the diagnostic settings&lt;/li&gt;&lt;li&gt;Click on Save&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-20T17:12:08.438">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-L04" name="Enable Failed Request Tracing" issueId="" issueLink="" platform="" cost="0" risk="59" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Enable to obtain the detailed information on failed requests, including a trace of the IIS components used to process the request and the time taken in each component. This can be useful if you are attempting to increase site performance or isolate what is causing a specific HTTP error to be returned. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Go to the Azure portal.&lt;/li&gt; 
  &lt;li&gt;Go to the blade for your web app and in "Monitoring" &amp;gt;&amp;gt; "Diagnostics logs".&lt;/li&gt; 
  &lt;li&gt;Enable the "Failed request tracing".&lt;/li&gt; 
  &lt;li&gt;Push "Save" to save the changes.&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Enable diagnostics logging for web apps in Azure App Service" url="https://docs.microsoft.com/en-us/azure/app-service-web/web-sites-enable-diagnostic-log"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Go to the Azure portal.&lt;/li&gt;
                            &lt;li&gt;Go to the blade for your web app and in &amp;quot;Monitoring&amp;quot; &amp;gt;&amp;gt;
                            &amp;quot;Diagnostics logs&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that the &amp;quot;Failed request tracing&amp;quot; is enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-20T17:12:08.438">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-A04" name="Enable MFA for Administrator &amp; Co Administrator accounts" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Enable multi-factor authentication (MFA) device enhances the security of the login process for the Administrator accounts. With MFA, users have a device that generates a unique authentication code (a one-time password, or OTP) and users must provide both their normal credentials (like their username and password) and the OTP. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The MFA device can either be a special piece of hardware, or it can be a virtual device. The recommendation for the Service Administrator &amp;amp; Co Administrator accounts is to use MFA to increase the level of security of the login process. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt; 
  &lt;li&gt;Select Azure Active Directory.&lt;/li&gt; 
  &lt;li&gt;Go into "Users and groups" &amp;gt; "All users".&lt;/li&gt; 
  &lt;li&gt;Select "Multi-Factor Authentication".&lt;/li&gt; 
  &lt;li&gt;Choose all the Service Administrator &amp;amp; Co Administrator accounts and enable MFA.&amp;nbsp;&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - How to require two-step verification for a user or group" url="https://docs.microsoft.com/en-us/azure/multi-factor-authentication/multi-factor-authentication-get-started-user-states"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;Multi-Factor Authentication&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check all Administrator accounts have got the MFA flag enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-20T17:12:08.044">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-L02" name="Enable Web Server Logging" issueId="" issueLink="" platform="" cost="0" risk="59" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Enable the Web Server logging to receive information about HTTP transactions using the W3C extended log file format. This is useful when determining overall site metrics such as the number of requests handled or how many requests are from a specific IP address. There are two ways to save the data: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;b&gt;File system: &lt;/b&gt;stores the application diagnostics information to the web app file system. These files can be accessed by FTP, or downloaded as a Zip archive by using the Azure PowerShell or Azure Command-Line Interface (Azure CLI).&lt;/li&gt; 
  &lt;li&gt;&lt;b&gt;Storage:&lt;/b&gt; stores the application diagnostics information in the specified Azure Storage Account and the logs are only accessible with a client account.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Go to the Azure portal.&lt;/li&gt; 
  &lt;li&gt;Go to the blade for your web app and in "Monitoring" &amp;gt;&amp;gt; "Diagnostics logs".&lt;/li&gt; 
  &lt;li&gt;Enable the type "Storage" or "File System" to activate this function.&lt;/li&gt; 
  &lt;li&gt;Push "Save" to save the changes.&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Enable diagnostics logging for web apps in Azure App Service" url="https://docs.microsoft.com/en-us/azure/app-service-web/web-sites-enable-diagnostic-log"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Go to the Azure portal.&lt;/li&gt;
                            &lt;li&gt;Go to the blade for your web app and in &amp;quot;Monitoring&amp;quot; &amp;gt;&amp;gt;
                            &amp;quot;Diagnostics logs&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that the type &amp;quot;Storage&amp;quot; or &amp;quot;File System&amp;quot;
                            are enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-20T17:12:08.438">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-L05" name="Export the Audit Logs to a storage account" issueId="" issueLink="" platform="" cost="0" risk="59" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Export the information of Audit Logs to a storage account. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Go to "Monitor" and then to "Activity Logs".&lt;/li&gt; 
  &lt;li&gt;Push the button "Export".&lt;/li&gt; 
  &lt;li&gt;Select "All Regions".&lt;/li&gt; 
  &lt;li&gt;Select "Export to a storage account" and select your account.&lt;/li&gt; 
  &lt;li&gt;Select the "Retention (days)" as minimum 90 days.&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Enable diagnostics logging for web apps in Azure App Service" url="https://docs.microsoft.com/en-us/azure/app-service-web/web-sites-enable-diagnostic-log"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Activity Logs&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Push the button &amp;quot;Export&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;All Regions&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;Export to a storage account&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that all fields are correctly filled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-20T17:12:08.438">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-N09" name="Isolate Azure instances into different VNets" issueId="" issueLink="" platform="" cost="0" risk="61" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Specify a VNet for the Azure instance as a launch parameter. Applications that run on the Cloud instance can use the VNet security configuration when they access Azure resources.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  You can configure an Azure cloud service from Solution Explorer in Visual Studio. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Create a virtual network with multiple subnets" url="https://docs.microsoft.com/en-us/azure/virtual-network/virtual-networks-create-vnet-arm-pportal"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that the Azure instances are into different VNets.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-20T17:12:08.649">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-N08" name="Isolate Azure resources into separate VNets by function" issueId="" issueLink="" platform="" cost="0" risk="61" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Place the resources into separate VNets according to their use (production, development, test).
                        Placing such resources accordingly ensures that a resource of a higher security level is not
                        exposed by the security settings of a lower labeled VNet.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Identify the resources that exist in an incorrect VNet.&lt;/li&gt;
                        &lt;li&gt;Migrate or move it to the correct Vnet.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Azure Virtual Network" url="https://docs.microsoft.com/en-us/azure/virtual-network/virtual-networks-overview"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Identify the resources that exist in an incorrect VNet.&lt;/li&gt;
                            &lt;li&gt;Check that the resources are into the correct Vnet.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-20T17:12:08.650">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-A07" name="Recertify user access" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Do regular reviews of accounts on the system and verify that it doesn't exist stoled or fake
                        accounts. With this process is ensured that there are not compromised accounts by former
                        employees or by attackers.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        At least every 90 days complete the following:&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Log in to the Azure portal as an owner.&lt;/li&gt;
                        &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                        &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;For any user that should not exist:&lt;/li&gt;
                        &lt;li&gt;Select the user.&lt;/li&gt;
                        &lt;li&gt;Click &amp;quot;Delete&amp;quot;.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Assign a user or group to an enterprise app in Azure Active Directory" url="https://docs.microsoft.com/en-us/azure/active-directory/active-directory-coreapps-assign-user-azure-portal"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Log in to the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each user has got an assigned account.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-20T17:12:08.045">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-A01" name="Register a Security contact for your Azure account" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Provide the security contact details for the Azure subscription. Microsoft Security Response Center (MSRC) performs security monitoring of the Azure network and infrastructure and receives threat intelligence and abuse complaints from third parties. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Microsoft will use this information provided to contact if the MSRC discovers that customer data has been accessed by an unlawful or unauthorized party. Also, this provides the means of ensuring these advisories are routed to the security team, especially if a distribution email address is used.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Access &amp;quot;Azure Security Center&amp;quot;.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;In the &amp;quot;Recommendations&amp;quot; tab choose &amp;quot;Provide security contact details&amp;quot;.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Once filled, save changes.&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Provide security contact details in Azure Security Center" url="https://docs.microsoft.com/en-us/azure/security-center/security-center-provide-security-contact-details"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Access &amp;quot;Azure Security Center&amp;quot;.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;In the &amp;quot;Recommendations&amp;quot; tab choose &amp;quot;Provide security
                            contact details&amp;quot;.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Check that all fields are filled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-20T17:12:08.045">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="API LOGGING AND AUDITING" name="API Logging and Auditing" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="UNAUDITABLE-CHANGES-AZURE" name="Attackers make undetected and unaudited changes to system configurations" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>If audit trails are not properly protected, an attacker could gain access to the
                                system, modify the status of resources or exfiltrate sensitive data without being
                                noticed.</desc>
              <riskRating confidentiality="25" integrity="75" availability="25" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-LOGS01">
                  <countermeasures>
                    <countermeasure ref="AZ-L01" mitigation="20"/>
                    <countermeasure ref="AZ-L02" mitigation="20"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AZURE-LOGS02">
                  <countermeasures>
                    <countermeasure ref="AZ-L03" mitigation="20"/>
                    <countermeasure ref="AZ-L04" mitigation="20"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AZURE-LOGS03">
                  <countermeasures>
                    <countermeasure ref="AZ-L05" mitigation="20"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-L01" mitigation="20"/>
                <countermeasure ref="AZ-L02" mitigation="20"/>
                <countermeasure ref="AZ-L03" mitigation="20"/>
                <countermeasure ref="AZ-L04" mitigation="20"/>
                <countermeasure ref="AZ-L05" mitigation="20"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="AUTHENTICATION" name="Authentication" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="AZURE-LOST-ACCESS-ROOT" name="Attackers gain unauthorized access to the root account due to the lack of configuration of the account" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;div&gt;Attackers could gain unauthorized access to the administrator account due to a lack of configuration of the account and its security mechanisms, making it possible to modify credentials and add/remove user accounts.
                                &lt;/div&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="AZ-W04">
                  <countermeasures>
                    <countermeasure ref="AZ-A04" mitigation="25"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AZURE-MON02">
                  <countermeasures>
                    <countermeasure ref="AZ-A03" mitigation="25"/>
                  </countermeasures>
                </weakness>
                <weakness ref="LOST-ACCESS-ROOT-01">
                  <countermeasures>
                    <countermeasure ref="AZ-A02" mitigation="25"/>
                  </countermeasures>
                </weakness>
                <weakness ref="LOST-SECURITY-ALERTS">
                  <countermeasures>
                    <countermeasure ref="AZ-A01" mitigation="25"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-A01" mitigation="25"/>
                <countermeasure ref="AZ-A02" mitigation="25"/>
                <countermeasure ref="AZ-A03" mitigation="25"/>
                <countermeasure ref="AZ-A04" mitigation="25"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="AZURE-LOST-ACCESS-USER" name="Attackers gain unauthorized access to the user account due to the lack of configuration of the account" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;Attackers could gain unauthorized access to the user account due to the lack of configuration of the account, for example, the security question to reset the password is configured incorrectly.&lt;/p&gt;</desc>
              <riskRating confidentiality="50" integrity="50" availability="50" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-IDENTITY-03">
                  <countermeasures>
                    <countermeasure ref="AZ-A07" mitigation="50"/>
                    <countermeasure ref="AZ-A08" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-A07" mitigation="50"/>
                <countermeasure ref="AZ-A08" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="AUTHORIZATION" name="Authorization" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="LOSS-CONTROL_ENV" name="Attackers gain unauthorized access to the control of the environment" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;Attackers could potentially gain unauthorized access to the control of the environment, due to user accounts - or role groups - not being well defined and configured. As a consequence attackers may be able to make changes without root approval.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="75" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-ACCESS-01">
                  <countermeasures>
                    <countermeasure ref="AZ-A09" mitigation="20"/>
                    <countermeasure ref="AZ-A10" mitigation="30"/>
                    <countermeasure ref="AZ-A11" mitigation="30"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AZURE-EXPIRATION-DATE">
                  <countermeasures>
                    <countermeasure ref="AZ-A12" mitigation="20"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-A09" mitigation="20"/>
                <countermeasure ref="AZ-A10" mitigation="30"/>
                <countermeasure ref="AZ-A11" mitigation="30"/>
                <countermeasure ref="AZ-A12" mitigation="20"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="GENERAL" name="General" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="UNCONFIGURED-SECURITY" name="Attackers gain access to the system by exploiting weak security configurations" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>Weak security configurations like using sharing passwords in plain text, using weak passwords, using obsolete encryption algorithms, etc. can lead attackers to gain access to the system.</desc>
              <riskRating confidentiality="75" integrity="50" availability="25" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-16">
                  <countermeasures>
                    <countermeasure ref="AZURE-AD19" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZURE-AD19" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="LOG ACTIVITY ALERTS" name="Log Activity alerts" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="UNAUTHORIZED-ACCESS-SYSTEMS" name="Attackers access the systems without being detected" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;Attackers gain access to the systems and are not detected and consequently, changes made by attackers can not be audited or detected.&lt;/p&gt;</desc>
              <riskRating confidentiality="50" integrity="25" availability="25" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-MON02">
                  <countermeasures>
                    <countermeasure ref="AZ-M10" mitigation="20"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AZURE-MON03">
                  <countermeasures>
                    <countermeasure ref="AZ-M11" mitigation="20"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AZURE-MON04">
                  <countermeasures>
                    <countermeasure ref="AZ-M12" mitigation="20"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AZURE-MON05">
                  <countermeasures>
                    <countermeasure ref="AZ-M04" mitigation="20"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AZURE-MON06">
                  <countermeasures>
                    <countermeasure ref="AZ-M05" mitigation="20"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-M04" mitigation="20"/>
                <countermeasure ref="AZ-M05" mitigation="20"/>
                <countermeasure ref="AZ-M10" mitigation="20"/>
                <countermeasure ref="AZ-M11" mitigation="20"/>
                <countermeasure ref="AZ-M12" mitigation="20"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="UNAUTHORIZED-ACCESS-SECURITY-SYSTEMS" name="Attackers gain undetected access to the security system configurations" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>Attackers could gain undetected access to the security system configurations and
                                changes made by attackers couldn't be audited or detected.
                            </desc>
              <riskRating confidentiality="50" integrity="50" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-MON01">
                  <countermeasures>
                    <countermeasure ref="AZ-M01" mitigation="25"/>
                    <countermeasure ref="AZ-M02" mitigation="25"/>
                    <countermeasure ref="AZ-M03" mitigation="25"/>
                    <countermeasure ref="AZ-M09" mitigation="25"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-M01" mitigation="25"/>
                <countermeasure ref="AZ-M02" mitigation="25"/>
                <countermeasure ref="AZ-M03" mitigation="25"/>
                <countermeasure ref="AZ-M09" mitigation="25"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="UNAUTHORIZED-ACCESS-NETWORK" name="Sensitive data is compromised through network access" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>Attackers gain undetected access to the network systems and changes made by the
                                attackers couldn't be audited or detected.
                            </desc>
              <riskRating confidentiality="50" integrity="50" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-MON07">
                  <countermeasures>
                    <countermeasure ref="AZ-M06" mitigation="40"/>
                    <countermeasure ref="AZ-M07" mitigation="30"/>
                    <countermeasure ref="AZ-M08" mitigation="30"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-M06" mitigation="40"/>
                <countermeasure ref="AZ-M07" mitigation="30"/>
                <countermeasure ref="AZ-M08" mitigation="30"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="NETWORKING" name="Networking" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="UNAUTHORIZED-CONNECTION" name="Attackers gain unauthorized connection to the resources" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;Attackers could potentially gain unauthorized connection to the resources through misconfigured ports or security network configurations.&lt;/p&gt;</desc>
              <riskRating confidentiality="50" integrity="50" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-VNET01">
                  <countermeasures>
                    <countermeasure ref="AZ-N08" mitigation="50"/>
                    <countermeasure ref="AZ-N09" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-N08" mitigation="50"/>
                <countermeasure ref="AZ-N09" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="b992741c-c8ce-44aa-97e5-666c03c3bcb5" diagramComponentId="1690c9f9-1e8d-4588-a76a-8661c26b240c" ref="d7e6358e-7bbd-4423-9094-54e0b6106e9b" name="Azure Digital Twins (Empty)" desc="" library="CS-Default" parentComponentRef="ce742726-74c5-4638-87db-954bb474c93e" componentDefinitionRef="empty-component">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses/>
      <countermeasures/>
      <usecases/>
    </component>
  </components>
</template>
