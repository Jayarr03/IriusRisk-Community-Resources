<?xml version="1.0" encoding="UTF-8"?>
<template ref="azure-scalable-web-application" name="Azure - Scalable Web Application" tags="">
  <desc/>
  <diagram draft="false">
    <schema></schema>
  </diagram>
  <trustZones>
    <trustZone ref="public" uuid="6376d53e-6461-412b-8e04-7b3fe2b397de" name="Public" desc="Untrusted public zone" trustRating="1"/>
    <trustZone ref="internet" uuid="f0ba7722-39b6-4c81-8290-a30a248bb8d9" name="Internet" desc="Untrusted Internet public zone" trustRating="1"/>
  </trustZones>
  <questions/>
  <assets/>
  <settings/>
  <dataflows>
    <dataflow name="Generic Client -&gt; Azure DNS (Domain Name System)" ref="07900f17-25ca-4aa5-af25-effb54669cf2" source="64b32d56-f074-42c8-8011-caa811dd5519" target="5a844678-18a6-48b6-82bb-e1645f19d863">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Azure WAF (Web Application Firewall) -&gt; Azure Blob Storage" ref="259637ce-d147-4afd-9b31-f8ba595854f1" source="0923cf1a-c654-4dea-9e47-1ac946c2a1d6" target="937cc702-e6d9-4ac3-81c1-b3e7221c9b73">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Web Front App -&gt; Azure Search (Empty)" ref="25dcfa8f-b5cf-448d-8ecd-f9d6c7c39bc2" source="02d8d342-3126-442a-96cc-a584e575cdac" target="41e81e5b-4bba-4943-b1d9-acaee515fa80">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Azure DNS (Domain Name System) -&gt; Azure WAF (Web Application Firewall)" ref="3f01fd6a-c9bc-4795-a8db-8d5035954ec7" source="5a844678-18a6-48b6-82bb-e1645f19d863" target="0923cf1a-c654-4dea-9e47-1ac946c2a1d6">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Azure DNS (Domain Name System) -&gt; Azure Active Directory" ref="658cdda4-b302-4f48-b61b-deb2c8980816" source="5a844678-18a6-48b6-82bb-e1645f19d863" target="1653ce2b-2853-42e2-95bc-fcaf40c766a3">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Azure WAF (Web Application Firewall) -&gt; Web Front App" ref="7a91f45c-c03d-4da1-8896-91c3b8a54a56" source="0923cf1a-c654-4dea-9e47-1ac946c2a1d6" target="02d8d342-3126-442a-96cc-a584e575cdac">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Azure Blob Storage -&gt; Azure Files (static files)" ref="88b675e7-a9b5-4fe3-b568-f3a1d5cbdf37" source="937cc702-e6d9-4ac3-81c1-b3e7221c9b73" target="4389a1a9-e47f-474b-ab70-fc2180977326">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Azure Cache for Redis -&gt; Web Front App" ref="a2f4c248-e919-4eb5-a6f3-4f9c71d6e2ba" source="b8a5c765-8fe8-480e-aa2f-1821d8bd9393" target="02d8d342-3126-442a-96cc-a584e575cdac">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Data Storage -&gt; Azure Search (Empty)" ref="bf10f872-ae77-47da-bbf6-f7918b0880e5" source="2f54dc81-5973-46d2-b9d4-f0919491c8c9" target="41e81e5b-4bba-4943-b1d9-acaee515fa80">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Web Front App -&gt; Data Storage" ref="e9dab125-cbd1-4d4d-b87f-4e04d86ba287" source="02d8d342-3126-442a-96cc-a584e575cdac" target="2f54dc81-5973-46d2-b9d4-f0919491c8c9">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Data Storage -&gt; Azure Cache for Redis" ref="f9fc4b22-1c32-4612-9e90-8a2c8c3f130d" source="2f54dc81-5973-46d2-b9d4-f0919491c8c9" target="b8a5c765-8fe8-480e-aa2f-1821d8bd9393">
      <assets/>
      <tags/>
    </dataflow>
  </dataflows>
  <customFields>
    <customField ref="APT" value=""/>
    <customField ref="Application Details" value=""/>
    <customField ref="Application Downtime Cost" value=""/>
    <customField ref="Application Type" value=""/>
    <customField ref="Apply Standard at all times" value="1"/>
    <customField ref="Contact Email" value=""/>
    <customField ref="Custom Field A" value=""/>
    <customField ref="DEL" value=""/>
    <customField ref="GPS Environment" value="NO"/>
    <customField ref="Hosting Location" value="GCP"/>
    <customField ref="Milestone 1" value=""/>
    <customField ref="Milestone 1 - Deadline" value=""/>
    <customField ref="Milestone 2" value=""/>
    <customField ref="Milestone 2 - Deadline" value=""/>
    <customField ref="Milestone 3" value=""/>
    <customField ref="Milestone 3 - Deadline" value=""/>
    <customField ref="Product Review Session Details" value=""/>
    <customField ref="Project Management Details" value=""/>
    <customField ref="Project Manager" value=""/>
    <customField ref="Project Number" value="_::_"/>
    <customField ref="Project Owner Email" value="jrabe@iriusrisk.com"/>
    <customField ref="Ready for Workflow advancement?" value="NO"/>
    <customField ref="Requirements" value=""/>
    <customField ref="Test Custom" value=""/>
    <customField ref="Third Party Contact" value=""/>
    <customField ref="Third Party Organization" value=""/>
    <customField ref="UPS Template Picker" value="GCP Template"/>
    <customField ref="Use Case" value=""/>
    <customField ref="User Email Field" value=""/>
    <customField ref="VZ - Requirements" value="Type 1||Type 2"/>
  </customFields>
  <components>
    <component uuid="4a8a1f0e-1198-4da6-92f1-bf634828a776" diagramComponentId="60f21da2-ec82-475a-8722-3996fd7f398a" ref="5a844678-18a6-48b6-82bb-e1645f19d863" name="Azure DNS (Domain Name System)" desc="" library="Microsoft-Azure" parentComponentRef="f0155081-ed2f-4930-b284-10d437597eec" componentDefinitionRef="CD-MICROSOFT-AZURE-DNS">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses>
        <weakness ref="AZURE-ACCESS-01" name="Misconfigured credentials for groups and roles" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        The credentials for groups and roles are not correctly configured and there are user accounts with more privileges than necessary.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each user has got assigned the correct groups.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All groups&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each group has got assigned the correct roles to achieve principle of
                            least privilege.&lt;/li&gt;
                            &lt;li&gt;Check that the roles for the Cloud Service are well assigned.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;div&gt;
                            &lt;/div&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:05.059">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="AZURE-ADMIN-INV" name="Maintain an inventory of administrative accounts" issueId="" issueLink="" platform="" cost="0" risk="64" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Maintain an inventory of administrative accounts&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Azure AD has built-in roles that must be explicitly assigned and are queryable. Use the Azure AD PowerShell module to perform ad hoc queries to discover accounts that are members of administrative groups.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; How to get a directory role in Azure AD with PowerShell&lt;/p&gt; 
&lt;p&gt;Get-AzureADDirectoryRole [-Filter ] [-InformationAction ] [-InformationVariable ] []&lt;/p&gt; 
&lt;p&gt;Get-AzureADDirectoryRole -ObjectId  [-InformationAction ] [-InformationVariable ] []&lt;/p&gt; 
&lt;p&gt;How to get members of a directory role in Azure AD with PowerShell&lt;/p&gt; 
&lt;p&gt;Get-AzureADDirectoryRoleMember -ObjectId  [-InformationAction ] [-InformationVariable ] []&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Get-AzureADDirectoryRole" url="https://docs.microsoft.com/en-us/powershell/module/azuread/get-azureaddirectoryrole?view=azureadps-2.0"/>
            <reference name="Get-AzureADDirectoryRoleMember" url="https://docs.microsoft.com/en-us/powershell/module/azuread/get-azureaddirectoryrolemember?view=azureadps-2.0"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that you maintain an inventory of administrative accounts.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:05.034">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="AUTHORIZATION" name="Authorization" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="LOSS-CONTROL_ENV" name="Attackers gain unauthorized access to the control of the environment" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;Attackers could potentially gain unauthorized access to the control of the environment, due to user accounts - or role groups - not being well defined and configured. As a consequence attackers may be able to make changes without root approval.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="75" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-ACCESS-01">
                  <countermeasures>
                    <countermeasure ref="AZURE-ADMIN-INV" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZURE-ADMIN-INV" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="cefcebf2-51b4-4820-9841-1df6b9a9f17d" diagramComponentId="852a9e7a-09e0-44c5-bb4a-8340cbc7fcbf" ref="02d8d342-3126-442a-96cc-a584e575cdac" name="Web Front App" desc="" library="CS-Default" parentComponentRef="f0155081-ed2f-4930-b284-10d437597eec" componentDefinitionRef="empty-component">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses/>
      <countermeasures/>
      <usecases/>
    </component>
    <component uuid="e0b41157-37e5-4fbf-b246-03014776ce29" diagramComponentId="ab7b3f44-81a7-4dfe-ab75-6ee0900904c1" ref="0e6e9835-2638-416c-b3cd-c30ef85ae37b" name="Azure SQL Server" desc="" library="Microsoft-Azure" parentComponentRef="2f54dc81-5973-46d2-b9d4-f0919491c8c9" componentDefinitionRef="CD-MICROSOFT-AZURE-SQL-SERVER">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses>
        <weakness ref="AZURE-NET-01" name="Unauthorized connection attempts on open ports" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        Receiving unauthorized connections to open ports makes systems vulnerable to attacks. To
                        avoid this, access to the network must be as restricted as possible, so that only the necessary
                        ports are open and the minimum inbound traffic is accepted.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Check that each Azure resources have got their Network Security Groups.&lt;/li&gt;
                            &lt;li&gt;Check that a set of these groups achieve with the principle of the least
                            privilege.&lt;/li&gt;
                            &lt;li&gt;Check that the inbound/outbound security rules are enabled and correctly
                            configured.&lt;/li&gt;
                            &lt;li&gt;In &amp;quot;Inbound security rules&amp;quot;, check that all the traffic from
                            0.0.0.0/0&amp;nbsp;is blocked.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:04.805">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="C-AZURE-SQL-SERVER1" name="Configure the Windows Firewall to control SQL Server Access" issueId="" issueLink="" platform="" cost="0" risk="61" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Configure the Windows Firewall to control SQL Server Access&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Firewall systems help prevent unauthorized access to computer resources. If a firewall is turned on but not correctly configured, attempts to connect to SQL Server might be blocked.&lt;br&gt; To access an instance of the SQL Server through a firewall, you must configure the firewall on the computer that is running SQL Server. The firewall is a component of Microsoft Windows. You can also install a firewall from another company.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Firewalls are important to help secure the SQL Server installation. Firewalls will be most effective if you follow these guidelines:&lt;/p&gt; 
&lt;p&gt;- Put a firewall between the server and the Internet. Enable your firewall. If your firewall is turned off, turn it on. If your firewall is turned on, do not turn it off.&lt;/p&gt; 
&lt;p&gt;- Divide the network into security zones separated by firewalls. Block all traffic, and then selectively admit only what is required.&lt;/p&gt; 
&lt;p&gt;- In a multi-tier environment, use multiple firewalls to create screened subnets.&lt;/p&gt; 
&lt;p&gt;- When you are installing the server inside a Windows domain, configure interior firewalls to allow Windows Authentication.&lt;/p&gt; 
&lt;p&gt;- If your application uses distributed transactions, you might have to configure the firewall to allow Microsoft Distributed Transaction Coordinator (MS DTC) traffic to flow between separate MS DTC instances. You will also have to configure the firewall to allow traffic to flow between the MS DTC and resource managers such as SQL Server.&lt;/p&gt; 
&lt;p&gt;For more information about the default Windows firewall settings, and a description of the TCP ports that affect the Database Engine, Analysis Services, Reporting Services, and Integration Services, please see Reference URLs.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Configure the Windows Firewall to Allow SQL Server Access" url="https://docs.microsoft.com/en-us/sql/sql-server/install/configure-the-windows-firewall-to-allow-sql-server-access"/>
            <reference name="Security Considerations for a SQL Server Installation" url="https://docs.microsoft.com/en-us/sql/sql-server/install/security-considerations-for-a-sql-server-installation"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>	&lt;p&gt;Ensure that Windows Firewall is properly configured.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:04.759">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="NETWORKING" name="Networking" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="AZURE-UNAUTHORISED-CONNECTION" name="Attackers perform unauthorized network access" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;Attackers could perform unauthorized network access to the resources through misconfigured ports or security network configurations.&lt;/p&gt;</desc>
              <riskRating confidentiality="25" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-NET-01">
                  <countermeasures>
                    <countermeasure ref="C-AZURE-SQL-SERVER1" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-AZURE-SQL-SERVER1" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="7ec61857-8865-4bfd-b16f-4a05b41490ff" diagramComponentId="ebed94f5-a2c2-4349-a777-303b6ae3f38f" ref="41e81e5b-4bba-4943-b1d9-acaee515fa80" name="Azure Search (Empty)" desc="" library="CS-Default" parentComponentRef="f0155081-ed2f-4930-b284-10d437597eec" componentDefinitionRef="empty-component">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses/>
      <countermeasures/>
      <usecases/>
    </component>
    <component uuid="cd7fe0b8-ce39-4f3d-9e19-fc8efeca39c4" diagramComponentId="a25405d3-a0ed-4cb3-aba7-886346e7abf4" ref="0923cf1a-c654-4dea-9e47-1ac946c2a1d6" name="Azure WAF (Web Application Firewall)" desc="" library="Microsoft-Azure" parentComponentRef="f0155081-ed2f-4930-b284-10d437597eec" componentDefinitionRef="CD-MICROSOFT-AZURE-WAF">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses>
        <weakness ref="AZURE-NET-01" name="Unauthorized connection attempts on open ports" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        Receiving unauthorized connections to open ports makes systems vulnerable to attacks. To
                        avoid this, access to the network must be as restricted as possible, so that only the necessary
                        ports are open and the minimum inbound traffic is accepted.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Check that each Azure resources have got their Network Security Groups.&lt;/li&gt;
                            &lt;li&gt;Check that a set of these groups achieve with the principle of the least
                            privilege.&lt;/li&gt;
                            &lt;li&gt;Check that the inbound/outbound security rules are enabled and correctly
                            configured.&lt;/li&gt;
                            &lt;li&gt;In &amp;quot;Inbound security rules&amp;quot;, check that all the traffic from
                            0.0.0.0/0&amp;nbsp;is blocked.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:09.230">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="AZURE-WAF-GW" name="Deploy a WAF with Azure Application Gateway" issueId="" issueLink="" platform="" cost="0" risk="61" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Deploy a Web Application Firewall (WAF) with Azure Application Gateway in front of an Internet facing app 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  Azure Web Application Firewall (WAF) on Azure Application Gateway provides centralized protection of your web applications from common exploits and vulnerabilities. Web applications are increasingly targeted by malicious attacks that exploit commonly known vulnerabilities. SQL injection and cross-site scripting are among the most common attacks. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  To enable a Web Application Firewall on Application Gateway, you must create a WAF policy. This policy is where all of the managed rules, custom rules, exclusions, and other customizations such as file upload limit exist. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  You can configure a WAF policy and associate that policy to one or more application gateways for protection. A WAF policy consists of two types of security rules: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - Custom rules that you create 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - Managed rule sets that are a collection of Azure-managed pre-configured set of rules 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  When both are present, custom rules are processed before processing the rules in a managed rule set. A rule is made of a match condition, a priority, and an action. Action types supported are: ALLOW, BLOCK, and LOG. You can create a fully customized policy that meets your specific application protection requirements by combining managed and custom rules. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rules within a policy are processed in a priority order. Priority is a unique integer that defines the order of rules to process. Smaller integer value denotes a higher priority and those rules are evaluated before rules with a higher integer value. Once a rule is matched, the corresponding action that was defined in the rule is applied to the request. Once such a match is processed, rules with lower priorities aren't processed further. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  A web application delivered by Application Gateway can have a WAF policy associated to it at the global level, at a per-site level, or at a per-URI level. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Create a policy 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  First, create a basic WAF policy with a managed Default Rule Set (DRS) using the Azure portal. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  1. On the upper left side of the portal, select Create a resource. Search for WAF, select Web Application Firewall, then select Create. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  2. On Create a WAF policy page, Basics tab, enter or select the following information, accept the defaults for the remaining settings, and then select Review + create: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Setting&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Value 
&lt;/div&gt; 
&lt;div&gt;
  Policy for&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Regional WAF (Application Gateway) 
&lt;/div&gt; 
&lt;div&gt;
  Subscription&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Select your subscription name 
&lt;/div&gt; 
&lt;div&gt;
  Resource group&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Select your resource group 
&lt;/div&gt; 
&lt;div&gt;
  Policy name&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Type a unique name for your WAF policy. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  3. On the Association tab, enter one of the following settings, then select Add: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Setting&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Value 
&lt;/div&gt; 
&lt;div&gt;
  Associate Application Gateway&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Select your Application Gateway profile name. 
&lt;/div&gt; 
&lt;div&gt;
  Associate Listeners&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Select the name of your Application Gateway Listener, then select Add. 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt;
  Note 
&lt;/div&gt; 
&lt;div&gt;
  If you assign a policy to your Application Gateway (or listener) that already has a policy in place, the original policy is overwritten and replaced by the new policy. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  4. Select Review + create, then select Create. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Tutorial: Create an application gateway with a Web Application Firewall using the Azure portal" url="https://docs.microsoft.com/en-us/azure/web-application-firewall/ag/application-gateway-web-application-firewall-portal"/>
            <reference name="What is Azure Web Application Firewall on Azure Application Gateway?" url="https://docs.microsoft.com/en-us/azure/web-application-firewall/ag/ag-overview"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Test the application gateway 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Although IIS isn't required to create the application gateway, you installed it to verify whether Azure successfully created the application gateway. Use IIS to test the application gateway: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  1. Find the public IP address for the application gateway on its Overview page. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Or, you can select All resources, enter myAGPublicIPAddress in the search box, and then select it in the search results. Azure displays the public IP address on the Overview page. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  2. Copy the public IP address, and then paste it into the address bar of your browser. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  3. Check the response. A valid response verifies that the application gateway was successfully created and it can successfully connect with the backend. 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:09.191">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="NETWORKING" name="Networking" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="AZURE-UNAUTHORISED-CONNECTION" name="Attackers perform unauthorized network access" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;Attackers could perform unauthorized network access to the resources through misconfigured ports or security network configurations.&lt;/p&gt;</desc>
              <riskRating confidentiality="25" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-NET-01">
                  <countermeasures>
                    <countermeasure ref="AZURE-WAF-GW" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZURE-WAF-GW" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="e9701d66-bb71-4da3-aaab-e27682ec5d58" diagramComponentId="badd1a0f-597c-443a-9211-f61f343ef306" ref="dba469a0-bf6c-48b7-aa78-f0df786599c7" name="Azure Functions" desc="" library="Microsoft-Azure" parentComponentRef="02d8d342-3126-442a-96cc-a584e575cdac" componentDefinitionRef="microsoft-azure-functions">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses>
        <weakness ref="AZURE-UNSECURE-CREDENTIALS" name="Credentials are not securely stored" state="0" impact="100" issueId="" issueLink="">
          <desc>The credentials used to access the resources are not securely stored and can be accessed by unauthorized personnel.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:05.855">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="DATA-TRANSMIT-CLEAR" name="Data is transmitted in clear text" state="0" impact="100" issueId="" issueLink="">
          <desc>Data is not protected when transmitted to applications or customers and it can be read or modified by unauthorized actors.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:05.855">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-MON02" name="Excessive use of administrator accounts" state="0" impact="100" issueId="" issueLink="">
          <desc>The administrator accounts are used for all actions, not only for administrative actions. This
                        is because these users have not got a personal or a user account to do the daily actions.&amp;nbsp;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that there is any rule to notify when there is a bad usage of the root
                            account.&lt;/li&gt;
                            &lt;li&gt;Check if these rules are enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:05.855">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CWE-77" name="Improper Neutralization of Special Elements used in a Command ('Command Injection')" state="0" impact="100" issueId="" issueLink="">
          <desc>The software constructs all or part of a command using
                    externally-influenced input from an upstream component, but it does not
                    neutralize or incorrectly neutralizes special elements that could modify the
                    intended command when it is sent to a downstream
                    component.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:05.855">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CWE-778" name="Insufficient Logging" state="0" impact="100" issueId="" issueLink="">
          <desc>When a critical security event occurs, the software either does not record the event or omits important details about the event when logging it. When critical security events are not logged properly, such as in the case of a failed login attempt, this can make malicious behavior more difficult to detect and may hinder forensic analyses after a successful attack.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:05.855">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-MON03" name="Lack of 2FA" state="0" impact="100" issueId="" issueLink="">
          <desc>Logging into the console without using Multi-factor Authentication (MFA) and without being detected. The connection without MFA must be audited and monitored, the correct security group must be informed and the connection must be validated.&amp;nbsp;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that there is any rule to notify when someone tries to login into the
                            console without MFA.&lt;/li&gt;
                            &lt;li&gt;Check if these rules are enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:05.855">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZ-W04" name="Misconfigured Authentication Method for Administrator Accounts" state="0" impact="100" issueId="" issueLink="">
          <desc>The authentication method &amp;quot;Multi-factor Authentication&amp;quot; for the Administrator accounts is not configured.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;Multi-Factor Authentication&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check all Administrator accounts have got the MFA flag enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:05.855">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-IDENTITY-03" name="Misconfigured User Account" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        Key security settings such as resetting the password and other password controls are not
                        configured.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log in to the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each user has got an assigned account.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;Password reset&amp;quot; &amp;gt; &amp;quot;Authentication Method&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that the security confirmation measures and the security criteria are well
                            filled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:05.854">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-ACCESS-01" name="Misconfigured credentials for groups and roles" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        The credentials for groups and roles are not correctly configured and there are user accounts with more privileges than necessary.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each user has got assigned the correct groups.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All groups&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each group has got assigned the correct roles to achieve principle of
                            least privilege.&lt;/li&gt;
                            &lt;li&gt;Check that the roles for the Cloud Service are well assigned.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;div&gt;
                            &lt;/div&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:05.855">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-EXPIRATION-DATE" name="Misconfigured password expiration" state="0" impact="100" issueId="" issueLink="">
          <desc>The password expiration is not configured and users are not obliged to change their passwords.
                        Not change frequently the passwords gives facilities to attackers to obtain them.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            Check that the password expiration has got the correct values. Therefore, we can obtain the
                            values using the Get-MsolPasswordPolicy cmdlet from the Azure Active Directory Module for
                            Windows PowerShell. With the following command:
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;br /&gt;
                            &lt;/div&gt;
                            &lt;blockquote&gt;
                            &lt;div&gt;
                            PS C:\&amp;gt; Get-MsolPasswordPolicy -DomainName contoso.com
                            &lt;/div&gt;
                            &lt;/blockquote&gt;
                            &lt;div&gt;
                            &lt;br /&gt;
                            &lt;/div&gt;
                            &lt;div&gt;
                            More information: Doc MS Azure
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:05.855">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-VNET01" name="Networks for Azure resources are not properly segmented. Without proper segmentation, when attackers gain access to one resource, any other resources in the same VNet are compromised" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        Resources in the same VNet are compromised because when one of them is attacked and the
                        attackers gain access, they also gain access to all resources.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            Identify the resources and the Microsoft Azure instances.
                            &lt;/div&gt;
                            &lt;div&gt;
                            Check that the resources are in the correct VNet.
                            &lt;/div&gt;
                            &lt;div&gt;
                            Check that the Microsoft Azure instances&amp;nbsp;are into different VNets.
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:05.854">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-NET-01" name="Unauthorized connection attempts on open ports" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        Receiving unauthorized connections to open ports makes systems vulnerable to attacks. To
                        avoid this, access to the network must be as restricted as possible, so that only the necessary
                        ports are open and the minimum inbound traffic is accepted.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Check that each Azure resources have got their Network Security Groups.&lt;/li&gt;
                            &lt;li&gt;Check that a set of these groups achieve with the principle of the least
                            privilege.&lt;/li&gt;
                            &lt;li&gt;Check that the inbound/outbound security rules are enabled and correctly
                            configured.&lt;/li&gt;
                            &lt;li&gt;In &amp;quot;Inbound security rules&amp;quot;, check that all the traffic from
                            0.0.0.0/0&amp;nbsp;is blocked.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:05.853">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="AZ-A09" name="Apply RBAC with pre-defined policies added into groups or roles" issueId="" issueLink="" platform="" cost="0" risk="64" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Define and create groups that relate to job functions (administrators, developers, accounting,
                        etc.) and assign the relevant permissions for each group, and then assign IAM users to those
                        groups.&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &amp;nbsp;&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        All the users in an IAM group inherit the permissions assigned to the group. That way, you can
                        make changes for everyone in a group in just one place. As people move around in your company,
                        you can simply change what IAM group their IAM user belongs to. This method is known as Role
                        Based Access Control (RBAC).&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Remove a user from a group:&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;ol&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                        &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                        &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Click on the user name. All the groups the user belongs are there.&lt;/li&gt;
                        &lt;li&gt;Choose the group and &amp;quot;Remove&amp;quot;.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/ol&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Create a group and add user:&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;ol&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                        &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                        &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All groups&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Click &amp;quot;New Group&amp;quot; and fill the information.&lt;/li&gt;
                        &lt;li&gt;Search and add the user.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Create a group and add members in Azure Active Directory" url="https://docs.microsoft.com/en-us/azure/active-directory/active-directory-groups-create-azure-portal"/>
            <reference name="MS Azure - Use Role-Based Access Control to manage access to your Azure subscription resources" url="https://docs.microsoft.com/en-us/azure/active-directory/role-based-access-control-configure"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each user has got assigned the correct groups.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All groups&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each group has got assigned the correct roles.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:05.718">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-A12" name="Configure password expiration" issueId="" issueLink="" platform="" cost="0" risk="64" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        &lt;div&gt;
                        Configure the password expiration to force after a determinate time, the password code shall be
                        changed for the users.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Configure password management to match security criteria. This value is configurable
                        using the Set-MsolPasswordPolicy cmdlet from the Azure Active Directory Module for Windows
                        PowerShell. With the following command as the example:&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        &lt;div&gt;
                        Set-MsolPasswordPolicy -ValidityPeriod 60 -NotificationDays 14&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;This command updates the tenant so that all users passwords expire after 60
                        days. The users receive notification 14 days prior to that expiry.
                        &lt;/blockquote&gt;
                        &lt;div&gt;
                        &lt;div&gt;
                        More information:&amp;nbsp;
                        &lt;a
                        href="https://docs.microsoft.com/en-us/powershell/module/msonline/set-msolpasswordpolicy?view=azureadps-1.0"&gt;Doc
                        MS Azure&lt;/a&gt;
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;ul&gt;
                        &lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Password policies and restrictions in Azure Active Directory" url="https://docs.microsoft.com/en-us/azure/active-directory/active-directory-passwords-policy"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            Check that the password expiration has got the correct values. Therefore, we can obtain the
                            values using the Get-MsolPasswordPolicy cmdlet from the Azure Active Directory Module for
                            Windows PowerShell. With the following command:
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;br /&gt;
                            &lt;/div&gt;
                            &lt;blockquote&gt;
                            &lt;div&gt;
                            PS C:\&amp;gt; Get-MsolPasswordPolicy -DomainName contoso.com
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;br /&gt;
                            &lt;/div&gt;
                            &lt;/blockquote&gt;More information:
                            &lt;a
                            href="https://docs.microsoft.com/en-us/powershell/module/msonline/get-msolpasswordpolicy?view=azureadps-1.0"&gt;Doc
                            MS Azure&lt;/a&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:05.720">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-A11" name="Configure roles for the Cloud Service" issueId="" issueLink="" platform="" cost="0" risk="64" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Define and create the roles for the Azure Cloud Service. For each role, define the permissions and also configure how that role runs. When you launch an Azure instance, you shall specify a role for the instance as a launch parameter. Applications that run on the Cloud instance use the role's credentials when they access Azure resources. This role's permissions determine what the application is allowed to do.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Configure an Azure cloud service from Solution Explorer in Visual Studio.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Use Role-Based Access Control to manage access to your Azure subscription resources" url="https://docs.microsoft.com/en-us/azure/active-directory/role-based-access-control-configure"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that the roles for the Cloud Service are well assigned.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:05.720">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-A03" name="Create Individual Accounts for the administrator users" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Create an individual account for the administrator users and with this new accounts By creating individual Azure users for people accessing your account, you can give each Azure user a unique set of security credentials.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The administrator accounts shall be used for the administrative actions and for giving or revoke credentials to the user's account. The administrator account shall be not used as a normal user account. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt; 
  &lt;li&gt;Select Azure Active Directory.&lt;/li&gt; 
  &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt; 
  &lt;li&gt;Select &amp;quot;Add New User&amp;quot;.&lt;/li&gt; 
  &lt;li&gt;Fill the required information and click &amp;quot;Create&amp;quot;.&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt; 
&lt;div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Add new users to Azure Active Directory" url="https://docs.microsoft.com/en-us/azure/active-directory/add-users-azure-active-directory"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each user has got a user account assigned.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:05.720">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-A10" name="Create mechanisms to ensure the principle of least privilege is applied" issueId="" issueLink="" platform="" cost="0" risk="64" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Create the mechanisms to review periodically the group and user permissions to ensure the least privilege for the user accounts. Granting least privilege ensures that users only have the permissions required to complete their jobs rather than additional privileges that are not required. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Following this model ensures that, should an account be compromised, the blast radius of damage is limited&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Allocate privileges via groups or roles via the recommendation in "Use RBAC with pre-defined policies added into groups or roles".&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt; 
&lt;div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Create a group and add members in Azure Active Directory" url="https://docs.microsoft.com/en-us/azure/active-directory/active-directory-groups-create-azure-portal"/>
            <reference name="MS Azure - Use Role-Based Access Control to manage access to your Azure subscription resources" url="https://docs.microsoft.com/en-us/azure/active-directory/role-based-access-control-configure"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that the principle of least privilege is achieved in the assignation of roles and
                            groups to the users.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:05.720">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-WAF-GW" name="Deploy a WAF with Azure Application Gateway" issueId="" issueLink="" platform="" cost="0" risk="61" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Deploy a Web Application Firewall (WAF) with Azure Application Gateway in front of an Internet facing app 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  Azure Web Application Firewall (WAF) on Azure Application Gateway provides centralized protection of your web applications from common exploits and vulnerabilities. Web applications are increasingly targeted by malicious attacks that exploit commonly known vulnerabilities. SQL injection and cross-site scripting are among the most common attacks. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  To enable a Web Application Firewall on Application Gateway, you must create a WAF policy. This policy is where all of the managed rules, custom rules, exclusions, and other customizations such as file upload limit exist. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  You can configure a WAF policy and associate that policy to one or more application gateways for protection. A WAF policy consists of two types of security rules: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - Custom rules that you create 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - Managed rule sets that are a collection of Azure-managed pre-configured set of rules 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  When both are present, custom rules are processed before processing the rules in a managed rule set. A rule is made of a match condition, a priority, and an action. Action types supported are: ALLOW, BLOCK, and LOG. You can create a fully customized policy that meets your specific application protection requirements by combining managed and custom rules. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rules within a policy are processed in a priority order. Priority is a unique integer that defines the order of rules to process. Smaller integer value denotes a higher priority and those rules are evaluated before rules with a higher integer value. Once a rule is matched, the corresponding action that was defined in the rule is applied to the request. Once such a match is processed, rules with lower priorities aren't processed further. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  A web application delivered by Application Gateway can have a WAF policy associated to it at the global level, at a per-site level, or at a per-URI level. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Create a policy 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  First, create a basic WAF policy with a managed Default Rule Set (DRS) using the Azure portal. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  1. On the upper left side of the portal, select Create a resource. Search for WAF, select Web Application Firewall, then select Create. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  2. On Create a WAF policy page, Basics tab, enter or select the following information, accept the defaults for the remaining settings, and then select Review + create: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Setting&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Value 
&lt;/div&gt; 
&lt;div&gt;
  Policy for&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Regional WAF (Application Gateway) 
&lt;/div&gt; 
&lt;div&gt;
  Subscription&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Select your subscription name 
&lt;/div&gt; 
&lt;div&gt;
  Resource group&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Select your resource group 
&lt;/div&gt; 
&lt;div&gt;
  Policy name&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Type a unique name for your WAF policy. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  3. On the Association tab, enter one of the following settings, then select Add: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Setting&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Value 
&lt;/div&gt; 
&lt;div&gt;
  Associate Application Gateway&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Select your Application Gateway profile name. 
&lt;/div&gt; 
&lt;div&gt;
  Associate Listeners&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Select the name of your Application Gateway Listener, then select Add. 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt;
  Note 
&lt;/div&gt; 
&lt;div&gt;
  If you assign a policy to your Application Gateway (or listener) that already has a policy in place, the original policy is overwritten and replaced by the new policy. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  4. Select Review + create, then select Create. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Tutorial: Create an application gateway with a Web Application Firewall using the Azure portal" url="https://docs.microsoft.com/en-us/azure/web-application-firewall/ag/application-gateway-web-application-firewall-portal"/>
            <reference name="What is Azure Web Application Firewall on Azure Application Gateway?" url="https://docs.microsoft.com/en-us/azure/web-application-firewall/ag/ag-overview"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Test the application gateway 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Although IIS isn't required to create the application gateway, you installed it to verify whether Azure successfully created the application gateway. Use IIS to test the application gateway: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  1. Find the public IP address for the application gateway on its Overview page. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Or, you can select All resources, enter myAGPublicIPAddress in the search box, and then select it in the search results. Azure displays the public IP address on the Overview page. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  2. Copy the public IP address, and then paste it into the address bar of your browser. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  3. Check the response. A valid response verifies that the application gateway was successfully created and it can successfully connect with the backend. 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:05.720">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-APP-SERVICE1" name="Disable anonymous access" issueId="" issueLink="" platform="" cost="0" risk="64" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Disable anonymous access 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  Unless you need to support anonymous requests, disable anonymous access. Whenever possible, use the App Service authentication module instead of writing code to handle authentication and authorization 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  In the Azure portal, you can configure App Service authorization with a number of behaviors when incoming request is not authenticated. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Allow only authenticated requests 
&lt;/div&gt; 
&lt;div&gt;
  The option is Log in with &amp;lt;provider&amp;gt;. App Service redirects all anonymous requests to /.auth/login/&amp;lt;provider&amp;gt; for the provider you choose. If the anonymous request comes from a native mobile app, the returned response is an HTTP 401 Unauthorized. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  With this option, you don't need to write any authentication code in your app. Finer authorization, such as role-specific authorization, can be handled by inspecting the user's claims. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  Restricting access in this way applies to all calls to your app, which may not be desirable for apps wanting a publicly available home page, as in many single-page applications. 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Authentication and authorization in Azure App Service and Azure Functions" url="https://docs.microsoft.com/en-us/azure/app-service/overview-authentication-authorization"/>
            <reference name="Security recommendations for App Service" url="https://docs.microsoft.com/en-us/azure/app-service/security-recommendations"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>In the Azure portal, ensure that anonymous access is disabled.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:05.720">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-FUNCTIONS1" name="Disable remote debugging" issueId="" issueLink="" platform="" cost="0" risk="61" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Disable remote debugging for Azure Functions 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  Remote debugging for Azure Functions requires certain inbound ports to be opened. Denying the access to these inbound ports, will help you reduce the possibility of a security breach. Ensure that your Azure Functions have remote debugging disabled in order to enhance security and protect them from unauthorized access. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  Make sure that remote debugging is disabled, except when you are actively debugging your functions. You can disable remote debugging in the General Settings tab of your function app Configuration in the portal. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Securing Azure Functions" url="https://docs.microsoft.com/en-us/azure/azure-functions/security-concepts"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Ensure that your Azure Functions have remote debugging disabled.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:05.720">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-ENABLE-ALERTS" name="Enable alerts for anomalous activities" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Enable alerts for anomalous activities 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  Azure Security Center generates detailed security alerts and recommendations. You can view them in the portal or through programmatic tools. You may also need to export some or all of this information for tracking with other monitoring tools in your environment. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Continuous export lets you fully customize what will be exported, and where it will go. For example, you can configure it so that: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  All high severity alerts are sent to an Azure Event Hub 
&lt;/div&gt; 
&lt;div&gt;
  All medium or higher severity findings from vulnerability assessment scans of your SQL servers are sent to a specific Log Analytics workspace 
&lt;/div&gt; 
&lt;div&gt;
  Specific recommendations are delivered to an Event Hub or Log Analytics workspace whenever they're generated 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  Set up a continuous export 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  You can configure continuous export from the Security Center pages in Azure portal, via the Security Center REST API, or at scale using the supplied Azure Policy templates. Select the appropriate tab below for details of each. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Configure continuous export from the Security Center pages in Azure portal 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The steps below are necessary whether you're setting up a continuous export to Log Analytics workspace or Azure Event Hubs. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  1. From Security Center's sidebar, select Pricing &amp;amp; settings. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  2. Select the specific subscription for which you want to configure the data export. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  3. From the sidebar of the settings page for that subscription, select Continuous Export. 
&lt;/div&gt; 
&lt;div&gt;
  Here you see the export options. There's a tab for each available export target. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  4. Select the data type you'd like to export and choose from the filters on each type (for example, export only high severity alerts). 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  5. Optionally, if your selection includes one of these four recommendations, you can include the vulnerability assessment findings together with them: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - Vulnerability Assessment findings on your SQL databases should be remediated 
&lt;/div&gt; 
&lt;div&gt;
  - Vulnerability Assessment findings on your SQL servers on machines should be remediated (Preview) 
&lt;/div&gt; 
&lt;div&gt;
  - Vulnerabilities in Azure Container Registry images should be remediated (powered by Qualys) 
&lt;/div&gt; 
&lt;div&gt;
  - Vulnerabilities in your virtual machines should be remediated 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  To include the findings with these recommendations, enable the include security findings option. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  6. From the "Export target" area, choose where you'd like the data saved. Data can be saved in a target on a different subscription (for example on a Central Event Hub instance or a central Log Analytics workspace). 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  7. Select Save. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Continuously export Security Center data" url="https://docs.microsoft.com/en-us/azure/security-center/continuous-export?tabs=azure-portal"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  View exported alerts and recommendations in Azure Monitor 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  In some cases, you may choose to view the exported Security Alerts and/or recommendations in Azure Monitor. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Azure Monitor provides a unified alerting experience for a variety of Azure alerts including Diagnostic Log, Metric alerts, and custom alerts based on Log Analytics workspace queries. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  To view alerts and recommendations from Security Center in Azure Monitor, configure an Alert rule based on Log Analytics queries (Log Alert): 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  1. From Azure Monitor's Alerts page, select New alert rule. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  2. In the create rule page, configure your new rule (in the same way you'd configure a log alert rule in Azure Monitor): 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - For Resource, select the Log Analytics workspace to which you exported security alerts and recommendations. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - For Condition, select Custom log search. In the page that appears, configure the query, look-back period, and frequency period. In the search query, you can type SecurityAlert or SecurityRecommendation to query the data types that Security Center continuously exports to as you enable the Continuous export to Log Analytics feature. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - Optionally, configure the Action Group that you'd like to trigger. Action groups can trigger email sending, ITSM tickets, WebHooks, and more. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  You'll now see new Azure Security Center alerts or recommendations (depending on your configured continuous export rules and the condition you defined in your Azure Monitor alert rule) in Azure Monitor alerts, with automatic triggering of an action group (if provided). 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:05.720">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-L01" name="Enable diagnostic logs auditing for Microsoft Azure" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Diagnostic Logs capture activity to the data access plane while the Activity log is a subscription-level log for the control plane. Resource-level diagnostic logs provide insight into operations that were performed within that resource itself, for example, getting a secret from a Key Vault. Currently, 32 Azure resources support Diagnostic Logging (See the references section for a complete list), including Network Security Groups, Load Balancers, Key Vault, AD, Logic Apps and CosmosDB. The content of these logs varies by resource type. For example, Windows event system logs are a category of diagnostics logs for VMs, and blob, table, and queue logs are categories of diagnostics logs for storage accounts.&lt;/p&gt;&lt;p&gt;A number of back-end services were not configured to log and store Diagnostic Logs for certain activities or for a sufficient length. It is crucial that logging systems are correctly configured to log all relevant activities and retain those logs for a sufficient length of time. By default, Diagnostic Logs are not enabled. Given that the mean time to detection in an enterprise is 240 days, a minimum retention period of two years is recommended.&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation:&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;The specific steps for configuring resources within the Azure console vary depending on resource, but typically the steps are:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Go to the resource&lt;/li&gt;&lt;li&gt;Click on Diagnostic settings&lt;/li&gt;&lt;li&gt;In the blade that appears, click "Add diagnostic setting"&lt;/li&gt;&lt;li&gt;Configure the diagnostic settings&lt;/li&gt;&lt;li&gt;Click on Save&lt;/li&gt;&lt;/ol&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Enable diagnostics logging for web apps in Azure App Service" url="https://docs.microsoft.com/en-us/azure/app-service-web/web-sites-enable-diagnostic-log"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5.3" supportedStandardRef="cis-azure-standard"/>
            <standard ref="5.3" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="LT-4" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="LT-5" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Go to the resource&lt;/li&gt;&lt;li&gt;Click on Diagnostic settings&lt;/li&gt;&lt;li&gt;In the blade that appears, click "Add diagnostic setting"&lt;/li&gt;&lt;li&gt;Configure the diagnostic settings&lt;/li&gt;&lt;li&gt;Click on Save&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:05.720">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-A04" name="Enable MFA for Administrator &amp; Co Administrator accounts" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Enable multi-factor authentication (MFA) device enhances the security of the login process for the Administrator accounts. With MFA, users have a device that generates a unique authentication code (a one-time password, or OTP) and users must provide both their normal credentials (like their username and password) and the OTP. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The MFA device can either be a special piece of hardware, or it can be a virtual device. The recommendation for the Service Administrator &amp;amp; Co Administrator accounts is to use MFA to increase the level of security of the login process. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt; 
  &lt;li&gt;Select Azure Active Directory.&lt;/li&gt; 
  &lt;li&gt;Go into "Users and groups" &amp;gt; "All users".&lt;/li&gt; 
  &lt;li&gt;Select "Multi-Factor Authentication".&lt;/li&gt; 
  &lt;li&gt;Choose all the Service Administrator &amp;amp; Co Administrator accounts and enable MFA.&amp;nbsp;&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - How to require two-step verification for a user or group" url="https://docs.microsoft.com/en-us/azure/multi-factor-authentication/multi-factor-authentication-get-started-user-states"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;Multi-Factor Authentication&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check all Administrator accounts have got the MFA flag enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:05.720">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-USER-MFA" name="Enable per-user MFA" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Enable per-user MFA 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  Multi-factor authentication (MFA) is a process where a user is prompted during a sign-in event for additional forms of identification. This prompt could be to enter a code on their cellphone or to provide a fingerprint scan. When you require a second form of authentication, security is increased as this additional factor isn't something that's easy for an attacker to obtain or duplicate. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  To secure user sign-in events in Azure AD, you can require multi-factor authentication (MFA). Enabling Azure AD Multi-Factor Authentication using Conditional Access policies is the recommended approach to protect users. Conditional Access is an Azure AD Premium P1 or P2 feature that lets you apply rules to require MFA as needed in certain scenarios 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  For Azure AD free tenants without Conditional Access, you can use security defaults to protect users. Users are prompted for MFA as needed, but you can't define your own rules to control the behavior. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Features and licenses for Azure AD Multi-Factor Authentication" url="https://docs.microsoft.com/en-us/azure/active-directory/authentication/concept-mfa-licensing"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  1. Log into the Azure portal as an owner. 
&lt;/div&gt; 
&lt;div&gt;
  2. Select Azure Active Directory. 
&lt;/div&gt; 
&lt;div&gt;
  3. Go into "Users and groups" &amp;gt; "All users". 
&lt;/div&gt; 
&lt;div&gt;
  4. Select "Multi-Factor Authentication". 
&lt;/div&gt; 
&lt;div&gt;
  5. Ensure your users have the MFA flag enabled. 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:05.720">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-ENABLE-WAF-LOGS" name="Enable WAF logs" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Enable WAF logs 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  You can monitor Web Application Firewall resources using logs. You can save performance, access, and other data or consume it from a resource for monitoring purposes. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  Enable logging through the Azure portal 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  1. In the Azure portal, find your resource and select Diagnostic settings. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  For Application Gateway, three logs are available: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - Access log 
&lt;/div&gt; 
&lt;div&gt;
  - Performance log 
&lt;/div&gt; 
&lt;div&gt;
  - Firewall log 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  2. To start collecting data, select Turn on diagnostics. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  3. The Diagnostics settings page provides the settings for the resource logs. In this example, Log Analytics stores the logs. You can also use event hubs and a storage account to save the resource logs. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  4. Type a name for the settings, confirm the settings, and select Save. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Resource logs for Azure Web Application Firewall" url="https://docs.microsoft.com/en-us/azure/web-application-firewall/ag/web-application-firewall-logs"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Ensure that all WAF logs are enabled.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:05.720">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-ENCRYPTION-TRANSIT" name="Encrypt Sensitive data in transit" issueId="" issueLink="" platform="" cost="0" risk="64" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;div&gt;
   Use encryption to protect traffic on external and public networks as it is critical for data protection 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   Rationale: 
 &lt;/div&gt; 
 &lt;div&gt;
   Protect data in transit against 'out of band' attacks (such as traffic capture) using encryption to ensure that attackers cannot easily read or modify the data. 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   Remediation: 
 &lt;/div&gt; 
 &lt;div&gt;
   1. Use a valid TLS/SSL certificate for custom domains. 
 &lt;/div&gt; 
 &lt;div&gt;
   2. Ensure that any clients connecting to your Azure resources for HTTP traffic can negotiate TLS v1.2 or greater. 
 &lt;/div&gt; 
 &lt;div&gt;
   3. Use SSH (for Linux) or RDP/TLS (for Windows) for remote management, instead of unencrypted protocols 
 &lt;/div&gt; 
 &lt;div&gt;
   4. Disable obsoleted SSL/TLS/SSH versions, protocols, and weak ciphers 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   Redirect HTTP to HTTPs 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   By default, clients can connect to web apps by using both HTTP or HTTPS. Microsoft Azure recommends redirecting HTTP to HTTPs because HTTPS uses the SSL/TLS protocol to provide a secure connection, which is both encrypted and authenticated. 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   Enforce FTPS 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   For enhanced security, you should allow FTP over TLS/SSL only. You can also disable both FTP and FTPS if you don't use FTP deployment. 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   In your app's resource page in Azure portal, select Configuration &amp;gt; General settings from the left navigation. 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   To disable unencrypted FTP, select FTPS Only in FTP state. To disable both FTP and FTPS entirely, select Disabled. When finished, click Save. If using FTPS Only, you must enforce TLS 1.2 or higher by navigating to the TLS/SSL settings blade of your web app. TLS 1.0 and 1.1 are not supported with FTPS Only. 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   Enable client certificates 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   To set up your app to require client certificates, you can switch On the Require incoming certificate by selecting Configuration &amp;gt; General Settings from the Azure Portal or you need to set the clientCertEnabled setting for your app to true. To set the setting, run the following command in the Cloud Shell. 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   az webapp update --set clientCertEnabled=true --name &amp;lt;app_name&amp;gt; --resource-group &amp;lt;group_name&amp;gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   Impact: 
 &lt;/div&gt; 
 &lt;div&gt;
   None 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Add a TLS/SSL certificate in Azure App Service" url="https://docs.microsoft.com/en-us/azure/app-service/configure-ssl-certificate"/>
            <reference name="Azure App ServiceSecurity" url="https://docs.microsoft.com/en-us/azure/app-service/overview-security"/>
            <reference name="Configure TLS mutual authentication for Azure App Service" url="https://docs.microsoft.com/en-us/azure/app-service/app-service-web-configure-tls-mutual-auth"/>
            <reference name="Deploy your app to Azure App Service using FTP/S" url="https://docs.microsoft.com/en-us/azure/app-service/deploy-ftp"/>
            <reference name="Security in Azure App Service" url="https://docs.microsoft.com/en-us/azure/app-service/overview-security"/>
            <reference name="Security recommendations for App Service" url="https://docs.microsoft.com/en-us/azure/app-service/security-recommendations"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Test HTTPS 
&lt;/div&gt; 
&lt;div&gt;
  In various browsers, browse to https://&amp;lt;your.custom.domain&amp;gt; to verify that it serves up your app. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Your application code can inspect the protocol via the "x-appservice-proto" header. The header will have a value of http or https. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Note 
&lt;/div&gt; 
&lt;div&gt;
  If your app gives you certificate validation errors, you're probably using a self-signed certificate. 
&lt;/div&gt; 
&lt;div&gt;
  If that's not the case, you may have left out intermediate certificates when you export your certificate to the PFX file. 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:05.721">
              <output/>
            </source>
            <references>
              <reference name="Azure App ServiceSecurity" url="https://docs.microsoft.com/en-us/azure/app-service/overview-security"/>
            </references>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-L05" name="Export the Audit Logs to a storage account" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Export the information of Audit Logs to a storage account. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Go to "Monitor" and then to "Activity Logs".&lt;/li&gt; 
  &lt;li&gt;Push the button "Export".&lt;/li&gt; 
  &lt;li&gt;Select "All Regions".&lt;/li&gt; 
  &lt;li&gt;Select "Export to a storage account" and select your account.&lt;/li&gt; 
  &lt;li&gt;Select the "Retention (days)" as minimum 90 days.&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Enable diagnostics logging for web apps in Azure App Service" url="https://docs.microsoft.com/en-us/azure/app-service-web/web-sites-enable-diagnostic-log"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Activity Logs&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Push the button &amp;quot;Export&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;All Regions&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;Export to a storage account&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that all fields are correctly filled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:05.721">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-FUNCTIONS3" name="Function code must validate any data received from a trigger or input binding" issueId="" issueLink="" platform="" cost="0" risk="78" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Function code must validate any data received from a trigger or input binding 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  The triggers and bindings used by your functions don't provide any additional data validation. Your code must validate any data received from a trigger or input binding. If an upstream service is compromised, you don't want unvalidated inputs flowing through your functions. For example, if your function stores data from an Azure Storage queue in a relational database, you must validate the data and parameterize your commands to avoid SQL injection attacks.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Don't assume that the data coming into your function has already been validated or sanitized. It's also a good idea to verify that the data being written to output bindings is valid. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  Implement a data validation procedure for the data coming into your functions. 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Securing Azure Functions" url="https://docs.microsoft.com/en-us/azure/azure-functions/security-concepts"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="12" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="14" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="16" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="18" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="19" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="24" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="6" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="8" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API8:2019-Injection" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Ensure that your code validates any data received from a trigger or input binding.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:05.721">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-N09" name="Isolate Azure instances into different VNets" issueId="" issueLink="" platform="" cost="0" risk="61" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Specify a VNet for the Azure instance as a launch parameter. Applications that run on the Cloud instance can use the VNet security configuration when they access Azure resources.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  You can configure an Azure cloud service from Solution Explorer in Visual Studio. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Create a virtual network with multiple subnets" url="https://docs.microsoft.com/en-us/azure/virtual-network/virtual-networks-create-vnet-arm-pportal"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that the Azure instances are into different VNets.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:05.721">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-A07" name="Recertify user access" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Do regular reviews of accounts on the system and verify that it doesn't exist stoled or fake
                        accounts. With this process is ensured that there are not compromised accounts by former
                        employees or by attackers.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        At least every 90 days complete the following:&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Log in to the Azure portal as an owner.&lt;/li&gt;
                        &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                        &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;For any user that should not exist:&lt;/li&gt;
                        &lt;li&gt;Select the user.&lt;/li&gt;
                        &lt;li&gt;Click &amp;quot;Delete&amp;quot;.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Assign a user or group to an enterprise app in Azure Active Directory" url="https://docs.microsoft.com/en-us/azure/active-directory/active-directory-coreapps-assign-user-azure-portal"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Log in to the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each user has got an assigned account.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:05.721">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-FUNCTIONS2" name="Restrict CORS access to Azure Functions" issueId="" issueLink="" platform="" cost="0" risk="61" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Restrict CORS access to Azure Functions 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  Azure Functions supports cross-origin resource sharing (CORS). CORS is configured in the portal and through the Azure CLI. The CORS allowed origins list applies at the function app level. With CORS enabled, responses include the Access-Control-Allow-Origin header. 
&lt;/div&gt; 
&lt;div&gt;
  To prevent malicious code execution on the client, modern browsers block requests from web applications to resources running in a separate domain. Cross-origin resource sharing (CORS) lets an Access-Control-Allow-Origin header declare which origins are allowed to call endpoints on your function app. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  When you configure the Allowed origins list for your function app, the Access-Control-Allow-Origin header is automatically added to all responses from HTTP endpoints in your function app. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  When the wild-card (*) is used, all other domains are ignored. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Use the az functionapp cors add command to add a domain to the allowed origins list. The following example adds the contoso.com domain: 
&lt;/div&gt; 
&lt;div&gt;
  az functionapp cors add --name &amp;lt;FUNCTION_APP_NAME&amp;gt; \ 
&lt;/div&gt; 
&lt;div&gt;
  --resource-group &amp;lt;RESOURCE_GROUP_NAME&amp;gt; \ 
&lt;/div&gt; 
&lt;div&gt;
  --allowed-origins https://contoso.com 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Use the az functionapp cors show command to list the current allowed origins. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Manage your function app" url="https://docs.microsoft.com/en-us/azure/azure-functions/functions-how-to-use-azure-function-app-settings"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Ensure that CORS access is restricted.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:05.721">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-APP-SECRETS" name="Secure application secrets" issueId="" issueLink="" platform="" cost="0" risk="64" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Secure application secrets 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  Don't store application secrets, such as database credentials, API tokens, or private keys in your code or configuration files. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  The commonly accepted approach is to access application secrets as environment variables using the standard pattern in your language of choice. In Azure App Service, you can define environment variables through app settings and connection strings. App settings and connection strings are stored encrypted in Azure. The app settings are decrypted only before being injected into your app's process memory when the app starts. The encryption keys are rotated regularly. Alternatively, you can integrate your Azure App Service app with Azure Key Vault for advanced secrets management. By accessing the Key Vault with a managed identity, your App Service app can securely access the secrets you need. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Security recommendations for App Service" url="https://docs.microsoft.com/en-us/azure/app-service/security-recommendations"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Ensure that application secrets, such as database credentials, API tokens, or private keys are not stored in your code or configuration files.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:05.721">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-N01" name="Set Network Security Groups to be as restrictive as possible" issueId="" issueLink="" platform="" cost="0" risk="61" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Use Network Security Groups (NSG) to filter the ingress/egress network traffic to Azure resources. Set the limit all the traffic (ingress/egress) on the NSG in order to force the use of least privilege into the NSG.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Identify Azure resources for each NSG.&lt;/li&gt; 
  &lt;li&gt;Create a set of least privilege NSG for those resources.&lt;/li&gt; 
  &lt;li&gt;Place the resources in those security groups.&lt;/li&gt; 
  &lt;li&gt;Change the inbound/outbound security rules to fulfill the least privilege.&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - How to open ports to a virtual machine with the Azure portal" url="https://docs.microsoft.com/en-us/azure/virtual-machines/windows/nsg-quickstart-portal"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Check that each Azure resources has got their Network Security Groups.&lt;/li&gt;
                            &lt;li&gt;Check that a set of these groups achieve with the principle of the least
                            privilege.&lt;/li&gt;
                            &lt;li&gt;Check that the inbound/outbound security rules are enabled and correctly
                            configured.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:05.721">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-API-MANAGEMENT" name="Use Azure API Management (APIM) to authenticate requests" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Use Azure API Management (APIM) to authenticate requests 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  APIM provides a variety of API security options for incoming requests. With APIM in place, you can configure your function app to accept requests only from the IP address of your APIM instance. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  API Management authentication policies 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Authenticate with Basic 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Use the authentication-basic policy to authenticate with a backend service using Basic authentication. This policy effectively sets the HTTP Authorization header to the value corresponding to the credentials provided in the policy. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Policy statement 
&lt;/div&gt; 
&lt;div&gt;
  &amp;lt;authentication-basic username="username" password="password" /&amp;gt; 
&lt;/div&gt; 
&lt;div&gt;
  Example 
&lt;/div&gt; 
&lt;div&gt;
  &amp;lt;authentication-basic username="testuser" password="testpassword" /&amp;gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Authenticate with client certificate 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Use the authentication-certificate policy to authenticate with a backend service using client certificate. The certificate needs to be installed into API Management first and is identified by its thumbprint. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Policy statement 
&lt;/div&gt; 
&lt;div&gt;
  &amp;lt;authentication-certificate thumbprint="thumbprint" certificate-id="resource name"/&amp;gt; 
&lt;/div&gt; 
&lt;div&gt;
  Examples 
&lt;/div&gt; 
&lt;div&gt;
  - In this example, the client certificate is identified by its thumbprint: 
&lt;/div&gt; 
&lt;div&gt;
  &amp;lt;authentication-certificate thumbprint="CA06F56B258B7A0D4F2B05470939478651151984" /&amp;gt; 
&lt;/div&gt; 
&lt;div&gt;
  - In this example, the client certificate is identified by the resource name: 
&lt;/div&gt; 
&lt;div&gt;
  &amp;lt;authentication-certificate certificate-id="544fe9ddf3b8f30fb490d90f" /&amp;gt;&amp;nbsp;&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt;
  - In this example, the client certificate is set in the policy rather than retrieved from the built-in certificate store: 
&lt;/div&gt; 
&lt;div&gt;
  &amp;lt;authentication-certificate body="@(context.Variables.GetValueOrDefault&amp;lt;byte[]&amp;gt;("byteCertificate"))" password="optional-certificate-password" /&amp;gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Authenticate with managed identity 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Use the authentication-managed-identity policy to authenticate with a backend service using the managed identity. This policy essentially uses the managed identity to obtain an access token from Azure Active Directory for accessing the specified resource. After successfully obtaining the token, the policy will set the value of the token in the Authorization header using the Bearer scheme. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Both system-assigned identity and any of the multiple user-assigned identity can be used to request token. If client-id is not provided system-assigned identity is assumed. If the client-id variable is provided token is requested for that user-assigned identity from Azure Active Directory 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Policy statement 
&lt;/div&gt; 
&lt;div&gt;
  &amp;lt;authentication-managed-identity resource="resource" client-id="clientid of user-assigned identity" output-token-variable-name="token-variable" ignore-error="true|false"/&amp;gt;&amp;nbsp;&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt;
  Example 
&lt;/div&gt; 
&lt;div&gt;
  Use managed identity to authenticate with a backend service 
&lt;/div&gt; 
&lt;div&gt;
  &amp;lt;authentication-managed-identity resource="https://graph.microsoft.com"/&amp;gt;&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt;
  &amp;lt;authentication-managed-identity resource="https://management.azure.com/"/&amp;gt; &amp;lt;!--Azure Resource Manager--&amp;gt; 
&lt;/div&gt; 
&lt;div&gt;
  &amp;lt;authentication-managed-identity resource="https://vault.azure.net"/&amp;gt; &amp;lt;!--Azure Key Vault--&amp;gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="API Management authentication policies" url="https://docs.microsoft.com/en-us/azure/api-management/api-management-authentication-policies"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Ensure that you use an APIM authentication option to authenticate requests.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:05.721">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-N02" name="Use Network Security Groups to block inbound port traffic from 0.0.0.0/0" issueId="" issueLink="" platform="" cost="0" risk="61" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Use Network Security Groups (NSG) to filter the ingress/egress network traffic to Azure resources. Set the limit inbound access to all TCP or all ports to avoid undue exposure to risk.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt; 
  &lt;li&gt;Select Network Security Groups.&lt;/li&gt; 
  &lt;li&gt;Choose the NSG to edit (or create a new one).&lt;/li&gt; 
  &lt;li&gt;In "Inbound security rules":&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;ul&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Remove all rules that allow port traffic.&lt;/li&gt; 
   &lt;li&gt;Add a rule to deny port traffic&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/ul&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - How to open ports to a virtual machine with the Azure portal" url="https://docs.microsoft.com/en-us/azure/virtual-machines/windows/nsg-quickstart-portal"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Network Security Groups.&lt;/li&gt;
                            &lt;li&gt;Choose the NSG to view one of them.&lt;/li&gt;
                            &lt;li&gt;In &amp;quot;Inbound security rules&amp;quot;, check that all the traffic from
                            0.0.0.0/0 is are blocked.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:05.721">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="authentication" name="Authentication" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="AZURE-LOST-ACCESS-ROOT" name="Attackers gain unauthorized access to the root account due to the lack of configuration of the account" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;div&gt;Attackers could gain unauthorized access to the administrator account due to a lack of configuration of the account and its security mechanisms, making it possible to modify credentials and add/remove user accounts.
                                &lt;/div&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="AZ-W04">
                  <countermeasures>
                    <countermeasure ref="AZ-A04" mitigation="50"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AZURE-MON02">
                  <countermeasures>
                    <countermeasure ref="AZ-A03" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-A03" mitigation="50"/>
                <countermeasure ref="AZ-A04" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="AZURE-LOST-ACCESS-USER" name="Attackers gain unauthorized access to the user account due to the lack of configuration of the account" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;Attackers could gain unauthorized access to the user account due to the lack of configuration of the account, for example, the security question to reset the password is configured incorrectly.&lt;/p&gt;</desc>
              <riskRating confidentiality="50" integrity="50" availability="50" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-IDENTITY-03">
                  <countermeasures>
                    <countermeasure ref="AZ-A07" mitigation="34"/>
                    <countermeasure ref="AZURE-API-MANAGEMENT" mitigation="33"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AZURE-MON03">
                  <countermeasures>
                    <countermeasure ref="AZURE-USER-MFA" mitigation="33"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-A07" mitigation="34"/>
                <countermeasure ref="AZURE-API-MANAGEMENT" mitigation="33"/>
                <countermeasure ref="AZURE-USER-MFA" mitigation="33"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="authorization" name="Authorization" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="LOSS-CONTROL_ENV" name="Attackers gain unauthorized access to the control of the environment" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;Attackers could potentially gain unauthorized access to the control of the environment, due to user accounts - or role groups - not being well defined and configured. As a consequence attackers may be able to make changes without root approval.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="75" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-ACCESS-01">
                  <countermeasures>
                    <countermeasure ref="AZ-A09" mitigation="20"/>
                    <countermeasure ref="AZ-A10" mitigation="20"/>
                    <countermeasure ref="AZ-A11" mitigation="20"/>
                    <countermeasure ref="AZURE-APP-SERVICE1" mitigation="20"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AZURE-EXPIRATION-DATE">
                  <countermeasures>
                    <countermeasure ref="AZ-A12" mitigation="20"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-A09" mitigation="20"/>
                <countermeasure ref="AZ-A10" mitigation="20"/>
                <countermeasure ref="AZ-A11" mitigation="20"/>
                <countermeasure ref="AZ-A12" mitigation="20"/>
                <countermeasure ref="AZURE-APP-SERVICE1" mitigation="20"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="general" name="General" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="ACCESS-TO-DATA" name="Sensitive data is compromised through unauthorized access to data storage" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;A data breach is a security violation in which sensitive, protected or confidential data is copied, transmitted, viewed, stolen or used by an individual unauthorized to do so. Sensitive data could be exposed due to a bad configuration in user permissions.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-UNSECURE-CREDENTIALS">
                  <countermeasures>
                    <countermeasure ref="AZURE-APP-SECRETS" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZURE-APP-SECRETS" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="logging-and-monitoring" name="Logging and Monitoring" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="OWASP A10:2017" name="Exploitation of insufficient logging and monitoring" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>	&lt;p&gt;Exploitation of insufficient logging and monitoring is the bedrock of nearly every major incident.&lt;br /&gt;
 Attackers rely on the lack of monitoring and timely response to achieve their goals without being detected.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="AZ-ENABLE-ALERTS" mitigation="25"/>
                    <countermeasure ref="AZ-ENABLE-WAF-LOGS" mitigation="25"/>
                    <countermeasure ref="AZ-L01" mitigation="25"/>
                    <countermeasure ref="AZ-L05" mitigation="25"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-ENABLE-ALERTS" mitigation="25"/>
                <countermeasure ref="AZ-ENABLE-WAF-LOGS" mitigation="25"/>
                <countermeasure ref="AZ-L01" mitigation="25"/>
                <countermeasure ref="AZ-L05" mitigation="25"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="networking" name="Networking" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="CAPEC-248" name="An attacker injects new items into an existing command to execute a command of their choosing" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;An adversary looking to execute a command of their choosing, injects new items into an existing command thus modifying interpretation away from what was intended. Commands in this context are often standalone strings that are interpreted by a downstream component and cause specific responses. This type of attack is possible when untrusted values are used to build these command strings. Weaknesses in input validation or command construction can enable the attack and lead to successful exploitation.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-77">
                  <countermeasures>
                    <countermeasure ref="AZURE-FUNCTIONS3" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZURE-FUNCTIONS3" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="AZURE-UNAUTHORISED-CONNECTION" name="Attackers perform unauthorized network access" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;Attackers could perform unauthorized network access to the resources through misconfigured ports or security network configurations.&lt;/p&gt;</desc>
              <riskRating confidentiality="25" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-NET-01">
                  <countermeasures>
                    <countermeasure ref="AZ-N01" mitigation="20"/>
                    <countermeasure ref="AZ-N02" mitigation="16"/>
                    <countermeasure ref="AZURE-FUNCTIONS1" mitigation="16"/>
                    <countermeasure ref="AZURE-FUNCTIONS2" mitigation="16"/>
                    <countermeasure ref="AZURE-WAF-GW" mitigation="16"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AZURE-VNET01">
                  <countermeasures>
                    <countermeasure ref="AZ-N09" mitigation="16"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-N01" mitigation="20"/>
                <countermeasure ref="AZ-N02" mitigation="16"/>
                <countermeasure ref="AZ-N09" mitigation="16"/>
                <countermeasure ref="AZURE-FUNCTIONS1" mitigation="16"/>
                <countermeasure ref="AZURE-FUNCTIONS2" mitigation="16"/>
                <countermeasure ref="AZURE-WAF-GW" mitigation="16"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="DATA-EXPOSED-CHANNEL" name="The data is exposed through the transmission channel" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;Attackers can obtain the data through the transmitted channel because this does not have the security measures in place to protect the data&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="DATA-TRANSMIT-CLEAR">
                  <countermeasures>
                    <countermeasure ref="AZURE-ENCRYPTION-TRANSIT" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZURE-ENCRYPTION-TRANSIT" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="f0646ccf-11ac-4e01-bd7d-3ae796fd7ea6" diagramComponentId="e12796a7-6fbe-4458-bb51-28a3f0edcaba" ref="64b32d56-f074-42c8-8011-caa811dd5519" name="Generic Client" desc="" library="CS-Default" parentComponentRef="" componentDefinitionRef="generic-client">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="internet"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses>
        <weakness ref="CWE-798, CWE-603" name="Client side code stores secret keys, sensitive business logic or other proprietary information" state="0" impact="100" issueId="" issueLink="">
          <desc>When client side code is fully controlled by the user, a malicious user may be able to read the code or reverse engineer it if it is compiled in any form. If the client side code includes secret keys, sensitive business logic (like client authentication) or proprietary information, all of this is directly exposed to the user, allowing them to get the sensitive information or study the business logic with the aim of bypassing it.&amp;nbsp; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Some examples of this vulnerability are:&amp;nbsp; 
 &lt;div&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Performing an authentication on the client side without server side validation.&amp;nbsp;&lt;/li&gt; 
   &lt;li&gt;Making privileged calls from the client based solely on client side conditions (i.e. a cash check on the client side to place an order on an e-commerce platform).&lt;/li&gt; 
   &lt;li&gt;&amp;nbsp;Hard-coding keys and secrets on the client side to make client-to-client calls without a proxy.&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:06.643">
              <output/>
            </source>
            <references>
              <reference name="CWE-602: client-side Enforcement of Server-Side Security" url="https://cwe.mitre.org/data/definitions/602.html"/>
              <reference name="CWE-603: Use of client-side Authentication" url="https://cwe.mitre.org/data/definitions/603.html"/>
            </references>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="lack-automated-vuln-identification" name="Lack of automated vulnerability identification" state="0" impact="100" issueId="" issueLink="">
          <desc>Developmental security testing/evaluation is not enforced during post-design phases of the system development life cycle. Such testing/evaluation is necessary because it confirms that the required security controls are implemented correctly, operating as intended, enforcing the desired security policy, and meeting established security requirements.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:06.425">
              <output/>
            </source>
            <references>
              <reference name="Risk-Based and Functional Security Testing" url="https://www.us-cert.gov/bsi/articles/best-practices/security-testing/risk-based-and-functional-security-testing"/>
            </references>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CWE-311" name="Missing Encryption of Sensitive Data" state="0" impact="100" issueId="" issueLink="">
          <desc>The software does not encrypt sensitive or critical information
                        before storage or transmission.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:06.643">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CWE-312" name="Secrets, API keys and or passwords are included in the source code or online repositories" state="0" impact="100" issueId="" issueLink="">
          <desc>API keys, passwords or secrets included in the source code or in the configuration files can be leaked to users with access to the code. This access can be incidentally granted by publishing the source code on a package-form or an online, public repository.

          The unauthorized access to any of those secrets could lead to a compromise of sensitive data or a system.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:06.643">
              <output/>
            </source>
            <references>
              <reference name="CWE-312: Secrets, API keys and or passwords are included in the source code or online repositories" url="https://cwe.mitre.org/data/definitions/312.html"/>
            </references>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CWE-477" name="Use of Obsolete Function" state="0" impact="75" issueId="" issueLink="">
          <desc>The code uses deprecated or obsolete functions, which suggests that the code has not been actively reviewed or maintained.
&lt;br /&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:06.642">
              <output/>
            </source>
            <references>
              <reference name="CWE-477: Use of Obsolete Function" url="https://cwe.mitre.org/data/definitions/477.html"/>
            </references>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CWE-327" name="Use of a Broken or Risky Cryptographic Algorithm" state="0" impact="100" issueId="" issueLink="">
          <desc>The use of a broken or risky cryptographic algorithm is an unnecessary risk that may result in
                        the exposure of sensitive information.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:06.643">
              <output/>
            </source>
            <references>
              <reference name="CWE-327: Use of a Broken or Risky Cryptographic Algorithm" url="https://cwe.mitre.org/data/definitions/327.html"/>
            </references>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="CWE-319-TRANSPORT" name="Encrypt data between the client and server/service" issueId="" issueLink="" platform="" cost="0" risk="68" state="Recommended" owner="JamesRabe" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Data passed between the client and server should be protected by encryption in transit.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Implement cryptographically strong TLS end-to-end encryption between the client and server, terminating within a secure environment on the server-side.&lt;/li&gt;&lt;li&gt;Consider use of client certificates to prevent interception of (or man-in-the-middle attacks on) the encrypted connection.&lt;/li&gt;&lt;li&gt;Alternatively, asymmetric (public-key) encryption could be utilized and a recognized, proven, and tested implementation/library should be used&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA AC-03 Access Enforcement" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/25-08_02_AC-03"/>
            <reference name="OSA AC-06 Least Privilege" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/28-08_02_AC-06"/>
            <reference name="OSA AC-14 Permitted Actions Without Identification Or Authentication" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/38-08_02_AC-14"/>
            <reference name="OSA AC-16 Automated Labeling" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/198-08_02_AC-16"/>
            <reference name="OSA SC-08 Transmission Integrity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/68-08_02_SC-08"/>
            <reference name="OSA SC-13 Use Of Cryptography" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/73-08_02_SC-13"/>
          </references>
          <standards>
            <standard ref="1.9.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="1.9.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="13.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="13.2.6" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="13.2.6" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="164.312(a)(1)(D)" supportedStandardRef="hipaa-addressable"/>
            <standard ref="164.312(e)(1)(A)" supportedStandardRef="hipaa-addressable"/>
            <standard ref="5.1" supportedStandardRef="OWASP-MASVS-L1"/>
            <standard ref="5.1" supportedStandardRef="OWASP-MASVS-L1+R"/>
            <standard ref="5.1" supportedStandardRef="OWASP-MASVS-L2"/>
            <standard ref="5.1" supportedStandardRef="OWASP-MASVS-L2+R"/>
            <standard ref="9.1.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="9.1.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="9.1.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="9.2.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="9.2.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="9.2.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="9.2.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="9.2.4" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="9.4.3" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="AC-14" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AC-14" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AC-14" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AC-14" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-16" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-3" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AC-3" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AC-3" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AC-3" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-6" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AC-6" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AC-6" supportedStandardRef="NIST 800-53"/>
            <standard ref="PR.AC-4" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-6" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-7" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-2" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-5" supportedStandardRef="nist-csf"/>
            <standard ref="PR.PT-3" supportedStandardRef="nist-csf"/>
            <standard ref="SC-13" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="SC-13" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="SC-13" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="SC-13" supportedStandardRef="NIST 800-53"/>
            <standard ref="SC-8" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="SC-8" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="SC-8" supportedStandardRef="NIST 800-53"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Check client to server connections use and enforce established encryption protocols, e.g. TLSv1.2.&lt;br&gt;&amp;nbsp;&lt;/li&gt;&lt;li&gt;Verify only strong cipher suites are in use and permitted.&lt;/li&gt;&lt;li&gt;Ensure attempts to use unencrypted transport mechanisms are rejected or redirected (e.g. HTTP instead of HTTPS)&lt;/li&gt;&lt;li&gt;Review configuration of protocols and services against best-practice guidelines.&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:06.518">
              <output/>
            </source>
            <references>
              <reference name="Server Side TLS Configuration" url="https://wiki.mozilla.org/Security/Server_Side_TLS"/>
            </references>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="INS-CLIENT" name="Ensure the application does not use unsupported, insecure, or deprecated client-side technologies" issueId="" issueLink="" platform="" cost="0" risk="60" state="Recommended" owner="JamesRabe" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Ensure the application does not use unsupported, insecure, or deprecated client-side technologies such as: NSAPI plugins, Flash, Shockwave, ActiveX, Silverlight, NACL, or client-side Java applets.&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1.14.6" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="1.14.6" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ul&gt;
 &lt;li&gt;Test the presence of any client side applet such as Flash, ActiveX and Silverlight.&lt;/li&gt;
&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:06.518">
              <output/>
            </source>
            <references>
              <reference name="Testing Information Gathering" url="https://www.owasp.org/index.php/Testing_Information_Gathering"/>
            </references>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CS-CLIENT-SECRET" name="Implement sensitive logic and data validation on the server-side" issueId="" issueLink="" platform="" cost="1" risk="73" state="Recommended" owner="JamesRabe" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;All data and functionalities on the client-side must be considered tainted and subject to manipulation by a malicious actor, regardless of the controls in place (e.g. encryption or obfuscation of client-side code or content). &lt;/p&gt; This includes application logic decisions, such as access controls, and data considered sensitive or secret, such as encryption keys. While controls may be duplicated on the client-side to improve the user experience, it is important to have these enforced on the server-side.&amp;nbsp; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Business logic, in particular access controls, must be implemented on the server-side.&lt;/li&gt; 
  &lt;li&gt;Secret data should be stored on the server-side, and only what is explicitly required should be duplicated on the client-side.&amp;nbsp;&lt;/li&gt; 
 &lt;/ul&gt;All data provided from the client-side (even from binary clients) should be considered tainted, and security decisions should not be made solely on this data. For example, an insecure implementation could include a compiled application (e.g. Flash!) performing authentication on the client-side against a stored password. The decompilation of the binary (in this case flv file) or the interception and modification of controls between the client and server could expose the password or allow unauthorized access to the authenticated application content. 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA AC-01 Access Control Policies and Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/23-08_02_AC-01"/>
            <reference name="OSA SI-10 Information Accuracy, Completeness, Validity, And Authenticity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/48-08_02_SI-10"/>
            <reference name="OWASP Juice Shop: Broken Access Control" url="https://pwning.owasp-juice.shop/part2/broken-access-control.html"/>
            <reference name="OWASP Juice Shop: Injection" url="https://pwning.owasp-juice.shop/part2/injection.html"/>
          </references>
          <standards>
            <standard ref="12.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="2.4.11.7" supportedStandardRef="iotsf-class-0"/>
            <standard ref="2.4.11.7" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.11.7" supportedStandardRef="iotsf-class-2"/>
            <standard ref="4.1.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="4.1.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="4.1.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="A01:2021-Broken Access Control" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A03:2021-Injection" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A1:2017-Injection" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="A5:2017-Broken Access Control" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="AC-1" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AC-1" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AC-1" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AC-1" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-24" supportedStandardRef="NIST 800-53"/>
            <standard ref="ID.GV-1" supportedStandardRef="nist-csf"/>
            <standard ref="ID.GV-3" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-1" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-3" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-4" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-6" supportedStandardRef="nist-csf"/>
            <standard ref="SI-10" supportedStandardRef="NIST 800-53"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Identify where critical decisions are made on the application. Key areas include:&amp;nbsp;&lt;/li&gt; 
 &lt;ul&gt; 
  &lt;li&gt;authentication&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;input validation&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;access to resources&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;state bypasses&amp;nbsp;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;li&gt;Ensure those decisions are made or validated on the server side, particularly where client-side controls are implemented.&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;Verify that sensitive data passed to the client side is appropriate, and ensure no inappropriate data is stored or hard-coded into client-side components, for example&amp;nbsp;&lt;/li&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Personally Identifiable Information.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Financial data, in particular cardholder data (as defined by the &lt;span class="caps"&gt;PCI&lt;/span&gt; Council).&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Application secrets - such as symmetric encryption keys or passwords.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:06.517">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CSD-CLIENT-SECRET" name="Review code, configuration, and online repositories for secrets and sensitive information systemically" issueId="" issueLink="" platform="" cost="0" risk="73" state="Recommended" owner="JamesRabe" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Secret or sensitive information should not be exposed in source-code or client-side software.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Code and online repositories must not contain secrets or sensitive information.&lt;/li&gt;&lt;li&gt;Configuration files on the client- and server-side must not contain hard-coded credentials or other sensitive data.&lt;/li&gt;&lt;li&gt;Online repositories, services, and other associated restricted content must have appropriate access controls in place.&lt;/li&gt;&lt;li&gt;Where sensitive information must be stored on the server side, it should be in memory for transient data, or encrypted if persistent. &amp;nbsp;Depending on the use case, this encryption may be asymmetric or public key, or symmetric using a shared secret. Note however that reversible encryption on the client-side and in-memory storage are still susceptible to client-side attacks.&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="10.1.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="2.10.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.10.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="AU-13" supportedStandardRef="NIST 800-53"/>
            <standard ref="DE.CM-3" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Use automated tools to regularly search for keywords or regular expression patterns within the code, configuration and other files exposed on the client and server-side, and any remote repositories.&lt;/li&gt;&lt;li&gt;The scanning process must be triggered before the code is published (in particular for public/open source code) as once published it is likely to be archived (and any disclosed secrets would be exposed and/or have to be changed)&lt;/li&gt;&lt;li&gt;Review criteria and requirements for any temporary or persistent storage of sensitive or secret data on the client-side, and the protections in place.&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:06.518">
              <output/>
            </source>
            <references>
              <reference name="Microsoft Exchange 2016 Sensitive Information Patterns" url="https://technet.microsoft.com/en-us/library/jj150541(v=exchg.160).aspx"/>
              <reference name="Prevents you from committing secrets and credentials into git repositories" url="https://github.com/awslabs/git-secrets"/>
              <reference name="Seekret" url="https://github.com/apuigsech/seekret"/>
            </references>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="use-analysis-static-code" name="Scan the code with static code analysis tools" issueId="" issueLink="" platform="" cost="0" risk="78" state="Recommended" owner="JamesRabe" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Use periodically a static code analysis tool to analyze the code and detect potentially malicious code, such as time functions, unsafe file operations and networks connections. With the scanning of static code, we ensure the integrity of the application. 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="10.1.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="10.2.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="10.2.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="10.2.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="10.2.6" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Verify that a code analysis tool is in use and it is configured to detect potentially malicious code, such as time functions, unsafe file operations and network connections. 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:06.374">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="secure-communication-ra-and-csp" name="Use secure communication between CSP and RA" issueId="" issueLink="" platform="" cost="0" risk="68" state="Recommended" owner="JamesRabe" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;In situations where the verifier and CSP are separate entities, communications between RA (Registration Authority) and CSP (Credential Service Provider), should be authenticated with a mutually-authenticated secure channel, such as a client-authenticated TLS connection, using approved cryptographic algorithms.&lt;/p&gt;
&lt;p&gt;NIST's digital identity model involves some entities:&lt;/p&gt;
&lt;p&gt;- CSP (Credential Service Provider): A credential service provider is a trusted entity that issues security tokens or electronic credentials to subscribers. A CSP forms part of an authentication system, most typically identified as a separate entity in a Federated authentication system. A CSP may be an independent third party, or may issue credentials for its own use. Credential Service Provider is typically also the Identity Provider (IDP). An example of a CSP would be an online site whose primary purpose may be, for example, internet banking - but whose users may be subsequently authenticated to other sites, applications or services without further action on their part.&lt;/p&gt;
&lt;p&gt;- Registration Authority (RA): A trusted entity that establishes and vouches for the identity of a subscriber to a CSP. The RA may be an integral part of a CSP, or it may be independent of a CSP, but it has a relationship to the CSP.&lt;/p&gt;
&lt;p&gt;- Verifier: This refers to an entity that verifies the claimant's identity by verifying the claimant's possession and control of one or two authenticators, using an authentication protocol.&lt;/p&gt;
&lt;p&gt;- RP (Relying party): This refers to an entity that relies on the subscriber's authenticator(s) and credentials or a verifier's assertion of a claimant's identity, typically to process a transaction or grant access to information or a system.&lt;/p&gt;
&lt;p&gt;- Applicant: This refers to a subject undergoing the processes of enrollment and identity proofing.&lt;/p&gt;
&lt;p&gt;- Claimant: This refers to a subject whose identity is to be verified using one or more authentication protocols.&lt;/p&gt;
&lt;p&gt;- Subscriber: This refers to a party who has received a credential or an authenticator from a CSP.&amp;nbsp;&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="NIST 800-63-1" url="https://csrc.nist.rip/groups/SMA/forum/documents/feb2012_nist-sp-800-63-1_newton-perlner.pdf"/>
            <reference name="NIST 800-63C" url="https://pages.nist.gov/800-63-3/sp800-63c.html"/>
          </references>
          <standards>
            <standard ref="2.2.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.6" supportedStandardRef="nist-800-63"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Verify the CSP and RA communicate securely with a secure channel, for example with TLS.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:06.518">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CWE-295-CLIENT" name="Validate the certificate presented by the server" issueId="" issueLink="" platform="" cost="0" risk="68" state="Recommended" owner="JamesRabe" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Certificates presented by the server must be valid, provable, and cryptographically secure in order to derive the benefits of TLS encrypted communications.&amp;nbsp; Invalid certificates expose the application and its users to spoofing attacks such as Man In The Middle (MITM) where data may be intercepted or redirected to a malicious site, and undermine confidence in the site.&lt;/p&gt;&lt;p&gt;Validate the certificate presented by the server is signed by a trusted Certificate Authority.&lt;/p&gt;&lt;p&gt;Ensure the certificate chain of trust is legitimate and secure.&lt;/p&gt;&lt;p&gt;Verify cryptographically secure ciphers are in use throughout the chain, in particular strong hashing algorithms for certificate signatures.&amp;nbsp;&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA SC-11 Trusted Path" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/71-08_02_SC-11"/>
            <reference name="OSA SC-17 Public Key Infrastructure Certificates" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/77-08_02_SC-17"/>
          </references>
          <standards>
            <standard ref="1.9.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="1.9.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="13.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="164.312(e)(1)(B)" supportedStandardRef="hipaa-addressable"/>
            <standard ref="9.2.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="9.2.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="PR.DS-2" supportedStandardRef="nist-csf"/>
            <standard ref="SC-11" supportedStandardRef="NIST 800-53"/>
            <standard ref="SC-17" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="SC-17" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="SC-17" supportedStandardRef="NIST 800-53"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Verify the client is conducting appropriate checks and receives a positive response regarding the validity and quality of the site certificate.&lt;/li&gt;&lt;li&gt;Use TLS analysis tools to check and rate the server security, for example:&lt;ol&gt;&lt;li&gt;SSL Labs SSL Server Test:&amp;nbsp;https://www.ssllabs.com/ssltest/&lt;/li&gt;&lt;li&gt;sslscan tool: https://github.com/rbsec/sslscan&lt;/li&gt;&lt;li&gt;testssh.sh tool: https://github.com/drwetter/testssl.sh&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;Remediate all security issues and warnings relating to the server certificate, and those in the trust chain.&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:06.518">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CWE-327" name="Validate the TLS implementation in use" issueId="" issueLink="" platform="" cost="0" risk="68" state="Recommended" owner="JamesRabe" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;There are a number of established open- and closed- source TLS implementations in use, which have undergone extensive review and testing by the developers, as well as third-parties in the development, security, and cryptography space. Typically, these widely used implementations have a lower risk of exploitation compared with privately developed - or less known - implementations (although vulnerabilities such as Heartbleed highlight this is not universally true) due to this additional scrutiny scrutiny.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Identify the TLS and other cryptographic libraries, implementations, and technologies in use.&lt;/li&gt;&lt;li&gt;Verify the veracity of the implementations, and review third party validations together with security advisories or best-practices relating to them.&lt;/li&gt;&lt;li&gt;Some well-known TLS libraries are NSS from Mozilla, and OpenSSL.&lt;/li&gt;&lt;li&gt;Where an unknown or unproven implementation is in use, consider use of an established option.&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="Mozilla SSL Config" url="https://ssl-config.mozilla.org/"/>
            <reference name="OSA SC-08 Transmission Integrity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/68-08_02_SC-08"/>
            <reference name="Server Side TLS Configuration" url="https://wiki.mozilla.org/Security/Server_Side_TLS"/>
          </references>
          <standards>
            <standard ref="13.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="164.312(e)(1)(B)" supportedStandardRef="hipaa-addressable"/>
            <standard ref="9.1.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="9.1.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="9.1.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="PR.DS-2" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-5" supportedStandardRef="nist-csf"/>
            <standard ref="SC-8" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="SC-8" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="SC-8" supportedStandardRef="NIST 800-53"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Confirm the TLS layer in use is a secure, stable, release of a publicly published implementation that has been subject to expert analysis and review.&lt;ul&gt;&lt;li&gt;If not, assurance of the security of the implementation should be sought, or the risk quantified.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Verify that a client connecting to the server will only be able to negotiate cryptographically strong, secure ciphers.&lt;/li&gt;&lt;li&gt;Confirm that a client can not downgrade to a weaker cipher after initial negotiation.&lt;/li&gt;&lt;li&gt;Use TLS analysis tools to check and rate the server security, for example:&lt;ol&gt;&lt;li&gt;SSL Labs SSL Server Test:&amp;nbsp;https://www.ssllabs.com/ssltest/&lt;/li&gt;&lt;li&gt;sslscan tool: https://github.com/rbsec/sslscan&lt;/li&gt;&lt;li&gt;testssh.sh tool: https://github.com/drwetter/testssl.sh&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;Remediate all security issues and warnings relating to the TLS/SSL ciphers, protocols, and security mechanisms.&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:06.518">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="GENERAL" name="General" desc="" library="CS-Default">
          <threats>
            <threat ref="sec-vuln-dev-process" name="Application contains security vulnerabilities not identified during the development process" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="CS-Default" editable="true">
              <desc>Application security should be embedded into a project's development environment, allowing developers to monitor their code regularly in order to avoid security vulnerabilities when the application is deployed in the production environment.</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references>
                <reference name="NIST Security Considerations in the System Development Life Cycle" url="https://csrc.nist.gov/publications/detail/sp/800-64/rev-2/archive/2008-10-16"/>
                <reference name="Risk-Based and Functional Security Testing" url="https://www.us-cert.gov/bsi/articles/best-practices/security-testing/risk-based-and-functional-security-testing"/>
              </references>
              <weaknesses>
                <weakness ref="lack-automated-vuln-identification">
                  <countermeasures>
                    <countermeasure ref="use-analysis-static-code" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="use-analysis-static-code" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="CSD-CLIENT-SECRET" name="Attackers gain unauthorised access to data or services by accessing a client side secret" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="CS-Default" editable="true">
              <desc>Secrets stored in any client side components, such as a mobile application, thick
                                client application or in JavaScript used by a browser, can be accessed by
                                users/attackers who have access to this client.
                                &lt;div&gt;
                                &lt;br /&gt;
                                &lt;/div&gt;
                                &lt;div&gt;
                                Attackers could then gain access to the data or services that are protected by this
                                secret, if no other credentials are required.
                                &lt;/div&gt;
                            </desc>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-312">
                  <countermeasures>
                    <countermeasure ref="CSD-CLIENT-SECRET" mitigation="50"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-798, CWE-603">
                  <countermeasures>
                    <countermeasure ref="CS-CLIENT-SECRET" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CS-CLIENT-SECRET" mitigation="50"/>
                <countermeasure ref="CSD-CLIENT-SECRET" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="DEP-CLIENT-TECH" name="Attackers gain unauthorised access to the application by the use of deprecated client-side technologies" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="CS-Default" editable="true">
              <desc>&lt;div&gt;
  As programming languages evolve, functions occasionally become obsolete due to:
&lt;/div&gt;
&lt;ul&gt;
 &lt;li&gt;Advances in the language.&lt;/li&gt;
 &lt;li&gt;Improved understanding of how operations should be performed effectively and securely.&lt;/li&gt;
 &lt;li&gt;Changes in the conventions that govern certain operations. &lt;/li&gt;
&lt;/ul&gt;
&lt;br /&gt;Functions that are removed are usually replaced by newer counterparts that perform the same task in some different and hopefully improved way.
&lt;br /&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-477">
                  <countermeasures>
                    <countermeasure ref="INS-CLIENT" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="INS-CLIENT" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="READ OR POST DATA" name="Read or Post data" desc="" library="CS-Default">
          <threats>
            <threat ref="NTW-MITM" name="Attackers could gain access to sensitive data through a man in the middle attack" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="CS-Default" editable="true">
              <desc>&lt;p&gt;This type of attack targets the communication between two components (typically client and server). The attacker places himself in the communication channel between the two components. Whenever one component attempts to communicate with the other (data flow, authentication challenges, etc.), the data first goes to the attacker, who has the opportunity to observe or alter it, and it is then passed to the other component as if it were never intercepted. This interposition is transparent leaving the two compromised components unaware of the potential corruption or leakage of their communications. The potential for Man-in-the-Middle attacks yields an implicit lack of trust in communication or identity between two components.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-311">
                  <countermeasures>
                    <countermeasure ref="CWE-295-CLIENT" mitigation="25"/>
                    <countermeasure ref="CWE-319-TRANSPORT" mitigation="25"/>
                    <countermeasure ref="secure-communication-ra-and-csp" mitigation="25"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-327">
                  <countermeasures>
                    <countermeasure ref="CWE-327" mitigation="25"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CWE-295-CLIENT" mitigation="25"/>
                <countermeasure ref="CWE-319-TRANSPORT" mitigation="25"/>
                <countermeasure ref="CWE-327" mitigation="25"/>
                <countermeasure ref="secure-communication-ra-and-csp" mitigation="25"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="52b54ef1-20f2-48d0-9904-9c8e6421f68e" diagramComponentId="0ea13afd-be70-4053-a838-535345b850e5" ref="b8a5c765-8fe8-480e-aa2f-1821d8bd9393" name="Azure Cache for Redis" desc="" library="Microsoft-Azure" parentComponentRef="f0155081-ed2f-4930-b284-10d437597eec" componentDefinitionRef="CD-MICROSOFT-AZURE-CACHE-REDIS">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses>
        <weakness ref="AZURE-VNET01" name="Networks for Azure resources are not properly segmented. Without proper segmentation, when attackers gain access to one resource, any other resources in the same VNet are compromised" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        Resources in the same VNet are compromised because when one of them is attacked and the
                        attackers gain access, they also gain access to all resources.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            Identify the resources and the Microsoft Azure instances.
                            &lt;/div&gt;
                            &lt;div&gt;
                            Check that the resources are in the correct VNet.
                            &lt;/div&gt;
                            &lt;div&gt;
                            Check that the Microsoft Azure instances&amp;nbsp;are into different VNets.
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:09.354">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AZURE-NET-01" name="Unauthorized connection attempts on open ports" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        Receiving unauthorized connections to open ports makes systems vulnerable to attacks. To
                        avoid this, access to the network must be as restricted as possible, so that only the necessary
                        ports are open and the minimum inbound traffic is accepted.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Check that each Azure resources have got their Network Security Groups.&lt;/li&gt;
                            &lt;li&gt;Check that a set of these groups achieve with the principle of the least
                            privilege.&lt;/li&gt;
                            &lt;li&gt;Check that the inbound/outbound security rules are enabled and correctly
                            configured.&lt;/li&gt;
                            &lt;li&gt;In &amp;quot;Inbound security rules&amp;quot;, check that all the traffic from
                            0.0.0.0/0&amp;nbsp;is blocked.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:09.354">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="AZURE-IDS-IPS" name="Deploy network-based IDS/IPS" issueId="" issueLink="" platform="" cost="0" risk="61" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Deploy network-based intrusion detection/intrusion prevention systems (IDS/IPS)&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Select an offer from Azure Marketplace that supports IDS/IPS functionality with payload inspection capabilities. If intrusion detection and/or prevention based on payload inspection is not a requirement, Azure Firewall with Threat Intelligence can be used. Azure Firewall Threat intelligence-based filtering can alert and deny traffic to and from known malicious IP addresses and domains. The IP addresses and domains are sourced from the Microsoft Threat Intelligence feed.&lt;/p&gt; 
&lt;p&gt;Deploy the firewall solution of your choice at each of your organization's network boundaries to detect and/or deny malicious traffic.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Set up the network&lt;/p&gt; 
&lt;p&gt;First, create a resource group to contain the resources needed to deploy the firewall. Then create a VNet, subnets, and a test server.&lt;br&gt; For more information please see Reference URL.&lt;/p&gt; 
&lt;p&gt;Deploy the firewall&lt;/p&gt; 
&lt;p&gt;Deploy the firewall into the VNet.&lt;/p&gt; 
&lt;p&gt;1. On the Azure portal menu or from the Home page, select Create a resource.&lt;/p&gt; 
&lt;p&gt;2. Type firewall in the search box and press Enter.&lt;/p&gt; 
&lt;p&gt;3. Select Firewall and then select Create.&lt;/p&gt; 
&lt;p&gt;4. On the Create a Firewall page, use the following values to configure the firewall:&lt;/p&gt; 
&lt;p&gt;Subscription: &lt;br&gt; Resource group: Test-FW-RG&lt;br&gt; Name: Test-FW01&lt;br&gt; Location: Select the same location that you used previously&lt;br&gt; Choose a virtual network: Use existing: Test-FW-VN&lt;br&gt; Public IP address: Add new&lt;br&gt; Name: fw-pip&lt;/p&gt; 
&lt;p&gt;5. Select Review + create.&lt;/p&gt; 
&lt;p&gt;6. Review the summary, and then select Create to create the firewall.&lt;/p&gt; 
&lt;p&gt;This will take a few minutes to deploy.&lt;/p&gt; 
&lt;p&gt;7. After deployment completes, go to the Test-FW-RG resource group, and select the Test-FW01 firewall.&lt;/p&gt; 
&lt;p&gt;8. Note the firewall private and public IP addresses. You will use these addresses later.&lt;/p&gt; 
&lt;p&gt;Create a default route&lt;/p&gt; 
&lt;p&gt;For the Workload-SN subnet, configure the outbound default route to go through the firewall.&lt;/p&gt; 
&lt;p&gt;1. On the Azure portal menu, select All services or search for and select All services from any page.&lt;/p&gt; 
&lt;p&gt;2. Under Networking, select Route tables.&lt;/p&gt; 
&lt;p&gt;3. Select Add.&lt;/p&gt; 
&lt;p&gt;4. For Name, type Firewall-route.&lt;/p&gt; 
&lt;p&gt;5. For Subscription, select your subscription.&lt;/p&gt; 
&lt;p&gt;6. For Resource group, select Test-FW-RG.&lt;/p&gt; 
&lt;p&gt;7. For Location, select the same location that you used previously.&lt;/p&gt; 
&lt;p&gt;8. Select Create.&lt;/p&gt; 
&lt;p&gt;9. Select Refresh, and then select the Firewall-route route table.&lt;/p&gt; 
&lt;p&gt;10. Select Subnets and then select Associate.&lt;/p&gt; 
&lt;p&gt;11. Select Virtual network &amp;gt; Test-FW-VN.&lt;/p&gt; 
&lt;p&gt;12. For Subnet, select Workload-SN. Make sure that you select only the Workload-SN subnet for this route, otherwise your firewall will not work correctly.&lt;/p&gt; 
&lt;p&gt;13. Select OK.&lt;/p&gt; 
&lt;p&gt;14. Select Routes and then select Add.&lt;/p&gt; 
&lt;p&gt;15. For Route name, type fw-dg.&lt;/p&gt; 
&lt;p&gt;16. For Address prefix, type 0.0.0.0/0.&lt;/p&gt; 
&lt;p&gt;17. For Next hop type, select Virtual appliance.&lt;/p&gt; 
&lt;p&gt;Azure Firewall is actually a managed service, but virtual appliance works in this situation.&lt;/p&gt; 
&lt;p&gt;18. For Next hop address, type the private IP address for the firewall that you noted previously.&lt;/p&gt; 
&lt;p&gt;19. Select OK.&lt;/p&gt; 
&lt;p&gt;Configure an application rule&lt;/p&gt; 
&lt;p&gt;This is the application rule that allows outbound access to www.google.com.&lt;/p&gt; 
&lt;p&gt;1. Open the Test-FW-RG, and select the Test-FW01 firewall.&lt;br&gt; 2. On the Test-FW01 page, under Settings, select Rules.&lt;br&gt; 3. Select the Application rule collection tab.&lt;br&gt; 4. Select Add application rule collection.&lt;br&gt; 5. For Name, type App-Coll01.&lt;br&gt; 6. For Priority, type 200.&lt;br&gt; 7. For Action, select Allow.&lt;br&gt; 8. Under Rules, Target FQDNs, for Name, type Allow-Google.&lt;br&gt; 9. For Source type, select IP address.&lt;br&gt; 10. For Source, type 10.0.2.0/24.&lt;br&gt; 11. For Protocol:port, type http, https.&lt;br&gt; 12. For Target FQDNS, type www.google.com&lt;br&gt; 13. Select Add.&lt;/p&gt; 
&lt;p&gt;Azure Firewall includes a built-in rule collection for infrastructure FQDNs that are allowed by default. These FQDNs are specific for the platform and cannot be used for other purposes. For more information, see Infrastructure FQDNs.&lt;/p&gt; 
&lt;p&gt;Configure a network rule&lt;/p&gt; 
&lt;p&gt;This is the network rule that allows outbound access to two IP addresses at port 53 (DNS).&lt;/p&gt; 
&lt;p&gt;1. Select the Network rule collection tab.&lt;/p&gt; 
&lt;p&gt;2. Select Add network rule collection.&lt;/p&gt; 
&lt;p&gt;3. For Name, type Net-Coll01.&lt;/p&gt; 
&lt;p&gt;4. For Priority, type 200.&lt;/p&gt; 
&lt;p&gt;5. For Action, select Allow.&lt;/p&gt; 
&lt;p&gt;6. Under Rules, IP addresses, for Name, type Allow-DNS.&lt;/p&gt; 
&lt;p&gt;7. For Protocol, select UDP.&lt;/p&gt; 
&lt;p&gt;8. For Source type, select IP address.&lt;/p&gt; 
&lt;p&gt;9. For Source, type 10.0.2.0/24.&lt;/p&gt; 
&lt;p&gt;10. For Destination type select IP address.&lt;/p&gt; 
&lt;p&gt;11. For Destination address, type 209.244.0.3,209.244.0.4&lt;/p&gt; 
&lt;p&gt;These are public DNS servers operated by CenturyLink.&lt;/p&gt; 
&lt;p&gt;12. For Destination Ports, type 53.&lt;/p&gt; 
&lt;p&gt;13. Select Add.&lt;/p&gt; 
&lt;p&gt;Configure a DNAT rule&lt;/p&gt; 
&lt;p&gt;This rule allows you to connect a remote desktop to the Srv-Work virtual machine through the firewall.&lt;/p&gt; 
&lt;p&gt;1. Select the NAT rule collection tab.&lt;br&gt; 2. Select Add NAT rule collection.&lt;br&gt; 3. For Name, type rdp.&lt;br&gt; 4. For Priority, type 200.&lt;br&gt; 5. Under Rules, for Name, type rdp-nat.&lt;br&gt; 6. For Protocol, select TCP.&lt;br&gt; 7. For Source type, select IP address.&lt;br&gt; 8. For Source, type *.&lt;br&gt; 9. For Destination address, type the firewall public IP address.&lt;br&gt; 10. For Destination Ports, type 3389.&lt;br&gt; 11. For Translated address, type the Srv-work private IP address.&lt;br&gt; 12. For Translated port, type 3389.&lt;br&gt; 13. Select Add.&lt;/p&gt; 
&lt;p&gt;Change the primary and secondary DNS address for the Srv-Work network interface&lt;/p&gt; 
&lt;p&gt;For testing purposes in this tutorial, configure the server's primary and secondary DNS addresses. This is not a general Azure Firewall requirement.&lt;/p&gt; 
&lt;p&gt;1. On the Azure portal menu, select Resource groups or search for and select Resource groups from any page. Select the Test-FW-RG resource group.&lt;br&gt; 2. Select the network interface for the Srv-Work virtual machine.&lt;br&gt; 3. Under Settings, select DNS servers.&lt;br&gt; 4. Under DNS servers, select Custom.&lt;br&gt; 5. Type 209.244.0.3 in the Add DNS server text box, and 209.244.0.4 in the next text box.&lt;br&gt; 6. Select Save.&lt;br&gt; 7. Restart the Srv-Work virtual machine.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Tutorial: Deploy and configure Azure Firewall using the Azure portal" url="https://docs.microsoft.com/en-us/azure/firewall/tutorial-firewall-deploy-portal"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Test the firewall&lt;/p&gt;

  &lt;p&gt;Now, test the firewall to confirm that it works as expected.&lt;/p&gt;

  &lt;p&gt;1. Connect a remote desktop to firewall public IP address and sign in to the Srv-Work virtual machine.&lt;/p&gt;

  &lt;p&gt;2. Open Internet Explorer and browse to https://www.google.com.&lt;/p&gt;

  &lt;p&gt;3. Select OK &gt; Close on the Internet Explorer security alerts.&lt;/p&gt;

  &lt;p&gt;You should see the Google home page.&lt;/p&gt;

  &lt;p&gt;4. Browse to https://www.microsoft.com.&lt;/p&gt;

  &lt;p&gt;You should be blocked by the firewall.&lt;/p&gt;

  &lt;p&gt;So now you've verified that the firewall rules are working:&lt;/p&gt;

  &lt;p&gt;- You can browse to the one allowed FQDN, but not to any others.&lt;br /&gt;
- You can resolve DNS names using the configured external DNS server.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:09.322">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-N09" name="Isolate Azure instances into different VNets" issueId="" issueLink="" platform="" cost="0" risk="61" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Specify a VNet for the Azure instance as a launch parameter. Applications that run on the Cloud instance can use the VNet security configuration when they access Azure resources.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  You can configure an Azure cloud service from Solution Explorer in Visual Studio. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Create a virtual network with multiple subnets" url="https://docs.microsoft.com/en-us/azure/virtual-network/virtual-networks-create-vnet-arm-pportal"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that the Azure instances are into different VNets.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:09.322">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="NETWORKING" name="Networking" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="AZURE-UNAUTHORISED-CONNECTION" name="Attackers perform unauthorized network access" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;Attackers could perform unauthorized network access to the resources through misconfigured ports or security network configurations.&lt;/p&gt;</desc>
              <riskRating confidentiality="25" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-NET-01">
                  <countermeasures>
                    <countermeasure ref="AZURE-IDS-IPS" mitigation="50"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AZURE-VNET01">
                  <countermeasures>
                    <countermeasure ref="AZ-N09" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-N09" mitigation="50"/>
                <countermeasure ref="AZURE-IDS-IPS" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="Records" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="d102687f-8437-40f8-8e58-8c3497d9c18f" diagramComponentId="92abd584-ff6d-4099-a718-0fcdc00ed88c" ref="2f54dc81-5973-46d2-b9d4-f0919491c8c9" name="Data Storage" desc="" library="CS-Default" parentComponentRef="f0155081-ed2f-4930-b284-10d437597eec" componentDefinitionRef="empty-component">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses/>
      <countermeasures/>
      <usecases/>
    </component>
    <component uuid="accc60a8-693b-464d-a8cb-f3ca30f068c0" diagramComponentId="998200bd-c2d3-469d-99fd-c450332de28a" ref="4389a1a9-e47f-474b-ab70-fc2180977326" name="Azure Files (static files)" desc="" library="Microsoft-Azure" parentComponentRef="f0155081-ed2f-4930-b284-10d437597eec" componentDefinitionRef="CD-MICROSOFT-AZURE-FILES">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses>
        <weakness ref="AZURE-ACCESS-DATA-01" name="Sensitive data are accessible" state="0" impact="100" issueId="" issueLink="">
          <desc>Sensitive data are not encrypted and the sensitive data is exposed.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:04.953">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="C-AZURE-FILES1" name="Enable infrastructure encryption" issueId="" issueLink="" platform="" cost="0" risk="64" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Enable infrastructure encryption&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Azure Storage automatically encrypts all data in a storage account at the service level using 256-bit AES encryption, one of the strongest block ciphers available, and is FIPS 140-2 compliant. Customers who require higher levels of assurance that their data is secure can also enable 256-bit AES encryption at the Azure Storage infrastructure level for double encryption. Double encryption of Azure Storage data protects against a scenario where one of the encryption algorithms or keys may be compromised. In this scenario, the additional layer of encryption continues to protect your data.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Create an account with infrastructure encryption enabled&lt;/p&gt; 
&lt;p&gt;To enable infrastructure encryption for a storage account, you must configure a storage account to use infrastructure encryption at the time that you create the account. Infrastructure encryption cannot be enabled or disabled after the account has been created. The storage account must be of type general-purpose v2.&lt;/p&gt; 
&lt;p&gt;To use Azure portal to create a storage account with infrastructure encryption enabled, follow these steps:&lt;/p&gt; 
&lt;p&gt;1. In the Azure portal, navigate to the Storage accounts page.&lt;/p&gt; 
&lt;p&gt;2. Choose the Add button to add a new general-purpose v2 storage account.&lt;/p&gt; 
&lt;p&gt;3. On the Advanced tab, locate Infrastructure encryption, and select Enabled.&lt;/p&gt; 
&lt;p&gt;4. Select Review + create to finish creating the storage account.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Enable infrastructure encryption for double encryption of data" url="https://docs.microsoft.com/en-us/azure/storage/common/infrastructure-encryption-enable"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>	&lt;p&gt;To verify that infrastructure encryption is enabled for a storage account with the Azure portal, follow these steps:&lt;/p&gt;

	&lt;p&gt;1. Navigate to your storage account in the Azure portal.&lt;/p&gt;

	&lt;p&gt;2. Under Settings, choose Encryption.&lt;/p&gt;

	&lt;p&gt;3. Ensure that Infrastructure encryption is enabled&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:04.920">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="GENERAL" name="General" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="ACCESS-TO-DATA" name="Sensitive data is compromised through unauthorized access to data storage" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;A data breach is a security violation in which sensitive, protected or confidential data is copied, transmitted, viewed, stolen or used by an individual unauthorized to do so. Sensitive data could be exposed due to a bad configuration in user permissions.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-ACCESS-DATA-01">
                  <countermeasures>
                    <countermeasure ref="C-AZURE-FILES1" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-AZURE-FILES1" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="eb13ac9c-2dd7-4e5a-80ed-e5fbcdbba42b" diagramComponentId="3a7d6abc-a4d1-4c47-9170-1204a88c5f35" ref="1653ce2b-2853-42e2-95bc-fcaf40c766a3" name="Azure Active Directory" desc="" library="Microsoft-Azure" parentComponentRef="f0155081-ed2f-4930-b284-10d437597eec" componentDefinitionRef="microsoft-azure-active-directory">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses>
        <weakness ref="CWE-16" name="Configuration" state="0" impact="100" issueId="" issueLink="">
          <desc>Weaknesses in this category are typically introduced during the
                        configuration of the software.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:07.051">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-MON02" name="Excessive use of administrator accounts" state="0" impact="100" issueId="" issueLink="">
          <desc>The administrator accounts are used for all actions, not only for administrative actions. This
                        is because these users have not got a personal or a user account to do the daily actions.&amp;nbsp;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that there is any rule to notify when there is a bad usage of the root
                            account.&lt;/li&gt;
                            &lt;li&gt;Check if these rules are enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:07.051">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CWE-778" name="Insufficient Logging" state="0" impact="100" issueId="" issueLink="">
          <desc>When a critical security event occurs, the software either does not record the event or omits important details about the event when logging it. When critical security events are not logged properly, such as in the case of a failed login attempt, this can make malicious behavior more difficult to detect and may hinder forensic analyses after a successful attack.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:07.051">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-MON03" name="Lack of 2FA" state="0" impact="100" issueId="" issueLink="">
          <desc>Logging into the console without using Multi-factor Authentication (MFA) and without being detected. The connection without MFA must be audited and monitored, the correct security group must be informed and the connection must be validated.&amp;nbsp;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that there is any rule to notify when someone tries to login into the
                            console without MFA.&lt;/li&gt;
                            &lt;li&gt;Check if these rules are enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:07.051">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZ-W04" name="Misconfigured Authentication Method for Administrator Accounts" state="0" impact="100" issueId="" issueLink="">
          <desc>The authentication method &amp;quot;Multi-factor Authentication&amp;quot; for the Administrator accounts is not configured.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;Multi-Factor Authentication&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check all Administrator accounts have got the MFA flag enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:07.051">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-IDENTITY-03" name="Misconfigured User Account" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        Key security settings such as resetting the password and other password controls are not
                        configured.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log in to the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each user has got an assigned account.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;Password reset&amp;quot; &amp;gt; &amp;quot;Authentication Method&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that the security confirmation measures and the security criteria are well
                            filled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:07.051">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-ACCESS-01" name="Misconfigured credentials for groups and roles" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        The credentials for groups and roles are not correctly configured and there are user accounts with more privileges than necessary.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each user has got assigned the correct groups.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All groups&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each group has got assigned the correct roles to achieve principle of
                            least privilege.&lt;/li&gt;
                            &lt;li&gt;Check that the roles for the Cloud Service are well assigned.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;div&gt;
                            &lt;/div&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:07.051">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-ACCESS-DATA-01" name="Sensitive data are accessible" state="0" impact="100" issueId="" issueLink="">
          <desc>Sensitive data are not encrypted and the sensitive data is exposed.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:07.050">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="no-alerts-access" name="There is no alert for unauthorized access" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;There is no alert to notify about unauthorized access to the resources, and this access is not logged.&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:07.050">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-NET-01" name="Unauthorized connection attempts on open ports" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        Receiving unauthorized connections to open ports makes systems vulnerable to attacks. To
                        avoid this, access to the network must be as restricted as possible, so that only the necessary
                        ports are open and the minimum inbound traffic is accepted.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Check that each Azure resources have got their Network Security Groups.&lt;/li&gt;
                            &lt;li&gt;Check that a set of these groups achieve with the principle of the least
                            privilege.&lt;/li&gt;
                            &lt;li&gt;Check that the inbound/outbound security rules are enabled and correctly
                            configured.&lt;/li&gt;
                            &lt;li&gt;In &amp;quot;Inbound security rules&amp;quot;, check that all the traffic from
                            0.0.0.0/0&amp;nbsp;is blocked.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:07.050">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="AZ-A09" name="Apply RBAC with pre-defined policies added into groups or roles" issueId="" issueLink="" platform="" cost="0" risk="64" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Define and create groups that relate to job functions (administrators, developers, accounting,
                        etc.) and assign the relevant permissions for each group, and then assign IAM users to those
                        groups.&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &amp;nbsp;&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        All the users in an IAM group inherit the permissions assigned to the group. That way, you can
                        make changes for everyone in a group in just one place. As people move around in your company,
                        you can simply change what IAM group their IAM user belongs to. This method is known as Role
                        Based Access Control (RBAC).&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Remove a user from a group:&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;ol&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                        &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                        &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Click on the user name. All the groups the user belongs are there.&lt;/li&gt;
                        &lt;li&gt;Choose the group and &amp;quot;Remove&amp;quot;.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/ol&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Create a group and add user:&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;ol&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                        &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                        &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All groups&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Click &amp;quot;New Group&amp;quot; and fill the information.&lt;/li&gt;
                        &lt;li&gt;Search and add the user.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Create a group and add members in Azure Active Directory" url="https://docs.microsoft.com/en-us/azure/active-directory/active-directory-groups-create-azure-portal"/>
            <reference name="MS Azure - Use Role-Based Access Control to manage access to your Azure subscription resources" url="https://docs.microsoft.com/en-us/azure/active-directory/role-based-access-control-configure"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each user has got assigned the correct groups.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All groups&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each group has got assigned the correct roles.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:06.887">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-AD1" name="Block legacy authentication for Azure AD" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Block legacy authentication for Azure AD&lt;/p&gt;&lt;p&gt;Rationale:&lt;br&gt; To give your users easy access to your cloud apps, Azure Active Directory (Azure AD) supports a broad variety of authentication protocols including legacy authentication. Legacy authentication is a term that refers to an authentication request made by:&lt;br&gt; - Older Office clients that do not use modern authentication (for example, Office 2010 client)&lt;br&gt; - Any client that uses legacy mail protocols such as IMAP/SMTP/POP3&lt;br&gt; Today, the majority of all compromising sign-in attempts come from legacy authentication. Legacy authentication does not support multi-factor authentication (MFA). Even if you have an MFA policy enabled on your directory, a bad actor can authenticate using a legacy protocol and bypass MFA. The best way to protect your account from malicious authentication requests made by legacy protocols is to block these attempts altogether.&lt;/p&gt;&lt;p&gt;Remediation:&lt;br&gt; Follow the steps below in order to block legacy authentication in your directory&lt;/p&gt;&lt;p&gt;Identify legacy authentication use&lt;/p&gt;&lt;p&gt;Before you can block legacy authentication in your directory, you need to first understand if your users have apps that use legacy authentication and how it affects your overall directory. Azure AD sign-in logs can be used to understand if you are using legacy authentication.&lt;/p&gt;&lt;p&gt;1. Navigate to the Azure portal &amp;gt; Azure Active Directory &amp;gt; Sign-ins.&lt;br&gt; 2. Add the Client App column if it is not shown by clicking on Columns &amp;gt; Client App.&lt;br&gt; 3. Filter by Client App &amp;gt; check all the Legacy Authentication Clients options presented.&lt;br&gt; 4. Filter by Status &amp;gt; Success.&lt;br&gt; 5. Expand your date range if necessary using the Date filter.&lt;/p&gt;&lt;p&gt;Filtering will only show you successful sign-in attempts that were made by the selected legacy authentication protocols. Clicking on each individual sign-in attempt will show you additional details. The Client App column or the Client App field under the Basic Info tab after selecting an individual row of data will indicate which legacy authentication protocol was used. These logs will indicate which users are still depending on legacy authentication and which applications are using legacy protocols to make authentication requests. For users that do not appear in these logs and are confirmed to not be using legacy authentication, implement a Conditional Access policy or enable the Baseline policy: block legacy authentication for these users only.&lt;/p&gt;&lt;p&gt;Moving away from legacy authentication&lt;/p&gt;&lt;p&gt;Once you have a better idea of who is using legacy authentication in your directory and which applications depend on it, the next step is upgrading your users to use modern authentication. Modern authentication is a method of identity management that offers more secure user authentication and authorization. If you have an MFA policy in place on your directory, modern authentication ensures that the user is prompted for MFA when required. It is the more secure alternative to legacy authentication protocols.&lt;/p&gt;&lt;p&gt;This section gives a step-by-step overview on how to update your environment to modern authentication. Read through the steps below before enabling a legacy authentication blocking policy in your organization.&lt;/p&gt;&lt;p&gt;Step 1: Enable modern authentication in your directory&lt;/p&gt;&lt;p&gt;The first step in enabling modern authentication is making sure your directory supports modern authentication. Modern authentication is enabled by default for directories created on or after August 1, 2017. If your directory was created prior to this date, you will need to manually enable modern authentication for your directory using the following steps:&lt;/p&gt;&lt;p&gt;1. Check to see if your directory already supports modern authentication by running Get-CsOAuthConfiguration from the Skype for Business Online PowerShell module.&lt;br&gt; 2. If your command returns an empty OAuthServers property, then Modern Authentication is disabled. Update the setting to enable modern authentication using Set-CsOAuthConfiguration. If your OAuthServers property contains an entry, you are good to go.&lt;/p&gt;&lt;p&gt;Be sure to complete this step before moving forward. It is critical that your directory configurations are changed first because they dictate which protocol will be used by all Office clients. Even if you are using Office clients that support modern authentication, they will default to using legacy protocols if modern authentication is disabled on your directory.&lt;/p&gt;&lt;p&gt;Step 2: Office applications&lt;/p&gt;&lt;p&gt;Once you have enabled modern authentication in your directory, you can start updating applications by enabling modern authentication for Office clients. Office 2016 or later clients support modern authentication by default. No extra steps are required.&lt;/p&gt;&lt;p&gt;If you are using Office 2013 Windows clients or older, Azure recommends upgrading to Office 2016 or later. Even after completing the prior step of enabling modern authentication in your directory, the older Office applications will continue to use legacy authentication protocols. If you are using Office 2013 clients and are unable to immediately upgrade to Office 2016 or later, follow the steps in the following article to Enable Modern Authentication for Office 2013 on Windows devices. To help protect your account while you are using legacy authentication, Azure recommends using strong passwords across your directory. Check out Azure AD password protection to ban weak passwords across your directory.&lt;/p&gt;&lt;p&gt;Office 2010 does not support modern authentication. You will need to upgrade any users with Office 2010 to a more recent version of Office. Azure recommends upgrading to Office 2016 or later, as it blocks legacy authentication by default.&lt;/p&gt;&lt;p&gt;If you are using macOS, Azure recommends upgrading to Office for Mac 2016 or later. If you are using the native mail client, you will need to have macOS version 10.14 or later on all devices.&lt;/p&gt;&lt;p&gt;Step 3: Exchange and SharePoint&lt;/p&gt;&lt;p&gt;For Windows-based Outlook clients to use modern authentication, Exchange Online must be modern authentication enabled as well. If modern authentication is disabled for Exchange Online, Windows-based Outlook clients that support modern authentication (Outlook 2013 or later) will use basic authentication to connect to Exchange Online mailboxes.&lt;/p&gt;&lt;p&gt;SharePoint Online is enabled for modern authentication default. For directories created after August 1, 2017, modern authentication is enabled by default in Exchange Online. However, if you had previously disabled modern authentication or are you using a directory created prior to this date, follow the steps in the "Enable modern authentication in Exchange Online" in Reference Url.&lt;/p&gt;&lt;p&gt;Step 4: Skype for Business&lt;/p&gt;&lt;p&gt;To prevent legacy authentication requests made by Skype for Business, it is necessary to enable modern authentication for Skype for Business Online. For directories created after August 1, 2017, modern authentication for Skype for Business is enabled by default.&lt;/p&gt;&lt;p&gt;Azure suggests you transition to Microsoft Teams, which supports modern authentication by default. However, if you are unable to migrate at this time, you will need to enable modern authentication for Skype for Business Online so that Skype for Business clients start using modern authentication.&lt;/p&gt;&lt;p&gt;In addition to enabling modern authentication for Skype for Business Online, Azure recommends enabling modern authentication for Exchange Online when enabling modern authentication for Skype for Business. This process will help synchronize the state of modern authentication in Exchange Online and Skype for Business online and will prevent multiple sign-in prompts for Skype for Business clients.&lt;/p&gt;&lt;p&gt;Step 5: Using mobile devices&lt;br&gt; Applications on your mobile device need to block legacy authentication as well. Azure recommends using Outlook for Mobile. Outlook for Mobile supports modern authentication by default and will satisfy other MFA baseline protection policies.&lt;/p&gt;&lt;p&gt;In order to use the native iOS mail client, you will need to be running iOS version 11.0 or later to ensure the mail client has been updated to block legacy authentication.&lt;/p&gt;&lt;p&gt;Step 6: On-premises clients&lt;/p&gt;&lt;p&gt;If you are a hybrid customer using Exchange Server on-premises and Skype for Business on-premises, both services will need to be updated to enable modern authentication. When using modern authentication in a hybrid environment, you are still authenticating users on-premises. The story of authorizing their access to resources (files or emails) changes.&lt;/p&gt;&lt;p&gt;Before you can begin enabling modern authentication on-premises, please be sure that you have met the pre-requisites. You are now ready to enable modern authentication on-premises.&lt;/p&gt;&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Blocking legacy authentication" url="https://docs.microsoft.com/en-us/azure/active-directory/fundamentals/concept-fundamentals-block-legacy-authentication"/>
            <reference name="Enable or disable modern authentication for Outlook in Exchange Online" url="https://docs.microsoft.com/en-us/exchange/clients-and-mobile-in-exchange-online/enable-or-disable-modern-authentication-in-exchange-online"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;To check if your users have apps that use legacy authentication, follow again the steps of "Identify legacy authentication use" section:&lt;/p&gt;      &lt;p&gt;1. Navigate to the Azure portal &gt; Azure Active Directory &gt; Sign-ins.&lt;br /&gt;  2. Add the Client App column if it is not shown by clicking on Columns &gt; Client App.&lt;br /&gt;  3. Filter by Client App &gt; check all the Legacy Authentication Clients options presented.&lt;br /&gt;  4. Filter by Status &gt; Success.&lt;br /&gt;  5. Expand your date range if necessary using the Date filter.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:06.888">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-AD18" name="Configure Azure Active Directory settings" issueId="" issueLink="" platform="" cost="0" risk="59" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;There are some options that must be configured properly to secure Azure Active Directory.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Checklist:&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Ensure that 'Allow users to remember multi-factor authentication on devices they trust' is 'Disabled'&lt;/li&gt;&lt;li&gt;Ensure that 'Number of methods required to reset' is set to '2'&lt;/li&gt;&lt;li&gt;Ensure that 'Number of days before users are asked to re-confirm their authentication information' is not set to "0"&lt;/li&gt;&lt;li&gt;Ensure that 'Notify users on password resets?' is set to 'Yes'&lt;/li&gt;&lt;li&gt;Ensure that 'Notify all admins when other admins reset their password?' is set to 'Yes'&lt;/li&gt;&lt;li&gt;Ensure that 'Users can consent to apps accessing company data on their behalf' is set to 'No'&lt;/li&gt;&lt;li&gt;Ensure that 'Users can add gallery apps to their Access Panel' is set to 'No'&lt;/li&gt;&lt;li&gt;Ensure that 'Users can register applications' is set to 'No'&lt;/li&gt;&lt;li&gt;Ensure that 'Guest user permissions are limited' is set to 'Yes'&lt;/li&gt;&lt;li&gt;Ensure that 'Members can invite' is set to 'No'&lt;/li&gt;&lt;li&gt;Ensure that 'Guests can invite' is set to 'No'&lt;/li&gt;&lt;li&gt;Ensure that 'Restrict access to Azure AD administration portal' is set to 'Yes'&lt;/li&gt;&lt;li&gt;Ensure that 'Restrict user ability to access groups features in the Access Pane' is set to 'No'&lt;/li&gt;&lt;li&gt;Ensure that 'Users can create security groups in Azure Portals' is set to 'No'&lt;/li&gt;&lt;li&gt;Ensure that 'Owners can manage group membership requests in the Access Panel' is set to 'No'&lt;/li&gt;&lt;li&gt;Ensure that 'Users can create Microsoft 365 groups in Azure Portals' is set to 'No'&lt;/li&gt;&lt;li&gt;Ensure that 'Require Multi-Factor Auth to join devices' is set to 'Yes'&lt;/li&gt;&lt;li&gt;Ensure that no custom subscription owner roles are created&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;From Azure Console&lt;/strong&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Go to Azure Active Directory&lt;ol&gt;&lt;li&gt;Go to Users&lt;ol&gt;&lt;li&gt;Go to Password reset&lt;ol&gt;&lt;li&gt;Go to Authentication methods&lt;ol&gt;&lt;li&gt;Set the Number of methods required to reset to 2&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;Go to Registration&lt;ol&gt;&lt;li&gt;Set the Number of days before users are asked to re-confirm their authentication information to your organization defined frequency&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;Go to Notification&lt;ol&gt;&lt;li&gt;Set Notify users on password resets? to Yes&lt;/li&gt;&lt;li&gt;Set Notify all admins when other admins reset their password? to Yes&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;Go to All Users&lt;ol&gt;&lt;li&gt;Click on Multi-Factor Authentication button on the top bar&lt;/li&gt;&lt;li&gt;Click on service settings&lt;/li&gt;&lt;li&gt;Disable Allow users to remember multi-factor authentication on devices they trust&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;Go to User settings&lt;ol&gt;&lt;li&gt;Click on Manage how end users launch and view their applications&lt;ol&gt;&lt;li&gt;Set Users can consent to apps accessing company data on their behalf to No&lt;/li&gt;&lt;li&gt;Set Users can add gallery apps to their Access Panel to No&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;Set Users can register applications to No&lt;/li&gt;&lt;li&gt;Set Restrict access to Azure AD administration portal to Yes&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;Go to External Identities&lt;ol&gt;&lt;li&gt;Go to External collaboration settings&lt;ol&gt;&lt;li&gt;Set Guest users permissions are limited to Yes&lt;/li&gt;&lt;li&gt;Set Members can invite to No&lt;/li&gt;&lt;li&gt;Set Guests can invite to No&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;Go to Groups&lt;ol&gt;&lt;li&gt;Go to General in setting&lt;ol&gt;&lt;li&gt;Ensure that Restrict user ability to access groups features in the Access Pane is set to No&lt;/li&gt;&lt;li&gt;Set Users can create security groups in Azure Portals to No&lt;/li&gt;&lt;li&gt;Set Owners can manage group membership requests in the Access Panel to No&lt;/li&gt;&lt;li&gt;Set Users can create Microsoft 365 groups in Azure Portals to No&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;Go to Devices&lt;ol&gt;&lt;li&gt;Go to Device settings&lt;ol&gt;&lt;li&gt;Set Require Multi-Factor Auth to join devices to Yes&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;/ol&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="1.10" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="1.11" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="1.12" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="1.13" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="1.14" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="1.15" supportedStandardRef="cis-azure-standard"/>
            <standard ref="1.15" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="1.16" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="1.17" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="1.18" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="1.19" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="1.20" supportedStandardRef="cis-azure-standard"/>
            <standard ref="1.20" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="1.21" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="1.22" supportedStandardRef="cis-azure-standard"/>
            <standard ref="1.22" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="1.4" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="1.5" supportedStandardRef="cis-azure-standard"/>
            <standard ref="1.5" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="1.6" supportedStandardRef="cis-azure-standard"/>
            <standard ref="1.6" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="1.7" supportedStandardRef="cis-azure-standard"/>
            <standard ref="1.7" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="1.8" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="1.9" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="14" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="16" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="8" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="9" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API7:2019-Security Misconfiguration" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="GS-1" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="GS-2" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="GS-6" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="IM-4" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="PA-1" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="PA-2" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="PA-5" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="PA-7" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Follow the paths detailed in the description and ensure that the values are the ones indicated.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:06.888">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-AD12" name="Configure Azure Monitor logs" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Configure Azure Monitor logs&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Azure Monitor logs allows you to query data to find particular events, analyze trends, and perform correlation across various data sources. You can also set up alerts on your query. With the integration of Azure AD activity logs in Azure Monitor logs, you can now perform tasks like:&lt;/p&gt; 
&lt;p&gt;- Compare your Azure AD sign-in logs against security logs published by Azure Security Center&lt;br&gt; - Troubleshoot performance bottlenecks on your application's sign-in page by correlating application performance data from Azure Application Insights.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Using this feature requires an Azure AD Premium P1 or P2 license.&lt;/p&gt; 
&lt;p&gt;Send logs to Azure Monitor&lt;/p&gt; 
&lt;p&gt;1.Sign in to the Azure portal.&lt;/p&gt; 
&lt;p&gt;2. Select Azure Active Directory &amp;gt; Diagnostic settings -&amp;gt; Add diagnostic setting. You can also select Export Settings from the Audit Logs or Sign-ins page to get to the diagnostic settings configuration page.&lt;/p&gt; 
&lt;p&gt;3. In the Diagnostic settings menu, select the Send to Log Analytics workspace check box, and then select Configure.&lt;/p&gt; 
&lt;p&gt;4. Select the Log Analytics workspace you want to send the logs to, or create a new workspace in the provided dialog box.&lt;/p&gt; 
&lt;p&gt;5. Do either or both of the following:&lt;/p&gt; 
&lt;p&gt;- To send audit logs to the Log Analytics workspace, select the AuditLogs check box.&lt;br&gt; - To send sign-in logs to the Log Analytics workspace, select the SignInLogs check box.&lt;/p&gt; 
&lt;p&gt;6. Select Save to save the setting.&lt;/p&gt; 
&lt;p&gt;7. After about 15 minutes, verify that events are streamed to your Log Analytics workspace.&lt;/p&gt; 
&lt;p&gt;Navigate to the Log Analytics workspace&lt;/p&gt; 
&lt;p&gt;- Sign in to the Azure portal.&lt;br&gt; - Select Azure Active Directory, and then select Logs from the Monitoring section to open your Log Analytics workspace. The workspace will open with a default query.&lt;/p&gt; 
&lt;p&gt;Alert on Azure AD activity log data&lt;/p&gt; 
&lt;p&gt;You can also set up alerts on your query. For example, to configure an alert when more than 10 applications have been used in the last week:&lt;/p&gt; 
&lt;p&gt;1. From the workspace, select Set alert to open the Create rule page.&lt;/p&gt; 
&lt;p&gt;2. Select the default alert criteria created in the alert and update the Threshold in the default metric to 10.&lt;/p&gt; 
&lt;p&gt;3. Enter a name and description for the alert, and choose the severity level. For our example, we could set it to Informational.&lt;/p&gt; 
&lt;p&gt;4. Select the Action Group that will be alerted when the signal occurs. You can choose to notify your team via email or text message, or you could automate the action using webhooks, Azure functions or logic apps. Learn more about creating and managing alert groups in the Azure portal.&lt;/p&gt; 
&lt;p&gt;5. Once you have configured the alert, select Create alert to enable it.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Analyze Azure AD activity logs with Azure Monitor logs" url="https://docs.microsoft.com/en-us/azure/active-directory/reports-monitoring/howto-analyze-activity-logs-log-analytics#alert-on-azure-ad-activity-log-data"/>
            <reference name="Integrate Azure AD logs with Azure Monitor logs" url="https://docs.microsoft.com/en-us/azure/active-directory/reports-monitoring/howto-integrate-activity-logs-with-log-analytics"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that Azure Monitor logs are configured.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:06.889">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-A11" name="Configure roles for the Cloud Service" issueId="" issueLink="" platform="" cost="0" risk="64" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Define and create the roles for the Azure Cloud Service. For each role, define the permissions and also configure how that role runs. When you launch an Azure instance, you shall specify a role for the instance as a launch parameter. Applications that run on the Cloud instance use the role's credentials when they access Azure resources. This role's permissions determine what the application is allowed to do.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Configure an Azure cloud service from Solution Explorer in Visual Studio.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Use Role-Based Access Control to manage access to your Azure subscription resources" url="https://docs.microsoft.com/en-us/azure/active-directory/role-based-access-control-configure"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that the roles for the Cloud Service are well assigned.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:06.889">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-AD4" name="Create an organization specific custom banned password list" issueId="" issueLink="" platform="" cost="1" risk="56" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Create an organization specific custom banned password list&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Users often create passwords that use common local words such as a school, sports team, or famous person. These passwords are easy to guess, and weak against dictionary-based attacks. To enforce strong passwords in your organization, the Azure Active Directory (Azure AD) custom banned password list let you add specific strings to evaluate and block. A password change request fails if there is a match in the custom banned password list.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Note: To complete this guide, you need a working Azure AD tenant with at least an Azure AD Premium P1 or trial license enabled.&lt;/p&gt; 
&lt;p&gt;Configure custom banned passwords&lt;/p&gt; 
&lt;p&gt;To enable the custom banned password list and add entries to it, complete the following steps:&lt;/p&gt; 
&lt;p&gt;1. Sign in to the Azure portal using an account with global administrator permissions.&lt;/p&gt; 
&lt;p&gt;2. Search for and select Azure Active Directory, then choose Security from the menu on the left-hand side.&lt;/p&gt; 
&lt;p&gt;3. Under the Manage menu header, select Authentication methods, then Password protection.&lt;/p&gt; 
&lt;p&gt;4. Set the option for Enforce custom list to Yes.&lt;/p&gt; 
&lt;p&gt;5. Add strings to the Custom banned password list, one string per line. The following considerations and limitations apply to the custom banned password list:&lt;/p&gt; 
&lt;p&gt;- The custom banned password list can contain up to 1000 terms.&lt;br&gt; - The custom banned password list is case-insensitive.&lt;br&gt; - The custom banned password list considers common character substitution, such as o and 0, or a and @.&lt;br&gt; - The minimum string length is four characters, and the maximum is 16 characters.&lt;/p&gt; 
&lt;p&gt;Specify your own custom passwords to ban.&lt;/p&gt; 
&lt;p&gt;6. Leave the option for Enable password protection on Windows Server Active Directory to No.&lt;/p&gt; 
&lt;p&gt;7. To enable the custom banned passwords and your entries, select Save.&lt;/p&gt; 
&lt;p&gt;It may take several hours for updates to the custom banned password list to be applied.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Tutorial: Configure custom banned passwords for Azure Active Directory password protection" url="https://docs.microsoft.com/en-us/azure/active-directory/authentication/tutorial-configure-custom-password-protection"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Test custom banned password list&lt;/p&gt;

  &lt;p&gt;To see the custom banned password list in action, try to change the password to a variation of one that you added in the Remediation section. When Azure AD tries to process the password change, the password is matched against an entry in the custom banned password list. An error is then displayed to the user.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:06.889">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-A03" name="Create Individual Accounts for the administrator users" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Create an individual account for the administrator users and with this new accounts By creating individual Azure users for people accessing your account, you can give each Azure user a unique set of security credentials.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The administrator accounts shall be used for the administrative actions and for giving or revoke credentials to the user's account. The administrator account shall be not used as a normal user account. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt; 
  &lt;li&gt;Select Azure Active Directory.&lt;/li&gt; 
  &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt; 
  &lt;li&gt;Select &amp;quot;Add New User&amp;quot;.&lt;/li&gt; 
  &lt;li&gt;Fill the required information and click &amp;quot;Create&amp;quot;.&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt; 
&lt;div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Add new users to Azure Active Directory" url="https://docs.microsoft.com/en-us/azure/active-directory/add-users-azure-active-directory"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each user has got a user account assigned.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:06.889">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-A10" name="Create mechanisms to ensure the principle of least privilege is applied" issueId="" issueLink="" platform="" cost="0" risk="64" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Create the mechanisms to review periodically the group and user permissions to ensure the least privilege for the user accounts. Granting least privilege ensures that users only have the permissions required to complete their jobs rather than additional privileges that are not required. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Following this model ensures that, should an account be compromised, the blast radius of damage is limited&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Allocate privileges via groups or roles via the recommendation in "Use RBAC with pre-defined policies added into groups or roles".&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt; 
&lt;div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Create a group and add members in Azure Active Directory" url="https://docs.microsoft.com/en-us/azure/active-directory/active-directory-groups-create-azure-portal"/>
            <reference name="MS Azure - Use Role-Based Access Control to manage access to your Azure subscription resources" url="https://docs.microsoft.com/en-us/azure/active-directory/role-based-access-control-configure"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that the principle of least privilege is achieved in the assignation of roles and
                            groups to the users.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:06.889">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-AD3" name="Designate more than one global administrator in Azure AD" issueId="" issueLink="" platform="" cost="0" risk="64" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Designate more than one global administrator in Azure AD&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; It is important that you prevent being accidentally locked out of your Azure Active Directory (Azure AD) organization because you cannot sign in or activate another user's account as an administrator. You can mitigate the impact of accidental lack of administrative access by creating two or more emergency access accounts in your organization.&lt;/p&gt; 
&lt;p&gt;Emergency access accounts are highly privileged, and they are not assigned to specific individuals. Emergency access accounts are limited to emergency or "break glass"' scenarios where normal administrative accounts cannot be used. Azure recommends that you maintain a goal of restricting emergency account use to only the times when it is absolutely necessary.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Create emergency access accounts&lt;/p&gt; 
&lt;p&gt;Create two or more emergency access accounts. These accounts should be cloud-only accounts that use the *.onmicrosoft.com domain and that are not federated or synchronized from an on-premises environment.&lt;/p&gt; 
&lt;p&gt;When configuring these accounts, the following requirements must be met:&lt;/p&gt; 
&lt;p&gt;- The emergency access accounts should not be associated with any individual user in the organization. Make sure that your accounts are not connected with any employee-supplied mobile phones, hardware tokens that travel with individual employees, or other employee-specific credentials. This precaution covers instances where an individual employee is unreachable when the credential is needed. It is important to ensure that any registered devices are kept in a known, secure location that has multiple means of communicating with Azure AD.&lt;br&gt; - The authentication mechanism used for an emergency access account should be distinct from that used by your other administrative accounts, including other emergency access accounts. For example, if your normal administrator sign-in is via on-premises MFA, then Azure AD MFA would be a different mechanism. However if Azure AD MFA is your primary part of authentication for your administrative accounts, then consider a different approach for these, such as using Conditional Access with a third-party MFA provider via Custom controls.&lt;br&gt; - The device or credential must not expire or be in scope of automated cleanup due to lack of use.&lt;br&gt; - You should make the Global Administrator role assignment permanent for your emergency access accounts.&lt;/p&gt; 
&lt;p&gt;Exclude at least one account from phone-based multi-factor authentication&lt;/p&gt; 
&lt;p&gt;To reduce the risk of an attack resulting from a compromised password, Azure AD recommends that you require multi-factor authentication for all individual users. This group includes administrators and all others (for example, financial officers) whose compromised account would have a significant impact.&lt;/p&gt; 
&lt;p&gt;However, at least one of your emergency access accounts should not have the same multi-factor authentication mechanism as your other non-emergency accounts. This includes third-party multi-factor authentication solutions. If you have a Conditional Access policy to require multi-factor authentication for every administrator for Azure AD and other connected software as a service (SaaS) apps, you should exclude emergency access accounts from this requirement, and configure a different mechanism instead. Additionally, you should make sure the accounts do not have a per-user multi-factor authentication policy.&lt;/p&gt; 
&lt;p&gt;Exclude at least one account from Conditional Access policies&lt;/p&gt; 
&lt;p&gt;During an emergency, you do not want a policy to potentially block your access to fix an issue. At least one emergency access account should be excluded from all Conditional Access policies.&lt;/p&gt; 
&lt;p&gt;In addition you have to store the credentials for emergency access accounts safely and monitor sign-in and audit log activity.&lt;br&gt; For more information please see Reference URL.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Manage emergency access accounts in Azure AD" url="https://docs.microsoft.com/en-us/azure/active-directory/roles/security-emergency-access"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that you have at least two emergency access accounts.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:06.889">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-AD8" name="Disable end-user consent to applications" issueId="" issueLink="" platform="" cost="0" risk="64" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Disable end-user consent to applications&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; The admin consent workflow gives admins a secure way to grant access to applications that require admin approval so end users do not expose corporate data. Microsoft recommends disabling future user consent operations to help reduce your surface area and mitigate this risk.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; To configure user consent settings through the Azure portal:&lt;/p&gt; 
&lt;p&gt;1. Sign in to the Azure portal as a Global Administrator.&lt;br&gt; 2. Select Azure Active Directory &amp;gt; Enterprise applications &amp;gt; Consent and permissions &amp;gt; User consent settings.&lt;br&gt; 3. Under User consent for applications, select "Do not allow user consent" &lt;br&gt; 4. Select Save to save your settings.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Configure how end-users consent to applications" url="https://docs.microsoft.com/en-us/azure/active-directory/manage-apps/configure-user-consent"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that end-user consent to applications is disabled.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:06.889">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-AD11" name="Enable Azure AD Identity Protection" issueId="" issueLink="" platform="" cost="1" risk="62" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Enable Azure Active Directory Identity Protection&lt;/p&gt;

  &lt;p&gt;Rationale:&lt;br /&gt;
Identity Protection is a tool that allows organizations to accomplish three key tasks:&lt;/p&gt;

  &lt;p&gt;- Automate the detection and remediation of identity-based risks.&lt;br /&gt;
- Investigate risks using data in the portal.&lt;br /&gt;
- Export risk detection data to third-party utilities for further analysis.&lt;/p&gt;

  &lt;p&gt;Identity Protection uses the learnings Microsoft has acquired from their position in organizations with Azure AD, the consumer space with Microsoft Accounts, and in gaming with Xbox to protect your users. Microsoft analyses 6.5 trillion signals per day to identify and protect customers from threats.&lt;/p&gt;

  &lt;p&gt;The signals generated by and fed to Identity Protection, can be further fed into tools like Conditional Access to make access decisions, or fed back to a security information and event management (SIEM) tool for further investigation based on your organization's enforced policies.&lt;/p&gt;

  &lt;p&gt;Remediation:&lt;br /&gt;
Using this feature requires an Azure AD Premium P2 license.&lt;/p&gt;

  &lt;p&gt;Then in the Azure portal under Azure Active Directory &gt; Security &gt; Identity Protection you can:&lt;/p&gt;

  &lt;p&gt;- Configure the MFA registration policy&lt;br /&gt;
- Configure risk policies&lt;br /&gt;
- Configure notifications&lt;/p&gt;

  &lt;p&gt;For more information please see Reference URLs.&lt;/p&gt;

  &lt;p&gt;Impact:&lt;br /&gt;
None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Azure Active Directory Identity Protection notifications" url="https://docs.microsoft.com/en-us/azure/active-directory/identity-protection/howto-identity-protection-configure-notifications"/>
            <reference name="How To: Configure and enable risk policies" url="https://docs.microsoft.com/en-us/azure/active-directory/identity-protection/howto-identity-protection-configure-risk-policies"/>
            <reference name="How To: Configure the Azure AD Multi-Factor Authentication registration policy" url="https://docs.microsoft.com/en-us/azure/active-directory/identity-protection/howto-identity-protection-configure-mfa-policy"/>
            <reference name="What is Identity Protection?" url="https://docs.microsoft.com/en-us/azure/active-directory/identity-protection/overview-identity-protection"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that Azure Active Directory Identity Protection is enabled.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:06.889">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-AD5" name="Enable combined security information registration in Azure AD" issueId="" issueLink="" platform="" cost="0" risk="64" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Enable combined security information registration in Azure AD&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Before combined registration, users registered authentication methods for Azure AD Multi-Factor Authentication and self-service password reset (SSPR) separately. People were confused that similar methods were used for Azure AD Multi-Factor Authentication and SSPR but they had to register for both features. Now, with combined registration, users can register once and get the benefits of both Azure AD Multi-Factor Authentication and SSPR.&lt;br&gt; Note: Starting on August 15th 2020, all new Azure AD tenants will be automatically enabled for combined registration. Starting on December 14th 2020, all Azure AD tenants with one user will be automatically enabled for combined registration.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; To enable combined registration, complete these steps:&lt;/p&gt; 
&lt;p&gt;1. Sign in to the Azure portal as a user administrator or global administrator.&lt;/p&gt; 
&lt;p&gt;2. Go to Azure Active Directory &amp;gt; User settings &amp;gt; Manage user feature preview settings.&lt;/p&gt; 
&lt;p&gt;3. Under Users can use the combined security information registration experience, choose to enable for a Selected group of users or for All users.&lt;/p&gt; 
&lt;p&gt;Create a policy to require registration from a trusted location&lt;/p&gt; 
&lt;p&gt;Complete the following steps to create a policy that applies to all selected users that attempt to register using the combined registration experience, and blocks access unless they are connecting from a location marked as trusted network:&lt;/p&gt; 
&lt;p&gt;1. In the Azure portal, browse to Azure Active Directory &amp;gt; Security &amp;gt; Conditional Access.&lt;/p&gt; 
&lt;p&gt;2. Select + New policy.&lt;/p&gt; 
&lt;p&gt;3. Enter a name for this policy, such as Combined Security Info Registration on Trusted Networks.&lt;/p&gt; 
&lt;p&gt;4. Under Assignments, select Users and groups. Choose the users and groups you want this policy to apply to, then select Done.&lt;/p&gt; 
&lt;p&gt;Warning: Users must be enabled for combined registration.&lt;/p&gt; 
&lt;p&gt;5. Under Cloud apps or actions, select User actions. Check Register security information, then select Done.&lt;/p&gt; 
&lt;p&gt;6. Under Conditions &amp;gt; Locations, configure the following options:&lt;br&gt; a. Configure Yes.&lt;br&gt; b. Include Any location.&lt;br&gt; c. Exclude All trusted locations.&lt;/p&gt; 
&lt;p&gt;7. Select Done on the Locations window, then select Done on the Conditions window.&lt;/p&gt; 
&lt;p&gt;8. Under Access controls &amp;gt; Grant, choose Block access, then Select.&lt;/p&gt; 
&lt;p&gt;9. Set Enable policy to On.&lt;/p&gt; 
&lt;p&gt;10. To finalize the policy, select Create.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Enable combined security information registration in Azure Active Directory" url="https://docs.microsoft.com/en-us/azure/active-directory/authentication/howto-registration-mfa-sspr-combined"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that combined security information registration is enabled.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:06.889">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-AD14" name="Enable device based Conditional Access" issueId="" issueLink="" platform="" cost="0" risk="61" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Enable device based Conditional Access&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Improve security and user experiences with device-based Conditional Access. This control ensures users can only access from devices that meet your standards for security and compliance. These devices are also known as managed devices. Managed devices can be Intune compliant or Hybrid Azure AD joined devices.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Managed devices&lt;/p&gt; 
&lt;p&gt;In simple terms, managed devices are devices that are under some sort of organizational control. In Azure AD, the prerequisite for a managed device is that it has been registered with Azure AD. Registering a device creates an identity for the device in form of a device object. This object is used by Azure to track status information about a device. As an Azure AD administrator, you can already use this object to toggle (enable/disable) the state of a device.&lt;/p&gt; 
&lt;p&gt;To get a device registered with Azure AD, you have three options:&lt;/p&gt; 
&lt;p&gt;- Azure AD registered devices - to get a personal device registered with Azure AD&lt;br&gt; - Azure AD joined devices - to get an organizational Windows 10 device that is not joined to an on-premises AD registered with Azure AD.&lt;br&gt; - Hybrid Azure AD joined devices - to get a Windows 10 or supported down-level device that is joined to an on-premises AD registered with Azure AD.&lt;/p&gt; 
&lt;p&gt;To become a managed device, a registered device must be either a Hybrid Azure AD joined device or a device that has been marked as compliant.&lt;/p&gt; 
&lt;p&gt;Require Hybrid Azure AD joined devices&lt;/p&gt; 
&lt;p&gt;In your Conditional Access policy, you can select Require Hybrid Azure AD joined device to state that the selected cloud apps can only be accessed using a managed device.&lt;/p&gt; 
&lt;p&gt;This setting only applies to Windows 10 or down-level devices such as Windows 7 or Windows 8 that are joined to an on-premises AD. You can only register these devices with Azure AD using a Hybrid Azure AD join, which is an automated process to get a Windows 10 device registered.&lt;/p&gt; 
&lt;p&gt;What makes a Hybrid Azure AD joined device a managed device? For devices that are joined to an on-premises AD, it is assumed that the control over these devices is enforced using management solutions such as Configuration Manager or group policy (GP) to manage them. Because there is no method for Azure AD to determine whether any of these methods has been applied to a device, requiring a hybrid Azure AD joined device is a relatively weak mechanism to require a managed device. It is up to you as an administrator to judge whether the methods that are applied to your on-premises domain-joined devices are strong enough to constitute a managed device if such a device is also a Hybrid Azure AD joined device.&lt;/p&gt; 
&lt;p&gt;Require device to be marked as compliant&lt;/p&gt; 
&lt;p&gt;The option to require a device to be marked as compliant is the strongest form to request a managed device.&lt;/p&gt; 
&lt;p&gt;This option requires a device to be registered with Azure AD, and also to be marked as compliant by:&lt;br&gt; - Intune&lt;br&gt; - A third-party mobile device management (MDM) system that manages Windows 10 devices via Azure AD integration. Third-party MDM systems for device OS types other than Windows 10 are not supported.&lt;/p&gt; 
&lt;p&gt;For a device that is marked as compliant, you can assume that:&lt;br&gt; - The mobile devices your workforce uses to access company data are managed&lt;br&gt; - Mobile apps your workforce uses are managed&lt;br&gt; - Your company information is protected by helping to control the way your workforce accesses and shares it&lt;br&gt; - The device and its apps are compliant with company security requirements&lt;/p&gt; 
&lt;p&gt;Scenario: Require device enrollment for iOS and Android devices&lt;/p&gt; 
&lt;p&gt;In this scenario, Contoso has decided that all mobile access to Microsoft 365 resources must use an enrolled device. All of their users already sign in with Azure AD credentials and have licenses assigned to them that include Azure AD Premium P1 or P2 and Microsoft Intune.&lt;/p&gt; 
&lt;p&gt;Organizations must complete the following steps in order to require the use of an enrolled mobile device.&lt;/p&gt; 
&lt;p&gt;1. Sign in to the Azure portal as a global administrator, security administrator, or Conditional Access administrator.&lt;br&gt; 2. Browse to Azure Active Directory &amp;gt; Security &amp;gt; Conditional Access.&lt;br&gt; 3. Select New policy.&lt;br&gt; 4. Give your policy a name. We recommend that organizations create a meaningful standard for the names of their policies.&lt;br&gt; 5. Under Assignments, select Users and groups&lt;br&gt; a. Under Include, select All users or the specific Users and groups you wish to apply this policy to.&lt;br&gt; b. Select Done.&lt;br&gt; 6. Under Cloud apps or actions &amp;gt; Include, select Office 365.&lt;br&gt; 7. Under Conditions, select Device platforms.&lt;br&gt; a. Set Configure to Yes.&lt;br&gt; b. Include Android and iOS.&lt;br&gt; 8. Under Access controls &amp;gt; Grant, select the following options:&lt;br&gt; - Require device to be marked as compliant&lt;br&gt; 9. Confirm your settings and set Enable policy to On.&lt;br&gt; 10. Select Create to create and enable your policy.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="How To: Require managed devices for cloud app access with Conditional Access" url="https://docs.microsoft.com/en-us/azure/active-directory/conditional-access/require-managed-devices#require-hybrid-azure-ad-joined-devices"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that device based Conditional Access is enabled.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:06.889">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-L01" name="Enable diagnostic logs auditing for Microsoft Azure" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Diagnostic Logs capture activity to the data access plane while the Activity log is a subscription-level log for the control plane. Resource-level diagnostic logs provide insight into operations that were performed within that resource itself, for example, getting a secret from a Key Vault. Currently, 32 Azure resources support Diagnostic Logging (See the references section for a complete list), including Network Security Groups, Load Balancers, Key Vault, AD, Logic Apps and CosmosDB. The content of these logs varies by resource type. For example, Windows event system logs are a category of diagnostics logs for VMs, and blob, table, and queue logs are categories of diagnostics logs for storage accounts.&lt;/p&gt;&lt;p&gt;A number of back-end services were not configured to log and store Diagnostic Logs for certain activities or for a sufficient length. It is crucial that logging systems are correctly configured to log all relevant activities and retain those logs for a sufficient length of time. By default, Diagnostic Logs are not enabled. Given that the mean time to detection in an enterprise is 240 days, a minimum retention period of two years is recommended.&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation:&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;The specific steps for configuring resources within the Azure console vary depending on resource, but typically the steps are:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Go to the resource&lt;/li&gt;&lt;li&gt;Click on Diagnostic settings&lt;/li&gt;&lt;li&gt;In the blade that appears, click "Add diagnostic setting"&lt;/li&gt;&lt;li&gt;Configure the diagnostic settings&lt;/li&gt;&lt;li&gt;Click on Save&lt;/li&gt;&lt;/ol&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Enable diagnostics logging for web apps in Azure App Service" url="https://docs.microsoft.com/en-us/azure/app-service-web/web-sites-enable-diagnostic-log"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5.3" supportedStandardRef="cis-azure-standard"/>
            <standard ref="5.3" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="LT-4" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="LT-5" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Go to the resource&lt;/li&gt;&lt;li&gt;Click on Diagnostic settings&lt;/li&gt;&lt;li&gt;In the blade that appears, click "Add diagnostic setting"&lt;/li&gt;&lt;li&gt;Configure the diagnostic settings&lt;/li&gt;&lt;li&gt;Click on Save&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:06.890">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-A04" name="Enable MFA for Administrator &amp; Co Administrator accounts" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Enable multi-factor authentication (MFA) device enhances the security of the login process for the Administrator accounts. With MFA, users have a device that generates a unique authentication code (a one-time password, or OTP) and users must provide both their normal credentials (like their username and password) and the OTP. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The MFA device can either be a special piece of hardware, or it can be a virtual device. The recommendation for the Service Administrator &amp;amp; Co Administrator accounts is to use MFA to increase the level of security of the login process. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt; 
  &lt;li&gt;Select Azure Active Directory.&lt;/li&gt; 
  &lt;li&gt;Go into "Users and groups" &amp;gt; "All users".&lt;/li&gt; 
  &lt;li&gt;Select "Multi-Factor Authentication".&lt;/li&gt; 
  &lt;li&gt;Choose all the Service Administrator &amp;amp; Co Administrator accounts and enable MFA.&amp;nbsp;&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - How to require two-step verification for a user or group" url="https://docs.microsoft.com/en-us/azure/multi-factor-authentication/multi-factor-authentication-get-started-user-states"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;Multi-Factor Authentication&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check all Administrator accounts have got the MFA flag enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:06.890">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-AD16" name="Enable Microsoft's password guidance" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Enable Microsoft's password guidance&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Password Guidance provides Microsoft's recommendations for password management based on current research and lessons from their own experience as one of the largest Identity Providers (IdPs) in the world. It covers recommendations for end users and identity administrators.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Download and enforce Microsoft's password guidance in your organization.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Password Guidance" url="https://www.microsoft.com/en-us/research/publication/password-guidance/"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that Microsoft's password guidance is enabled.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:06.890">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-AD7" name="Enable password writeback for SSPR if using hybrid identities" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Enable password writeback for SSPR if using hybrid identities&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; With Azure Active Directory (Azure AD) self-service password reset (SSPR), users can update their password or unlock their account using a web browser. In a hybrid environment where Azure AD is connected to an on-premises Active Directory Domain Services (AD DS) environment, this scenario can cause passwords to be different between the two directories.&lt;/p&gt; 
&lt;p&gt;Password writeback can be used to synchronize password changes in Azure AD back to your on-premises AD DS environment. Azure AD Connect provides a secure mechanism to send these password changes back to an existing on-premises directory from Azure AD.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;/p&gt; 
&lt;p&gt;Enable password writeback for SSPR&lt;/p&gt; 
&lt;p&gt;Note: Before proceeding to the following steps, make sure you have enabled password writeback to Azure AD Connect first.&lt;/p&gt; 
&lt;p&gt;With password writeback enabled in Azure AD Connect, now configure Azure AD SSPR for writeback. When you enable SSPR to use password writeback, users who change or reset their password have that updated password synchronized back to the on-premises AD DS environment as well.&lt;/p&gt; 
&lt;p&gt;To enable password writeback in SSPR, complete the following steps:&lt;/p&gt; 
&lt;p&gt;1. Sign in to the Azure portal using a global administrator account.&lt;/p&gt; 
&lt;p&gt;2. Search for and select Azure Active Directory, select Password reset, then choose On-premises integration.&lt;/p&gt; 
&lt;p&gt;3. Set the option for Write back passwords to your on-premises directory? to Yes.&lt;/p&gt; 
&lt;p&gt;4. Set the option for Allow users to unlock accounts without resetting their password? to Yes.&lt;/p&gt; 
&lt;p&gt;5. When ready, select Save.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Tutorial: Enable Azure Active Directory self-service password reset writeback to an on-premises environment" url="https://docs.microsoft.com/en-us/azure/active-directory/authentication/tutorial-enable-sspr-writeback#enable-password-writeback-for-sspr"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that password writeback for SSPR is enabled.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:06.890">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-USER-MFA" name="Enable per-user MFA" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Enable per-user MFA 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  Multi-factor authentication (MFA) is a process where a user is prompted during a sign-in event for additional forms of identification. This prompt could be to enter a code on their cellphone or to provide a fingerprint scan. When you require a second form of authentication, security is increased as this additional factor isn't something that's easy for an attacker to obtain or duplicate. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  To secure user sign-in events in Azure AD, you can require multi-factor authentication (MFA). Enabling Azure AD Multi-Factor Authentication using Conditional Access policies is the recommended approach to protect users. Conditional Access is an Azure AD Premium P1 or P2 feature that lets you apply rules to require MFA as needed in certain scenarios 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  For Azure AD free tenants without Conditional Access, you can use security defaults to protect users. Users are prompted for MFA as needed, but you can't define your own rules to control the behavior. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Features and licenses for Azure AD Multi-Factor Authentication" url="https://docs.microsoft.com/en-us/azure/active-directory/authentication/concept-mfa-licensing"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  1. Log into the Azure portal as an owner. 
&lt;/div&gt; 
&lt;div&gt;
  2. Select Azure Active Directory. 
&lt;/div&gt; 
&lt;div&gt;
  3. Go into "Users and groups" &amp;gt; "All users". 
&lt;/div&gt; 
&lt;div&gt;
  4. Select "Multi-Factor Authentication". 
&lt;/div&gt; 
&lt;div&gt;
  5. Ensure your users have the MFA flag enabled. 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:06.890">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-AD10" name="Enable Privileged Identity Management for tracking admin role use" issueId="" issueLink="" platform="" cost="1" risk="62" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Enable Privileged Identity Management for tracking admin role use&lt;/p&gt;

  &lt;p&gt;Rationale:&lt;br /&gt;
Use Privileged Identity Management (PIM) to manage, control, and monitor access within your Azure Active Directory (Azure AD) organization. With PIM you can provide as-needed and just-in-time access to Azure resources, Azure AD resources, and other Microsoft online services like Microsoft 365 or Microsoft Intune.&lt;/p&gt;

  &lt;p&gt;Remediation:&lt;br /&gt;
Licensing requirements&lt;/p&gt;

  &lt;p&gt;To use Privileged Identity Management, your directory must have one of the following paid or trial licenses.&lt;/p&gt;

  &lt;p&gt;- Azure AD Premium P2&lt;br /&gt;
- Enterprise Mobility + Security (EMS) E5&lt;/p&gt;

  &lt;p&gt;When a user who is active in a privileged role in an Azure AD organization with a Premium P2 license goes to Roles and administrators in Azure AD and selects a role (or even just visits Privileged Identity Management):&lt;/p&gt;

  &lt;p&gt;- Azure automatically enables PIM for the organization&lt;br /&gt;
- Their experience is now that they can either assign a "regular" role assignment or an eligible role assignment&lt;br /&gt;
When PIM is enabled it doesn't have any other effect on your organization that you need to worry about. It gives you additional assignment options such as active vs eligible with start and end time. PIM also enables you to define scope for role assignments using Administrative Units and custom roles. If you are a Global Administrator or Privileged Role Administrator, you might start getting a few additional emails like the PIM weekly digest. You might also see MS-PIM service principal in the audit log related to role assignment. This is an expected change that should have no effect on your workflow.&lt;/p&gt;

  &lt;p&gt;For more PIM configurations please see Reference URL.&lt;/p&gt;

  &lt;p&gt;Impact:&lt;br /&gt;
None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Start using Privileged Identity Management" url="https://docs.microsoft.com/en-us/azure/active-directory/privileged-identity-management/pim-getting-started"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that Privileged Identity Management is enabled.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:06.890">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-AD2" name="Enable Security defaults for Azure AD" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Enable Security defaults for Azure AD&lt;/p&gt;&lt;p&gt;Rationale:&lt;br&gt; Managing security can be difficult with common identity-related attacks like password spray, replay, and phishing becoming more and more popular. Security defaults make it easier to help protect your organization from these attacks with preconfigured security settings:&lt;/p&gt;&lt;p&gt;- Requiring all users to register for Azure AD Multi-Factor Authentication.&lt;br&gt; - Requiring administrators to perform multi-factor authentication.&lt;br&gt; - Blocking legacy authentication protocols.&lt;br&gt; - Requiring users to perform multi-factor authentication when necessary.&lt;br&gt; - Protecting privileged activities like access to the Azure portal.&lt;/p&gt;&lt;p&gt;Note: If your tenant was created on or after October 22, 2019, it is possible security defaults are already enabled in your tenant.&lt;/p&gt;&lt;p&gt;Remediation:&lt;br&gt; Enabling security defaults&lt;br&gt; To enable security defaults in your directory:&lt;/p&gt;&lt;p&gt;1. Sign in to the Azure portal as a security administrator, Conditional Access administrator, or global administrator.&lt;br&gt; 2. Browse to Azure Active Directory &amp;gt; Properties.&lt;br&gt; 3. Select Manage security defaults.&lt;br&gt; 4. Set the Enable security defaults toggle to Yes.&lt;br&gt; 5. Select Save.&lt;/p&gt;&lt;p&gt;Impact:&lt;br&gt; Warning: Before you enable security defaults, make sure your administrators are not using older authentication protocols.&lt;/p&gt;&lt;p&gt;Who should use Conditional Access instead of Security defaults?&lt;br&gt; - If you are an organization currently using Conditional Access policies to bring signals together, to make decisions, and enforce organizational policies, security defaults are probably not right for you.&lt;br&gt; - If you are an organization with Azure Active Directory Premium licenses, security defaults are probably not right for you.&lt;br&gt; - If your organization has complex security requirements you should consider Conditional Access.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="What are security defaults?" url="https://docs.microsoft.com/en-us/azure/active-directory/fundamentals/concept-fundamentals-security-defaults"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;To ensure that Security defaults are enabled:&lt;/p&gt;      &lt;p&gt;1. Sign in to the Azure portal as a security administrator, Conditional Access administrator, or global administrator.&lt;br /&gt;  2. Browse to Azure Active Directory &gt; Properties.&lt;br /&gt;  3. Select Manage security defaults.&lt;br /&gt;  4. Check that the Enable security defaults toggle is set to Yes.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:06.890">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-AD6" name="Enable self-service password reset (SSPR)" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Enable self-service password reset (SSPR)&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Self-Service Password Reset (SSPR) is an Azure Active Directory (AD) feature that enables users to reset their passwords without contacting IT staff for help. The users can quickly unblock themselves and continue working no matter where they are or time of day. By allowing the employees to unblock themselves, your organization can reduce the non-productive time and high support costs for most common password-related issues.&lt;/p&gt; 
&lt;p&gt;SSPR has the following key capabilities:&lt;/p&gt; 
&lt;p&gt;- Self-service allows end users to reset their expired or non-expired passwords without contacting an administrator or helpdesk for support.&lt;br&gt; - Password Writeback allows management of on-premises passwords and resolution of account lockout though the cloud.&lt;br&gt; - Password management activity reports give administrators insight into password reset and registration activity occurring in their organization.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; This is how configure SSPR for a set of users in a test group. In the following example, the group SSPR-Test-Group is used. Provide your own Azure AD group as needed:&lt;/p&gt; 
&lt;p&gt;1. Sign in to the Azure portal using an account with global administrator permissions.&lt;/p&gt; 
&lt;p&gt;2. Search for and select Azure Active Directory, then choose Password reset from the menu on the left-hand side.&lt;/p&gt; 
&lt;p&gt;3. From the Properties page, under the option Self service password reset enabled, choose Select group&lt;/p&gt; 
&lt;p&gt;4. Browse for and select your Azure AD group, such as SSPR-Test-Group, then choose Select.&lt;/p&gt; 
&lt;p&gt;5. To enable SSPR for the select users, select Save.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Plan an Azure Active Directory self-service password reset deployment" url="https://docs.microsoft.com/en-us/azure/active-directory/authentication/howto-sspr-deployment"/>
            <reference name="Tutorial: Enable users to unlock their account or reset passwords using Azure Active Directory self-service password reset" url="https://docs.microsoft.com/en-us/azure/active-directory/authentication/tutorial-enable-sspr"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Test self-service password reset&lt;/p&gt;

  &lt;p&gt;With SSPR enabled and configured, test the SSPR process with a user that's part of the group you selected in the Remediation section, such as Test-SSPR-Group. In the following example, the testuser account is used. Provide your own user account that's part of the group you enabled for SSPR in the Remediation section.&lt;/p&gt;

  &lt;p&gt;Note: When you test self-service password reset, use a non-administrator account. By default, admins are enabled for self-service password reset and are required to use two authentication methods to reset their password. For more information, see Administrator reset policy differences.&lt;/p&gt;

  &lt;p&gt;1. To see the manual registration process, open a new browser window in InPrivate or incognito mode, and browse to https://aka.ms/ssprsetup. Users should be directed to this registration portal when they next sign-in.&lt;/p&gt;

  &lt;p&gt;2. Sign in with a non-administrator test user, such as testuser, and register your authentication methods contact information.&lt;/p&gt;

  &lt;p&gt;3. Once complete, select the button marked Looks good and close the browser window.&lt;/p&gt;

  &lt;p&gt;4. Open a new browser window in InPrivate or incognito mode, and browse to https://aka.ms/sspr.&lt;/p&gt;

  &lt;p&gt;5. Enter your non-administrator test users' account information, such as testuser, the characters from the CAPTCHA, and then select Next.&lt;/p&gt;

  &lt;p&gt;6. Follow the verification steps to reset your password. When complete, you should receive an e-mail notification that your password was reset.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:06.890">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-AD17" name="Ensure there are no Azure Active Directory guest users if they are not needed" issueId="" issueLink="" platform="" cost="0" risk="61" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Azure AD is extended to include Azure AD B2B collaboration, allowing you to invite people from outside your organization to be guest users in your cloud account and sign in with their own work, school, or social identities. Guest users allow you to share your company's applications and services with users from any other organization, while maintaining control over your own corporate data.&lt;/p&gt;&lt;p&gt;Work with external partners, large or small, even if they don't have Azure AD or an IT department. A simple invitation and redemption process lets partners use their own credentials to access your company's resources a a guest user.&lt;/p&gt;&lt;p&gt;Rationale:&lt;/p&gt;&lt;p&gt;Guest users in the Azure AD are generally required for collaboration purposes in Office 365, and may also be required for Azure functions in enterprises with multiple Azure tenants, Guest users should be reviewed on a regular basis, at least annually, Guest users should not be granted administrative roles where possible.&lt;/p&gt;&lt;p&gt;Guest users are typically added outside your employee on-boarding/off-boarding process and could potentially be overlooked indefinitely leading to a potential vulnerability.&lt;/p&gt;&lt;p&gt;Guest users should be review on a monthly basis to ensure that inactive and unneeded accounts are removed.&lt;/p&gt;&lt;p&gt;Impact:&lt;/p&gt;&lt;p&gt;Until you have a business need to provide guest access to any user, avoid creating guest users. If guest accounts are being used, they should be removed when no longer required.&lt;/p&gt;&lt;p&gt;Remediation:&lt;/p&gt;&lt;p&gt;&lt;strong&gt;From Azure Console&lt;/strong&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Go to Azure Active Directory&lt;/li&gt;&lt;li&gt;Go to Users and group&lt;/li&gt;&lt;li&gt;Go to All Users&lt;/li&gt;&lt;li&gt;Click on Show drop down and select Guest users only&lt;/li&gt;&lt;li&gt;Delete all "Guest" users that are no longer required or are inactive.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;It is good practice to use a dynamic group to manage guest users. To create the dynamic group:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Navigate to the Active Directory blade in the Azure Portal&lt;/li&gt;&lt;li&gt;Select the &lt;i&gt;Groups &lt;/i&gt;item&lt;/li&gt;&lt;li&gt;Create new&lt;/li&gt;&lt;li&gt;Type of &lt;i&gt;dynamic&lt;/i&gt;&lt;/li&gt;&lt;li&gt;Use the following dynamic selection rule. "(user.userType -eq "Guest")"&lt;/li&gt;&lt;li&gt;Once the group has been created, select access reviews option and create a new access review with a period of monthly and send to relevant administrators for review.&lt;/li&gt;&lt;/ol&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1.3" supportedStandardRef="cis-azure-standard"/>
            <standard ref="1.3" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="PA-3" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;&lt;strong&gt;From Azure Console&lt;/strong&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Go to Azure Active Directory&lt;/li&gt;&lt;li&gt;Go to Users and group&lt;/li&gt;&lt;li&gt;Go to All Users&lt;/li&gt;&lt;li&gt;Click on Show drop down and select Guest users only&lt;/li&gt;&lt;li&gt;Ensure that guest users listed are still required (USER TYPE = Guest)&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;strong&gt;Using Azure Command Line Interface 2.0&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;az ad user list --query "[?userType=='Guest']"&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Ensure all users listed are not inactive and still required.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Using PowerShell&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;Connect-AzureAD (Only needs to be performed once within the PowerShell session) Get-AzureADUser |Where-Object {$_.UserType -like "Guest"} |Select-Object DisplayName, UserPrincipalName, UserType -Unique&lt;/p&gt;&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:06.891">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-L05" name="Export the Audit Logs to a storage account" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Export the information of Audit Logs to a storage account. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Go to "Monitor" and then to "Activity Logs".&lt;/li&gt; 
  &lt;li&gt;Push the button "Export".&lt;/li&gt; 
  &lt;li&gt;Select "All Regions".&lt;/li&gt; 
  &lt;li&gt;Select "Export to a storage account" and select your account.&lt;/li&gt; 
  &lt;li&gt;Select the "Retention (days)" as minimum 90 days.&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Enable diagnostics logging for web apps in Azure App Service" url="https://docs.microsoft.com/en-us/azure/app-service-web/web-sites-enable-diagnostic-log"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Activity Logs&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Push the button &amp;quot;Export&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;All Regions&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;Export to a storage account&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that all fields are correctly filled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:06.891">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-AD9" name="Integrate supported SaaS applications from the gallery to Azure AD and enable SSO" issueId="" issueLink="" platform="" cost="0" risk="64" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Integrate supported SaaS applications from the gallery to Azure AD and enable Single sign on (SSO)&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Azure AD has a gallery that contains thousands of pre-integrated applications. Some of the applications your organization uses are probably in the gallery accessible directly from the Azure portal. Provide access to corporate SaaS applications remotely and securely with improved user experience (SSO).&lt;/p&gt; 
&lt;p&gt;After integrating supported SaaS applications, you can automatically create user identities and roles in the cloud (SaaS) applications that users need access to. In addition to creating user identities, automatic provisioning includes the maintenance and removal of user identities as status or roles change, increasing your organization's security.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Add an app to your Azure AD tenant&lt;/p&gt; 
&lt;p&gt;To add an application to your Azure AD tenant:&lt;/p&gt; 
&lt;p&gt;1. In the Azure portal, on the left navigation panel, select Azure Active Directory.&lt;/p&gt; 
&lt;p&gt;2. In the Azure Active Directory pane, select Enterprise applications. The All applications pane opens and displays a random sample of the applications in your Azure AD tenant.&lt;/p&gt; 
&lt;p&gt;3. In the Enterprise applications pane, select New application.&lt;/p&gt; 
&lt;p&gt;4. Switch to the new gallery preview experience: In the banner at the top of the Add an application page, select the link that says Click here to try out the new and improved app gallery.&lt;/p&gt; 
&lt;p&gt;5. The Browse Azure AD Gallery (Preview) pane opens and displays tiles for cloud platforms, on-premises applications, and featured applications. Applications listed in the Featured applications section have icons indicating whether they support federated single sign-on (SSO) and provisioning.&lt;/p&gt; 
&lt;p&gt;6. You can browse the gallery for the application you want to add, or search for the application by entering its name in the search box. Then select the application from the results.&lt;/p&gt; 
&lt;p&gt;7. The next step depends on the way the developer of the application implemented single sign-on (SSO). Single sign-on can be implemented by app developers in four ways. The four ways are SAML, OpenID Connect, Password, and Linked. When you add an app, you can choose to filter and see only apps using a particular SSO implementation as shown in the screenshot. For example, a popular standard to implement SSO is called Security Assertion Markup Language (SAML). Another standard that is popular is called OpenId Connect (OIDC). The way you configure SSO with these standards is different so take note of the type of SSO that is implemented by the app that you are adding.&lt;/p&gt; 
&lt;p&gt;- If the developer of the app used the OIDC standard for SSO then select Sign Up. A setup page appears. Next, go to the quickstart on setting up OIDC-based single sign-on.&lt;/p&gt; 
&lt;p&gt;- If the developer of the app used the SAML standard for SSO then select Create. A getting started page appears with the options for configuring the application for your organization. In the form, you can edit the name of the application to match the needs of your organization. Next, go to the quickstart on setting up SAML-based single sign-on.&lt;/p&gt; 
&lt;p&gt;Important: There are some key differences between SAML-based and OIDC-based SSO implementations. With SAML-based apps you can add multiple instances of the same app. For example, GitHub1, GitHub2, etc.. For OIDC-based apps you can only add one instance of an app. If you have already added an OIDC-based app and try to add the same app again and provide consent twice, it will not be added again in the tenant.&lt;/p&gt; 
&lt;p&gt;If the application you are looking for is not in the gallery then you can select the link Create your own application and then under What are you looking to do with your application? choose Integrate any other application you do not find in the gallery. Microsoft has already worked with many application developers to pre-configure them to work with Azure AD. The pre-configured apps show up in the gallery. But if the app you want to add is not listed then you can create a new, generic, app and then configure it yourself or with the guidance of the developer that created it.&lt;/p&gt; 
&lt;p&gt;You have finished adding an application.&lt;/p&gt; 
&lt;p&gt;How to set up automatic provisioning to an application&lt;/p&gt; 
&lt;p&gt;For pre-integrated applications listed in the gallery, step-by-step guidance is available for setting up automatic provisioning. Please follow Reference URL for more details.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Quickstart: Add an application to your Azure Active Directory (Azure AD) tenant" url="https://docs.microsoft.com/en-us/azure/active-directory/manage-apps/add-application-portal"/>
            <reference name="What is automated SaaS app user provisioning in Azure AD?" url="https://docs.microsoft.com/en-us/azure/active-directory/app-provisioning/user-provisioning"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Testing supported SaaS applications integration&lt;/p&gt;

  &lt;p&gt;Azure recommends using a non-production environment to test the steps in the description section.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:06.891">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-A07" name="Recertify user access" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Do regular reviews of accounts on the system and verify that it doesn't exist stoled or fake
                        accounts. With this process is ensured that there are not compromised accounts by former
                        employees or by attackers.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        At least every 90 days complete the following:&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Log in to the Azure portal as an owner.&lt;/li&gt;
                        &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                        &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;For any user that should not exist:&lt;/li&gt;
                        &lt;li&gt;Select the user.&lt;/li&gt;
                        &lt;li&gt;Click &amp;quot;Delete&amp;quot;.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Assign a user or group to an enterprise app in Azure Active Directory" url="https://docs.microsoft.com/en-us/azure/active-directory/active-directory-coreapps-assign-user-azure-portal"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Log in to the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each user has got an assigned account.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:06.891">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-AD13" name="Secure legacy apps with Azure Active Directory" issueId="" issueLink="" platform="" cost="0" risk="61" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Secure legacy apps with Azure Active Directory&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Publish and protect your on-premises and cloud legacy authentication applications by connecting them to Azure AD with your existing application delivery controller or network.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; You can protect your on-premises and cloud legacy authentication applications by connecting them to Azure Active Directory (AD) with:&lt;/p&gt; 
&lt;p&gt;- Azure AD Application Proxy&lt;/p&gt; 
&lt;p&gt;- Your existing application delivery controllers and networks&lt;/p&gt; 
&lt;p&gt;- Virtual Private Network (VPN) and Software-Defined Perimeter (SDP) applications&lt;/p&gt; 
&lt;p&gt;You can bridge the gap and strengthen your security posture across all applications with Azure AD capabilities like Azure AD Conditional Access and Azure AD Identity Protection.&lt;/p&gt; 
&lt;p&gt;For more details please see Reference URL.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Secure hybrid access: Secure legacy apps with Azure Active Directory" url="https://docs.microsoft.com/en-us/azure/active-directory/manage-apps/secure-hybrid-access"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that your on-premises and cloud legacy authentication applications are secured.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:06.891">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-AD15" name="Use Azure AD B2B to invite guest users" issueId="" issueLink="" platform="" cost="1" risk="61" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Use Azure AD B2B to invite guest users&lt;/p&gt;

  &lt;p&gt;Rationale:&lt;br /&gt;
Azure Active Directory (Azure AD) business-to-business (B2B) collaboration is a feature within External Identities that lets you invite guest users to collaborate with your organization. With B2B collaboration, you can securely share your company's applications and services with guest users from any other organization, while maintaining control over your own corporate data. Work safely and securely with external partners, large or small, even if they don't have Azure AD or an IT department. A simple invitation and redemption process lets partners use their own credentials to access your company's resources. Developers can use Azure AD business-to-business APIs to customize the invitation process or write applications like self-service sign-up portals.&lt;/p&gt;

  &lt;p&gt;Remediation:&lt;br /&gt;
Invite guest users from the Azure AD portal&lt;/p&gt;

  &lt;p&gt;As an administrator, you can add guest users to your organization in the Azure portal.&lt;/p&gt;

  &lt;p&gt;- Create a new guest user in Azure AD, similar to how you'd add a new user.&lt;br /&gt;
- Assign guest users to apps or groups.&lt;br /&gt;
- Send an invitation email that contains a redemption link, or send a direct link to an app you want to share.&lt;br /&gt;
- Guest users follow a few simple redemption steps to sign in.&lt;/p&gt;

  &lt;p&gt;Impact:&lt;br /&gt;
None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="What is guest user access in Azure Active Directory B2B?" url="https://docs.microsoft.com/en-us/azure/active-directory/external-identities/what-is-b2b"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that Azure AD B2B is used to invite guest users.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:06.891">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="AUTHENTICATION" name="Authentication" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="AZURE-LOST-ACCESS-ROOT" name="Attackers gain unauthorized access to the root account due to the lack of configuration of the account" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;div&gt;Attackers could gain unauthorized access to the administrator account due to a lack of configuration of the account and its security mechanisms, making it possible to modify credentials and add/remove user accounts.
                                &lt;/div&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="AZ-W04">
                  <countermeasures>
                    <countermeasure ref="AZ-A04" mitigation="50"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AZURE-MON02">
                  <countermeasures>
                    <countermeasure ref="AZ-A03" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-A03" mitigation="50"/>
                <countermeasure ref="AZ-A04" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="AZURE-LOST-ACCESS-USER" name="Attackers gain unauthorized access to the user account due to the lack of configuration of the account" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;Attackers could gain unauthorized access to the user account due to the lack of configuration of the account, for example, the security question to reset the password is configured incorrectly.&lt;/p&gt;</desc>
              <riskRating confidentiality="50" integrity="50" availability="50" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-IDENTITY-03">
                  <countermeasures>
                    <countermeasure ref="AZ-A07" mitigation="12"/>
                    <countermeasure ref="AZURE-AD1" mitigation="12"/>
                    <countermeasure ref="AZURE-AD16" mitigation="13"/>
                    <countermeasure ref="AZURE-AD2" mitigation="12"/>
                    <countermeasure ref="AZURE-AD4" mitigation="13"/>
                    <countermeasure ref="AZURE-AD6" mitigation="13"/>
                    <countermeasure ref="AZURE-AD7" mitigation="13"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AZURE-MON03">
                  <countermeasures>
                    <countermeasure ref="AZURE-USER-MFA" mitigation="12"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-A07" mitigation="12"/>
                <countermeasure ref="AZURE-AD1" mitigation="12"/>
                <countermeasure ref="AZURE-AD16" mitigation="13"/>
                <countermeasure ref="AZURE-AD2" mitigation="12"/>
                <countermeasure ref="AZURE-AD4" mitigation="13"/>
                <countermeasure ref="AZURE-AD6" mitigation="13"/>
                <countermeasure ref="AZURE-AD7" mitigation="13"/>
                <countermeasure ref="AZURE-USER-MFA" mitigation="12"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="AUTHORIZATION" name="Authorization" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="LOSS-CONTROL_ENV" name="Attackers gain unauthorized access to the control of the environment" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;Attackers could potentially gain unauthorized access to the control of the environment, due to user accounts - or role groups - not being well defined and configured. As a consequence attackers may be able to make changes without root approval.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="75" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-ACCESS-01">
                  <countermeasures>
                    <countermeasure ref="AZ-A09" mitigation="20"/>
                    <countermeasure ref="AZ-A10" mitigation="20"/>
                    <countermeasure ref="AZ-A11" mitigation="20"/>
                    <countermeasure ref="AZURE-AD3" mitigation="20"/>
                    <countermeasure ref="AZURE-AD5" mitigation="20"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-A09" mitigation="20"/>
                <countermeasure ref="AZ-A10" mitigation="20"/>
                <countermeasure ref="AZ-A11" mitigation="20"/>
                <countermeasure ref="AZURE-AD3" mitigation="20"/>
                <countermeasure ref="AZURE-AD5" mitigation="20"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="GENERAL" name="General" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="UNCONFIGURED-SECURITY" name="Attackers gain access to the system by exploiting weak security configurations" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>Weak security configurations like using sharing passwords in plain text, using weak passwords, using obsolete encryption algorithms, etc. can lead attackers to gain access to the system.</desc>
              <riskRating confidentiality="75" integrity="50" availability="25" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-16">
                  <countermeasures>
                    <countermeasure ref="AZURE-AD18" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZURE-AD18" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="UNAUTHORISED-CONNECTION" name="Attackers gain unauthorized connection to the resources" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>Attackers could gain unauthorized connection to the resources through misconfigured
                                ports or security network configurations.
                            </desc>
              <riskRating confidentiality="25" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="no-alerts-access">
                  <countermeasures>
                    <countermeasure ref="AZURE-AD17" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZURE-AD17" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="ACCESS-TO-DATA" name="Sensitive data is compromised through unauthorized access to data storage" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;A data breach is a security violation in which sensitive, protected or confidential data is copied, transmitted, viewed, stolen or used by an individual unauthorized to do so. Sensitive data could be exposed due to a bad configuration in user permissions.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-ACCESS-DATA-01">
                  <countermeasures>
                    <countermeasure ref="AZURE-AD8" mitigation="50"/>
                    <countermeasure ref="AZURE-AD9" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZURE-AD8" mitigation="50"/>
                <countermeasure ref="AZURE-AD9" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="LOGGING AND MONITORING" name="Logging and Monitoring" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="OWASP A10:2017" name="Exploitation of insufficient logging and monitoring" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>	&lt;p&gt;Exploitation of insufficient logging and monitoring is the bedrock of nearly every major incident.&lt;br /&gt;
 Attackers rely on the lack of monitoring and timely response to achieve their goals without being detected.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="AZ-L01" mitigation="20"/>
                    <countermeasure ref="AZ-L05" mitigation="20"/>
                    <countermeasure ref="AZURE-AD10" mitigation="20"/>
                    <countermeasure ref="AZURE-AD11" mitigation="20"/>
                    <countermeasure ref="AZURE-AD12" mitigation="20"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-L01" mitigation="20"/>
                <countermeasure ref="AZ-L05" mitigation="20"/>
                <countermeasure ref="AZURE-AD10" mitigation="20"/>
                <countermeasure ref="AZURE-AD11" mitigation="20"/>
                <countermeasure ref="AZURE-AD12" mitigation="20"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="NETWORKING" name="Networking" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="AZURE-UNAUTHORISED-CONNECTION" name="Attackers perform unauthorized network access" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;Attackers could perform unauthorized network access to the resources through misconfigured ports or security network configurations.&lt;/p&gt;</desc>
              <riskRating confidentiality="25" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-NET-01">
                  <countermeasures>
                    <countermeasure ref="AZURE-AD13" mitigation="34"/>
                    <countermeasure ref="AZURE-AD14" mitigation="33"/>
                    <countermeasure ref="AZURE-AD15" mitigation="33"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZURE-AD13" mitigation="34"/>
                <countermeasure ref="AZURE-AD14" mitigation="33"/>
                <countermeasure ref="AZURE-AD15" mitigation="33"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="f69c2a96-9c75-434d-863f-26a82e554bfa" diagramComponentId="6c0fd296-2d79-4f62-b8de-006abfd2a4ca" ref="937cc702-e6d9-4ac3-81c1-b3e7221c9b73" name="Azure Blob Storage" desc="" library="Microsoft-Azure" parentComponentRef="f0155081-ed2f-4930-b284-10d437597eec" componentDefinitionRef="CD-MICROSOFT-AZURE-BLOB-STORAGE">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses>
        <weakness ref="CWE-16" name="Configuration" state="0" impact="100" issueId="" issueLink="">
          <desc>Weaknesses in this category are typically introduced during the
                        configuration of the software.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:07.606">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CWE-778" name="Insufficient Logging" state="0" impact="100" issueId="" issueLink="">
          <desc>When a critical security event occurs, the software either does not record the event or omits important details about the event when logging it. When critical security events are not logged properly, such as in the case of a failed login attempt, this can make malicious behavior more difficult to detect and may hinder forensic analyses after a successful attack.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:07.605">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AZURE-ACCESS-01" name="Misconfigured credentials for groups and roles" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        The credentials for groups and roles are not correctly configured and there are user accounts with more privileges than necessary.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each user has got assigned the correct groups.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All groups&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each group has got assigned the correct roles to achieve principle of
                            least privilege.&lt;/li&gt;
                            &lt;li&gt;Check that the roles for the Cloud Service are well assigned.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;div&gt;
                            &lt;/div&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:07.606">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AZURE-VNET01" name="Networks for Azure resources are not properly segmented. Without proper segmentation, when attackers gain access to one resource, any other resources in the same VNet are compromised" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        Resources in the same VNet are compromised because when one of them is attacked and the
                        attackers gain access, they also gain access to all resources.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            Identify the resources and the Microsoft Azure instances.
                            &lt;/div&gt;
                            &lt;div&gt;
                            Check that the resources are in the correct VNet.
                            &lt;/div&gt;
                            &lt;div&gt;
                            Check that the Microsoft Azure instances&amp;nbsp;are into different VNets.
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:07.606">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AZURE-ACCESS-DATA-01" name="Sensitive data are accessible" state="0" impact="100" issueId="" issueLink="">
          <desc>Sensitive data are not encrypted and the sensitive data is exposed.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:07.606">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AZURE-MONITOR-BACKUPS" name="There is not a recover or backup mechanism" state="0" impact="100" issueId="" issueLink="">
          <desc>There are not any processes or mechanisms to regularly save the data to another place in order to have an older version of the data to restore in case of loss. Consequently the data cannot be easily recovered or they cannot be recovered at all.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:07.606">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AZURE-NET-01" name="Unauthorized connection attempts on open ports" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        Receiving unauthorized connections to open ports makes systems vulnerable to attacks. To
                        avoid this, access to the network must be as restricted as possible, so that only the necessary
                        ports are open and the minimum inbound traffic is accepted.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Check that each Azure resources have got their Network Security Groups.&lt;/li&gt;
                            &lt;li&gt;Check that a set of these groups achieve with the principle of the least
                            privilege.&lt;/li&gt;
                            &lt;li&gt;Check that the inbound/outbound security rules are enabled and correctly
                            configured.&lt;/li&gt;
                            &lt;li&gt;In &amp;quot;Inbound security rules&amp;quot;, check that all the traffic from
                            0.0.0.0/0&amp;nbsp;is blocked.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:07.606">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="AZ-S03" name="Configure Azure Storage settings for each storage" issueId="" issueLink="" platform="" cost="0" risk="59" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;There are some options that must be selected to secure Azure Storages.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Checklist:&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Ensure that 'Secure transfer required' is set to 'Enabled'&lt;/li&gt;&lt;li&gt;Ensure that storage account access keys are periodically regenerated&lt;/li&gt;&lt;li&gt;Ensure Storage logging is enabled for Queue service for read, write, and delete requests&lt;/li&gt;&lt;li&gt;Ensure that shared access signature tokens expire within an hour&lt;/li&gt;&lt;li&gt;Ensure that 'Public access level' is set to Private for blob containers&lt;/li&gt;&lt;li&gt;Ensure default network access rule for Storage Accounts is set to deny&lt;/li&gt;&lt;li&gt;Ensure 'Trusted Microsoft Services' is enabled for Storage Account access&lt;/li&gt;&lt;li&gt;Ensure soft delete is enabled for Azure Storage&lt;/li&gt;&lt;li&gt;Ensure storage for critical data are encrypted with Customer Managed Key&lt;/li&gt;&lt;li&gt;Ensure Storage logging is enabled for Blob service for read, write, and delete requests&lt;/li&gt;&lt;li&gt;Ensure Storage logging is enabled for Table service for read, write, and delete requests&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;From Azure Console&lt;/strong&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Go to Storage Accounts&lt;/li&gt;&lt;li&gt;For each storage account&lt;ol&gt;&lt;li&gt;Go to Configuration&lt;ol&gt;&lt;li&gt;Go to Allow Blob public access&lt;ol&gt;&lt;li&gt;Set Disabled if no anonymous access is needed on the storage account&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;Set Secure transfer required to Enabled&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;Go to Diagnostics settings (classic) from Monitoring (classic)&lt;ol&gt;&lt;li&gt;Set the Status to On, if set to Off.&lt;/li&gt;&lt;li&gt;Select Queue properties.&lt;ol&gt;&lt;li&gt;Select Read, Write and Delete options under the Logging section to enable Storage Logging for Queue service.&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;Select Blob properties&lt;ol&gt;&lt;li&gt;Select Read, Write and Delete options under the Logging section to enable Storage Logging for Blob service.&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;Select Table properties&lt;ol&gt;&lt;li&gt;Select Read, Write and Delete options under the Logging section to enable Storage Logging for Table service.&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;Go to Shared access signature&lt;ol&gt;&lt;li&gt;Set Start and expiry date/time within an hour&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;Go to Containers under BLOB SERVICE&lt;ol&gt;&lt;li&gt;For each container, click Access policy&lt;ol&gt;&lt;li&gt;Set Public access level to Private (no anonymous access)&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;Go to Firewalls and virtual networks&lt;ol&gt;&lt;li&gt;Ensure that you have elected to allow access from Selected networks.&lt;/li&gt;&lt;li&gt;Enable check box for Allow trusted Microsoft services to access this storage account.&lt;/li&gt;&lt;li&gt;Add rules to allow traffic from specific network.&lt;/li&gt;&lt;li&gt;Click Save to apply your changes.&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;Go to Data Protection&lt;ol&gt;&lt;li&gt;Select set soft delete enabled and enter a number of days you want to retain soft deleted data.&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;Go to Encryption&lt;ol&gt;&lt;li&gt;Set Customer Managed Keys&lt;/li&gt;&lt;li&gt;Select the Encryption key and enter the appropriate setting value&lt;/li&gt;&lt;li&gt;Click Save&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;Ensure that storage account access keys are periodically regenerated by following Microsoft Azure documentation for &lt;a href="https://docs.microsoft.com/en-us/azure/storage/common/storage-account-create?tabs=azure-portal#regenerate-storage-access-keys"&gt;regenerating storage account access keys&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;Alternatively, some of these actions can be done with the Azure CLI 2.0.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Using Azure Command Line Interface 2.0&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Use the below command to enable Secure transfer required for a Storage Account&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;az storage account update --name &amp;lt;storageAccountName&amp;gt; --resource-group &amp;lt;resourceGroupName&amp;gt; --https-only true&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Use the below command to enable the Storage Logging for Queue service.&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;az storage logging update --account-name &amp;lt;storageAccountName&amp;gt; --account-key &amp;lt;storageAccountKey&amp;gt; --services q --log rwd --retention 90&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Ensure the below command output contains null&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;az storage container list --account-name &amp;lt;accountName&amp;gt; --account-key &amp;lt;accountKey&amp;gt; --query '[*].properties.publicAccess'&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Ensure allowBlobPublicAccess is false&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;az storage account show --name &amp;lt;storage-account&amp;gt; --resource-group &amp;lt;resource-group&amp;gt; --query allowBlobPublicAccess --output tsv&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Identify the container name from previous command. Set the permission for public access to private(off) for the above container name, using the below command&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;az storage container set-permission --name &amp;lt;containerName&amp;gt; --public-access off --account-name &amp;lt;accountName&amp;gt; --account-key &amp;lt;accountKey&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Set Disabled if no anonymous access is wanted on the storage account&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;az storage account update --name &amp;lt;storage-account&amp;gt; --resource-group &amp;lt;resource-group&amp;gt; --allow-blob-public-access false&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Use the below command to update default-action to Deny.&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;az storage account update --name &amp;lt;StorageAccountName&amp;gt; --resource-group &amp;lt;resourceGroupName&amp;gt; --default-action Deny&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Use the below command to update trusted Microsoft services.&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;az storage account update --name &amp;lt;StorageAccountName&amp;gt; --resource-group &amp;lt;resourceGroupName&amp;gt; --bypass AzureServices&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Update retention days in below command&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;az storage blob service-properties delete-policy update --days-retained &amp;lt;RetentionDaysValue&amp;gt; --account-name &amp;lt;StorageAccountName&amp;gt; --enable true&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Use the below command to enable the Storage Logging for Blob service.&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;az storage logging update --account-name &amp;lt;storageAccountName&amp;gt; --account-key &amp;lt;storageAccountKey&amp;gt; --services b --log rwd --retention 90&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Use the below command to enable the Storage Logging for Table service.&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;az storage logging update --account-name &amp;lt;storageAccountName&amp;gt; --account-key &amp;lt;storageAccountKey&amp;gt; --services t --log rwd --retention 90&lt;/p&gt;&lt;/blockquote&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1" supportedStandardRef="cis-azure-standard"/>
            <standard ref="3.1" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="3.10" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="3.11" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="3.2" supportedStandardRef="cis-azure-standard"/>
            <standard ref="3.2" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="3.3" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="3.4" supportedStandardRef="cis-azure-standard"/>
            <standard ref="3.4" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="3.5" supportedStandardRef="cis-azure-standard"/>
            <standard ref="3.5" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="3.6" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="3.7" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="3.8" supportedStandardRef="cis-azure-standard"/>
            <standard ref="3.8" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="3.9" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="API7:2019-Security Misconfiguration" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Follow the paths detailed in the description and ensure the values are set correctly.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:07.526">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="C-AZURE-STORAGE2" name="Configure operational backup for Azure Blob Storage" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Configure operational backup for Azure Blob Storage&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Azure Backup lets you easily configure operational backup for protecting block blobs in your storage accounts.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Enable Azure Backup and configure the backup source on a desired frequency and with a desired retention period. Azure Backup lets you easily configure operational backup for protecting block blobs in your storage accounts. Backup of blobs is configured at the storage account level. So, all blobs in the storage account are protected with operational backup.&lt;br&gt; You can configure backup for multiple storage accounts using the Backup Center. You can also configure backup for a storage account using the storage account's Data Protection properties.&lt;/p&gt; 
&lt;p&gt;Note&lt;br&gt; Azure Backup is currently only supported for Azure Blob storage. Queue and table data can be backed up by using the AzCopy command line tool.&lt;/p&gt; 
&lt;p&gt;For detailed information please see Reference URLs.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Configure operational backup for Azure Blobs" url="https://learn.microsoft.com/en-us/azure/backup/blob-backup-configure-manage"/>
            <reference name="Overview of operational backup for Azure Blobs" url="https://learn.microsoft.com/en-us/azure/backup/blob-backup-overview"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>	&lt;p&gt;Ensure you have configured operational backup for Azure Blob Storage.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:07.528">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-AZURE-STORAGE4" name="Configure private endpoints for Azure Storage" issueId="" issueLink="" platform="" cost="0" risk="61" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Configure private endpoints for Azure Storage&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; You can use private endpoints for your Azure Storage accounts to allow clients on a virtual network (VNet) to securely access data over a Private Link. The private endpoint uses a separate IP address from the VNet address space for each storage account service. Network traffic between the clients on the VNet and the storage account traverses over the VNet and a private link on the Microsoft backbone network, eliminating exposure from the public internet.&lt;/p&gt; 
&lt;p&gt;Note&lt;br&gt; Private endpoints are not available for general-purpose v1 storage accounts.&lt;/p&gt; 
&lt;p&gt;Using private endpoints for your storage account enables you to:&lt;br&gt; - Secure your storage account by configuring the storage firewall to block all connections on the public endpoint for the storage service.&lt;br&gt; - Increase security for the virtual network (VNet), by enabling you to block exfiltration of data from the VNet.&lt;br&gt; - Securely connect to storage accounts from on-premises networks that connect to the VNet using VPN or ExpressRoutes with private-peering.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Create storage account with a private endpoint&lt;/p&gt; 
&lt;p&gt;In this section, you'll create a storage account and configure the private endpoint.&lt;/p&gt; 
&lt;p&gt;1. In the left-hand menu, select Create a resource &amp;gt; Storage &amp;gt; Storage account, or search for Storage account in the search box.&lt;/p&gt; 
&lt;p&gt;2. In the Basics tab of Create storage account enter or select the following information:&lt;/p&gt; 
&lt;p&gt;Project Details &lt;br&gt; Subscription: Select your Azure subscription.&lt;br&gt; Resource Group: Select myResourceGroup.&lt;br&gt; Instance details &lt;br&gt; Storage account name: Enter mystorageaccount. If the name is unavailable, enter a unique name.&lt;br&gt; Location: Select (US) East US.&lt;br&gt; Performance: Leave the default Standard.&lt;br&gt; Redundancy: Select Locally-redundant storage (LRS).&lt;/p&gt; 
&lt;p&gt;3. Select the Networking tab or select the Next: Networking button.&lt;/p&gt; 
&lt;p&gt;4. In the Networking tab, under Network connectivity select Disable public access and use private access.&lt;/p&gt; 
&lt;p&gt;5. In Private endpoint, select + Add private endpoint.&lt;/p&gt; 
&lt;p&gt;6. In Create private endpoint enter or select the following information:&lt;/p&gt; 
&lt;p&gt;Subscription: Select your Azure subscription.&lt;br&gt; Resource Group: Select myResourceGroup.&lt;br&gt; Location: Select East US.&lt;br&gt; Name: Enter myPrivateEndpoint.&lt;br&gt; Storage sub-resource: Leave the default blob.&lt;br&gt; Networking&lt;br&gt; Virtual network: Select myVNet.&lt;br&gt; Subnet: Select mySubnet.&lt;br&gt; Private DNS integration&lt;br&gt; Integrate with private DNS zone: Leave the default Yes.&lt;br&gt; Private DNS Zone: Leave the default (New) privatelink.blob.core.windows.net.&lt;/p&gt; 
&lt;p&gt;7. Select OK.&lt;/p&gt; 
&lt;p&gt;8. Select Review + create.&lt;/p&gt; 
&lt;p&gt;9. Select Create.&lt;/p&gt; 
&lt;p&gt;10. Select Resource groups in the left-hand navigation pane.&lt;/p&gt; 
&lt;p&gt;11. Select myResourceGroup.&lt;/p&gt; 
&lt;p&gt;12. Select the storage account you created in the previous steps.&lt;/p&gt; 
&lt;p&gt;13. In the Security + networking section of the storage account, select Access keys.&lt;/p&gt; 
&lt;p&gt;14. Select Show keys, then select copy on the Connection string for key1.&lt;/p&gt; 
&lt;p&gt;For more information please see Reference URLs.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Tutorial: Connect to a storage account using an Azure Private Endpoint" url="https://learn.microsoft.com/en-us/azure/private-link/tutorial-private-endpoint-storage-portal"/>
            <reference name="Use private endpoints for Azure Storage" url="https://learn.microsoft.com/en-us/azure/storage/common/storage-private-endpoints"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>	&lt;p&gt;Test connectivity to private endpoint&lt;/p&gt;

	&lt;p&gt;In this section, you'll use the virtual machine described in Reference URLs to connect to the storage account across the private endpoint using Microsoft Azure Storage Explorer.&lt;/p&gt;

	&lt;p&gt;1. Select Resource groups in the left-hand navigation pane.&lt;/p&gt;

	&lt;p&gt;2. Select myResourceGroup.&lt;/p&gt;

	&lt;p&gt;3. Select myVM.&lt;/p&gt;

	&lt;p&gt;4. On the overview page for myVM, select Connect then Bastion.&lt;/p&gt;

	&lt;p&gt;5. Enter the username and password that you entered during the virtual machine creation.&lt;/p&gt;

	&lt;p&gt;6. Select Connect button.&lt;/p&gt;

	&lt;p&gt;7. Open Windows PowerShell on the server after you connect.&lt;/p&gt;

	&lt;p&gt;8. Enter nslookup &lt;storage-account-name&gt;.blob.core.windows.net. Replace &lt;storage-account-name&gt; with the name of the storage account you created in the previous steps. You'll receive a message similar to what is displayed below:&lt;/p&gt;

	&lt;p&gt;Server:  UnKnown&lt;br /&gt;
Address:  168.63.129.16&lt;/p&gt;

	&lt;p&gt;Non-authoritative answer:&lt;br /&gt;
Name:    mystorageaccount.privatelink.blob.core.windows.net&lt;br /&gt;
Address:  10.1.0.5&lt;br /&gt;
Aliases:  mystorageaccount.blob.core.windows.net&lt;br /&gt;
A private IP address of 10.1.0.5 is returned for the storage account name. This address is in mySubnet subnet of myVNet virtual network you created previously.&lt;/p&gt;

	&lt;p&gt;9. Install Microsoft Azure Storage Explorer on the virtual machine.&lt;/p&gt;

	&lt;p&gt;10. Select Finish after the Microsoft Azure Storage Explorer is installed. Leave the box checked to open the application.&lt;/p&gt;

	&lt;p&gt;11. In the Select Resource screen, select Storage account or service to add a connection in Microsoft Azure Storage Explorer to your storage account that you created in the previous steps.&lt;/p&gt;

	&lt;p&gt;12. In the Select Connection Method screen, select Connection string, and then Next.&lt;/p&gt;

	&lt;p&gt;13. In the box under Connection String, paste the connection string from the storage account you copied in the previous steps. The storage account name will automatically populate in the box under Display name.&lt;/p&gt;

	&lt;p&gt;14. Select Next.&lt;/p&gt;

	&lt;p&gt;15. Verify the settings are correct in Summary.&lt;/p&gt;

	&lt;p&gt;16. Select Connect, then select mystorageaccount from the Storage Accounts left-hand menu.&lt;/p&gt;

	&lt;p&gt;17. Under Blob Containers, you see mycontainer that you created in the previous steps.&lt;/p&gt;

	&lt;p&gt;18. Close the connection to myVM.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:07.528">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-IDS-IPS" name="Deploy network-based IDS/IPS" issueId="" issueLink="" platform="" cost="0" risk="61" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Deploy network-based intrusion detection/intrusion prevention systems (IDS/IPS)&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Select an offer from Azure Marketplace that supports IDS/IPS functionality with payload inspection capabilities. If intrusion detection and/or prevention based on payload inspection is not a requirement, Azure Firewall with Threat Intelligence can be used. Azure Firewall Threat intelligence-based filtering can alert and deny traffic to and from known malicious IP addresses and domains. The IP addresses and domains are sourced from the Microsoft Threat Intelligence feed.&lt;/p&gt; 
&lt;p&gt;Deploy the firewall solution of your choice at each of your organization's network boundaries to detect and/or deny malicious traffic.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Set up the network&lt;/p&gt; 
&lt;p&gt;First, create a resource group to contain the resources needed to deploy the firewall. Then create a VNet, subnets, and a test server.&lt;br&gt; For more information please see Reference URL.&lt;/p&gt; 
&lt;p&gt;Deploy the firewall&lt;/p&gt; 
&lt;p&gt;Deploy the firewall into the VNet.&lt;/p&gt; 
&lt;p&gt;1. On the Azure portal menu or from the Home page, select Create a resource.&lt;/p&gt; 
&lt;p&gt;2. Type firewall in the search box and press Enter.&lt;/p&gt; 
&lt;p&gt;3. Select Firewall and then select Create.&lt;/p&gt; 
&lt;p&gt;4. On the Create a Firewall page, use the following values to configure the firewall:&lt;/p&gt; 
&lt;p&gt;Subscription: &lt;br&gt; Resource group: Test-FW-RG&lt;br&gt; Name: Test-FW01&lt;br&gt; Location: Select the same location that you used previously&lt;br&gt; Choose a virtual network: Use existing: Test-FW-VN&lt;br&gt; Public IP address: Add new&lt;br&gt; Name: fw-pip&lt;/p&gt; 
&lt;p&gt;5. Select Review + create.&lt;/p&gt; 
&lt;p&gt;6. Review the summary, and then select Create to create the firewall.&lt;/p&gt; 
&lt;p&gt;This will take a few minutes to deploy.&lt;/p&gt; 
&lt;p&gt;7. After deployment completes, go to the Test-FW-RG resource group, and select the Test-FW01 firewall.&lt;/p&gt; 
&lt;p&gt;8. Note the firewall private and public IP addresses. You will use these addresses later.&lt;/p&gt; 
&lt;p&gt;Create a default route&lt;/p&gt; 
&lt;p&gt;For the Workload-SN subnet, configure the outbound default route to go through the firewall.&lt;/p&gt; 
&lt;p&gt;1. On the Azure portal menu, select All services or search for and select All services from any page.&lt;/p&gt; 
&lt;p&gt;2. Under Networking, select Route tables.&lt;/p&gt; 
&lt;p&gt;3. Select Add.&lt;/p&gt; 
&lt;p&gt;4. For Name, type Firewall-route.&lt;/p&gt; 
&lt;p&gt;5. For Subscription, select your subscription.&lt;/p&gt; 
&lt;p&gt;6. For Resource group, select Test-FW-RG.&lt;/p&gt; 
&lt;p&gt;7. For Location, select the same location that you used previously.&lt;/p&gt; 
&lt;p&gt;8. Select Create.&lt;/p&gt; 
&lt;p&gt;9. Select Refresh, and then select the Firewall-route route table.&lt;/p&gt; 
&lt;p&gt;10. Select Subnets and then select Associate.&lt;/p&gt; 
&lt;p&gt;11. Select Virtual network &amp;gt; Test-FW-VN.&lt;/p&gt; 
&lt;p&gt;12. For Subnet, select Workload-SN. Make sure that you select only the Workload-SN subnet for this route, otherwise your firewall will not work correctly.&lt;/p&gt; 
&lt;p&gt;13. Select OK.&lt;/p&gt; 
&lt;p&gt;14. Select Routes and then select Add.&lt;/p&gt; 
&lt;p&gt;15. For Route name, type fw-dg.&lt;/p&gt; 
&lt;p&gt;16. For Address prefix, type 0.0.0.0/0.&lt;/p&gt; 
&lt;p&gt;17. For Next hop type, select Virtual appliance.&lt;/p&gt; 
&lt;p&gt;Azure Firewall is actually a managed service, but virtual appliance works in this situation.&lt;/p&gt; 
&lt;p&gt;18. For Next hop address, type the private IP address for the firewall that you noted previously.&lt;/p&gt; 
&lt;p&gt;19. Select OK.&lt;/p&gt; 
&lt;p&gt;Configure an application rule&lt;/p&gt; 
&lt;p&gt;This is the application rule that allows outbound access to www.google.com.&lt;/p&gt; 
&lt;p&gt;1. Open the Test-FW-RG, and select the Test-FW01 firewall.&lt;br&gt; 2. On the Test-FW01 page, under Settings, select Rules.&lt;br&gt; 3. Select the Application rule collection tab.&lt;br&gt; 4. Select Add application rule collection.&lt;br&gt; 5. For Name, type App-Coll01.&lt;br&gt; 6. For Priority, type 200.&lt;br&gt; 7. For Action, select Allow.&lt;br&gt; 8. Under Rules, Target FQDNs, for Name, type Allow-Google.&lt;br&gt; 9. For Source type, select IP address.&lt;br&gt; 10. For Source, type 10.0.2.0/24.&lt;br&gt; 11. For Protocol:port, type http, https.&lt;br&gt; 12. For Target FQDNS, type www.google.com&lt;br&gt; 13. Select Add.&lt;/p&gt; 
&lt;p&gt;Azure Firewall includes a built-in rule collection for infrastructure FQDNs that are allowed by default. These FQDNs are specific for the platform and cannot be used for other purposes. For more information, see Infrastructure FQDNs.&lt;/p&gt; 
&lt;p&gt;Configure a network rule&lt;/p&gt; 
&lt;p&gt;This is the network rule that allows outbound access to two IP addresses at port 53 (DNS).&lt;/p&gt; 
&lt;p&gt;1. Select the Network rule collection tab.&lt;/p&gt; 
&lt;p&gt;2. Select Add network rule collection.&lt;/p&gt; 
&lt;p&gt;3. For Name, type Net-Coll01.&lt;/p&gt; 
&lt;p&gt;4. For Priority, type 200.&lt;/p&gt; 
&lt;p&gt;5. For Action, select Allow.&lt;/p&gt; 
&lt;p&gt;6. Under Rules, IP addresses, for Name, type Allow-DNS.&lt;/p&gt; 
&lt;p&gt;7. For Protocol, select UDP.&lt;/p&gt; 
&lt;p&gt;8. For Source type, select IP address.&lt;/p&gt; 
&lt;p&gt;9. For Source, type 10.0.2.0/24.&lt;/p&gt; 
&lt;p&gt;10. For Destination type select IP address.&lt;/p&gt; 
&lt;p&gt;11. For Destination address, type 209.244.0.3,209.244.0.4&lt;/p&gt; 
&lt;p&gt;These are public DNS servers operated by CenturyLink.&lt;/p&gt; 
&lt;p&gt;12. For Destination Ports, type 53.&lt;/p&gt; 
&lt;p&gt;13. Select Add.&lt;/p&gt; 
&lt;p&gt;Configure a DNAT rule&lt;/p&gt; 
&lt;p&gt;This rule allows you to connect a remote desktop to the Srv-Work virtual machine through the firewall.&lt;/p&gt; 
&lt;p&gt;1. Select the NAT rule collection tab.&lt;br&gt; 2. Select Add NAT rule collection.&lt;br&gt; 3. For Name, type rdp.&lt;br&gt; 4. For Priority, type 200.&lt;br&gt; 5. Under Rules, for Name, type rdp-nat.&lt;br&gt; 6. For Protocol, select TCP.&lt;br&gt; 7. For Source type, select IP address.&lt;br&gt; 8. For Source, type *.&lt;br&gt; 9. For Destination address, type the firewall public IP address.&lt;br&gt; 10. For Destination Ports, type 3389.&lt;br&gt; 11. For Translated address, type the Srv-work private IP address.&lt;br&gt; 12. For Translated port, type 3389.&lt;br&gt; 13. Select Add.&lt;/p&gt; 
&lt;p&gt;Change the primary and secondary DNS address for the Srv-Work network interface&lt;/p&gt; 
&lt;p&gt;For testing purposes in this tutorial, configure the server's primary and secondary DNS addresses. This is not a general Azure Firewall requirement.&lt;/p&gt; 
&lt;p&gt;1. On the Azure portal menu, select Resource groups or search for and select Resource groups from any page. Select the Test-FW-RG resource group.&lt;br&gt; 2. Select the network interface for the Srv-Work virtual machine.&lt;br&gt; 3. Under Settings, select DNS servers.&lt;br&gt; 4. Under DNS servers, select Custom.&lt;br&gt; 5. Type 209.244.0.3 in the Add DNS server text box, and 209.244.0.4 in the next text box.&lt;br&gt; 6. Select Save.&lt;br&gt; 7. Restart the Srv-Work virtual machine.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Tutorial: Deploy and configure Azure Firewall using the Azure portal" url="https://docs.microsoft.com/en-us/azure/firewall/tutorial-firewall-deploy-portal"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Test the firewall&lt;/p&gt;

  &lt;p&gt;Now, test the firewall to confirm that it works as expected.&lt;/p&gt;

  &lt;p&gt;1. Connect a remote desktop to firewall public IP address and sign in to the Srv-Work virtual machine.&lt;/p&gt;

  &lt;p&gt;2. Open Internet Explorer and browse to https://www.google.com.&lt;/p&gt;

  &lt;p&gt;3. Select OK &gt; Close on the Internet Explorer security alerts.&lt;/p&gt;

  &lt;p&gt;You should see the Google home page.&lt;/p&gt;

  &lt;p&gt;4. Browse to https://www.microsoft.com.&lt;/p&gt;

  &lt;p&gt;You should be blocked by the firewall.&lt;/p&gt;

  &lt;p&gt;So now you've verified that the firewall rules are working:&lt;/p&gt;

  &lt;p&gt;- You can browse to the one allowed FQDN, but not to any others.&lt;br /&gt;
- You can resolve DNS names using the configured external DNS server.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:07.527">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-AZURE-STORAGE1" name="Discover, classify, and label sensitive data for Azure Storage" issueId="" issueLink="" platform="" cost="0" risk="64" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Discover, classify, and label sensitive data for Azure Storage&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Establish and maintain an inventory of the sensitive data, based on the defined sensitive data scope. Use tools to discover, classify and label the in- scope sensitive data.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Use tools such as Microsoft Purview, Azure Information Protection and Azure SQL Data Discovery and Classification to centrally scan, classify and label the sensitive data resides in Azure Storage.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Connect to Azure Blob storage in Microsoft Purview" url="https://learn.microsoft.com/en-us/azure/purview/register-scan-azure-blob-storage-source"/>
            <reference name="Security Control v3: Data protection" url="https://learn.microsoft.com/en-us/security/benchmark/azure/security-controls-v3-data-protection#dp-1-discover-classify-and-label-sensitive-data"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>	&lt;p&gt;Ensure you are using a tool such as Microsoft Purview, Azure Information Protection and Azure SQL Data Discovery and Classification to centrally scan, classify and label the sensitive data that reside in Azure Storage.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:07.528">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-SECURITY-CENTER4" name="Enable Azure Defender" issueId="" issueLink="" platform="" cost="1" risk="62" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Enable Azure Defender&lt;/p&gt;

	&lt;p&gt;Rationale:&lt;br /&gt;
Azure Defender provides security alerts and advanced threat protection for virtual machines, SQL databases, containers, web applications, your network, and more.&lt;/p&gt;

	&lt;p&gt;When you enable Azure Defender from the Pricing and settings area of Azure Security Center, the following Defender plans are all enabled simultaneously and provide comprehensive defenses for the compute, data, and service layers of your environment:&lt;/p&gt;

	&lt;p&gt;- Azure Defender for servers&lt;br /&gt;
- Azure Defender for App Service&lt;br /&gt;
- Azure Defender for Storage&lt;br /&gt;
- Azure Defender for SQL&lt;br /&gt;
- Azure Defender for Kubernetes&lt;br /&gt;
- Azure Defender for container registries&lt;br /&gt;
- Azure Defender for Key Vault&lt;br /&gt;
- Azure Defender for Resource Manager&lt;br /&gt;
- Azure Defender for DNS&lt;/p&gt;

	&lt;p&gt;Each plan in Azure Defender is priced separately and can be individually set to on or off. For example, you might want to turn off Azure Defender for App Service on subscriptions that don't have an associated Azure App Service plan.&lt;/p&gt;

	&lt;p&gt;Remediation:&lt;br /&gt;
To enable Azure Defender on one subscription:&lt;/p&gt;

	&lt;p&gt;1. From Security Center's main menu, select Pricing &amp;amp; settings.&lt;br /&gt;
2. Select the subscription or workspace that you want to protect.&lt;br /&gt;
3. Select Azure Defender on to upgrade.&lt;br /&gt;
4. Select Save.&lt;/p&gt;

	&lt;p&gt;Tip: You'll notice that each plan in Azure Defender is priced separately and can be individually set to on or off. For example, you might want to turn off Azure Defender for App Service on subscriptions that don't have an associated Azure App Service plan.&lt;/p&gt;


	&lt;p&gt;To enable Azure Defender on multiple subscriptions or workspaces:&lt;/p&gt;

	&lt;p&gt;1. From Security Center's sidebar, select Getting started.&lt;/p&gt;

	&lt;p&gt;The Upgrade tab lists subscriptions and workspaces eligible for onboarding.&lt;/p&gt;

	&lt;p&gt;2. From the Select subscriptions and workspaces to enable Azure Defender on list, select the subscriptions and workspaces to upgrade and select Upgrade to enable Azure Defender.&lt;/p&gt;

	&lt;p&gt;- If you select subscriptions and workspaces that aren't eligible for trial, the next step will upgrade them and charges will begin.&lt;br /&gt;
- If you select a workspace that's eligible for a free trial, the next step will begin a trial.&lt;/p&gt;

	&lt;p&gt;Impact:&lt;br /&gt;
Turning on Azure Defender in Azure Security Center incurs an additional cost per resource.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Introduction to Azure Defender" url="https://docs.microsoft.com/en-us/azure/security-center/azure-defender"/>
            <reference name="Quickstart: Enable Azure Defender" url="https://docs.microsoft.com/en-us/azure/security-center/enable-azure-defender"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="2.1" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="2.2" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="2.3" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="2.4" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="2.5" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="2.6" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="2.7" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="2.8" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="DP-3" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="ES-1" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="IM-8" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;To ensure that Azure Defender is enabled from Azure portal&lt;/p&gt;

	&lt;p&gt;1. Go to Security Center&lt;br /&gt;
2. Select Pricing &amp;amp; settings blade&lt;br /&gt;
3. Click on the subscription name&lt;br /&gt;
4. Select the Azure Defender plans blade&lt;br /&gt;
5. Review the chosen pricing tier. For the desired resource type Plan should be set to On.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:07.528">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-NSG-FLOW-LOGS" name="Enable NSG flow logs" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Enable NSG flow logs&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; A network security group (NSG) enables you to filter inbound traffic to, and outbound traffic from, a virtual machine (VM). You can log network traffic that flows through an NSG with Network Watcher's NSG flow log capability.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Enable NSG flow log&lt;/p&gt; 
&lt;p&gt;1. NSG flow log data is written to an Azure Storage account. To create an Azure Storage account, select + Create a resource at the top, left corner of the portal.&lt;/p&gt; 
&lt;p&gt;2. Select Storage, then select Storage account - blob, file, table, queue.&lt;/p&gt; 
&lt;p&gt;3. Enter, or select the following information, accept the remaining defaults, and then select Create.&lt;/p&gt; 
&lt;p&gt;Name: 3-24 characters in length, can only contain lowercase letters and numbers, and must be unique across all Azure Storage accounts.&lt;br&gt; Location: Select East US&lt;br&gt; Resource group: Select Use existing, and then select myResourceGroup&lt;/p&gt; 
&lt;p&gt;The storage account may take around minute to create. Do not continue with remaining steps until the storage account is created. In all cases, the storage account must be in the same region as the NSG.&lt;/p&gt; 
&lt;p&gt;4. In the top, left corner of portal, select All services. In the Filter box, type Network Watcher. When Network Watcher appears in the search results, select it.&lt;/p&gt; 
&lt;p&gt;5. Under LOGS, select NSG flow logs.&lt;/p&gt; 
&lt;p&gt;6. From the list of NSGs, select the NSG named myVm-nsg.&lt;/p&gt; 
&lt;p&gt;7. Under Flow logs settings, select On.&lt;/p&gt; 
&lt;p&gt;8. Select the flow logging version. Version 2 contains flow-session statistics (Bytes and Packets)&lt;/p&gt; 
&lt;p&gt;9. Select the storage account that you created in step 3.&lt;/p&gt; 
&lt;p&gt;Note: NSG Flow Logs do not work with storage accounts that have hierarchical namespace enabled.&lt;/p&gt; 
&lt;p&gt;10. In the top, left corner of portal, select All services. In the Filter box, type Network Watcher. When Network Watcher appears in the search results, select it.&lt;/p&gt; 
&lt;p&gt;11. Set Retention (days) to 5, and then select Save.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Tutorial: Log network traffic to and from a virtual machine using the Azure portal" url="https://docs.microsoft.com/en-us/azure/network-watcher/network-watcher-nsg-flow-logging-portal"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that NSG flow logs are enabled.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:07.527">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-N09" name="Isolate Azure instances into different VNets" issueId="" issueLink="" platform="" cost="0" risk="61" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Specify a VNet for the Azure instance as a launch parameter. Applications that run on the Cloud instance can use the VNet security configuration when they access Azure resources.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  You can configure an Azure cloud service from Solution Explorer in Visual Studio. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Create a virtual network with multiple subnets" url="https://docs.microsoft.com/en-us/azure/virtual-network/virtual-networks-create-vnet-arm-pportal"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that the Azure instances are into different VNets.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:07.527">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-AZURE-STORAGE3" name="Restrict access with Azure Storage Firewall" issueId="" issueLink="" platform="" cost="0" risk="61" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Restrict access with Azure Storage Firewall&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; By default, storage accounts accept connections from clients on any network. Configure your storage account's firewall by restricting access to clients from specific public IP address ranges, select virtual networks, or specific Azure resources.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Change the default network access rule&lt;/p&gt; 
&lt;p&gt;1. Go to the storage account you want to secure.&lt;/p&gt; 
&lt;p&gt;2. Locate the Networking settings under Security + networking.&lt;/p&gt; 
&lt;p&gt;3. Choose which type of public network access you want to allow.&lt;/p&gt; 
&lt;p&gt;- To allow traffic from all networks, select Enabled from all networks.&lt;/p&gt; 
&lt;p&gt;- To allow traffic only from specific virtual networks, select Enabled from selected virtual networks and IP addresses.&lt;/p&gt; 
&lt;p&gt;- To block traffic from all networks, select Disabled.&lt;/p&gt; 
&lt;p&gt;4. Select Save to apply your changes.&lt;/p&gt; 
&lt;p&gt;Caution&lt;br&gt; By design, access to a storage account from trusted services takes the highest precedence over other network access restrictions. For this reason, if you set Public network access to Disabled after previously setting it to Enabled from selected virtual networks and IP addresses, any resource instances and exceptions you had previously configured, including Allow Azure services on the trusted services list to access this storage account, will remain in effect. As a result, those resources and services may still have access to the storage account after setting Public network access to Disabled.&lt;/p&gt; 
&lt;p&gt;For more information please see Reference URL.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; Changing this setting can impact your application's ability to connect to Azure Storage. Make sure to grant access to any allowed networks or set up access through a private endpoint before you change this setting.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Change the default network access rule" url="https://learn.microsoft.com/en-us/azure/storage/common/storage-network-security?tabs=azure-portal#change-the-default-network-access-rule"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>	&lt;p&gt;Ensure access is restricted with Azure Storage Firewall.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:07.528">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-MANAGED-ID" name="Use Managed Identities" issueId="" issueLink="" platform="" cost="0" risk="64" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Use Managed Identities&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Use Managed Identities to provide Azure services with an automatically managed identity in Azure AD. Managed Identities allows you to authenticate to any service that supports Azure AD authentication to Azure Resource Manager and can be used with API/Azure Portal/CLI/PowerShell.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Enable system-assigned managed identity during creation of a VM&lt;/p&gt; 
&lt;p&gt;To enable system-assigned managed identity on a VM during its creation, your account needs the Virtual Machine Contributor role assignment. No additional Azure AD directory role assignments are required.&lt;/p&gt; 
&lt;p&gt;- Under the Management tab in the Identity section, switch Managed service identity to On.&lt;/p&gt; 
&lt;p&gt;Enable system-assigned managed identity on an existing VM&lt;/p&gt; 
&lt;p&gt;To enable system-assigned managed identity on a VM that was originally provisioned without it, your account needs the Virtual Machine Contributor role assignment. No additional Azure AD directory role assignments are required.&lt;/p&gt; 
&lt;p&gt;1. Sign in to the Azure portal using an account associated with the Azure subscription that contains the VM.&lt;/p&gt; 
&lt;p&gt;2. Navigate to the desired Virtual Machine and select Identity.&lt;/p&gt; 
&lt;p&gt;3. Under System assigned, Status, select On and then click Save:&lt;/p&gt; 
&lt;p&gt;Assign a user-assigned managed identity to an existing VM&lt;/p&gt; 
&lt;p&gt;To assign a user-assigned identity to a VM, your account needs the Virtual Machine Contributor and Managed Identity Operator role assignments. No additional Azure AD directory role assignments are required.&lt;/p&gt; 
&lt;p&gt;1. Sign in to the Azure portal using an account associated with the Azure subscription that contains the VM.&lt;/p&gt; 
&lt;p&gt;2. Navigate to the desired VM and click Identity, User assigned and then +Add.&lt;/p&gt; 
&lt;p&gt;3. Click the user-assigned identity you want to add to the VM and then click Add.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Configure managed identities for Azure resources on a VM using the Azure portal" url="https://docs.microsoft.com/en-us/azure/active-directory/managed-identities-azure-resources/qs-configure-portal-windows-vm"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that you manage identities securely and automatically.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:07.527">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="AUTHORIZATION" name="Authorization" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="LOSS-CONTROL_ENV" name="Attackers gain unauthorized access to the control of the environment" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;Attackers could potentially gain unauthorized access to the control of the environment, due to user accounts - or role groups - not being well defined and configured. As a consequence attackers may be able to make changes without root approval.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="75" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-ACCESS-01">
                  <countermeasures>
                    <countermeasure ref="AZURE-MANAGED-ID" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZURE-MANAGED-ID" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Records" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="GENERAL" name="General" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="UNCONFIGURED-SECURITY" name="Attackers gain access to the system by exploiting weak security configurations" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>Weak security configurations like using sharing passwords in plain text, using weak passwords, using obsolete encryption algorithms, etc. can lead attackers to gain access to the system.</desc>
              <riskRating confidentiality="75" integrity="50" availability="25" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-16">
                  <countermeasures>
                    <countermeasure ref="AZ-S03" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-S03" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="AZURE-DATA-DELETED-EASY" name="Data is intentionally or accidentally deleted" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;Data can be deleted intentionally or accidentally and cannot be recovered. Attackers could rely on the lack of backup and recovery mechanisms.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-MONITOR-BACKUPS">
                  <countermeasures>
                    <countermeasure ref="C-AZURE-STORAGE2" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-AZURE-STORAGE2" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Records" value=""/>
              </customFields>
            </threat>
            <threat ref="ACCESS-TO-DATA" name="Sensitive data is compromised through unauthorized access to data storage" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;A data breach is a security violation in which sensitive, protected or confidential data is copied, transmitted, viewed, stolen or used by an individual unauthorized to do so. Sensitive data could be exposed due to a bad configuration in user permissions.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-ACCESS-DATA-01">
                  <countermeasures>
                    <countermeasure ref="C-AZURE-STORAGE1" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-AZURE-STORAGE1" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Records" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="LOGGING AND MONITORING" name="Logging and Monitoring" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="OWASP-A10-2017" name="Exploitation of insufficient logging and monitoring" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>	&lt;p&gt;Exploitation of insufficient logging and monitoring is the bedrock of nearly every major incident. Attackers rely on the lack of monitoring and timely response to achieve their goals without being detected.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="AZURE-NSG-FLOW-LOGS" mitigation="50"/>
                    <countermeasure ref="AZURE-SECURITY-CENTER4" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZURE-NSG-FLOW-LOGS" mitigation="50"/>
                <countermeasure ref="AZURE-SECURITY-CENTER4" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="Records" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="NETWORKING" name="Networking" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="AZURE-UNAUTHORISED-CONNECTION" name="Attackers perform unauthorized network access" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;Attackers could perform unauthorized network access to the resources through misconfigured ports or security network configurations.&lt;/p&gt;</desc>
              <riskRating confidentiality="25" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-NET-01">
                  <countermeasures>
                    <countermeasure ref="AZURE-IDS-IPS" mitigation="25"/>
                    <countermeasure ref="C-AZURE-STORAGE3" mitigation="25"/>
                    <countermeasure ref="C-AZURE-STORAGE4" mitigation="25"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AZURE-VNET01">
                  <countermeasures>
                    <countermeasure ref="AZ-N09" mitigation="25"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-N09" mitigation="25"/>
                <countermeasure ref="AZURE-IDS-IPS" mitigation="25"/>
                <countermeasure ref="C-AZURE-STORAGE3" mitigation="25"/>
                <countermeasure ref="C-AZURE-STORAGE4" mitigation="25"/>
              </countermeasures>
              <customFields>
                <customField ref="Records" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="3501b3e9-fad0-4177-8ee6-ea333c18cd75" diagramComponentId="f6904f29-7af6-4875-9bfa-634e715e66c2" ref="17c5c8ec-91cd-48fa-9b4b-79c3e3071c3c" name="Azure Web Apps" desc="" library="Microsoft-Azure" parentComponentRef="02d8d342-3126-442a-96cc-a584e575cdac" componentDefinitionRef="microsoft-azure-web-apps">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses>
        <weakness ref="CWE-16" name="Configuration" state="0" impact="100" issueId="" issueLink="">
          <desc>Weaknesses in this category are typically introduced during the
                        configuration of the software.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:04.054">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-UNSECURE-CREDENTIALS" name="Credentials are not securely stored" state="0" impact="100" issueId="" issueLink="">
          <desc>The credentials used to access the resources are not securely stored and can be accessed by unauthorized personnel.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:04.054">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="DATA-TRANSMIT-CLEAR" name="Data is transmitted in clear text" state="0" impact="100" issueId="" issueLink="">
          <desc>Data is not protected when transmitted to applications or customers and it can be read or modified by unauthorized actors.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:04.054">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-MON02" name="Excessive use of administrator accounts" state="0" impact="100" issueId="" issueLink="">
          <desc>The administrator accounts are used for all actions, not only for administrative actions. This
                        is because these users have not got a personal or a user account to do the daily actions.&amp;nbsp;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that there is any rule to notify when there is a bad usage of the root
                            account.&lt;/li&gt;
                            &lt;li&gt;Check if these rules are enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:04.054">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CWE-778" name="Insufficient Logging" state="0" impact="100" issueId="" issueLink="">
          <desc>When a critical security event occurs, the software either does not record the event or omits important details about the event when logging it. When critical security events are not logged properly, such as in the case of a failed login attempt, this can make malicious behavior more difficult to detect and may hinder forensic analyses after a successful attack.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:04.053">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-MON03" name="Lack of 2FA" state="0" impact="100" issueId="" issueLink="">
          <desc>Logging into the console without using Multi-factor Authentication (MFA) and without being detected. The connection without MFA must be audited and monitored, the correct security group must be informed and the connection must be validated.&amp;nbsp;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that there is any rule to notify when someone tries to login into the
                            console without MFA.&lt;/li&gt;
                            &lt;li&gt;Check if these rules are enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:04.053">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZ-W04" name="Misconfigured Authentication Method for Administrator Accounts" state="0" impact="100" issueId="" issueLink="">
          <desc>The authentication method &amp;quot;Multi-factor Authentication&amp;quot; for the Administrator accounts is not configured.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;Multi-Factor Authentication&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check all Administrator accounts have got the MFA flag enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:04.053">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-IDENTITY-03" name="Misconfigured User Account" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        Key security settings such as resetting the password and other password controls are not
                        configured.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log in to the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each user has got an assigned account.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;Password reset&amp;quot; &amp;gt; &amp;quot;Authentication Method&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that the security confirmation measures and the security criteria are well
                            filled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:04.053">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-ACCESS-01" name="Misconfigured credentials for groups and roles" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        The credentials for groups and roles are not correctly configured and there are user accounts with more privileges than necessary.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each user has got assigned the correct groups.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All groups&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each group has got assigned the correct roles to achieve principle of
                            least privilege.&lt;/li&gt;
                            &lt;li&gt;Check that the roles for the Cloud Service are well assigned.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;div&gt;
                            &lt;/div&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:04.053">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-EXPIRATION-DATE" name="Misconfigured password expiration" state="0" impact="100" issueId="" issueLink="">
          <desc>The password expiration is not configured and users are not obliged to change their passwords.
                        Not change frequently the passwords gives facilities to attackers to obtain them.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            Check that the password expiration has got the correct values. Therefore, we can obtain the
                            values using the Get-MsolPasswordPolicy cmdlet from the Azure Active Directory Module for
                            Windows PowerShell. With the following command:
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;br /&gt;
                            &lt;/div&gt;
                            &lt;blockquote&gt;
                            &lt;div&gt;
                            PS C:\&amp;gt; Get-MsolPasswordPolicy -DomainName contoso.com
                            &lt;/div&gt;
                            &lt;/blockquote&gt;
                            &lt;div&gt;
                            &lt;br /&gt;
                            &lt;/div&gt;
                            &lt;div&gt;
                            More information: Doc MS Azure
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:04.053">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-VNET01" name="Networks for Azure resources are not properly segmented. Without proper segmentation, when attackers gain access to one resource, any other resources in the same VNet are compromised" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        Resources in the same VNet are compromised because when one of them is attacked and the
                        attackers gain access, they also gain access to all resources.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            Identify the resources and the Microsoft Azure instances.
                            &lt;/div&gt;
                            &lt;div&gt;
                            Check that the resources are in the correct VNet.
                            &lt;/div&gt;
                            &lt;div&gt;
                            Check that the Microsoft Azure instances&amp;nbsp;are into different VNets.
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:04.053">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-NET-01" name="Unauthorized connection attempts on open ports" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        Receiving unauthorized connections to open ports makes systems vulnerable to attacks. To
                        avoid this, access to the network must be as restricted as possible, so that only the necessary
                        ports are open and the minimum inbound traffic is accepted.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Check that each Azure resources have got their Network Security Groups.&lt;/li&gt;
                            &lt;li&gt;Check that a set of these groups achieve with the principle of the least
                            privilege.&lt;/li&gt;
                            &lt;li&gt;Check that the inbound/outbound security rules are enabled and correctly
                            configured.&lt;/li&gt;
                            &lt;li&gt;In &amp;quot;Inbound security rules&amp;quot;, check that all the traffic from
                            0.0.0.0/0&amp;nbsp;is blocked.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:04.052">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="AZ-A09" name="Apply RBAC with pre-defined policies added into groups or roles" issueId="" issueLink="" platform="" cost="0" risk="64" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Define and create groups that relate to job functions (administrators, developers, accounting,
                        etc.) and assign the relevant permissions for each group, and then assign IAM users to those
                        groups.&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &amp;nbsp;&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        All the users in an IAM group inherit the permissions assigned to the group. That way, you can
                        make changes for everyone in a group in just one place. As people move around in your company,
                        you can simply change what IAM group their IAM user belongs to. This method is known as Role
                        Based Access Control (RBAC).&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Remove a user from a group:&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;ol&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                        &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                        &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Click on the user name. All the groups the user belongs are there.&lt;/li&gt;
                        &lt;li&gt;Choose the group and &amp;quot;Remove&amp;quot;.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/ol&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Create a group and add user:&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;ol&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                        &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                        &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All groups&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Click &amp;quot;New Group&amp;quot; and fill the information.&lt;/li&gt;
                        &lt;li&gt;Search and add the user.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Create a group and add members in Azure Active Directory" url="https://docs.microsoft.com/en-us/azure/active-directory/active-directory-groups-create-azure-portal"/>
            <reference name="MS Azure - Use Role-Based Access Control to manage access to your Azure subscription resources" url="https://docs.microsoft.com/en-us/azure/active-directory/role-based-access-control-configure"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each user has got assigned the correct groups.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All groups&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each group has got assigned the correct roles.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:03.708">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-WEBAPPS1" name="Configure App Service settings for each app" issueId="" issueLink="" platform="" cost="0" risk="59" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;There are some options that must be configured properly to secure Azure PostgreSQL databases.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Checklist:&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Ensure App Service Authentication is set on Azure App Service&lt;/li&gt;&lt;li&gt;Ensure web app redirects all HTTP traffic to HTTPS in Azure App Service&lt;/li&gt;&lt;li&gt;Ensure web app is using the latest version of TLS encryption&lt;/li&gt;&lt;li&gt;Ensure the web app has 'Client Certificates (Incoming client certificates)&lt;/li&gt;&lt;li&gt;Ensure that Register with Azure Active Directory is enabled on App Service&lt;/li&gt;&lt;li&gt;Ensure that 'PHP version' is the latest, if used to run the web app&lt;/li&gt;&lt;li&gt;Ensure that 'Python version' is the latest, if used to run the web app&lt;/li&gt;&lt;li&gt;Ensure that 'Java version' is the latest, if used to run the web app&lt;/li&gt;&lt;li&gt;Ensure that 'HTTP Version' is the latest, if used to run the web app&lt;/li&gt;&lt;li&gt;Ensure FTP deployments are disabled&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Remediation:&lt;/p&gt;&lt;p&gt;&lt;strong&gt;From Azure Console&lt;/strong&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Login to Azure Portal using https://portal.azure.com&lt;/li&gt;&lt;li&gt;Go to App Services&lt;/li&gt;&lt;li&gt;Click on each App&lt;/li&gt;&lt;li&gt;Under Setting section, Click on Authentication / Authorization&lt;ol&gt;&lt;li&gt;Set App Service Authentication to On&lt;/li&gt;&lt;li&gt;Choose other parameters as per your requirement and Click on Save&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;Under Setting section, Click on SSL settings&lt;ol&gt;&lt;li&gt;Set HTTPS Only to On under Protocol Settings section&lt;/li&gt;&lt;li&gt;Set Minimum TLS Version to 1.2 under Protocol Settings section&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;Under Setting section, Click on Configuration&lt;ol&gt;&lt;li&gt;Set the option Client certificate mode located under Incoming client certificates is set to Require&lt;/li&gt;&lt;li&gt;Set PHP version to latest version available under General settings&lt;/li&gt;&lt;li&gt;Set HTTP version to 2.0 under General settings&lt;/li&gt;&lt;li&gt;Under Platform Settings, FTP state should be Disabled or FTPS Only&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;Under Setting section, Click on Identity&lt;ol&gt;&lt;li&gt;Set Status to On&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;Under Setting section, Click on Application settings&lt;ol&gt;&lt;li&gt;Set Python version to latest version available under General settings&lt;/li&gt;&lt;li&gt;Under General settings, Set Java version to latest version available&lt;/li&gt;&lt;li&gt;Set Java minor version to latest version available&lt;/li&gt;&lt;li&gt;Set Java web container to the latest version of web container available&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;Alternatively, some of these can be done with Azure CLI.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Using Azure Command Line Interface&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;To set App Service Authentication for an existing app, run the following command:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;az webapp auth update --resource-group &amp;lt;RESOURCE_GROUP_NAME&amp;gt; --name &amp;lt;APP_NAME&amp;gt; --enabled true&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;To set HTTPS-only traffic value for an existing app, run the following command:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;az webapp update --resource-group &amp;lt;RESOURCE_GROUP_NAME&amp;gt; --name &amp;lt;APP_NAME&amp;gt; --set httpsOnly=true&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;To set TLS Version for an existing app, run the following command:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;az webapp config set --resource-group &amp;lt;RESOURCE_GROUP_NAME&amp;gt; --name &amp;lt;APP_NAME&amp;gt; --min-tls-version 1.2&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;To set Incoming client certificates value for an existing app, run the following command:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;az webapp update --resource-group &amp;lt;RESOURCE_GROUP_NAME&amp;gt; --name &amp;lt;APP_NAME&amp;gt; --set clientCertEnabled=true&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;To set Register with Azure Active Directory feature for an existing app, run the following command:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;az webapp identity assign --resource-group &amp;lt;RESOURCE_GROUP_NAME&amp;gt; --name &amp;lt;APP_NAME&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;To see the list of supported runtimes:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;az webapp list-runtimes | grep php&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;To set latest PHP version for an existing app, run the following command:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;az webapp config set --resource-group &amp;lt;RESOURCE_GROUP_NAME&amp;gt; --name &amp;lt;APP_NAME&amp;gt; --php-version &amp;lt;VERSION&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;To see the list of supported runtimes:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;az webapp list-runtimes | grep python&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;To set latest Python version for an existing app, run the following command:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;az webapp config set --resource-group &amp;lt;RESOURCE_GROUP_NAME&amp;gt; --name &amp;lt;APP_NAME&amp;gt; --python-version &amp;lt;VERSION&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;To see the list of supported runtimes:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;az webapp list-runtimes | grep java&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;To set latest Java version for an existing app, run the following command:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;az webapp config set --resource-group &amp;lt;RESOURCE_GROUP_NAME&amp;gt; --name &amp;lt;APP_NAME&amp;gt; --java-version '1.8' --java-container 'Tomcat' --java-container-version '&amp;lt;VERSION&amp;gt;'&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;To set HTTP 2.0 version for an existing app, run the following command:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;az webapp config set --resource-group &amp;lt;RESOURCE_GROUP_NAME&amp;gt; --name &amp;lt;APP_NAME&amp;gt; --http20-enabled true&lt;/p&gt;&lt;/blockquote&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="14" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="16" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="8" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="9" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="9.1" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="9.10" supportedStandardRef="cis-azure-standard"/>
            <standard ref="9.10" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="9.2" supportedStandardRef="cis-azure-standard"/>
            <standard ref="9.2" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="9.3" supportedStandardRef="cis-azure-standard"/>
            <standard ref="9.3" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="9.4" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="9.5" supportedStandardRef="cis-azure-standard"/>
            <standard ref="9.5" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="9.6" supportedStandardRef="cis-azure-standard"/>
            <standard ref="9.6" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="9.7" supportedStandardRef="cis-azure-standard"/>
            <standard ref="9.7" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="9.8" supportedStandardRef="cis-azure-standard"/>
            <standard ref="9.8" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="9.9" supportedStandardRef="cis-azure-standard"/>
            <standard ref="9.9" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="API7:2019-Security Misconfiguration" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="DP-4" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="GS-6" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="IM-1" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="NS-1" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="PA-5" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="PV-3" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="PV-7" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Follow the paths detailed in the description and ensure that the values are the ones indicated.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:03.709">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-A12" name="Configure password expiration" issueId="" issueLink="" platform="" cost="0" risk="64" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        &lt;div&gt;
                        Configure the password expiration to force after a determinate time, the password code shall be
                        changed for the users.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Configure password management to match security criteria. This value is configurable
                        using the Set-MsolPasswordPolicy cmdlet from the Azure Active Directory Module for Windows
                        PowerShell. With the following command as the example:&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        &lt;div&gt;
                        Set-MsolPasswordPolicy -ValidityPeriod 60 -NotificationDays 14&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;This command updates the tenant so that all users passwords expire after 60
                        days. The users receive notification 14 days prior to that expiry.
                        &lt;/blockquote&gt;
                        &lt;div&gt;
                        &lt;div&gt;
                        More information:&amp;nbsp;
                        &lt;a
                        href="https://docs.microsoft.com/en-us/powershell/module/msonline/set-msolpasswordpolicy?view=azureadps-1.0"&gt;Doc
                        MS Azure&lt;/a&gt;
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;ul&gt;
                        &lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Password policies and restrictions in Azure Active Directory" url="https://docs.microsoft.com/en-us/azure/active-directory/active-directory-passwords-policy"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            Check that the password expiration has got the correct values. Therefore, we can obtain the
                            values using the Get-MsolPasswordPolicy cmdlet from the Azure Active Directory Module for
                            Windows PowerShell. With the following command:
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;br /&gt;
                            &lt;/div&gt;
                            &lt;blockquote&gt;
                            &lt;div&gt;
                            PS C:\&amp;gt; Get-MsolPasswordPolicy -DomainName contoso.com
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;br /&gt;
                            &lt;/div&gt;
                            &lt;/blockquote&gt;More information:
                            &lt;a
                            href="https://docs.microsoft.com/en-us/powershell/module/msonline/get-msolpasswordpolicy?view=azureadps-1.0"&gt;Doc
                            MS Azure&lt;/a&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:03.709">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-A11" name="Configure roles for the Cloud Service" issueId="" issueLink="" platform="" cost="0" risk="64" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Define and create the roles for the Azure Cloud Service. For each role, define the permissions and also configure how that role runs. When you launch an Azure instance, you shall specify a role for the instance as a launch parameter. Applications that run on the Cloud instance use the role's credentials when they access Azure resources. This role's permissions determine what the application is allowed to do.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Configure an Azure cloud service from Solution Explorer in Visual Studio.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Use Role-Based Access Control to manage access to your Azure subscription resources" url="https://docs.microsoft.com/en-us/azure/active-directory/role-based-access-control-configure"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that the roles for the Cloud Service are well assigned.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:03.709">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-A03" name="Create Individual Accounts for the administrator users" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Create an individual account for the administrator users and with this new accounts By creating individual Azure users for people accessing your account, you can give each Azure user a unique set of security credentials.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The administrator accounts shall be used for the administrative actions and for giving or revoke credentials to the user's account. The administrator account shall be not used as a normal user account. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt; 
  &lt;li&gt;Select Azure Active Directory.&lt;/li&gt; 
  &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt; 
  &lt;li&gt;Select &amp;quot;Add New User&amp;quot;.&lt;/li&gt; 
  &lt;li&gt;Fill the required information and click &amp;quot;Create&amp;quot;.&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt; 
&lt;div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Add new users to Azure Active Directory" url="https://docs.microsoft.com/en-us/azure/active-directory/add-users-azure-active-directory"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each user has got a user account assigned.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:03.709">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-A10" name="Create mechanisms to ensure the principle of least privilege is applied" issueId="" issueLink="" platform="" cost="0" risk="64" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Create the mechanisms to review periodically the group and user permissions to ensure the least privilege for the user accounts. Granting least privilege ensures that users only have the permissions required to complete their jobs rather than additional privileges that are not required. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Following this model ensures that, should an account be compromised, the blast radius of damage is limited&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Allocate privileges via groups or roles via the recommendation in "Use RBAC with pre-defined policies added into groups or roles".&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt; 
&lt;div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Create a group and add members in Azure Active Directory" url="https://docs.microsoft.com/en-us/azure/active-directory/active-directory-groups-create-azure-portal"/>
            <reference name="MS Azure - Use Role-Based Access Control to manage access to your Azure subscription resources" url="https://docs.microsoft.com/en-us/azure/active-directory/role-based-access-control-configure"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that the principle of least privilege is achieved in the assignation of roles and
                            groups to the users.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:03.709">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-WAF-GW" name="Deploy a WAF with Azure Application Gateway" issueId="" issueLink="" platform="" cost="0" risk="61" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Deploy a Web Application Firewall (WAF) with Azure Application Gateway in front of an Internet facing app 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  Azure Web Application Firewall (WAF) on Azure Application Gateway provides centralized protection of your web applications from common exploits and vulnerabilities. Web applications are increasingly targeted by malicious attacks that exploit commonly known vulnerabilities. SQL injection and cross-site scripting are among the most common attacks. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  To enable a Web Application Firewall on Application Gateway, you must create a WAF policy. This policy is where all of the managed rules, custom rules, exclusions, and other customizations such as file upload limit exist. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  You can configure a WAF policy and associate that policy to one or more application gateways for protection. A WAF policy consists of two types of security rules: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - Custom rules that you create 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - Managed rule sets that are a collection of Azure-managed pre-configured set of rules 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  When both are present, custom rules are processed before processing the rules in a managed rule set. A rule is made of a match condition, a priority, and an action. Action types supported are: ALLOW, BLOCK, and LOG. You can create a fully customized policy that meets your specific application protection requirements by combining managed and custom rules. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rules within a policy are processed in a priority order. Priority is a unique integer that defines the order of rules to process. Smaller integer value denotes a higher priority and those rules are evaluated before rules with a higher integer value. Once a rule is matched, the corresponding action that was defined in the rule is applied to the request. Once such a match is processed, rules with lower priorities aren't processed further. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  A web application delivered by Application Gateway can have a WAF policy associated to it at the global level, at a per-site level, or at a per-URI level. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Create a policy 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  First, create a basic WAF policy with a managed Default Rule Set (DRS) using the Azure portal. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  1. On the upper left side of the portal, select Create a resource. Search for WAF, select Web Application Firewall, then select Create. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  2. On Create a WAF policy page, Basics tab, enter or select the following information, accept the defaults for the remaining settings, and then select Review + create: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Setting&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Value 
&lt;/div&gt; 
&lt;div&gt;
  Policy for&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Regional WAF (Application Gateway) 
&lt;/div&gt; 
&lt;div&gt;
  Subscription&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Select your subscription name 
&lt;/div&gt; 
&lt;div&gt;
  Resource group&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Select your resource group 
&lt;/div&gt; 
&lt;div&gt;
  Policy name&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Type a unique name for your WAF policy. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  3. On the Association tab, enter one of the following settings, then select Add: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Setting&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Value 
&lt;/div&gt; 
&lt;div&gt;
  Associate Application Gateway&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Select your Application Gateway profile name. 
&lt;/div&gt; 
&lt;div&gt;
  Associate Listeners&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Select the name of your Application Gateway Listener, then select Add. 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt;
  Note 
&lt;/div&gt; 
&lt;div&gt;
  If you assign a policy to your Application Gateway (or listener) that already has a policy in place, the original policy is overwritten and replaced by the new policy. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  4. Select Review + create, then select Create. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Tutorial: Create an application gateway with a Web Application Firewall using the Azure portal" url="https://docs.microsoft.com/en-us/azure/web-application-firewall/ag/application-gateway-web-application-firewall-portal"/>
            <reference name="What is Azure Web Application Firewall on Azure Application Gateway?" url="https://docs.microsoft.com/en-us/azure/web-application-firewall/ag/ag-overview"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Test the application gateway 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Although IIS isn't required to create the application gateway, you installed it to verify whether Azure successfully created the application gateway. Use IIS to test the application gateway: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  1. Find the public IP address for the application gateway on its Overview page. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Or, you can select All resources, enter myAGPublicIPAddress in the search box, and then select it in the search results. Azure displays the public IP address on the Overview page. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  2. Copy the public IP address, and then paste it into the address bar of your browser. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  3. Check the response. A valid response verifies that the application gateway was successfully created and it can successfully connect with the backend. 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:03.709">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-APP-SERVICE1" name="Disable anonymous access" issueId="" issueLink="" platform="" cost="0" risk="64" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Disable anonymous access 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  Unless you need to support anonymous requests, disable anonymous access. Whenever possible, use the App Service authentication module instead of writing code to handle authentication and authorization 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  In the Azure portal, you can configure App Service authorization with a number of behaviors when incoming request is not authenticated. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Allow only authenticated requests 
&lt;/div&gt; 
&lt;div&gt;
  The option is Log in with &amp;lt;provider&amp;gt;. App Service redirects all anonymous requests to /.auth/login/&amp;lt;provider&amp;gt; for the provider you choose. If the anonymous request comes from a native mobile app, the returned response is an HTTP 401 Unauthorized. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  With this option, you don't need to write any authentication code in your app. Finer authorization, such as role-specific authorization, can be handled by inspecting the user's claims. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  Restricting access in this way applies to all calls to your app, which may not be desirable for apps wanting a publicly available home page, as in many single-page applications. 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Authentication and authorization in Azure App Service and Azure Functions" url="https://docs.microsoft.com/en-us/azure/app-service/overview-authentication-authorization"/>
            <reference name="Security recommendations for App Service" url="https://docs.microsoft.com/en-us/azure/app-service/security-recommendations"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>In the Azure portal, ensure that anonymous access is disabled.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:03.709">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-ENABLE-ALERTS" name="Enable alerts for anomalous activities" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Enable alerts for anomalous activities 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  Azure Security Center generates detailed security alerts and recommendations. You can view them in the portal or through programmatic tools. You may also need to export some or all of this information for tracking with other monitoring tools in your environment. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Continuous export lets you fully customize what will be exported, and where it will go. For example, you can configure it so that: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  All high severity alerts are sent to an Azure Event Hub 
&lt;/div&gt; 
&lt;div&gt;
  All medium or higher severity findings from vulnerability assessment scans of your SQL servers are sent to a specific Log Analytics workspace 
&lt;/div&gt; 
&lt;div&gt;
  Specific recommendations are delivered to an Event Hub or Log Analytics workspace whenever they're generated 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  Set up a continuous export 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  You can configure continuous export from the Security Center pages in Azure portal, via the Security Center REST API, or at scale using the supplied Azure Policy templates. Select the appropriate tab below for details of each. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Configure continuous export from the Security Center pages in Azure portal 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The steps below are necessary whether you're setting up a continuous export to Log Analytics workspace or Azure Event Hubs. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  1. From Security Center's sidebar, select Pricing &amp;amp; settings. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  2. Select the specific subscription for which you want to configure the data export. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  3. From the sidebar of the settings page for that subscription, select Continuous Export. 
&lt;/div&gt; 
&lt;div&gt;
  Here you see the export options. There's a tab for each available export target. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  4. Select the data type you'd like to export and choose from the filters on each type (for example, export only high severity alerts). 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  5. Optionally, if your selection includes one of these four recommendations, you can include the vulnerability assessment findings together with them: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - Vulnerability Assessment findings on your SQL databases should be remediated 
&lt;/div&gt; 
&lt;div&gt;
  - Vulnerability Assessment findings on your SQL servers on machines should be remediated (Preview) 
&lt;/div&gt; 
&lt;div&gt;
  - Vulnerabilities in Azure Container Registry images should be remediated (powered by Qualys) 
&lt;/div&gt; 
&lt;div&gt;
  - Vulnerabilities in your virtual machines should be remediated 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  To include the findings with these recommendations, enable the include security findings option. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  6. From the "Export target" area, choose where you'd like the data saved. Data can be saved in a target on a different subscription (for example on a Central Event Hub instance or a central Log Analytics workspace). 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  7. Select Save. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Continuously export Security Center data" url="https://docs.microsoft.com/en-us/azure/security-center/continuous-export?tabs=azure-portal"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  View exported alerts and recommendations in Azure Monitor 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  In some cases, you may choose to view the exported Security Alerts and/or recommendations in Azure Monitor. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Azure Monitor provides a unified alerting experience for a variety of Azure alerts including Diagnostic Log, Metric alerts, and custom alerts based on Log Analytics workspace queries. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  To view alerts and recommendations from Security Center in Azure Monitor, configure an Alert rule based on Log Analytics queries (Log Alert): 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  1. From Azure Monitor's Alerts page, select New alert rule. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  2. In the create rule page, configure your new rule (in the same way you'd configure a log alert rule in Azure Monitor): 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - For Resource, select the Log Analytics workspace to which you exported security alerts and recommendations. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - For Condition, select Custom log search. In the page that appears, configure the query, look-back period, and frequency period. In the search query, you can type SecurityAlert or SecurityRecommendation to query the data types that Security Center continuously exports to as you enable the Continuous export to Log Analytics feature. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - Optionally, configure the Action Group that you'd like to trigger. Action groups can trigger email sending, ITSM tickets, WebHooks, and more. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  You'll now see new Azure Security Center alerts or recommendations (depending on your configured continuous export rules and the condition you defined in your Azure Monitor alert rule) in Azure Monitor alerts, with automatic triggering of an action group (if provided). 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:03.709">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-L01" name="Enable diagnostic logs auditing for Microsoft Azure" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Diagnostic Logs capture activity to the data access plane while the Activity log is a subscription-level log for the control plane. Resource-level diagnostic logs provide insight into operations that were performed within that resource itself, for example, getting a secret from a Key Vault. Currently, 32 Azure resources support Diagnostic Logging (See the references section for a complete list), including Network Security Groups, Load Balancers, Key Vault, AD, Logic Apps and CosmosDB. The content of these logs varies by resource type. For example, Windows event system logs are a category of diagnostics logs for VMs, and blob, table, and queue logs are categories of diagnostics logs for storage accounts.&lt;/p&gt;&lt;p&gt;A number of back-end services were not configured to log and store Diagnostic Logs for certain activities or for a sufficient length. It is crucial that logging systems are correctly configured to log all relevant activities and retain those logs for a sufficient length of time. By default, Diagnostic Logs are not enabled. Given that the mean time to detection in an enterprise is 240 days, a minimum retention period of two years is recommended.&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation:&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;The specific steps for configuring resources within the Azure console vary depending on resource, but typically the steps are:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Go to the resource&lt;/li&gt;&lt;li&gt;Click on Diagnostic settings&lt;/li&gt;&lt;li&gt;In the blade that appears, click "Add diagnostic setting"&lt;/li&gt;&lt;li&gt;Configure the diagnostic settings&lt;/li&gt;&lt;li&gt;Click on Save&lt;/li&gt;&lt;/ol&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Enable diagnostics logging for web apps in Azure App Service" url="https://docs.microsoft.com/en-us/azure/app-service-web/web-sites-enable-diagnostic-log"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5.3" supportedStandardRef="cis-azure-standard"/>
            <standard ref="5.3" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="LT-4" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="LT-5" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Go to the resource&lt;/li&gt;&lt;li&gt;Click on Diagnostic settings&lt;/li&gt;&lt;li&gt;In the blade that appears, click "Add diagnostic setting"&lt;/li&gt;&lt;li&gt;Configure the diagnostic settings&lt;/li&gt;&lt;li&gt;Click on Save&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:03.710">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-L04" name="Enable Failed Request Tracing" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Enable to obtain the detailed information on failed requests, including a trace of the IIS components used to process the request and the time taken in each component. This can be useful if you are attempting to increase site performance or isolate what is causing a specific HTTP error to be returned. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Go to the Azure portal.&lt;/li&gt; 
  &lt;li&gt;Go to the blade for your web app and in "Monitoring" &amp;gt;&amp;gt; "Diagnostics logs".&lt;/li&gt; 
  &lt;li&gt;Enable the "Failed request tracing".&lt;/li&gt; 
  &lt;li&gt;Push "Save" to save the changes.&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Enable diagnostics logging for web apps in Azure App Service" url="https://docs.microsoft.com/en-us/azure/app-service-web/web-sites-enable-diagnostic-log"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Go to the Azure portal.&lt;/li&gt;
                            &lt;li&gt;Go to the blade for your web app and in &amp;quot;Monitoring&amp;quot; &amp;gt;&amp;gt;
                            &amp;quot;Diagnostics logs&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that the &amp;quot;Failed request tracing&amp;quot; is enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:03.710">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-A04" name="Enable MFA for Administrator &amp; Co Administrator accounts" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Enable multi-factor authentication (MFA) device enhances the security of the login process for the Administrator accounts. With MFA, users have a device that generates a unique authentication code (a one-time password, or OTP) and users must provide both their normal credentials (like their username and password) and the OTP. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The MFA device can either be a special piece of hardware, or it can be a virtual device. The recommendation for the Service Administrator &amp;amp; Co Administrator accounts is to use MFA to increase the level of security of the login process. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt; 
  &lt;li&gt;Select Azure Active Directory.&lt;/li&gt; 
  &lt;li&gt;Go into "Users and groups" &amp;gt; "All users".&lt;/li&gt; 
  &lt;li&gt;Select "Multi-Factor Authentication".&lt;/li&gt; 
  &lt;li&gt;Choose all the Service Administrator &amp;amp; Co Administrator accounts and enable MFA.&amp;nbsp;&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - How to require two-step verification for a user or group" url="https://docs.microsoft.com/en-us/azure/multi-factor-authentication/multi-factor-authentication-get-started-user-states"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;Multi-Factor Authentication&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check all Administrator accounts have got the MFA flag enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:03.710">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-USER-MFA" name="Enable per-user MFA" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Enable per-user MFA 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  Multi-factor authentication (MFA) is a process where a user is prompted during a sign-in event for additional forms of identification. This prompt could be to enter a code on their cellphone or to provide a fingerprint scan. When you require a second form of authentication, security is increased as this additional factor isn't something that's easy for an attacker to obtain or duplicate. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  To secure user sign-in events in Azure AD, you can require multi-factor authentication (MFA). Enabling Azure AD Multi-Factor Authentication using Conditional Access policies is the recommended approach to protect users. Conditional Access is an Azure AD Premium P1 or P2 feature that lets you apply rules to require MFA as needed in certain scenarios 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  For Azure AD free tenants without Conditional Access, you can use security defaults to protect users. Users are prompted for MFA as needed, but you can't define your own rules to control the behavior. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Features and licenses for Azure AD Multi-Factor Authentication" url="https://docs.microsoft.com/en-us/azure/active-directory/authentication/concept-mfa-licensing"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  1. Log into the Azure portal as an owner. 
&lt;/div&gt; 
&lt;div&gt;
  2. Select Azure Active Directory. 
&lt;/div&gt; 
&lt;div&gt;
  3. Go into "Users and groups" &amp;gt; "All users". 
&lt;/div&gt; 
&lt;div&gt;
  4. Select "Multi-Factor Authentication". 
&lt;/div&gt; 
&lt;div&gt;
  5. Ensure your users have the MFA flag enabled. 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:03.710">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-ENABLE-WAF-LOGS" name="Enable WAF logs" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Enable WAF logs 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  You can monitor Web Application Firewall resources using logs. You can save performance, access, and other data or consume it from a resource for monitoring purposes. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  Enable logging through the Azure portal 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  1. In the Azure portal, find your resource and select Diagnostic settings. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  For Application Gateway, three logs are available: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - Access log 
&lt;/div&gt; 
&lt;div&gt;
  - Performance log 
&lt;/div&gt; 
&lt;div&gt;
  - Firewall log 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  2. To start collecting data, select Turn on diagnostics. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  3. The Diagnostics settings page provides the settings for the resource logs. In this example, Log Analytics stores the logs. You can also use event hubs and a storage account to save the resource logs. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  4. Type a name for the settings, confirm the settings, and select Save. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Resource logs for Azure Web Application Firewall" url="https://docs.microsoft.com/en-us/azure/web-application-firewall/ag/web-application-firewall-logs"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Ensure that all WAF logs are enabled.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:03.710">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-L02" name="Enable Web Server Logging" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Enable the Web Server logging to receive information about HTTP transactions using the W3C extended log file format. This is useful when determining overall site metrics such as the number of requests handled or how many requests are from a specific IP address. There are two ways to save the data: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;b&gt;File system: &lt;/b&gt;stores the application diagnostics information to the web app file system. These files can be accessed by FTP, or downloaded as a Zip archive by using the Azure PowerShell or Azure Command-Line Interface (Azure CLI).&lt;/li&gt; 
  &lt;li&gt;&lt;b&gt;Storage:&lt;/b&gt; stores the application diagnostics information in the specified Azure Storage Account and the logs are only accessible with a client account.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Go to the Azure portal.&lt;/li&gt; 
  &lt;li&gt;Go to the blade for your web app and in "Monitoring" &amp;gt;&amp;gt; "Diagnostics logs".&lt;/li&gt; 
  &lt;li&gt;Enable the type "Storage" or "File System" to activate this function.&lt;/li&gt; 
  &lt;li&gt;Push "Save" to save the changes.&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Enable diagnostics logging for web apps in Azure App Service" url="https://docs.microsoft.com/en-us/azure/app-service-web/web-sites-enable-diagnostic-log"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Go to the Azure portal.&lt;/li&gt;
                            &lt;li&gt;Go to the blade for your web app and in &amp;quot;Monitoring&amp;quot; &amp;gt;&amp;gt;
                            &amp;quot;Diagnostics logs&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that the type &amp;quot;Storage&amp;quot; or &amp;quot;File System&amp;quot;
                            are enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:03.710">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-ENCRYPTION-TRANSIT" name="Encrypt Sensitive data in transit" issueId="" issueLink="" platform="" cost="0" risk="64" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;div&gt;
   Use encryption to protect traffic on external and public networks as it is critical for data protection 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   Rationale: 
 &lt;/div&gt; 
 &lt;div&gt;
   Protect data in transit against 'out of band' attacks (such as traffic capture) using encryption to ensure that attackers cannot easily read or modify the data. 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   Remediation: 
 &lt;/div&gt; 
 &lt;div&gt;
   1. Use a valid TLS/SSL certificate for custom domains. 
 &lt;/div&gt; 
 &lt;div&gt;
   2. Ensure that any clients connecting to your Azure resources for HTTP traffic can negotiate TLS v1.2 or greater. 
 &lt;/div&gt; 
 &lt;div&gt;
   3. Use SSH (for Linux) or RDP/TLS (for Windows) for remote management, instead of unencrypted protocols 
 &lt;/div&gt; 
 &lt;div&gt;
   4. Disable obsoleted SSL/TLS/SSH versions, protocols, and weak ciphers 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   Redirect HTTP to HTTPs 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   By default, clients can connect to web apps by using both HTTP or HTTPS. Microsoft Azure recommends redirecting HTTP to HTTPs because HTTPS uses the SSL/TLS protocol to provide a secure connection, which is both encrypted and authenticated. 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   Enforce FTPS 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   For enhanced security, you should allow FTP over TLS/SSL only. You can also disable both FTP and FTPS if you don't use FTP deployment. 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   In your app's resource page in Azure portal, select Configuration &amp;gt; General settings from the left navigation. 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   To disable unencrypted FTP, select FTPS Only in FTP state. To disable both FTP and FTPS entirely, select Disabled. When finished, click Save. If using FTPS Only, you must enforce TLS 1.2 or higher by navigating to the TLS/SSL settings blade of your web app. TLS 1.0 and 1.1 are not supported with FTPS Only. 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   Enable client certificates 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   To set up your app to require client certificates, you can switch On the Require incoming certificate by selecting Configuration &amp;gt; General Settings from the Azure Portal or you need to set the clientCertEnabled setting for your app to true. To set the setting, run the following command in the Cloud Shell. 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   az webapp update --set clientCertEnabled=true --name &amp;lt;app_name&amp;gt; --resource-group &amp;lt;group_name&amp;gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   Impact: 
 &lt;/div&gt; 
 &lt;div&gt;
   None 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Add a TLS/SSL certificate in Azure App Service" url="https://docs.microsoft.com/en-us/azure/app-service/configure-ssl-certificate"/>
            <reference name="Azure App ServiceSecurity" url="https://docs.microsoft.com/en-us/azure/app-service/overview-security"/>
            <reference name="Configure TLS mutual authentication for Azure App Service" url="https://docs.microsoft.com/en-us/azure/app-service/app-service-web-configure-tls-mutual-auth"/>
            <reference name="Deploy your app to Azure App Service using FTP/S" url="https://docs.microsoft.com/en-us/azure/app-service/deploy-ftp"/>
            <reference name="Security in Azure App Service" url="https://docs.microsoft.com/en-us/azure/app-service/overview-security"/>
            <reference name="Security recommendations for App Service" url="https://docs.microsoft.com/en-us/azure/app-service/security-recommendations"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Test HTTPS 
&lt;/div&gt; 
&lt;div&gt;
  In various browsers, browse to https://&amp;lt;your.custom.domain&amp;gt; to verify that it serves up your app. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Your application code can inspect the protocol via the "x-appservice-proto" header. The header will have a value of http or https. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Note 
&lt;/div&gt; 
&lt;div&gt;
  If your app gives you certificate validation errors, you're probably using a self-signed certificate. 
&lt;/div&gt; 
&lt;div&gt;
  If that's not the case, you may have left out intermediate certificates when you export your certificate to the PFX file. 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:03.710">
              <output/>
            </source>
            <references>
              <reference name="Azure App ServiceSecurity" url="https://docs.microsoft.com/en-us/azure/app-service/overview-security"/>
            </references>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-L05" name="Export the Audit Logs to a storage account" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Export the information of Audit Logs to a storage account. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Go to "Monitor" and then to "Activity Logs".&lt;/li&gt; 
  &lt;li&gt;Push the button "Export".&lt;/li&gt; 
  &lt;li&gt;Select "All Regions".&lt;/li&gt; 
  &lt;li&gt;Select "Export to a storage account" and select your account.&lt;/li&gt; 
  &lt;li&gt;Select the "Retention (days)" as minimum 90 days.&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Enable diagnostics logging for web apps in Azure App Service" url="https://docs.microsoft.com/en-us/azure/app-service-web/web-sites-enable-diagnostic-log"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Activity Logs&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Push the button &amp;quot;Export&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;All Regions&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;Export to a storage account&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that all fields are correctly filled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:03.710">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-N09" name="Isolate Azure instances into different VNets" issueId="" issueLink="" platform="" cost="0" risk="61" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Specify a VNet for the Azure instance as a launch parameter. Applications that run on the Cloud instance can use the VNet security configuration when they access Azure resources.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  You can configure an Azure cloud service from Solution Explorer in Visual Studio. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Create a virtual network with multiple subnets" url="https://docs.microsoft.com/en-us/azure/virtual-network/virtual-networks-create-vnet-arm-pportal"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that the Azure instances are into different VNets.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:03.710">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-A07" name="Recertify user access" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Do regular reviews of accounts on the system and verify that it doesn't exist stoled or fake
                        accounts. With this process is ensured that there are not compromised accounts by former
                        employees or by attackers.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        At least every 90 days complete the following:&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Log in to the Azure portal as an owner.&lt;/li&gt;
                        &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                        &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;For any user that should not exist:&lt;/li&gt;
                        &lt;li&gt;Select the user.&lt;/li&gt;
                        &lt;li&gt;Click &amp;quot;Delete&amp;quot;.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Assign a user or group to an enterprise app in Azure Active Directory" url="https://docs.microsoft.com/en-us/azure/active-directory/active-directory-coreapps-assign-user-azure-portal"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Log in to the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each user has got an assigned account.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:03.710">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-APP-SECRETS" name="Secure application secrets" issueId="" issueLink="" platform="" cost="0" risk="64" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Secure application secrets 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  Don't store application secrets, such as database credentials, API tokens, or private keys in your code or configuration files. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  The commonly accepted approach is to access application secrets as environment variables using the standard pattern in your language of choice. In Azure App Service, you can define environment variables through app settings and connection strings. App settings and connection strings are stored encrypted in Azure. The app settings are decrypted only before being injected into your app's process memory when the app starts. The encryption keys are rotated regularly. Alternatively, you can integrate your Azure App Service app with Azure Key Vault for advanced secrets management. By accessing the Key Vault with a managed identity, your App Service app can securely access the secrets you need. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Security recommendations for App Service" url="https://docs.microsoft.com/en-us/azure/app-service/security-recommendations"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Ensure that application secrets, such as database credentials, API tokens, or private keys are not stored in your code or configuration files.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:03.710">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-N01" name="Set Network Security Groups to be as restrictive as possible" issueId="" issueLink="" platform="" cost="0" risk="61" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Use Network Security Groups (NSG) to filter the ingress/egress network traffic to Azure resources. Set the limit all the traffic (ingress/egress) on the NSG in order to force the use of least privilege into the NSG.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Identify Azure resources for each NSG.&lt;/li&gt; 
  &lt;li&gt;Create a set of least privilege NSG for those resources.&lt;/li&gt; 
  &lt;li&gt;Place the resources in those security groups.&lt;/li&gt; 
  &lt;li&gt;Change the inbound/outbound security rules to fulfill the least privilege.&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - How to open ports to a virtual machine with the Azure portal" url="https://docs.microsoft.com/en-us/azure/virtual-machines/windows/nsg-quickstart-portal"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Check that each Azure resources has got their Network Security Groups.&lt;/li&gt;
                            &lt;li&gt;Check that a set of these groups achieve with the principle of the least
                            privilege.&lt;/li&gt;
                            &lt;li&gt;Check that the inbound/outbound security rules are enabled and correctly
                            configured.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:03.710">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-N02" name="Use Network Security Groups to block inbound port traffic from 0.0.0.0/0" issueId="" issueLink="" platform="" cost="0" risk="61" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Use Network Security Groups (NSG) to filter the ingress/egress network traffic to Azure resources. Set the limit inbound access to all TCP or all ports to avoid undue exposure to risk.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt; 
  &lt;li&gt;Select Network Security Groups.&lt;/li&gt; 
  &lt;li&gt;Choose the NSG to edit (or create a new one).&lt;/li&gt; 
  &lt;li&gt;In "Inbound security rules":&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;ul&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Remove all rules that allow port traffic.&lt;/li&gt; 
   &lt;li&gt;Add a rule to deny port traffic&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/ul&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - How to open ports to a virtual machine with the Azure portal" url="https://docs.microsoft.com/en-us/azure/virtual-machines/windows/nsg-quickstart-portal"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Network Security Groups.&lt;/li&gt;
                            &lt;li&gt;Choose the NSG to view one of them.&lt;/li&gt;
                            &lt;li&gt;In &amp;quot;Inbound security rules&amp;quot;, check that all the traffic from
                            0.0.0.0/0 is are blocked.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:03.711">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="authentication" name="Authentication" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="AZURE-LOST-ACCESS-ROOT" name="Attackers gain unauthorized access to the root account due to the lack of configuration of the account" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;div&gt;Attackers could gain unauthorized access to the administrator account due to a lack of configuration of the account and its security mechanisms, making it possible to modify credentials and add/remove user accounts.
                                &lt;/div&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="AZ-W04">
                  <countermeasures>
                    <countermeasure ref="AZ-A04" mitigation="50"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AZURE-MON02">
                  <countermeasures>
                    <countermeasure ref="AZ-A03" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-A03" mitigation="50"/>
                <countermeasure ref="AZ-A04" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="AZURE-LOST-ACCESS-USER" name="Attackers gain unauthorized access to the user account due to the lack of configuration of the account" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;Attackers could gain unauthorized access to the user account due to the lack of configuration of the account, for example, the security question to reset the password is configured incorrectly.&lt;/p&gt;</desc>
              <riskRating confidentiality="50" integrity="50" availability="50" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-IDENTITY-03">
                  <countermeasures>
                    <countermeasure ref="AZ-A07" mitigation="50"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AZURE-MON03">
                  <countermeasures>
                    <countermeasure ref="AZURE-USER-MFA" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-A07" mitigation="50"/>
                <countermeasure ref="AZURE-USER-MFA" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="authorization" name="Authorization" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="LOSS-CONTROL_ENV" name="Attackers gain unauthorized access to the control of the environment" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;Attackers could potentially gain unauthorized access to the control of the environment, due to user accounts - or role groups - not being well defined and configured. As a consequence attackers may be able to make changes without root approval.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="75" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-ACCESS-01">
                  <countermeasures>
                    <countermeasure ref="AZ-A09" mitigation="20"/>
                    <countermeasure ref="AZ-A10" mitigation="20"/>
                    <countermeasure ref="AZ-A11" mitigation="20"/>
                    <countermeasure ref="AZURE-APP-SERVICE1" mitigation="20"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AZURE-EXPIRATION-DATE">
                  <countermeasures>
                    <countermeasure ref="AZ-A12" mitigation="20"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-A09" mitigation="20"/>
                <countermeasure ref="AZ-A10" mitigation="20"/>
                <countermeasure ref="AZ-A11" mitigation="20"/>
                <countermeasure ref="AZ-A12" mitigation="20"/>
                <countermeasure ref="AZURE-APP-SERVICE1" mitigation="20"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="general" name="General" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="UNCONFIGURED-SECURITY" name="Attackers gain access to the system by exploiting weak security configurations" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>Weak security configurations like using sharing passwords in plain text, using weak passwords, using obsolete encryption algorithms, etc. can lead attackers to gain access to the system.</desc>
              <riskRating confidentiality="75" integrity="50" availability="25" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-16">
                  <countermeasures>
                    <countermeasure ref="AZURE-WEBAPPS1" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZURE-WEBAPPS1" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="ACCESS-TO-DATA" name="Sensitive data is compromised through unauthorized access to data storage" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;A data breach is a security violation in which sensitive, protected or confidential data is copied, transmitted, viewed, stolen or used by an individual unauthorized to do so. Sensitive data could be exposed due to a bad configuration in user permissions.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-UNSECURE-CREDENTIALS">
                  <countermeasures>
                    <countermeasure ref="AZURE-APP-SECRETS" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZURE-APP-SECRETS" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="logging-and-monitoring" name="Logging and Monitoring" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="OWASP A10:2017" name="Exploitation of insufficient logging and monitoring" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>	&lt;p&gt;Exploitation of insufficient logging and monitoring is the bedrock of nearly every major incident.&lt;br /&gt;
 Attackers rely on the lack of monitoring and timely response to achieve their goals without being detected.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="AZ-ENABLE-ALERTS" mitigation="20"/>
                    <countermeasure ref="AZ-ENABLE-WAF-LOGS" mitigation="16"/>
                    <countermeasure ref="AZ-L01" mitigation="16"/>
                    <countermeasure ref="AZ-L02" mitigation="16"/>
                    <countermeasure ref="AZ-L04" mitigation="16"/>
                    <countermeasure ref="AZ-L05" mitigation="16"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-ENABLE-ALERTS" mitigation="20"/>
                <countermeasure ref="AZ-ENABLE-WAF-LOGS" mitigation="16"/>
                <countermeasure ref="AZ-L01" mitigation="16"/>
                <countermeasure ref="AZ-L02" mitigation="16"/>
                <countermeasure ref="AZ-L04" mitigation="16"/>
                <countermeasure ref="AZ-L05" mitigation="16"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="networking" name="Networking" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="AZURE-UNAUTHORISED-CONNECTION" name="Attackers perform unauthorized network access" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;Attackers could perform unauthorized network access to the resources through misconfigured ports or security network configurations.&lt;/p&gt;</desc>
              <riskRating confidentiality="25" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-NET-01">
                  <countermeasures>
                    <countermeasure ref="AZ-N01" mitigation="25"/>
                    <countermeasure ref="AZ-N02" mitigation="25"/>
                    <countermeasure ref="AZURE-WAF-GW" mitigation="25"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AZURE-VNET01">
                  <countermeasures>
                    <countermeasure ref="AZ-N09" mitigation="25"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-N01" mitigation="25"/>
                <countermeasure ref="AZ-N02" mitigation="25"/>
                <countermeasure ref="AZ-N09" mitigation="25"/>
                <countermeasure ref="AZURE-WAF-GW" mitigation="25"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="DATA-EXPOSED-CHANNEL" name="The data is exposed through the transmission channel" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;Attackers can obtain the data through the transmitted channel because this does not have the security measures in place to protect the data&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="DATA-TRANSMIT-CLEAR">
                  <countermeasures>
                    <countermeasure ref="AZURE-ENCRYPTION-TRANSIT" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZURE-ENCRYPTION-TRANSIT" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="b536c2e0-dc59-4f0a-b71a-d410f76116ff" diagramComponentId="3180eb05-27d6-43cc-9768-ac2b223e6da0" ref="db7a85b7-c607-43f5-9998-f62c24a0af2f" name="Azure Queue Storage" desc="" library="Microsoft-Azure" parentComponentRef="02d8d342-3126-442a-96cc-a584e575cdac" componentDefinitionRef="CD-MICROSOFT-AZURE-QUEUE-STORAGE">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses>
        <weakness ref="CWE-16" name="Configuration" state="0" impact="100" issueId="" issueLink="">
          <desc>Weaknesses in this category are typically introduced during the
                        configuration of the software.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:08.949">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CWE-778" name="Insufficient Logging" state="0" impact="100" issueId="" issueLink="">
          <desc>When a critical security event occurs, the software either does not record the event or omits important details about the event when logging it. When critical security events are not logged properly, such as in the case of a failed login attempt, this can make malicious behavior more difficult to detect and may hinder forensic analyses after a successful attack.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:08.948">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AZURE-ACCESS-01" name="Misconfigured credentials for groups and roles" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        The credentials for groups and roles are not correctly configured and there are user accounts with more privileges than necessary.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each user has got assigned the correct groups.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All groups&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each group has got assigned the correct roles to achieve principle of
                            least privilege.&lt;/li&gt;
                            &lt;li&gt;Check that the roles for the Cloud Service are well assigned.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;div&gt;
                            &lt;/div&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:08.949">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AZURE-VNET01" name="Networks for Azure resources are not properly segmented. Without proper segmentation, when attackers gain access to one resource, any other resources in the same VNet are compromised" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        Resources in the same VNet are compromised because when one of them is attacked and the
                        attackers gain access, they also gain access to all resources.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            Identify the resources and the Microsoft Azure instances.
                            &lt;/div&gt;
                            &lt;div&gt;
                            Check that the resources are in the correct VNet.
                            &lt;/div&gt;
                            &lt;div&gt;
                            Check that the Microsoft Azure instances&amp;nbsp;are into different VNets.
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:08.949">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AZURE-ACCESS-DATA-01" name="Sensitive data are accessible" state="0" impact="100" issueId="" issueLink="">
          <desc>Sensitive data are not encrypted and the sensitive data is exposed.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:08.949">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AZURE-MONITOR-BACKUPS" name="There is not a recover or backup mechanism" state="0" impact="100" issueId="" issueLink="">
          <desc>There are not any processes or mechanisms to regularly save the data to another place in order to have an older version of the data to restore in case of loss. Consequently the data cannot be easily recovered or they cannot be recovered at all.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:08.949">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
        <weakness ref="AZURE-NET-01" name="Unauthorized connection attempts on open ports" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        Receiving unauthorized connections to open ports makes systems vulnerable to attacks. To
                        avoid this, access to the network must be as restricted as possible, so that only the necessary
                        ports are open and the minimum inbound traffic is accepted.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Check that each Azure resources have got their Network Security Groups.&lt;/li&gt;
                            &lt;li&gt;Check that a set of these groups achieve with the principle of the least
                            privilege.&lt;/li&gt;
                            &lt;li&gt;Check that the inbound/outbound security rules are enabled and correctly
                            configured.&lt;/li&gt;
                            &lt;li&gt;In &amp;quot;Inbound security rules&amp;quot;, check that all the traffic from
                            0.0.0.0/0&amp;nbsp;is blocked.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:08.949">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="AZ-S03" name="Configure Azure Storage settings for each storage" issueId="" issueLink="" platform="" cost="0" risk="59" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;There are some options that must be selected to secure Azure Storages.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Checklist:&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Ensure that 'Secure transfer required' is set to 'Enabled'&lt;/li&gt;&lt;li&gt;Ensure that storage account access keys are periodically regenerated&lt;/li&gt;&lt;li&gt;Ensure Storage logging is enabled for Queue service for read, write, and delete requests&lt;/li&gt;&lt;li&gt;Ensure that shared access signature tokens expire within an hour&lt;/li&gt;&lt;li&gt;Ensure that 'Public access level' is set to Private for blob containers&lt;/li&gt;&lt;li&gt;Ensure default network access rule for Storage Accounts is set to deny&lt;/li&gt;&lt;li&gt;Ensure 'Trusted Microsoft Services' is enabled for Storage Account access&lt;/li&gt;&lt;li&gt;Ensure soft delete is enabled for Azure Storage&lt;/li&gt;&lt;li&gt;Ensure storage for critical data are encrypted with Customer Managed Key&lt;/li&gt;&lt;li&gt;Ensure Storage logging is enabled for Blob service for read, write, and delete requests&lt;/li&gt;&lt;li&gt;Ensure Storage logging is enabled for Table service for read, write, and delete requests&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;From Azure Console&lt;/strong&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Go to Storage Accounts&lt;/li&gt;&lt;li&gt;For each storage account&lt;ol&gt;&lt;li&gt;Go to Configuration&lt;ol&gt;&lt;li&gt;Go to Allow Blob public access&lt;ol&gt;&lt;li&gt;Set Disabled if no anonymous access is needed on the storage account&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;Set Secure transfer required to Enabled&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;Go to Diagnostics settings (classic) from Monitoring (classic)&lt;ol&gt;&lt;li&gt;Set the Status to On, if set to Off.&lt;/li&gt;&lt;li&gt;Select Queue properties.&lt;ol&gt;&lt;li&gt;Select Read, Write and Delete options under the Logging section to enable Storage Logging for Queue service.&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;Select Blob properties&lt;ol&gt;&lt;li&gt;Select Read, Write and Delete options under the Logging section to enable Storage Logging for Blob service.&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;Select Table properties&lt;ol&gt;&lt;li&gt;Select Read, Write and Delete options under the Logging section to enable Storage Logging for Table service.&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;Go to Shared access signature&lt;ol&gt;&lt;li&gt;Set Start and expiry date/time within an hour&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;Go to Containers under BLOB SERVICE&lt;ol&gt;&lt;li&gt;For each container, click Access policy&lt;ol&gt;&lt;li&gt;Set Public access level to Private (no anonymous access)&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;Go to Firewalls and virtual networks&lt;ol&gt;&lt;li&gt;Ensure that you have elected to allow access from Selected networks.&lt;/li&gt;&lt;li&gt;Enable check box for Allow trusted Microsoft services to access this storage account.&lt;/li&gt;&lt;li&gt;Add rules to allow traffic from specific network.&lt;/li&gt;&lt;li&gt;Click Save to apply your changes.&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;Go to Data Protection&lt;ol&gt;&lt;li&gt;Select set soft delete enabled and enter a number of days you want to retain soft deleted data.&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;Go to Encryption&lt;ol&gt;&lt;li&gt;Set Customer Managed Keys&lt;/li&gt;&lt;li&gt;Select the Encryption key and enter the appropriate setting value&lt;/li&gt;&lt;li&gt;Click Save&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;Ensure that storage account access keys are periodically regenerated by following Microsoft Azure documentation for &lt;a href="https://docs.microsoft.com/en-us/azure/storage/common/storage-account-create?tabs=azure-portal#regenerate-storage-access-keys"&gt;regenerating storage account access keys&lt;/a&gt;.&lt;/p&gt;&lt;p&gt;Alternatively, some of these actions can be done with the Azure CLI 2.0.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Using Azure Command Line Interface 2.0&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Use the below command to enable Secure transfer required for a Storage Account&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;az storage account update --name &amp;lt;storageAccountName&amp;gt; --resource-group &amp;lt;resourceGroupName&amp;gt; --https-only true&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Use the below command to enable the Storage Logging for Queue service.&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;az storage logging update --account-name &amp;lt;storageAccountName&amp;gt; --account-key &amp;lt;storageAccountKey&amp;gt; --services q --log rwd --retention 90&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Ensure the below command output contains null&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;az storage container list --account-name &amp;lt;accountName&amp;gt; --account-key &amp;lt;accountKey&amp;gt; --query '[*].properties.publicAccess'&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Ensure allowBlobPublicAccess is false&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;az storage account show --name &amp;lt;storage-account&amp;gt; --resource-group &amp;lt;resource-group&amp;gt; --query allowBlobPublicAccess --output tsv&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Identify the container name from previous command. Set the permission for public access to private(off) for the above container name, using the below command&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;az storage container set-permission --name &amp;lt;containerName&amp;gt; --public-access off --account-name &amp;lt;accountName&amp;gt; --account-key &amp;lt;accountKey&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Set Disabled if no anonymous access is wanted on the storage account&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;az storage account update --name &amp;lt;storage-account&amp;gt; --resource-group &amp;lt;resource-group&amp;gt; --allow-blob-public-access false&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Use the below command to update default-action to Deny.&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;az storage account update --name &amp;lt;StorageAccountName&amp;gt; --resource-group &amp;lt;resourceGroupName&amp;gt; --default-action Deny&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Use the below command to update trusted Microsoft services.&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;az storage account update --name &amp;lt;StorageAccountName&amp;gt; --resource-group &amp;lt;resourceGroupName&amp;gt; --bypass AzureServices&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Update retention days in below command&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;az storage blob service-properties delete-policy update --days-retained &amp;lt;RetentionDaysValue&amp;gt; --account-name &amp;lt;StorageAccountName&amp;gt; --enable true&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Use the below command to enable the Storage Logging for Blob service.&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;az storage logging update --account-name &amp;lt;storageAccountName&amp;gt; --account-key &amp;lt;storageAccountKey&amp;gt; --services b --log rwd --retention 90&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Use the below command to enable the Storage Logging for Table service.&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;az storage logging update --account-name &amp;lt;storageAccountName&amp;gt; --account-key &amp;lt;storageAccountKey&amp;gt; --services t --log rwd --retention 90&lt;/p&gt;&lt;/blockquote&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1" supportedStandardRef="cis-azure-standard"/>
            <standard ref="3.1" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="3.10" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="3.11" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="3.2" supportedStandardRef="cis-azure-standard"/>
            <standard ref="3.2" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="3.3" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="3.4" supportedStandardRef="cis-azure-standard"/>
            <standard ref="3.4" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="3.5" supportedStandardRef="cis-azure-standard"/>
            <standard ref="3.5" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="3.6" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="3.7" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="3.8" supportedStandardRef="cis-azure-standard"/>
            <standard ref="3.8" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="3.9" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="API7:2019-Security Misconfiguration" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Follow the paths detailed in the description and ensure the values are set correctly.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:08.875">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="C-AZURE-STORAGE2" name="Configure operational backup for Azure Blob Storage" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Configure operational backup for Azure Blob Storage&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Azure Backup lets you easily configure operational backup for protecting block blobs in your storage accounts.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Enable Azure Backup and configure the backup source on a desired frequency and with a desired retention period. Azure Backup lets you easily configure operational backup for protecting block blobs in your storage accounts. Backup of blobs is configured at the storage account level. So, all blobs in the storage account are protected with operational backup.&lt;br&gt; You can configure backup for multiple storage accounts using the Backup Center. You can also configure backup for a storage account using the storage account's Data Protection properties.&lt;/p&gt; 
&lt;p&gt;Note&lt;br&gt; Azure Backup is currently only supported for Azure Blob storage. Queue and table data can be backed up by using the AzCopy command line tool.&lt;/p&gt; 
&lt;p&gt;For detailed information please see Reference URLs.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Configure operational backup for Azure Blobs" url="https://learn.microsoft.com/en-us/azure/backup/blob-backup-configure-manage"/>
            <reference name="Overview of operational backup for Azure Blobs" url="https://learn.microsoft.com/en-us/azure/backup/blob-backup-overview"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>	&lt;p&gt;Ensure you have configured operational backup for Azure Blob Storage.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:08.877">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-AZURE-STORAGE4" name="Configure private endpoints for Azure Storage" issueId="" issueLink="" platform="" cost="0" risk="61" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Configure private endpoints for Azure Storage&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; You can use private endpoints for your Azure Storage accounts to allow clients on a virtual network (VNet) to securely access data over a Private Link. The private endpoint uses a separate IP address from the VNet address space for each storage account service. Network traffic between the clients on the VNet and the storage account traverses over the VNet and a private link on the Microsoft backbone network, eliminating exposure from the public internet.&lt;/p&gt; 
&lt;p&gt;Note&lt;br&gt; Private endpoints are not available for general-purpose v1 storage accounts.&lt;/p&gt; 
&lt;p&gt;Using private endpoints for your storage account enables you to:&lt;br&gt; - Secure your storage account by configuring the storage firewall to block all connections on the public endpoint for the storage service.&lt;br&gt; - Increase security for the virtual network (VNet), by enabling you to block exfiltration of data from the VNet.&lt;br&gt; - Securely connect to storage accounts from on-premises networks that connect to the VNet using VPN or ExpressRoutes with private-peering.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Create storage account with a private endpoint&lt;/p&gt; 
&lt;p&gt;In this section, you'll create a storage account and configure the private endpoint.&lt;/p&gt; 
&lt;p&gt;1. In the left-hand menu, select Create a resource &amp;gt; Storage &amp;gt; Storage account, or search for Storage account in the search box.&lt;/p&gt; 
&lt;p&gt;2. In the Basics tab of Create storage account enter or select the following information:&lt;/p&gt; 
&lt;p&gt;Project Details &lt;br&gt; Subscription: Select your Azure subscription.&lt;br&gt; Resource Group: Select myResourceGroup.&lt;br&gt; Instance details &lt;br&gt; Storage account name: Enter mystorageaccount. If the name is unavailable, enter a unique name.&lt;br&gt; Location: Select (US) East US.&lt;br&gt; Performance: Leave the default Standard.&lt;br&gt; Redundancy: Select Locally-redundant storage (LRS).&lt;/p&gt; 
&lt;p&gt;3. Select the Networking tab or select the Next: Networking button.&lt;/p&gt; 
&lt;p&gt;4. In the Networking tab, under Network connectivity select Disable public access and use private access.&lt;/p&gt; 
&lt;p&gt;5. In Private endpoint, select + Add private endpoint.&lt;/p&gt; 
&lt;p&gt;6. In Create private endpoint enter or select the following information:&lt;/p&gt; 
&lt;p&gt;Subscription: Select your Azure subscription.&lt;br&gt; Resource Group: Select myResourceGroup.&lt;br&gt; Location: Select East US.&lt;br&gt; Name: Enter myPrivateEndpoint.&lt;br&gt; Storage sub-resource: Leave the default blob.&lt;br&gt; Networking&lt;br&gt; Virtual network: Select myVNet.&lt;br&gt; Subnet: Select mySubnet.&lt;br&gt; Private DNS integration&lt;br&gt; Integrate with private DNS zone: Leave the default Yes.&lt;br&gt; Private DNS Zone: Leave the default (New) privatelink.blob.core.windows.net.&lt;/p&gt; 
&lt;p&gt;7. Select OK.&lt;/p&gt; 
&lt;p&gt;8. Select Review + create.&lt;/p&gt; 
&lt;p&gt;9. Select Create.&lt;/p&gt; 
&lt;p&gt;10. Select Resource groups in the left-hand navigation pane.&lt;/p&gt; 
&lt;p&gt;11. Select myResourceGroup.&lt;/p&gt; 
&lt;p&gt;12. Select the storage account you created in the previous steps.&lt;/p&gt; 
&lt;p&gt;13. In the Security + networking section of the storage account, select Access keys.&lt;/p&gt; 
&lt;p&gt;14. Select Show keys, then select copy on the Connection string for key1.&lt;/p&gt; 
&lt;p&gt;For more information please see Reference URLs.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Tutorial: Connect to a storage account using an Azure Private Endpoint" url="https://learn.microsoft.com/en-us/azure/private-link/tutorial-private-endpoint-storage-portal"/>
            <reference name="Use private endpoints for Azure Storage" url="https://learn.microsoft.com/en-us/azure/storage/common/storage-private-endpoints"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>	&lt;p&gt;Test connectivity to private endpoint&lt;/p&gt;

	&lt;p&gt;In this section, you'll use the virtual machine described in Reference URLs to connect to the storage account across the private endpoint using Microsoft Azure Storage Explorer.&lt;/p&gt;

	&lt;p&gt;1. Select Resource groups in the left-hand navigation pane.&lt;/p&gt;

	&lt;p&gt;2. Select myResourceGroup.&lt;/p&gt;

	&lt;p&gt;3. Select myVM.&lt;/p&gt;

	&lt;p&gt;4. On the overview page for myVM, select Connect then Bastion.&lt;/p&gt;

	&lt;p&gt;5. Enter the username and password that you entered during the virtual machine creation.&lt;/p&gt;

	&lt;p&gt;6. Select Connect button.&lt;/p&gt;

	&lt;p&gt;7. Open Windows PowerShell on the server after you connect.&lt;/p&gt;

	&lt;p&gt;8. Enter nslookup &lt;storage-account-name&gt;.blob.core.windows.net. Replace &lt;storage-account-name&gt; with the name of the storage account you created in the previous steps. You'll receive a message similar to what is displayed below:&lt;/p&gt;

	&lt;p&gt;Server:  UnKnown&lt;br /&gt;
Address:  168.63.129.16&lt;/p&gt;

	&lt;p&gt;Non-authoritative answer:&lt;br /&gt;
Name:    mystorageaccount.privatelink.blob.core.windows.net&lt;br /&gt;
Address:  10.1.0.5&lt;br /&gt;
Aliases:  mystorageaccount.blob.core.windows.net&lt;br /&gt;
A private IP address of 10.1.0.5 is returned for the storage account name. This address is in mySubnet subnet of myVNet virtual network you created previously.&lt;/p&gt;

	&lt;p&gt;9. Install Microsoft Azure Storage Explorer on the virtual machine.&lt;/p&gt;

	&lt;p&gt;10. Select Finish after the Microsoft Azure Storage Explorer is installed. Leave the box checked to open the application.&lt;/p&gt;

	&lt;p&gt;11. In the Select Resource screen, select Storage account or service to add a connection in Microsoft Azure Storage Explorer to your storage account that you created in the previous steps.&lt;/p&gt;

	&lt;p&gt;12. In the Select Connection Method screen, select Connection string, and then Next.&lt;/p&gt;

	&lt;p&gt;13. In the box under Connection String, paste the connection string from the storage account you copied in the previous steps. The storage account name will automatically populate in the box under Display name.&lt;/p&gt;

	&lt;p&gt;14. Select Next.&lt;/p&gt;

	&lt;p&gt;15. Verify the settings are correct in Summary.&lt;/p&gt;

	&lt;p&gt;16. Select Connect, then select mystorageaccount from the Storage Accounts left-hand menu.&lt;/p&gt;

	&lt;p&gt;17. Under Blob Containers, you see mycontainer that you created in the previous steps.&lt;/p&gt;

	&lt;p&gt;18. Close the connection to myVM.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:08.877">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-IDS-IPS" name="Deploy network-based IDS/IPS" issueId="" issueLink="" platform="" cost="0" risk="61" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Deploy network-based intrusion detection/intrusion prevention systems (IDS/IPS)&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Select an offer from Azure Marketplace that supports IDS/IPS functionality with payload inspection capabilities. If intrusion detection and/or prevention based on payload inspection is not a requirement, Azure Firewall with Threat Intelligence can be used. Azure Firewall Threat intelligence-based filtering can alert and deny traffic to and from known malicious IP addresses and domains. The IP addresses and domains are sourced from the Microsoft Threat Intelligence feed.&lt;/p&gt; 
&lt;p&gt;Deploy the firewall solution of your choice at each of your organization's network boundaries to detect and/or deny malicious traffic.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Set up the network&lt;/p&gt; 
&lt;p&gt;First, create a resource group to contain the resources needed to deploy the firewall. Then create a VNet, subnets, and a test server.&lt;br&gt; For more information please see Reference URL.&lt;/p&gt; 
&lt;p&gt;Deploy the firewall&lt;/p&gt; 
&lt;p&gt;Deploy the firewall into the VNet.&lt;/p&gt; 
&lt;p&gt;1. On the Azure portal menu or from the Home page, select Create a resource.&lt;/p&gt; 
&lt;p&gt;2. Type firewall in the search box and press Enter.&lt;/p&gt; 
&lt;p&gt;3. Select Firewall and then select Create.&lt;/p&gt; 
&lt;p&gt;4. On the Create a Firewall page, use the following values to configure the firewall:&lt;/p&gt; 
&lt;p&gt;Subscription: &lt;br&gt; Resource group: Test-FW-RG&lt;br&gt; Name: Test-FW01&lt;br&gt; Location: Select the same location that you used previously&lt;br&gt; Choose a virtual network: Use existing: Test-FW-VN&lt;br&gt; Public IP address: Add new&lt;br&gt; Name: fw-pip&lt;/p&gt; 
&lt;p&gt;5. Select Review + create.&lt;/p&gt; 
&lt;p&gt;6. Review the summary, and then select Create to create the firewall.&lt;/p&gt; 
&lt;p&gt;This will take a few minutes to deploy.&lt;/p&gt; 
&lt;p&gt;7. After deployment completes, go to the Test-FW-RG resource group, and select the Test-FW01 firewall.&lt;/p&gt; 
&lt;p&gt;8. Note the firewall private and public IP addresses. You will use these addresses later.&lt;/p&gt; 
&lt;p&gt;Create a default route&lt;/p&gt; 
&lt;p&gt;For the Workload-SN subnet, configure the outbound default route to go through the firewall.&lt;/p&gt; 
&lt;p&gt;1. On the Azure portal menu, select All services or search for and select All services from any page.&lt;/p&gt; 
&lt;p&gt;2. Under Networking, select Route tables.&lt;/p&gt; 
&lt;p&gt;3. Select Add.&lt;/p&gt; 
&lt;p&gt;4. For Name, type Firewall-route.&lt;/p&gt; 
&lt;p&gt;5. For Subscription, select your subscription.&lt;/p&gt; 
&lt;p&gt;6. For Resource group, select Test-FW-RG.&lt;/p&gt; 
&lt;p&gt;7. For Location, select the same location that you used previously.&lt;/p&gt; 
&lt;p&gt;8. Select Create.&lt;/p&gt; 
&lt;p&gt;9. Select Refresh, and then select the Firewall-route route table.&lt;/p&gt; 
&lt;p&gt;10. Select Subnets and then select Associate.&lt;/p&gt; 
&lt;p&gt;11. Select Virtual network &amp;gt; Test-FW-VN.&lt;/p&gt; 
&lt;p&gt;12. For Subnet, select Workload-SN. Make sure that you select only the Workload-SN subnet for this route, otherwise your firewall will not work correctly.&lt;/p&gt; 
&lt;p&gt;13. Select OK.&lt;/p&gt; 
&lt;p&gt;14. Select Routes and then select Add.&lt;/p&gt; 
&lt;p&gt;15. For Route name, type fw-dg.&lt;/p&gt; 
&lt;p&gt;16. For Address prefix, type 0.0.0.0/0.&lt;/p&gt; 
&lt;p&gt;17. For Next hop type, select Virtual appliance.&lt;/p&gt; 
&lt;p&gt;Azure Firewall is actually a managed service, but virtual appliance works in this situation.&lt;/p&gt; 
&lt;p&gt;18. For Next hop address, type the private IP address for the firewall that you noted previously.&lt;/p&gt; 
&lt;p&gt;19. Select OK.&lt;/p&gt; 
&lt;p&gt;Configure an application rule&lt;/p&gt; 
&lt;p&gt;This is the application rule that allows outbound access to www.google.com.&lt;/p&gt; 
&lt;p&gt;1. Open the Test-FW-RG, and select the Test-FW01 firewall.&lt;br&gt; 2. On the Test-FW01 page, under Settings, select Rules.&lt;br&gt; 3. Select the Application rule collection tab.&lt;br&gt; 4. Select Add application rule collection.&lt;br&gt; 5. For Name, type App-Coll01.&lt;br&gt; 6. For Priority, type 200.&lt;br&gt; 7. For Action, select Allow.&lt;br&gt; 8. Under Rules, Target FQDNs, for Name, type Allow-Google.&lt;br&gt; 9. For Source type, select IP address.&lt;br&gt; 10. For Source, type 10.0.2.0/24.&lt;br&gt; 11. For Protocol:port, type http, https.&lt;br&gt; 12. For Target FQDNS, type www.google.com&lt;br&gt; 13. Select Add.&lt;/p&gt; 
&lt;p&gt;Azure Firewall includes a built-in rule collection for infrastructure FQDNs that are allowed by default. These FQDNs are specific for the platform and cannot be used for other purposes. For more information, see Infrastructure FQDNs.&lt;/p&gt; 
&lt;p&gt;Configure a network rule&lt;/p&gt; 
&lt;p&gt;This is the network rule that allows outbound access to two IP addresses at port 53 (DNS).&lt;/p&gt; 
&lt;p&gt;1. Select the Network rule collection tab.&lt;/p&gt; 
&lt;p&gt;2. Select Add network rule collection.&lt;/p&gt; 
&lt;p&gt;3. For Name, type Net-Coll01.&lt;/p&gt; 
&lt;p&gt;4. For Priority, type 200.&lt;/p&gt; 
&lt;p&gt;5. For Action, select Allow.&lt;/p&gt; 
&lt;p&gt;6. Under Rules, IP addresses, for Name, type Allow-DNS.&lt;/p&gt; 
&lt;p&gt;7. For Protocol, select UDP.&lt;/p&gt; 
&lt;p&gt;8. For Source type, select IP address.&lt;/p&gt; 
&lt;p&gt;9. For Source, type 10.0.2.0/24.&lt;/p&gt; 
&lt;p&gt;10. For Destination type select IP address.&lt;/p&gt; 
&lt;p&gt;11. For Destination address, type 209.244.0.3,209.244.0.4&lt;/p&gt; 
&lt;p&gt;These are public DNS servers operated by CenturyLink.&lt;/p&gt; 
&lt;p&gt;12. For Destination Ports, type 53.&lt;/p&gt; 
&lt;p&gt;13. Select Add.&lt;/p&gt; 
&lt;p&gt;Configure a DNAT rule&lt;/p&gt; 
&lt;p&gt;This rule allows you to connect a remote desktop to the Srv-Work virtual machine through the firewall.&lt;/p&gt; 
&lt;p&gt;1. Select the NAT rule collection tab.&lt;br&gt; 2. Select Add NAT rule collection.&lt;br&gt; 3. For Name, type rdp.&lt;br&gt; 4. For Priority, type 200.&lt;br&gt; 5. Under Rules, for Name, type rdp-nat.&lt;br&gt; 6. For Protocol, select TCP.&lt;br&gt; 7. For Source type, select IP address.&lt;br&gt; 8. For Source, type *.&lt;br&gt; 9. For Destination address, type the firewall public IP address.&lt;br&gt; 10. For Destination Ports, type 3389.&lt;br&gt; 11. For Translated address, type the Srv-work private IP address.&lt;br&gt; 12. For Translated port, type 3389.&lt;br&gt; 13. Select Add.&lt;/p&gt; 
&lt;p&gt;Change the primary and secondary DNS address for the Srv-Work network interface&lt;/p&gt; 
&lt;p&gt;For testing purposes in this tutorial, configure the server's primary and secondary DNS addresses. This is not a general Azure Firewall requirement.&lt;/p&gt; 
&lt;p&gt;1. On the Azure portal menu, select Resource groups or search for and select Resource groups from any page. Select the Test-FW-RG resource group.&lt;br&gt; 2. Select the network interface for the Srv-Work virtual machine.&lt;br&gt; 3. Under Settings, select DNS servers.&lt;br&gt; 4. Under DNS servers, select Custom.&lt;br&gt; 5. Type 209.244.0.3 in the Add DNS server text box, and 209.244.0.4 in the next text box.&lt;br&gt; 6. Select Save.&lt;br&gt; 7. Restart the Srv-Work virtual machine.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Tutorial: Deploy and configure Azure Firewall using the Azure portal" url="https://docs.microsoft.com/en-us/azure/firewall/tutorial-firewall-deploy-portal"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Test the firewall&lt;/p&gt;

  &lt;p&gt;Now, test the firewall to confirm that it works as expected.&lt;/p&gt;

  &lt;p&gt;1. Connect a remote desktop to firewall public IP address and sign in to the Srv-Work virtual machine.&lt;/p&gt;

  &lt;p&gt;2. Open Internet Explorer and browse to https://www.google.com.&lt;/p&gt;

  &lt;p&gt;3. Select OK &gt; Close on the Internet Explorer security alerts.&lt;/p&gt;

  &lt;p&gt;You should see the Google home page.&lt;/p&gt;

  &lt;p&gt;4. Browse to https://www.microsoft.com.&lt;/p&gt;

  &lt;p&gt;You should be blocked by the firewall.&lt;/p&gt;

  &lt;p&gt;So now you've verified that the firewall rules are working:&lt;/p&gt;

  &lt;p&gt;- You can browse to the one allowed FQDN, but not to any others.&lt;br /&gt;
- You can resolve DNS names using the configured external DNS server.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:08.876">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-AZURE-STORAGE1" name="Discover, classify, and label sensitive data for Azure Storage" issueId="" issueLink="" platform="" cost="0" risk="64" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Discover, classify, and label sensitive data for Azure Storage&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Establish and maintain an inventory of the sensitive data, based on the defined sensitive data scope. Use tools to discover, classify and label the in- scope sensitive data.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Use tools such as Microsoft Purview, Azure Information Protection and Azure SQL Data Discovery and Classification to centrally scan, classify and label the sensitive data resides in Azure Storage.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Connect to Azure Blob storage in Microsoft Purview" url="https://learn.microsoft.com/en-us/azure/purview/register-scan-azure-blob-storage-source"/>
            <reference name="Security Control v3: Data protection" url="https://learn.microsoft.com/en-us/security/benchmark/azure/security-controls-v3-data-protection#dp-1-discover-classify-and-label-sensitive-data"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>	&lt;p&gt;Ensure you are using a tool such as Microsoft Purview, Azure Information Protection and Azure SQL Data Discovery and Classification to centrally scan, classify and label the sensitive data that reside in Azure Storage.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:08.877">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-SECURITY-CENTER4" name="Enable Azure Defender" issueId="" issueLink="" platform="" cost="1" risk="62" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Enable Azure Defender&lt;/p&gt;

	&lt;p&gt;Rationale:&lt;br /&gt;
Azure Defender provides security alerts and advanced threat protection for virtual machines, SQL databases, containers, web applications, your network, and more.&lt;/p&gt;

	&lt;p&gt;When you enable Azure Defender from the Pricing and settings area of Azure Security Center, the following Defender plans are all enabled simultaneously and provide comprehensive defenses for the compute, data, and service layers of your environment:&lt;/p&gt;

	&lt;p&gt;- Azure Defender for servers&lt;br /&gt;
- Azure Defender for App Service&lt;br /&gt;
- Azure Defender for Storage&lt;br /&gt;
- Azure Defender for SQL&lt;br /&gt;
- Azure Defender for Kubernetes&lt;br /&gt;
- Azure Defender for container registries&lt;br /&gt;
- Azure Defender for Key Vault&lt;br /&gt;
- Azure Defender for Resource Manager&lt;br /&gt;
- Azure Defender for DNS&lt;/p&gt;

	&lt;p&gt;Each plan in Azure Defender is priced separately and can be individually set to on or off. For example, you might want to turn off Azure Defender for App Service on subscriptions that don't have an associated Azure App Service plan.&lt;/p&gt;

	&lt;p&gt;Remediation:&lt;br /&gt;
To enable Azure Defender on one subscription:&lt;/p&gt;

	&lt;p&gt;1. From Security Center's main menu, select Pricing &amp;amp; settings.&lt;br /&gt;
2. Select the subscription or workspace that you want to protect.&lt;br /&gt;
3. Select Azure Defender on to upgrade.&lt;br /&gt;
4. Select Save.&lt;/p&gt;

	&lt;p&gt;Tip: You'll notice that each plan in Azure Defender is priced separately and can be individually set to on or off. For example, you might want to turn off Azure Defender for App Service on subscriptions that don't have an associated Azure App Service plan.&lt;/p&gt;


	&lt;p&gt;To enable Azure Defender on multiple subscriptions or workspaces:&lt;/p&gt;

	&lt;p&gt;1. From Security Center's sidebar, select Getting started.&lt;/p&gt;

	&lt;p&gt;The Upgrade tab lists subscriptions and workspaces eligible for onboarding.&lt;/p&gt;

	&lt;p&gt;2. From the Select subscriptions and workspaces to enable Azure Defender on list, select the subscriptions and workspaces to upgrade and select Upgrade to enable Azure Defender.&lt;/p&gt;

	&lt;p&gt;- If you select subscriptions and workspaces that aren't eligible for trial, the next step will upgrade them and charges will begin.&lt;br /&gt;
- If you select a workspace that's eligible for a free trial, the next step will begin a trial.&lt;/p&gt;

	&lt;p&gt;Impact:&lt;br /&gt;
Turning on Azure Defender in Azure Security Center incurs an additional cost per resource.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Introduction to Azure Defender" url="https://docs.microsoft.com/en-us/azure/security-center/azure-defender"/>
            <reference name="Quickstart: Enable Azure Defender" url="https://docs.microsoft.com/en-us/azure/security-center/enable-azure-defender"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="2.1" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="2.2" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="2.3" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="2.4" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="2.5" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="2.6" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="2.7" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="2.8" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="DP-3" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="ES-1" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="IM-8" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;To ensure that Azure Defender is enabled from Azure portal&lt;/p&gt;

	&lt;p&gt;1. Go to Security Center&lt;br /&gt;
2. Select Pricing &amp;amp; settings blade&lt;br /&gt;
3. Click on the subscription name&lt;br /&gt;
4. Select the Azure Defender plans blade&lt;br /&gt;
5. Review the chosen pricing tier. For the desired resource type Plan should be set to On.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:08.877">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-NSG-FLOW-LOGS" name="Enable NSG flow logs" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Enable NSG flow logs&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; A network security group (NSG) enables you to filter inbound traffic to, and outbound traffic from, a virtual machine (VM). You can log network traffic that flows through an NSG with Network Watcher's NSG flow log capability.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Enable NSG flow log&lt;/p&gt; 
&lt;p&gt;1. NSG flow log data is written to an Azure Storage account. To create an Azure Storage account, select + Create a resource at the top, left corner of the portal.&lt;/p&gt; 
&lt;p&gt;2. Select Storage, then select Storage account - blob, file, table, queue.&lt;/p&gt; 
&lt;p&gt;3. Enter, or select the following information, accept the remaining defaults, and then select Create.&lt;/p&gt; 
&lt;p&gt;Name: 3-24 characters in length, can only contain lowercase letters and numbers, and must be unique across all Azure Storage accounts.&lt;br&gt; Location: Select East US&lt;br&gt; Resource group: Select Use existing, and then select myResourceGroup&lt;/p&gt; 
&lt;p&gt;The storage account may take around minute to create. Do not continue with remaining steps until the storage account is created. In all cases, the storage account must be in the same region as the NSG.&lt;/p&gt; 
&lt;p&gt;4. In the top, left corner of portal, select All services. In the Filter box, type Network Watcher. When Network Watcher appears in the search results, select it.&lt;/p&gt; 
&lt;p&gt;5. Under LOGS, select NSG flow logs.&lt;/p&gt; 
&lt;p&gt;6. From the list of NSGs, select the NSG named myVm-nsg.&lt;/p&gt; 
&lt;p&gt;7. Under Flow logs settings, select On.&lt;/p&gt; 
&lt;p&gt;8. Select the flow logging version. Version 2 contains flow-session statistics (Bytes and Packets)&lt;/p&gt; 
&lt;p&gt;9. Select the storage account that you created in step 3.&lt;/p&gt; 
&lt;p&gt;Note: NSG Flow Logs do not work with storage accounts that have hierarchical namespace enabled.&lt;/p&gt; 
&lt;p&gt;10. In the top, left corner of portal, select All services. In the Filter box, type Network Watcher. When Network Watcher appears in the search results, select it.&lt;/p&gt; 
&lt;p&gt;11. Set Retention (days) to 5, and then select Save.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Tutorial: Log network traffic to and from a virtual machine using the Azure portal" url="https://docs.microsoft.com/en-us/azure/network-watcher/network-watcher-nsg-flow-logging-portal"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that NSG flow logs are enabled.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:08.877">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-N09" name="Isolate Azure instances into different VNets" issueId="" issueLink="" platform="" cost="0" risk="61" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Specify a VNet for the Azure instance as a launch parameter. Applications that run on the Cloud instance can use the VNet security configuration when they access Azure resources.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  You can configure an Azure cloud service from Solution Explorer in Visual Studio. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Create a virtual network with multiple subnets" url="https://docs.microsoft.com/en-us/azure/virtual-network/virtual-networks-create-vnet-arm-pportal"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that the Azure instances are into different VNets.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:08.876">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="C-AZURE-STORAGE3" name="Restrict access with Azure Storage Firewall" issueId="" issueLink="" platform="" cost="0" risk="61" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Restrict access with Azure Storage Firewall&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; By default, storage accounts accept connections from clients on any network. Configure your storage account's firewall by restricting access to clients from specific public IP address ranges, select virtual networks, or specific Azure resources.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Change the default network access rule&lt;/p&gt; 
&lt;p&gt;1. Go to the storage account you want to secure.&lt;/p&gt; 
&lt;p&gt;2. Locate the Networking settings under Security + networking.&lt;/p&gt; 
&lt;p&gt;3. Choose which type of public network access you want to allow.&lt;/p&gt; 
&lt;p&gt;- To allow traffic from all networks, select Enabled from all networks.&lt;/p&gt; 
&lt;p&gt;- To allow traffic only from specific virtual networks, select Enabled from selected virtual networks and IP addresses.&lt;/p&gt; 
&lt;p&gt;- To block traffic from all networks, select Disabled.&lt;/p&gt; 
&lt;p&gt;4. Select Save to apply your changes.&lt;/p&gt; 
&lt;p&gt;Caution&lt;br&gt; By design, access to a storage account from trusted services takes the highest precedence over other network access restrictions. For this reason, if you set Public network access to Disabled after previously setting it to Enabled from selected virtual networks and IP addresses, any resource instances and exceptions you had previously configured, including Allow Azure services on the trusted services list to access this storage account, will remain in effect. As a result, those resources and services may still have access to the storage account after setting Public network access to Disabled.&lt;/p&gt; 
&lt;p&gt;For more information please see Reference URL.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; Changing this setting can impact your application's ability to connect to Azure Storage. Make sure to grant access to any allowed networks or set up access through a private endpoint before you change this setting.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Change the default network access rule" url="https://learn.microsoft.com/en-us/azure/storage/common/storage-network-security?tabs=azure-portal#change-the-default-network-access-rule"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>	&lt;p&gt;Ensure access is restricted with Azure Storage Firewall.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:08.877">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-MANAGED-ID" name="Use Managed Identities" issueId="" issueLink="" platform="" cost="0" risk="64" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Use Managed Identities&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Use Managed Identities to provide Azure services with an automatically managed identity in Azure AD. Managed Identities allows you to authenticate to any service that supports Azure AD authentication to Azure Resource Manager and can be used with API/Azure Portal/CLI/PowerShell.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Enable system-assigned managed identity during creation of a VM&lt;/p&gt; 
&lt;p&gt;To enable system-assigned managed identity on a VM during its creation, your account needs the Virtual Machine Contributor role assignment. No additional Azure AD directory role assignments are required.&lt;/p&gt; 
&lt;p&gt;- Under the Management tab in the Identity section, switch Managed service identity to On.&lt;/p&gt; 
&lt;p&gt;Enable system-assigned managed identity on an existing VM&lt;/p&gt; 
&lt;p&gt;To enable system-assigned managed identity on a VM that was originally provisioned without it, your account needs the Virtual Machine Contributor role assignment. No additional Azure AD directory role assignments are required.&lt;/p&gt; 
&lt;p&gt;1. Sign in to the Azure portal using an account associated with the Azure subscription that contains the VM.&lt;/p&gt; 
&lt;p&gt;2. Navigate to the desired Virtual Machine and select Identity.&lt;/p&gt; 
&lt;p&gt;3. Under System assigned, Status, select On and then click Save:&lt;/p&gt; 
&lt;p&gt;Assign a user-assigned managed identity to an existing VM&lt;/p&gt; 
&lt;p&gt;To assign a user-assigned identity to a VM, your account needs the Virtual Machine Contributor and Managed Identity Operator role assignments. No additional Azure AD directory role assignments are required.&lt;/p&gt; 
&lt;p&gt;1. Sign in to the Azure portal using an account associated with the Azure subscription that contains the VM.&lt;/p&gt; 
&lt;p&gt;2. Navigate to the desired VM and click Identity, User assigned and then +Add.&lt;/p&gt; 
&lt;p&gt;3. Click the user-assigned identity you want to add to the VM and then click Add.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Configure managed identities for Azure resources on a VM using the Azure portal" url="https://docs.microsoft.com/en-us/azure/active-directory/managed-identities-azure-resources/qs-configure-portal-windows-vm"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that you manage identities securely and automatically.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:08.877">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="AUTHORIZATION" name="Authorization" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="LOSS-CONTROL_ENV" name="Attackers gain unauthorized access to the control of the environment" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;Attackers could potentially gain unauthorized access to the control of the environment, due to user accounts - or role groups - not being well defined and configured. As a consequence attackers may be able to make changes without root approval.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="75" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-ACCESS-01">
                  <countermeasures>
                    <countermeasure ref="AZURE-MANAGED-ID" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZURE-MANAGED-ID" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Records" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="GENERAL" name="General" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="UNCONFIGURED-SECURITY" name="Attackers gain access to the system by exploiting weak security configurations" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>Weak security configurations like using sharing passwords in plain text, using weak passwords, using obsolete encryption algorithms, etc. can lead attackers to gain access to the system.</desc>
              <riskRating confidentiality="75" integrity="50" availability="25" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-16">
                  <countermeasures>
                    <countermeasure ref="AZ-S03" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-S03" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="AZURE-DATA-DELETED-EASY" name="Data is intentionally or accidentally deleted" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;Data can be deleted intentionally or accidentally and cannot be recovered. Attackers could rely on the lack of backup and recovery mechanisms.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-MONITOR-BACKUPS">
                  <countermeasures>
                    <countermeasure ref="C-AZURE-STORAGE2" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-AZURE-STORAGE2" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Records" value=""/>
              </customFields>
            </threat>
            <threat ref="ACCESS-TO-DATA" name="Sensitive data is compromised through unauthorized access to data storage" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;A data breach is a security violation in which sensitive, protected or confidential data is copied, transmitted, viewed, stolen or used by an individual unauthorized to do so. Sensitive data could be exposed due to a bad configuration in user permissions.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-ACCESS-DATA-01">
                  <countermeasures>
                    <countermeasure ref="C-AZURE-STORAGE1" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-AZURE-STORAGE1" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Records" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="LOGGING AND MONITORING" name="Logging and Monitoring" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="OWASP-A10-2017" name="Exploitation of insufficient logging and monitoring" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>	&lt;p&gt;Exploitation of insufficient logging and monitoring is the bedrock of nearly every major incident. Attackers rely on the lack of monitoring and timely response to achieve their goals without being detected.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="AZURE-NSG-FLOW-LOGS" mitigation="50"/>
                    <countermeasure ref="AZURE-SECURITY-CENTER4" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZURE-NSG-FLOW-LOGS" mitigation="50"/>
                <countermeasure ref="AZURE-SECURITY-CENTER4" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="Records" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="NETWORKING" name="Networking" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="AZURE-UNAUTHORISED-CONNECTION" name="Attackers perform unauthorized network access" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;Attackers could perform unauthorized network access to the resources through misconfigured ports or security network configurations.&lt;/p&gt;</desc>
              <riskRating confidentiality="25" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-NET-01">
                  <countermeasures>
                    <countermeasure ref="AZURE-IDS-IPS" mitigation="25"/>
                    <countermeasure ref="C-AZURE-STORAGE3" mitigation="25"/>
                    <countermeasure ref="C-AZURE-STORAGE4" mitigation="25"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AZURE-VNET01">
                  <countermeasures>
                    <countermeasure ref="AZ-N09" mitigation="25"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-N09" mitigation="25"/>
                <countermeasure ref="AZURE-IDS-IPS" mitigation="25"/>
                <countermeasure ref="C-AZURE-STORAGE3" mitigation="25"/>
                <countermeasure ref="C-AZURE-STORAGE4" mitigation="25"/>
              </countermeasures>
              <customFields>
                <customField ref="Records" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="6135d41e-7d29-4c1a-9751-756ecb50f608" diagramComponentId="febafb62-5628-47a2-91e5-580e8c1be864" ref="f0155081-ed2f-4930-b284-10d437597eec" name="Azure Environment" desc="" library="Microsoft-Azure" parentComponentRef="" componentDefinitionRef="microsoft-azure-environment">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses>
        <weakness ref="AZURE-LOGS03" name="Audit logs can be deleted" state="0" impact="100" issueId="" issueLink="">
          <desc>There is no external backups of log records. If logs are deleted, there is no way to recover
                        them.ed.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Activity Logs&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Push the button &amp;quot;Export&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;All Regions&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;Export to a storage account&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that all fields are correctly filled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:08.377">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CWE-16" name="Configuration" state="0" impact="100" issueId="" issueLink="">
          <desc>Weaknesses in this category are typically introduced during the
                        configuration of the software.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:08.094">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-MON02" name="Excessive use of administrator accounts" state="0" impact="100" issueId="" issueLink="">
          <desc>The administrator accounts are used for all actions, not only for administrative actions. This
                        is because these users have not got a personal or a user account to do the daily actions.&amp;nbsp;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that there is any rule to notify when there is a bad usage of the root
                            account.&lt;/li&gt;
                            &lt;li&gt;Check if these rules are enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:08.094">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-MON03" name="Lack of 2FA" state="0" impact="100" issueId="" issueLink="">
          <desc>Logging into the console without using Multi-factor Authentication (MFA) and without being detected. The connection without MFA must be audited and monitored, the correct security group must be informed and the connection must be validated.&amp;nbsp;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that there is any rule to notify when someone tries to login into the
                            console without MFA.&lt;/li&gt;
                            &lt;li&gt;Check if these rules are enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:08.572">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZ-W04" name="Misconfigured Authentication Method for Administrator Accounts" state="0" impact="100" issueId="" issueLink="">
          <desc>The authentication method &amp;quot;Multi-factor Authentication&amp;quot; for the Administrator accounts is not configured.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;Multi-Factor Authentication&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check all Administrator accounts have got the MFA flag enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:08.094">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="LOST-SECURITY-ALERTS" name="Misconfigured Security contact details" state="0" impact="100" issueId="" issueLink="">
          <desc>The security contact details for the Azure subscription are not properly configured.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Access &amp;quot;Azure Security Center&amp;quot;.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;In the &amp;quot;Recommendations&amp;quot; tab choose &amp;quot;Provide security
                            contact details&amp;quot;.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Check that all fields are filled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:08.094">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-IDENTITY-03" name="Misconfigured User Account" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        Key security settings such as resetting the password and other password controls are not
                        configured.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log in to the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each user has got an assigned account.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;Password reset&amp;quot; &amp;gt; &amp;quot;Authentication Method&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that the security confirmation measures and the security criteria are well
                            filled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:08.094">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-ACCESS-01" name="Misconfigured credentials for groups and roles" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        The credentials for groups and roles are not correctly configured and there are user accounts with more privileges than necessary.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each user has got assigned the correct groups.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All groups&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each group has got assigned the correct roles to achieve principle of
                            least privilege.&lt;/li&gt;
                            &lt;li&gt;Check that the roles for the Cloud Service are well assigned.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;div&gt;
                            &lt;/div&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:08.094">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-EXPIRATION-DATE" name="Misconfigured password expiration" state="0" impact="100" issueId="" issueLink="">
          <desc>The password expiration is not configured and users are not obliged to change their passwords.
                        Not change frequently the passwords gives facilities to attackers to obtain them.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            Check that the password expiration has got the correct values. Therefore, we can obtain the
                            values using the Get-MsolPasswordPolicy cmdlet from the Azure Active Directory Module for
                            Windows PowerShell. With the following command:
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;br /&gt;
                            &lt;/div&gt;
                            &lt;blockquote&gt;
                            &lt;div&gt;
                            PS C:\&amp;gt; Get-MsolPasswordPolicy -DomainName contoso.com
                            &lt;/div&gt;
                            &lt;/blockquote&gt;
                            &lt;div&gt;
                            &lt;br /&gt;
                            &lt;/div&gt;
                            &lt;div&gt;
                            More information: Doc MS Azure
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:08.094">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-VNET01" name="Networks for Azure resources are not properly segmented. Without proper segmentation, when attackers gain access to one resource, any other resources in the same VNet are compromised" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        Resources in the same VNet are compromised because when one of them is attacked and the
                        attackers gain access, they also gain access to all resources.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            Identify the resources and the Microsoft Azure instances.
                            &lt;/div&gt;
                            &lt;div&gt;
                            Check that the resources are in the correct VNet.
                            &lt;/div&gt;
                            &lt;div&gt;
                            Check that the Microsoft Azure instances&amp;nbsp;are into different VNets.
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:07.921">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-LOGS02" name="Non-auditable connections to the web application" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        The status connection or failed attempts cannot be audited because they are not recorded into
                        the logs.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Go to the Azure portal.&lt;/li&gt;
                            &lt;li&gt;Go to the blade for your web app and in &amp;quot;Monitoring&amp;quot; &amp;gt;&amp;gt;
                            &amp;quot;Diagnostics logs&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that the &amp;quot;Detailed error messages&amp;quot; is enabled.&lt;/li&gt;
                            &lt;li&gt;Check that the &amp;quot;Failed request tracing&amp;quot; is enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:08.377">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-LOGS01" name="Non-auditable resource changes" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        The Diagnostic Logs are not activated and configured. Therefore, the changes or the access to
                        the resources are not recorded into the logs.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Go to the Azure portal.&lt;/li&gt;
                            &lt;li&gt;Go to the blade for your web app and in &amp;quot;Monitoring&amp;quot; &amp;gt;&amp;gt;
                            &amp;quot;Diagnostics logs&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that &amp;quot;Application Logging (Filesystem)&amp;quot; and &amp;quot;Application
                            Logging (Blob)&amp;quot; are enabled.&lt;/li&gt;
                            &lt;li&gt;Check that the type &amp;quot;Storage&amp;quot; or &amp;quot;File System&amp;quot;
                            are enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:08.377">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="LOST-ACCESS-ROOT-01" name="The Root Account is mis-configured" state="0" impact="100" issueId="" issueLink="">
          <desc>The administrator account is not configured. The security question to recover or reset the
                        password and the authentication method are not configured.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:08.093">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-MON06" name="Undetected brute force attempts on MS Azure management console" state="0" impact="100" issueId="" issueLink="">
          <desc>The failure connection attempts (brute force) must be audited and monitored and correspondent
                        personnel must be alerted and informed.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that there is any rule to notify when several console login failure attempts
                            occur.&lt;/li&gt;
                            &lt;li&gt;Check if these rules are enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:08.572">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-MON05" name="Undetected changes in data encryption configuration" state="0" impact="100" issueId="" issueLink="">
          <desc>The changes on the database encryption must be audited and monitored. When there are changes
                        on the database encryption, the security group must be alerted.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that there is any rule to alert when the Transparent Data Encryption is
                            disabled.&lt;/li&gt;
                            &lt;li&gt;Check if these rules are enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:08.572">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-MON07" name="Undetected changes in network configuration" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        Changes in network configurations (NACLs, route and gateway tables) are not detected because
                        monitoring and alerting on the network is not configured to detect these changes.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that there is any rule to notify when the VPC NACL changes.&lt;/li&gt;
                            &lt;li&gt;Check that there is any rule to notify when the VPC route table changes.&lt;/li&gt;
                            &lt;li&gt;Check that there is any rule to notify when the VPC gateway changes.&lt;/li&gt;
                            &lt;li&gt;Check if these rules are enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:08.572">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-MON01" name="Undetected changes in security configurations" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        Monitoring and alerting for security configurations are not configured and changes cannot be
                        detected.&amp;nbsp;
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that there is any rule to alert when the Activity Logs configuration
                            changes.&lt;/li&gt;
                            &lt;li&gt;Check that there is any rule to alert when the security policy changes.&lt;/li&gt;
                            &lt;li&gt;Check that there is any rule to alert when the recommended configuration changes.&lt;/li&gt;
                            &lt;li&gt;Check that there is any rule to notify when activity alerts changes.&lt;/li&gt;
                            &lt;li&gt;Check if these rules are enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:08.572">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-MON04" name="Undetected changes in security groups" state="0" impact="100" issueId="" issueLink="">
          <desc>The changes in security groups must be traced and monitored and the correspondent personnel
                        must approve these changes. If the situation is not the correct, attackers can access to
                        security systems.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that there is any rule to notify when the security groups or security group
                            configurations change.&lt;/li&gt;
                            &lt;li&gt;Check if these rules are enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:08.571">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="AZ-A09" name="Apply RBAC with pre-defined policies added into groups or roles" issueId="" issueLink="" platform="" cost="0" risk="64" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Define and create groups that relate to job functions (administrators, developers, accounting,
                        etc.) and assign the relevant permissions for each group, and then assign IAM users to those
                        groups.&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &amp;nbsp;&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        All the users in an IAM group inherit the permissions assigned to the group. That way, you can
                        make changes for everyone in a group in just one place. As people move around in your company,
                        you can simply change what IAM group their IAM user belongs to. This method is known as Role
                        Based Access Control (RBAC).&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Remove a user from a group:&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;ol&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                        &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                        &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Click on the user name. All the groups the user belongs are there.&lt;/li&gt;
                        &lt;li&gt;Choose the group and &amp;quot;Remove&amp;quot;.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/ol&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Create a group and add user:&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;ol&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                        &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                        &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All groups&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Click &amp;quot;New Group&amp;quot; and fill the information.&lt;/li&gt;
                        &lt;li&gt;Search and add the user.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Create a group and add members in Azure Active Directory" url="https://docs.microsoft.com/en-us/azure/active-directory/active-directory-groups-create-azure-portal"/>
            <reference name="MS Azure - Use Role-Based Access Control to manage access to your Azure subscription resources" url="https://docs.microsoft.com/en-us/azure/active-directory/role-based-access-control-configure"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each user has got assigned the correct groups.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All groups&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each group has got assigned the correct roles.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:08.023">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-A08" name="Configure a strong security challenge questions for the user account" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        &lt;div&gt;
                        &lt;div&gt;
                        Activate and configure the security challenge question and the possibility of resetting the
                        password by confirming the user's identity is allowed. Make sure that the security confirmation
                        measures match the security criteria. Otherwise, it could make a weak confirmation and allow the&amp;nbsp;password
                        reset to malicious users.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation: &amp;nbsp;&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Log in to the Azure portal as an owner.&lt;/li&gt;
                        &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                        &lt;li&gt;Select &amp;quot;Password reset&amp;quot; &amp;gt; &amp;quot;Authentication Method&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Choose the security confirmation measures that match the security criteria and click
                        &amp;quot;Save&amp;quot;.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;ol&gt;
                        &lt;/ol&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Azure AD self-service password reset" url="https://docs.microsoft.com/en-us/azure/active-directory/active-directory-passwords-getting-started"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log in to the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;Password reset&amp;quot; &amp;gt; &amp;quot;Authentication Method&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that the security confirmation measures and the security criteria are well
                            filled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:08.024">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-A12" name="Configure password expiration" issueId="" issueLink="" platform="" cost="0" risk="64" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        &lt;div&gt;
                        Configure the password expiration to force after a determinate time, the password code shall be
                        changed for the users.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Configure password management to match security criteria. This value is configurable
                        using the Set-MsolPasswordPolicy cmdlet from the Azure Active Directory Module for Windows
                        PowerShell. With the following command as the example:&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        &lt;div&gt;
                        Set-MsolPasswordPolicy -ValidityPeriod 60 -NotificationDays 14&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;This command updates the tenant so that all users passwords expire after 60
                        days. The users receive notification 14 days prior to that expiry.
                        &lt;/blockquote&gt;
                        &lt;div&gt;
                        &lt;div&gt;
                        More information:&amp;nbsp;
                        &lt;a
                        href="https://docs.microsoft.com/en-us/powershell/module/msonline/set-msolpasswordpolicy?view=azureadps-1.0"&gt;Doc
                        MS Azure&lt;/a&gt;
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;ul&gt;
                        &lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Password policies and restrictions in Azure Active Directory" url="https://docs.microsoft.com/en-us/azure/active-directory/active-directory-passwords-policy"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            Check that the password expiration has got the correct values. Therefore, we can obtain the
                            values using the Get-MsolPasswordPolicy cmdlet from the Azure Active Directory Module for
                            Windows PowerShell. With the following command:
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;br /&gt;
                            &lt;/div&gt;
                            &lt;blockquote&gt;
                            &lt;div&gt;
                            PS C:\&amp;gt; Get-MsolPasswordPolicy -DomainName contoso.com
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;br /&gt;
                            &lt;/div&gt;
                            &lt;/blockquote&gt;More information:
                            &lt;a
                            href="https://docs.microsoft.com/en-us/powershell/module/msonline/get-msolpasswordpolicy?view=azureadps-1.0"&gt;Doc
                            MS Azure&lt;/a&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:08.024">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-A11" name="Configure roles for the Cloud Service" issueId="" issueLink="" platform="" cost="0" risk="64" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Define and create the roles for the Azure Cloud Service. For each role, define the permissions and also configure how that role runs. When you launch an Azure instance, you shall specify a role for the instance as a launch parameter. Applications that run on the Cloud instance use the role's credentials when they access Azure resources. This role's permissions determine what the application is allowed to do.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Configure an Azure cloud service from Solution Explorer in Visual Studio.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Use Role-Based Access Control to manage access to your Azure subscription resources" url="https://docs.microsoft.com/en-us/azure/active-directory/role-based-access-control-configure"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that the roles for the Cloud Service are well assigned.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:08.024">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-A02" name="Configure the security challenge questions for the administrator account" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Activate and configure the security challenge question and the possibility of resetting the password by confirming the user's identity is allowed. In case of being an owner account of the subscription that has full administration access, it is necessary to do this, as a security measure that this password is lost. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The security confirmation measures will depend on those specified by the Active Directory administrator. Make sure that the security confirmation measures match the security criteria. Otherwise, it could make a weak confirmation and allow the password reset to malicious users. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Using the console:&amp;nbsp;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;ol&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Open https://aka.ms/ssprsetup and Log into the account.&lt;/li&gt; 
   &lt;li&gt;Respond to security measures.&amp;nbsp;&lt;/li&gt; 
   &lt;li&gt;Once all needed controls are finished, click on accept.&lt;/li&gt; 
  &lt;/ol&gt; 
 &lt;/ol&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Using the portal:&lt;/li&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt; 
   &lt;li&gt;Select Azure Active Directory.&lt;/li&gt; 
   &lt;li&gt;Select &amp;quot;Password reset&amp;quot; &amp;gt; &amp;quot;Authentication Method&amp;quot;.&lt;/li&gt; 
   &lt;li&gt;Choose the security confirmation measures that match the security criteria and click &amp;quot;Save&amp;quot;.&lt;/li&gt; 
  &lt;/ol&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Azure AD self-service password reset" url="https://docs.microsoft.com/en-us/azure/active-directory/active-directory-passwords-getting-started"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Using the portal:
                            &lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;Password reset&amp;quot; &amp;gt; &amp;quot;Authentication Method&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that the security confirmation measures and the security criteria are filled
                            and enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:08.024">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-M04" name="Create alerts due of Transparent Data Encryption Deletion" issueId="" issueLink="" platform="" cost="0" risk="61" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Create alerts for the Activity Logs changes to monitor, audit and notify about the changes of
                        Transparent Data Encryption to the correspondent personnel. It's vital that these unauthorized
                        changes are detected.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Push &amp;quot;Add activity log alert&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Filling the fields with the corresponding values.&lt;/li&gt;
                        &lt;li&gt;Select in actions the personnel should be received this information.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Create activity log alerts" url="https://docs.microsoft.com/en-us/azure/monitoring-and-diagnostics/monitoring-activity-log-alerts"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that there is any rule to alert when the Transparent Data Encryption is
                            disabled.&lt;/li&gt;
                            &lt;li&gt;Check if these rules are enabled.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:08.495">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-M12" name="Create alerts for changes in security groups and in security groups configurations" issueId="" issueLink="" platform="" cost="0" risk="61" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Create alerts for the Activity Logs changes to monitor, audit and notify about the changes in
                        the security groups or in security groups configurations to the correspondent personnel. It's
                        vital that these unauthorized changes are detected.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Push &amp;quot;Add activity log alert&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Filling the fields with the corresponding values.&lt;/li&gt;
                        &lt;li&gt;Select in actions the personnel should be received this information.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Create activity log alerts" url="https://docs.microsoft.com/en-us/azure/monitoring-and-diagnostics/monitoring-activity-log-alerts"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that there is any rule to notify when the security groups or security group
                            configurations change.&lt;/li&gt;
                            &lt;li&gt;Check if these rules are enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:08.496">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-M01" name="Create alerts for changes on Activity Logs configuration" issueId="" issueLink="" platform="" cost="0" risk="61" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Create alerts for the Activity Logs changes to monitor, audit and notify about the changes to the correspondent personnel. It's vital that these unauthorized changes are detected.&lt;/p&gt;&lt;p&gt;Checklist:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Ensure that Activity Log Alert exists for:&amp;nbsp;&lt;ul&gt;&lt;li&gt;Create Policy Assignment&lt;/li&gt;&lt;li&gt;Delete Policy Assignment&lt;/li&gt;&lt;li&gt;Create or Update Network Security Group&lt;/li&gt;&lt;li&gt;Delete Network Security Group&lt;/li&gt;&lt;li&gt;Create or Update Network Security Group Rule&lt;/li&gt;&lt;li&gt;Delete Network Security Group Rule&lt;/li&gt;&lt;li&gt;Create or Update Security Solution&lt;/li&gt;&lt;li&gt;Delete Security Solution&lt;/li&gt;&lt;li&gt;Create or Update or Delete SQL Server Firewall Rule&lt;br&gt;&amp;nbsp;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;Remediation:&lt;/strong&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Go to Monitor&lt;/li&gt;&lt;li&gt;Select Alerts&lt;ol&gt;&lt;li&gt;For each one of the elements in the checklist, click On New Alert Rule&lt;ol&gt;&lt;li&gt;Under Scope, click Select resource&lt;/li&gt;&lt;li&gt;Select the appropriate subscription under Filter by subscription&lt;/li&gt;&lt;li&gt;Select Policy Assignment under Filter by resource type&lt;/li&gt;&lt;li&gt;Select All for Filter by location&lt;/li&gt;&lt;li&gt;Click on the subscription resource from the entries populated under Resource&lt;/li&gt;&lt;li&gt;Verify Selection preview shows All Policy assignment (policyAssignments) and your selected subscription name&lt;/li&gt;&lt;li&gt;Click Done&lt;/li&gt;&lt;li&gt;Under Condition click Add Condition&lt;/li&gt;&lt;li&gt;Select the corresponding element from the checklist&lt;/li&gt;&lt;li&gt;Click Done&lt;/li&gt;&lt;li&gt;Under Action group, select Add action groups and complete creation process or select appropriate action group&lt;/li&gt;&lt;li&gt;Under Alert rule details, enter Alert rule name and Description&lt;/li&gt;&lt;li&gt;Select appropriate resource group to save the alert to&lt;/li&gt;&lt;li&gt;Check Enable alert rule upon creation checkbox&lt;/li&gt;&lt;li&gt;Click Create alert rule&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;/ol&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Create activity log alerts" url="https://docs.microsoft.com/en-us/azure/monitoring-and-diagnostics/monitoring-activity-log-alerts"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5.2.1" supportedStandardRef="cis-azure-standard"/>
            <standard ref="5.2.1" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="5.2.2" supportedStandardRef="cis-azure-standard"/>
            <standard ref="5.2.2" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="5.2.3" supportedStandardRef="cis-azure-standard"/>
            <standard ref="5.2.3" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="5.2.4" supportedStandardRef="cis-azure-standard"/>
            <standard ref="5.2.4" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="5.2.5" supportedStandardRef="cis-azure-standard"/>
            <standard ref="5.2.5" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="5.2.6" supportedStandardRef="cis-azure-standard"/>
            <standard ref="5.2.6" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="5.2.7" supportedStandardRef="cis-azure-standard"/>
            <standard ref="5.2.7" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="5.2.8" supportedStandardRef="cis-azure-standard"/>
            <standard ref="5.2.8" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="5.2.9" supportedStandardRef="cis-azure-standard"/>
            <standard ref="5.2.9" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="LT-4" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Go to "Monitor" and then to "Alerts".&lt;/li&gt;&lt;li&gt;Check that there is any rule to alert when the Activity Logs configuration changes.&lt;/li&gt;&lt;li&gt;Check if these rules are enabled.&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:08.496">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-M02" name="Create alerts for security policy changes" issueId="" issueLink="" platform="" cost="0" risk="61" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Create alerts for the Activity Logs changes to monitor, audit and notify about the Management
                        Security Policies changes to the correspondent personnel. It's vital that these unauthorized
                        changes are detected.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Push &amp;quot;Add activity log alert&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Filling the fields with the corresponding values.&lt;/li&gt;
                        &lt;li&gt;Select in actions the personnel should be received this information.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Create activity log alerts" url="https://docs.microsoft.com/en-us/azure/monitoring-and-diagnostics/monitoring-activity-log-alerts"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that there is any rule to alert when the security policy changes.&lt;/li&gt;
                            &lt;li&gt;Check if these rules are enabled.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:08.496">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-M08" name="Create alerts for VPC gateway changes" issueId="" issueLink="" platform="" cost="0" risk="61" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Create alerts for the Activity Logs changes to monitor, audit and notify about the changes in
                        the VPC gateway tables to the correspondent personnel. It's vital that these unauthorized
                        changes are detected.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &amp;nbsp;VPC gateways are used as a means of sending traffic outside of VPC (i.e. to the
                        Internet) and are vital in ensuring traffic flows to correct destination. Therefore alerting on
                        changes to VPC gateways ensuring traffic continues to flow as expected via the correct gateway.&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Push &amp;quot;Add activity log alert&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Filling the fields with the corresponding values.&lt;/li&gt;
                        &lt;li&gt;Select in actions the personnel should be received this information.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Create activity log alerts" url="https://docs.microsoft.com/en-us/azure/monitoring-and-diagnostics/monitoring-activity-log-alerts"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that there is any rule to notify when the VPC gateway changes.&lt;/li&gt;
                            &lt;li&gt;Check if these rules are enabled.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:08.496">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-M06" name="Create alerts for VPC NACL changes" issueId="" issueLink="" platform="" cost="0" risk="61" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Create alerts for the Activity Logs changes to monitor, audit and notify about the changes in
                        the Network Access Control Lists (NACLs) to the correspondent personnel. It's vital that these
                        unauthorized changes are detected.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        The Network Access Control Lists (NACLs) control inbound and outbound access to &amp;amp; from
                        MS Azure subnets and work like packet filters to protect the network. Therefore alerting on
                        changes to NACLs help ensure that the subnets protected by them are not exposed.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Push &amp;quot;Add activity log alert&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Filling the fields with the corresponding values.&lt;/li&gt;
                        &lt;li&gt;Select in actions the personnel should be received this information.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Create activity log alerts" url="https://docs.microsoft.com/en-us/azure/monitoring-and-diagnostics/monitoring-activity-log-alerts"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that there is any rule to notify when the VPC NACL changes.&lt;/li&gt;
                            &lt;li&gt;Check if these rules are enabled.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:08.496">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-M07" name="Create alerts for VPC route table changes" issueId="" issueLink="" platform="" cost="0" risk="61" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Create alerts for the Activity Logs changes to monitor, audit and notify about the changes in
                        the VPC route tables to the correspondent personnel. It's vital that these unauthorized changes
                        are detected.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        VPC route table provides a means of routing network traffic between subnets and via gateways and
                        ensures traffic flows via the correct path. Therefore alerting on changes to route tables
                        ensuring the traffic continues to flow as expected.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Push &amp;quot;Add activity log alert&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Filling the fields with the corresponding values.&lt;/li&gt;
                        &lt;li&gt;Select in actions the personnel should be received this information.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Create activity log alerts" url="https://docs.microsoft.com/en-us/azure/monitoring-and-diagnostics/monitoring-activity-log-alerts"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that there is any rule to notify when the VPC route table changes.&lt;/li&gt;
                            &lt;li&gt;Check if these rules are enabled.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:08.496">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-M03" name="Create alerts to detect changes in the recommendation configurations" issueId="" issueLink="" platform="" cost="0" risk="61" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Create alerts for the Activity Logs changes to monitor, audit and notify about the changes in
                        the recommendation configurations to the correspondent personnel. It's vital that these
                        unauthorized changes are detected.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Push &amp;quot;Add activity log alert&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Filling the fields with the corresponding values.&lt;/li&gt;
                        &lt;li&gt;Select in actions the personnel should be received this information.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Create activity log alerts" url="https://docs.microsoft.com/en-us/azure/monitoring-and-diagnostics/monitoring-activity-log-alerts"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that there is any rule to alert when the recommended configuration changes.&lt;/li&gt;
                            &lt;li&gt;Check if these rules are enabled.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:08.496">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-M09" name="Create alerts to detect changes on activity alerts" issueId="" issueLink="" platform="" cost="0" risk="61" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Create alerts for the Activity Logs changes to monitor, audit and notify about the alert
                        modifications to the correspondent personnel. It's vital that these unauthorized changes are
                        detected.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Push &amp;quot;Add activity log alert&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Filling the fields with the corresponding values.&lt;/li&gt;
                        &lt;li&gt;Select in actions the personnel should be received this information.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Create activity log alerts" url="https://docs.microsoft.com/en-us/azure/monitoring-and-diagnostics/monitoring-activity-log-alerts"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that there is any rule to notify when activity alerts&amp;nbsp;changes.&lt;/li&gt;
                            &lt;li&gt;Check if these rules are enabled.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:08.496">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-M10" name="Create alerts to notify a bad usage of the root account" issueId="" issueLink="" platform="" cost="0" risk="61" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Create alerts for the Activity Logs changes to monitor, audit and notify about the usage of the
                        root accounts to the correspondent personnel. It's vital that these unauthorized changes are
                        detected.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Push &amp;quot;Add activity log alert&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Filling the fields with the corresponding values.&lt;/li&gt;
                        &lt;li&gt;Select in actions the personnel should be received this information.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Create activity log alerts" url="https://docs.microsoft.com/en-us/azure/monitoring-and-diagnostics/monitoring-activity-log-alerts"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that there is any rule to notify when there is a bad usage of the root
                            account.&lt;/li&gt;
                            &lt;li&gt;Check if these rules are enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:08.496">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-M11" name="Create alerts to notify about the console login without MFA" issueId="" issueLink="" platform="" cost="0" risk="61" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Create alerts for Activity Log changes to monitor, audit and notify about the user's login into
                        the console without Multi-factor Authentication to the correspondent personnel. It's vital that
                        these unauthorized changes are detected.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Push &amp;quot;Add activity log alert&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Filling the fields with the corresponding values.&lt;/li&gt;
                        &lt;li&gt;Select in actions the personnel should be received this information.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Create activity log alerts" url="https://docs.microsoft.com/en-us/azure/monitoring-and-diagnostics/monitoring-activity-log-alerts"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that there is any rule to notify when someone tries to login into the
                            console without MFA.&lt;/li&gt;
                            &lt;li&gt;Check if these rules are enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:08.496">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-M05" name="Create alerts to notify the console login failure attempts" issueId="" issueLink="" platform="" cost="0" risk="61" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Create alerts for the Activity Logs changes to monitor, audit and notify about the console login
                        failure attempts to the correspondent personnel. It's vital that these unauthorized changes are
                        detected.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Push &amp;quot;Add activity log alert&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Filling the fields with the corresponding values.&lt;/li&gt;
                        &lt;li&gt;Select in actions the personnel should be received this information.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Create activity log alerts" url="https://docs.microsoft.com/en-us/azure/monitoring-and-diagnostics/monitoring-activity-log-alerts"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that there is any rule to notify when several&amp;nbsp;console login failure
                            attempts occur.&lt;/li&gt;
                            &lt;li&gt;Check if these rules are enabled.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:08.496">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-AD19" name="Create a resource lock administrator role" issueId="" issueLink="" platform="" cost="0" risk="59" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Resource locking is a powerful protection mechanism that can prevent inadvertent modification/deletion of resources within Azure subscriptions/Resource Groups and is a recommended NIST configuration.&lt;/p&gt;&lt;p&gt;Rationale:&lt;/p&gt;&lt;p&gt;Given the resource lock functionality is outside of standard Role Based Access Control(RBAC), it would be prudent to create a resource lock administrator role to prevent inadvertent unlocking of resources.&lt;/p&gt;&lt;p&gt;Impact:&lt;/p&gt;&lt;p&gt;By adding this role is you can have specific permissions granted for managing just resource locks rather than needing to provide the wide owner or contributor role reducing the risk of the user being able to do unintentional damage.&lt;/p&gt;&lt;p&gt;Remediation:&lt;/p&gt;&lt;p&gt;From Azure Console&lt;/p&gt;&lt;ol&gt;&lt;li&gt;In the Azure portal, open a subscription or resource group where you want the custom role to be assignable.&lt;/li&gt;&lt;li&gt;Select Access control (IAM)&lt;/li&gt;&lt;li&gt;Click Add&lt;/li&gt;&lt;li&gt;Select Add custom role`.&lt;/li&gt;&lt;li&gt;In the Custom Role Name field enter Resource Lock Administrator&lt;/li&gt;&lt;li&gt;In the Description field enter Can Administer Resource Locks&lt;/li&gt;&lt;li&gt;For Baseline permissions select Start from scratch&lt;/li&gt;&lt;li&gt;Click next&lt;/li&gt;&lt;li&gt;In the Permissions tab select Add permissions&lt;/li&gt;&lt;li&gt;In the Search for a permission box, type in Microsoft.Authorization/locks to search for permissions.&lt;/li&gt;&lt;li&gt;Select the check box next to the permission called Microsoft.Authorization/locks&lt;/li&gt;&lt;li&gt;Click add&lt;/li&gt;&lt;li&gt;Click Review+create&lt;/li&gt;&lt;li&gt;Click Create&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;Assign the newly created role to the appropriate user. Using PowerShell: Below is a power shell definition for a resource lock administrator role created at an Azure Management group level&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;Import-Module Az.Accounts Connect-AzAccount $role = Get-AzRoleDefinition "User Access Administrator" $role.Id = $null $role.Name = "Resource Lock Administrator" $role.Description = "Can Administer Resource Locks" $role.Actions.Clear() $role.Actions.Add("Microsoft.Authorization/locks/*") $role.AssignableScopes.Clear() * Scope at the Management group level Management group $role.AssignableScopes.Add("/providers/Microsoft.Management/managementGroups/MG-Name") New-AzRoleDefinition -Role $role Get-AzureRmRoleDefinition "Resource Lock Administrator"&lt;/p&gt;&lt;/blockquote&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="1.23" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="14" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="16" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="8" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="9" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API7:2019-Security Misconfiguration" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="GS-2" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="GS-6" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="PA-1" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="PA-2" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="PA-5" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="PA-7" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;From Azure Console&lt;/p&gt;&lt;ol&gt;&lt;li&gt;In the Azure portal, open a subscription or resource group where you want the view assigned roles.&lt;/li&gt;&lt;li&gt;Select Access control (IAM)&lt;/li&gt;&lt;li&gt;Select Roles&lt;/li&gt;&lt;li&gt;Search for the custom role named &amp;lt;role_name&amp;gt; Ex. from remediation "Resource Lock Administrator"&lt;/li&gt;&lt;li&gt;Ensure that the role is assigned the appropriate user/users&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:08.024">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-A03" name="Create Individual Accounts for the administrator users" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Create an individual account for the administrator users and with this new accounts By creating individual Azure users for people accessing your account, you can give each Azure user a unique set of security credentials.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The administrator accounts shall be used for the administrative actions and for giving or revoke credentials to the user's account. The administrator account shall be not used as a normal user account. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt; 
  &lt;li&gt;Select Azure Active Directory.&lt;/li&gt; 
  &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt; 
  &lt;li&gt;Select &amp;quot;Add New User&amp;quot;.&lt;/li&gt; 
  &lt;li&gt;Fill the required information and click &amp;quot;Create&amp;quot;.&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt; 
&lt;div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Add new users to Azure Active Directory" url="https://docs.microsoft.com/en-us/azure/active-directory/add-users-azure-active-directory"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each user has got a user account assigned.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:08.024">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-A10" name="Create mechanisms to ensure the principle of least privilege is applied" issueId="" issueLink="" platform="" cost="0" risk="64" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Create the mechanisms to review periodically the group and user permissions to ensure the least privilege for the user accounts. Granting least privilege ensures that users only have the permissions required to complete their jobs rather than additional privileges that are not required. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Following this model ensures that, should an account be compromised, the blast radius of damage is limited&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Allocate privileges via groups or roles via the recommendation in "Use RBAC with pre-defined policies added into groups or roles".&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt; 
&lt;div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Create a group and add members in Azure Active Directory" url="https://docs.microsoft.com/en-us/azure/active-directory/active-directory-groups-create-azure-portal"/>
            <reference name="MS Azure - Use Role-Based Access Control to manage access to your Azure subscription resources" url="https://docs.microsoft.com/en-us/azure/active-directory/role-based-access-control-configure"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that the principle of least privilege is achieved in the assignation of roles and
                            groups to the users.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:08.024">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-L03" name="Enable Detailed error messages" issueId="" issueLink="" platform="" cost="0" risk="59" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Enable the detailed error information for HTTP status codes that indicate a failure (status code
                        400 or greater) is saved into the logs files. This may contain information that can help
                        determine why the server returned the error code.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Go to the Azure portal.&lt;/li&gt;
                        &lt;li&gt;Go to the blade for your web app and in &amp;quot;Monitoring&amp;quot; &amp;gt;&amp;gt;
                        &amp;quot;Diagnostics logs&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Enable the &amp;quot;Detailed error messages&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Push &amp;quot;Save&amp;quot; to save the changes.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Enable diagnostics logging for web apps in Azure App Service" url="https://docs.microsoft.com/en-us/azure/app-service-web/web-sites-enable-diagnostic-log"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Go to the Azure portal.&lt;/li&gt;
                            &lt;li&gt;Go to the blade for your web app and in &amp;quot;Monitoring&amp;quot; &amp;gt;&amp;gt;
                            &amp;quot;Diagnostics logs&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that the &amp;quot;Detailed error messages&amp;quot; is enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:08.324">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-L01" name="Enable diagnostic logs auditing for Microsoft Azure" issueId="" issueLink="" platform="" cost="0" risk="59" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Diagnostic Logs capture activity to the data access plane while the Activity log is a subscription-level log for the control plane. Resource-level diagnostic logs provide insight into operations that were performed within that resource itself, for example, getting a secret from a Key Vault. Currently, 32 Azure resources support Diagnostic Logging (See the references section for a complete list), including Network Security Groups, Load Balancers, Key Vault, AD, Logic Apps and CosmosDB. The content of these logs varies by resource type. For example, Windows event system logs are a category of diagnostics logs for VMs, and blob, table, and queue logs are categories of diagnostics logs for storage accounts.&lt;/p&gt;&lt;p&gt;A number of back-end services were not configured to log and store Diagnostic Logs for certain activities or for a sufficient length. It is crucial that logging systems are correctly configured to log all relevant activities and retain those logs for a sufficient length of time. By default, Diagnostic Logs are not enabled. Given that the mean time to detection in an enterprise is 240 days, a minimum retention period of two years is recommended.&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation:&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;The specific steps for configuring resources within the Azure console vary depending on resource, but typically the steps are:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Go to the resource&lt;/li&gt;&lt;li&gt;Click on Diagnostic settings&lt;/li&gt;&lt;li&gt;In the blade that appears, click "Add diagnostic setting"&lt;/li&gt;&lt;li&gt;Configure the diagnostic settings&lt;/li&gt;&lt;li&gt;Click on Save&lt;/li&gt;&lt;/ol&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Enable diagnostics logging for web apps in Azure App Service" url="https://docs.microsoft.com/en-us/azure/app-service-web/web-sites-enable-diagnostic-log"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5.3" supportedStandardRef="cis-azure-standard"/>
            <standard ref="5.3" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="LT-4" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="LT-5" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Go to the resource&lt;/li&gt;&lt;li&gt;Click on Diagnostic settings&lt;/li&gt;&lt;li&gt;In the blade that appears, click "Add diagnostic setting"&lt;/li&gt;&lt;li&gt;Configure the diagnostic settings&lt;/li&gt;&lt;li&gt;Click on Save&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:08.324">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-L04" name="Enable Failed Request Tracing" issueId="" issueLink="" platform="" cost="0" risk="59" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Enable to obtain the detailed information on failed requests, including a trace of the IIS components used to process the request and the time taken in each component. This can be useful if you are attempting to increase site performance or isolate what is causing a specific HTTP error to be returned. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Go to the Azure portal.&lt;/li&gt; 
  &lt;li&gt;Go to the blade for your web app and in "Monitoring" &amp;gt;&amp;gt; "Diagnostics logs".&lt;/li&gt; 
  &lt;li&gt;Enable the "Failed request tracing".&lt;/li&gt; 
  &lt;li&gt;Push "Save" to save the changes.&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Enable diagnostics logging for web apps in Azure App Service" url="https://docs.microsoft.com/en-us/azure/app-service-web/web-sites-enable-diagnostic-log"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Go to the Azure portal.&lt;/li&gt;
                            &lt;li&gt;Go to the blade for your web app and in &amp;quot;Monitoring&amp;quot; &amp;gt;&amp;gt;
                            &amp;quot;Diagnostics logs&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that the &amp;quot;Failed request tracing&amp;quot; is enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:08.324">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-A04" name="Enable MFA for Administrator &amp; Co Administrator accounts" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Enable multi-factor authentication (MFA) device enhances the security of the login process for the Administrator accounts. With MFA, users have a device that generates a unique authentication code (a one-time password, or OTP) and users must provide both their normal credentials (like their username and password) and the OTP. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The MFA device can either be a special piece of hardware, or it can be a virtual device. The recommendation for the Service Administrator &amp;amp; Co Administrator accounts is to use MFA to increase the level of security of the login process. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt; 
  &lt;li&gt;Select Azure Active Directory.&lt;/li&gt; 
  &lt;li&gt;Go into "Users and groups" &amp;gt; "All users".&lt;/li&gt; 
  &lt;li&gt;Select "Multi-Factor Authentication".&lt;/li&gt; 
  &lt;li&gt;Choose all the Service Administrator &amp;amp; Co Administrator accounts and enable MFA.&amp;nbsp;&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - How to require two-step verification for a user or group" url="https://docs.microsoft.com/en-us/azure/multi-factor-authentication/multi-factor-authentication-get-started-user-states"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;Multi-Factor Authentication&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check all Administrator accounts have got the MFA flag enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:08.024">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-L02" name="Enable Web Server Logging" issueId="" issueLink="" platform="" cost="0" risk="59" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Enable the Web Server logging to receive information about HTTP transactions using the W3C extended log file format. This is useful when determining overall site metrics such as the number of requests handled or how many requests are from a specific IP address. There are two ways to save the data: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;b&gt;File system: &lt;/b&gt;stores the application diagnostics information to the web app file system. These files can be accessed by FTP, or downloaded as a Zip archive by using the Azure PowerShell or Azure Command-Line Interface (Azure CLI).&lt;/li&gt; 
  &lt;li&gt;&lt;b&gt;Storage:&lt;/b&gt; stores the application diagnostics information in the specified Azure Storage Account and the logs are only accessible with a client account.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Go to the Azure portal.&lt;/li&gt; 
  &lt;li&gt;Go to the blade for your web app and in "Monitoring" &amp;gt;&amp;gt; "Diagnostics logs".&lt;/li&gt; 
  &lt;li&gt;Enable the type "Storage" or "File System" to activate this function.&lt;/li&gt; 
  &lt;li&gt;Push "Save" to save the changes.&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Enable diagnostics logging for web apps in Azure App Service" url="https://docs.microsoft.com/en-us/azure/app-service-web/web-sites-enable-diagnostic-log"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Go to the Azure portal.&lt;/li&gt;
                            &lt;li&gt;Go to the blade for your web app and in &amp;quot;Monitoring&amp;quot; &amp;gt;&amp;gt;
                            &amp;quot;Diagnostics logs&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that the type &amp;quot;Storage&amp;quot; or &amp;quot;File System&amp;quot;
                            are enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:08.324">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-L05" name="Export the Audit Logs to a storage account" issueId="" issueLink="" platform="" cost="0" risk="59" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Export the information of Audit Logs to a storage account. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Go to "Monitor" and then to "Activity Logs".&lt;/li&gt; 
  &lt;li&gt;Push the button "Export".&lt;/li&gt; 
  &lt;li&gt;Select "All Regions".&lt;/li&gt; 
  &lt;li&gt;Select "Export to a storage account" and select your account.&lt;/li&gt; 
  &lt;li&gt;Select the "Retention (days)" as minimum 90 days.&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Enable diagnostics logging for web apps in Azure App Service" url="https://docs.microsoft.com/en-us/azure/app-service-web/web-sites-enable-diagnostic-log"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Activity Logs&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Push the button &amp;quot;Export&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;All Regions&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;Export to a storage account&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that all fields are correctly filled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:08.324">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-N09" name="Isolate Azure instances into different VNets" issueId="" issueLink="" platform="" cost="0" risk="61" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Specify a VNet for the Azure instance as a launch parameter. Applications that run on the Cloud instance can use the VNet security configuration when they access Azure resources.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  You can configure an Azure cloud service from Solution Explorer in Visual Studio. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Create a virtual network with multiple subnets" url="https://docs.microsoft.com/en-us/azure/virtual-network/virtual-networks-create-vnet-arm-pportal"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that the Azure instances are into different VNets.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:07.885">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-N08" name="Isolate Azure resources into separate VNets by function" issueId="" issueLink="" platform="" cost="0" risk="61" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Place the resources into separate VNets according to their use (production, development, test).
                        Placing such resources accordingly ensures that a resource of a higher security level is not
                        exposed by the security settings of a lower labeled VNet.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Identify the resources that exist in an incorrect VNet.&lt;/li&gt;
                        &lt;li&gt;Migrate or move it to the correct Vnet.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Azure Virtual Network" url="https://docs.microsoft.com/en-us/azure/virtual-network/virtual-networks-overview"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Identify the resources that exist in an incorrect VNet.&lt;/li&gt;
                            &lt;li&gt;Check that the resources are into the correct Vnet.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:07.885">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-A07" name="Recertify user access" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Do regular reviews of accounts on the system and verify that it doesn't exist stoled or fake
                        accounts. With this process is ensured that there are not compromised accounts by former
                        employees or by attackers.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        At least every 90 days complete the following:&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Log in to the Azure portal as an owner.&lt;/li&gt;
                        &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                        &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;For any user that should not exist:&lt;/li&gt;
                        &lt;li&gt;Select the user.&lt;/li&gt;
                        &lt;li&gt;Click &amp;quot;Delete&amp;quot;.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Assign a user or group to an enterprise app in Azure Active Directory" url="https://docs.microsoft.com/en-us/azure/active-directory/active-directory-coreapps-assign-user-azure-portal"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Log in to the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each user has got an assigned account.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:08.024">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-A01" name="Register a Security contact for your Azure account" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Provide the security contact details for the Azure subscription. Microsoft Security Response Center (MSRC) performs security monitoring of the Azure network and infrastructure and receives threat intelligence and abuse complaints from third parties. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Microsoft will use this information provided to contact if the MSRC discovers that customer data has been accessed by an unlawful or unauthorized party. Also, this provides the means of ensuring these advisories are routed to the security team, especially if a distribution email address is used.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Access &amp;quot;Azure Security Center&amp;quot;.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;In the &amp;quot;Recommendations&amp;quot; tab choose &amp;quot;Provide security contact details&amp;quot;.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Once filled, save changes.&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Provide security contact details in Azure Security Center" url="https://docs.microsoft.com/en-us/azure/security-center/security-center-provide-security-contact-details"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Access &amp;quot;Azure Security Center&amp;quot;.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;In the &amp;quot;Recommendations&amp;quot; tab choose &amp;quot;Provide security
                            contact details&amp;quot;.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Check that all fields are filled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:08.024">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="API LOGGING AND AUDITING" name="API Logging and Auditing" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="UNAUDITABLE-CHANGES-AZURE" name="Attackers make undetected and unaudited changes to system configurations" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>If audit trails are not properly protected, an attacker could gain access to the
                                system, modify the status of resources or exfiltrate sensitive data without being
                                noticed.</desc>
              <riskRating confidentiality="25" integrity="75" availability="25" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-LOGS01">
                  <countermeasures>
                    <countermeasure ref="AZ-L01" mitigation="20"/>
                    <countermeasure ref="AZ-L02" mitigation="20"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AZURE-LOGS02">
                  <countermeasures>
                    <countermeasure ref="AZ-L03" mitigation="20"/>
                    <countermeasure ref="AZ-L04" mitigation="20"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AZURE-LOGS03">
                  <countermeasures>
                    <countermeasure ref="AZ-L05" mitigation="20"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-L01" mitigation="20"/>
                <countermeasure ref="AZ-L02" mitigation="20"/>
                <countermeasure ref="AZ-L03" mitigation="20"/>
                <countermeasure ref="AZ-L04" mitigation="20"/>
                <countermeasure ref="AZ-L05" mitigation="20"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="AUTHENTICATION" name="Authentication" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="AZURE-LOST-ACCESS-ROOT" name="Attackers gain unauthorized access to the root account due to the lack of configuration of the account" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;div&gt;Attackers could gain unauthorized access to the administrator account due to a lack of configuration of the account and its security mechanisms, making it possible to modify credentials and add/remove user accounts.
                                &lt;/div&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="AZ-W04">
                  <countermeasures>
                    <countermeasure ref="AZ-A04" mitigation="25"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AZURE-MON02">
                  <countermeasures>
                    <countermeasure ref="AZ-A03" mitigation="25"/>
                  </countermeasures>
                </weakness>
                <weakness ref="LOST-ACCESS-ROOT-01">
                  <countermeasures>
                    <countermeasure ref="AZ-A02" mitigation="25"/>
                  </countermeasures>
                </weakness>
                <weakness ref="LOST-SECURITY-ALERTS">
                  <countermeasures>
                    <countermeasure ref="AZ-A01" mitigation="25"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-A01" mitigation="25"/>
                <countermeasure ref="AZ-A02" mitigation="25"/>
                <countermeasure ref="AZ-A03" mitigation="25"/>
                <countermeasure ref="AZ-A04" mitigation="25"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="AZURE-LOST-ACCESS-USER" name="Attackers gain unauthorized access to the user account due to the lack of configuration of the account" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;Attackers could gain unauthorized access to the user account due to the lack of configuration of the account, for example, the security question to reset the password is configured incorrectly.&lt;/p&gt;</desc>
              <riskRating confidentiality="50" integrity="50" availability="50" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-IDENTITY-03">
                  <countermeasures>
                    <countermeasure ref="AZ-A07" mitigation="50"/>
                    <countermeasure ref="AZ-A08" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-A07" mitigation="50"/>
                <countermeasure ref="AZ-A08" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="AUTHORIZATION" name="Authorization" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="LOSS-CONTROL_ENV" name="Attackers gain unauthorized access to the control of the environment" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;Attackers could potentially gain unauthorized access to the control of the environment, due to user accounts - or role groups - not being well defined and configured. As a consequence attackers may be able to make changes without root approval.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="75" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-ACCESS-01">
                  <countermeasures>
                    <countermeasure ref="AZ-A09" mitigation="20"/>
                    <countermeasure ref="AZ-A10" mitigation="30"/>
                    <countermeasure ref="AZ-A11" mitigation="30"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AZURE-EXPIRATION-DATE">
                  <countermeasures>
                    <countermeasure ref="AZ-A12" mitigation="20"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-A09" mitigation="20"/>
                <countermeasure ref="AZ-A10" mitigation="30"/>
                <countermeasure ref="AZ-A11" mitigation="30"/>
                <countermeasure ref="AZ-A12" mitigation="20"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="GENERAL" name="General" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="UNCONFIGURED-SECURITY" name="Attackers gain access to the system by exploiting weak security configurations" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>Weak security configurations like using sharing passwords in plain text, using weak passwords, using obsolete encryption algorithms, etc. can lead attackers to gain access to the system.</desc>
              <riskRating confidentiality="75" integrity="50" availability="25" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-16">
                  <countermeasures>
                    <countermeasure ref="AZURE-AD19" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZURE-AD19" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="LOG ACTIVITY ALERTS" name="Log Activity alerts" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="UNAUTHORIZED-ACCESS-SYSTEMS" name="Attackers access the systems without being detected" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;Attackers gain access to the systems and are not detected and consequently, changes made by attackers can not be audited or detected.&lt;/p&gt;</desc>
              <riskRating confidentiality="50" integrity="25" availability="25" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-MON02">
                  <countermeasures>
                    <countermeasure ref="AZ-M10" mitigation="20"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AZURE-MON03">
                  <countermeasures>
                    <countermeasure ref="AZ-M11" mitigation="20"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AZURE-MON04">
                  <countermeasures>
                    <countermeasure ref="AZ-M12" mitigation="20"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AZURE-MON05">
                  <countermeasures>
                    <countermeasure ref="AZ-M04" mitigation="20"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AZURE-MON06">
                  <countermeasures>
                    <countermeasure ref="AZ-M05" mitigation="20"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-M04" mitigation="20"/>
                <countermeasure ref="AZ-M05" mitigation="20"/>
                <countermeasure ref="AZ-M10" mitigation="20"/>
                <countermeasure ref="AZ-M11" mitigation="20"/>
                <countermeasure ref="AZ-M12" mitigation="20"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="UNAUTHORIZED-ACCESS-SECURITY-SYSTEMS" name="Attackers gain undetected access to the security system configurations" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>Attackers could gain undetected access to the security system configurations and
                                changes made by attackers couldn't be audited or detected.
                            </desc>
              <riskRating confidentiality="50" integrity="50" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-MON01">
                  <countermeasures>
                    <countermeasure ref="AZ-M01" mitigation="25"/>
                    <countermeasure ref="AZ-M02" mitigation="25"/>
                    <countermeasure ref="AZ-M03" mitigation="25"/>
                    <countermeasure ref="AZ-M09" mitigation="25"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-M01" mitigation="25"/>
                <countermeasure ref="AZ-M02" mitigation="25"/>
                <countermeasure ref="AZ-M03" mitigation="25"/>
                <countermeasure ref="AZ-M09" mitigation="25"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="UNAUTHORIZED-ACCESS-NETWORK" name="Sensitive data is compromised through network access" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>Attackers gain undetected access to the network systems and changes made by the
                                attackers couldn't be audited or detected.
                            </desc>
              <riskRating confidentiality="50" integrity="50" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-MON07">
                  <countermeasures>
                    <countermeasure ref="AZ-M06" mitigation="40"/>
                    <countermeasure ref="AZ-M07" mitigation="30"/>
                    <countermeasure ref="AZ-M08" mitigation="30"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-M06" mitigation="40"/>
                <countermeasure ref="AZ-M07" mitigation="30"/>
                <countermeasure ref="AZ-M08" mitigation="30"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="NETWORKING" name="Networking" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="UNAUTHORIZED-CONNECTION" name="Attackers gain unauthorized connection to the resources" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;Attackers could potentially gain unauthorized connection to the resources through misconfigured ports or security network configurations.&lt;/p&gt;</desc>
              <riskRating confidentiality="50" integrity="50" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-VNET01">
                  <countermeasures>
                    <countermeasure ref="AZ-N08" mitigation="50"/>
                    <countermeasure ref="AZ-N09" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-N08" mitigation="50"/>
                <countermeasure ref="AZ-N09" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="733503d6-2b09-41fd-a781-4cb37620bd95" diagramComponentId="8ec57bb8-79e1-497f-a099-f46b8fc9381f" ref="b01ff1da-a352-44ee-9fe7-f2bd8e74a06c" name="Azure Cosmos DB" desc="" library="Microsoft-Azure" parentComponentRef="2f54dc81-5973-46d2-b9d4-f0919491c8c9" componentDefinitionRef="microsoft-azure-cosmos-db">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses>
        <weakness ref="DATA-TRANSMIT-CLEAR" name="Data is transmitted in clear text" state="0" impact="100" issueId="" issueLink="">
          <desc>Data is not protected when transmitted to applications or customers and it can be read or modified by unauthorized actors.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:05.298">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-MON02" name="Excessive use of administrator accounts" state="0" impact="100" issueId="" issueLink="">
          <desc>The administrator accounts are used for all actions, not only for administrative actions. This
                        is because these users have not got a personal or a user account to do the daily actions.&amp;nbsp;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that there is any rule to notify when there is a bad usage of the root
                            account.&lt;/li&gt;
                            &lt;li&gt;Check if these rules are enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:05.298">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CWE-778" name="Insufficient Logging" state="0" impact="100" issueId="" issueLink="">
          <desc>When a critical security event occurs, the software either does not record the event or omits important details about the event when logging it. When critical security events are not logged properly, such as in the case of a failed login attempt, this can make malicious behavior more difficult to detect and may hinder forensic analyses after a successful attack.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:05.298">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-MON03" name="Lack of 2FA" state="0" impact="100" issueId="" issueLink="">
          <desc>Logging into the console without using Multi-factor Authentication (MFA) and without being detected. The connection without MFA must be audited and monitored, the correct security group must be informed and the connection must be validated.&amp;nbsp;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that there is any rule to notify when someone tries to login into the
                            console without MFA.&lt;/li&gt;
                            &lt;li&gt;Check if these rules are enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:05.298">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZ-W04" name="Misconfigured Authentication Method for Administrator Accounts" state="0" impact="100" issueId="" issueLink="">
          <desc>The authentication method &amp;quot;Multi-factor Authentication&amp;quot; for the Administrator accounts is not configured.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;Multi-Factor Authentication&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check all Administrator accounts have got the MFA flag enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:05.298">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-IDENTITY-03" name="Misconfigured User Account" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        Key security settings such as resetting the password and other password controls are not
                        configured.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log in to the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each user has got an assigned account.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;Password reset&amp;quot; &amp;gt; &amp;quot;Authentication Method&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that the security confirmation measures and the security criteria are well
                            filled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:05.298">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-ACCESS-01" name="Misconfigured credentials for groups and roles" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        The credentials for groups and roles are not correctly configured and there are user accounts with more privileges than necessary.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each user has got assigned the correct groups.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All groups&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each group has got assigned the correct roles to achieve principle of
                            least privilege.&lt;/li&gt;
                            &lt;li&gt;Check that the roles for the Cloud Service are well assigned.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;div&gt;
                            &lt;/div&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:05.298">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-EXPIRATION-DATE" name="Misconfigured password expiration" state="0" impact="100" issueId="" issueLink="">
          <desc>The password expiration is not configured and users are not obliged to change their passwords.
                        Not change frequently the passwords gives facilities to attackers to obtain them.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            Check that the password expiration has got the correct values. Therefore, we can obtain the
                            values using the Get-MsolPasswordPolicy cmdlet from the Azure Active Directory Module for
                            Windows PowerShell. With the following command:
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;br /&gt;
                            &lt;/div&gt;
                            &lt;blockquote&gt;
                            &lt;div&gt;
                            PS C:\&amp;gt; Get-MsolPasswordPolicy -DomainName contoso.com
                            &lt;/div&gt;
                            &lt;/blockquote&gt;
                            &lt;div&gt;
                            &lt;br /&gt;
                            &lt;/div&gt;
                            &lt;div&gt;
                            More information: Doc MS Azure
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:05.298">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-VNET01" name="Networks for Azure resources are not properly segmented. Without proper segmentation, when attackers gain access to one resource, any other resources in the same VNet are compromised" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        Resources in the same VNet are compromised because when one of them is attacked and the
                        attackers gain access, they also gain access to all resources.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            Identify the resources and the Microsoft Azure instances.
                            &lt;/div&gt;
                            &lt;div&gt;
                            Check that the resources are in the correct VNet.
                            &lt;/div&gt;
                            &lt;div&gt;
                            Check that the Microsoft Azure instances&amp;nbsp;are into different VNets.
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:05.298">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-MONITOR-BACKUPS" name="There is not a recover or backup mechanism" state="0" impact="100" issueId="" issueLink="">
          <desc>There are not any processes or mechanisms to regularly save the data to another place in order to have an older version of the data to restore in case of loss. Consequently the data cannot be easily recovered or they cannot be recovered at all.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:05.297">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-NET-01" name="Unauthorized connection attempts on open ports" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        Receiving unauthorized connections to open ports makes systems vulnerable to attacks. To
                        avoid this, access to the network must be as restricted as possible, so that only the necessary
                        ports are open and the minimum inbound traffic is accepted.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Check that each Azure resources have got their Network Security Groups.&lt;/li&gt;
                            &lt;li&gt;Check that a set of these groups achieve with the principle of the least
                            privilege.&lt;/li&gt;
                            &lt;li&gt;Check that the inbound/outbound security rules are enabled and correctly
                            configured.&lt;/li&gt;
                            &lt;li&gt;In &amp;quot;Inbound security rules&amp;quot;, check that all the traffic from
                            0.0.0.0/0&amp;nbsp;is blocked.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:05.297">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="AZ-A09" name="Apply RBAC with pre-defined policies added into groups or roles" issueId="" issueLink="" platform="" cost="0" risk="64" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Define and create groups that relate to job functions (administrators, developers, accounting,
                        etc.) and assign the relevant permissions for each group, and then assign IAM users to those
                        groups.&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &amp;nbsp;&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        All the users in an IAM group inherit the permissions assigned to the group. That way, you can
                        make changes for everyone in a group in just one place. As people move around in your company,
                        you can simply change what IAM group their IAM user belongs to. This method is known as Role
                        Based Access Control (RBAC).&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Remove a user from a group:&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;ol&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                        &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                        &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Click on the user name. All the groups the user belongs are there.&lt;/li&gt;
                        &lt;li&gt;Choose the group and &amp;quot;Remove&amp;quot;.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/ol&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Create a group and add user:&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;ol&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                        &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                        &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All groups&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Click &amp;quot;New Group&amp;quot; and fill the information.&lt;/li&gt;
                        &lt;li&gt;Search and add the user.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Create a group and add members in Azure Active Directory" url="https://docs.microsoft.com/en-us/azure/active-directory/active-directory-groups-create-azure-portal"/>
            <reference name="MS Azure - Use Role-Based Access Control to manage access to your Azure subscription resources" url="https://docs.microsoft.com/en-us/azure/active-directory/role-based-access-control-configure"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each user has got assigned the correct groups.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All groups&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each group has got assigned the correct roles.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:05.203">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-A12" name="Configure password expiration" issueId="" issueLink="" platform="" cost="0" risk="64" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        &lt;div&gt;
                        Configure the password expiration to force after a determinate time, the password code shall be
                        changed for the users.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Configure password management to match security criteria. This value is configurable
                        using the Set-MsolPasswordPolicy cmdlet from the Azure Active Directory Module for Windows
                        PowerShell. With the following command as the example:&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        &lt;div&gt;
                        Set-MsolPasswordPolicy -ValidityPeriod 60 -NotificationDays 14&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;This command updates the tenant so that all users passwords expire after 60
                        days. The users receive notification 14 days prior to that expiry.
                        &lt;/blockquote&gt;
                        &lt;div&gt;
                        &lt;div&gt;
                        More information:&amp;nbsp;
                        &lt;a
                        href="https://docs.microsoft.com/en-us/powershell/module/msonline/set-msolpasswordpolicy?view=azureadps-1.0"&gt;Doc
                        MS Azure&lt;/a&gt;
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;ul&gt;
                        &lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Password policies and restrictions in Azure Active Directory" url="https://docs.microsoft.com/en-us/azure/active-directory/active-directory-passwords-policy"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            Check that the password expiration has got the correct values. Therefore, we can obtain the
                            values using the Get-MsolPasswordPolicy cmdlet from the Azure Active Directory Module for
                            Windows PowerShell. With the following command:
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;br /&gt;
                            &lt;/div&gt;
                            &lt;blockquote&gt;
                            &lt;div&gt;
                            PS C:\&amp;gt; Get-MsolPasswordPolicy -DomainName contoso.com
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;br /&gt;
                            &lt;/div&gt;
                            &lt;/blockquote&gt;More information:
                            &lt;a
                            href="https://docs.microsoft.com/en-us/powershell/module/msonline/get-msolpasswordpolicy?view=azureadps-1.0"&gt;Doc
                            MS Azure&lt;/a&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:05.204">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-A11" name="Configure roles for the Cloud Service" issueId="" issueLink="" platform="" cost="0" risk="64" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Define and create the roles for the Azure Cloud Service. For each role, define the permissions and also configure how that role runs. When you launch an Azure instance, you shall specify a role for the instance as a launch parameter. Applications that run on the Cloud instance use the role's credentials when they access Azure resources. This role's permissions determine what the application is allowed to do.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Configure an Azure cloud service from Solution Explorer in Visual Studio.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Use Role-Based Access Control to manage access to your Azure subscription resources" url="https://docs.microsoft.com/en-us/azure/active-directory/role-based-access-control-configure"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that the roles for the Cloud Service are well assigned.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:05.204">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-COSMOS-DB4" name="Configure the default consistency level for Azure Cosmos DB" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;Configure the default consistency level for your Azure Cosmos DB account&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Rationale:&lt;/div&gt;&lt;div&gt;Even within a single data center, Azure Cosmos DB automatically replicates data for high availability giving you the choice of consistency levels. This replication guarantees a 99.99% availability SLA for all single region accounts and all multi-region accounts with relaxed consistency, and 99.999% read availability on all multi-region database accounts.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Distributed databases that rely on replication for high availability, low latency, or both, must make a fundamental trade-off between the read consistency, availability, latency, and throughput as defined by the PACLC theorem. The linearizability of the strong consistency model is the gold standard of data programmability. But it adds a steep price from higher write latencies due to data having to replicate and commit across large distances. Strong consistency may also suffer from reduced availability (during failures) because data cannot replicate and commit in every region. Eventual consistency offers higher availability and better performance, but its more difficult to program applications because data may not be completely consistent across all regions.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Most commercially available distributed NoSQL databases available in the market today provide only strong and eventual consistency. Azure Cosmos DB offers five well-defined levels. From strongest to weakest, the levels are:&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;- Strong&lt;/div&gt;&lt;div&gt;- Bounded staleness&lt;/div&gt;&lt;div&gt;- Session&lt;/div&gt;&lt;div&gt;- Consistent prefix&lt;/div&gt;&lt;div&gt;- Eventual&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Remediation:&lt;/div&gt;&lt;div&gt;Configure the default consistency level&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;The default consistency level is the consistency level that clients use by default.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;To view or modify the default consistency level, sign in to the Azure portal. Find your Azure Cosmos account, and open the Default consistency pane. Select the level of consistency you want as the new default, and then select Save. The Azure portal also provides a visualization of different consistency levels with music notes.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Impact:&lt;/div&gt;&lt;div&gt;Each level provides availability and performance trade-offs.&lt;/div&gt;&lt;div&gt;E.g. Strong consistency may suffer from reduced availability (during failures) because data cannot replicate and commit in every region. Eventual consistency offers higher availability and better performance, but its more difficult to program applications because data may not be completely consistent across all regions.&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Consistency levels in Azure Cosmos DB" url="https://docs.microsoft.com/en-us/azure/cosmos-db/consistency-levels"/>
            <reference name="Manage consistency levels in Azure Cosmos DB" url="https://docs.microsoft.com/en-us/azure/cosmos-db/how-to-manage-consistency?tabs=portal%2Cdotnetv2%2Capi-async"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Ensure that you have chosen a default consistency level according to your needs.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:05.204">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-COSMOS-DB6" name="Create alerts for Azure Cosmos DB using Azure Monitor" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Create alerts for Azure Cosmos DB using Azure Monitor 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  Alerts are used to set up recurring tests to monitor the availability and responsiveness of your Azure Cosmos DB resources. Alerts can send you a notification in the form of an email, or execute an Azure Function when one of your metrics reaches the threshold or if a specific event is logged in the activity log. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  You can receive an alert based on the metrics, or the activity log events on your Azure Cosmos account: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - Metrics - The alert triggers when the value of a specified metric crosses a threshold you assign. For example, when the total request units consumed exceed 1000 RU/s. This alert is triggered both when the condition is first met and then afterwards when that condition is no longer being met. See the monitoring data reference article for different metrics available in Azure Cosmos DB. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - Activity log events - This alert triggers when a certain event occurs. For example, when the keys of your Azure Cosmos account are accessed or refreshed. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  You can set up alerts from the Azure Cosmos DB pane or the Azure Monitor service in the Azure portal. Both the interfaces offer the same options.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  Create an alert rule 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  This section shows how to create an alert when you receive an HTTP status code 429, which is received when the requests are rate limited. For examples, you may want to receive an alert when there are 100 or more rate limited requests. This article shows you how to configure an alert for such scenario by using the HTTP status code. You can use the similar steps to configure other types of alerts as well, you just need to choose a different condition based on your requirement. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  1. Sign into the Azure portal. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  2. Select Monitor from the left-hand navigation bar and select Alerts. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  3. Select the New alert rule button to open the Create alert rule pane. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  4. Fill out the Scope section: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - Open the Select resource pane and configure the following: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - Choose your subscription name. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - Select Azure Cosmos DB accounts for the resource type. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - The location of your Azure Cosmos account. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - After filling in the details, a list of Azure Cosmos accounts in the selected scope is displayed. Choose the one for which you want to configure alerts and select Done. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  5. Fill out the Condition section: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - Open the Select condition pane to open the Configure signal logic page and configure the following: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - Select a signal. The signal type can be a Metric or an Activity Log. Choose Metrics for this scenario. Because you want to get an alert when there are rate limiting issues on the total request units metric. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - Select All for the Monitor service 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - Choose a Signal name. To get an alert for HTTP status codes, choose the Total Request Units signal. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - In the next tab, you can define the logic for triggering an alert and use the chart to view trends of your Azure Cosmos account. The Total Request Units metric supports dimensions. These dimensions allow you to filter on the metric. If you don't select any dimension, this value is ignored. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - Choose StatusCode as the Dimension name. Select Add custom value and set the status code to 429. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - In the Alert logic, set the Threshold to Static. The static threshold uses a user-defined threshold value to evaluate the rule, whereas the dynamic thresholds use inbuilt machine learning algorithms to continuously learn the metric behavior pattern and calculate the thresholds automatically. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - Set the operator to Greater than, the Aggregation type to Total, and the Threshold value to 100. With this logic, if your client sees more than 100 requests that have a 429 status code, the alert is triggered. You can also configure the aggregation type, aggregation granularity, and the frequency of evaluation based on your requirement. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - After filling the form, select Done.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  6. Fill out the Action group section: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - On the Create rule pane, select an existing action group, or create a new action group. An action group enables you to define the action to be taken when an alert condition occurs. For this example, create a new action group to receive an email notification when the alert is triggered. Open the Add action group pane and fill out the following details: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - Action group name - The action group name must be unique within a resource group. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - Short name - The action group's Short name, this value is included in email and SMS notifications to identify which action group was the source of the notification. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - Choose the subscription and the resource group in which this action group will be created. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - Provide a name for your action and select Email/SMS message/Push/Voice as the Action Type. The following screenshot shows the details of the action type: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  7. Fill out the Alert rule details section: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - Define a name for the rule, provide an optional description, the severity level of the alert, choose whether to enable the rule upon rule creation, and then select Create rule alert to create the metric rule alert. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  After creating the alert, it will be active within 10 minutes. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Create alerts for Azure Cosmos DB using Azure Monitor" url="https://docs.microsoft.com/en-us/azure/cosmos-db/create-alerts"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  1. Go to "Monitor" and then to "Alerts". 
&lt;/div&gt; 
&lt;div&gt;
  2. Check that there is any rule to notify about Azure Cosmos DB events. 
&lt;/div&gt; 
&lt;div&gt;
  3. Check if these rules are enabled. 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:05.205">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-COSMOS-DB1" name="Create Azure Cosmos DB permissions per database" issueId="" issueLink="" platform="" cost="0" risk="64" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Create Azure Cosmos DB permissions per database 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  A permission resource is associated with a user and assigned at the container as well as partition key level. Each user may contain zero or more permissions. A permission resource provides access to a security token that the user needs when trying to access a specific container or data in a specific partition key. There are two available access levels that may be provided by a permission resource: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  All: The user has full permission on the resource. 
&lt;/div&gt; 
&lt;div&gt;
  Read: The user can only read the contents of the resource but cannot perform write, update, or delete operations on the resource. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  Code sample to create permission 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The following code sample shows how to create a permission resource, read the resource token of the permission resource, and associate the permissions with User1. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  // Create a permission on a container and specific partition key value 
&lt;/div&gt; 
&lt;div&gt;
  Container container = client.GetContainer("SalesDatabase", "OrdersContainer"); 
&lt;/div&gt; 
&lt;div&gt;
  user.CreatePermissionAsync( 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; new PermissionProperties( 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; id: "permissionUser1Orders", 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; permissionMode: PermissionMode.All, 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; container: benchmark.container, 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; resourcePartitionKey: new PartitionKey("012345"))); 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Code sample to read permission for user 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The following code snippet shows how to retrieve the permission associated with the user created above and instantiate a new CosmosClient on behalf of the user, scoped to a single partition key. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  //Read a permission, create user client session. 
&lt;/div&gt; 
&lt;div&gt;
  PermissionProperties permissionProperties = await user.GetPermission("permissionUser1Orders") 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  CosmosClient client = new CosmosClient(accountEndpoint: "MyEndpoint", authKeyOrResourceToken: permissionProperties.Token); 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Secure access to data in Azure Cosmos DB" url="https://docs.microsoft.com/en-us/azure/cosmos-db/secure-access-to-data"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Ensure that your users have the right permissions for their needs.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:05.205">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-A03" name="Create Individual Accounts for the administrator users" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Create an individual account for the administrator users and with this new accounts By creating individual Azure users for people accessing your account, you can give each Azure user a unique set of security credentials.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The administrator accounts shall be used for the administrative actions and for giving or revoke credentials to the user's account. The administrator account shall be not used as a normal user account. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt; 
  &lt;li&gt;Select Azure Active Directory.&lt;/li&gt; 
  &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt; 
  &lt;li&gt;Select &amp;quot;Add New User&amp;quot;.&lt;/li&gt; 
  &lt;li&gt;Fill the required information and click &amp;quot;Create&amp;quot;.&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt; 
&lt;div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Add new users to Azure Active Directory" url="https://docs.microsoft.com/en-us/azure/active-directory/add-users-azure-active-directory"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each user has got a user account assigned.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:05.205">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-A10" name="Create mechanisms to ensure the principle of least privilege is applied" issueId="" issueLink="" platform="" cost="0" risk="64" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Create the mechanisms to review periodically the group and user permissions to ensure the least privilege for the user accounts. Granting least privilege ensures that users only have the permissions required to complete their jobs rather than additional privileges that are not required. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Following this model ensures that, should an account be compromised, the blast radius of damage is limited&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Allocate privileges via groups or roles via the recommendation in "Use RBAC with pre-defined policies added into groups or roles".&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt; 
&lt;div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Create a group and add members in Azure Active Directory" url="https://docs.microsoft.com/en-us/azure/active-directory/active-directory-groups-create-azure-portal"/>
            <reference name="MS Azure - Use Role-Based Access Control to manage access to your Azure subscription resources" url="https://docs.microsoft.com/en-us/azure/active-directory/role-based-access-control-configure"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that the principle of least privilege is achieved in the assignation of roles and
                            groups to the users.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:05.205">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-L01" name="Enable diagnostic logs auditing for Microsoft Azure" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Diagnostic Logs capture activity to the data access plane while the Activity log is a subscription-level log for the control plane. Resource-level diagnostic logs provide insight into operations that were performed within that resource itself, for example, getting a secret from a Key Vault. Currently, 32 Azure resources support Diagnostic Logging (See the references section for a complete list), including Network Security Groups, Load Balancers, Key Vault, AD, Logic Apps and CosmosDB. The content of these logs varies by resource type. For example, Windows event system logs are a category of diagnostics logs for VMs, and blob, table, and queue logs are categories of diagnostics logs for storage accounts.&lt;/p&gt;&lt;p&gt;A number of back-end services were not configured to log and store Diagnostic Logs for certain activities or for a sufficient length. It is crucial that logging systems are correctly configured to log all relevant activities and retain those logs for a sufficient length of time. By default, Diagnostic Logs are not enabled. Given that the mean time to detection in an enterprise is 240 days, a minimum retention period of two years is recommended.&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation:&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;The specific steps for configuring resources within the Azure console vary depending on resource, but typically the steps are:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Go to the resource&lt;/li&gt;&lt;li&gt;Click on Diagnostic settings&lt;/li&gt;&lt;li&gt;In the blade that appears, click "Add diagnostic setting"&lt;/li&gt;&lt;li&gt;Configure the diagnostic settings&lt;/li&gt;&lt;li&gt;Click on Save&lt;/li&gt;&lt;/ol&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Enable diagnostics logging for web apps in Azure App Service" url="https://docs.microsoft.com/en-us/azure/app-service-web/web-sites-enable-diagnostic-log"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5.3" supportedStandardRef="cis-azure-standard"/>
            <standard ref="5.3" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="LT-4" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="LT-5" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Go to the resource&lt;/li&gt;&lt;li&gt;Click on Diagnostic settings&lt;/li&gt;&lt;li&gt;In the blade that appears, click "Add diagnostic setting"&lt;/li&gt;&lt;li&gt;Configure the diagnostic settings&lt;/li&gt;&lt;li&gt;Click on Save&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:05.205">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-A04" name="Enable MFA for Administrator &amp; Co Administrator accounts" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Enable multi-factor authentication (MFA) device enhances the security of the login process for the Administrator accounts. With MFA, users have a device that generates a unique authentication code (a one-time password, or OTP) and users must provide both their normal credentials (like their username and password) and the OTP. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The MFA device can either be a special piece of hardware, or it can be a virtual device. The recommendation for the Service Administrator &amp;amp; Co Administrator accounts is to use MFA to increase the level of security of the login process. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt; 
  &lt;li&gt;Select Azure Active Directory.&lt;/li&gt; 
  &lt;li&gt;Go into "Users and groups" &amp;gt; "All users".&lt;/li&gt; 
  &lt;li&gt;Select "Multi-Factor Authentication".&lt;/li&gt; 
  &lt;li&gt;Choose all the Service Administrator &amp;amp; Co Administrator accounts and enable MFA.&amp;nbsp;&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - How to require two-step verification for a user or group" url="https://docs.microsoft.com/en-us/azure/multi-factor-authentication/multi-factor-authentication-get-started-user-states"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;Multi-Factor Authentication&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check all Administrator accounts have got the MFA flag enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:05.205">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-USER-MFA" name="Enable per-user MFA" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Enable per-user MFA 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  Multi-factor authentication (MFA) is a process where a user is prompted during a sign-in event for additional forms of identification. This prompt could be to enter a code on their cellphone or to provide a fingerprint scan. When you require a second form of authentication, security is increased as this additional factor isn't something that's easy for an attacker to obtain or duplicate. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  To secure user sign-in events in Azure AD, you can require multi-factor authentication (MFA). Enabling Azure AD Multi-Factor Authentication using Conditional Access policies is the recommended approach to protect users. Conditional Access is an Azure AD Premium P1 or P2 feature that lets you apply rules to require MFA as needed in certain scenarios 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  For Azure AD free tenants without Conditional Access, you can use security defaults to protect users. Users are prompted for MFA as needed, but you can't define your own rules to control the behavior. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Features and licenses for Azure AD Multi-Factor Authentication" url="https://docs.microsoft.com/en-us/azure/active-directory/authentication/concept-mfa-licensing"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  1. Log into the Azure portal as an owner. 
&lt;/div&gt; 
&lt;div&gt;
  2. Select Azure Active Directory. 
&lt;/div&gt; 
&lt;div&gt;
  3. Go into "Users and groups" &amp;gt; "All users". 
&lt;/div&gt; 
&lt;div&gt;
  4. Select "Multi-Factor Authentication". 
&lt;/div&gt; 
&lt;div&gt;
  5. Ensure your users have the MFA flag enabled. 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:05.205">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-COSMOS-DB3" name="Enforce a minimum TLS version server-side for Azure Cosmos DB" issueId="" issueLink="" platform="" cost="0" risk="64" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Enforce a minimum TLS version server-side for Azure Cosmos DB 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  All connections to Azure Cosmos DB support HTTPS. Azure Cosmos DB also supports TLS 1.2. 
&lt;/div&gt; 
&lt;div&gt;
  It is possible to enforce a minimum TLS version server-side. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  To enforce a minimum TLS version server-side you have to contact Microsoft Azure at azurecosmosdbtls@service.microsoft.com. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Security in Azure Cosmos DB - overview" url="https://docs.microsoft.com/en-us/azure/cosmos-db/database-security"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Ensure that a minimum TLS version server-side is enforced.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:05.205">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-L05" name="Export the Audit Logs to a storage account" issueId="" issueLink="" platform="" cost="0" risk="62" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Export the information of Audit Logs to a storage account. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Go to "Monitor" and then to "Activity Logs".&lt;/li&gt; 
  &lt;li&gt;Push the button "Export".&lt;/li&gt; 
  &lt;li&gt;Select "All Regions".&lt;/li&gt; 
  &lt;li&gt;Select "Export to a storage account" and select your account.&lt;/li&gt; 
  &lt;li&gt;Select the "Retention (days)" as minimum 90 days.&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Enable diagnostics logging for web apps in Azure App Service" url="https://docs.microsoft.com/en-us/azure/app-service-web/web-sites-enable-diagnostic-log"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Activity Logs&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Push the button &amp;quot;Export&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;All Regions&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;Export to a storage account&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that all fields are correctly filled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:05.205">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-N09" name="Isolate Azure instances into different VNets" issueId="" issueLink="" platform="" cost="0" risk="61" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Specify a VNet for the Azure instance as a launch parameter. Applications that run on the Cloud instance can use the VNet security configuration when they access Azure resources.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  You can configure an Azure cloud service from Solution Explorer in Visual Studio. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Create a virtual network with multiple subnets" url="https://docs.microsoft.com/en-us/azure/virtual-network/virtual-networks-create-vnet-arm-pportal"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that the Azure instances are into different VNets.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:05.205">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-COSMOS-DB5" name="Modify the backup interval and retention period for Azure Cosmos DB" issueId="" issueLink="" platform="" cost="1" risk="62" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Modify the backup interval and retention period for Azure Cosmos DB 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  Azure Cosmos DB automatically takes a full backup of your data for every 4 hours and at any point of time, the latest two backups are stored. This configuration is the default option and it's offered without any additional cost. You can change the default backup interval and retention period during the Azure Cosmos account creation or after the account is created. The backup configuration is set at the Azure Cosmos account level and you need to configure it on each account. After you configure the backup options for an account, it's applied to all the containers within that account. Currently you can change them backup options from Azure portal only. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  If you have accidentally deleted or corrupted your data, before you create a support request to restore the data, make sure to increase the backup retention for your account to at least seven days. It's best to increase your retention within 8 hours of this event. This way, the Azure Cosmos DB team has enough time to restore your account. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  CAUTION: Azure support is available for selected plans only such as Standard, Developer, and plans higher than those. Azure support is not available with Basic plan. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  Use the following steps to change the default backup options for an existing Azure Cosmos account: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  1. Sign into the Azure portal. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  2. Navigate to your Azure Cosmos account and open the Backup &amp;amp; Restore pane. Update the backup interval and the backup retention period as required. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - Backup Interval - It's the interval at which Azure Cosmos DB attempts to take a backup of your data. Backup takes a non-zero amount of time and in some case it could potentially fail due to downstream dependencies. Azure Cosmos DB tries its best to take a backup at the configured interval, however, it doesn't guarantee that the backup completes within that time interval. You can configure this value in hours or minutes. Backup Interval cannot be less than 1 hour and greater than 24 hours. When you change this interval, the new interval takes into effect starting from the time when the last backup was taken. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - Backup Retention - It represents the period where each backup is retained. You can configure it in hours or days. The minimum retention period can't be less than two times the backup interval (in hours) and it can't be greater than 720 hours. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - Copies of data retained - By default, two backup copies of your data are offered at free of charge. There is an additional charge if you need more than two copies. See the Consumed Storage section in the Pricing page to know the exact price for additional copies. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  If you configure backup options during the account creation, you can configure the Backup policy, which is either Periodic or Continuous. The periodic policy allows you to configure the Backup interval and Backup retention. The continuous policy is currently available by sign-up only. The Azure Cosmos DB team will assess your workload and approve your request. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Online backup and on-demand data restore in Azure Cosmos DB" url="https://docs.microsoft.com/en-us/azure/cosmos-db/online-backup-and-restore"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Ensure that the backup interval and retention period for Azure Cosmos DB is configured according to your needs, and you are using a plan eligible for Azure support.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:05.205">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-A07" name="Recertify user access" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Do regular reviews of accounts on the system and verify that it doesn't exist stoled or fake
                        accounts. With this process is ensured that there are not compromised accounts by former
                        employees or by attackers.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        At least every 90 days complete the following:&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Log in to the Azure portal as an owner.&lt;/li&gt;
                        &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                        &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;For any user that should not exist:&lt;/li&gt;
                        &lt;li&gt;Select the user.&lt;/li&gt;
                        &lt;li&gt;Click &amp;quot;Delete&amp;quot;.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Assign a user or group to an enterprise app in Azure Active Directory" url="https://docs.microsoft.com/en-us/azure/active-directory/active-directory-coreapps-assign-user-azure-portal"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Log in to the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each user has got an assigned account.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:05.206">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-COSMOS-DB2" name="Rotate Azure Cosmos DB primary keys" issueId="" issueLink="" platform="" cost="0" risk="64" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Rotate Azure Cosmos DB primary keys 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  Microsoft recommends that you regularly rotate and regenerate your keys. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  The process of rotating your primary key is simple. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  1. Navigate to the Azure portal to retrieve your secondary key. 
&lt;/div&gt; 
&lt;div&gt;
  2. Replace your primary key with your secondary key in your application. Make sure that all the Cosmos DB clients across all the deployments are promptly restarted and will start using the updated key. 
&lt;/div&gt; 
&lt;div&gt;
  3. Rotate the primary key in the Azure portal. 
&lt;/div&gt; 
&lt;div&gt;
  4. Validate the new primary key works against all resource. Key rotation process can take anywhere from less than a minute to hours depending on the size of the Cosmos DB account. 
&lt;/div&gt; 
&lt;div&gt;
  5. Replace the secondary key with the new primary key. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Secure access to data in Azure Cosmos DB" url="https://docs.microsoft.com/en-us/azure/cosmos-db/secure-access-to-data"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Ensure that you rotate your primary key regularly.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:05.206">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-N01" name="Set Network Security Groups to be as restrictive as possible" issueId="" issueLink="" platform="" cost="0" risk="61" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Use Network Security Groups (NSG) to filter the ingress/egress network traffic to Azure resources. Set the limit all the traffic (ingress/egress) on the NSG in order to force the use of least privilege into the NSG.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Identify Azure resources for each NSG.&lt;/li&gt; 
  &lt;li&gt;Create a set of least privilege NSG for those resources.&lt;/li&gt; 
  &lt;li&gt;Place the resources in those security groups.&lt;/li&gt; 
  &lt;li&gt;Change the inbound/outbound security rules to fulfill the least privilege.&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - How to open ports to a virtual machine with the Azure portal" url="https://docs.microsoft.com/en-us/azure/virtual-machines/windows/nsg-quickstart-portal"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Check that each Azure resources has got their Network Security Groups.&lt;/li&gt;
                            &lt;li&gt;Check that a set of these groups achieve with the principle of the least
                            privilege.&lt;/li&gt;
                            &lt;li&gt;Check that the inbound/outbound security rules are enabled and correctly
                            configured.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:05.206">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-N02" name="Use Network Security Groups to block inbound port traffic from 0.0.0.0/0" issueId="" issueLink="" platform="" cost="0" risk="61" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Use Network Security Groups (NSG) to filter the ingress/egress network traffic to Azure resources. Set the limit inbound access to all TCP or all ports to avoid undue exposure to risk.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt; 
  &lt;li&gt;Select Network Security Groups.&lt;/li&gt; 
  &lt;li&gt;Choose the NSG to edit (or create a new one).&lt;/li&gt; 
  &lt;li&gt;In "Inbound security rules":&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;ul&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Remove all rules that allow port traffic.&lt;/li&gt; 
   &lt;li&gt;Add a rule to deny port traffic&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/ul&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - How to open ports to a virtual machine with the Azure portal" url="https://docs.microsoft.com/en-us/azure/virtual-machines/windows/nsg-quickstart-portal"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Network Security Groups.&lt;/li&gt;
                            &lt;li&gt;Choose the NSG to view one of them.&lt;/li&gt;
                            &lt;li&gt;In &amp;quot;Inbound security rules&amp;quot;, check that all the traffic from
                            0.0.0.0/0 is are blocked.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:09:05.206">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="authentication" name="Authentication" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="AZURE-LOST-ACCESS-ROOT" name="Attackers gain unauthorized access to the root account due to the lack of configuration of the account" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;div&gt;Attackers could gain unauthorized access to the administrator account due to a lack of configuration of the account and its security mechanisms, making it possible to modify credentials and add/remove user accounts.
                                &lt;/div&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="AZ-W04">
                  <countermeasures>
                    <countermeasure ref="AZ-A04" mitigation="50"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AZURE-MON02">
                  <countermeasures>
                    <countermeasure ref="AZ-A03" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-A03" mitigation="50"/>
                <countermeasure ref="AZ-A04" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="AZURE-LOST-ACCESS-USER" name="Attackers gain unauthorized access to the user account due to the lack of configuration of the account" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;Attackers could gain unauthorized access to the user account due to the lack of configuration of the account, for example, the security question to reset the password is configured incorrectly.&lt;/p&gt;</desc>
              <riskRating confidentiality="50" integrity="50" availability="50" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-IDENTITY-03">
                  <countermeasures>
                    <countermeasure ref="AZ-A07" mitigation="50"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AZURE-MON03">
                  <countermeasures>
                    <countermeasure ref="AZURE-USER-MFA" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-A07" mitigation="50"/>
                <countermeasure ref="AZURE-USER-MFA" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="authorization" name="Authorization" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="LOSS-CONTROL_ENV" name="Attackers gain unauthorized access to the control of the environment" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;Attackers could potentially gain unauthorized access to the control of the environment, due to user accounts - or role groups - not being well defined and configured. As a consequence attackers may be able to make changes without root approval.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="75" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-ACCESS-01">
                  <countermeasures>
                    <countermeasure ref="AZ-A09" mitigation="20"/>
                    <countermeasure ref="AZ-A10" mitigation="16"/>
                    <countermeasure ref="AZ-A11" mitigation="16"/>
                    <countermeasure ref="AZURE-COSMOS-DB1" mitigation="16"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AZURE-EXPIRATION-DATE">
                  <countermeasures>
                    <countermeasure ref="AZ-A12" mitigation="16"/>
                    <countermeasure ref="AZURE-COSMOS-DB2" mitigation="16"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-A09" mitigation="20"/>
                <countermeasure ref="AZ-A10" mitigation="16"/>
                <countermeasure ref="AZ-A11" mitigation="16"/>
                <countermeasure ref="AZ-A12" mitigation="16"/>
                <countermeasure ref="AZURE-COSMOS-DB1" mitigation="16"/>
                <countermeasure ref="AZURE-COSMOS-DB2" mitigation="16"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="general" name="General" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="AZURE-DATA-DELETED-EASY" name="Data is intentionally or accidentally deleted" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;Data can be deleted intentionally or accidentally and cannot be recovered. Attackers could rely on the lack of backup and recovery mechanisms.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-MONITOR-BACKUPS">
                  <countermeasures>
                    <countermeasure ref="AZURE-COSMOS-DB4" mitigation="50"/>
                    <countermeasure ref="AZURE-COSMOS-DB5" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZURE-COSMOS-DB4" mitigation="50"/>
                <countermeasure ref="AZURE-COSMOS-DB5" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="logging-and-monitoring" name="Logging and Monitoring" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="OWASP A10:2017" name="Exploitation of insufficient logging and monitoring" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>	&lt;p&gt;Exploitation of insufficient logging and monitoring is the bedrock of nearly every major incident.&lt;br /&gt;
 Attackers rely on the lack of monitoring and timely response to achieve their goals without being detected.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="AZ-L01" mitigation="34"/>
                    <countermeasure ref="AZ-L05" mitigation="33"/>
                    <countermeasure ref="AZURE-COSMOS-DB6" mitigation="33"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-L01" mitigation="34"/>
                <countermeasure ref="AZ-L05" mitigation="33"/>
                <countermeasure ref="AZURE-COSMOS-DB6" mitigation="33"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="networking" name="Networking" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="AZURE-UNAUTHORISED-CONNECTION" name="Attackers perform unauthorized network access" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;Attackers could perform unauthorized network access to the resources through misconfigured ports or security network configurations.&lt;/p&gt;</desc>
              <riskRating confidentiality="25" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-NET-01">
                  <countermeasures>
                    <countermeasure ref="AZ-N01" mitigation="34"/>
                    <countermeasure ref="AZ-N02" mitigation="33"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AZURE-VNET01">
                  <countermeasures>
                    <countermeasure ref="AZ-N09" mitigation="33"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-N01" mitigation="34"/>
                <countermeasure ref="AZ-N02" mitigation="33"/>
                <countermeasure ref="AZ-N09" mitigation="33"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="DATA-EXPOSED-CHANNEL" name="The data is exposed through the transmission channel" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;Attackers can obtain the data through the transmitted channel because this does not have the security measures in place to protect the data&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="DATA-TRANSMIT-CLEAR">
                  <countermeasures>
                    <countermeasure ref="AZURE-COSMOS-DB3" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZURE-COSMOS-DB3" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
  </components>
</template>
