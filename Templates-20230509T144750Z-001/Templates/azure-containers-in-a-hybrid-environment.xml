<?xml version="1.0" encoding="UTF-8"?>
<template ref="azure-containers-in-a-hybrid-environment" name="Azure - Containers in a Hybrid Environment" tags="">
  <desc/>
  <diagram draft="false">
    <schema></schema>
  </diagram>
  <trustZones>
    <trustZone ref="public-cloud" uuid="b61d6911-338d-46a8-9f39-8dcd24abfe91" name="Public Cloud" desc="Public cloud services" trustRating="60"/>
    <trustZone ref="private-secured" uuid="2ab4effa-40b7-4cd2-ba81-8247d29a6f2d" name="Private Secured" desc="A secured zone within a trusted private zone" trustRating="100"/>
    <trustZone ref="internet" uuid="f0ba7722-39b6-4c81-8290-a30a248bb8d9" name="Internet" desc="Untrusted Internet public zone" trustRating="1"/>
  </trustZones>
  <questions/>
  <assets/>
  <settings/>
  <dataflows>
    <dataflow name="Azure Kubernetes Service -&gt; Azure Private Link" ref="03474af7-0d95-4739-83e1-dd600963be65" source="a004ceee-6065-4196-a1ce-15337fda686c" target="f15c4428-4d47-4024-bbf5-e1582ce0659a">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Azure Private Link -&gt; Azure Container Registry" ref="1a0ad5c0-d9ce-4016-87f2-b4e1d80f5ae0" source="f15c4428-4d47-4024-bbf5-e1582ce0659a" target="56fc26e4-799f-46dd-a08c-32d3804659f6">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Azure Container Instances -&gt; Azure Kubernetes Service" ref="1b58566c-132f-4991-864a-d1a3d018ff7d" source="e8b36dfe-741a-4fc9-95fe-c744d87af442" target="a004ceee-6065-4196-a1ce-15337fda686c">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Azure Monitor -&gt; Developer Machines" ref="287b19c9-a19a-4498-913a-aabb52976239" source="ad9c3882-d6ad-4aa3-8509-779e778b384a" target="ddd069fc-f527-4cc5-bc8a-071f28c49100">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Azure Cosmos DB -&gt; Azure Key Vault" ref="5ae6e833-7853-41ee-a3d6-4d6f67f40a3d" source="bf796b07-9835-4fbf-b0a0-e6212e234f14" target="0bdc7eaf-e703-4edf-9902-c6c77916858d">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="End user -&gt; Azure Web Apps" ref="6a61e585-4e85-4342-81ea-219d2993abf6" source="ed7aec4d-3d94-45d3-832a-74cea88d6e7d" target="10d916a0-ea95-4b78-ac09-72ff2a5f2410">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Azure Private Link -&gt; Azure Cosmos DB" ref="7d8c6491-b629-46f2-a60f-f483be96dc5f" source="f15c4428-4d47-4024-bbf5-e1582ce0659a" target="bf796b07-9835-4fbf-b0a0-e6212e234f14">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Azure Cosmos DB -&gt; Azure Container Registry" ref="87d9b211-a36d-4812-834a-9241cc3049a0" source="bf796b07-9835-4fbf-b0a0-e6212e234f14" target="56fc26e4-799f-46dd-a08c-32d3804659f6">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Azure Kubernetes Service -&gt; Azure Web Apps" ref="94ace1ca-b3ae-4cf6-ab68-db675a5a520d" source="a004ceee-6065-4196-a1ce-15337fda686c" target="10d916a0-ea95-4b78-ac09-72ff2a5f2410">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Developer Machines -&gt; Azure Private Link" ref="a9a04909-de80-4c3c-aa62-48e9730a18d5" source="ddd069fc-f527-4cc5-bc8a-071f28c49100" target="f15c4428-4d47-4024-bbf5-e1582ce0659a">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="End user -&gt; Web Application - Server side (CS-Default)" ref="b2f51dc3-f2cb-4cb0-9f1d-fc32cde80983" source="ed7aec4d-3d94-45d3-832a-74cea88d6e7d" target="ea6f9f9c-7e21-4a5a-9213-5d9c7d8c9a95">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Azure Private Link -&gt; Azure Key Vault" ref="eeeed5a1-6b89-437e-8d54-b90fdd5db417" source="f15c4428-4d47-4024-bbf5-e1582ce0659a" target="0bdc7eaf-e703-4edf-9902-c6c77916858d">
      <assets/>
      <tags/>
    </dataflow>
  </dataflows>
  <customFields>
    <customField ref="APT" value=""/>
    <customField ref="Application Details" value=""/>
    <customField ref="Application Downtime Cost" value=""/>
    <customField ref="Application Type" value=""/>
    <customField ref="Apply Standard at all times" value="1"/>
    <customField ref="Contact Email" value=""/>
    <customField ref="Custom Field A" value=""/>
    <customField ref="DEL" value=""/>
    <customField ref="GPS Environment" value="NO"/>
    <customField ref="Hosting Location" value="GCP"/>
    <customField ref="Milestone 1" value=""/>
    <customField ref="Milestone 1 - Deadline" value=""/>
    <customField ref="Milestone 2" value=""/>
    <customField ref="Milestone 2 - Deadline" value=""/>
    <customField ref="Milestone 3" value=""/>
    <customField ref="Milestone 3 - Deadline" value=""/>
    <customField ref="Product Review Session Details" value=""/>
    <customField ref="Project Management Details" value=""/>
    <customField ref="Project Manager" value=""/>
    <customField ref="Project Number" value="_::_"/>
    <customField ref="Project Owner Email" value="jrabe@iriusrisk.com"/>
    <customField ref="Ready for Workflow advancement?" value="NO"/>
    <customField ref="Requirements" value=""/>
    <customField ref="Test Custom" value=""/>
    <customField ref="Third Party Contact" value=""/>
    <customField ref="Third Party Organization" value=""/>
    <customField ref="UPS Template Picker" value="GCP Template"/>
    <customField ref="Use Case" value=""/>
    <customField ref="User Email Field" value=""/>
    <customField ref="VZ - Requirements" value="Type 1||Type 2"/>
  </customFields>
  <components>
    <component uuid="5394ff22-2fdf-48b4-92b9-348c863b3605" diagramComponentId="60765efa-7e67-4863-8011-6a69321fb1e7" ref="f545a5e3-f279-405c-bb29-fd3d5684e217" name="Azure Container Instances" desc="" library="Microsoft-Azure" parentComponentRef="e8b36dfe-741a-4fc9-95fe-c744d87af442" componentDefinitionRef="CD-MICROSOFT-AZURE-CONTAINER-INSTANCES">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses>
        <weakness ref="AZURE-NET-01" name="Unauthorized connection attempts on open ports" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        Receiving unauthorized connections to open ports makes systems vulnerable to attacks. To
                        avoid this, access to the network must be as restricted as possible, so that only the necessary
                        ports are open and the minimum inbound traffic is accepted.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Check that each Azure resources have got their Network Security Groups.&lt;/li&gt;
                            &lt;li&gt;Check that a set of these groups achieve with the principle of the least
                            privilege.&lt;/li&gt;
                            &lt;li&gt;Check that the inbound/outbound security rules are enabled and correctly
                            configured.&lt;/li&gt;
                            &lt;li&gt;In &amp;quot;Inbound security rules&amp;quot;, check that all the traffic from
                            0.0.0.0/0&amp;nbsp;is blocked.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:23.981">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="AZURE-IDS-IPS" name="Deploy network-based IDS/IPS" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Deploy network-based intrusion detection/intrusion prevention systems (IDS/IPS)&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Select an offer from Azure Marketplace that supports IDS/IPS functionality with payload inspection capabilities. If intrusion detection and/or prevention based on payload inspection is not a requirement, Azure Firewall with Threat Intelligence can be used. Azure Firewall Threat intelligence-based filtering can alert and deny traffic to and from known malicious IP addresses and domains. The IP addresses and domains are sourced from the Microsoft Threat Intelligence feed.&lt;/p&gt; 
&lt;p&gt;Deploy the firewall solution of your choice at each of your organization's network boundaries to detect and/or deny malicious traffic.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Set up the network&lt;/p&gt; 
&lt;p&gt;First, create a resource group to contain the resources needed to deploy the firewall. Then create a VNet, subnets, and a test server.&lt;br&gt; For more information please see Reference URL.&lt;/p&gt; 
&lt;p&gt;Deploy the firewall&lt;/p&gt; 
&lt;p&gt;Deploy the firewall into the VNet.&lt;/p&gt; 
&lt;p&gt;1. On the Azure portal menu or from the Home page, select Create a resource.&lt;/p&gt; 
&lt;p&gt;2. Type firewall in the search box and press Enter.&lt;/p&gt; 
&lt;p&gt;3. Select Firewall and then select Create.&lt;/p&gt; 
&lt;p&gt;4. On the Create a Firewall page, use the following values to configure the firewall:&lt;/p&gt; 
&lt;p&gt;Subscription: &lt;br&gt; Resource group: Test-FW-RG&lt;br&gt; Name: Test-FW01&lt;br&gt; Location: Select the same location that you used previously&lt;br&gt; Choose a virtual network: Use existing: Test-FW-VN&lt;br&gt; Public IP address: Add new&lt;br&gt; Name: fw-pip&lt;/p&gt; 
&lt;p&gt;5. Select Review + create.&lt;/p&gt; 
&lt;p&gt;6. Review the summary, and then select Create to create the firewall.&lt;/p&gt; 
&lt;p&gt;This will take a few minutes to deploy.&lt;/p&gt; 
&lt;p&gt;7. After deployment completes, go to the Test-FW-RG resource group, and select the Test-FW01 firewall.&lt;/p&gt; 
&lt;p&gt;8. Note the firewall private and public IP addresses. You will use these addresses later.&lt;/p&gt; 
&lt;p&gt;Create a default route&lt;/p&gt; 
&lt;p&gt;For the Workload-SN subnet, configure the outbound default route to go through the firewall.&lt;/p&gt; 
&lt;p&gt;1. On the Azure portal menu, select All services or search for and select All services from any page.&lt;/p&gt; 
&lt;p&gt;2. Under Networking, select Route tables.&lt;/p&gt; 
&lt;p&gt;3. Select Add.&lt;/p&gt; 
&lt;p&gt;4. For Name, type Firewall-route.&lt;/p&gt; 
&lt;p&gt;5. For Subscription, select your subscription.&lt;/p&gt; 
&lt;p&gt;6. For Resource group, select Test-FW-RG.&lt;/p&gt; 
&lt;p&gt;7. For Location, select the same location that you used previously.&lt;/p&gt; 
&lt;p&gt;8. Select Create.&lt;/p&gt; 
&lt;p&gt;9. Select Refresh, and then select the Firewall-route route table.&lt;/p&gt; 
&lt;p&gt;10. Select Subnets and then select Associate.&lt;/p&gt; 
&lt;p&gt;11. Select Virtual network &amp;gt; Test-FW-VN.&lt;/p&gt; 
&lt;p&gt;12. For Subnet, select Workload-SN. Make sure that you select only the Workload-SN subnet for this route, otherwise your firewall will not work correctly.&lt;/p&gt; 
&lt;p&gt;13. Select OK.&lt;/p&gt; 
&lt;p&gt;14. Select Routes and then select Add.&lt;/p&gt; 
&lt;p&gt;15. For Route name, type fw-dg.&lt;/p&gt; 
&lt;p&gt;16. For Address prefix, type 0.0.0.0/0.&lt;/p&gt; 
&lt;p&gt;17. For Next hop type, select Virtual appliance.&lt;/p&gt; 
&lt;p&gt;Azure Firewall is actually a managed service, but virtual appliance works in this situation.&lt;/p&gt; 
&lt;p&gt;18. For Next hop address, type the private IP address for the firewall that you noted previously.&lt;/p&gt; 
&lt;p&gt;19. Select OK.&lt;/p&gt; 
&lt;p&gt;Configure an application rule&lt;/p&gt; 
&lt;p&gt;This is the application rule that allows outbound access to www.google.com.&lt;/p&gt; 
&lt;p&gt;1. Open the Test-FW-RG, and select the Test-FW01 firewall.&lt;br&gt; 2. On the Test-FW01 page, under Settings, select Rules.&lt;br&gt; 3. Select the Application rule collection tab.&lt;br&gt; 4. Select Add application rule collection.&lt;br&gt; 5. For Name, type App-Coll01.&lt;br&gt; 6. For Priority, type 200.&lt;br&gt; 7. For Action, select Allow.&lt;br&gt; 8. Under Rules, Target FQDNs, for Name, type Allow-Google.&lt;br&gt; 9. For Source type, select IP address.&lt;br&gt; 10. For Source, type 10.0.2.0/24.&lt;br&gt; 11. For Protocol:port, type http, https.&lt;br&gt; 12. For Target FQDNS, type www.google.com&lt;br&gt; 13. Select Add.&lt;/p&gt; 
&lt;p&gt;Azure Firewall includes a built-in rule collection for infrastructure FQDNs that are allowed by default. These FQDNs are specific for the platform and cannot be used for other purposes. For more information, see Infrastructure FQDNs.&lt;/p&gt; 
&lt;p&gt;Configure a network rule&lt;/p&gt; 
&lt;p&gt;This is the network rule that allows outbound access to two IP addresses at port 53 (DNS).&lt;/p&gt; 
&lt;p&gt;1. Select the Network rule collection tab.&lt;/p&gt; 
&lt;p&gt;2. Select Add network rule collection.&lt;/p&gt; 
&lt;p&gt;3. For Name, type Net-Coll01.&lt;/p&gt; 
&lt;p&gt;4. For Priority, type 200.&lt;/p&gt; 
&lt;p&gt;5. For Action, select Allow.&lt;/p&gt; 
&lt;p&gt;6. Under Rules, IP addresses, for Name, type Allow-DNS.&lt;/p&gt; 
&lt;p&gt;7. For Protocol, select UDP.&lt;/p&gt; 
&lt;p&gt;8. For Source type, select IP address.&lt;/p&gt; 
&lt;p&gt;9. For Source, type 10.0.2.0/24.&lt;/p&gt; 
&lt;p&gt;10. For Destination type select IP address.&lt;/p&gt; 
&lt;p&gt;11. For Destination address, type 209.244.0.3,209.244.0.4&lt;/p&gt; 
&lt;p&gt;These are public DNS servers operated by CenturyLink.&lt;/p&gt; 
&lt;p&gt;12. For Destination Ports, type 53.&lt;/p&gt; 
&lt;p&gt;13. Select Add.&lt;/p&gt; 
&lt;p&gt;Configure a DNAT rule&lt;/p&gt; 
&lt;p&gt;This rule allows you to connect a remote desktop to the Srv-Work virtual machine through the firewall.&lt;/p&gt; 
&lt;p&gt;1. Select the NAT rule collection tab.&lt;br&gt; 2. Select Add NAT rule collection.&lt;br&gt; 3. For Name, type rdp.&lt;br&gt; 4. For Priority, type 200.&lt;br&gt; 5. Under Rules, for Name, type rdp-nat.&lt;br&gt; 6. For Protocol, select TCP.&lt;br&gt; 7. For Source type, select IP address.&lt;br&gt; 8. For Source, type *.&lt;br&gt; 9. For Destination address, type the firewall public IP address.&lt;br&gt; 10. For Destination Ports, type 3389.&lt;br&gt; 11. For Translated address, type the Srv-work private IP address.&lt;br&gt; 12. For Translated port, type 3389.&lt;br&gt; 13. Select Add.&lt;/p&gt; 
&lt;p&gt;Change the primary and secondary DNS address for the Srv-Work network interface&lt;/p&gt; 
&lt;p&gt;For testing purposes in this tutorial, configure the server's primary and secondary DNS addresses. This is not a general Azure Firewall requirement.&lt;/p&gt; 
&lt;p&gt;1. On the Azure portal menu, select Resource groups or search for and select Resource groups from any page. Select the Test-FW-RG resource group.&lt;br&gt; 2. Select the network interface for the Srv-Work virtual machine.&lt;br&gt; 3. Under Settings, select DNS servers.&lt;br&gt; 4. Under DNS servers, select Custom.&lt;br&gt; 5. Type 209.244.0.3 in the Add DNS server text box, and 209.244.0.4 in the next text box.&lt;br&gt; 6. Select Save.&lt;br&gt; 7. Restart the Srv-Work virtual machine.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Tutorial: Deploy and configure Azure Firewall using the Azure portal" url="https://docs.microsoft.com/en-us/azure/firewall/tutorial-firewall-deploy-portal"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Test the firewall&lt;/p&gt;

  &lt;p&gt;Now, test the firewall to confirm that it works as expected.&lt;/p&gt;

  &lt;p&gt;1. Connect a remote desktop to firewall public IP address and sign in to the Srv-Work virtual machine.&lt;/p&gt;

  &lt;p&gt;2. Open Internet Explorer and browse to https://www.google.com.&lt;/p&gt;

  &lt;p&gt;3. Select OK &gt; Close on the Internet Explorer security alerts.&lt;/p&gt;

  &lt;p&gt;You should see the Google home page.&lt;/p&gt;

  &lt;p&gt;4. Browse to https://www.microsoft.com.&lt;/p&gt;

  &lt;p&gt;You should be blocked by the firewall.&lt;/p&gt;

  &lt;p&gt;So now you've verified that the firewall rules are working:&lt;/p&gt;

  &lt;p&gt;- You can browse to the one allowed FQDN, but not to any others.&lt;br /&gt;
- You can resolve DNS names using the configured external DNS server.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:23.950">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-ADAPTIVE-NET-HARDENING" name="Use Security Center's Adaptive Network Hardening" issueId="" issueLink="" platform="" cost="1" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Use Security Center's Adaptive Network Hardening&lt;/p&gt;

	&lt;p&gt;Rationale:&lt;br /&gt;
Applying network security groups (NSG) to filter traffic to and from resources, improves your network security posture. However, there can still be some cases in which the actual traffic flowing through the NSG is a subset of the NSG rules defined. In these cases, further improving the security posture can be achieved by hardening the NSG rules, based on the actual traffic patterns.&lt;/p&gt;

	&lt;p&gt;Adaptive network hardening provides recommendations to further harden the NSG rules. It uses a machine learning algorithm that factors in actual traffic, known trusted configuration, threat intelligence, and other indicators of compromise, and then provides recommendations to allow traffic only from specific IP/port tuples.&lt;/p&gt;

	&lt;p&gt;Note: Adaptive network hardening recommendations are only supported on the following specific ports (for both UDP and TCP): 13, 17, 19, 22, 23, 53, 69, 81, 111, 119, 123, 135, 137, 138, 139, 161, 162, 389, 445, 512, 514, 593, 636, 873, 1433, 1434, 1900, 2049, 2301, 2323, 2381, 3268, 3306, 3389, 4333, 5353, 5432, 5555, 5800, 5900, 5900, 5985, 5986, 6379, 6379, 7000, 7001, 7199, 8081, 8089, 8545, 9042, 9160, 9300, 11211, 16379, 26379, 27017, 37215&lt;/p&gt;

	&lt;p&gt;Remediation:&lt;br /&gt;
View and manage hardening alerts and rules&lt;/p&gt;

	&lt;p&gt;1. From Security Center's menu, open the Azure Defender dashboard and select the adaptive network hardening tile, or the insights panel item related to adaptive network hardening.&lt;/p&gt;

	&lt;p&gt;Tip: The insights panel shows the percentage of your VMs currently defended with adaptive network hardening.&lt;/p&gt;

	&lt;p&gt;The details page for the Adaptive Network Hardening recommendations should be applied on internet facing virtual machines recommendation opens with your network VMs grouped into three tabs:&lt;/p&gt;

	&lt;p&gt;a. Unhealthy resources: VMs that currently have recommendations and alerts that were triggered by running the adaptive network hardening algorithm.&lt;/p&gt;

	&lt;p&gt;b. Healthy resources: VMs without alerts and recommendations.&lt;/p&gt;

	&lt;p&gt;c. Unscanned resources: VMs that the adaptive network hardening algorithm cannot be run on because of one of the following reasons:&lt;br /&gt;
i. VMs are Classic VMs: Only Azure Resource Manager VMs are supported.&lt;br /&gt;
ii. Not enough data is available: In order to generate accurate traffic hardening recommendations, Security Center requires at least 30 days of traffic data.&lt;br /&gt;
iii. VM is not protected by Azure Defender: Only VMs protected with Azure Defender for servers are eligible for this feature.&lt;/p&gt;

	&lt;p&gt;3. From the Unhealthy resources tab, select a VM to view its alerts and the recommended hardening rules to apply.&lt;/p&gt;

	&lt;p&gt;- The Rules tab lists the rules that adaptive network hardening recommends you add&lt;br /&gt;
- The Alerts tab lists the alerts that were generated due to traffic, flowing to the resource, which is not within the IP range allowed in the recommended rules.&lt;/p&gt;

	&lt;p&gt;4. Optionally, edit the rules:&lt;/p&gt;

	&lt;p&gt;- Modify a rule&lt;br /&gt;
- Delete a rule&lt;br /&gt;
- Add a rule&lt;/p&gt;

	&lt;p&gt;5. Select the rules that you want to apply on the NSG, and click Enforce.&lt;/p&gt;

	&lt;p&gt;Tip: If the allowed source IP ranges shows as 'None', it means that recommended rule is a deny rule, otherwise, it is an allow rule.&lt;/p&gt;

	&lt;p&gt;Note: The enforced rules are added to the &lt;acronym title="s"&gt;NSG&lt;/acronym&gt; protecting the VM. (A VM could be protected by an NSG that is associated to its NIC, or the subnet in which the VM resides, or both)&lt;/p&gt;

	&lt;p&gt;Impact:&lt;br /&gt;
None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Improve your network security posture with adaptive network hardening" url="https://docs.microsoft.com/en-us/azure/security-center/security-center-adaptive-network-hardening"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that Security Center's Adaptive Network Hardening recommendations are enforced  to your NSG configurations.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:23.950">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="NETWORKING" name="Networking" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="AZURE-UNAUTHORISED-CONNECTION" name="Attackers perform unauthorized network access" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;Attackers could perform unauthorized network access to the resources through misconfigured ports or security network configurations.&lt;/p&gt;</desc>
              <riskRating confidentiality="25" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-NET-01">
                  <countermeasures>
                    <countermeasure ref="AZURE-ADAPTIVE-NET-HARDENING" mitigation="50"/>
                    <countermeasure ref="AZURE-IDS-IPS" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZURE-ADAPTIVE-NET-HARDENING" mitigation="50"/>
                <countermeasure ref="AZURE-IDS-IPS" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="e93432ed-56c3-4a1b-b0a9-ff565a885775" diagramComponentId="4bfb5818-ad7f-4470-96a1-2380e69bd809" ref="87b459b6-d494-41b4-9cf5-c79f7d4d6830" name="Azure VNet" desc="" library="Microsoft-Azure" parentComponentRef="b359f0ab-6790-4cbb-b7ae-c451ccbda797" componentDefinitionRef="CD-MICROSOFT-AZURE-VNET">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses>
        <weakness ref="AZURE-UNSECURE-CREDENTIALS" name="Credentials are not securely stored" state="0" impact="100" issueId="" issueLink="">
          <desc>The credentials used to access the resources are not securely stored and can be accessed by unauthorized personnel.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:29.884">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="DATA-TRANSMIT-CLEAR" name="Data is transmitted in clear text" state="0" impact="100" issueId="" issueLink="">
          <desc>Data is not protected when transmitted to applications or customers and it can be read or modified by unauthorized actors.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:29.883">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CWE-778" name="Insufficient Logging" state="0" impact="100" issueId="" issueLink="">
          <desc>When a critical security event occurs, the software either does not record the event or omits important details about the event when logging it. When critical security events are not logged properly, such as in the case of a failed login attempt, this can make malicious behavior more difficult to detect and may hinder forensic analyses after a successful attack.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:29.883">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-NON-IDENTIFY" name="Insufficient resource identification" state="0" impact="100" issueId="" issueLink="">
          <desc>Resources are not registered in the safety net systems, and/or additional unidentified resources exist. As such, additional weaknesses might be introduced.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:29.883">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-ACCESS-01" name="Misconfigured credentials for groups and roles" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        The credentials for groups and roles are not correctly configured and there are user accounts with more privileges than necessary.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each user has got assigned the correct groups.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All groups&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each group has got assigned the correct roles to achieve principle of
                            least privilege.&lt;/li&gt;
                            &lt;li&gt;Check that the roles for the Cloud Service are well assigned.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;div&gt;
                            &lt;/div&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:29.883">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-VNET01" name="Networks for Azure resources are not properly segmented. Without proper segmentation, when attackers gain access to one resource, any other resources in the same VNet are compromised" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        Resources in the same VNet are compromised because when one of them is attacked and the
                        attackers gain access, they also gain access to all resources.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            Identify the resources and the Microsoft Azure instances.
                            &lt;/div&gt;
                            &lt;div&gt;
                            Check that the resources are in the correct VNet.
                            &lt;/div&gt;
                            &lt;div&gt;
                            Check that the Microsoft Azure instances&amp;nbsp;are into different VNets.
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:29.883">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-VM01" name="Security policies exposing system resources" state="0" impact="100" issueId="" issueLink="">
          <desc>The security policies are not adequately configured.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:29.883">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-NET-01" name="Unauthorized connection attempts on open ports" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        Receiving unauthorized connections to open ports makes systems vulnerable to attacks. To
                        avoid this, access to the network must be as restricted as possible, so that only the necessary
                        ports are open and the minimum inbound traffic is accepted.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Check that each Azure resources have got their Network Security Groups.&lt;/li&gt;
                            &lt;li&gt;Check that a set of these groups achieve with the principle of the least
                            privilege.&lt;/li&gt;
                            &lt;li&gt;Check that the inbound/outbound security rules are enabled and correctly
                            configured.&lt;/li&gt;
                            &lt;li&gt;In &amp;quot;Inbound security rules&amp;quot;, check that all the traffic from
                            0.0.0.0/0&amp;nbsp;is blocked.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:29.882">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="AZURE-IDS-IPS" name="Deploy network-based IDS/IPS" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Deploy network-based intrusion detection/intrusion prevention systems (IDS/IPS)&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Select an offer from Azure Marketplace that supports IDS/IPS functionality with payload inspection capabilities. If intrusion detection and/or prevention based on payload inspection is not a requirement, Azure Firewall with Threat Intelligence can be used. Azure Firewall Threat intelligence-based filtering can alert and deny traffic to and from known malicious IP addresses and domains. The IP addresses and domains are sourced from the Microsoft Threat Intelligence feed.&lt;/p&gt; 
&lt;p&gt;Deploy the firewall solution of your choice at each of your organization's network boundaries to detect and/or deny malicious traffic.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Set up the network&lt;/p&gt; 
&lt;p&gt;First, create a resource group to contain the resources needed to deploy the firewall. Then create a VNet, subnets, and a test server.&lt;br&gt; For more information please see Reference URL.&lt;/p&gt; 
&lt;p&gt;Deploy the firewall&lt;/p&gt; 
&lt;p&gt;Deploy the firewall into the VNet.&lt;/p&gt; 
&lt;p&gt;1. On the Azure portal menu or from the Home page, select Create a resource.&lt;/p&gt; 
&lt;p&gt;2. Type firewall in the search box and press Enter.&lt;/p&gt; 
&lt;p&gt;3. Select Firewall and then select Create.&lt;/p&gt; 
&lt;p&gt;4. On the Create a Firewall page, use the following values to configure the firewall:&lt;/p&gt; 
&lt;p&gt;Subscription: &lt;br&gt; Resource group: Test-FW-RG&lt;br&gt; Name: Test-FW01&lt;br&gt; Location: Select the same location that you used previously&lt;br&gt; Choose a virtual network: Use existing: Test-FW-VN&lt;br&gt; Public IP address: Add new&lt;br&gt; Name: fw-pip&lt;/p&gt; 
&lt;p&gt;5. Select Review + create.&lt;/p&gt; 
&lt;p&gt;6. Review the summary, and then select Create to create the firewall.&lt;/p&gt; 
&lt;p&gt;This will take a few minutes to deploy.&lt;/p&gt; 
&lt;p&gt;7. After deployment completes, go to the Test-FW-RG resource group, and select the Test-FW01 firewall.&lt;/p&gt; 
&lt;p&gt;8. Note the firewall private and public IP addresses. You will use these addresses later.&lt;/p&gt; 
&lt;p&gt;Create a default route&lt;/p&gt; 
&lt;p&gt;For the Workload-SN subnet, configure the outbound default route to go through the firewall.&lt;/p&gt; 
&lt;p&gt;1. On the Azure portal menu, select All services or search for and select All services from any page.&lt;/p&gt; 
&lt;p&gt;2. Under Networking, select Route tables.&lt;/p&gt; 
&lt;p&gt;3. Select Add.&lt;/p&gt; 
&lt;p&gt;4. For Name, type Firewall-route.&lt;/p&gt; 
&lt;p&gt;5. For Subscription, select your subscription.&lt;/p&gt; 
&lt;p&gt;6. For Resource group, select Test-FW-RG.&lt;/p&gt; 
&lt;p&gt;7. For Location, select the same location that you used previously.&lt;/p&gt; 
&lt;p&gt;8. Select Create.&lt;/p&gt; 
&lt;p&gt;9. Select Refresh, and then select the Firewall-route route table.&lt;/p&gt; 
&lt;p&gt;10. Select Subnets and then select Associate.&lt;/p&gt; 
&lt;p&gt;11. Select Virtual network &amp;gt; Test-FW-VN.&lt;/p&gt; 
&lt;p&gt;12. For Subnet, select Workload-SN. Make sure that you select only the Workload-SN subnet for this route, otherwise your firewall will not work correctly.&lt;/p&gt; 
&lt;p&gt;13. Select OK.&lt;/p&gt; 
&lt;p&gt;14. Select Routes and then select Add.&lt;/p&gt; 
&lt;p&gt;15. For Route name, type fw-dg.&lt;/p&gt; 
&lt;p&gt;16. For Address prefix, type 0.0.0.0/0.&lt;/p&gt; 
&lt;p&gt;17. For Next hop type, select Virtual appliance.&lt;/p&gt; 
&lt;p&gt;Azure Firewall is actually a managed service, but virtual appliance works in this situation.&lt;/p&gt; 
&lt;p&gt;18. For Next hop address, type the private IP address for the firewall that you noted previously.&lt;/p&gt; 
&lt;p&gt;19. Select OK.&lt;/p&gt; 
&lt;p&gt;Configure an application rule&lt;/p&gt; 
&lt;p&gt;This is the application rule that allows outbound access to www.google.com.&lt;/p&gt; 
&lt;p&gt;1. Open the Test-FW-RG, and select the Test-FW01 firewall.&lt;br&gt; 2. On the Test-FW01 page, under Settings, select Rules.&lt;br&gt; 3. Select the Application rule collection tab.&lt;br&gt; 4. Select Add application rule collection.&lt;br&gt; 5. For Name, type App-Coll01.&lt;br&gt; 6. For Priority, type 200.&lt;br&gt; 7. For Action, select Allow.&lt;br&gt; 8. Under Rules, Target FQDNs, for Name, type Allow-Google.&lt;br&gt; 9. For Source type, select IP address.&lt;br&gt; 10. For Source, type 10.0.2.0/24.&lt;br&gt; 11. For Protocol:port, type http, https.&lt;br&gt; 12. For Target FQDNS, type www.google.com&lt;br&gt; 13. Select Add.&lt;/p&gt; 
&lt;p&gt;Azure Firewall includes a built-in rule collection for infrastructure FQDNs that are allowed by default. These FQDNs are specific for the platform and cannot be used for other purposes. For more information, see Infrastructure FQDNs.&lt;/p&gt; 
&lt;p&gt;Configure a network rule&lt;/p&gt; 
&lt;p&gt;This is the network rule that allows outbound access to two IP addresses at port 53 (DNS).&lt;/p&gt; 
&lt;p&gt;1. Select the Network rule collection tab.&lt;/p&gt; 
&lt;p&gt;2. Select Add network rule collection.&lt;/p&gt; 
&lt;p&gt;3. For Name, type Net-Coll01.&lt;/p&gt; 
&lt;p&gt;4. For Priority, type 200.&lt;/p&gt; 
&lt;p&gt;5. For Action, select Allow.&lt;/p&gt; 
&lt;p&gt;6. Under Rules, IP addresses, for Name, type Allow-DNS.&lt;/p&gt; 
&lt;p&gt;7. For Protocol, select UDP.&lt;/p&gt; 
&lt;p&gt;8. For Source type, select IP address.&lt;/p&gt; 
&lt;p&gt;9. For Source, type 10.0.2.0/24.&lt;/p&gt; 
&lt;p&gt;10. For Destination type select IP address.&lt;/p&gt; 
&lt;p&gt;11. For Destination address, type 209.244.0.3,209.244.0.4&lt;/p&gt; 
&lt;p&gt;These are public DNS servers operated by CenturyLink.&lt;/p&gt; 
&lt;p&gt;12. For Destination Ports, type 53.&lt;/p&gt; 
&lt;p&gt;13. Select Add.&lt;/p&gt; 
&lt;p&gt;Configure a DNAT rule&lt;/p&gt; 
&lt;p&gt;This rule allows you to connect a remote desktop to the Srv-Work virtual machine through the firewall.&lt;/p&gt; 
&lt;p&gt;1. Select the NAT rule collection tab.&lt;br&gt; 2. Select Add NAT rule collection.&lt;br&gt; 3. For Name, type rdp.&lt;br&gt; 4. For Priority, type 200.&lt;br&gt; 5. Under Rules, for Name, type rdp-nat.&lt;br&gt; 6. For Protocol, select TCP.&lt;br&gt; 7. For Source type, select IP address.&lt;br&gt; 8. For Source, type *.&lt;br&gt; 9. For Destination address, type the firewall public IP address.&lt;br&gt; 10. For Destination Ports, type 3389.&lt;br&gt; 11. For Translated address, type the Srv-work private IP address.&lt;br&gt; 12. For Translated port, type 3389.&lt;br&gt; 13. Select Add.&lt;/p&gt; 
&lt;p&gt;Change the primary and secondary DNS address for the Srv-Work network interface&lt;/p&gt; 
&lt;p&gt;For testing purposes in this tutorial, configure the server's primary and secondary DNS addresses. This is not a general Azure Firewall requirement.&lt;/p&gt; 
&lt;p&gt;1. On the Azure portal menu, select Resource groups or search for and select Resource groups from any page. Select the Test-FW-RG resource group.&lt;br&gt; 2. Select the network interface for the Srv-Work virtual machine.&lt;br&gt; 3. Under Settings, select DNS servers.&lt;br&gt; 4. Under DNS servers, select Custom.&lt;br&gt; 5. Type 209.244.0.3 in the Add DNS server text box, and 209.244.0.4 in the next text box.&lt;br&gt; 6. Select Save.&lt;br&gt; 7. Restart the Srv-Work virtual machine.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Tutorial: Deploy and configure Azure Firewall using the Azure portal" url="https://docs.microsoft.com/en-us/azure/firewall/tutorial-firewall-deploy-portal"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Test the firewall&lt;/p&gt;

  &lt;p&gt;Now, test the firewall to confirm that it works as expected.&lt;/p&gt;

  &lt;p&gt;1. Connect a remote desktop to firewall public IP address and sign in to the Srv-Work virtual machine.&lt;/p&gt;

  &lt;p&gt;2. Open Internet Explorer and browse to https://www.google.com.&lt;/p&gt;

  &lt;p&gt;3. Select OK &gt; Close on the Internet Explorer security alerts.&lt;/p&gt;

  &lt;p&gt;You should see the Google home page.&lt;/p&gt;

  &lt;p&gt;4. Browse to https://www.microsoft.com.&lt;/p&gt;

  &lt;p&gt;You should be blocked by the firewall.&lt;/p&gt;

  &lt;p&gt;So now you've verified that the firewall rules are working:&lt;/p&gt;

  &lt;p&gt;- You can browse to the one allowed FQDN, but not to any others.&lt;br /&gt;
- You can resolve DNS names using the configured external DNS server.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:29.768">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-ENABLE-ALERTS" name="Enable alerts for anomalous activities" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Enable alerts for anomalous activities 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  Azure Security Center generates detailed security alerts and recommendations. You can view them in the portal or through programmatic tools. You may also need to export some or all of this information for tracking with other monitoring tools in your environment. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Continuous export lets you fully customize what will be exported, and where it will go. For example, you can configure it so that: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  All high severity alerts are sent to an Azure Event Hub 
&lt;/div&gt; 
&lt;div&gt;
  All medium or higher severity findings from vulnerability assessment scans of your SQL servers are sent to a specific Log Analytics workspace 
&lt;/div&gt; 
&lt;div&gt;
  Specific recommendations are delivered to an Event Hub or Log Analytics workspace whenever they're generated 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  Set up a continuous export 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  You can configure continuous export from the Security Center pages in Azure portal, via the Security Center REST API, or at scale using the supplied Azure Policy templates. Select the appropriate tab below for details of each. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Configure continuous export from the Security Center pages in Azure portal 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The steps below are necessary whether you're setting up a continuous export to Log Analytics workspace or Azure Event Hubs. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  1. From Security Center's sidebar, select Pricing &amp;amp; settings. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  2. Select the specific subscription for which you want to configure the data export. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  3. From the sidebar of the settings page for that subscription, select Continuous Export. 
&lt;/div&gt; 
&lt;div&gt;
  Here you see the export options. There's a tab for each available export target. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  4. Select the data type you'd like to export and choose from the filters on each type (for example, export only high severity alerts). 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  5. Optionally, if your selection includes one of these four recommendations, you can include the vulnerability assessment findings together with them: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - Vulnerability Assessment findings on your SQL databases should be remediated 
&lt;/div&gt; 
&lt;div&gt;
  - Vulnerability Assessment findings on your SQL servers on machines should be remediated (Preview) 
&lt;/div&gt; 
&lt;div&gt;
  - Vulnerabilities in Azure Container Registry images should be remediated (powered by Qualys) 
&lt;/div&gt; 
&lt;div&gt;
  - Vulnerabilities in your virtual machines should be remediated 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  To include the findings with these recommendations, enable the include security findings option. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  6. From the "Export target" area, choose where you'd like the data saved. Data can be saved in a target on a different subscription (for example on a Central Event Hub instance or a central Log Analytics workspace). 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  7. Select Save. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Continuously export Security Center data" url="https://docs.microsoft.com/en-us/azure/security-center/continuous-export?tabs=azure-portal"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  View exported alerts and recommendations in Azure Monitor 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  In some cases, you may choose to view the exported Security Alerts and/or recommendations in Azure Monitor. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Azure Monitor provides a unified alerting experience for a variety of Azure alerts including Diagnostic Log, Metric alerts, and custom alerts based on Log Analytics workspace queries. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  To view alerts and recommendations from Security Center in Azure Monitor, configure an Alert rule based on Log Analytics queries (Log Alert): 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  1. From Azure Monitor's Alerts page, select New alert rule. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  2. In the create rule page, configure your new rule (in the same way you'd configure a log alert rule in Azure Monitor): 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - For Resource, select the Log Analytics workspace to which you exported security alerts and recommendations. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - For Condition, select Custom log search. In the page that appears, configure the query, look-back period, and frequency period. In the search query, you can type SecurityAlert or SecurityRecommendation to query the data types that Security Center continuously exports to as you enable the Continuous export to Log Analytics feature. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - Optionally, configure the Action Group that you'd like to trigger. Action groups can trigger email sending, ITSM tickets, WebHooks, and more. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  You'll now see new Azure Security Center alerts or recommendations (depending on your configured continuous export rules and the condition you defined in your Azure Monitor alert rule) in Azure Monitor alerts, with automatic triggering of an action group (if provided). 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:29.770">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-MONITOR6" name="Enable and use Traffic Analytics" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Enable and use Traffic Analytics 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  Traffic Analytics is a cloud-based solution that provides visibility into user and application activity in cloud networks. Traffic analytics analyzes Network Watcher network security group (NSG) flow logs to provide insights into traffic flow in your Azure cloud. With traffic analytics, you can: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - Visualize network activity across your Azure subscriptions and identify hot spots. 
&lt;/div&gt; 
&lt;div&gt;
  - Identify security threats to, and secure your network, with information such as open-ports, applications attempting Internet access, and virtual machines (VM) connecting to rogue networks. 
&lt;/div&gt; 
&lt;div&gt;
  - Understand traffic flow patterns across Azure regions and the Internet to optimize your network deployment for performance and capacity. 
&lt;/div&gt; 
&lt;div&gt;
  - Pinpoint network misconfigurations leading to failed connections in your network. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  Enable Network Watcher 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  To analyze traffic, you need to have an existing network watcher, or enable a network watcher in each region that you have NSGs that you want to analyze traffic for. Traffic analytics can be enabled for NSGs hosted in any of the supported regions. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Select a network security group 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Before enabling NSG flow logging, you must have a network security group to log flows for. If you don't have a network security group, see Create a network security group to create one. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  In Azure portal, go to Network watcher, and then select NSG flow logs. Select the network security group that you want to enable an NSG flow log for. 
&lt;/div&gt; 
&lt;div&gt;
  If you try to enable traffic analytics for an NSG that is hosted in any region other than the supported regions, you receive a "Not found" error. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Enable flow log settings 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Before enabling flow log settings, you must complete the following tasks: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Register the Azure Insights provider, if it's not already registered for your subscription: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Register-AzResourceProvider -ProviderNamespace Microsoft.Insights 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  If you don't already have an Azure Storage account to store NSG flow logs in, you must create a storage account. You can create a storage account with the command that follows. Before running the command, replace &amp;lt;replace-with-your-unique-storage-account-name&amp;gt; with a name that is unique across all Azure locations, between 3-24 characters in length, using only numbers and lower-case letters. You can also change the resource group name, if necessary. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  New-AzStorageAccount ` 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; -Location westcentralus ` 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; -Name &amp;lt;replace-with-your-unique-storage-account-name&amp;gt; ` 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; -ResourceGroupName myResourceGroup ` 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; -SkuName Standard_LRS ` 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; -Kind StorageV2 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Select the following options: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  1. Select On for Status 
&lt;/div&gt; 
&lt;div&gt;
  2. Select Version 2 for Flow Logs version. Version 2 contains flow-session statistics (Bytes and Packets) 
&lt;/div&gt; 
&lt;div&gt;
  3. Select an existing storage account to store the flow logs in. Ensure that your storage does not have "Data Lake Storage Gen2 Hierarchical Namespace Enabled" set to true. 
&lt;/div&gt; 
&lt;div&gt;
  4. Set Retention to the number of days you want to store data for. If you want to store the data forever, set the value to 0. You incur Azure Storage fees for the storage account. 
&lt;/div&gt; 
&lt;div&gt;
  5. Select On for Traffic Analytics Status. 
&lt;/div&gt; 
&lt;div&gt;
  6. Select processing interval. Based on your choice, flow logs will be collected from storage account and processed by Traffic Analytics. You can choose processing interval of every 1 hour or every 10 mins. 
&lt;/div&gt; 
&lt;div&gt;
  7. Select an existing Log Analytics (OMS) Workspace, or select Create New Workspace to create a new one. A Log Analytics workspace is used by Traffic Analytics to store the aggregated and indexed data that is then used to generate the analytics. If you select an existing workspace, it must exist in one of the supported regions and have been upgraded to the new query language. If you do not wish to upgrade an existing workspace, or do not have a workspace in a supported region, create a new one. For more information about query languages, see Azure Log Analytics upgrade to new log search. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Note: The log analytics workspace hosting the traffic analytics solution and the NSGs do not have to be in the same region. For example, you may have traffic analytics in a workspace in the West Europe region, while you may have NSGs in East US and West US. Multiple NSGs can be configured in the same workspace. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  8. Select Save. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Repeat the previous steps for any other NSGs for which you wish to enable traffic analytics for. Data from flow logs is sent to the workspace, so ensure that the local laws and regulations in your country/region permit data storage in the region where the workspace exists. If you have set different processing intervals for different NSGs, data will be collected at different intervals. For example: You can choose to enable processing interval of 10 mins for critical VNETs and 1 hour for noncritical VNETs. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  You can also configure traffic analytics using the Set-AzNetworkWatcherConfigFlowLog PowerShell cmdlet in Azure PowerShell. Run Get-Module -ListAvailable Az to find your installed version. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Traffic Analytics" url="https://docs.microsoft.com/en-us/azure/network-watcher/traffic-analytics"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  View traffic analytics 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  To view Traffic Analytics, search for Network Watcher in the portal search bar. Once inside Network Watcher, to explore traffic analytics and its capabilities, select Traffic Analytics from the left menu. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The dashboard may take up to 30 minutes to appear the first time because Traffic Analytics must first aggregate enough data for it to derive meaningful insights, before it can generate any reports. 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:29.770">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-DDOS-PROTECTION" name="Enable Azure DDoS Standard protection on your Azure Virtual Network" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Enable Azure DDoS Standard protection on your Azure Virtual Network&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Enable Azure Distributed Denial of Service (DDoS) Standard protection on your Azure Virtual Network to guard against DDoS attacks.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Create a DDoS protection plan&lt;/p&gt; 
&lt;p&gt;1. Select Create a resource in the upper left corner of the Azure portal.&lt;/p&gt; 
&lt;p&gt;2. Search the term DDoS. When DDoS protection plan appears in the search results, select it.&lt;/p&gt; 
&lt;p&gt;3. Select Create.&lt;/p&gt; 
&lt;p&gt;4. Enter or select the following values, then select Create:&lt;/p&gt; 
&lt;p&gt;Name: Enter MyDdosProtectionPlan.&lt;br&gt; Subscription: Select your subscription.&lt;br&gt; Resource group: Select Create new and enter MyResourceGroup.&lt;br&gt; Location: Enter East US.&lt;/p&gt; 
&lt;p&gt;Enable DDoS protection for a new virtual network&lt;/p&gt; 
&lt;p&gt;1. Select Create a resource in the upper left corner of the Azure portal.&lt;/p&gt; 
&lt;p&gt;2. Select Networking, and then select Virtual network.&lt;/p&gt; 
&lt;p&gt;3. Enter or select the following values, accept the remaining defaults, and then select Create:&lt;/p&gt; 
&lt;p&gt;Name: Enter MyVnet.&lt;br&gt; Subscription: Select your subscription.&lt;br&gt; Resource group: Select Use existing, and then select MyResourceGroup&lt;br&gt; Location: Enter East US&lt;br&gt; DDoS Protection Standard: Select Enable. The plan you select can be in the same, or different subscription than the virtual network, but both subscriptions must be associated to the same Azure Active Directory tenant.&lt;/p&gt; 
&lt;p&gt;Enable DDoS protection for an existing virtual network&lt;/p&gt; 
&lt;p&gt;1. Create a DDoS protection plan by completing the steps in Create a DDoS protection plan, if you don't have an existing DDoS protection plan.&lt;br&gt; 2. Select Create a resource in the upper left corner of the Azure portal.&lt;br&gt; 3. Enter the name of the virtual network that you want to enable DDoS Protection Standard for in the Search resources, services, and docs box at the top of the portal. When the name of the virtual network appears in the search results, select it.&lt;br&gt; 4. Select DDoS protection, under SETTINGS.&lt;br&gt; 5. Select Standard. Under DDoS protection plan, select an existing DDoS protection plan, or the plan you created in step 1, and then select Save. The plan you select can be in the same, or different subscription than the virtual network, but both subscriptions must be associated to the same Azure Active Directory tenant.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; You cannot move a virtual network to another resource group or subscription when DDoS Standard is enabled for the virtual network. If you need to move a virtual network with DDoS Standard enabled, disable DDoS Standard first, move the virtual network, and then enable DDoS standard. After the move, the auto-tuned policy thresholds for all the protected public IP addresses in the virtual network are reset.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Quickstart: Create and configure Azure DDoS Protection Standard" url="https://docs.microsoft.com/en-us/azure/ddos-protection/manage-ddos-protection"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Validate and test&lt;/p&gt;

	&lt;p&gt;First, check the details of your DDoS protection plan:&lt;/p&gt;

	&lt;p&gt;1. Select All services on the top, left of the portal.&lt;br /&gt;
2. Enter DDoS in the Filter box. When DDoS protection plans appear in the results, select it.&lt;br /&gt;
3. Select your DDoS protection plan from the list.&lt;/p&gt;

	&lt;p&gt;The MyVnet virtual network should be listed.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:29.770">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-SECURITY-CENTER4" name="Enable Azure Defender" issueId="" issueLink="" platform="" cost="1" risk="45" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Enable Azure Defender&lt;/p&gt;

	&lt;p&gt;Rationale:&lt;br /&gt;
Azure Defender provides security alerts and advanced threat protection for virtual machines, SQL databases, containers, web applications, your network, and more.&lt;/p&gt;

	&lt;p&gt;When you enable Azure Defender from the Pricing and settings area of Azure Security Center, the following Defender plans are all enabled simultaneously and provide comprehensive defenses for the compute, data, and service layers of your environment:&lt;/p&gt;

	&lt;p&gt;- Azure Defender for servers&lt;br /&gt;
- Azure Defender for App Service&lt;br /&gt;
- Azure Defender for Storage&lt;br /&gt;
- Azure Defender for SQL&lt;br /&gt;
- Azure Defender for Kubernetes&lt;br /&gt;
- Azure Defender for container registries&lt;br /&gt;
- Azure Defender for Key Vault&lt;br /&gt;
- Azure Defender for Resource Manager&lt;br /&gt;
- Azure Defender for DNS&lt;/p&gt;

	&lt;p&gt;Each plan in Azure Defender is priced separately and can be individually set to on or off. For example, you might want to turn off Azure Defender for App Service on subscriptions that don't have an associated Azure App Service plan.&lt;/p&gt;

	&lt;p&gt;Remediation:&lt;br /&gt;
To enable Azure Defender on one subscription:&lt;/p&gt;

	&lt;p&gt;1. From Security Center's main menu, select Pricing &amp;amp; settings.&lt;br /&gt;
2. Select the subscription or workspace that you want to protect.&lt;br /&gt;
3. Select Azure Defender on to upgrade.&lt;br /&gt;
4. Select Save.&lt;/p&gt;

	&lt;p&gt;Tip: You'll notice that each plan in Azure Defender is priced separately and can be individually set to on or off. For example, you might want to turn off Azure Defender for App Service on subscriptions that don't have an associated Azure App Service plan.&lt;/p&gt;


	&lt;p&gt;To enable Azure Defender on multiple subscriptions or workspaces:&lt;/p&gt;

	&lt;p&gt;1. From Security Center's sidebar, select Getting started.&lt;/p&gt;

	&lt;p&gt;The Upgrade tab lists subscriptions and workspaces eligible for onboarding.&lt;/p&gt;

	&lt;p&gt;2. From the Select subscriptions and workspaces to enable Azure Defender on list, select the subscriptions and workspaces to upgrade and select Upgrade to enable Azure Defender.&lt;/p&gt;

	&lt;p&gt;- If you select subscriptions and workspaces that aren't eligible for trial, the next step will upgrade them and charges will begin.&lt;br /&gt;
- If you select a workspace that's eligible for a free trial, the next step will begin a trial.&lt;/p&gt;

	&lt;p&gt;Impact:&lt;br /&gt;
Turning on Azure Defender in Azure Security Center incurs an additional cost per resource.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Introduction to Azure Defender" url="https://docs.microsoft.com/en-us/azure/security-center/azure-defender"/>
            <reference name="Quickstart: Enable Azure Defender" url="https://docs.microsoft.com/en-us/azure/security-center/enable-azure-defender"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="2.1" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="2.2" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="2.3" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="2.4" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="2.5" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="2.6" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="2.7" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="2.8" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="DP-3" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="ES-1" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="IM-8" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;To ensure that Azure Defender is enabled from Azure portal&lt;/p&gt;

	&lt;p&gt;1. Go to Security Center&lt;br /&gt;
2. Select Pricing &amp;amp; settings blade&lt;br /&gt;
3. Click on the subscription name&lt;br /&gt;
4. Select the Azure Defender plans blade&lt;br /&gt;
5. Review the chosen pricing tier. For the desired resource type Plan should be set to On.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:29.770">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-NSG-FLOW-LOGS" name="Enable NSG flow logs" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Enable NSG flow logs&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; A network security group (NSG) enables you to filter inbound traffic to, and outbound traffic from, a virtual machine (VM). You can log network traffic that flows through an NSG with Network Watcher's NSG flow log capability.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Enable NSG flow log&lt;/p&gt; 
&lt;p&gt;1. NSG flow log data is written to an Azure Storage account. To create an Azure Storage account, select + Create a resource at the top, left corner of the portal.&lt;/p&gt; 
&lt;p&gt;2. Select Storage, then select Storage account - blob, file, table, queue.&lt;/p&gt; 
&lt;p&gt;3. Enter, or select the following information, accept the remaining defaults, and then select Create.&lt;/p&gt; 
&lt;p&gt;Name: 3-24 characters in length, can only contain lowercase letters and numbers, and must be unique across all Azure Storage accounts.&lt;br&gt; Location: Select East US&lt;br&gt; Resource group: Select Use existing, and then select myResourceGroup&lt;/p&gt; 
&lt;p&gt;The storage account may take around minute to create. Do not continue with remaining steps until the storage account is created. In all cases, the storage account must be in the same region as the NSG.&lt;/p&gt; 
&lt;p&gt;4. In the top, left corner of portal, select All services. In the Filter box, type Network Watcher. When Network Watcher appears in the search results, select it.&lt;/p&gt; 
&lt;p&gt;5. Under LOGS, select NSG flow logs.&lt;/p&gt; 
&lt;p&gt;6. From the list of NSGs, select the NSG named myVm-nsg.&lt;/p&gt; 
&lt;p&gt;7. Under Flow logs settings, select On.&lt;/p&gt; 
&lt;p&gt;8. Select the flow logging version. Version 2 contains flow-session statistics (Bytes and Packets)&lt;/p&gt; 
&lt;p&gt;9. Select the storage account that you created in step 3.&lt;/p&gt; 
&lt;p&gt;Note: NSG Flow Logs do not work with storage accounts that have hierarchical namespace enabled.&lt;/p&gt; 
&lt;p&gt;10. In the top, left corner of portal, select All services. In the Filter box, type Network Watcher. When Network Watcher appears in the search results, select it.&lt;/p&gt; 
&lt;p&gt;11. Set Retention (days) to 5, and then select Save.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Tutorial: Log network traffic to and from a virtual machine using the Azure portal" url="https://docs.microsoft.com/en-us/azure/network-watcher/network-watcher-nsg-flow-logging-portal"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that NSG flow logs are enabled.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:29.770">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="C-AZURE-VNET2" name="Enable packet capture for VPN gateways" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Enable packet capture for VPN gateways&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Use VPN Gateway's packet capture in addition to commonly available packet capture tools to record network packets.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; To set up packet capture in Azure portal&lt;/p&gt; 
&lt;p&gt;1. Sign in to the Azure portal.&lt;/p&gt; 
&lt;p&gt;2. Go to Virtual network gateway setup.&lt;/p&gt; 
&lt;p&gt;3. Select VPN Gateway Packet Capture from the left-nav menu.&lt;/p&gt; 
&lt;p&gt;4. Click Start Packet Capture.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Configure packet capture for VPN gateways" url="https://docs.microsoft.com/en-us/azure/vpn-gateway/packet-capture"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>	&lt;p&gt;Ensure that packet capture for VPN gateways is enabled.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:29.770">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-AD10" name="Enable Privileged Identity Management for tracking admin role use" issueId="" issueLink="" platform="" cost="1" risk="45" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Enable Privileged Identity Management for tracking admin role use&lt;/p&gt;

  &lt;p&gt;Rationale:&lt;br /&gt;
Use Privileged Identity Management (PIM) to manage, control, and monitor access within your Azure Active Directory (Azure AD) organization. With PIM you can provide as-needed and just-in-time access to Azure resources, Azure AD resources, and other Microsoft online services like Microsoft 365 or Microsoft Intune.&lt;/p&gt;

  &lt;p&gt;Remediation:&lt;br /&gt;
Licensing requirements&lt;/p&gt;

  &lt;p&gt;To use Privileged Identity Management, your directory must have one of the following paid or trial licenses.&lt;/p&gt;

  &lt;p&gt;- Azure AD Premium P2&lt;br /&gt;
- Enterprise Mobility + Security (EMS) E5&lt;/p&gt;

  &lt;p&gt;When a user who is active in a privileged role in an Azure AD organization with a Premium P2 license goes to Roles and administrators in Azure AD and selects a role (or even just visits Privileged Identity Management):&lt;/p&gt;

  &lt;p&gt;- Azure automatically enables PIM for the organization&lt;br /&gt;
- Their experience is now that they can either assign a "regular" role assignment or an eligible role assignment&lt;br /&gt;
When PIM is enabled it doesn't have any other effect on your organization that you need to worry about. It gives you additional assignment options such as active vs eligible with start and end time. PIM also enables you to define scope for role assignments using Administrative Units and custom roles. If you are a Global Administrator or Privileged Role Administrator, you might start getting a few additional emails like the PIM weekly digest. You might also see MS-PIM service principal in the audit log related to role assignment. This is an expected change that should have no effect on your workflow.&lt;/p&gt;

  &lt;p&gt;For more PIM configurations please see Reference URL.&lt;/p&gt;

  &lt;p&gt;Impact:&lt;br /&gt;
None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Start using Privileged Identity Management" url="https://docs.microsoft.com/en-us/azure/active-directory/privileged-identity-management/pim-getting-started"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that Privileged Identity Management is enabled.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:29.770">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="C-AZURE-VNET1" name="Enable resource logs for NSGs" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Enable resource logs for NSGs&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; When you enable logging for an NSG, you can gather the following types of resource log information:&lt;br&gt; - Event: Entries are logged for which NSG rules are applied to VMs, based on MAC address.&lt;br&gt; - Rule counter: Contains entries for how many times each NSG rule is applied to deny or allow traffic. The status for these rules is collected every 300 seconds.&lt;br&gt; Resource logs are only available for NSGs deployed through the Azure Resource Manager deployment model. You cannot enable resource logging for NSGs deployed through the classic deployment model. &lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; How to enable resource logs for NSG from Azure Portal&lt;/p&gt; 
&lt;p&gt;1. Sign in to the portal.&lt;/p&gt; 
&lt;p&gt;2. Select All services, then type network security groups. When Network security groups appear in the search results, select it.&lt;/p&gt; 
&lt;p&gt;3. Select the NSG you want to enable logging for.&lt;/p&gt; 
&lt;p&gt;4. Under MONITORING, select Diagnostics logs, and then select Turn on diagnostics.&lt;/p&gt; 
&lt;p&gt;5. Under Diagnostics settings, enter, or select the following information, and then select Save:&lt;/p&gt; 
&lt;p&gt;- Name: A name of your choosing. For example: myNsgDiagnostics&lt;br&gt; - Archive to a storage account, Stream to an event hub, and Send to Log Analytics: You can select as many destinations as you choose.&lt;br&gt; - LOG: Select either, or both log categories.&lt;/p&gt; 
&lt;p&gt;6. View and analyze logs.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Resource logging for a network security group" url="https://docs.microsoft.com/en-us/azure/virtual-network/virtual-network-nsg-manage-log"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>	&lt;p&gt;View and analyze logs&lt;br /&gt;
To learn how to view resource log data, see Azure platform logs overview. If you send diagnostics data to:&lt;/p&gt;

	&lt;p&gt;Azure Monitor logs: You can use the network security group analytics solution for enhanced insights. The solution provides visualizations for NSG rules that allow or deny traffic, per MAC address, of the network interface in a virtual machine.&lt;br /&gt;
Azure Storage account: Data is written to a PT1H.json file. You can find the:&lt;br /&gt;
Event log in the following path: insights-logs-networksecuritygroupevent/resourceId=/SUBSCRIPTIONS/[ID]/RESOURCEGROUPS/[RESOURCE-GROUP-NAME-FOR-NSG]/PROVIDERS/MICROSOFT.NETWORK/NETWORKSECURITYGROUPS/[NSG NAME]/y=[YEAR]/m=[MONTH/d=[DAY]/h=[HOUR]/m=[MINUTE]&lt;br /&gt;
Rule counter log in the following path: insights-logs-networksecuritygrouprulecounter/resourceId=/SUBSCRIPTIONS/[ID]/RESOURCEGROUPS/[RESOURCE-GROUP-NAME-FOR-NSG]/PROVIDERS/MICROSOFT.NETWORK/NETWORKSECURITYGROUPS/[NSG NAME]/y=[YEAR]/m=[MONTH/d=[DAY]/h=[HOUR]/m=[MINUTE]&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:29.770">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-FIREWALL3" name="Enable Threat intelligence-based filtering to alert and deny traffic" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Enable Threat intelligence-based filtering to alert and deny traffic&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Threat intelligence-based filtering can be enabled for your firewall to alert and deny traffic from/to known malicious IP addresses and domains. The IP addresses and domains are sourced from the Microsoft Threat Intelligence feed.&lt;br&gt; By default, threat intelligence-based filtering is enabled in alert mode. Azure recommends to enable it in alert and deny mode.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; By default, threat intelligence-based filtering is enabled in alert mode. You cannot turn off this feature or change the mode until the portal interface becomes available in your region.&lt;br&gt; You can then change the mode by selecting "Alert and deny" in the Azure portal interface.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; none&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Azure Firewall threat intelligence-based filtering" url="https://docs.microsoft.com/en-us/azure/firewall/threat-intel"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Testing&lt;/p&gt;

  &lt;p&gt;- Outbound testing - Outbound traffic alerts should be a rare occurrence, as it means that your environment has been compromised. To help test outbound alerts are working, a test FQDN has been created that triggers an alert. Use testmaliciousdomain.eastus.cloudapp.azure.com for your outbound tests.&lt;/p&gt;

  &lt;p&gt;- Inbound testing - You can expect to see alerts on incoming traffic if DNAT rules are configured on the firewall. This is true even if only specific sources are allowed on the DNAT rule and traffic is otherwise denied. Azure Firewall doesn't alert on all known port scanners; only on scanners that are known to also engage in malicious activity.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:29.770">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-ENCRYPTION-TRANSIT" name="Encrypt Sensitive data in transit" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;div&gt;
   Use encryption to protect traffic on external and public networks as it is critical for data protection 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   Rationale: 
 &lt;/div&gt; 
 &lt;div&gt;
   Protect data in transit against 'out of band' attacks (such as traffic capture) using encryption to ensure that attackers cannot easily read or modify the data. 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   Remediation: 
 &lt;/div&gt; 
 &lt;div&gt;
   1. Use a valid TLS/SSL certificate for custom domains. 
 &lt;/div&gt; 
 &lt;div&gt;
   2. Ensure that any clients connecting to your Azure resources for HTTP traffic can negotiate TLS v1.2 or greater. 
 &lt;/div&gt; 
 &lt;div&gt;
   3. Use SSH (for Linux) or RDP/TLS (for Windows) for remote management, instead of unencrypted protocols 
 &lt;/div&gt; 
 &lt;div&gt;
   4. Disable obsoleted SSL/TLS/SSH versions, protocols, and weak ciphers 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   Redirect HTTP to HTTPs 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   By default, clients can connect to web apps by using both HTTP or HTTPS. Microsoft Azure recommends redirecting HTTP to HTTPs because HTTPS uses the SSL/TLS protocol to provide a secure connection, which is both encrypted and authenticated. 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   Enforce FTPS 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   For enhanced security, you should allow FTP over TLS/SSL only. You can also disable both FTP and FTPS if you don't use FTP deployment. 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   In your app's resource page in Azure portal, select Configuration &amp;gt; General settings from the left navigation. 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   To disable unencrypted FTP, select FTPS Only in FTP state. To disable both FTP and FTPS entirely, select Disabled. When finished, click Save. If using FTPS Only, you must enforce TLS 1.2 or higher by navigating to the TLS/SSL settings blade of your web app. TLS 1.0 and 1.1 are not supported with FTPS Only. 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   Enable client certificates 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   To set up your app to require client certificates, you can switch On the Require incoming certificate by selecting Configuration &amp;gt; General Settings from the Azure Portal or you need to set the clientCertEnabled setting for your app to true. To set the setting, run the following command in the Cloud Shell. 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   az webapp update --set clientCertEnabled=true --name &amp;lt;app_name&amp;gt; --resource-group &amp;lt;group_name&amp;gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   Impact: 
 &lt;/div&gt; 
 &lt;div&gt;
   None 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Add a TLS/SSL certificate in Azure App Service" url="https://docs.microsoft.com/en-us/azure/app-service/configure-ssl-certificate"/>
            <reference name="Azure App ServiceSecurity" url="https://docs.microsoft.com/en-us/azure/app-service/overview-security"/>
            <reference name="Configure TLS mutual authentication for Azure App Service" url="https://docs.microsoft.com/en-us/azure/app-service/app-service-web-configure-tls-mutual-auth"/>
            <reference name="Deploy your app to Azure App Service using FTP/S" url="https://docs.microsoft.com/en-us/azure/app-service/deploy-ftp"/>
            <reference name="Security in Azure App Service" url="https://docs.microsoft.com/en-us/azure/app-service/overview-security"/>
            <reference name="Security recommendations for App Service" url="https://docs.microsoft.com/en-us/azure/app-service/security-recommendations"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Test HTTPS 
&lt;/div&gt; 
&lt;div&gt;
  In various browsers, browse to https://&amp;lt;your.custom.domain&amp;gt; to verify that it serves up your app. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Your application code can inspect the protocol via the "x-appservice-proto" header. The header will have a value of http or https. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Note 
&lt;/div&gt; 
&lt;div&gt;
  If your app gives you certificate validation errors, you're probably using a self-signed certificate. 
&lt;/div&gt; 
&lt;div&gt;
  If that's not the case, you may have left out intermediate certificates when you export your certificate to the PFX file. 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:29.770">
              <output/>
            </source>
            <references>
              <reference name="Azure App ServiceSecurity" url="https://docs.microsoft.com/en-us/azure/app-service/overview-security"/>
            </references>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-CRED-SCAN" name="Implement Credential Scanner to identify credentials within code" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Implement Credential Scanner to identify credentials within code&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Credential Scanner (aka CredScan) is a tool developed and maintained by Microsoft to identify credential leaks such as those in source code and configuration files. Some of the commonly found types of credentials are default passwords, SQL connection strings and Certificates with private keys.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Prerequisites:&lt;br&gt; 1. You are using the Azure DevOps Build system.&lt;br&gt; 2. The Microsoft Security Code Analysis Extension installed in your account.&lt;br&gt; Setup:&lt;br&gt; 1. Open your team project from your Azure DevOps Account.&lt;br&gt; 2. Navigate to the Build tab under Build and Release&lt;br&gt; 3. Select the Build Definition into which you wish to add the CredScan build task.&lt;br&gt; - New - Click New and follow the steps detailed to create a new Build Definition.&lt;br&gt; - Edit - Select the Build Definition. On the subsequent page, click Edit to begin editing the Build Definition.&lt;br&gt; 4. Click + to navigate to the Add Tasks pane.&lt;br&gt; 5. Find the CredScan build task either from the list or using the search box and then click Add.&lt;br&gt; 6. The Run CredScan build task should now be a part of the Build Definition.&lt;/p&gt; 
&lt;p&gt;Customizing the CredScan Build Task:&lt;br&gt; 1. Click the task Run CredScan to see the different options available within.&lt;br&gt; 2. Available options include&lt;br&gt; Output Format - TSV/ CSV/ SARIF/ PREfast&lt;br&gt; Tool Version (Recommended: Latest)&lt;br&gt; Scan Folder - The folder in your repository to scan&lt;br&gt; Searchers File Type - Options to locate the searchers file used for scanning.&lt;br&gt; Suppressions File - A JSON file can be used for suppressing issues in the output log (more details in the Resources section).&lt;br&gt; (New) Verbose Output - self explanatory&lt;br&gt; Batch Size - The number of concurrent threads used to run Credential Scanners in parallel. Defaults to 20 (Value must be in the range of 1 to 2147483647).&lt;br&gt; (New) Match Timeout - The amount of time to spend attempting a searcher match before abandoning the check.&lt;br&gt; (New) File Scan Read Buffer Size - Buffer size while reading content in bytes. (Defaults to 524288)&lt;br&gt; (New) Maximum File Scan Read Bytes - Maximum number of bytes to read from a given file during content analysis. (Defaults to 104857600)&lt;br&gt; Run this task (under Control Options) - Specifies when the task should run. Choose "Custom conditions" to specify more complex conditions.&lt;/p&gt; 
&lt;p&gt;*Version - Build task version within Azure DevOps. Not frequently used.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Getting started with Credential Scanner (CredScan)" url="https://secdevtools.azurewebsites.net/helpcredscan.html"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that Credential Scanner is implemented&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:29.770">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-N09" name="Isolate Azure instances into different VNets" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Specify a VNet for the Azure instance as a launch parameter. Applications that run on the Cloud instance can use the VNet security configuration when they access Azure resources.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  You can configure an Azure cloud service from Solution Explorer in Visual Studio. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Create a virtual network with multiple subnets" url="https://docs.microsoft.com/en-us/azure/virtual-network/virtual-networks-create-vnet-arm-pportal"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that the Azure instances are into different VNets.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:29.770">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-N08" name="Isolate Azure resources into separate VNets by function" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Place the resources into separate VNets according to their use (production, development, test).
                        Placing such resources accordingly ensures that a resource of a higher security level is not
                        exposed by the security settings of a lower labeled VNet.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Identify the resources that exist in an incorrect VNet.&lt;/li&gt;
                        &lt;li&gt;Migrate or move it to the correct Vnet.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Azure Virtual Network" url="https://docs.microsoft.com/en-us/azure/virtual-network/virtual-networks-overview"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Identify the resources that exist in an incorrect VNet.&lt;/li&gt;
                            &lt;li&gt;Check that the resources are into the correct Vnet.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:29.771">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-ADMIN-INV" name="Maintain an inventory of administrative accounts" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Maintain an inventory of administrative accounts&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Azure AD has built-in roles that must be explicitly assigned and are queryable. Use the Azure AD PowerShell module to perform ad hoc queries to discover accounts that are members of administrative groups.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; How to get a directory role in Azure AD with PowerShell&lt;/p&gt; 
&lt;p&gt;Get-AzureADDirectoryRole [-Filter ] [-InformationAction ] [-InformationVariable ] []&lt;/p&gt; 
&lt;p&gt;Get-AzureADDirectoryRole -ObjectId  [-InformationAction ] [-InformationVariable ] []&lt;/p&gt; 
&lt;p&gt;How to get members of a directory role in Azure AD with PowerShell&lt;/p&gt; 
&lt;p&gt;Get-AzureADDirectoryRoleMember -ObjectId  [-InformationAction ] [-InformationVariable ] []&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Get-AzureADDirectoryRole" url="https://docs.microsoft.com/en-us/powershell/module/azuread/get-azureaddirectoryrole?view=azureadps-2.0"/>
            <reference name="Get-AzureADDirectoryRoleMember" url="https://docs.microsoft.com/en-us/powershell/module/azuread/get-azureaddirectoryrolemember?view=azureadps-2.0"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that you maintain an inventory of administrative accounts.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:29.771">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-APPROVED-LOCATIONS" name="Manage Azure resources from only approved locations" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Manage Azure resources from only approved locations 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  Use Conditional Access Named Locations to allow access from only specific logical groupings of IP address ranges or countries/regions. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  Prerequisites 
&lt;/div&gt; 
&lt;div&gt;
  You need: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - An Azure AD tenant. Sign up for a free trial. 
&lt;/div&gt; 
&lt;div&gt;
  - A user, who is a global administrator for the tenant. 
&lt;/div&gt; 
&lt;div&gt;
  - An IP range that is established and credible in your organization. The IP range needs to be in Classless Interdomain Routing (CIDR) format. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Configure named locations 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  1. Sign in to the Azure portal. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  2. In the left pane, select Azure Active Directory, then select Conditional Access from the Security section. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  3. On the Conditional Access page, select Named locations and select New location. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  4. Fill out the form on the new page. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - In the Name box, type a name for your named location. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - In the IP ranges box, type the IP range in CIDR format. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - Click Create. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Quickstart: Configure named locations in Azure Active Directory" url="https://docs.microsoft.com/en-us/azure/active-directory/reports-monitoring/quickstart-configure-named-locations"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Ensure that you have configured named locations in your Azure environment.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:29.771">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-REPOS-GIT" name="Securely store configuration of Azure resources" issueId="" issueLink="" platform="" cost="0" risk="42" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Securely store configuration of Azure resources&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; If using custom Azure Policy definitions, use Azure DevOps or Azure Repos to securely store and manage your code.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Use version control to save your work and coordinate code changes across your team. Even if you are just a single developer, version control helps you stay organized as you fix bugs and develop new features. Version control keeps a history of your development so that you can review and even rollback to any version of your code with ease.&lt;/p&gt; 
&lt;p&gt;Version control workflow&lt;/p&gt; 
&lt;p&gt;Version control has a general workflow that most developers use when writing code and sharing it with the team.&lt;/p&gt; 
&lt;p&gt;These steps are:&lt;br&gt; 1. Get a local copy of code if they do not have one yet.&lt;br&gt; 2. Make changes to code to fix bugs or add new features.&lt;br&gt; 3. Once the code is ready, make it available for review by your team.&lt;br&gt; 4. Once the code is reviewed, merge it into the team's shared codebase.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Azure Repos Git tutorial" url="https://docs.microsoft.com/en-us/azure/devops/repos/git/gitworkflow?view=azure-devops"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that the configuration of Azure resources is securely stored.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:29.771">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-N01" name="Set Network Security Groups to be as restrictive as possible" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Use Network Security Groups (NSG) to filter the ingress/egress network traffic to Azure resources. Set the limit all the traffic (ingress/egress) on the NSG in order to force the use of least privilege into the NSG.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Identify Azure resources for each NSG.&lt;/li&gt; 
  &lt;li&gt;Create a set of least privilege NSG for those resources.&lt;/li&gt; 
  &lt;li&gt;Place the resources in those security groups.&lt;/li&gt; 
  &lt;li&gt;Change the inbound/outbound security rules to fulfill the least privilege.&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - How to open ports to a virtual machine with the Azure portal" url="https://docs.microsoft.com/en-us/azure/virtual-machines/windows/nsg-quickstart-portal"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Check that each Azure resources has got their Network Security Groups.&lt;/li&gt;
                            &lt;li&gt;Check that a set of these groups achieve with the principle of the least
                            privilege.&lt;/li&gt;
                            &lt;li&gt;Check that the inbound/outbound security rules are enabled and correctly
                            configured.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:29.771">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-MANAGED-ID" name="Use Managed Identities" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Use Managed Identities&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Use Managed Identities to provide Azure services with an automatically managed identity in Azure AD. Managed Identities allows you to authenticate to any service that supports Azure AD authentication to Azure Resource Manager and can be used with API/Azure Portal/CLI/PowerShell.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Enable system-assigned managed identity during creation of a VM&lt;/p&gt; 
&lt;p&gt;To enable system-assigned managed identity on a VM during its creation, your account needs the Virtual Machine Contributor role assignment. No additional Azure AD directory role assignments are required.&lt;/p&gt; 
&lt;p&gt;- Under the Management tab in the Identity section, switch Managed service identity to On.&lt;/p&gt; 
&lt;p&gt;Enable system-assigned managed identity on an existing VM&lt;/p&gt; 
&lt;p&gt;To enable system-assigned managed identity on a VM that was originally provisioned without it, your account needs the Virtual Machine Contributor role assignment. No additional Azure AD directory role assignments are required.&lt;/p&gt; 
&lt;p&gt;1. Sign in to the Azure portal using an account associated with the Azure subscription that contains the VM.&lt;/p&gt; 
&lt;p&gt;2. Navigate to the desired Virtual Machine and select Identity.&lt;/p&gt; 
&lt;p&gt;3. Under System assigned, Status, select On and then click Save:&lt;/p&gt; 
&lt;p&gt;Assign a user-assigned managed identity to an existing VM&lt;/p&gt; 
&lt;p&gt;To assign a user-assigned identity to a VM, your account needs the Virtual Machine Contributor and Managed Identity Operator role assignments. No additional Azure AD directory role assignments are required.&lt;/p&gt; 
&lt;p&gt;1. Sign in to the Azure portal using an account associated with the Azure subscription that contains the VM.&lt;/p&gt; 
&lt;p&gt;2. Navigate to the desired VM and click Identity, User assigned and then +Add.&lt;/p&gt; 
&lt;p&gt;3. Click the user-assigned identity you want to add to the VM and then click Add.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Configure managed identities for Azure resources on a VM using the Azure portal" url="https://docs.microsoft.com/en-us/azure/active-directory/managed-identities-azure-resources/qs-configure-portal-windows-vm"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that you manage identities securely and automatically.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:29.771">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-N02" name="Use Network Security Groups to block inbound port traffic from 0.0.0.0/0" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Use Network Security Groups (NSG) to filter the ingress/egress network traffic to Azure resources. Set the limit inbound access to all TCP or all ports to avoid undue exposure to risk.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt; 
  &lt;li&gt;Select Network Security Groups.&lt;/li&gt; 
  &lt;li&gt;Choose the NSG to edit (or create a new one).&lt;/li&gt; 
  &lt;li&gt;In "Inbound security rules":&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;ul&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Remove all rules that allow port traffic.&lt;/li&gt; 
   &lt;li&gt;Add a rule to deny port traffic&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/ul&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - How to open ports to a virtual machine with the Azure portal" url="https://docs.microsoft.com/en-us/azure/virtual-machines/windows/nsg-quickstart-portal"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Network Security Groups.&lt;/li&gt;
                            &lt;li&gt;Choose the NSG to view one of them.&lt;/li&gt;
                            &lt;li&gt;In &amp;quot;Inbound security rules&amp;quot;, check that all the traffic from
                            0.0.0.0/0 is are blocked.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:29.771">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-N03" name="Use Network Security Groups to block ingress to port 3389 from 0.0.0.0/0" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Use Network Security Groups (NSG) to filter the ingress/egress network traffic to Azure
                        resources. Set the limit inbound access to port 3389 (Remote Desk Protocol) to IP addresses that
                        require this access to avoid undue exposure to risk.&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                        &lt;li&gt;Select Network Security Groups.&lt;/li&gt;
                        &lt;li&gt;Choose the NSG to edit (or create a new one).&lt;/li&gt;
                        &lt;li&gt;In &amp;quot;Inbound security rules&amp;quot;:&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ul&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Allow RDP port traffic just to/from IPs that require the access.&lt;/li&gt;
                        &lt;li&gt;Otherwise, remove all rules that allow port 3389 traffic.&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/ul&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - How to open ports to a virtual machine with the Azure portal" url="https://docs.microsoft.com/en-us/azure/virtual-machines/windows/nsg-quickstart-portal"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Network Security Groups.&lt;/li&gt;
                            &lt;li&gt;Choose the NSG to view one of them.&lt;/li&gt;
                            &lt;li&gt;In &amp;quot;Inbound security rules&amp;quot;, check that the traffic through the
                            port 3389 is blocked.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:29.771">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-ADAPTIVE-NET-HARDENING" name="Use Security Center's Adaptive Network Hardening" issueId="" issueLink="" platform="" cost="1" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Use Security Center's Adaptive Network Hardening&lt;/p&gt;

	&lt;p&gt;Rationale:&lt;br /&gt;
Applying network security groups (NSG) to filter traffic to and from resources, improves your network security posture. However, there can still be some cases in which the actual traffic flowing through the NSG is a subset of the NSG rules defined. In these cases, further improving the security posture can be achieved by hardening the NSG rules, based on the actual traffic patterns.&lt;/p&gt;

	&lt;p&gt;Adaptive network hardening provides recommendations to further harden the NSG rules. It uses a machine learning algorithm that factors in actual traffic, known trusted configuration, threat intelligence, and other indicators of compromise, and then provides recommendations to allow traffic only from specific IP/port tuples.&lt;/p&gt;

	&lt;p&gt;Note: Adaptive network hardening recommendations are only supported on the following specific ports (for both UDP and TCP): 13, 17, 19, 22, 23, 53, 69, 81, 111, 119, 123, 135, 137, 138, 139, 161, 162, 389, 445, 512, 514, 593, 636, 873, 1433, 1434, 1900, 2049, 2301, 2323, 2381, 3268, 3306, 3389, 4333, 5353, 5432, 5555, 5800, 5900, 5900, 5985, 5986, 6379, 6379, 7000, 7001, 7199, 8081, 8089, 8545, 9042, 9160, 9300, 11211, 16379, 26379, 27017, 37215&lt;/p&gt;

	&lt;p&gt;Remediation:&lt;br /&gt;
View and manage hardening alerts and rules&lt;/p&gt;

	&lt;p&gt;1. From Security Center's menu, open the Azure Defender dashboard and select the adaptive network hardening tile, or the insights panel item related to adaptive network hardening.&lt;/p&gt;

	&lt;p&gt;Tip: The insights panel shows the percentage of your VMs currently defended with adaptive network hardening.&lt;/p&gt;

	&lt;p&gt;The details page for the Adaptive Network Hardening recommendations should be applied on internet facing virtual machines recommendation opens with your network VMs grouped into three tabs:&lt;/p&gt;

	&lt;p&gt;a. Unhealthy resources: VMs that currently have recommendations and alerts that were triggered by running the adaptive network hardening algorithm.&lt;/p&gt;

	&lt;p&gt;b. Healthy resources: VMs without alerts and recommendations.&lt;/p&gt;

	&lt;p&gt;c. Unscanned resources: VMs that the adaptive network hardening algorithm cannot be run on because of one of the following reasons:&lt;br /&gt;
i. VMs are Classic VMs: Only Azure Resource Manager VMs are supported.&lt;br /&gt;
ii. Not enough data is available: In order to generate accurate traffic hardening recommendations, Security Center requires at least 30 days of traffic data.&lt;br /&gt;
iii. VM is not protected by Azure Defender: Only VMs protected with Azure Defender for servers are eligible for this feature.&lt;/p&gt;

	&lt;p&gt;3. From the Unhealthy resources tab, select a VM to view its alerts and the recommended hardening rules to apply.&lt;/p&gt;

	&lt;p&gt;- The Rules tab lists the rules that adaptive network hardening recommends you add&lt;br /&gt;
- The Alerts tab lists the alerts that were generated due to traffic, flowing to the resource, which is not within the IP range allowed in the recommended rules.&lt;/p&gt;

	&lt;p&gt;4. Optionally, edit the rules:&lt;/p&gt;

	&lt;p&gt;- Modify a rule&lt;br /&gt;
- Delete a rule&lt;br /&gt;
- Add a rule&lt;/p&gt;

	&lt;p&gt;5. Select the rules that you want to apply on the NSG, and click Enforce.&lt;/p&gt;

	&lt;p&gt;Tip: If the allowed source IP ranges shows as 'None', it means that recommended rule is a deny rule, otherwise, it is an allow rule.&lt;/p&gt;

	&lt;p&gt;Note: The enforced rules are added to the &lt;acronym title="s"&gt;NSG&lt;/acronym&gt; protecting the VM. (A VM could be protected by an NSG that is associated to its NIC, or the subnet in which the VM resides, or both)&lt;/p&gt;

	&lt;p&gt;Impact:&lt;br /&gt;
None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Improve your network security posture with adaptive network hardening" url="https://docs.microsoft.com/en-us/azure/security-center/security-center-adaptive-network-hardening"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that Security Center's Adaptive Network Hardening recommendations are enforced  to your NSG configurations.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:29.771">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-TAGS" name="Use service tags in place of specific IP addresses" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Use service tags in place of specific IP addresses&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; A service tag represents a group of IP address prefixes from a given Azure service. Microsoft manages the address prefixes encompassed by the service tag and automatically updates the service tag as addresses change, minimizing the complexity of frequent updates to network security rules.&lt;/p&gt; 
&lt;p&gt;You can use service tags to define network access controls on network security groups or Azure Firewall. Use service tags in place of specific IP addresses when you create security rules. By specifying the service tag name, such as ApiManagement, in the appropriate source or destination field of a rule, you can allow or deny the traffic for the corresponding service.&lt;/p&gt; 
&lt;p&gt;You can use service tags to achieve network isolation and protect your Azure resources from the general Internet while accessing Azure services that have public endpoints. Create inbound/outbound network security group rules to deny traffic to/from Internet and allow traffic to/from AzureCloud or other available service tags of specific Azure services.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; By default, service tags reflect the ranges for the entire cloud. Some service tags also allow more granular control by restricting the corresponding IP ranges to a specified region. For example, the service tag Storage represents Azure Storage for the entire cloud, but Storage.WestUS narrows the range to only the storage IP address ranges from the WestUS region.&lt;/p&gt; 
&lt;p&gt;By specifying the service tag name in the appropriate source or destination field of a rule, you can allow or deny the traffic for the corresponding service.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Virtual network service tags" url="https://docs.microsoft.com/en-us/azure/virtual-network/service-tags-overview"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that your network security rules are simplified by using VNet Service tags.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:29.771">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="AUTHORIZATION" name="Authorization" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="LOSS-CONTROL_ENV" name="Attackers gain unauthorized access to the control of the environment" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;Attackers could potentially gain unauthorized access to the control of the environment, due to user accounts - or role groups - not being well defined and configured. As a consequence attackers may be able to make changes without root approval.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="75" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-ACCESS-01">
                  <countermeasures>
                    <countermeasure ref="AZURE-ADMIN-INV" mitigation="50"/>
                    <countermeasure ref="AZURE-MANAGED-ID" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZURE-ADMIN-INV" mitigation="50"/>
                <countermeasure ref="AZURE-MANAGED-ID" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="GENERAL" name="General" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="UNCONFIGURED-SECURITY" name="Attackers gain access to the system by exploiting weak security configurations" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>Weak security configurations like using sharing passwords in plain text, using weak passwords, using obsolete encryption algorithms, etc. can lead attackers to gain access to the system.</desc>
              <riskRating confidentiality="75" integrity="50" availability="25" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-VM01">
                  <countermeasures>
                    <countermeasure ref="AZURE-REPOS-GIT" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZURE-REPOS-GIT" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="ACCESS-TO-DATA" name="Sensitive data is compromised through unauthorized access to data storage" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;A data breach is a security violation in which sensitive, protected or confidential data is copied, transmitted, viewed, stolen or used by an individual unauthorized to do so. Sensitive data could be exposed due to a bad configuration in user permissions.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-UNSECURE-CREDENTIALS">
                  <countermeasures>
                    <countermeasure ref="AZURE-CRED-SCAN" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZURE-CRED-SCAN" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="LOGGING AND MONITORING" name="Logging and Monitoring" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="INSUFFICIENT-LOGGING-MONITORING" name="Exploitation of insufficient logging and monitoring" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;Exploitation of insufficient logging and monitoring is the bedrock of nearly every major incident. Attackers rely on the lack of monitoring and timely response to achieve their goals without being detected.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="AZ-ENABLE-ALERTS" mitigation="14"/>
                    <countermeasure ref="AZURE-AD10" mitigation="14"/>
                    <countermeasure ref="AZURE-MONITOR6" mitigation="14"/>
                    <countermeasure ref="AZURE-NSG-FLOW-LOGS" mitigation="14"/>
                    <countermeasure ref="AZURE-SECURITY-CENTER4" mitigation="14"/>
                    <countermeasure ref="C-AZURE-VNET1" mitigation="15"/>
                    <countermeasure ref="C-AZURE-VNET2" mitigation="15"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-ENABLE-ALERTS" mitigation="14"/>
                <countermeasure ref="AZURE-AD10" mitigation="14"/>
                <countermeasure ref="AZURE-MONITOR6" mitigation="14"/>
                <countermeasure ref="AZURE-NSG-FLOW-LOGS" mitigation="14"/>
                <countermeasure ref="AZURE-SECURITY-CENTER4" mitigation="14"/>
                <countermeasure ref="C-AZURE-VNET1" mitigation="15"/>
                <countermeasure ref="C-AZURE-VNET2" mitigation="15"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="NETWORKING" name="Networking" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="AZURE-UNAUTHORISED-CONNECTION" name="Attackers perform unauthorized network access" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;Attackers could perform unauthorized network access to the resources through misconfigured ports or security network configurations.&lt;/p&gt;</desc>
              <riskRating confidentiality="25" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-NET-01">
                  <countermeasures>
                    <countermeasure ref="AZ-N01" mitigation="9"/>
                    <countermeasure ref="AZ-N02" mitigation="9"/>
                    <countermeasure ref="AZ-N03" mitigation="9"/>
                    <countermeasure ref="AZURE-ADAPTIVE-NET-HARDENING" mitigation="9"/>
                    <countermeasure ref="AZURE-APPROVED-LOCATIONS" mitigation="9"/>
                    <countermeasure ref="AZURE-DDOS-PROTECTION" mitigation="9"/>
                    <countermeasure ref="AZURE-FIREWALL3" mitigation="9"/>
                    <countermeasure ref="AZURE-IDS-IPS" mitigation="9"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AZURE-NON-IDENTIFY">
                  <countermeasures>
                    <countermeasure ref="AZURE-TAGS" mitigation="10"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AZURE-VNET01">
                  <countermeasures>
                    <countermeasure ref="AZ-N08" mitigation="9"/>
                    <countermeasure ref="AZ-N09" mitigation="9"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-N01" mitigation="9"/>
                <countermeasure ref="AZ-N02" mitigation="9"/>
                <countermeasure ref="AZ-N03" mitigation="9"/>
                <countermeasure ref="AZ-N08" mitigation="9"/>
                <countermeasure ref="AZ-N09" mitigation="9"/>
                <countermeasure ref="AZURE-ADAPTIVE-NET-HARDENING" mitigation="9"/>
                <countermeasure ref="AZURE-APPROVED-LOCATIONS" mitigation="9"/>
                <countermeasure ref="AZURE-DDOS-PROTECTION" mitigation="9"/>
                <countermeasure ref="AZURE-FIREWALL3" mitigation="9"/>
                <countermeasure ref="AZURE-IDS-IPS" mitigation="9"/>
                <countermeasure ref="AZURE-TAGS" mitigation="10"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="DATA-EXPOSED-CHANNEL" name="The data is exposed through the transmission channel" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;Attackers can obtain the data through the transmitted channel because this does not have the security measures in place to protect the data&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="DATA-TRANSMIT-CLEAR">
                  <countermeasures>
                    <countermeasure ref="AZURE-ENCRYPTION-TRANSIT" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZURE-ENCRYPTION-TRANSIT" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="24a6bc3c-c417-408b-9702-386eb8a84e44" diagramComponentId="dbe713dc-d703-4e1e-bf1b-5be985a0dd7c" ref="ea6f9f9c-7e21-4a5a-9213-5d9c7d8c9a95" name="Web Application - Server side (CS-Default)" desc="" library="CS-Default" parentComponentRef="" componentDefinitionRef="web-application-server-side">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="private-secured"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses>
        <weakness ref="CWE-770" name="Allocation of Resources Without Limits or Throttling" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;The software allocates a reusable resource or group of resources on behalf of an actor without imposing any restrictions on how many resources can be allocated, in violation of the intended security policy.&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:25.701">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CWE-319" name="Cleartext Transmission of Sensitive Information" state="0" impact="100" issueId="" issueLink="">
          <desc>The software transmits sensitive or security-critical data in cleartext in a communication channel that can be sniffed by unauthorized actors.

Many communication channels can be "sniffed" by attackers during data transmission. For example, network traffic can often be sniffed by any attacker who has access to a network interface. This significantly lowers the difficulty of exploitation by attackers.  </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:25.702">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CWE-352" name="Cross Site Request Forgery" state="0" impact="100" issueId="" issueLink="">
          <desc>The web application does not, or can not, sufficiently verify whether a well-formed, valid,
                        consistent request was intentionally provided by the user who submitted the request.&amp;nbsp;
                        &lt;div&gt;
                        &amp;nbsp;
                        &lt;br /&gt;When a web server is designed to receive a request from a client without any
                        mechanism for verifying that it was intentionally sent, then it might be possible for an
                        attacker to trick a client into making an unintentional request to the web server which will be
                        treated as an authentic request. This can be done via a URL, image load, XMLHttpRequest, etc.
                        and can result in exposure of data or unintended code execution.
                        &lt;/div&gt;
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:25.264">
              <output/>
            </source>
            <references>
              <reference name="CWE-352: Cross-Site Request Forgery (CSRF)" url="https://cwe.mitre.org/data/definitions/352.html"/>
            </references>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CWE-502" name="Deserialization of Untrusted Data" state="0" impact="100" issueId="" issueLink="">
          <desc>The application deserializes untrusted data without sufficiently verifying that the resulting
                        data will be valid.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:25.703">
              <output/>
            </source>
            <references>
              <reference name="CWE-502: Deserialization of Untrusted Data" url="https://cwe.mitre.org/data/definitions/502.html"/>
              <reference name="Top 10-2017 A8-Insecure Deserialization" url="https://www.owasp.org/index.php/Top_10-2017_A8-Insecure_Deserialization"/>
            </references>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CWE-15" name="External Control of System or Configuration Setting" state="0" impact="100" issueId="" issueLink="">
          <desc>One or more system settings or configuration elements can be externally controlled by a user.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:26.090">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CWE-284" name="Improper Access Control" state="0" impact="100" issueId="" issueLink="">
          <desc>The software does not restrict or incorrectly restricts access to a resource from an unauthorized actor.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:24.611">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CWE-460" name="Improper Cleanup on Thrown Exception" state="0" impact="100" issueId="" issueLink="">
          <desc>The product does not clean up its state or incorrectly cleans up its state when an exception is thrown, leading to unexpected state or control flow.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:25.702">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CWE-116" name="Improper Encoding or Escaping of Output" state="0" impact="100" issueId="" issueLink="">
          <desc>The software prepares a structured message for communication with another component, but encoding or escaping of the data is either missing or done incorrectly. As a result, the intended structure of the message is not preserved.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:26.090">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CWE-841" name="Improper Enforcement of Behavioral Workflow" state="0" impact="100" issueId="" issueLink="">
          <desc>The software supports a session in which more than one behavior
                        must be performed by an actor, but it does not properly ensure that the actor
                        performs the behaviors in the required sequence.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:25.703">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CWE-173" name="Improper Handling of Alternative Encoding" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;The software does not properly handle cases in which the input uses an alternative encoding scheme that is valid for the control sphere to which the input is being sent.&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:25.263">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CWE-235" name="Improper Handling of Extra Parameters" state="0" impact="100" issueId="" issueLink="">
          <desc>The software does not handle or incorrectly handles when the number of parameters, fields, or arguments with the same name exceeds the expected amount.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:25.264">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CWE-22" name="Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;The software uses external input to construct a pathname that is intended to identify a file or directory that is located underneath a restricted parent directory, but the software does not properly neutralize special elements within the pathname that can cause the pathname to resolve to a location that is outside of the restricted directory.&amp;nbsp;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;br&gt;Many file operations are intended to take place within a restricted directory. By using special elements such as ".." and "/" separators, attackers can escape outside of the restricted location to access files or directories that are elsewhere on the system. One of the most common special elements is the "../" sequence, which in most modern operating systems is interpreted as the parent directory of the current location. This is referred to as relative path traversal.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;Path traversal also covers the use of absolute pathnames such as "/usr/local/bin", which may also be useful in accessing unexpected files. This is referred to as absolute path traversal. In many programming languages, the injection of a null byte (the 0 or NUL) may allow an attacker to truncate a generated filename to widen the scope of attack. For example, the software may add ".txt" to any pathname, thus limiting the attacker to text files, but a null injection may effectively remove this restriction.&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:25.264">
              <output/>
            </source>
            <references>
              <reference name="CWE-22: Improper Limitation of a Pathname to a Restricted Directory ('Path Traversal')" url="https://cwe.mitre.org/data/definitions/22.html"/>
            </references>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CWE-95" name="Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')" state="0" impact="100" issueId="" issueLink="">
          <desc>The software receives input from an upstream component, but it does not neutralize or incorrectly neutralizes code syntax before using the input in a dynamic evaluation call (e.g. "eval").</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:26.090">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CWE-78" name="Improper Neutralization of Special Elements used in an OS Command ('OS Command Injection')" state="0" impact="100" issueId="" issueLink="">
          <desc>The software constructs all or part of an OS command using externally-influenced input from an upstream component, but it does not neutralize or incorrectly neutralizes special elements that could modify the intended OS command when it is sent to a downstream component. This could allow attackers to execute unexpected, dangerous commands directly on the operating system. This weakness can lead to a vulnerability in environments in which the attacker does not have direct access to the operating system, such as in web applications.&amp;nbsp; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Alternately, if the weakness occurs in a privileged program, it could allow the attacker to specify commands that normally would not be accessible, or to call alternate commands with privileges that the attacker does not have. The problem is exacerbated if the compromised process does not follow the principle of least privilege, because the attacker-controlled commands may run with special system privileges that increases the amount of damage. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt;
  There are at least two subtypes of OS command injection:&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;The application intends to execute a single, fixed program that is under its own control. It intends to use externally-supplied inputs as arguments to that program. For example, the program might use system(&amp;quot;nslookup [HOSTNAME]&amp;quot;) to run nslookup and allow the user to supply a HOSTNAME, which is used as an argument. Attackers cannot prevent nslookup from executing. However, if the program does not remove command separators from the HOSTNAME argument, attackers could place the separators into the arguments, which allows them to execute their own program after nslookup has finished executing.The application accepts an input that it uses to fully select which program to run, as well as which commands to use.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;The application simply redirects this entire command to the operating system. For example, the program might use &amp;quot;exec([COMMAND])&amp;quot; to execute the [COMMAND] that was supplied by the user. If the COMMAND is under attacker control, then the attacker can execute arbitrary commands or programs. If the command is being executed using functions like exec() and CreateProcess(), the attacker might not be able to combine multiple commands together in the same line. From a weakness standpoint, these variants represent distinct programmer errors.&amp;nbsp;&lt;/li&gt; 
 &lt;/ul&gt;In the first variant, the programmer clearly intends input from untrusted parties will be part of the arguments in the command to be executed. In the second variant, the programmer does not intend for the command to be accessible to any untrusted party, but the programmer probably has not accounted for alternate ways in which malicious attackers can provide input. 
&lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:26.090">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CWE-117" name="Improper Output Neutralization for Logs" state="0" impact="100" issueId="" issueLink="">
          <desc>The software does not neutralize or incorrectly neutralizes
                        output that is written to logs.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:24.846">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CWE-915" name="Improperly Controlled Modification of Dynamically-Determined Object Attributes" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;The software receives input from an upstream component that specifies multiple attributes, properties, or fields that are to be initialized or updated in an object, but it does not properly control which attributes can be modified.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&lt;br&gt;If the object contains attributes that were only intended for internal use, then their unexpected modification could lead to a vulnerability. This weakness is sometimes known by the language-specific mechanisms that make it possible, such as mass assignment, auto-binding, or object injection.&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:25.264">
              <output/>
            </source>
            <references>
              <reference name="CWE-915: Improperly Controlled Modification of Dynamically-Determined Object Attributes" url="https://cwe.mitre.org/data/definitions/915.html"/>
            </references>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CWE-276" name="Incorrect Default Permissions" state="0" impact="100" issueId="" issueLink="">
          <desc>The software, upon installation, sets incorrect permissions for an object that exposes it to an unintended actor.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:25.702">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CWE-200" name="Information Exposure" state="0" impact="100" issueId="" issueLink="">
          <desc>An information exposure is the intentional or unintentional disclosure of information to an
                        actor that is not explicitly authorized to have access to that information.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:25.264">
              <output/>
            </source>
            <references>
              <reference name="CWE-200: Information Exposure" url="https://cwe.mitre.org/data/definitions/200.html"/>
            </references>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CWE-548" name="Information Exposure Through Directory Listing" state="0" impact="100" issueId="" issueLink="">
          <desc>A directory listing is inappropriately exposed, yielding
                        potentially sensitive information to attackers.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:25.264">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CWE-532" name="Information Exposure Through Log Files" state="0" impact="100" issueId="" issueLink="">
          <desc>Information written to log files can be of a sensitive nature
                        and give valuable guidance to an attacker or expose sensitive user
                        information.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:24.846">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CWE-20" name="Input to exported activities, intents or content providers is not validated" state="0" impact="100" issueId="" issueLink="">
          <desc>The product does not validate or incorrectly validates input that can affect the control flow
                        or data flow of a program.

                        When software does not validate input properly, an attacker is able to craft the input in a form
                        that is not expected by the rest of the application. This will lead to parts of the system
                        receiving unintended input, which may result in altered control flow, arbitrary control of a
                        resource, or arbitrary code execution.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:25.264">
              <output/>
            </source>
            <references>
              <reference name="CWE-20: Input to exported activities, intents or content providers is not validated" url="https://cwe.mitre.org/data/definitions/20.html"/>
            </references>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CWE-778" name="Insufficient Logging" state="0" impact="100" issueId="" issueLink="">
          <desc>When a critical security event occurs, the software either does not record the event or omits important details about the event when logging it. When critical security events are not logged properly, such as in the case of a failed login attempt, this can make malicious behavior more difficult to detect and may hinder forensic analyses after a successful attack.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:24.845">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="lack-automated-vuln-identification" name="Lack of automated vulnerability identification" state="0" impact="100" issueId="" issueLink="">
          <desc>Developmental security testing/evaluation is not enforced during post-design phases of the system development life cycle. Such testing/evaluation is necessary because it confirms that the required security controls are implemented correctly, operating as intended, enforcing the desired security policy, and meeting established security requirements.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:24.256">
              <output/>
            </source>
            <references>
              <reference name="Risk-Based and Functional Security Testing" url="https://www.us-cert.gov/bsi/articles/best-practices/security-testing/risk-based-and-functional-security-testing"/>
            </references>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CWE-272" name="Least Privilege Violation" state="0" impact="100" issueId="" issueLink="">
          <desc>The elevated privilege level required to perform operations such as chroot() should be dropped immediately after the operation is performed.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:25.703">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CWE-779" name="Logging of Excessive Data" state="0" impact="100" issueId="" issueLink="">
          <desc>The software logs too much information, making log files hard
                        to process and possibly hindering recovery efforts or forensic analysis after an
                        attack.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:24.846">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CWE-350" name="Reliance on Reverse DNS Resolution for a Security-Critical Action" state="0" impact="100" issueId="" issueLink="">
          <desc>The software performs reverse DNS resolution on an IP address to obtain the hostname and make a security decision, but it does not properly ensure that the IP address is truly associated with the hostname.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:24.354">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CWE-918" name="Server-Side Request Forgery (SSRF)" state="0" impact="100" issueId="" issueLink="">
          <desc>The web server receives a URL or similar request from an upstream component and retrieves the contents of this URL, but it does not sufficiently ensure that the request is being sent to the expected destination.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:26.089">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AV-DOS-APP" name="The application exposes high resource consuming functions without any protection (Layer 7 attacks)" state="0" impact="100" issueId="" issueLink="">
          <desc>A highly resource consuming function could be exploited by an attacker to bring the service down.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:24.469">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CWE-541" name="The service returns back-end source code without interpreting it" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;If an include file source is accessible, the file may contain usernames and passwords, as well as sensitive information pertaining to the application and system. The source code can also be sent back to a client because of an error condition or an improperly configured handler.&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:25.702">
              <output/>
            </source>
            <references>
              <reference name="CWE-541: Information Exposure Through Include Source Code" url="https://cwe.mitre.org/data/definitions/541.html"/>
            </references>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AV-DoS-L3" name="There is no network protection to protect against Layer 3" state="0" impact="100" issueId="" issueLink="">
          <desc>There are no measures in place to mitigate (D)DoS at a network level.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:24.469">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AV-DoS-L4" name="There is no network protection to protect against Layer 4" state="0" impact="100" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:24.469">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AV-DoS-TLS" name="There is no protection against Layer 6 attacks (SSL/TLS)" state="0" impact="100" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:24.469">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CWE-650" name="Trusting HTTP Permission Methods on the Server Side" state="0" impact="100" issueId="" issueLink="">
          <desc>The server contains a protection mechanism that assumes that
                        any URI that is accessed using HTTP GET will not cause a state change to the
                        associated resource. This might allow attackers to bypass intended access
                        restrictions and conduct resource modification and deletion attacks, since some
                        applications allow GET to modify state.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:25.264">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CWE-601" name="URL Redirection to Untrusted Site ('Open Redirect')" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;A web application accepts a user-controlled input specifying a link to an external site, and uses this link in a Redirect. This functionality aids phishing attacks.&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:25.264">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CWE-2" name="Unexpected Environment Condition" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;This is a generic weakness which includes several different situations that are all connected to unexpected environmental conditions and could be related to:&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Misconfiguration.&lt;/li&gt;&lt;li&gt;Uncleared buffers, shared memory, files, etc.&lt;/li&gt;&lt;li&gt;Problems between the interaction of two different entities that cause unexpected behavior.&lt;/li&gt;&lt;/ul&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>Identify the areas of the application that can be affected by the following causes:
                            &lt;br /&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Misconfiguration.&lt;/li&gt;
                            &lt;li&gt;Uncleared buffers, shared memory, files, etc.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Problems between the interaction of two different entities that cause unexpected
                            behavior.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;div&gt;
                            Perform testing on them to look for a security problem.&amp;nbsp;
                            &lt;/div&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:25.263">
              <output/>
            </source>
            <references>
              <reference name="CWE-2: Unexpected Environment Condition" url="https://cwe.mitre.org/data/definitions/2.html"/>
            </references>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="dyn-exec" name="Assure that the application avoids the use of eval() or other dynamic code execution features" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="JamesRabe" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Assure that the application avoids the use of eval() or other dynamic code execution features. Where there is no alternative, any user input being included must be sanitized or sandboxed before being executed.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.2.4" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.4" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Look for scripts that do not properly validate user inputs in the page parameter. A remote user can supply a specially crafted URL to pass arbitrary code to an eval() statement, which results in code execution.&lt;/p&gt;&lt;p&gt;Note 1: This attack will execute the code with the same permissions, potentially including operation system commands.&lt;/p&gt;&lt;p&gt;Note 2: Eval injection is prevalent in handler/dispatch procedures that want to invoke a large number of functions, or set a large number of variables.&amp;nbsp;&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:26.011">
              <output/>
            </source>
            <references>
              <reference name="Direct Dynamic Code Evaluation (Eval Injection)" url="https://owasp.org/www-community/attacks/Direct_Dynamic_Code_Evaluation_Eval%20Injection"/>
              <reference name="[SCRIPT_ENGINE_INJECTION] Potential code injection when using Script Engine" url="https://find-sec-bugs.github.io/bugs.htm"/>
            </references>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="deny-default-enf" name="Assure that the principle of deny by default exists for new users/roles" issueId="" issueLink="" platform="" cost="1" risk="56" state="Recommended" owner="JamesRabe" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Deny by default is the principle whereby if a request is not specifically allowed, it is denied. There are many ways this rule will manifest in application code. Some examples of this are:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Ensure the principle of deny by default exists whereby new users/roles start with minimal or no permissions and users/roles do not receive access to new features until access is explicitly assigned.&lt;/li&gt;&lt;li&gt;Application code may throw an error or exception while processing access control requests. In these cases access control should always be denied.&lt;/li&gt;&lt;li&gt;When an administrator creates a new user or a user registers for a new account, that account should have minimal or no access by default until that access is configured.&lt;/li&gt;&lt;li&gt;When a new feature is added to an application all users should be denied use of that feature until it's properly configured.&lt;/li&gt;&lt;/ol&gt;</desc>
          <implementations/>
          <references>
            <reference name="OWASP Proactive Controls [C7]: Enforce Access Controls" url="https://owasp-top-10-proactive-controls-2018.readthedocs.io/en/latest/c7-enforce-access-controls.html"/>
          </references>
          <standards>
            <standard ref="4.1.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="4.1.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="4.1.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;&lt;strong&gt;Testing for role/privilege manipulation&lt;/strong&gt;&amp;nbsp;&lt;br&gt;In every portion of the application in which a user can create information inside the database (e.g., making a payment, adding a contact, or sending a message), or can receive information (statement of account, order details, etc.), or delete information (drop users, messages, etc.), it is necessary to record that functionality.&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Try to access such functions as another user in order to verify if it is possible to access a function that should not be permitted by the user's role/privilege (but might be permitted as another user).&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:25.570">
              <output/>
            </source>
            <references>
              <reference name="Testing for Bypassing Authorization Schema (OTG-AUTHZ-002)" url="https://www.owasp.org/index.php/Testing_for_Bypassing_Authorization_Schema_(OTG-AUTHZ-002)"/>
              <reference name="Testing for Privilege escalation (OTG-AUTHZ-003)" url="https://www.owasp.org/index.php/Testing_for_Privilege_escalation_(OTG-AUTHZ-003)"/>
            </references>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CWE-639" name="Avoid using direct references to files" issueId="" issueLink="" platform="" cost="0" risk="27" state="Recommended" owner="JamesRabe" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;All data received from the client-side should be considered tainted and a potential risk, regardless of the source or transport method. Many flaws in applications result from unsafe handling of filenames or path data, for example directory traversal and arbitrary file disclosure. Use of filenames or other direct references to objects such as files on the server-side increases the risk of compromise of the system or unauthorized access to other files, content, or functionality.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Avoid using direct references to files or validate file name.&lt;/li&gt;&lt;li&gt;For example, instead of using:&amp;nbsp;www.example.com/open.jsp?file=details.txt&amp;nbsp;use:&amp;nbsp;www.example.com/open.jsp?file=[GUID]&amp;nbsp;and then use a lookup table on the server to associate the [GUID] value with file details.txt.&lt;/li&gt;&lt;li&gt;Files should be stored outside the web-root to prevent an attacker browsing directly to them.&lt;/li&gt;&lt;li&gt;Do not use obscurity to prevent access; for example do not rely on renaming a file to include a random string to prevent direct download or disclosure.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;If direct references are used to access files from within the web-root deviating from recommended security practice, the following must be implemented:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;String input validation must be applied.&amp;nbsp; Identify and filter for directory traversal meta-characters such as "../" or "..\" or "/", together with encoded variations and derivations.&lt;/li&gt;&lt;li&gt;Use of a strict white-list of files that may be downloaded.&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA AC-01 Access Control Policies and Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/23-08_02_AC-01"/>
            <reference name="OSA AC-05 Separation Of Duties" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/27-08_02_AC-05"/>
            <reference name="OSA AC-06 Least Privilege" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/28-08_02_AC-06"/>
            <reference name="OSA SI-10 Information Accuracy, Completeness, Validity, And Authenticity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/48-08_02_SI-10"/>
          </references>
          <standards>
            <standard ref="12.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="12.3.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="12.3.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="12.3.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="12.3.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="12.3.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="12.3.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="12.3.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="12.3.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="12.3.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="12.3.4" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="12.3.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="12.3.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.3.9" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.3.9" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.3.9" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="9.2.3" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="AC-1" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AC-1" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AC-1" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AC-1" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-5" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AC-5" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AC-5" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-6" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AC-6" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AC-6" supportedStandardRef="NIST 800-53"/>
            <standard ref="CA-8" supportedStandardRef="NIST 800-53"/>
            <standard ref="ID.GV-1" supportedStandardRef="nist-csf"/>
            <standard ref="ID.GV-3" supportedStandardRef="nist-csf"/>
            <standard ref="ID.RA-1" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-1" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-3" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-4" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-6" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-5" supportedStandardRef="nist-csf"/>
            <standard ref="SI-10" supportedStandardRef="NIST 800-53"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;When a parameter that represents a file or a file path is found in the application:&lt;/li&gt;&lt;li&gt;For each of them try to change this parameter to gain access to unexpected files.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;For example: www.example.com/open.jsp?file=details.txt&amp;nbsp;&lt;br&gt;Shouldn't be implemented that way and if so, it should not be possible to access locations outside of this domain (i.e. file=/etc/passwd or file= &lt;a href="http://www.google.com"&gt;http://www.google.com&lt;/a&gt;, etc.).&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:25.107">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="WEB-SRV-XML" name="Define and enforce secure validation through an XSD or DSD schema on XML input data" issueId="" issueLink="" platform="" cost="0" risk="46" state="Recommended" owner="JamesRabe" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;The XML standards provides for formal validation criteria to be specified in a schema (XSD or DTD). Defining a schema with security in mind, and enforcing it on input data, will mitigate many attacks.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Define an XSD or DTD schema with secure input validation criteria.&lt;/li&gt;&lt;li&gt;Validate all XML input data against the schema before processing it.&lt;/li&gt;&lt;li&gt;The acceptance of unvalidated or non compliant data could have unexpected impact on the behavior of the application, and may facilitate attacks such as SQL injection.&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA SI-10 Information Accuracy, Completeness, Validity, And Authenticity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/48-08_02_SI-10"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="10" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="12" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="12.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="13.3.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="13.3.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="13.3.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="14" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="16" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="18" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="19" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="2" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="24" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="3" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5.5.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.5.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.5.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="6" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="7" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="8" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API6:2019-Mass Assignment" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="API8:2019-Injection" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="SI-10" supportedStandardRef="NIST 800-53"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;For every endpoint which consumes XML data.&lt;/li&gt;
                            &lt;li&gt;Get the permitted structure of this data.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Construct non-compliant samples and send them to the endpoints.&lt;/li&gt;
                            &lt;li&gt;Check they are not accepted.&amp;nbsp;&lt;/li&gt;
                            &lt;/ol&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:25.107">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="OTG-BUSLOGIC" name="Detect and notify the usage of automated tools or unusual behavior" issueId="" issueLink="" platform="" cost="0" risk="28" state="Recommended" owner="JamesRabe" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Don't allow users to manipulate a system or guess its behavior based on input or output timing and detect the usage of automated tools or unusual behavior, such as actions not performed in reasonable "human time" or other abnormal time patterns.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;When the usage of automated tools is detected, the application should respond by denying access and notifying the security group.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA SI-05 Security Alerts And Advisories" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/43-08_02_SI-05"/>
            <reference name="OWASP Juice Shop: Broken Access Control" url="https://pwning.owasp-juice.shop/part2/broken-access-control.html"/>
            <reference name="OWASP Juice Shop: Security Misconfiguration" url="https://pwning.owasp-juice.shop/part2/security-misconfiguration.html"/>
            <reference name="OWASP Testing for business logic" url="https://www.owasp.org/index.php/Testing_for_business_logic"/>
          </references>
          <standards>
            <standard ref="11.1.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="11.1.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="11.1.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="11.1.4" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="11.1.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="11.1.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="11.1.8" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="11.1.8" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="8.1.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="8.1.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="A01:2021-Broken Access Control" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A09:2021-Security Logging and Monitoring Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2017-Insufficient Logging-Monitoring" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="A5:2017-Broken Access Control" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="ID.RA-1" supportedStandardRef="nist-csf"/>
            <standard ref="ID.RA-2" supportedStandardRef="nist-csf"/>
            <standard ref="ID.RA-3" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-2" supportedStandardRef="nist-csf"/>
            <standard ref="RS.AN-5" supportedStandardRef="nist-csf"/>
            <standard ref="RS.CO-5" supportedStandardRef="nist-csf"/>
            <standard ref="SI-13" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-17" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-5" supportedStandardRef="NIST 800-53"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ul&gt;
                            &lt;li&gt;Use several automated tools to perform normal user actions.&lt;/li&gt;
                            &lt;li&gt;Check that the applications detects these actions, denies the users access and
                            notifies the security group.&lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;/div&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:25.570">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="protection-against-data-mining" name="Detect and protect against data mining techniques" issueId="" issueLink="" platform="" cost="0" risk="28" state="Recommended" owner="JamesRabe" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Data mining is an analytical process that attempts to find correlations or patterns in large data sets for the purpose of data or knowledge discovery. Data storage objects include database records and database fields. Sensitive information can be extracted from data mining operations. When information is personally identifiable information, it may lead to unanticipated revelations about individuals and give rise to privacy risks. Prior to performing data mining activities, organizations determine whether such activities are authorized. Organizations may be subject to applicable laws, executive orders, directives, regulations, or policies that address data mining requirements. Organizational personnel consult with the senior agency official for privacy and legal counsel regarding such requirements.&lt;/p&gt;&lt;p&gt;Data mining prevention and detection techniques include limiting the number and frequency of database queries to increase the work factor needed to determine the contents of databases, limiting types of responses provided to database queries, applying differential privacy techniques or homomorphic encryption, and notifying personnel when atypical database queries or accesses occur. Data mining protection focuses on protecting information from data mining while such information resides in organizational data stores. In contrast, AU-13 focuses on monitoring for organizational information that may have been mined or otherwise obtained from data stores and is available as open-source information residing on external sites, such as social networking or social media websites.&lt;/p&gt;&lt;p&gt;EO 13587 requires the establishment of an insider threat program for deterring, detecting, and mitigating insider threats, including the safeguarding of sensitive information from exploitation, compromise, or other unauthorized disclosure. Data mining protection requires organizations to identify appropriate techniques to prevent and detect unnecessary or unauthorized data mining. Data mining can be used by an insider to collect organizational information for the purpose of exfiltration.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="NIST 800-53" url="https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-53r5.pdf"/>
          </references>
          <standards>
            <standard ref="AC-23" supportedStandardRef="NIST 800-53"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that your system supports policies that protect against data mining such as filtering, throttling and anomaly detection.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:25.571">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="LOG-RETENTION" name="Develop a log retention policy" issueId="" issueLink="" platform="" cost="0" risk="27" state="Recommended" owner="JamesRabe" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Develop a log retention policy to identify storage requirements for device logs and implement
                        procedures to ensure that the audit logs are available for a security response in the case of
                        incident or investigation.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        The audit logs from the last 30 days must be collected in easily accessible storage media. Older
                        logs should be archived in a protected storage and should be accessible in the future as
                        required for incidents or investigations.
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Berkeley security: audit logs" url="https://security.berkeley.edu/security-audit-logging-guideline"/>
            <reference name="OSA AC-03 Access Enforcement" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/25-08_02_AC-03"/>
            <reference name="OSA AU-09 Protection Of Audit Information" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/178-08_02_AU-09"/>
          </references>
          <standards>
            <standard ref="12.1.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="12.4.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="7.1.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="7.1.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="7.1.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="AC-24" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-3" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AC-3" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AC-3" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AC-3" supportedStandardRef="NIST 800-53"/>
            <standard ref="AU-9" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AU-9" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AU-9" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AU-9" supportedStandardRef="NIST 800-53"/>
            <standard ref="PR.AC-4" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-6" supportedStandardRef="nist-csf"/>
            <standard ref="PR.PT-1" supportedStandardRef="nist-csf"/>
            <standard ref="PR.PT-3" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ul&gt;
                            &lt;li&gt;Check that the application contains logs from the last 30 days.&lt;/li&gt;
                            &lt;li&gt;Check that logs older than 30 days are in an external storage.&lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:24.691">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="DIRECTORY_LISTING" name="Disable web server directory listing and ensure file metadata (e.g. .git) and backup files are not present within web roots" issueId="" issueLink="" platform="" cost="0" risk="27" state="Recommended" owner="JamesRabe" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Indexable directories allow an attacker to easily discover the existence of content on your web server that should remain private.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation:&lt;/strong&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Disable directory listings in the web - or application - server configuration by default.&lt;/li&gt;&lt;li&gt;Restrict access to unnecessary directories and files.&lt;/li&gt;&lt;li&gt;Create an index (default) file for each directory.&lt;/li&gt;&lt;/ol&gt;</desc>
          <implementations/>
          <references>
            <reference name="Apache - auto index" url="https://httpd.apache.org/docs/trunk/mod/mod_autoindex.html"/>
            <reference name="Apache - directory listing" url="https://wiki.apache.org/httpd/DirectoryListings"/>
            <reference name="OSA CM-02 Baseline Configuration" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/153-08_02_CM-02"/>
            <reference name="OSA CM-06 Configuration Settings" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/157-08_02_CM-06"/>
            <reference name="OWASP Directory_Indexing" url="https://www.owasp.org/index.php/OWASP_Periodic_Table_of_Vulnerabilities_-_Directory_Indexing"/>
            <reference name="OWASP Insecure Indexing" url="https://www.owasp.org/index.php/File_System#Insecure_Indexing"/>
          </references>
          <standards>
            <standard ref="12.5.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="12.5.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="12.5.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="4.3.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="4.3.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="4.3.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="CM-2" supportedStandardRef="NIST 800-53"/>
            <standard ref="CM-6" supportedStandardRef="NIST 800-53"/>
            <standard ref="DE.AE-1" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-7" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-1" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Check that the directory listing is disabled on the web server.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:25.107">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="ASVS-11.5" name="Do not share system information in HTTP headers and responses" issueId="" issueLink="" platform="" cost="0" risk="46" state="Recommended" owner="JamesRabe" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;The application should not share detailed version information of system components or other information that would assist attackers in the HTTP header or HTTP responses.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA CM-02 Baseline Configuration" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/153-08_02_CM-02"/>
            <reference name="OSA CM-06 Configuration Settings" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/157-08_02_CM-06"/>
          </references>
          <standards>
            <standard ref="14.3.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="14.3.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="14.3.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="CM-2" supportedStandardRef="NIST 800-53"/>
            <standard ref="CM-6" supportedStandardRef="NIST 800-53"/>
            <standard ref="DE.AE-1" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-7" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-1" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that the HTTP responses and headers do not reveal sensitive data about the system.
                            Using a command line web client like telnet or netcat could help on this task.
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:25.106">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="WEB-FILE-DATA" name="Do not use untrusted client-side data in server-side file operations" issueId="" issueLink="" platform="" cost="0" risk="39" state="Recommended" owner="JamesRabe" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;The application may be required to perform server-side file operations based on client-side actions. This can expose the application to attack through remote or local file-inclusion, or remote code execution attacks if unsafe data is used in file inclusion, class loader, or reflection capabilities.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Tainted, untrusted, client-side data must not be used directly in server-side file load operations.&lt;/li&gt;&lt;li&gt;Where server-side operations are dependent on client-side input, this should be mapped to pre-defined operations on the server-side rather than using tainted client-side input directly.&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA SI-03 Malicious Code Protection" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/41-08_02_SI-03"/>
            <reference name="OSA SI-06 Security Functionality Verification" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/44-08_02_SI-06"/>
            <reference name="OSA SI-10 Information Accuracy, Completeness, Validity, And Authenticity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/48-08_02_SI-10"/>
            <reference name="OWASP Juice Shop: Insecure Deserialization" url="https://pwning.owasp-juice.shop/part2/insecure-deserialization.html"/>
          </references>
          <standards>
            <standard ref="12.3.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="12.3.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="12.3.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="12.3.4" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="12.3.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="12.3.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="12.6.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="A08:2021-Software and Data Integrity Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2021-Server-Side Request Forgery (SSRF)" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A8:2017-Insecure Deserialization" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="DE.CM-4" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-3" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-2" supportedStandardRef="nist-csf"/>
            <standard ref="SI-10" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-16" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-3" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-6" supportedStandardRef="NIST 800-53"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Identify sources of data entering the application.&amp;nbsp;&lt;br&gt;&amp;nbsp;&lt;/li&gt;&lt;li&gt;Classify them into trusted and untrusted.&amp;nbsp;&lt;br&gt;&amp;nbsp;&lt;/li&gt;&lt;li&gt;if they are untrusted, make sure there is a validation and sanitization mechanism before sending this data into another system (Database, Command, etc.).&lt;br&gt;&amp;nbsp;&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:26.010">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CWE-532" name="Do not write secrets to the log files" issueId="" issueLink="" platform="" cost="0" risk="27" state="Recommended" owner="JamesRabe" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        The logs may be accessed by attackers and in order to protect sensitive data, no such sensitive
                        data should be included in the logs
                        &lt;/div&gt;
                    </desc>
          <implementations/>
          <references>
            <reference name="OSA AU-03 Content Of Audit Records" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/172-08_02_AU-03"/>
            <reference name="OSA SI-01 System And Information Integrity Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/39-08_02_SI-01"/>
            <reference name="OSA SI-06 Security Functionality Verification" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/44-08_02_SI-06"/>
            <reference name="[C3] OWASP Proactive Controls" url="https://www.owasp.org/index.php/OWASP_Proactive_Controls"/>
          </references>
          <standards>
            <standard ref="12.4.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="7.1.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="7.1.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="7.1.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="7.1.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="7.1.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="7.1.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="AU-3" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AU-3" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AU-3" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AU-3" supportedStandardRef="NIST 800-53"/>
            <standard ref="ID.GV-1" supportedStandardRef="nist-csf"/>
            <standard ref="ID.GV-3" supportedStandardRef="nist-csf"/>
            <standard ref="PR.PT-1" supportedStandardRef="nist-csf"/>
            <standard ref="SI-1" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-6" supportedStandardRef="NIST 800-53"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ul&gt;
                            &lt;li&gt;Review the logs.&lt;/li&gt;
                            &lt;li&gt;Check that no sensitive data is included in the logs.&lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;/div&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:24.691">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CWE-319-TRANSPORT" name="Encrypt data between the client and server/service" issueId="" issueLink="" platform="" cost="0" risk="27" state="Recommended" owner="JamesRabe" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Data passed between the client and server should be protected by encryption in transit.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Implement cryptographically strong TLS end-to-end encryption between the client and server, terminating within a secure environment on the server-side.&lt;/li&gt;&lt;li&gt;Consider use of client certificates to prevent interception of (or man-in-the-middle attacks on) the encrypted connection.&lt;/li&gt;&lt;li&gt;Alternatively, asymmetric (public-key) encryption could be utilized and a recognized, proven, and tested implementation/library should be used&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA AC-03 Access Enforcement" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/25-08_02_AC-03"/>
            <reference name="OSA AC-06 Least Privilege" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/28-08_02_AC-06"/>
            <reference name="OSA AC-14 Permitted Actions Without Identification Or Authentication" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/38-08_02_AC-14"/>
            <reference name="OSA AC-16 Automated Labeling" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/198-08_02_AC-16"/>
            <reference name="OSA SC-08 Transmission Integrity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/68-08_02_SC-08"/>
            <reference name="OSA SC-13 Use Of Cryptography" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/73-08_02_SC-13"/>
          </references>
          <standards>
            <standard ref="1.9.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="1.9.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="13.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="13.2.6" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="13.2.6" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="164.312(a)(1)(D)" supportedStandardRef="hipaa-addressable"/>
            <standard ref="164.312(e)(1)(A)" supportedStandardRef="hipaa-addressable"/>
            <standard ref="5.1" supportedStandardRef="OWASP-MASVS-L1"/>
            <standard ref="5.1" supportedStandardRef="OWASP-MASVS-L1+R"/>
            <standard ref="5.1" supportedStandardRef="OWASP-MASVS-L2"/>
            <standard ref="5.1" supportedStandardRef="OWASP-MASVS-L2+R"/>
            <standard ref="9.1.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="9.1.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="9.1.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="9.2.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="9.2.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="9.2.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="9.2.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="9.2.4" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="9.4.3" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="AC-14" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AC-14" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AC-14" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AC-14" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-16" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-3" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AC-3" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AC-3" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AC-3" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-6" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AC-6" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AC-6" supportedStandardRef="NIST 800-53"/>
            <standard ref="PR.AC-4" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-6" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-7" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-2" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-5" supportedStandardRef="nist-csf"/>
            <standard ref="PR.PT-3" supportedStandardRef="nist-csf"/>
            <standard ref="SC-13" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="SC-13" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="SC-13" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="SC-13" supportedStandardRef="NIST 800-53"/>
            <standard ref="SC-8" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="SC-8" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="SC-8" supportedStandardRef="NIST 800-53"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Check client to server connections use and enforce established encryption protocols, e.g. TLSv1.2.&lt;br&gt;&amp;nbsp;&lt;/li&gt;&lt;li&gt;Verify only strong cipher suites are in use and permitted.&lt;/li&gt;&lt;li&gt;Ensure attempts to use unencrypted transport mechanisms are rejected or redirected (e.g. HTTP instead of HTTPS)&lt;/li&gt;&lt;li&gt;Review configuration of protocols and services against best-practice guidelines.&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:25.569">
              <output/>
            </source>
            <references>
              <reference name="Server Side TLS Configuration" url="https://wiki.mozilla.org/Security/Server_Side_TLS"/>
            </references>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="LEAST-PRIV-ENF" name="Ensure enforcement of the principle of least privilege" issueId="" issueLink="" platform="" cost="0" risk="28" state="Recommended" owner="JamesRabe" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Ensure enforcement of the principle of least privilege in functions, data files, URLs, controllers, services, and other resources. This implies protection against spoofing and elevation of privilege.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="4.1.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="4.1.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="4.1.3" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;In every portion of the application where a user can create information inside the database (e.g., making a payment, adding a contact, or sending a message), or can receive information (statement of account, order details, etc.), or delete information (drop users, messages, etc.), it is necessary to record that functionality.&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Try to access such functions as another user in order to verify if it is possible to access a function that should not be permitted by the user's role/privilege (but might be permitted as another user).&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:25.570">
              <output/>
            </source>
            <references>
              <reference name="Testing for Privilege escalation (OTG-AUTHZ-003)" url="https://www.owasp.org/index.php/Testing_for_Privilege_escalation_(OTG-AUTHZ-003)"/>
            </references>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="SER-UNTRUST" name="Ensure that serialization is not used when communicating with untrusted clients" issueId="" issueLink="" platform="" cost="0" risk="39" state="Recommended" owner="JamesRabe" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Ensure that serialization is not used when communicating with untrusted clients. If this is not possible, ensure that adequate integrity controls (and possibly encryption if sensitive data is sent) are enforced to prevent deserialization attacks including object injection.</desc>
          <implementations/>
          <references>
            <reference name="Deserialization of untrusted data" url="https://www.owasp.org/index.php/Deserialization_of_untrusted_data"/>
            <reference name="OWASP Deserialization CheatSheet" url="https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/Deserialization_Cheat_Sheet.md"/>
            <reference name="OWASP Juice Shop: Insecure Deserialization" url="https://pwning.owasp-juice.shop/part2/insecure-deserialization.html"/>
            <reference name="SER03-J. Do not serialize unencrypted sensitive data" url="https://wiki.sei.cmu.edu/confluence/display/java/SER03-J.+Do+not+serialize+unencrypted+sensitive+data"/>
          </references>
          <standards>
            <standard ref="1.5.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="1.5.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.5.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.5.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.5.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.5.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.5.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.5.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="A08:2021-Software and Data Integrity Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A8:2017-Insecure Deserialization" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Identify Serialization processes that involve client-server communication. They may be used in applications for:&lt;/p&gt;
&lt;ul&gt;
 &lt;li&gt;Remote- and inter-process communication (RPC/IPC)&lt;/li&gt;
 &lt;li&gt;Wire protocols, web services, message brokers&lt;/li&gt;
 &lt;li&gt;Caching/Persistence&lt;/li&gt;
 &lt;li&gt;Databases, cache servers, file systems&lt;/li&gt;
 &lt;li&gt;HTTP cookies, HTML form parameters, API authentication tokens&amp;nbsp;&lt;/li&gt;
&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:25.570">
              <output/>
            </source>
            <references>
              <reference name="OWASP Deserialization CheatSheet" url="https://github.com/OWASP/CheatSheetSeries/blob/master/cheatsheets/Deserialization_Cheat_Sheet.md"/>
              <reference name="Top 10-2017 A8-Insecure Deserialization" url="https://www.owasp.org/index.php/Top_10-2017_A8-Insecure_Deserialization"/>
            </references>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="RESTRICT-HTTP-METHODS" name="Ensure that the application accepts only a defined set of required HTTP request methods" issueId="" issueLink="" platform="" cost="0" risk="27" state="Recommended" owner="JamesRabe" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;HTTP offers a number of methods that can be used to perform actions on the web server. Many of theses methods are designed to aid developers in deploying and testing HTTP applications. These HTTP methods can be used for nefarious purposes if the web server is misconfigured. For example, Cross Site Tracing (XST), a form of cross site scripting using the server's HTTP TRACE method.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;While GET and POST are by far the most common methods that are used to access information provided by a web server, the Hypertext Transfer Protocol (HTTP) allows several other (and somewhat less known) methods. RFC 2616 (which describes HTTP version 1.1 which is the standard today) defines the following eight methods:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;HEAD&lt;/li&gt;&lt;li&gt;GET&lt;/li&gt;&lt;li&gt;POST&lt;/li&gt;&lt;li&gt;PUT&lt;/li&gt;&lt;li&gt;DELETE&lt;/li&gt;&lt;li&gt;TRACE&lt;/li&gt;&lt;li&gt;OPTIONS&lt;/li&gt;&lt;li&gt;CONNECT&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;Some of these methods can potentially pose a security risk for a web application, as they allow an attacker to modify the files stored on the web server and, in some scenarios, steal the credentials of legitimate users. More specifically, the methods that should be disabled are the following:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;strong&gt;PUT: &lt;/strong&gt;This method allows a client to upload new files onto the web server. An attacker may exploit this by uploading malicious files (e.g.: an asp file that executes commands by invoking cmd.exe), or by simply using the victim's server as a file repository.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;DELETE:&lt;/strong&gt; This method allows a client to delete a file on the web server. An attacker may exploit it as a very simple and direct way to deface a web site or to mount a DoS attack.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;CONNECT: &lt;/strong&gt;This method could allow a client to use the web server as a proxy.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;TRACE: &lt;/strong&gt;This method simply echoes back to the client whatever string has been sent to the server, and is used mainly for debugging purposes. This method, originally assumed harmless, can be used to mount an attack known as Cross Site Tracing, which was discovered by Jeremiah Grossman (see links at the bottom of the page).&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;If an application needs one or more of these methods, such as REST Web Services (which may require PUT or DELETE), it is important to check their usage is properly limited to trusted users and safe conditions.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation:&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Ensure the application accepts only the HTTP requests GET and POST. The HTTP requests TRACE, PUT and DELETE are blocked.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA CM-02 Baseline Configuration" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/153-08_02_CM-02"/>
            <reference name="OSA CM-06 Configuration Settings" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/157-08_02_CM-06"/>
            <reference name="OWASP test HTTP methods" url="https://github.com/ManhNho/OWASP-Testing-Guide-v5/blob/master/document/4%20Web%20Application%20Security%20Testing/4.3%20Configuration%20and%20Deployment%20Management%20Testing/4.3.6%20Test%20HTTP%20Methods%20(OTG-CONFIG-006).md"/>
          </references>
          <standards>
            <standard ref="13.2.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="13.2.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="13.2.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="14.5.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="14.5.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="14.5.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.3.9" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.3.9" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.3.9" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="CM-2" supportedStandardRef="NIST 800-53"/>
            <standard ref="CM-6" supportedStandardRef="NIST 800-53"/>
            <standard ref="DE.AE-1" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-7" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-1" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ul&gt;
                            &lt;li&gt;Check that the application only accepts the request with the following HTTP
                            methods: GET and POST.&lt;/li&gt;
                            &lt;li&gt;Check that the application rejects and blocks the following requests with the HTTP
                            methods: TRACE, PUT and DELETE.&lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;/div&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:25.107">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="SAME-ENCODING-STYLE" name="Ensure that the client-side and the server-side are using the same encoding style" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="JamesRabe" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Ensure that the client-side and the server-side are using the same encoding style.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="13.1.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="13.1.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="13.1.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.3.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.3.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.3.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="SI-15" supportedStandardRef="NIST 800-53"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that the server-side and the client-side are using the same encoding style.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:26.010">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="SEC-DEPLOY" name="Ensure the build pipeline contains a build step to automatically build and verify the secure deployment of the application" issueId="" issueLink="" platform="" cost="0" risk="39" state="Recommended" owner="JamesRabe" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Ensure that the build pipeline contains a build step to automatically build and verify the secure deployment of the application, particularly if the application infrastructure is software defined, such as cloud environment build scripts.</desc>
          <implementations/>
          <references>
            <reference name="Secure development and deployment guidance" url="https://www.ncsc.gov.uk/collection/developers-collection?curPage=/collection/developers-collection/principles/secure-the-build-and-deployment-pipeline"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="1.14.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="1.14.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="14" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="16" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="8" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="9" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API7:2019-Security Misconfiguration" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>
                            Understanding the deployed configuration of the server hosting the web application is almost as important as the application security testing itself. After all, an application chain is only as strong as its weakest link. Application platforms are wide and varied, but some key platform configuration errors can compromise the application in the same way an unsecured application can compromise the server.
                            &lt;br /&gt;
                            &lt;br /&gt;In order to evaluate the readiness of the application platform, testing for configuration management includes the following sections:
                            &lt;br /&gt;
                            &lt;br /&gt;4.3.1 Test Network/Infrastructure Configuration (OTG-CONFIG-001)
                            &lt;br /&gt;4.3.2 Test Application Platform Configuration (OTG-CONFIG-002)
                            &lt;br /&gt;4.3.3 Test File Extensions Handling for Sensitive Information (OTG-CONFIG-003)
                            &lt;br /&gt;4.3.4 Review Old, Backup and Unreferenced Files for Sensitive Information (OTG-CONFIG-004)
                            &lt;br /&gt;4.3.5 Enumerate Infrastructure and Application Admin Interfaces (OTG-CONFIG-005)
                            &lt;br /&gt;4.3.6 Test HTTP Methods (OTG-CONFIG-006)
                            &lt;br /&gt;4.3.7 Test HTTP Strict Transport Security (OTG-CONFIG-007)
                            &lt;br /&gt;4.3.8 Test RIA cross domain policy (OTG-CONFIG-008)
                            &lt;br /&gt;4.3.9 Test File Permission (OTG-CONFIG-009)
                            &lt;br /&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:25.107">
              <output/>
            </source>
            <references>
              <reference name="Testing for configuration management" url="https://www.owasp.org/index.php/Testing_for_configuration_management"/>
            </references>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="configuration-integrity" name="Ensure the integrity of all security-relevant configurations to detect tampering" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="JamesRabe" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Web server and application server configurations play a key role in the security of a web application. These servers are responsible for serving content and invoking applications that generate content. In addition, many application servers provide a number of services that web applications can use, including data storage, directory services, mail, messaging, and more. Failure to manage the proper configuration of your servers can lead to a wide variety of security problems.&amp;nbsp;
&lt;/div&gt;
&lt;div&gt;
 &lt;br /&gt;
&lt;/div&gt;
&lt;div&gt;
 &lt;b&gt;Remediation:&lt;/b&gt;
&lt;/div&gt;
&lt;div&gt;
  Authorized administrators need to ensure the integrity of all security-relevant configurations to detect tampering.
&lt;/div&gt;
&lt;div&gt;
 &lt;br /&gt;
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="14.1.5" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Understanding the deployed configuration of the server hosting the web application is almost as important as the application security testing itself. After all, an application chain is only as strong as its weakest link. Application platforms are wide and varied, but some key platform configuration errors can compromise the application in the same way an unsecured application can compromise the server.
&lt;/div&gt;
&lt;div&gt;
 &lt;br /&gt;
&lt;/div&gt;
&lt;div&gt;
  In order to evaluate the readiness of the application platform, testing for configuration management includes the following sections:
&lt;/div&gt;
&lt;div&gt;
 &lt;br /&gt;
&lt;/div&gt;
&lt;div&gt;
  4.3.1 Test Network/Infrastructure Configuration (OTG-CONFIG-001)
&lt;/div&gt;
&lt;div&gt;
  4.3.2 Test Application Platform Configuration (OTG-CONFIG-002)
&lt;/div&gt;
&lt;div&gt;
  4.3.3 Test File Extensions Handling for Sensitive Information (OTG-CONFIG-003)
&lt;/div&gt;
&lt;div&gt;
  4.3.4 Review Old, Backup and Unreferenced Files for Sensitive Information (OTG-CONFIG-004)
&lt;/div&gt;
&lt;div&gt;
  4.3.5 Enumerate Infrastructure and Application Admin Interfaces (OTG-CONFIG-005)
&lt;/div&gt;
&lt;div&gt;
  4.3.6 Test HTTP Methods (OTG-CONFIG-006)
&lt;/div&gt;
&lt;div&gt;
  4.3.7 Test HTTP Strict Transport Security (OTG-CONFIG-007)
&lt;/div&gt;
&lt;div&gt;
  4.3.8 Test RIA cross domain policy (OTG-CONFIG-008)
&lt;/div&gt;
&lt;div&gt;
  4.3.9 Test File Permission (OTG-CONFIG-009)&amp;nbsp;
&lt;/div&gt;
&lt;div&gt;
 &lt;br /&gt;
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:26.010">
              <output/>
            </source>
            <references>
              <reference name="Testing for configuration management" url="https://www.owasp.org/index.php/Testing_for_configuration_management"/>
            </references>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="LOGS-INTEGRITY" name="Ensure the integrity of the logging system" issueId="" issueLink="" platform="" cost="0" risk="28" state="Recommended" owner="JamesRabe" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Ensure Log integrity for the application generated logs, such as storing logs on write-once
                        media, forwarding a copy of the logs to a centralized SIEM or generating message digests for
                        each log file.
                    </desc>
          <implementations/>
          <references>
            <reference name="OSA AC-03 Access Enforcement" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/25-08_02_AC-03"/>
            <reference name="OSA AU-04 Audit Storage Capacity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/173-08_02_AU-04"/>
            <reference name="OSA AU-09 Protection Of Audit Information" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/178-08_02_AU-09"/>
            <reference name="OSA SI-04 Information System Monitoring Tools And Techniques" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/42-08_02_SI-04"/>
            <reference name="OWASP Juice Shop: Security Misconfiguration" url="https://pwning.owasp-juice.shop/part2/security-misconfiguration.html"/>
            <reference name="[C3] OWASP Proactive Controls" url="https://www.owasp.org/index.php/OWASP_Proactive_Controls"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="1.7.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="1.7.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="10" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="12.1.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="12.4.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="164.312(c)(1)" supportedStandardRef="hipaa-addressable"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="18" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="19" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="3" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="7.3.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="7.3.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="A09:2021-Security Logging and Monitoring Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2017-Insufficient Logging-Monitoring" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="AC-24" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-3" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AC-3" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AC-3" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AC-3" supportedStandardRef="NIST 800-53"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="API1:2019-Broken Object Level Authorization" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="AU-4" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AU-4" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AU-4" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AU-4" supportedStandardRef="NIST 800-53"/>
            <standard ref="AU-9" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AU-9" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AU-9" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AU-9" supportedStandardRef="NIST 800-53"/>
            <standard ref="DE.AE-1" supportedStandardRef="nist-csf"/>
            <standard ref="DE.AE-2" supportedStandardRef="nist-csf"/>
            <standard ref="DE.AE-3" supportedStandardRef="nist-csf"/>
            <standard ref="DE.AE-4" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-1" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-5" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-6" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-7" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-2" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-3" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-4" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-5" supportedStandardRef="nist-csf"/>
            <standard ref="ID.RA-1" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-4" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-6" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-1" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-4" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-5" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-8" supportedStandardRef="nist-csf"/>
            <standard ref="PR.PT-1" supportedStandardRef="nist-csf"/>
            <standard ref="PR.PT-3" supportedStandardRef="nist-csf"/>
            <standard ref="RS.AN-1" supportedStandardRef="nist-csf"/>
            <standard ref="RS.CO-3" supportedStandardRef="nist-csf"/>
            <standard ref="SA-18" supportedStandardRef="NIST 800-53"/>
            <standard ref="SC-28" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="SC-28" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="SC-28" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-4" supportedStandardRef="NIST 800-53"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check the logs integrity is controlled by making daily backups or leveraging external
                            tools for log monitoring.
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:24.692">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="ENV-USE" name="Ensure there are no environmental security weaknesses" issueId="" issueLink="" platform="" cost="1" risk="39" state="Recommended" owner="JamesRabe" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Application security can be undermined by misconfiguration of the underlying server or
                        development environment.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        Ensure that vendor and best-practice guidelines have been applied, in particular affecting areas
                        such as:
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Cryptographic strength of elements such as session tokens, GUIDs, and protection of
                        data in transit and at rest.&lt;/li&gt;
                        &lt;li&gt;Removal of debugging and compiler options and artifacts used during development.&lt;/li&gt;
                        &lt;li&gt;Configuration of error trapping and use of generic error messages and pages (e.g.
                        stack traces should not be returned to users).&lt;/li&gt;
                        &lt;li&gt;Appropriate access controls over software components, variables (e.g. EJBs and
                        methods).&lt;/li&gt;
                        &lt;li&gt;Insecure or inappropriate storage of data in configuration files or other data
                        structures (e.g. passwords in configuration files).&lt;/li&gt;
                        &lt;li&gt;Use of compilation/build features or security enhancements provided by the IDE&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/div&gt;
                        &lt;div&gt;&lt;/div&gt;
                    </desc>
          <implementations/>
          <references>
            <reference name="OWASP Juice Shop: Security Misconfiguration" url="https://pwning.owasp-juice.shop/part2/security-misconfiguration.html"/>
            <reference name="OWASP Juice Shop: Vulnerable Components" url="https://pwning.owasp-juice.shop/part2/vulnerable-components.html"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="14" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="14.2.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="14.2.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="14.2.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="14.3.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="14.3.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="14.3.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="16" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="8" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="9" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="A05:2021-Security Misconfiguration" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A06:2021-Vulnerable and Outdated Components" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A6:2017-Security Misconfiguration" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="A9:2017-Using Components with Known Vulnerabilities" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="API7:2019-Security Misconfiguration" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;figure class="table"&gt;&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;&lt;p&gt;Identify the areas of the application that could potentially be affected by the following:&amp;nbsp;&amp;nbsp;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Misconfiguration.&lt;/li&gt;&lt;li&gt;Uncleared buffers, shared memory, files, etc.&lt;/li&gt;&lt;li&gt;Problems between the interaction of two different entities that cause unexpected behavior.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;Verify they are correctly implemented.&amp;nbsp;&lt;/p&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/figure&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:25.107">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="ASVS-8.8" name="Escape meta-characters from un-trusted data" issueId="" issueLink="" platform="" cost="0" risk="28" state="Recommended" owner="JamesRabe" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;If untrusted data, including any data received from the client side of a connection, is directly written to a log file, then this data could contain newline or other meta-characters that may allow an attacker to forge log entries.&lt;/p&gt;&lt;p&gt;Such meta-characters should first be escaped or removed before the data is written to the logging system.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="[C3] OWASP Proactive Controls" url="https://www.owasp.org/index.php/OWASP_Proactive_Controls"/>
          </references>
          <standards>
            <standard ref="7.3.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="7.3.1" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Identify the logging system in use.&lt;/li&gt;
                            &lt;li&gt;Check whether the logging system automatically escapes meta-characters such as a
                            newline and/or carriage return.&lt;/li&gt;
                            &lt;li&gt;If not, then check that there is a central function that escapes these
                            meta-characters before writing them to the log file.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:24.690">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="harden-http-headers" name="Harden HTTP Headers" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="JamesRabe" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;HTTP headers are a fundamental part of website security.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;The Referrer-Policy HTTP header controls how much referrer information (sent via the Referrer header) should be included with requests. This security header was designed to prevent cross-domain Referrer leakage.&lt;/li&gt;&lt;li&gt;The Origin request header indicates where a fetch originates from. It doesn't include any path information, but only the server name. It is sent with CORS requests, as well as with POST requests. It is similar to the Referer header, but, unlike this header, it doesn't disclose the whole path.&lt;/li&gt;&lt;li&gt;The Content-Disposition response header tells the browser to download a file rather than displaying it in the browser window.&lt;/li&gt;&lt;li&gt;If a response states that it contains HTML content but does not specify a character set, then the browser may analyze the HTML and attempt to determine which character set it appears to be using. Even if the majority of the HTML actually employs a standard character set such as UTF-8, the presence of non-standard characters anywhere in the response may cause the browser to interpret the content using a different character set. This can have unexpected results, and can lead to cross-site scripting vulnerabilities in which non-standard encodings like UTF-7 can be used to bypass the application's defensive filters.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation:&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Use a suitable "Referrer-Policy" header, such as "no-referrer" or "same-origin".&lt;/li&gt;&lt;li&gt;Don't use the Origin header for authentication or access control decisions, as the Origin header can easily be changed by an attacker.&lt;/li&gt;&lt;li&gt;Use the Content-Disposition response header for file downloading in all API responses with the following directives: Content-Disposition: attachment; filename="api.json" (or other appropriate filename for the content type).&lt;/li&gt;&lt;li&gt;Use a content-type header specifying a safe character set (e.g., UTF-8, ISO 8859-1) in every HTTP response.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="HTML does not specify charset" url="https://portswigger.net/kb/issues/00800200_html-does-not-specify-charset"/>
            <reference name="OWASP Secure Headers Project" url="https://www.owasp.org/index.php/OWASP_Secure_Headers_Project"/>
            <reference name="Origin Header" url="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Origin"/>
            <reference name="Referrer-Policy" url="https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Referrer-Policy"/>
            <reference name="Reflected File Download" url="https://www.owasp.org/index.php/Reflected_File_Download"/>
            <reference name="Use of the Content-Disposition Header Field in the Hypertext Transfer Protocol (HTTP)" url="https://tools.ietf.org/html/rfc6266"/>
          </references>
          <standards>
            <standard ref="14.4.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="14.4.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="14.4.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="14.4.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="14.4.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="14.4.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="14.4.6" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="14.4.6" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="14.4.6" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="14.5.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="14.5.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="14.5.2" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;An easy way to access your HTTP security headers, as part of your response headers, is to fire up Chrome DevTools. To run this click into the "Network" panel and press Ctrl + R (Cmd + R) to refresh the page. Click into your domain's request and you will see a section for response headers.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Check if "Referrer-Policy" header exists in HTTP responses and has the right directives to prevent cross-domain Referrer leakage.&lt;/li&gt;&lt;li&gt;From a penetration testing perspective you should look for insecure configurations; for example, when the server returns back the Origin header in the Access-Control-Allow-Origin without any additional checks AND returns Access-Control-Allow-Credentials: true, which can lead to access of sensitive data. Note that this configuration is very insecure, and is not acceptable in general terms, except in the case of a public API that is intended to be accessible by everyone.&lt;/li&gt;&lt;li&gt;Try Reflected File Download input payloads to launch commands on the client machine. Reflected File Download is an attack combining URL path segments (now deprecated) with pages that reflect user inputs in the response. Generally web services vulnerable to JSONP Injection are leveraged to deliver malware to end users.&lt;/li&gt;&lt;li&gt;Character encoding has a popular misuse; namely, being used for encoding malicious injection strings in a way that obfuscates them. Try different character encoding schemes (like UTF-7) to bypass input validation filters, or take advantage of particular ways in which browsers render encoded text.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:25.107">
              <output/>
            </source>
            <references>
              <reference name="A new security header: Referrer Policy" url="https://scotthelme.co.uk/a-new-security-header-referrer-policy/"/>
              <reference name="OWASP Testing Guide Appendix D: Encoded Injection" url="https://www.owasp.org/index.php/OWASP_Testing_Guide_Appendix_D:_Encoded_Injection"/>
              <reference name="Reflected File Download - A New Web Attack Vector" url="https://www.trustwave.com/en-us/resources/blogs/spiderlabs-blog/reflected-file-download-a-new-web-attack-vector/"/>
              <reference name="Test Cross Origin Resource Sharing (OTG-CLIENT-007)" url="https://www.owasp.org/index.php/Test_Cross_Origin_Resource_Sharing_(OTG-CLIENT-007)"/>
            </references>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="identify-dns-domains" name="Identify the DNS domains periodically to update the information about them" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="JamesRabe" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;The application should have a protection from sub-domain takeovers if the application relies upon DNS entries or DNS sub-domains, such as expired domain names, out of date DNS pointers or CNAMEs, expired projects at public source code repos, or transient cloud APIs, serverless functions, or storage buckets (autogen-bucket-id.cloud.example.com) or similar. Protections can include ensuring that DNS names used by applications are regularly checked for expiry or change.&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="10.3.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="10.3.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="10.3.3" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ul&gt;&lt;li&gt;Verify the forward and reverse DNS lookups.&lt;/li&gt;&lt;li&gt;Verify the connection to the DNS was authenticated successfully by username/password or certificate and that they are active.&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:24.323">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AV-DoS-L7" name="Identity which functions of the application are resource consuming and protect and monitor them (optionally set up a WAF)" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="JamesRabe" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;DoS attacks against the application layer also aim to use up the memory and process time that the application requires to function properly while minimizing the resources employed by the attacker by using vulnerabilities or flaws in the application. The main characteristics of this type of attack are:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;The requirement for less bandwidth compared to other methods such as SYN Flood attacks, and as such, the infrastructure necessary to launch a successful attack is usually minor.&lt;/li&gt;&lt;li&gt;Greater difficulty in distinguishing between malicious and legitimate traffic. Many of the most common protection measures or systems focus on the network or transport layer, and as such, they would not be efficient when the target of the attack is the application layer. It is even difficult for the defense systems that monitor this layer to distinguish between malicious and legitimate traffic.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;As we have indicated, this type of attack is very specific, and generally require fewer resources from the attacker to achieve devastating effects in the systems attacked. However, this type of attack requires more time to analyze the targeted system in order to discover vulnerabilities or bottlenecks that can be exploited during the attack.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Analyze weaknesses or bottlenecks in the design, the implementation, or even the functioning of the application to identify "heavy" requests that are resource consuming. For example, if the web application has a search engine, an attack could be to carry out searches that require a high level of resources to generate a bottleneck and eventually disable the service.&lt;/li&gt;&lt;li&gt;Implement a challenge to the device making the network request in order to test whether or not it is a bot. This is done through a test much like the CAPTCHA test commonly found when creating an account online. By giving a requirement such as a JavaScript computational challenge, many attacks can be mitigated.&lt;/li&gt;&lt;li&gt;Use of a web application firewall, managing and filtering traffic through an IP reputation database, and through on-the-fly network analysis by engineers.&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="DDoS Attacks and Countermeasures in Cyberspace" url="https://www.researchgate.net/publication/279176025_DDoS_Attacks_and_Countermeasures_in_Cyberspace"/>
            <reference name="DDoS Quick Guide" url="https://www.us-cert.gov/sites/default/files/publications/DDoS%20Quick%20Guide.pdf"/>
            <reference name="ENISA - Threat Landscape and Good Practice Guide for Internet Infrastructure" url="https://www.enisa.europa.eu/publications/iitl/at_download/fullReport"/>
            <reference name="Layer 7 DDoS Attacks" url="https://owasp.org/www-pdf-archive/Layer_7_DDOS.pdf"/>
            <reference name="RFC 4732 - Internet Denial-of-Service Considerations" url="https://tools.ietf.org/html/rfc4732"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Perform Layer 7 DDoS PoC attacks in a security-laboratory environment and monitor the performance degradation in terms of CPU/Memory/Disk Space. One well-known application attack is Slowloris, which targets web servers. Verify that the implemented Layer 7 protection mechanisms (Javascript challenges, CAPTCHA tests, WAF) are effective.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:24.426">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="implement-monitoring-unusual-activities" name="Implement and monitor Business Logic Limits for actions and transactions" issueId="" issueLink="" platform="" cost="0" risk="28" state="Recommended" owner="JamesRabe" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Implement in the application the appropriate limits for specific business actions and transactions, to enforce the correct usage of the application for each user ensuring they cannot bypass important steps in the flow. This business logic limits provide us protection against likely business risks or threats, identified using threat modeling or similar methodologies.&lt;/p&gt;&lt;p&gt;All business actions or transactions that exceed the established limits, should be recorded in the logs and monitored as unusual events.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OWASP Pro active controls [C8]" url="https://www.owasp.org/images/b/bc/OWASP_Top_10_Proactive_Controls_V3.pdf"/>
            <reference name="OWASP Testing for business logic" url="https://www.owasp.org/index.php/Testing_for_business_logic"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="10" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="11.1.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="11.1.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="11.1.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="11.1.5" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="11.1.5" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="11.1.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="11.1.7" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="11.1.7" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="13" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="14" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="16" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="22" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="3" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="7" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="A04:2021-Insecure Design" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="API4:2019-Lack of Resources and Rate Limiting" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
 &lt;ul&gt;
  &lt;li&gt;Verify the application has appropriate limits for specific business actions or transactions which are correctly enforced on a per user basis.&lt;/li&gt;
   &lt;li&gt;Verify the application has business logic limits or validation to protect against likely business risks or threats, identified using threat modeling or similar methodologies.&lt;/li&gt;
  &lt;li&gt;Verify the application monitors for unusual events or activity from a business logic perspective.&lt;/li&gt;
 &lt;/ul&gt;
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:25.571">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="network-rate-limit" name="Implement application and network rate limiting" issueId="" issueLink="" platform="" cost="1" risk="28" state="Recommended" owner="JamesRabe" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;A number of attacks rely on brute-force techniques to send large volumes of requests to enumerate or attempt to exploit flaws in an application, for example, sending common passwords to multiple target accounts within an application. By profiling normal traffic volumes, and applying rate limiting, the application can be built to actively mitigate such attacks.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Connection rate-limiting based on the source IP address can be used to restrict attacks against the authentication or registration systems. Multiple failures (or attempts) from a single IP should result in temporarily blocking or dropping traffic from the source. Note however that some corporate and ISP environments may place multiple valid and discrete clients behind the same IP address, resulting in false-positives.&lt;/li&gt;&lt;li&gt;Attackers may use botnets and other IP masking techniques to deliver attacks to avoid IP based rate-limiting. To mitigate this class of attack, Indicators of Compromise should be monitored (for example a higher rate of login failures than usual), and appropriate actions taken. For example, when the application detects active brute-force attacks, a Web Application Firewall (WAF) or other intermediate devices could be used to block attacks sharing a signature from pattern matching or deep packet inspection (e.g. HTTP headers or common passwords across multiple accounts). Similarly, the application could respond by requiring a CAPTCHA, cookie, or Javascript challenge when an attack is detected.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation:&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Implement the mechanisms to lockout accounts:&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;When the application detects a set number of failure login attempts, the account shall be locked for a certain time period. This period shall be increased as per each new failed attempt up to an hour as maximum.&lt;/li&gt;&lt;li&gt;When the application detects an account is locked more times than usual, this account should be disabled (no more than 100 failure attempts). A disabled account should only be restored by an administrator.&lt;/li&gt;&lt;li&gt;When the application detects active brute-force attacks, the application shall require a CAPTCHA, cookie, or JavaScript challenge before attempting authentication.&lt;/li&gt;&lt;li&gt;Only accept those authentication requests that come from a white list of IP addresses from which the user has been successfully authenticated before.&lt;/li&gt;&lt;li&gt;If the user successfully authenticates, the previous failed attempts shall be reset for that user from the same IP address.&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA AC-02 Account Management" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/24-08_02_AC-02"/>
            <reference name="OSA AC-07 Unsuccessful Login Attempts" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/29-08_02_AC-07"/>
            <reference name="OSA AC-16 Automated Labeling" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/198-08_02_AC-16"/>
            <reference name="OSA IA-01 Identification And Authentication Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/181-08_02_IA-01"/>
            <reference name="OWASP Blocking Brute Force Attacks" url="https://www.owasp.org/index.php/Blocking_Brute_Force_Attacks"/>
            <reference name="OWASP Juice Shop: Broken Access Control" url="https://pwning.owasp-juice.shop/part2/broken-access-control.html"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="10" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="11.1.4" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="11.1.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="11.1.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="13" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="14" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="16" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="2.2.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="2.2.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.2.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="2.4.8.7" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.8.7" supportedStandardRef="iotsf-class-2"/>
            <standard ref="22" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="3" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="4.5" supportedStandardRef="OWASP-MASVS-L1"/>
            <standard ref="4.5" supportedStandardRef="OWASP-MASVS-L1+R"/>
            <standard ref="4.5" supportedStandardRef="OWASP-MASVS-L2"/>
            <standard ref="4.5" supportedStandardRef="OWASP-MASVS-L2+R"/>
            <standard ref="5" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5.1.1.2" supportedStandardRef="nist-800-63"/>
            <standard ref="5.1.4.2" supportedStandardRef="nist-800-63"/>
            <standard ref="5.1.5.2" supportedStandardRef="nist-800-63"/>
            <standard ref="5.2.2" supportedStandardRef="nist-800-63"/>
            <standard ref="7" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="8.1.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="8.1.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="9.4.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="A01:2021-Broken Access Control" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A5:2017-Broken Access Control" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="AC-16" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-2" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AC-2" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AC-2" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AC-2" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-7" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AC-7" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AC-7" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AC-7" supportedStandardRef="NIST 800-53"/>
            <standard ref="API4:2019-Lack of Resources and Rate Limiting" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="DE.CM-1" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-3" supportedStandardRef="nist-csf"/>
            <standard ref="IA-1" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="IA-1" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="IA-1" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="IA-1" supportedStandardRef="NIST 800-53"/>
            <standard ref="ID.GV-1" supportedStandardRef="nist-csf"/>
            <standard ref="ID.GV-3" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-1" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-4" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-6" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-7" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Use tools like &lt;a href="https://www.thc.org/thc-hydra/"&gt;THC-Hydra&lt;/a&gt;, &lt;a href="https://www.owasp.org/index.php/OWASP_Zed_Attack_Proxy_Project"&gt;OWASP ZAP&lt;/a&gt; or &lt;a href="https://portswigger.net/burp/"&gt;Burp Suite &lt;/a&gt;to simulate brute force attacks against the login function.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Perform a simulation of the attack against the login function.&lt;/li&gt;&lt;li&gt;Verify the function is blocked for your source after n attempts.&lt;/li&gt;&lt;li&gt;Verify there is a log alerting function for an unusual amount of failed login attempts, even if they originated from different sources.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:25.571">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="NIST-800-53-SC-19" name="Implement audit processes for VoIP" issueId="" issueLink="" platform="" cost="0" risk="28" state="Recommended" owner="JamesRabe" library="bz-new-library" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;&lt;strong&gt;The organization:&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;a. Establishes usage restrictions and implementation guidance for Voice over Internet Protocol (VoIP) technologies based on the potential to cause damage to the information system if used maliciously; and&lt;/p&gt;&lt;p&gt;b. Authorizes, monitors, and controls the use of VoIP within the information system.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="NIST 800-53" url="https://nvlpubs.nist.gov/nistpubs/SpecialPublications/NIST.SP.800-53r5.pdf"/>
            <reference name="OSA SC-19 Voice Over Internet Protocol" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/79-08_02_SC-19"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="10" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="18" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="19" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="3" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API1:2019-Broken Object Level Authorization" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="PR.PT-4" supportedStandardRef="nist-csf"/>
            <standard ref="SC-19" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="SC-19" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="SC-19" supportedStandardRef="NIST 800-53"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:24.577">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="error-handling-centralized" name="Implement centralized mechanisms to manage errors and exceptions" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="JamesRabe" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Create a functionality or a mechanism to manage exceptions in a centralized manner and avoid including duplicated try/catch blocks in the code.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;A well-planned error/exception handling strategy is important for three reasons:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Good error handling does not give an attacker any information which can be leveraged for attacking the application.&lt;/li&gt;&lt;li&gt;A proper centralized error strategy is easier to maintain and reduces the chances of any uncaught errors "Bubbling up" to the front-end of an application.&lt;/li&gt;&lt;li&gt;Information leakages can lead to social engineering exploits.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation:&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Building an infrastructure for consistent error reporting proves more difficult than error handling. All exceptions should be caught as events with the severity of the error. These events will be logged.&lt;/p&gt;&lt;p&gt;The centralized system should reorganize all events and throw the corresponding error or system message in a consistent manner, depending on the severity of the error.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OWASP Code Review: Error Handling" url="https://www.owasp.org/index.php/Codereview-Error-Handling"/>
            <reference name="OWASP Error Handling" url="https://www.owasp.org/index.php/Error_Handling"/>
            <reference name="[C3] OWASP Proactive Controls" url="https://www.owasp.org/index.php/OWASP_Proactive_Controls"/>
          </references>
          <standards>
            <standard ref="7.4.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="7.4.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="7.4.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="7.4.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="7.4.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="7.4.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="7.4.3" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ul&gt;&lt;li&gt;Verify that a centralized system is in place to catch errors and exceptions, and these errors are shown in a correct manner.&lt;/li&gt;&lt;li&gt;Verify all errors thrown from the centralized system are displayed in a correct fashion.&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:25.571">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="security-logging" name="Implement Security Logging and Monitoring" issueId="" issueLink="" platform="" cost="0" risk="24" state="Recommended" owner="JamesRabe" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Logging is often neglected by developers when thinking of security considerations. However, proper logging practices can provide the crucial forensics needed to investigate after a breach, and perhaps more importantly, to detect security issues as they happen. Most developers are already familiar with logging for debugging and diagnostic purposes, so it should be easy for them to apply the concept of security logging.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation:&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Log all failed authentication attempts, denied access, and input validation errors.&lt;/li&gt;&lt;li&gt;Logs should be written using a format suited to be consumed by a log management solution, and include enough details to identify the malicious actor.&lt;/li&gt;&lt;li&gt;Logs need to be handled as sensitive data, and their integrity should be guaranteed at rest and transit.&lt;/li&gt;&lt;li&gt;Configure a monitoring system to continuously monitor the infrastructure, network, and the API functioning.&lt;/li&gt;&lt;li&gt;Use a Security Information and Event Management (SIEM) system to aggregate and manage logs across all components and hosts.&lt;/li&gt;&lt;li&gt;Configure custom dashboards and alerts, making it possible to detect and respond to suspicious activity as early as possible.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OWASP Logging Cheat Sheet" url="https://cheatsheetseries.owasp.org/cheatsheets/Logging_Cheat_Sheet.html"/>
            <reference name="OWASP Proactive Controls C9: Implement Security Logging and Monitoring" url="https://owasp-top-10-proactive-controls-2018.readthedocs.io/en/latest/c9-implement-security-logging-monitoring.html"/>
            <reference name="OWASP Security Logging Project" url="https://www.owasp.org/index.php/OWASP_Security_Logging_Project"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Organizations should perform testing and validation activities periodically to confirm that the organization's logging policies, processes, and procedures are being followed properly both at the infrastructure level and the system level throughout the organization.&amp;nbsp; Log management audits can identify deficiencies in policies, procedures, technology, and training that can then be addressed.&lt;/p&gt;&lt;p&gt;The most common techniques for testing and validating logging are as follows:&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Auditors or others performing testing and validation can review the logging configuration and settings, as well as the system logs, infrastructure logs, and archived logs, for a representative sampling of systems and infrastructure servers to ensure that they comply with policies and procedures.&lt;/li&gt;&lt;li&gt;Auditors (or security administrators under the direction of auditors) or others performing testing and validation can create security events on a representative sampling of systems through vulnerability scanning, penetration testing, or routine actions (e.g., logging onto a system remotely), and then ensure that the log data those activities should generate exist and are handled according to the organization's policies and procedures.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:24.692">
              <output/>
            </source>
            <references>
              <reference name="Guide to Computer Security Log Management" url="https://nvlpubs.nist.gov/nistpubs/Legacy/SP/nistspecialpublication800-92.pdf"/>
            </references>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AV-DoS-TLS" name="Inspect the TLS/SSL traffic on a capable device before sending the connection down on your infrastructure" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="JamesRabe" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;TLS adds another vector for computational attacks since a client can easily (with little computational effort) force the server to expend relatively large computational work. If a web application is delivered over TLS, an attacker can also choose to attack the TLS negotiation process. TLS is computationally expensive so an attacker can reduce a server's availability by sending unintelligible data. In a variation of this attack, an attacker completes the TLS handshake but perpetually renegotiates the encryption method. Or an attacker can attempt to exhaust server resources by opening and closing many TLS sessions.&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;To mitigate consider options like offloading the SSL from the origin infrastructure and inspecting the application traffic for signs of attack traffic or violations of policy at an application delivery platform (ADP).&lt;br&gt;A good ADP will also ensure that your traffic is then re-encrypted and forwarded back to the origin infrastructure with unencrypted content only ever residing in protected memory on a secure bastion host.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="DDoS Attacks and Countermeasures in Cyberspace" url="https://www.researchgate.net/publication/279176025_DDoS_Attacks_and_Countermeasures_in_Cyberspace"/>
            <reference name="DDoS Quick Guide" url="https://www.us-cert.gov/sites/default/files/publications/DDoS%20Quick%20Guide.pdf"/>
            <reference name="ENISA - Threat Landscape and Good Practice Guide for Internet Infrastructure" url="https://www.enisa.europa.eu/publications/iitl/at_download/fullReport"/>
            <reference name="RFC 4732 - Internet Denial-of-Service Considerations" url="https://tools.ietf.org/html/rfc4732"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Perform Layer 6 DDoS attack PoC attacks in a security-laboratory environment and monitor the performance degradation in terms of CPU/Memory/Disk Space to verify if the implemented availability protection is effective. One useful tool to execute this kind of test is &lt;a href="http://testssl.sh/"&gt;testssl.sh&lt;/a&gt;. It covers all the required tests for TLS &amp;amp; SSL assessments and is regularly updated.&lt;/p&gt;&lt;p&gt;There are many testing options that can be used with &lt;a href="http://testssl.sh/"&gt;testssl.sh&lt;/a&gt; and the options you should use will depend greatly on your testing requirements. Below are some useful examples, for an overview of &lt;a href="http://testssl.sh/"&gt;testssl.sh&lt;/a&gt; command-line options. run ./testssl.sh with no other options.&lt;/p&gt;&lt;p&gt;Test Everything on a Single Host and Output to console&lt;br&gt;./testssl.sh -e -E -f -p -y -Y -S -P -c -H -U TARGET-HOST&lt;/p&gt;&lt;p&gt;Test Everything on a Single Host and Output to HTML&lt;br&gt;./testssl.sh -e -E -f -p -y -Y -S -P -c -H -U TARGET-HOST | aha &amp;gt; OUTPUT-FILE.html&lt;/p&gt;&lt;p&gt;Test all hosts on a Subnet and Output to HTML&lt;br&gt;./testssl.sh -e -E -f -p -y -Y -S -P -c -H -U 192.168.1.0/24 | aha &amp;gt; OUTPUT-FILE.html&lt;/p&gt;&lt;p&gt;Same as above, but only enumerate each servers supported ciphers:&lt;br&gt;./testssl.sh -E 192.168.1.0/24 | aha &amp;gt; OUTPUT-FILE.html&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:24.426">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="RESTRICT-NUMBER-ACCOUNT-TO-LOGS" name="Limit the number of accounts with privileges allowing modification and/or deletion of audit logs files" issueId="" issueLink="" platform="" cost="0" risk="28" state="Recommended" owner="JamesRabe" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Limit the number of accounts with privileges to modify and/or delete audit logs files.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Berkeley security: audit logs" url="https://security.berkeley.edu/security-audit-logging-guideline"/>
            <reference name="OSA AC-03 Access Enforcement" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/25-08_02_AC-03"/>
            <reference name="OSA AU-09 Protection Of Audit Information" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/178-08_02_AU-09"/>
            <reference name="[C3] OWASP Proactive Controls" url="https://www.owasp.org/index.php/OWASP_Proactive_Controls"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="10" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="12.1.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="12.4.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="18" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="19" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="3" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="7.3.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="7.3.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="AC-24" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-3" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AC-3" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AC-3" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AC-3" supportedStandardRef="NIST 800-53"/>
            <standard ref="API1:2019-Broken Object Level Authorization" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="AU-9" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AU-9" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AU-9" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AU-9" supportedStandardRef="NIST 800-53"/>
            <standard ref="PR.AC-4" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-6" supportedStandardRef="nist-csf"/>
            <standard ref="PR.PT-1" supportedStandardRef="nist-csf"/>
            <standard ref="PR.PT-3" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that the number of accounts with privileges to modify the logs is limited and
                            controlled.
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:24.692">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CSD-VAL-LOG" name="Log and reject all data validation failures" issueId="" issueLink="" platform="" cost="0" risk="24" state="Recommended" owner="JamesRabe" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Data validation failures, together with access control violations, are symptomatic of malicious activity where an attacker is attempting to subvert the protections in place. It is therefore likely that unexpected input detected by the application relates to an attack. Rejecting and logging such activity, and ideally terminating the session, increases the likelihood of detecting and inhibiting structured attacks against the application.
&lt;/div&gt;
&lt;div&gt;
 &lt;ul&gt;
  &lt;li&gt;Log all validation failures when rejecting requests.&lt;/li&gt;
  &lt;li&gt;Ensure logged data is appropriately sanitized and encoded to prevent attacks against the logs and subsequent access to them.&lt;/li&gt;
  &lt;li&gt;Terminate the offending user session to inhibit further attack.&lt;/li&gt;
  &lt;li&gt;Ensure errors returned to the client-side are generic to prevent an attacker enumerating the defenses in place or gaining knowledge about the back-end.&lt;/li&gt;
 &lt;/ul&gt;
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA AU-02 Auditable Events" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/37-08_02_AU-02"/>
            <reference name="OSA AU-03 Content Of Audit Records" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/172-08_02_AU-03"/>
            <reference name="OSA SI-05 Security Alerts And Advisories" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/43-08_02_SI-05"/>
            <reference name="OSA SI-10 Information Accuracy, Completeness, Validity, And Authenticity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/48-08_02_SI-10"/>
            <reference name="OSA SI-11 Error Handling" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/49-08_02_SI-11"/>
            <reference name="OSA SI-12 Information Output Handling And Retention" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/50-08_02_SI-12"/>
            <reference name="[C3] OWASP Proactive Controls" url="https://www.owasp.org/index.php/OWASP_Proactive_Controls"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="1.7.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="1.7.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="11.1.8" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="11.1.8" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="12.1.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="12.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="12.4.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="12.4.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="12.5.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="164.312(b)" supportedStandardRef="hipaa-required"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="7.1.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="7.1.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="7.2.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="7.2.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="7.2.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="7.2.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="9.2.3" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="9.4.4" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="AC-24" supportedStandardRef="NIST 800-53"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="AU-12" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AU-12" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AU-12" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AU-12" supportedStandardRef="NIST 800-53"/>
            <standard ref="AU-2" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AU-2" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AU-2" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AU-2" supportedStandardRef="NIST 800-53"/>
            <standard ref="AU-3" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AU-3" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AU-3" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AU-3" supportedStandardRef="NIST 800-53"/>
            <standard ref="DE.CM-1" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-3" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-7" supportedStandardRef="nist-csf"/>
            <standard ref="ID.RA-1" supportedStandardRef="nist-csf"/>
            <standard ref="ID.RA-2" supportedStandardRef="nist-csf"/>
            <standard ref="ID.RA-3" supportedStandardRef="nist-csf"/>
            <standard ref="ID.SC-4" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-4" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-6" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-2" supportedStandardRef="nist-csf"/>
            <standard ref="PR.PT-1" supportedStandardRef="nist-csf"/>
            <standard ref="RS.AN-5" supportedStandardRef="nist-csf"/>
            <standard ref="RS.CO-5" supportedStandardRef="nist-csf"/>
            <standard ref="SI-10" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-11" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-12" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-15" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-5" supportedStandardRef="NIST 800-53"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Confirm all security events (and suspicious activity that may indicate a security event) are appropriately identified in the application.&lt;/li&gt;&lt;li&gt;Confirm security errors are logged with appropriate priority.&lt;/li&gt;&lt;li&gt;Any data logged relating to the event must be carefully sanitized and encoded; by definition the data could be an attack payload and could execute when the logs are viewed outside of the system.&lt;/li&gt;&lt;li&gt;Verify actual logged data.&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:24.691">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CDS-USER-TRACK" name="Log details of user actions within the system" issueId="" issueLink="" platform="" cost="0" risk="24" state="Recommended" owner="JamesRabe" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;To maintain proper accountability, logs should be maintained with sufficient
                        information to track user actions within the system. These logs should be forensically sound,
                        non-repudiable, and contain comprehensive details about activity. While the exact data for an
                        event may vary, the following should be captured at a minimum:&lt;/p&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Timestamps against a proven external source (e.g. an NTP server).&lt;/li&gt;
                        &lt;li&gt;Origin (with this field we mark if the logs are provided by a trusted or untrusted
                        source).&lt;/li&gt;
                        &lt;li&gt;Event, status, and/or&amp;nbsp;error codes (with sensitive data masked as appropriate
                        or not introduced in logs).&lt;/li&gt;
                        &lt;li&gt;Service, command, application or function name and details.&lt;/li&gt;
                        &lt;li&gt;User or system account associated with an event.&lt;/li&gt;
                        &lt;li&gt;Devices used (e.g. source and destination IPs, terminal session ID, web browser, etc.).&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;div&gt;
                        Source:&amp;nbsp;&amp;nbsp;
                        &lt;a href="https://security.berkeley.edu/security-audit-logging-guideline"&gt;https://security.berkeley.edu/security-audit-logging-guideline&lt;/a&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Berkeley security: audit logs" url="https://security.berkeley.edu/security-audit-logging-guideline"/>
            <reference name="OSA AC-03 Access Enforcement" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/25-08_02_AC-03"/>
            <reference name="OSA AC-07 Unsuccessful Login Attempts" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/29-08_02_AC-07"/>
            <reference name="OSA AU-02 Auditable Events" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/37-08_02_AU-02"/>
            <reference name="OSA AU-03 Content Of Audit Records" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/172-08_02_AU-03"/>
            <reference name="OSA AU-10 Non-Repudiation" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/179-08_02_AU-10"/>
            <reference name="OSA CA-07 Continuous Monitoring" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/166-08_02_CA-07"/>
            <reference name="OSA IR-05 Incident Monitoring" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/139-08_02_IR-05"/>
            <reference name="OSA SI-05 Security Alerts And Advisories" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/43-08_02_SI-05"/>
            <reference name="OSA SI-12 Information Output Handling And Retention" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/50-08_02_SI-12"/>
            <reference name="OWASP Juice Shop: Broken Access Control" url="https://pwning.owasp-juice.shop/part2/broken-access-control.html"/>
            <reference name="OWASP Juice Shop: Security Misconfiguration" url="https://pwning.owasp-juice.shop/part2/security-misconfiguration.html"/>
            <reference name="[C3] OWASP Proactive Controls" url="https://www.owasp.org/index.php/OWASP_Proactive_Controls"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="1.7.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="1.7.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="10.1.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="12.1.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="12.4.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="12.4.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="164.312(a)(1)(A)" supportedStandardRef="hipaa-required"/>
            <standard ref="164.312(b)" supportedStandardRef="hipaa-required"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="4.10" supportedStandardRef="OWASP-MASVS-L2"/>
            <standard ref="4.10" supportedStandardRef="OWASP-MASVS-L2+R"/>
            <standard ref="7.1.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="7.1.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="7.1.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="7.1.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="9.4.3" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="A01:2021-Broken Access Control" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A09:2021-Security Logging and Monitoring Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2017-Insufficient Logging-Monitoring" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="A5:2017-Broken Access Control" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="AC-3" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AC-3" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AC-3" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AC-3" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-7" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AC-7" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AC-7" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AC-7" supportedStandardRef="NIST 800-53"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="AU-10" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AU-10" supportedStandardRef="NIST 800-53"/>
            <standard ref="AU-14" supportedStandardRef="NIST 800-53"/>
            <standard ref="AU-2" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AU-2" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AU-2" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AU-2" supportedStandardRef="NIST 800-53"/>
            <standard ref="AU-3" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AU-3" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AU-3" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AU-3" supportedStandardRef="NIST 800-53"/>
            <standard ref="CA-7" supportedStandardRef="NIST 800-53"/>
            <standard ref="DE.AE-2" supportedStandardRef="nist-csf"/>
            <standard ref="DE.AE-3" supportedStandardRef="nist-csf"/>
            <standard ref="DE.AE-5" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-1" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-2" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-3" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-6" supportedStandardRef="nist-csf"/>
            <standard ref="DE.CM-7" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-1" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-2" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-3" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-4" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-5" supportedStandardRef="nist-csf"/>
            <standard ref="ID.RA-1" supportedStandardRef="nist-csf"/>
            <standard ref="ID.RA-2" supportedStandardRef="nist-csf"/>
            <standard ref="ID.RA-3" supportedStandardRef="nist-csf"/>
            <standard ref="ID.SC-4" supportedStandardRef="nist-csf"/>
            <standard ref="IR-5" supportedStandardRef="NIST 800-53"/>
            <standard ref="PR.AC-4" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-6" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-7" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-2" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-7" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-8" supportedStandardRef="nist-csf"/>
            <standard ref="PR.PT-1" supportedStandardRef="nist-csf"/>
            <standard ref="PR.PT-3" supportedStandardRef="nist-csf"/>
            <standard ref="RS.AN-1" supportedStandardRef="nist-csf"/>
            <standard ref="RS.AN-4" supportedStandardRef="nist-csf"/>
            <standard ref="RS.AN-5" supportedStandardRef="nist-csf"/>
            <standard ref="RS.CO-3" supportedStandardRef="nist-csf"/>
            <standard ref="RS.CO-5" supportedStandardRef="nist-csf"/>
            <standard ref="RS.MI-3" supportedStandardRef="nist-csf"/>
            <standard ref="SI-12" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-5" supportedStandardRef="NIST 800-53"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Perform several different actions on the service.&lt;/li&gt;&lt;li&gt;Inspect the log files to see if the format and content complies with the company policy.&lt;/li&gt;&lt;li&gt;If there is no company policy, check that at least the following data is included: timestamp event, status, error codes, service/command/application username or system account associated with an eventDevice used (e.g. source and destination IPs, terminal session ID, web browser, etc).&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;Source:&amp;nbsp;&lt;a href="https://security.berkeley.edu/security-audit-logging-guideline"&gt; https://security.berkeley.edu/security-audit-logging-guideline&lt;/a&gt;&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:24.691">
              <output/>
            </source>
            <references>
              <reference name="Berkeley security: audit logs" url="https://security.berkeley.edu/security-audit-logging-guideline"/>
            </references>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="EU-GDPR-LOGGING" name="Logging the data access and the modification of personal data" issueId="" issueLink="" platform="" cost="0" risk="24" state="Recommended" owner="JamesRabe" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Make sure that every access and modification of personal data is logged (The log should be precise enough to know who changed what and when). This includes data access from the application as well as data access from privileged accounts, such as database admins. In practice, this means logging both on application, middleware and operating system (OS) level.
          </desc>
          <implementations/>
          <references>
            <reference name="EU GDPR - EU Data Protection" url="https://ec.europa.eu/justice/data-protection/reform/files/regulation_oj_en.pdf"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="8.3.5" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="8.3.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="Art.32" supportedStandardRef="EU-GDPR"/>
            <standard ref="Art.5" supportedStandardRef="EU-GDPR"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                &lt;li&gt;Test accessing and modifying user personal data as legitimate users, employees, administrators and malicious actors.&lt;/li&gt;
                &lt;li&gt;Verify appropriate logging of all the above activities are successful and sufficiently detailed.&lt;/li&gt;
                &lt;/ol&gt;
            </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:24.691">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="LOG-TLS-FAILURES" name="Log the backend TLS connection failures" issueId="" issueLink="" platform="" cost="0" risk="24" state="Recommended" owner="JamesRabe" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Implement functionality to record backend TLS connection failures and include these in the
                        logs.
                    </desc>
          <implementations/>
          <references>
            <reference name="OSA AU-02 Auditable Events" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/37-08_02_AU-02"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="12.4.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="13.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="9.2.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="AU-2" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AU-2" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AU-2" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AU-2" supportedStandardRef="NIST 800-53"/>
            <standard ref="ID.SC-4" supportedStandardRef="nist-csf"/>
            <standard ref="PR.PT-1" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that backend TLS connection failures are recorded in the logs.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:24.691">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CWE-541" name="Prevent unauthorised access to source code through the service" issueId="" issueLink="" platform="" cost="0" risk="35" state="Recommended" owner="JamesRabe" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Access to the source-code for the application can aid an attacker in determining bugs or vulnerabilities in the code or logic. For closed-source projects it is therefore important to control and restrict access to the source. Application services may unexpectedly expose code, for example a service providing files to a user could be manipulated to access source code if implemented insecurely.&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Ensure source code is not inadvertently disclosed through misconfiguration or vulnerabilities in the service.&lt;/li&gt;&lt;li&gt;Check configuration files are not downloadable directly from the service, and cannot be read and viewed through the service itself.&lt;/li&gt;&lt;li&gt;Ensure backups, operating systems, and version control artifacts do not expose code.&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="12.5.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="12.5.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="12.5.1" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Check the source code of the application is never returned in cases in which it cannot be interpreted.&lt;/li&gt;&lt;li&gt;Web Servers have a concept called handlers which manage the source code interpretation before sending it to the client. If those handlers are not properly configured, the plain source code could be sent as a default.&lt;/li&gt;&lt;li&gt;Check the handlers are correctly configured to support the types of languages your server uses.&lt;/li&gt;&lt;li&gt;Check also that the source code is not leaked in case of failure.&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:25.570">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="cwe-352-csrf" name="Protect cookies from CSRF" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="JamesRabe" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Cross-Site Request Forgery (CSRF) is a type of attack that occurs when a malicious web site, email, blog, instant message, or program causes a user's web browser to perform an unwanted action on a trusted site when the user is authenticated. A CSRF attack works because browser requests automatically include any credentials associated with the site, such as the user's session cookie, IP address, etc. Therefore, if the user is authenticated to the site, the site cannot distinguish between the forged or legitimate request sent by the victim. A token/identifier that is not accessible to the attacker is needed to mitigate this and would not be sent along (like cookies) with forged requests that the attacker initiates.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation:&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Requiring re-authentication of sensitive functions is an effective way to protect your application against a CSRF, but intrusive to the user experience.&lt;/p&gt;&lt;p&gt;You can also protect cookies from CSRF using at least one or more of the following recommendations:&amp;nbsp;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;&lt;strong&gt;CSRF nonces&lt;/strong&gt;. Use nonces to prevent unauthorized access by providing a secret 'key' (which is valid only once) that must be validated in any sensitive form submission. For maximum security, the nonce is also time sensitive and expires.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Triple or double submit cookie pattern&lt;/strong&gt;. If maintaining the state for the CSRF token on the server-side is problematic, an alternative defense is to use the double-submit cookie technique. This technique is easy to implement and is stateless. In this technique, a random value is sent in both a cookie and as a request parameter, with the server verifying if the cookie value and request value match. When a user visits (even before authenticating to prevent login CSRF), the site should generate a (cryptographically strong) pseudo random value and set it as a cookie on the user's machine separate from the session identifier. The site then requires that every transaction request include this pseudo-random value as a hidden form value (or other request parameter/header). If both of them match on the server-side, the server accepts it as a legitimate request and if they don't, then rejects the request.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;ORIGIN request header checks&lt;/strong&gt;.There are two steps to this mitigation, both of which rely on examining an HTTP request header value. Firstly, determining the origin the request is coming from (source origin). This can be achieved via Origin and/or referer headers. Secondly, determining the origin the request is going to (target origin). On the server-side verify if both of these match. If they do, we accept the request as legitimate (meaning it's the same origin request) and if they don't, discard the request (meaning that the request originated from a cross-domain). Reliability of these headers comes from the fact they cannot be altered programmatically (using JavaScript in an XSS) as they fall under the forbidden headers list (i.e., only browsers can set them).&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Cross-Site Request Forgery (CSRF) Prevention Cheat Sheet" url="https://cheatsheetseries.owasp.org/cheatsheets/Cross-Site_Request_Forgery_Prevention_Cheat_Sheet.html"/>
            <reference name="OSA CM-06 Configuration Settings" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/157-08_02_CM-06"/>
            <reference name="OSA SC-03 Security Function Isolation" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/63-08_02_SC-03"/>
            <reference name="OSA SI-10 Information Accuracy, Completeness, Validity, And Authenticity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/48-08_02_SI-10"/>
          </references>
          <standards>
            <standard ref="13.2.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="13.2.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="13.2.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="4.2.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="4.2.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="4.2.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="CM-6" supportedStandardRef="NIST 800-53"/>
            <standard ref="PR.IP-1" supportedStandardRef="nist-csf"/>
            <standard ref="SC-3" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="SC-3" supportedStandardRef="NIST 800-53"/>
            <standard ref="SC-30" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-10" supportedStandardRef="NIST 800-53"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;1.- Identify all application components performing sensitive operations.&amp;nbsp;&lt;/p&gt;&lt;p&gt;2.- Using an intercepting proxy, the Web Developer Console, or other tool; intercept the browser request and server response, and verify a unique strong token is being sent and verified with each request.&lt;/p&gt;&lt;p&gt;3.- Confirm the tokens are passed in a programmatic way resistant to CSRF attack; e.g. in a custom POST field and separate HTTP header.&lt;/p&gt;&lt;p&gt;4.- Attempt to subvert the CSRF controls to ensure they are robust:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Change or remove the tokens and confirm the application rejects the request.&lt;/li&gt;&lt;li&gt;Attempt to replay the tokens in a subsequent request.&lt;/li&gt;&lt;li&gt;Mismatch the tokens in a request.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;To modify headers and otherwise modify browser requests, use an intercepting proxy (e.g. OWASP Zap, Burp or Fiddler), or browser extensions such as Cookie Manager or Tamper Data.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:25.107">
              <output/>
            </source>
            <references>
              <reference name="Testing for CSRF (OTG-SESS-005)" url="https://www.owasp.org/index.php/Testing_for_CSRF_(OTG-SESS-005)"/>
            </references>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AV-DoS-ICMP-Flooding" name="Rate-limit ICMP traffic and prevent the attack from impacting bandwidth and firewall performance" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="JamesRabe" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Common attacks are ICMP Flooding, Ping flood and Ping of death - Layer 3 infrastructure DDoS attack methods that use ICMP messages to overload the targeted network's bandwidth. These kind of attacks can be prevented from taking place by rate-limiting ICMP traffic.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation&lt;/strong&gt;:&lt;/p&gt;&lt;p&gt;For example, iptables can be used on Linux systems as follows:&lt;/p&gt;&lt;p&gt;To protect against ping flood attacks the 'limit' module of iptables can be used:&lt;/p&gt;&lt;p&gt;-A INPUT -p icmp --icmp-type echo-request -m limit --limit 60/minute --limit-burst 120 -j ACCEPT -A INPUT -p icmp --icmp-type echo-request -m limit --limit 1/minute --limit-burst 2 -j LOG&amp;nbsp;&lt;/p&gt;&lt;p&gt;-A INPUT -p icmp --icmp-type echo-request -j DROP&amp;nbsp;&lt;/p&gt;&lt;p&gt;Note that the above lines will protect only against ping request attacks.&amp;nbsp;&lt;/p&gt;&lt;p&gt;To protect against generic ICMP flood attacks we can remove the constraint '--icmp-type echo-request'. This is only good enough to protect against PC to PC attacks. If flood is done using multiple sources or using hardware then this configuration may not be enough. The configuration will also cause denial of service to other users when under attack even from single source, as we are limiting based on protocol without considering the source address of the packet.&lt;/p&gt;&lt;p&gt;Iptables can also be used to prevent abuse of network resources by rate limiting them:&amp;nbsp;&lt;/p&gt;&lt;p&gt;-A OUTPUT -p tcp -m tcp --dport 80 -m limit --limit 4/second --limit-burst 12 -j ACCEPT&amp;nbsp;&lt;/p&gt;&lt;p&gt;-A OUTPUT -p tcp -m tcp --dport 80 -m limit --limit 1/minute --limit-burst 1 -j LOG&amp;nbsp;&lt;/p&gt;&lt;p&gt;-A OUTPUT -p tcp -m tcp --dport 80 -j DROP&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br&gt;In the above example we are limiting outgoing connections to port 80. This is useful when we can't completely block outgoing connections but we do not want it to become channel from where people start browsing net or downloading. The limit module can also be used in rate limiting incoming traffic for performance reasons.&lt;/p&gt;&lt;p&gt;Disabling a ping flood is most easily accomplished by disabling the ICMP functionality of the targeted router, computer or other device. A network administrator can access the administrative interface of the device and disable its ability to send and receive any requests using the ICMP, effectively eliminating both the processing of the request and the Echo Reply. The consequence of this is that all network activities that involve ICMP are disabled, making the device unresponsive to ping requests, traceroute requests, and other network activities.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="DDoS Attacks and Countermeasures in Cyberspace" url="https://www.researchgate.net/publication/279176025_DDoS_Attacks_and_Countermeasures_in_Cyberspace"/>
            <reference name="DDoS Quick Guide" url="https://www.us-cert.gov/sites/default/files/publications/DDoS%20Quick%20Guide.pdf"/>
            <reference name="ENISA - Threat Landscape and Good Practice Guide for Internet Infrastructure" url="https://www.enisa.europa.eu/publications/iitl/at_download/fullReport"/>
            <reference name="Ping (ICMP) Flood DDoS Attack" url="https://www.cloudflare.com/learning/ddos/ping-icmp-flood-ddos-attack/"/>
            <reference name="RFC 4732 - Internet Denial-of-Service Considerations" url="https://tools.ietf.org/html/rfc4732"/>
            <reference name="Rate limiting using iptables" url="https://www.sbarjatiya.com/notes_wiki/index.php/Rate_limiting_using_iptables"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Perform Layer 3 DDoS attack PoC attacks in a security-laboratory environment and monitor the performance degradation in terms of CPU/Memory/Disk Space to verify if the implemented availability protection is effective. One useful tool to execute this kind of test is hping. Hping is a command-line oriented TCP/IP packet assembler/analyzer. The interface is inspired to the ping(8) unix command, but hping isn't only able to send ICMP echo requests. It supports TCP, UDP, ICMP and RAW-IP protocols, has a traceroute mode, the ability to send files between a covered channel, and many other features.&lt;/p&gt;&lt;p&gt;For example, you can execute a Smurf attack (denial-of-service attack that floods a target system via spoofed broadcast ping messages) using the following hping3 command:&lt;/p&gt;&lt;p&gt;hping3 -1 - flood -a VICTIM_IP BROADCAST_ADDRESS&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:24.426">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="ASVS-18.8" name="Reject requests containing unexpected or missing content type headers" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="JamesRabe" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Reject requests containing unexpected or missing content type headers with HTTP response status
                        &amp;quot;406 Unacceptable&amp;quot; or &amp;quot;415 Unsupported Media Type&amp;quot;.
                        &lt;/div&gt;
                    </desc>
          <implementations/>
          <references>
            <reference name="OSA SI-10 Information Accuracy, Completeness, Validity, And Authenticity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/48-08_02_SI-10"/>
            <reference name="OWASP Validate request content-type" url="https://www.owasp.org/index.php/REST_Security_Cheat_Sheet#Validate_request_content_types"/>
            <reference name="Spring docs: CSRF" url="https://docs.spring.io/spring-security/site/docs/current/reference/html/csrf.html"/>
          </references>
          <standards>
            <standard ref="13.1.5" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="13.1.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="SI-10" supportedStandardRef="NIST 800-53"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that HTTP requests with non-valid Content-type are rejected.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:25.106">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CSD-SESS-REAUTH" name="Require additional authentication for sensitive operations / high value transactions" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="JamesRabe" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Having gained access to an account, for example through session hijacking or cross-site scripting, an attack may compromise data and functionality accessible to the victim. This may include elevating privileges or accessing sensitive data and functionality, such as changing passwords, creating accounts, or transferring funds.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;These critical functions and sensitive data should be further protected from attack using a risk-based authentication model requiring re-authentication via multi-factor authentication, or use of a token to sign transactions or operations.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Implement re-authentication on key functions (such as requiring the old password before setting a new one).&lt;/li&gt;&lt;li&gt;Use secondary authentication such as a transaction PIN to allow financial transfers.&lt;/li&gt;&lt;li&gt;Critical administrative functionality should require multi-factor authentication (such as a hard or soft token).&lt;/li&gt;&lt;li&gt;Consider use of signing technologies or tokens that enable the server-side to verify the authenticity of a request and mitigate Man in the Middle (MiTM) or Man in the Browser (MiTB) attacks.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA IA-01 Identification And Authentication Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/181-08_02_IA-01"/>
          </references>
          <standards>
            <standard ref="3.7.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="3.7.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="3.7.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="4.3.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="4.3.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="IA-1" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="IA-1" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="IA-1" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="IA-1" supportedStandardRef="NIST 800-53"/>
            <standard ref="IA-10" supportedStandardRef="NIST 800-53"/>
            <standard ref="ID.GV-1" supportedStandardRef="nist-csf"/>
            <standard ref="ID.GV-3" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-1" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-6" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-7" supportedStandardRef="nist-csf"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Identify critical functionalities of the application.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Check the risk appetite for those functionalities.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Validate that re-authentication is required for those functions if deemed
                            necessary.&lt;/li&gt;
                            &lt;/ol&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:25.106">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="OTG-BUSLOGIC-006" name="Restrict actions of users that follow unusual patterns" issueId="" issueLink="" platform="" cost="0" risk="28" state="Recommended" owner="JamesRabe" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Restrict actions that users can do outside of the approved/required business process flow.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;This is important because without this safeguard in place attackers may be able to bypass or circumvent work-flows and checks allowing them to prematurely enter or skip required sections of the application potentially allowing actions/transactions to be completed without successfully completing the entire business process, leaving the system with incomplete back-end tracking information.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA SI-02 Flaw Remediation" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/40-08_02_SI-02"/>
            <reference name="OSA SI-06 Security Functionality Verification" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/44-08_02_SI-06"/>
            <reference name="OWASP Juice Shop: Broken Access Control" url="https://pwning.owasp-juice.shop/part2/broken-access-control.html"/>
            <reference name="OWASP Juice Shop: Security Misconfiguration" url="https://pwning.owasp-juice.shop/part2/security-misconfiguration.html"/>
            <reference name="OWASP Testing for business logic" url="https://www.owasp.org/index.php/Testing_for_business_logic"/>
            <reference name="OWASP testing for the circumvention of work flows" url="https://www.owasp.org/index.php/Testing_for_the_Circumvention_of_Work_Flows_(OTG-BUSLOGIC-006)"/>
          </references>
          <standards>
            <standard ref="11.1.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="11.1.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="11.1.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="4.3.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="4.3.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="A01:2021-Broken Access Control" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A09:2021-Security Logging and Monitoring Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2017-Insufficient Logging-Monitoring" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="A5:2017-Broken Access Control" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="ID.RA-1" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-12" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-2" supportedStandardRef="nist-csf"/>
            <standard ref="SI-17" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-2" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-6" supportedStandardRef="NIST 800-53"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Check the application only processes business logic flows in sequential step order and in realistic human time.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:25.570">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="use-analysis-static-code" name="Scan the code with static code analysis tools" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="JamesRabe" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Use periodically a static code analysis tool to analyze the code and detect potentially malicious code, such as time functions, unsafe file operations and networks connections. With the scanning of static code, we ensure the integrity of the application. 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="10.1.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="10.2.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="10.2.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="10.2.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="10.2.6" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Verify that a code analysis tool is in use and it is configured to detect potentially malicious code, such as time functions, unsafe file operations and network connections. 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:24.225">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CWE-662" name="Use a synchronised time source" issueId="" issueLink="" platform="" cost="0" risk="24" state="Recommended" owner="JamesRabe" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;In order to correlate logs and data from different internal and external systems, and to preserve forensic quality of the logs, it is important a unified and trusted synchronized time source is used throughout the environment.&amp;nbsp;&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Servers should synchronize to an internal or external NTP server&lt;/li&gt;&lt;li&gt;The centralized source should in turn use (or be) a trusted central time source.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;This control is critical in identifying application events (including attacks) through logging, and in conducting post-event analysis, and in particular to track the entire user (or attacker) journey through the system should it be compromised.&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;It is good practice to use the concept of Indicators of Compromise (IoC) which should be leveraged to detect possible situations in which the system has been compromised and give an appropriate response.&amp;nbsp; IoCs are often tracked through logs, and accurate time is essential.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA AU-08 Time Stamps" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/177-08_02_AU-08"/>
            <reference name="OSA AU-09 Protection Of Audit Information" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/178-08_02_AU-09"/>
            <reference name="OSA AU-11 Audit Record Retention" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/180-08_02_AU-11"/>
            <reference name="OWASP Juice Shop: Security Misconfiguration" url="https://pwning.owasp-juice.shop/part2/security-misconfiguration.html"/>
            <reference name="[C3] OWASP Proactive Controls" url="https://www.owasp.org/index.php/OWASP_Proactive_Controls"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="12.4.4" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="7.3.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="7.3.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="A09:2021-Security Logging and Monitoring Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2017-Insufficient Logging-Monitoring" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="AU-11" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AU-11" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AU-11" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AU-11" supportedStandardRef="NIST 800-53"/>
            <standard ref="AU-8" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AU-8" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AU-8" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AU-8" supportedStandardRef="NIST 800-53"/>
            <standard ref="AU-9" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AU-9" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AU-9" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AU-9" supportedStandardRef="NIST 800-53"/>
            <standard ref="PR.PT-1" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Check that mechanisms are installed to keep the host's clock synchronized (i.e.
                            ntpd in Linux based systems).&lt;/li&gt;
                            &lt;li&gt;Inspect the logs created by the app and check they have the correct timestamp.&lt;/li&gt;
                            &lt;/ol&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:24.691">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="ASSIGN-WHITE" name="Use a white-list approach to assign values to variables" issueId="" issueLink="" platform="" cost="2" risk="46" state="Recommended" owner="JamesRabe" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>
                        &lt;p&gt;All data received from the client-side should be considered tainted and a potential risk, regardless of the source or transport method.&amp;nbsp;Using mass-assignment or auto-binding when accepting values from an untrusted source and mapping them to trusted server side values increases the risk of tainted data being used unsafely.&lt;/p&gt;
                        &lt;p&gt;&lt;/p&gt;
                        &lt;ul&gt;
                         &lt;li&gt;Bind individual values to specific fields, instead of binding whole objects.&lt;/li&gt;
                         &lt;li&gt;Use available features of the language or framework that allow specification of white lists of attributes or fields that are allowed to be modified.&amp;nbsp;&lt;/li&gt;
                         &lt;ul&gt;
                          &lt;li&gt;For example, applications written with Ruby on Rails can use the attr_accessible (white list) or attr_protected (black list) macros in each class that may be used in mass assignment.&lt;/li&gt;
                         &lt;/ul&gt;
                        &lt;/ul&gt;
                    </desc>
          <implementations>
            <implementation platform="Spring.java">
              <desc>ICAgIEBSZXF1ZXN0TWFwcGluZyh2YWx1ZSA9ICIvdmVudWUve2NpdHl9L3twbGFjZX0iLCBtZXRob2QgPSAiR0VUIikKICAgIHB1YmxpYyBTdHJpbmcgZ2V0VmVudWVEZXRhaWxzKFZlbnVlIHZlbnVlLCBNb2RlbCBtb2RlbCkgewogICAgICAgIC8vIHZlbnVlIG9iamVjdCB3aWxsIGJlIGF1dG9tYXRpY2FsbHkgcG9wdWxhdGVkIHdpdGggY2l0eSBhbmQgcGxhY2UKICAgIH0=</desc>
            </implementation>
          </implementations>
          <references>
            <reference name="OSA SI-10 Information Accuracy, Completeness, Validity, And Authenticity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/48-08_02_SI-10"/>
            <reference name="OWASP Juice Shop: Injection" url="https://pwning.owasp-juice.shop/part2/injection.html"/>
            <reference name="OWASP Juice Shop: Insecure Deserialization" url="https://pwning.owasp-juice.shop/part2/insecure-deserialization.html"/>
            <reference name="OWASP Juice Shop: XSS" url="https://pwning.owasp-juice.shop/part2/xss.html"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="10" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="12" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="12.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="12.6.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="12.6.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="12.6.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="14" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="18" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="19" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="2" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="3" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5.1.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.1.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.1.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.7" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.7" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.7" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.3.9" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.3.9" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.3.9" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="7" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="A03:2021-Injection" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A08:2021-Software and Data Integrity Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2021-Server-Side Request Forgery (SSRF)" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A1:2017-Injection" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="A7:2017-Cross-Site Scripting (XSS)" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="A8:2017-Insecure Deserialization" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="API6:2019-Mass Assignment" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="CA-8" supportedStandardRef="NIST 800-53"/>
            <standard ref="ID.RA-1" supportedStandardRef="nist-csf"/>
            <standard ref="SI-10" supportedStandardRef="NIST 800-53"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Identify the framework the component is using.&lt;/li&gt;&lt;li&gt;Check if this particular framework provides automatic binding of variables.&lt;/li&gt;&lt;li&gt;Verify if it is disabled or restricted.&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:25.105">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AV-DoS-BH" name="Use blackholing to mitigate L4 DDoS attacks" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="JamesRabe" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;DDoS attack blocking, commonly referred to as blackholing, is a method typically used by ISPs to stop a DDoS attack on one of its customers. This approach to block DDoS attacks makes the site in question completely inaccessible to all traffic, both malicious attack traffic and legitimate user traffic.&amp;nbsp;&lt;/p&gt;&lt;p&gt;Blackholing is typically deployed by the ISP to protect other customers on its network from the adverse effects of DDoS attacks such as slow network performance and disrupted service. Common attacks are SYN flood and Smurf attack. For Smurf attack a simple solution is to disable IP broadcasting addresses at each network router and firewall.&amp;nbsp;&lt;/p&gt;&lt;p&gt;Older routers are likely to enable broadcasting by default, while newer routers will likely already have it disabled.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation&lt;/strong&gt;:&lt;/p&gt;&lt;p&gt;Disable broadcasting by default on old routers.&lt;/p&gt;&lt;p&gt;To implement RTBH (Remote Triggered Black Hole) Network Operator sets up a null route for the 192.0.2.1 address on all the backbone routers which participate in BGP:&lt;/p&gt;&lt;p&gt;ip route 192.0.2.1 255.255.255.255 null 0 254&lt;/p&gt;&lt;p&gt;192.0.2.1 is part of 192.0.2.0/24, the TEST-NET, one of the reserved IPv4 address blocks.&lt;/p&gt;&lt;p&gt;Create a route-map to catch routes which need to be blackholed&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Static routes can be tagged in Cisco IOS - we will tag routes to be blackholed with the value of 66&lt;/li&gt;&lt;li&gt;Set origin to be iBGP&lt;/li&gt;&lt;li&gt;Set local-preference to be 150&lt;ul&gt;&lt;li&gt;higher than any other local-preference set in the backbone&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Set community to be no-export and internal marker community (ASN:666)&amp;nbsp;&lt;ul&gt;&lt;li&gt;Don't want prefix to leak outside the AS&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Set next-hop to 192.0.2.1 (IPv4) or 100::1 (IPv6)&amp;nbsp;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Then introduce the route-map into the BGP configuration.&lt;/p&gt;&lt;p&gt;To implement the trigger, simply null route whatever address or address block needs to be blackholed:&lt;/p&gt;&lt;p&gt;ip route 50.62.124.1 255.255.255.255 null0 tag 66&amp;nbsp;&lt;/p&gt;&lt;p&gt;And this ensures that (for example) 50.62.124.1/32 is announced to the entire backbone with next-hop 192.0.2.1 set.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="DDoS Attacks and Countermeasures in Cyberspace" url="https://www.researchgate.net/publication/279176025_DDoS_Attacks_and_Countermeasures_in_Cyberspace"/>
            <reference name="DDoS Quick Guide" url="https://www.us-cert.gov/sites/default/files/publications/DDoS%20Quick%20Guide.pdf"/>
            <reference name="ENISA - Threat Landscape and Good Practice Guide for Internet Infrastructure" url="https://www.enisa.europa.eu/publications/iitl/at_download/fullReport"/>
            <reference name="RFC 4732 - Internet Denial-of-Service Considerations" url="https://tools.ietf.org/html/rfc4732"/>
            <reference name="RFC 4987 - TCP SYN Flooding Attacks and Common Mitigations" url="https://tools.ietf.org/html/rfc4987"/>
            <reference name="RFC 5635 - Remote Triggered Black Hole Filtering               with Unicast Reverse Path Forwarding (uRPF)" url="https://tools.ietf.org/html/rfc5635"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Perform Layer 3 DDoS attack PoC attacks in a security-laboratory environment and monitor the performance degradation in terms of CPU/Memory/Disk Space to verify if the implemented availability protection is effective. One useful tool to execute this kind of test is hping. Hping is a command-line oriented TCP/IP packet assembler/analyzer. The interface is inspired to the ping(8) unix command, but hping isn't only able to send ICMP echo requests. It supports TCP, UDP, ICMP and RAW-IP protocols, has a traceroute mode, the ability to send files between a covered channel, and many other features.&lt;/p&gt;&lt;p&gt;For example, you can simulate a TCP SYN DDoS Attack using the following hping3 command:&lt;/p&gt;&lt;p&gt;hping3 VICTIM_IP -flood -rand-source -destport 80 -syn -d 120 -w 64&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:24.426">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="secure-communication-ra-and-csp" name="Use secure communication between CSP and RA" issueId="" issueLink="" platform="" cost="0" risk="27" state="Recommended" owner="JamesRabe" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;In situations where the verifier and CSP are separate entities, communications between RA (Registration Authority) and CSP (Credential Service Provider), should be authenticated with a mutually-authenticated secure channel, such as a client-authenticated TLS connection, using approved cryptographic algorithms.&lt;/p&gt;
&lt;p&gt;NIST's digital identity model involves some entities:&lt;/p&gt;
&lt;p&gt;- CSP (Credential Service Provider): A credential service provider is a trusted entity that issues security tokens or electronic credentials to subscribers. A CSP forms part of an authentication system, most typically identified as a separate entity in a Federated authentication system. A CSP may be an independent third party, or may issue credentials for its own use. Credential Service Provider is typically also the Identity Provider (IDP). An example of a CSP would be an online site whose primary purpose may be, for example, internet banking - but whose users may be subsequently authenticated to other sites, applications or services without further action on their part.&lt;/p&gt;
&lt;p&gt;- Registration Authority (RA): A trusted entity that establishes and vouches for the identity of a subscriber to a CSP. The RA may be an integral part of a CSP, or it may be independent of a CSP, but it has a relationship to the CSP.&lt;/p&gt;
&lt;p&gt;- Verifier: This refers to an entity that verifies the claimant's identity by verifying the claimant's possession and control of one or two authenticators, using an authentication protocol.&lt;/p&gt;
&lt;p&gt;- RP (Relying party): This refers to an entity that relies on the subscriber's authenticator(s) and credentials or a verifier's assertion of a claimant's identity, typically to process a transaction or grant access to information or a system.&lt;/p&gt;
&lt;p&gt;- Applicant: This refers to a subject undergoing the processes of enrollment and identity proofing.&lt;/p&gt;
&lt;p&gt;- Claimant: This refers to a subject whose identity is to be verified using one or more authentication protocols.&lt;/p&gt;
&lt;p&gt;- Subscriber: This refers to a party who has received a credential or an authenticator from a CSP.&amp;nbsp;&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="NIST 800-63-1" url="https://csrc.nist.rip/groups/SMA/forum/documents/feb2012_nist-sp-800-63-1_newton-perlner.pdf"/>
            <reference name="NIST 800-63C" url="https://pages.nist.gov/800-63-3/sp800-63c.html"/>
          </references>
          <standards>
            <standard ref="2.2.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.6" supportedStandardRef="nist-800-63"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Verify the CSP and RA communicate securely with a secure channel, for example with TLS.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:25.571">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="same-encoding-parsers" name="Use the same encodings and parsers in all application components" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="JamesRabe" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Errors may occur when converting between differently coded character data.&amp;nbsp; There are two general types of encoding errors. If the byte sequence is not valid for the specified charset then the input is considered malformed. If the byte sequence cannot be mapped to an equivalent character sequence then an unmappable character has been encountered.
&lt;/div&gt;
&lt;div&gt;
  Special care should be taken when decoding untrusted byte data to ensure that malformed input or unmappable character errors do not result in defects and vulnerabilities.&amp;nbsp; Encoding errors can also occur, for example, encoding a cryptographic key containing malformed input for transmission will result in an error. Encoding and decoding errors typically result in data corruption.&amp;nbsp;
&lt;/div&gt;
&lt;div&gt;
 &lt;br&gt;
&lt;/div&gt;
&lt;div&gt;
 &lt;b&gt;Remediation&lt;/b&gt;
&lt;/div&gt;Use the same encodings and parsers in all application components to avoid parsing attacks that exploit different URI or file parsing behavior that could be used in SSRF and RFI attacks.</desc>
          <implementations/>
          <references>
            <reference name="STR51-J. Use the charset encoder and decoder classes when more control over the encoding process is required" url="https://wiki.sei.cmu.edu/confluence/display/java/STR51-J.+Use+the+charset+encoder+and+decoder+classes+when+more+control+over+the+encoding+process+is+required"/>
          </references>
          <standards>
            <standard ref="13.1.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="13.1.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="13.1.1" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that all application components are using the same encoding style.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:26.011">
              <output/>
            </source>
            <references>
              <reference name="OWASP Testing Guide Appendix D: Encoded Injection" url="https://www.owasp.org/index.php/OWASP_Testing_Guide_Appendix_D:_Encoded_Injection"/>
            </references>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="DATA-VAL" name="Validate all data received" issueId="" issueLink="" platform="" cost="1" risk="56" state="Recommended" owner="JamesRabe" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;All data received should be considered tainted and a potential risk, regardless of the source or transport method. For example, while hidden form fields, cookies or other headers may be obfuscated from a user, along with parameters passed in ViewStates or other encapsulated forms. These can be modified by the user on the client-side in memory, or in transit on the network. Similarly, data passed from binary or compiled components can be modified in situ or in transit. &lt;i&gt;&lt;/i&gt; &lt;i&gt;Furthermore, encryption only secures the data in transit between the two ends of the encrypted tunnel (one of which is typically controlled by the client); data passing through the link may still be malicious.&lt;/i&gt; &lt;/p&gt; As such, all data from the client side must be subjected to strict validation, sanitization, and encoding against expected syntactic and semantic criteria. 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Define a specification of the data that is expected at each input; both the syntax (e.g. alphanumeric only) and semantics (e.g. a word of between 1 and 25 characters, or a specific list). As an example of business rule logic, &amp;quot;boat&amp;quot; may be syntactically valid because it only contains alphanumeric characters, but it is not valid if the input is only expected to contain colors such as &amp;quot;red&amp;quot; or &amp;quot;blue.&amp;quot;&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Implement a 'known good' or white-list approach, where only inputs that meet the strict criteria for each input are accepted, and reject, transform, or encapsulate any non-compliant data.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;While useful for identifying malicious content, do not rely on looking for specific malformed or attack payloads (blacklists). It is almost impossible to maintain a comprehensive and accurate blacklist due to the complexity and evolving nature of attacks, opportunities to obfuscate payloads, and changes to the code's execution environment. As noted, blacklists can be useful for detecting and logging potential attacks, or determining which inputs are so malformed that they should be rejected outright.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Validate all data received from the client, including values such as &lt;span class="caps"&gt;HTTP&lt;/span&gt; headers and cookie values if these are used as input on the server side, X- headers, and other platform specific data objects passed between the client and server.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA SC-13 Use Of Cryptography" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/73-08_02_SC-13"/>
            <reference name="OSA SI-01 System And Information Integrity Policy And Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/39-08_02_SI-01"/>
            <reference name="OSA SI-03 Malicious Code Protection" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/41-08_02_SI-03"/>
            <reference name="OSA SI-10 Information Accuracy, Completeness, Validity, And Authenticity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/48-08_02_SI-10"/>
            <reference name="OSA SI-11 Error Handling" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/49-08_02_SI-11"/>
            <reference name="OWASP Juice Shop: Injection" url="https://pwning.owasp-juice.shop/part2/injection.html"/>
            <reference name="OWASP Juice Shop: Insecure Deserialization" url="https://pwning.owasp-juice.shop/part2/insecure-deserialization.html"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="1.5.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="1.5.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="11.1.5" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="11.1.5" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="11.1.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="12" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="12.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="12.3.5" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="12.3.5" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="12.3.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="12.6.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="14" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="16" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="18" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="19" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="2.4.10.10" supportedStandardRef="iotsf-class-0"/>
            <standard ref="2.4.10.10" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.10.10" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.10.12" supportedStandardRef="iotsf-class-0"/>
            <standard ref="2.4.10.12" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.10.12" supportedStandardRef="iotsf-class-2"/>
            <standard ref="2.4.11.9" supportedStandardRef="iotsf-class-0"/>
            <standard ref="2.4.11.9" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.11.9" supportedStandardRef="iotsf-class-2"/>
            <standard ref="24" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5.1.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.1.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.1.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.1.4" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.1.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.1.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.3" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.7" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.7" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.7" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.3.10" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.3.10" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.3.10" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.3.8" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.3.8" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.3.8" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="6" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="8" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="A03:2021-Injection" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A08:2021-Software and Data Integrity Failures" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A10:2021-Server-Side Request Forgery (SSRF)" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A1:2017-Injection" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="A8:2017-Insecure Deserialization" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="API8:2019-Injection" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="CA-8" supportedStandardRef="NIST 800-53"/>
            <standard ref="DE.CM-4" supportedStandardRef="nist-csf"/>
            <standard ref="DE.DP-3" supportedStandardRef="nist-csf"/>
            <standard ref="ID.GV-1" supportedStandardRef="nist-csf"/>
            <standard ref="ID.GV-3" supportedStandardRef="nist-csf"/>
            <standard ref="ID.RA-1" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-5" supportedStandardRef="nist-csf"/>
            <standard ref="SC-13" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="SC-13" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="SC-13" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="SC-13" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-1" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-10" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-11" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-15" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-3" supportedStandardRef="NIST 800-53"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Identify data input points for the application, for example:&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Forms with user input (including hidden fields)&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;&lt;span class="caps"&gt;API&lt;/span&gt; calls&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;&lt;span class="caps"&gt;HTTP&lt;/span&gt; Headers&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;Application states such as &lt;span class="caps"&gt;ASP&lt;/span&gt; Viewstates&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;Serialized Java objects&lt;/li&gt; 
 &lt;li&gt;Any data structure received from the client-side&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;For every input, define accepted input (both syntactic and semantic criteria)&lt;/li&gt; 
 &lt;li&gt;Where possible, define a white-list of accepted input or characters&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;For each of the inputs, ensure that the data is validated against the defined whitelists (for example with a regular expression) before being processed.&amp;nbsp;&lt;/li&gt; 
&lt;/ul&gt;To test data validation:&amp;nbsp; 
&lt;p&gt;&lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Review the acceptable input criteria, and build test cases that deviate from it (invalid characters, lengths, ranges etc.).&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;Pass invalid input to the application and review error trapping and handling.&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;Where unexpected exceptions occur, the application may be vulnerable to attack.&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;/p&gt; A number of tools can be used to aid in testing: 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Directly from your browser with the Developer Tools.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Using a browser extension which allows you to modify the request and responses on the fly (i.e. Tamper Data).&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Using a proxy which allows you to modify the request and response on the fly (i.e. &lt;span class="caps"&gt;OWASP&lt;/span&gt; &lt;span class="caps"&gt;ZAP&lt;/span&gt;, Burp, Fiddler, etc.).&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:26.010">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CWE-147" name="Validate input parameters to prevent HTTP Parameter Pollution" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="JamesRabe" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>All data received from external sources should be considered tainted and a potential risk, regardless of the source or transport method. HTTP Parameter Pollution attacks result when parameters are added or inserted into requests, and are inappropriately or unsafely handled by the server. For example, injection of parameters into strings or cookies sent to the application can result in the variables being interpreted out of sequence, exploiting flaws in the business logic and flow.
&lt;div&gt;
 &lt;div&gt;
  &lt;ul&gt;
  &lt;/ul&gt;
 &lt;/div&gt;
 &lt;div&gt;
  &lt;p&gt;For example, there was a bug in the Blogger platform which illustrates this vulnerability. The bug allowed malicious users to take ownership of the victim's blog by using the following HTTP request:&lt;/p&gt;
  &lt;blockquote&gt;
   &lt;p&gt;&lt;code&gt;POST /add-authors.do HTTP/1.1&lt;/code&gt;&lt;/p&gt;
  &lt;/blockquote&gt;
  &lt;blockquote&gt;
   &lt;p&gt;&lt;code&gt;security_token=attackertoken&amp;amp;&lt;b&gt;blogID=attackerblogidvalue&lt;/b&gt;&amp;amp;&lt;b&gt;blogID=victimblogidvalue&lt;/b&gt;&amp;amp;authorsList=goldshlager19test%40gmail.com(attacker email)&amp;amp;ok=Invite&lt;/code&gt;&lt;/p&gt;
  &lt;/blockquote&gt;
  &lt;p&gt;The flaw resided in the authentication mechanism used by the web application, as the security check was performed on the first&amp;nbsp;&lt;code&gt;blogID&lt;/code&gt;&amp;nbsp;parameter, whereas the actual operation used the second occurrence.&lt;/p&gt;
 &lt;/div&gt;
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA CM-02 Baseline Configuration" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/153-08_02_CM-02"/>
            <reference name="OSA CM-06 Configuration Settings" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/157-08_02_CM-06"/>
            <reference name="OSA SC-08 Transmission Integrity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/68-08_02_SC-08"/>
            <reference name="OSA SI-10 Information Accuracy, Completeness, Validity, And Authenticity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/48-08_02_SI-10"/>
          </references>
          <standards>
            <standard ref="12.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="5.1.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.1.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.1.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="CA-8" supportedStandardRef="NIST 800-53"/>
            <standard ref="CM-2" supportedStandardRef="NIST 800-53"/>
            <standard ref="CM-6" supportedStandardRef="NIST 800-53"/>
            <standard ref="DE.AE-1" supportedStandardRef="nist-csf"/>
            <standard ref="ID.RA-1" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-2" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-5" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-7" supportedStandardRef="nist-csf"/>
            <standard ref="PR.IP-1" supportedStandardRef="nist-csf"/>
            <standard ref="SC-8" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="SC-8" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="SC-8" supportedStandardRef="NIST 800-53"/>
            <standard ref="SI-10" supportedStandardRef="NIST 800-53"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Identify parameters within the application used for authentication decisions, or critical business logic.&lt;/li&gt;&lt;li&gt;Send specially forged requests to the application in which those parameters are duplicated, or passed through other methods (e.g. POST parameters in the URL as GET fields, cookies as form fields etc.)&lt;ul&gt;&lt;li&gt;Review the application logic to ensure:&lt;/li&gt;&lt;li&gt;The same parameter is for all the decisions.&lt;/li&gt;&lt;li&gt;Parameters received over unexpected or non compliant methods result in a security exception.&lt;/li&gt;&lt;li&gt;Duplicate parameters are identified and result in a security exception.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;The application should fail-safe; i.e. unexpected or suspicious behavior should result in termination of the user's session and a security event being logged.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;A number of tools can be used to aid in testing:&amp;nbsp; &amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Directly inside your browser with the Developer Tools&lt;/li&gt;&lt;li&gt;Using a browser extension which allows you to modify the request and responses on the fly (i.e. Tamper Data)&lt;/li&gt;&lt;li&gt;Using a proxy which allows you to modify the request and response on the fly (i.e. OWASP ZAP, Burp, Fiddler, etc.)&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:25.107">
              <output/>
            </source>
            <references>
              <reference name="OWASP - Testing for HTTP Parameter Pollution" url="https://www.owasp.org/index.php/Testing_for_HTTP_Parameter_pollution_(OTG-INPVAL-004)"/>
            </references>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CWE-601" name="Whitelist which URLs the application may redirect to" issueId="" issueLink="" platform="" cost="0" risk="39" state="Recommended" owner="JamesRabe" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;The application should maintain a list of URLs to which it may redirect users. This whitelisting can also be achieved by applying regular expressions. The application should only allow redirects to trusted URLS.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA AC-04 Information Flow Enforcement" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/26-08_02_AC-04"/>
          </references>
          <standards>
            <standard ref="12.6.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="12.6.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="12.6.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.1.5" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.1.5" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.1.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.2.6" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.3.9" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="5.3.9" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="5.3.9" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="A10:2021-Server-Side Request Forgery (SSRF)" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="AC-4" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AC-4" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AC-4" supportedStandardRef="NIST 800-53"/>
            <standard ref="DE.AE-1" supportedStandardRef="nist-csf"/>
            <standard ref="ID.AM-3" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-5" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-5" supportedStandardRef="nist-csf"/>
            <standard ref="PR.PT-4" supportedStandardRef="nist-csf"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Identify the points of the application in which a redirection takes place. Redirections are usually indicated by the use of the "Location" HTTP header along with the "3xx" code.&lt;/li&gt;&lt;li&gt;Verify if the value inside the Location header is coming from user input (URL string, Cookies, HTTP headers, forms, etc.).&lt;/li&gt;&lt;li&gt;Modify the input value which will be part of the Location header to redirect to domains which should not be permitted.&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:25.107">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="availability" name="Availability" desc="" library="CS-Default">
          <threats>
            <threat ref="CAPEC-607" name="Attackers bring the service down by exhausting it (D)DoS" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="CS-Default" editable="true">
              <desc>An attacker can bring a service down by exhausting either the network or the service itself.
    &lt;br&gt;
    &lt;br&gt;See references for more information.</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references>
                <reference name="DDoS Quick Guide" url="https://www.us-cert.gov/sites/default/files/publications/DDoS%20Quick%20Guide.pdf"/>
              </references>
              <weaknesses>
                <weakness ref="AV-DOS-APP">
                  <countermeasures>
                    <countermeasure ref="AV-DoS-L7" mitigation="25"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AV-DoS-L3">
                  <countermeasures>
                    <countermeasure ref="AV-DoS-ICMP-Flooding" mitigation="25"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AV-DoS-L4">
                  <countermeasures>
                    <countermeasure ref="AV-DoS-BH" mitigation="25"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AV-DoS-TLS">
                  <countermeasures>
                    <countermeasure ref="AV-DoS-TLS" mitigation="25"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AV-DoS-BH" mitigation="25"/>
                <countermeasure ref="AV-DoS-ICMP-Flooding" mitigation="25"/>
                <countermeasure ref="AV-DoS-L7" mitigation="25"/>
                <countermeasure ref="AV-DoS-TLS" mitigation="25"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="deployment" name="Deployment" desc="" library="CS-Default">
          <threats>
            <threat ref="7k-CWE-Environment" name="Attackers gain unauthorised access to the application through an environment flaw" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="CS-Default" editable="true">
              <desc>&lt;p&gt;This section includes everything that is outside of the source code but is still critical to the security of the product that is being created. Because the issues covered by this section are not directly related to source code, we separated it from the rest of the realms.&amp;nbsp;&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-2">
                  <countermeasures>
                    <countermeasure ref="ENV-USE" mitigation="50"/>
                    <countermeasure ref="SEC-DEPLOY" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="ENV-USE" mitigation="50"/>
                <countermeasure ref="SEC-DEPLOY" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="GENERAL" name="General" desc="" library="CS-Default">
          <threats>
            <threat ref="CAPEC-1" name="Accessing Functionality Not Properly Constrained by ACLs" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="CS-Default" editable="true">
              <desc>&lt;p&gt;In applications, particularly web applications, access to functionality is mitigated by the authorization framework, whose job it is to map ACLs to elements of the application's functionality; particularly URL's for web-apps. In cases in which the administrator failed to specify an ACL for a particular element, an attacker may be able to access it with impunity. An attacker with the ability to access functionality not properly constrained by ACLs can obtain sensitive information and possibly compromise the entire application. Such an attacker could potentially access resources that should only be available to users of a higher privilege level, or access management sections of the application, or can run queries for data that he is otherwise not supposed to.&amp;nbsp;&lt;br&gt;&amp;nbsp;&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-276">
                  <countermeasures>
                    <countermeasure ref="deny-default-enf" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="deny-default-enf" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="CAPEC-214" name="An attacker sends random, malformed, or otherwise unexpected messages to a target application and observes any stack traces produced by error messages" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="CS-Default" editable="true">
              <desc>An attacker sends random, malformed, or otherwise unexpected messages to a target application and observes any stack traces produced by error messages. Fuzzing techniques involve sending random or malformed messages to a target and monitoring the target's response. The attacker does not initially know how a target will respond to individual messages but by attempting a large number of message variants they may find a variant that trigger's desired behavior. In this attack, the purpose of the fuzzing is to cause the targeted application to return an error including a stack trace, although fuzzing a target can also sometimes cause the target to enter an unstable state, causing a crash. The stack trace enumerates the chain of methods that led up to the point where the error was encountered. This can not only reveal the names of the methods (some of which may have known weaknesses) but possibly also the location of class files and libraries as well as parameter values. In some cases, the stack trace might even disclose sensitive configuration or user information.
&lt;br /&gt;</desc>
              <riskRating confidentiality="25" integrity="25" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-460">
                  <countermeasures>
                    <countermeasure ref="error-handling-centralized" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="error-handling-centralized" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="sec-vuln-dev-process" name="Application contains security vulnerabilities not identified during the development process" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="CS-Default" editable="true">
              <desc>Application security should be embedded into a project's development environment, allowing developers to monitor their code regularly in order to avoid security vulnerabilities when the application is deployed in the production environment.</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references>
                <reference name="NIST Security Considerations in the System Development Life Cycle" url="https://csrc.nist.gov/publications/detail/sp/800-64/rev-2/archive/2008-10-16"/>
                <reference name="Risk-Based and Functional Security Testing" url="https://www.us-cert.gov/bsi/articles/best-practices/security-testing/risk-based-and-functional-security-testing"/>
              </references>
              <weaknesses>
                <weakness ref="lack-automated-vuln-identification">
                  <countermeasures>
                    <countermeasure ref="use-analysis-static-code" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="use-analysis-static-code" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="hostile-subdomain-takeover" name="Attackers claim subdomains with the help of external services" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="CS-Default" editable="true">
              <desc>&lt;div&gt;
  This attack vector utilizes DNS entries pointing to Service Providers where the pointed sub-domain is currently not in use. Depending on the DNS-entry configuration and which Service Provider it points to, some of these services will allow unverified users to claim these sub-domains as their own.
&lt;/div&gt;
&lt;div&gt;
 &lt;br /&gt;
&lt;/div&gt;
&lt;div&gt;
  In the not so rare case, the attacker can also "inherit" the Domain Owner's Wildcard SSL used inside the Service Provider.
&lt;/div&gt;
&lt;div&gt;
 &lt;br /&gt;
&lt;/div&gt;
&lt;div&gt;
 &lt;div&gt;
  &lt;b&gt;Attack Scenario&lt;/b&gt;
 &lt;/div&gt;
 &lt;div&gt;
  &lt;ol&gt;
   &lt;li&gt;Your company starts using a new service, eg an external Support Ticketing-service.&lt;/li&gt;
   &lt;li&gt;Your company points a sub-domain to the Support Ticketing-service, eg support.your-domain.com&lt;/li&gt;
   &lt;li&gt;Your company stops using this service but does not remove the sub-domain redirection pointing to the ticketing system.&lt;/li&gt;
   &lt;li&gt;Attacker signs up for the Service and claims the domain as theirs. No verification is done by the Service Provider, and the DNS-setup is already correctly setup.&lt;/li&gt;
   &lt;li&gt;Attacker can now build a complete clone of the real site, add a login form, redirect the user, steal credentials (e.g. admin accounts), cookies and/or completely destroy business credibility for your company.&lt;/li&gt;
  &lt;/ol&gt;
 &lt;/div&gt;
&lt;/div&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="100" easeOfExploitation="100"/>
              <references>
                <reference name="Hostile Subdomain Takeover using Heroku/Github/Desk + more" url="https://labs.detectify.com/2014/10/21/hostile-subdomain-takeover-using-herokugithubdesk-more/"/>
              </references>
              <weaknesses>
                <weakness ref="CWE-350">
                  <countermeasures>
                    <countermeasure ref="identify-dns-domains" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="identify-dns-domains" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="SOURCE-LEAK" name="Attackers gain control of the system through a source code leakage" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="CS-Default" editable="true">
              <desc>&lt;p&gt;Attackers gain unauthorized access to a service by reading raw source code returned by the service, and this code contains confidential information such as authentication credentials or other secrets that can be used to access the service.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;Configuration files that can be downloaded from the service could also be leveraged to gain access to sensitive information.&amp;nbsp;&lt;/p&gt;</desc>
              <riskRating confidentiality="50" integrity="50" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-541">
                  <countermeasures>
                    <countermeasure ref="CWE-541" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CWE-541" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="CAPEC-172" name="Attackers subvert the intended workflow of the application in order to perform unauthorised operations" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="CS-Default" editable="true">
              <desc>	&lt;p&gt;If an application enforces an order in workflows, then attackers could attempt to bypass this order so that they can perform operations for which they are not authorized. The technique can also be used to gain access to unauthorized data.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-841">
                  <countermeasures>
                    <countermeasure ref="OTG-BUSLOGIC" mitigation="34"/>
                    <countermeasure ref="OTG-BUSLOGIC-006" mitigation="33"/>
                    <countermeasure ref="implement-monitoring-unusual-activities" mitigation="33"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="OTG-BUSLOGIC" mitigation="34"/>
                <countermeasure ref="OTG-BUSLOGIC-006" mitigation="33"/>
                <countermeasure ref="implement-monitoring-unusual-activities" mitigation="33"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="CAPEC-130" name="Excessive Allocation" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="CS-Default" editable="true">
              <desc>&lt;p&gt;An adversary causes the target to allocate excessive resources to servicing the attackers' request, thereby reducing the resources available for legitimate services and degrading or denying services. Usually, this attack focuses on memory allocation, but any finite resource on the target could be the attacked, including bandwidth, processing cycles, or other resources.&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;This attack does not attempt to force this allocation through a large number of requests (that would be Resource Depletion through Flooding) but instead uses one or a small number of requests that are carefully formatted to force the target to allocate excessive resources to service this request(s). Often this attack takes advantage of a bug in the target to cause the target to allocate resources vastly beyond what would be needed for a normal request.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-770">
                  <countermeasures>
                    <countermeasure ref="implement-monitoring-unusual-activities" mitigation="33"/>
                    <countermeasure ref="network-rate-limit" mitigation="34"/>
                    <countermeasure ref="protection-against-data-mining" mitigation="33"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="implement-monitoring-unusual-activities" mitigation="33"/>
                <countermeasure ref="network-rate-limit" mitigation="34"/>
                <countermeasure ref="protection-against-data-mining" mitigation="33"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="CAPEC-122" name="Privilege Abuse" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="CS-Default" editable="true">
              <desc>&lt;p&gt;An adversary is able to exploit features of the target that should be reserved for privileged users or administrators but are exposed to use by lower or non-privileged accounts. Access to sensitive information and functionality must be controlled to ensure that only authorized users are able to access these resources. If access control mechanisms are absent or misconfigured, a user may be able to access resources that are intended only for higher level users. An adversary may be able to exploit this to utilize a less trusted account to gain information and perform activities reserved for more trusted accounts.&amp;nbsp;&lt;/p&gt; 
&lt;p&gt;This attack differs from privilege escalation and other privilege stealing attacks in that the adversary never actually escalates their privileges but instead is able to use a lesser degree of privilege to access resources that should be (but are not) reserved for higher privilege accounts. Likewise, the adversary does not exploit trust or subvert systems - all control functionality is working as configured but the configuration does not adequately protect sensitive resources at an appropriate level.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-272">
                  <countermeasures>
                    <countermeasure ref="LEAST-PRIV-ENF" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="LEAST-PRIV-ENF" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="LOG-MANAGEMENT" name="Log Management" desc="" library="CS-Default">
          <threats>
            <threat ref="CAPEC-93" name="An attacker injects, manipulates or forges malicious log entries in the log file, allowing her to mislead a log audit, cover traces of attack, or perform other malicious actions" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="CS-Default" editable="true">
              <desc>	&lt;p&gt;This attack targets the log files of the target host. The attacker injects, manipulates or forges malicious log entries in the log file, allowing him to mislead a log audit, cover traces of attack, or perform other malicious actions. The target host is not properly controlling log access. As a result tainted data is resulting in the log files leading to a failure in accountability, non-repudiation and incident forensics capability.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-117">
                  <countermeasures>
                    <countermeasure ref="ASVS-8.8" mitigation="20"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="LOGS-INTEGRITY" mitigation="40"/>
                    <countermeasure ref="RESTRICT-NUMBER-ACCOUNT-TO-LOGS" mitigation="40"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="ASVS-8.8" mitigation="20"/>
                <countermeasure ref="LOGS-INTEGRITY" mitigation="40"/>
                <countermeasure ref="RESTRICT-NUMBER-ACCOUNT-TO-LOGS" mitigation="40"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="CWE-778-AUTH" name="Attacks against the authentication system may go undetected" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="CS-Default" editable="true">
              <desc>Automated attacks against many user accounts, or successful attacks against an account
                                require a response. &amp;nbsp;If audit logs are not kept of both successful and
                                unsuccessful authentication operations, then post attack forensics will be hampered.&amp;nbsp;&amp;nbsp;
                                &lt;div&gt;
                                &amp;nbsp;
                                &lt;br /&gt;Without a dynamic response to mass automated attacks against the
                                authentication system, attackers stand a greater chance of success.
                                &lt;/div&gt;
                            </desc>
              <riskRating confidentiality="25" integrity="25" availability="25" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="CDS-USER-TRACK" mitigation="16"/>
                    <countermeasure ref="CSD-VAL-LOG" mitigation="14"/>
                    <countermeasure ref="CWE-662" mitigation="14"/>
                    <countermeasure ref="EU-GDPR-LOGGING" mitigation="14"/>
                    <countermeasure ref="LOG-TLS-FAILURES" mitigation="14"/>
                    <countermeasure ref="LOGS-INTEGRITY" mitigation="14"/>
                    <countermeasure ref="security-logging" mitigation="14"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CDS-USER-TRACK" mitigation="16"/>
                <countermeasure ref="CSD-VAL-LOG" mitigation="14"/>
                <countermeasure ref="CWE-662" mitigation="14"/>
                <countermeasure ref="EU-GDPR-LOGGING" mitigation="14"/>
                <countermeasure ref="LOG-TLS-FAILURES" mitigation="14"/>
                <countermeasure ref="LOGS-INTEGRITY" mitigation="14"/>
                <countermeasure ref="security-logging" mitigation="14"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="EU-GDPR-DATA_LEAKAGE-UNAUTHZ-PARTIES" name="Data leakage or disclosure to unauthorized parties" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="CS-Default" editable="true">
              <desc>&lt;p&gt;An unauthorized party might access/breach the personal data of a data subject.&lt;/p&gt;</desc>
              <riskRating confidentiality="50" integrity="50" availability="75" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-532">
                  <countermeasures>
                    <countermeasure ref="CWE-532" mitigation="70"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-779">
                  <countermeasures>
                    <countermeasure ref="LOG-RETENTION" mitigation="30"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CWE-532" mitigation="70"/>
                <countermeasure ref="LOG-RETENTION" mitigation="30"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="post-data" name="Post data" desc="Data is received (posted) here" library="CS-Default">
          <threats>
            <threat ref="ssrf-threat" name="Attackers can abuse functionality on the server to read or update internal resources" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="CS-Default" editable="true">
              <desc>&lt;p&gt;The attacker can abuse functionality on the server to read or update internal resources. The attacker can supply - or modify - a URL which the code running on the server will read or submit data to, and by carefully selecting the URLs, the attacker may be able to read server configuration details such as AWS metadata, connect to internal services like http enabled databases, or perform post requests towards internal services which are not intended to be exposed.&amp;nbsp;&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="50" availability="25" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-918">
                  <countermeasures>
                    <countermeasure ref="ASSIGN-WHITE" mitigation="25"/>
                    <countermeasure ref="CWE-601" mitigation="25"/>
                    <countermeasure ref="DATA-VAL" mitigation="25"/>
                    <countermeasure ref="WEB-FILE-DATA" mitigation="25"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="ASSIGN-WHITE" mitigation="25"/>
                <countermeasure ref="CWE-601" mitigation="25"/>
                <countermeasure ref="DATA-VAL" mitigation="25"/>
                <countermeasure ref="WEB-FILE-DATA" mitigation="25"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="CAPEC-35" name="Attackers can leverage Executable Code in Non-Executable Files" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="CS-Default" editable="true">
              <desc>An attack of this type exploits a system's trust in configuration and resource files, when the executable loads the resource (such as an image file or configuration file) the attacker has modified the file to either execute malicious code directly or manipulate the target process (e.g. application server) to execute based on the malicious configuration parameters. Since systems are increasingly interrelated mashing up resources from local and remote sources the possibility of this attack occurring is high.
&lt;br /&gt;The attack can be directed at a client system, such as causing buffer overrun through loading seemingly benign image files, as in Microsoft Security Bulletin MS04-028 where specially crafted JPEG files could cause a buffer overrun once loaded into the browser. Another example targets clients reading pdf files. In this case the attacker simply appends javascript to the end of a legitimate url for a pdf (http://www.gnucitizen.org/blog/danger-danger-danger/)
&lt;br /&gt;http://path/to/pdf/file.pdf#whatever_name_you_want=javascript:your_code_here
&lt;br /&gt;The client assumes that they are reading a pdf, but the attacker has modified the resource and loaded executable javascript into the client's browser process.
&lt;br /&gt;The attack can also target server processes. The attacker edits the resource or configuration file, for example a web.xml file used to configure security permissions for a J2EE app server, adding role name &amp;quot;public&amp;quot; grants all users with the public role the ability to use the administration functionality.
&lt;br /&gt;The server trusts its configuration file to be correct, but when they are manipulated, the attacker gains full control.
&lt;br /&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-95">
                  <countermeasures>
                    <countermeasure ref="dyn-exec" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="dyn-exec" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="CAPEC-176" name="Attackers can manipulate Configuration/Environment" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="CS-Default" editable="true">
              <desc>An attacker manipulates files or settings external to a target application which affect the behavior of that application. For example, many applications use external configuration files and libraries - modification of these entities or otherwise affecting the application's ability to use them would constitute a configuration/environment manipulation attack.
&lt;br /&gt;</desc>
              <riskRating confidentiality="50" integrity="50" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-15">
                  <countermeasures>
                    <countermeasure ref="configuration-integrity" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="configuration-integrity" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="CWE-94" name="Attackers gain access to the system through Server-Side Code Injection" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="CS-Default" editable="true">
              <desc>&lt;p&gt;Server-Side Code Injection happens when an attacker is able to direct input under his control and mix it with executed code on the server side by modifying the logic executed on it.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;Depending on the code isolation, this event could grant the user access to system resources and data.&amp;nbsp;&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-78">
                  <countermeasures>
                    <countermeasure ref="DATA-VAL" mitigation="80"/>
                    <countermeasure ref="SAME-ENCODING-STYLE" mitigation="20"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="DATA-VAL" mitigation="80"/>
                <countermeasure ref="SAME-ENCODING-STYLE" mitigation="20"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="CAPEC-73" name="Attackers upload code that can execute in the client browser and/or redirect the client browser to a site that the attacker owns" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="CS-Default" editable="true">
              <desc>&lt;p&gt;An attack of this type involves an attacker inserting malicious characters (such as a XSS redirection) into a filename, directly or indirectly that is then used by the target software to generate HTML text or other potentially executable content. Many websites rely on user-generated content and dynamically build resources like files, filenames, and URL links directly from user supplied data. In this attack pattern, the attacker uploads code that can execute in the client browser and/or redirect the client browser to a site that the attacker owns. All XSS attack payload variants can be used to exploit these vulnerabilities.&amp;nbsp;&lt;br&gt;&amp;nbsp;&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-116">
                  <countermeasures>
                    <countermeasure ref="same-encoding-parsers" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="same-encoding-parsers" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="READ OR POST DATA" name="Read or Post data" desc="" library="CS-Default">
          <threats>
            <threat ref="CAPEC-586-SER" name="An adversary attempts to exploit an application by injecting additional, malicious content during its processing of serialized objects" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="CS-Default" editable="true">
              <desc>Developers leverage serialization in order to convert data or state into a static, binary format for saving to disk or transferring over a network. These objects are then deserialized when needed to recover the data/state. By injecting a malformed object into a vulnerable application, an adversary can potentially compromise the application by manipulating the deserialization process. This can result in a number of unwanted outcomes, including remote code execution.
&lt;br /&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-502">
                  <countermeasures>
                    <countermeasure ref="SER-UNTRUST" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="SER-UNTRUST" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="CAPEC-62" name="An attacker crafts malicious web links and distributes them hoping to induce users to click on the link and execute a malicious action" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="CS-Default" editable="true">
              <desc>An attacker crafts malicious web links and distributes them (via web pages, email, etc.), typically in a targeted manner, hoping to induce users to click on the link and execute the malicious action against some third-party application. If successful, the action embedded in the malicious link will be processed and accepted by the targeted application with the users' privilege level.
&lt;br&gt;This type of attack leverages the persistence and implicit trust placed in user session cookies by many web applications today. In such an architecture, once the user authenticates to an application and a session cookie is created on the user's system, all following transactions for that session are authenticated using that cookie including potential actions initiated by an attacker and simply "riding" the existing session cookie.
&lt;br&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-352">
                  <countermeasures>
                    <countermeasure ref="ASVS-18.8" mitigation="34"/>
                    <countermeasure ref="CSD-SESS-REAUTH" mitigation="33"/>
                    <countermeasure ref="cwe-352-csrf" mitigation="33"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="ASVS-18.8" mitigation="34"/>
                <countermeasure ref="CSD-SESS-REAUTH" mitigation="33"/>
                <countermeasure ref="cwe-352-csrf" mitigation="33"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="open-redirect-threat" name="An attacker leverages the redirection functionality in the application to conduct more convincing phishing attacks" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="CS-Default" editable="true">
              <desc>&lt;p&gt;An http parameter may contain a URL value for redirecting the request to another specified URL. By modifying this URL value to point towards a malicious site, an attacker may successfully launch a phishing scam and steal user credentials. Because the server name in the modified link is identical to the original site, phishing attempts have a more trustworthy and convincing appearance.&lt;/p&gt;</desc>
              <riskRating confidentiality="50" integrity="50" availability="25" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-601">
                  <countermeasures>
                    <countermeasure ref="CWE-601" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CWE-601" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="CAPEC-117" name="An attacker monitors HTTP headers from a target in order to gather information" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="CS-Default" editable="true">
              <desc>An attacker monitors data streams to or from a target in order to gather information.
                                This attack may be undertaken in order to gather information to support a later attack,
                                or the data collected may be the end goal of the attack. This attack usually involves
                                sniffing network traffic, but may include observing other types of data streams, such as
                                radio. In most varieties of this attack, the attacker is passive and simply observes
                                regular communication, however in some variants the attacker may attempt to initiate the
                                establishment of a data stream or influence the nature of the data transmitted. However,
                                in all variants of this attack, and distinguishing this attack from other data
                                collection methods, the attacker is not the intended recipient of the data stream.
                                Unlike some other data leakage attacks, the attacker is observing explicit data channels
                                (e.g. network traffic) and reading the content. This differs from attacks that collect
                                more qualitative information, such as communication volume, or other information not
                                explicitly communicated via a data stream.
                            </desc>
              <riskRating confidentiality="25" integrity="25" availability="25" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-200">
                  <countermeasures>
                    <countermeasure ref="ASVS-11.5" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="ASVS-11.5" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="CAPEC-267" name="Attackers encode potentially harmful input and submit it to bypass input filtering protections" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="CS-Default" editable="true">
              <desc>&lt;p&gt;This attack leverages the possibility of encoding potentially harmful input and submitting it to applications not expecting or effective at validating this encoding, thus, thwarting the validation.&amp;nbsp;&lt;br&gt;&amp;nbsp;&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-173">
                  <countermeasures>
                    <countermeasure ref="harden-http-headers" mitigation="50"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-235">
                  <countermeasures>
                    <countermeasure ref="CWE-147" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CWE-147" mitigation="50"/>
                <countermeasure ref="harden-http-headers" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="CAPEC-300" name="Attackers gain control of the connection through a Man In The Middle attack" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="CS-Default" editable="true">
              <desc>&lt;div&gt;
                                This type of attack targets the communication between two components (typically client
                                and server). The attacker places himself in the communication channel between the two
                                components. Whenever one component attempts to communicate with the other (data flow,
                                authentication challenges, etc.), the data first goes to the attacker, who has the
                                opportunity to observe or alter it, and it is then passed on to the other component as
                                if it was never intercepted. This interposition is transparent leaving the two
                                compromised components unaware of the potential corruption or leakage of their
                                communications. The potential for Man-in-the-Middle attacks yields an implicit lack of
                                trust in communication or identify between two components.&amp;nbsp; &amp;nbsp;
                                &lt;/div&gt;
                            </desc>
              <riskRating confidentiality="75" integrity="75" availability="1" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-319">
                  <countermeasures>
                    <countermeasure ref="CWE-319-TRANSPORT" mitigation="50"/>
                    <countermeasure ref="secure-communication-ra-and-csp" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CWE-319-TRANSPORT" mitigation="50"/>
                <countermeasure ref="secure-communication-ra-and-csp" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="CAPEC-137-MASS" name="Functionality could be subverted through mass assignment" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="CS-Default" editable="true">
              <desc>If the application binds parameters to back-end objects, then attackers could potentially set fields on those objects that were not designed to be modified by the user.</desc>
              <riskRating confidentiality="75" integrity="75" availability="1" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-915">
                  <countermeasures>
                    <countermeasure ref="ASSIGN-WHITE" mitigation="50"/>
                    <countermeasure ref="WEB-SRV-XML" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="ASSIGN-WHITE" mitigation="50"/>
                <countermeasure ref="WEB-SRV-XML" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="CAPEC-101" name="Unauthorised data could be accessed by manipulating parameters sent to the application" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="CS-Default" editable="true">
              <desc>The application could be tricked into exposing data to unauthorized users by
                                manipulating the parameters it accepts. All data received from the client side could be
                                subject to manipulation, including fields like cookies and HTTP headers, if these are
                                used as inputs to the application.
                            </desc>
              <riskRating confidentiality="75" integrity="75" availability="50" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-20">
                  <countermeasures>
                    <countermeasure ref="CWE-147" mitigation="25"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-22">
                  <countermeasures>
                    <countermeasure ref="CWE-639" mitigation="25"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-548">
                  <countermeasures>
                    <countermeasure ref="DIRECTORY_LISTING" mitigation="25"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-650">
                  <countermeasures>
                    <countermeasure ref="RESTRICT-HTTP-METHODS" mitigation="25"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CWE-147" mitigation="25"/>
                <countermeasure ref="CWE-639" mitigation="25"/>
                <countermeasure ref="DIRECTORY_LISTING" mitigation="25"/>
                <countermeasure ref="RESTRICT-HTTP-METHODS" mitigation="25"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="use-case-1" name="Use Case 1" desc="" library="bz-new-library">
          <threats>
            <threat ref="CAPEC-93" name="An attacker injects, manipulates or forges malicious log entries in the log file, allowing her to mislead a log audit, cover traces of attack, or perform other malicious actions" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="bz-new-library" editable="true">
              <desc>	&lt;p&gt;This attack targets the log files of the target host. The attacker injects, manipulates or forges malicious log entries in the log file, allowing him to mislead a log audit, cover traces of attack, or perform other malicious actions. The target host is not properly controlling log access. As a result tainted data is resulting in the log files leading to a failure in accountability, non-repudiation and incident forensics capability.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="NIST-800-53-SC-19" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="NIST-800-53-SC-19" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="93a01bed-d17b-479d-861b-189b1c255831" diagramComponentId="b5c45a28-0cfb-4054-92b1-8fb0ccb3d96b" ref="6826d4f2-4bbb-46c3-9c3b-3f990569b771" name="Generic Client" desc="" library="CS-Default" parentComponentRef="ddd069fc-f527-4cc5-bc8a-071f28c49100" componentDefinitionRef="generic-client">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="private-secured"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses>
        <weakness ref="CWE-798, CWE-603" name="Client side code stores secret keys, sensitive business logic or other proprietary information" state="0" impact="100" issueId="" issueLink="">
          <desc>When client side code is fully controlled by the user, a malicious user may be able to read the code or reverse engineer it if it is compiled in any form. If the client side code includes secret keys, sensitive business logic (like client authentication) or proprietary information, all of this is directly exposed to the user, allowing them to get the sensitive information or study the business logic with the aim of bypassing it.&amp;nbsp; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Some examples of this vulnerability are:&amp;nbsp; 
 &lt;div&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Performing an authentication on the client side without server side validation.&amp;nbsp;&lt;/li&gt; 
   &lt;li&gt;Making privileged calls from the client based solely on client side conditions (i.e. a cash check on the client side to place an order on an e-commerce platform).&lt;/li&gt; 
   &lt;li&gt;&amp;nbsp;Hard-coding keys and secrets on the client side to make client-to-client calls without a proxy.&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:29.572">
              <output/>
            </source>
            <references>
              <reference name="CWE-602: client-side Enforcement of Server-Side Security" url="https://cwe.mitre.org/data/definitions/602.html"/>
              <reference name="CWE-603: Use of client-side Authentication" url="https://cwe.mitre.org/data/definitions/603.html"/>
            </references>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="lack-automated-vuln-identification" name="Lack of automated vulnerability identification" state="0" impact="100" issueId="" issueLink="">
          <desc>Developmental security testing/evaluation is not enforced during post-design phases of the system development life cycle. Such testing/evaluation is necessary because it confirms that the required security controls are implemented correctly, operating as intended, enforcing the desired security policy, and meeting established security requirements.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:29.406">
              <output/>
            </source>
            <references>
              <reference name="Risk-Based and Functional Security Testing" url="https://www.us-cert.gov/bsi/articles/best-practices/security-testing/risk-based-and-functional-security-testing"/>
            </references>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CWE-311" name="Missing Encryption of Sensitive Data" state="0" impact="100" issueId="" issueLink="">
          <desc>The software does not encrypt sensitive or critical information
                        before storage or transmission.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:29.573">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CWE-312" name="Secrets, API keys and or passwords are included in the source code or online repositories" state="0" impact="100" issueId="" issueLink="">
          <desc>API keys, passwords or secrets included in the source code or in the configuration files can be leaked to users with access to the code. This access can be incidentally granted by publishing the source code on a package-form or an online, public repository.

          The unauthorized access to any of those secrets could lead to a compromise of sensitive data or a system.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:29.573">
              <output/>
            </source>
            <references>
              <reference name="CWE-312: Secrets, API keys and or passwords are included in the source code or online repositories" url="https://cwe.mitre.org/data/definitions/312.html"/>
            </references>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CWE-477" name="Use of Obsolete Function" state="0" impact="75" issueId="" issueLink="">
          <desc>The code uses deprecated or obsolete functions, which suggests that the code has not been actively reviewed or maintained.
&lt;br /&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:29.572">
              <output/>
            </source>
            <references>
              <reference name="CWE-477: Use of Obsolete Function" url="https://cwe.mitre.org/data/definitions/477.html"/>
            </references>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CWE-327" name="Use of a Broken or Risky Cryptographic Algorithm" state="0" impact="100" issueId="" issueLink="">
          <desc>The use of a broken or risky cryptographic algorithm is an unnecessary risk that may result in
                        the exposure of sensitive information.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:29.573">
              <output/>
            </source>
            <references>
              <reference name="CWE-327: Use of a Broken or Risky Cryptographic Algorithm" url="https://cwe.mitre.org/data/definitions/327.html"/>
            </references>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="CWE-319-TRANSPORT" name="Encrypt data between the client and server/service" issueId="" issueLink="" platform="" cost="0" risk="39" state="Recommended" owner="JamesRabe" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Data passed between the client and server should be protected by encryption in transit.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Implement cryptographically strong TLS end-to-end encryption between the client and server, terminating within a secure environment on the server-side.&lt;/li&gt;&lt;li&gt;Consider use of client certificates to prevent interception of (or man-in-the-middle attacks on) the encrypted connection.&lt;/li&gt;&lt;li&gt;Alternatively, asymmetric (public-key) encryption could be utilized and a recognized, proven, and tested implementation/library should be used&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA AC-03 Access Enforcement" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/25-08_02_AC-03"/>
            <reference name="OSA AC-06 Least Privilege" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/28-08_02_AC-06"/>
            <reference name="OSA AC-14 Permitted Actions Without Identification Or Authentication" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/38-08_02_AC-14"/>
            <reference name="OSA AC-16 Automated Labeling" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/198-08_02_AC-16"/>
            <reference name="OSA SC-08 Transmission Integrity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/68-08_02_SC-08"/>
            <reference name="OSA SC-13 Use Of Cryptography" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/73-08_02_SC-13"/>
          </references>
          <standards>
            <standard ref="1.9.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="1.9.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="13.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="13.2.6" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="13.2.6" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="164.312(a)(1)(D)" supportedStandardRef="hipaa-addressable"/>
            <standard ref="164.312(e)(1)(A)" supportedStandardRef="hipaa-addressable"/>
            <standard ref="5.1" supportedStandardRef="OWASP-MASVS-L1"/>
            <standard ref="5.1" supportedStandardRef="OWASP-MASVS-L1+R"/>
            <standard ref="5.1" supportedStandardRef="OWASP-MASVS-L2"/>
            <standard ref="5.1" supportedStandardRef="OWASP-MASVS-L2+R"/>
            <standard ref="9.1.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="9.1.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="9.1.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="9.2.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="9.2.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="9.2.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="9.2.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="9.2.4" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="9.4.3" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="AC-14" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AC-14" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AC-14" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AC-14" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-16" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-3" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AC-3" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AC-3" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AC-3" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-6" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AC-6" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AC-6" supportedStandardRef="NIST 800-53"/>
            <standard ref="PR.AC-4" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-6" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-7" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-2" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-5" supportedStandardRef="nist-csf"/>
            <standard ref="PR.PT-3" supportedStandardRef="nist-csf"/>
            <standard ref="SC-13" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="SC-13" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="SC-13" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="SC-13" supportedStandardRef="NIST 800-53"/>
            <standard ref="SC-8" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="SC-8" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="SC-8" supportedStandardRef="NIST 800-53"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Check client to server connections use and enforce established encryption protocols, e.g. TLSv1.2.&lt;br&gt;&amp;nbsp;&lt;/li&gt;&lt;li&gt;Verify only strong cipher suites are in use and permitted.&lt;/li&gt;&lt;li&gt;Ensure attempts to use unencrypted transport mechanisms are rejected or redirected (e.g. HTTP instead of HTTPS)&lt;/li&gt;&lt;li&gt;Review configuration of protocols and services against best-practice guidelines.&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:29.495">
              <output/>
            </source>
            <references>
              <reference name="Server Side TLS Configuration" url="https://wiki.mozilla.org/Security/Server_Side_TLS"/>
            </references>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="INS-CLIENT" name="Ensure the application does not use unsupported, insecure, or deprecated client-side technologies" issueId="" issueLink="" platform="" cost="0" risk="35" state="Recommended" owner="JamesRabe" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Ensure the application does not use unsupported, insecure, or deprecated client-side technologies such as: NSAPI plugins, Flash, Shockwave, ActiveX, Silverlight, NACL, or client-side Java applets.&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1.14.6" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="1.14.6" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ul&gt;
 &lt;li&gt;Test the presence of any client side applet such as Flash, ActiveX and Silverlight.&lt;/li&gt;
&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:29.496">
              <output/>
            </source>
            <references>
              <reference name="Testing Information Gathering" url="https://www.owasp.org/index.php/Testing_Information_Gathering"/>
            </references>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CS-CLIENT-SECRET" name="Implement sensitive logic and data validation on the server-side" issueId="" issueLink="" platform="" cost="1" risk="49" state="Recommended" owner="JamesRabe" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;All data and functionalities on the client-side must be considered tainted and subject to manipulation by a malicious actor, regardless of the controls in place (e.g. encryption or obfuscation of client-side code or content). &lt;/p&gt; This includes application logic decisions, such as access controls, and data considered sensitive or secret, such as encryption keys. While controls may be duplicated on the client-side to improve the user experience, it is important to have these enforced on the server-side.&amp;nbsp; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Business logic, in particular access controls, must be implemented on the server-side.&lt;/li&gt; 
  &lt;li&gt;Secret data should be stored on the server-side, and only what is explicitly required should be duplicated on the client-side.&amp;nbsp;&lt;/li&gt; 
 &lt;/ul&gt;All data provided from the client-side (even from binary clients) should be considered tainted, and security decisions should not be made solely on this data. For example, an insecure implementation could include a compiled application (e.g. Flash!) performing authentication on the client-side against a stored password. The decompilation of the binary (in this case flv file) or the interception and modification of controls between the client and server could expose the password or allow unauthorized access to the authenticated application content. 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA AC-01 Access Control Policies and Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/23-08_02_AC-01"/>
            <reference name="OSA SI-10 Information Accuracy, Completeness, Validity, And Authenticity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/48-08_02_SI-10"/>
            <reference name="OWASP Juice Shop: Broken Access Control" url="https://pwning.owasp-juice.shop/part2/broken-access-control.html"/>
            <reference name="OWASP Juice Shop: Injection" url="https://pwning.owasp-juice.shop/part2/injection.html"/>
          </references>
          <standards>
            <standard ref="12.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="2.4.11.7" supportedStandardRef="iotsf-class-0"/>
            <standard ref="2.4.11.7" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.11.7" supportedStandardRef="iotsf-class-2"/>
            <standard ref="4.1.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="4.1.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="4.1.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="A01:2021-Broken Access Control" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A03:2021-Injection" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A1:2017-Injection" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="A5:2017-Broken Access Control" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="AC-1" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AC-1" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AC-1" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AC-1" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-24" supportedStandardRef="NIST 800-53"/>
            <standard ref="ID.GV-1" supportedStandardRef="nist-csf"/>
            <standard ref="ID.GV-3" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-1" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-3" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-4" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-6" supportedStandardRef="nist-csf"/>
            <standard ref="SI-10" supportedStandardRef="NIST 800-53"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Identify where critical decisions are made on the application. Key areas include:&amp;nbsp;&lt;/li&gt; 
 &lt;ul&gt; 
  &lt;li&gt;authentication&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;input validation&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;access to resources&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;state bypasses&amp;nbsp;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;li&gt;Ensure those decisions are made or validated on the server side, particularly where client-side controls are implemented.&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;Verify that sensitive data passed to the client side is appropriate, and ensure no inappropriate data is stored or hard-coded into client-side components, for example&amp;nbsp;&lt;/li&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Personally Identifiable Information.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Financial data, in particular cardholder data (as defined by the &lt;span class="caps"&gt;PCI&lt;/span&gt; Council).&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Application secrets - such as symmetric encryption keys or passwords.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:29.495">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CSD-CLIENT-SECRET" name="Review code, configuration, and online repositories for secrets and sensitive information systemically" issueId="" issueLink="" platform="" cost="0" risk="49" state="Recommended" owner="JamesRabe" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Secret or sensitive information should not be exposed in source-code or client-side software.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Code and online repositories must not contain secrets or sensitive information.&lt;/li&gt;&lt;li&gt;Configuration files on the client- and server-side must not contain hard-coded credentials or other sensitive data.&lt;/li&gt;&lt;li&gt;Online repositories, services, and other associated restricted content must have appropriate access controls in place.&lt;/li&gt;&lt;li&gt;Where sensitive information must be stored on the server side, it should be in memory for transient data, or encrypted if persistent. &amp;nbsp;Depending on the use case, this encryption may be asymmetric or public key, or symmetric using a shared secret. Note however that reversible encryption on the client-side and in-memory storage are still susceptible to client-side attacks.&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="10.1.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="2.10.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.10.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="AU-13" supportedStandardRef="NIST 800-53"/>
            <standard ref="DE.CM-3" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Use automated tools to regularly search for keywords or regular expression patterns within the code, configuration and other files exposed on the client and server-side, and any remote repositories.&lt;/li&gt;&lt;li&gt;The scanning process must be triggered before the code is published (in particular for public/open source code) as once published it is likely to be archived (and any disclosed secrets would be exposed and/or have to be changed)&lt;/li&gt;&lt;li&gt;Review criteria and requirements for any temporary or persistent storage of sensitive or secret data on the client-side, and the protections in place.&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:29.495">
              <output/>
            </source>
            <references>
              <reference name="Microsoft Exchange 2016 Sensitive Information Patterns" url="https://technet.microsoft.com/en-us/library/jj150541(v=exchg.160).aspx"/>
              <reference name="Prevents you from committing secrets and credentials into git repositories" url="https://github.com/awslabs/git-secrets"/>
              <reference name="Seekret" url="https://github.com/apuigsech/seekret"/>
            </references>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="use-analysis-static-code" name="Scan the code with static code analysis tools" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="JamesRabe" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Use periodically a static code analysis tool to analyze the code and detect potentially malicious code, such as time functions, unsafe file operations and networks connections. With the scanning of static code, we ensure the integrity of the application. 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="10.1.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="10.2.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="10.2.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="10.2.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="10.2.6" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Verify that a code analysis tool is in use and it is configured to detect potentially malicious code, such as time functions, unsafe file operations and network connections. 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:29.376">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="secure-communication-ra-and-csp" name="Use secure communication between CSP and RA" issueId="" issueLink="" platform="" cost="0" risk="39" state="Recommended" owner="JamesRabe" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;In situations where the verifier and CSP are separate entities, communications between RA (Registration Authority) and CSP (Credential Service Provider), should be authenticated with a mutually-authenticated secure channel, such as a client-authenticated TLS connection, using approved cryptographic algorithms.&lt;/p&gt;
&lt;p&gt;NIST's digital identity model involves some entities:&lt;/p&gt;
&lt;p&gt;- CSP (Credential Service Provider): A credential service provider is a trusted entity that issues security tokens or electronic credentials to subscribers. A CSP forms part of an authentication system, most typically identified as a separate entity in a Federated authentication system. A CSP may be an independent third party, or may issue credentials for its own use. Credential Service Provider is typically also the Identity Provider (IDP). An example of a CSP would be an online site whose primary purpose may be, for example, internet banking - but whose users may be subsequently authenticated to other sites, applications or services without further action on their part.&lt;/p&gt;
&lt;p&gt;- Registration Authority (RA): A trusted entity that establishes and vouches for the identity of a subscriber to a CSP. The RA may be an integral part of a CSP, or it may be independent of a CSP, but it has a relationship to the CSP.&lt;/p&gt;
&lt;p&gt;- Verifier: This refers to an entity that verifies the claimant's identity by verifying the claimant's possession and control of one or two authenticators, using an authentication protocol.&lt;/p&gt;
&lt;p&gt;- RP (Relying party): This refers to an entity that relies on the subscriber's authenticator(s) and credentials or a verifier's assertion of a claimant's identity, typically to process a transaction or grant access to information or a system.&lt;/p&gt;
&lt;p&gt;- Applicant: This refers to a subject undergoing the processes of enrollment and identity proofing.&lt;/p&gt;
&lt;p&gt;- Claimant: This refers to a subject whose identity is to be verified using one or more authentication protocols.&lt;/p&gt;
&lt;p&gt;- Subscriber: This refers to a party who has received a credential or an authenticator from a CSP.&amp;nbsp;&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="NIST 800-63-1" url="https://csrc.nist.rip/groups/SMA/forum/documents/feb2012_nist-sp-800-63-1_newton-perlner.pdf"/>
            <reference name="NIST 800-63C" url="https://pages.nist.gov/800-63-3/sp800-63c.html"/>
          </references>
          <standards>
            <standard ref="2.2.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.6" supportedStandardRef="nist-800-63"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Verify the CSP and RA communicate securely with a secure channel, for example with TLS.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:29.496">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CWE-295-CLIENT" name="Validate the certificate presented by the server" issueId="" issueLink="" platform="" cost="0" risk="39" state="Recommended" owner="JamesRabe" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Certificates presented by the server must be valid, provable, and cryptographically secure in order to derive the benefits of TLS encrypted communications.&amp;nbsp; Invalid certificates expose the application and its users to spoofing attacks such as Man In The Middle (MITM) where data may be intercepted or redirected to a malicious site, and undermine confidence in the site.&lt;/p&gt;&lt;p&gt;Validate the certificate presented by the server is signed by a trusted Certificate Authority.&lt;/p&gt;&lt;p&gt;Ensure the certificate chain of trust is legitimate and secure.&lt;/p&gt;&lt;p&gt;Verify cryptographically secure ciphers are in use throughout the chain, in particular strong hashing algorithms for certificate signatures.&amp;nbsp;&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA SC-11 Trusted Path" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/71-08_02_SC-11"/>
            <reference name="OSA SC-17 Public Key Infrastructure Certificates" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/77-08_02_SC-17"/>
          </references>
          <standards>
            <standard ref="1.9.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="1.9.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="13.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="164.312(e)(1)(B)" supportedStandardRef="hipaa-addressable"/>
            <standard ref="9.2.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="9.2.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="PR.DS-2" supportedStandardRef="nist-csf"/>
            <standard ref="SC-11" supportedStandardRef="NIST 800-53"/>
            <standard ref="SC-17" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="SC-17" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="SC-17" supportedStandardRef="NIST 800-53"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Verify the client is conducting appropriate checks and receives a positive response regarding the validity and quality of the site certificate.&lt;/li&gt;&lt;li&gt;Use TLS analysis tools to check and rate the server security, for example:&lt;ol&gt;&lt;li&gt;SSL Labs SSL Server Test:&amp;nbsp;https://www.ssllabs.com/ssltest/&lt;/li&gt;&lt;li&gt;sslscan tool: https://github.com/rbsec/sslscan&lt;/li&gt;&lt;li&gt;testssh.sh tool: https://github.com/drwetter/testssl.sh&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;Remediate all security issues and warnings relating to the server certificate, and those in the trust chain.&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:29.495">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CWE-327" name="Validate the TLS implementation in use" issueId="" issueLink="" platform="" cost="0" risk="39" state="Recommended" owner="JamesRabe" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;There are a number of established open- and closed- source TLS implementations in use, which have undergone extensive review and testing by the developers, as well as third-parties in the development, security, and cryptography space. Typically, these widely used implementations have a lower risk of exploitation compared with privately developed - or less known - implementations (although vulnerabilities such as Heartbleed highlight this is not universally true) due to this additional scrutiny scrutiny.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Identify the TLS and other cryptographic libraries, implementations, and technologies in use.&lt;/li&gt;&lt;li&gt;Verify the veracity of the implementations, and review third party validations together with security advisories or best-practices relating to them.&lt;/li&gt;&lt;li&gt;Some well-known TLS libraries are NSS from Mozilla, and OpenSSL.&lt;/li&gt;&lt;li&gt;Where an unknown or unproven implementation is in use, consider use of an established option.&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="Mozilla SSL Config" url="https://ssl-config.mozilla.org/"/>
            <reference name="OSA SC-08 Transmission Integrity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/68-08_02_SC-08"/>
            <reference name="Server Side TLS Configuration" url="https://wiki.mozilla.org/Security/Server_Side_TLS"/>
          </references>
          <standards>
            <standard ref="13.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="164.312(e)(1)(B)" supportedStandardRef="hipaa-addressable"/>
            <standard ref="9.1.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="9.1.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="9.1.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="PR.DS-2" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-5" supportedStandardRef="nist-csf"/>
            <standard ref="SC-8" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="SC-8" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="SC-8" supportedStandardRef="NIST 800-53"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Confirm the TLS layer in use is a secure, stable, release of a publicly published implementation that has been subject to expert analysis and review.&lt;ul&gt;&lt;li&gt;If not, assurance of the security of the implementation should be sought, or the risk quantified.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Verify that a client connecting to the server will only be able to negotiate cryptographically strong, secure ciphers.&lt;/li&gt;&lt;li&gt;Confirm that a client can not downgrade to a weaker cipher after initial negotiation.&lt;/li&gt;&lt;li&gt;Use TLS analysis tools to check and rate the server security, for example:&lt;ol&gt;&lt;li&gt;SSL Labs SSL Server Test:&amp;nbsp;https://www.ssllabs.com/ssltest/&lt;/li&gt;&lt;li&gt;sslscan tool: https://github.com/rbsec/sslscan&lt;/li&gt;&lt;li&gt;testssh.sh tool: https://github.com/drwetter/testssl.sh&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;Remediate all security issues and warnings relating to the TLS/SSL ciphers, protocols, and security mechanisms.&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:29.496">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="GENERAL" name="General" desc="" library="CS-Default">
          <threats>
            <threat ref="sec-vuln-dev-process" name="Application contains security vulnerabilities not identified during the development process" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="CS-Default" editable="true">
              <desc>Application security should be embedded into a project's development environment, allowing developers to monitor their code regularly in order to avoid security vulnerabilities when the application is deployed in the production environment.</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references>
                <reference name="NIST Security Considerations in the System Development Life Cycle" url="https://csrc.nist.gov/publications/detail/sp/800-64/rev-2/archive/2008-10-16"/>
                <reference name="Risk-Based and Functional Security Testing" url="https://www.us-cert.gov/bsi/articles/best-practices/security-testing/risk-based-and-functional-security-testing"/>
              </references>
              <weaknesses>
                <weakness ref="lack-automated-vuln-identification">
                  <countermeasures>
                    <countermeasure ref="use-analysis-static-code" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="use-analysis-static-code" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="CSD-CLIENT-SECRET" name="Attackers gain unauthorised access to data or services by accessing a client side secret" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="CS-Default" editable="true">
              <desc>Secrets stored in any client side components, such as a mobile application, thick
                                client application or in JavaScript used by a browser, can be accessed by
                                users/attackers who have access to this client.
                                &lt;div&gt;
                                &lt;br /&gt;
                                &lt;/div&gt;
                                &lt;div&gt;
                                Attackers could then gain access to the data or services that are protected by this
                                secret, if no other credentials are required.
                                &lt;/div&gt;
                            </desc>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-312">
                  <countermeasures>
                    <countermeasure ref="CSD-CLIENT-SECRET" mitigation="50"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-798, CWE-603">
                  <countermeasures>
                    <countermeasure ref="CS-CLIENT-SECRET" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CS-CLIENT-SECRET" mitigation="50"/>
                <countermeasure ref="CSD-CLIENT-SECRET" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="DEP-CLIENT-TECH" name="Attackers gain unauthorised access to the application by the use of deprecated client-side technologies" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="CS-Default" editable="true">
              <desc>&lt;div&gt;
  As programming languages evolve, functions occasionally become obsolete due to:
&lt;/div&gt;
&lt;ul&gt;
 &lt;li&gt;Advances in the language.&lt;/li&gt;
 &lt;li&gt;Improved understanding of how operations should be performed effectively and securely.&lt;/li&gt;
 &lt;li&gt;Changes in the conventions that govern certain operations. &lt;/li&gt;
&lt;/ul&gt;
&lt;br /&gt;Functions that are removed are usually replaced by newer counterparts that perform the same task in some different and hopefully improved way.
&lt;br /&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-477">
                  <countermeasures>
                    <countermeasure ref="INS-CLIENT" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="INS-CLIENT" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="READ OR POST DATA" name="Read or Post data" desc="" library="CS-Default">
          <threats>
            <threat ref="NTW-MITM" name="Attackers could gain access to sensitive data through a man in the middle attack" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="CS-Default" editable="true">
              <desc>&lt;p&gt;This type of attack targets the communication between two components (typically client and server). The attacker places himself in the communication channel between the two components. Whenever one component attempts to communicate with the other (data flow, authentication challenges, etc.), the data first goes to the attacker, who has the opportunity to observe or alter it, and it is then passed to the other component as if it were never intercepted. This interposition is transparent leaving the two compromised components unaware of the potential corruption or leakage of their communications. The potential for Man-in-the-Middle attacks yields an implicit lack of trust in communication or identity between two components.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-311">
                  <countermeasures>
                    <countermeasure ref="CWE-295-CLIENT" mitigation="25"/>
                    <countermeasure ref="CWE-319-TRANSPORT" mitigation="25"/>
                    <countermeasure ref="secure-communication-ra-and-csp" mitigation="25"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-327">
                  <countermeasures>
                    <countermeasure ref="CWE-327" mitigation="25"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CWE-295-CLIENT" mitigation="25"/>
                <countermeasure ref="CWE-319-TRANSPORT" mitigation="25"/>
                <countermeasure ref="CWE-327" mitigation="25"/>
                <countermeasure ref="secure-communication-ra-and-csp" mitigation="25"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="89bb6142-96aa-4ea8-8a69-61c8caf4fe9e" diagramComponentId="029106a2-0dce-4346-8c54-c3a8f7d18447" ref="ddd069fc-f527-4cc5-bc8a-071f28c49100" name="Developer Machines" desc="" library="CS-Default" parentComponentRef="" componentDefinitionRef="empty-component">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="private-secured"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses/>
      <countermeasures/>
      <usecases/>
    </component>
    <component uuid="af84ee48-8a5a-4f86-9007-2b708fe5fcd6" diagramComponentId="1ca9b6e3-504b-4e2e-9a8c-207f4ec953da" ref="bf796b07-9835-4fbf-b0a0-e6212e234f14" name="Azure Cosmos DB" desc="" library="Microsoft-Azure" parentComponentRef="87b459b6-d494-41b4-9cf5-c79f7d4d6830" componentDefinitionRef="microsoft-azure-cosmos-db">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses>
        <weakness ref="DATA-TRANSMIT-CLEAR" name="Data is transmitted in clear text" state="0" impact="100" issueId="" issueLink="">
          <desc>Data is not protected when transmitted to applications or customers and it can be read or modified by unauthorized actors.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:26.635">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-MON02" name="Excessive use of administrator accounts" state="0" impact="100" issueId="" issueLink="">
          <desc>The administrator accounts are used for all actions, not only for administrative actions. This
                        is because these users have not got a personal or a user account to do the daily actions.&amp;nbsp;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that there is any rule to notify when there is a bad usage of the root
                            account.&lt;/li&gt;
                            &lt;li&gt;Check if these rules are enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:26.635">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CWE-778" name="Insufficient Logging" state="0" impact="100" issueId="" issueLink="">
          <desc>When a critical security event occurs, the software either does not record the event or omits important details about the event when logging it. When critical security events are not logged properly, such as in the case of a failed login attempt, this can make malicious behavior more difficult to detect and may hinder forensic analyses after a successful attack.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:26.635">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-MON03" name="Lack of 2FA" state="0" impact="100" issueId="" issueLink="">
          <desc>Logging into the console without using Multi-factor Authentication (MFA) and without being detected. The connection without MFA must be audited and monitored, the correct security group must be informed and the connection must be validated.&amp;nbsp;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that there is any rule to notify when someone tries to login into the
                            console without MFA.&lt;/li&gt;
                            &lt;li&gt;Check if these rules are enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:26.635">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZ-W04" name="Misconfigured Authentication Method for Administrator Accounts" state="0" impact="100" issueId="" issueLink="">
          <desc>The authentication method &amp;quot;Multi-factor Authentication&amp;quot; for the Administrator accounts is not configured.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;Multi-Factor Authentication&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check all Administrator accounts have got the MFA flag enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:26.635">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-IDENTITY-03" name="Misconfigured User Account" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        Key security settings such as resetting the password and other password controls are not
                        configured.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log in to the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each user has got an assigned account.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;Password reset&amp;quot; &amp;gt; &amp;quot;Authentication Method&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that the security confirmation measures and the security criteria are well
                            filled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:26.635">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-ACCESS-01" name="Misconfigured credentials for groups and roles" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        The credentials for groups and roles are not correctly configured and there are user accounts with more privileges than necessary.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each user has got assigned the correct groups.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All groups&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each group has got assigned the correct roles to achieve principle of
                            least privilege.&lt;/li&gt;
                            &lt;li&gt;Check that the roles for the Cloud Service are well assigned.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;div&gt;
                            &lt;/div&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:26.635">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-EXPIRATION-DATE" name="Misconfigured password expiration" state="0" impact="100" issueId="" issueLink="">
          <desc>The password expiration is not configured and users are not obliged to change their passwords.
                        Not change frequently the passwords gives facilities to attackers to obtain them.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            Check that the password expiration has got the correct values. Therefore, we can obtain the
                            values using the Get-MsolPasswordPolicy cmdlet from the Azure Active Directory Module for
                            Windows PowerShell. With the following command:
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;br /&gt;
                            &lt;/div&gt;
                            &lt;blockquote&gt;
                            &lt;div&gt;
                            PS C:\&amp;gt; Get-MsolPasswordPolicy -DomainName contoso.com
                            &lt;/div&gt;
                            &lt;/blockquote&gt;
                            &lt;div&gt;
                            &lt;br /&gt;
                            &lt;/div&gt;
                            &lt;div&gt;
                            More information: Doc MS Azure
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:26.635">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-VNET01" name="Networks for Azure resources are not properly segmented. Without proper segmentation, when attackers gain access to one resource, any other resources in the same VNet are compromised" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        Resources in the same VNet are compromised because when one of them is attacked and the
                        attackers gain access, they also gain access to all resources.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            Identify the resources and the Microsoft Azure instances.
                            &lt;/div&gt;
                            &lt;div&gt;
                            Check that the resources are in the correct VNet.
                            &lt;/div&gt;
                            &lt;div&gt;
                            Check that the Microsoft Azure instances&amp;nbsp;are into different VNets.
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:26.634">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-MONITOR-BACKUPS" name="There is not a recover or backup mechanism" state="0" impact="100" issueId="" issueLink="">
          <desc>There are not any processes or mechanisms to regularly save the data to another place in order to have an older version of the data to restore in case of loss. Consequently the data cannot be easily recovered or they cannot be recovered at all.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:26.634">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-NET-01" name="Unauthorized connection attempts on open ports" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        Receiving unauthorized connections to open ports makes systems vulnerable to attacks. To
                        avoid this, access to the network must be as restricted as possible, so that only the necessary
                        ports are open and the minimum inbound traffic is accepted.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Check that each Azure resources have got their Network Security Groups.&lt;/li&gt;
                            &lt;li&gt;Check that a set of these groups achieve with the principle of the least
                            privilege.&lt;/li&gt;
                            &lt;li&gt;Check that the inbound/outbound security rules are enabled and correctly
                            configured.&lt;/li&gt;
                            &lt;li&gt;In &amp;quot;Inbound security rules&amp;quot;, check that all the traffic from
                            0.0.0.0/0&amp;nbsp;is blocked.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:26.634">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="AZ-A09" name="Apply RBAC with pre-defined policies added into groups or roles" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Define and create groups that relate to job functions (administrators, developers, accounting,
                        etc.) and assign the relevant permissions for each group, and then assign IAM users to those
                        groups.&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &amp;nbsp;&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        All the users in an IAM group inherit the permissions assigned to the group. That way, you can
                        make changes for everyone in a group in just one place. As people move around in your company,
                        you can simply change what IAM group their IAM user belongs to. This method is known as Role
                        Based Access Control (RBAC).&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Remove a user from a group:&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;ol&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                        &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                        &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Click on the user name. All the groups the user belongs are there.&lt;/li&gt;
                        &lt;li&gt;Choose the group and &amp;quot;Remove&amp;quot;.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/ol&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Create a group and add user:&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;ol&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                        &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                        &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All groups&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Click &amp;quot;New Group&amp;quot; and fill the information.&lt;/li&gt;
                        &lt;li&gt;Search and add the user.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Create a group and add members in Azure Active Directory" url="https://docs.microsoft.com/en-us/azure/active-directory/active-directory-groups-create-azure-portal"/>
            <reference name="MS Azure - Use Role-Based Access Control to manage access to your Azure subscription resources" url="https://docs.microsoft.com/en-us/azure/active-directory/role-based-access-control-configure"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each user has got assigned the correct groups.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All groups&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each group has got assigned the correct roles.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:26.522">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-A12" name="Configure password expiration" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        &lt;div&gt;
                        Configure the password expiration to force after a determinate time, the password code shall be
                        changed for the users.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Configure password management to match security criteria. This value is configurable
                        using the Set-MsolPasswordPolicy cmdlet from the Azure Active Directory Module for Windows
                        PowerShell. With the following command as the example:&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        &lt;div&gt;
                        Set-MsolPasswordPolicy -ValidityPeriod 60 -NotificationDays 14&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;This command updates the tenant so that all users passwords expire after 60
                        days. The users receive notification 14 days prior to that expiry.
                        &lt;/blockquote&gt;
                        &lt;div&gt;
                        &lt;div&gt;
                        More information:&amp;nbsp;
                        &lt;a
                        href="https://docs.microsoft.com/en-us/powershell/module/msonline/set-msolpasswordpolicy?view=azureadps-1.0"&gt;Doc
                        MS Azure&lt;/a&gt;
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;ul&gt;
                        &lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Password policies and restrictions in Azure Active Directory" url="https://docs.microsoft.com/en-us/azure/active-directory/active-directory-passwords-policy"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            Check that the password expiration has got the correct values. Therefore, we can obtain the
                            values using the Get-MsolPasswordPolicy cmdlet from the Azure Active Directory Module for
                            Windows PowerShell. With the following command:
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;br /&gt;
                            &lt;/div&gt;
                            &lt;blockquote&gt;
                            &lt;div&gt;
                            PS C:\&amp;gt; Get-MsolPasswordPolicy -DomainName contoso.com
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;br /&gt;
                            &lt;/div&gt;
                            &lt;/blockquote&gt;More information:
                            &lt;a
                            href="https://docs.microsoft.com/en-us/powershell/module/msonline/get-msolpasswordpolicy?view=azureadps-1.0"&gt;Doc
                            MS Azure&lt;/a&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:26.523">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-A11" name="Configure roles for the Cloud Service" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Define and create the roles for the Azure Cloud Service. For each role, define the permissions and also configure how that role runs. When you launch an Azure instance, you shall specify a role for the instance as a launch parameter. Applications that run on the Cloud instance use the role's credentials when they access Azure resources. This role's permissions determine what the application is allowed to do.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Configure an Azure cloud service from Solution Explorer in Visual Studio.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Use Role-Based Access Control to manage access to your Azure subscription resources" url="https://docs.microsoft.com/en-us/azure/active-directory/role-based-access-control-configure"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that the roles for the Cloud Service are well assigned.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:26.523">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-COSMOS-DB4" name="Configure the default consistency level for Azure Cosmos DB" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;Configure the default consistency level for your Azure Cosmos DB account&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Rationale:&lt;/div&gt;&lt;div&gt;Even within a single data center, Azure Cosmos DB automatically replicates data for high availability giving you the choice of consistency levels. This replication guarantees a 99.99% availability SLA for all single region accounts and all multi-region accounts with relaxed consistency, and 99.999% read availability on all multi-region database accounts.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Distributed databases that rely on replication for high availability, low latency, or both, must make a fundamental trade-off between the read consistency, availability, latency, and throughput as defined by the PACLC theorem. The linearizability of the strong consistency model is the gold standard of data programmability. But it adds a steep price from higher write latencies due to data having to replicate and commit across large distances. Strong consistency may also suffer from reduced availability (during failures) because data cannot replicate and commit in every region. Eventual consistency offers higher availability and better performance, but its more difficult to program applications because data may not be completely consistent across all regions.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Most commercially available distributed NoSQL databases available in the market today provide only strong and eventual consistency. Azure Cosmos DB offers five well-defined levels. From strongest to weakest, the levels are:&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;- Strong&lt;/div&gt;&lt;div&gt;- Bounded staleness&lt;/div&gt;&lt;div&gt;- Session&lt;/div&gt;&lt;div&gt;- Consistent prefix&lt;/div&gt;&lt;div&gt;- Eventual&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Remediation:&lt;/div&gt;&lt;div&gt;Configure the default consistency level&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;The default consistency level is the consistency level that clients use by default.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;To view or modify the default consistency level, sign in to the Azure portal. Find your Azure Cosmos account, and open the Default consistency pane. Select the level of consistency you want as the new default, and then select Save. The Azure portal also provides a visualization of different consistency levels with music notes.&lt;/div&gt;&lt;div&gt;&lt;br&gt;&lt;/div&gt;&lt;div&gt;Impact:&lt;/div&gt;&lt;div&gt;Each level provides availability and performance trade-offs.&lt;/div&gt;&lt;div&gt;E.g. Strong consistency may suffer from reduced availability (during failures) because data cannot replicate and commit in every region. Eventual consistency offers higher availability and better performance, but its more difficult to program applications because data may not be completely consistent across all regions.&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Consistency levels in Azure Cosmos DB" url="https://docs.microsoft.com/en-us/azure/cosmos-db/consistency-levels"/>
            <reference name="Manage consistency levels in Azure Cosmos DB" url="https://docs.microsoft.com/en-us/azure/cosmos-db/how-to-manage-consistency?tabs=portal%2Cdotnetv2%2Capi-async"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Ensure that you have chosen a default consistency level according to your needs.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:26.523">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-COSMOS-DB6" name="Create alerts for Azure Cosmos DB using Azure Monitor" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Create alerts for Azure Cosmos DB using Azure Monitor 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  Alerts are used to set up recurring tests to monitor the availability and responsiveness of your Azure Cosmos DB resources. Alerts can send you a notification in the form of an email, or execute an Azure Function when one of your metrics reaches the threshold or if a specific event is logged in the activity log. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  You can receive an alert based on the metrics, or the activity log events on your Azure Cosmos account: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - Metrics - The alert triggers when the value of a specified metric crosses a threshold you assign. For example, when the total request units consumed exceed 1000 RU/s. This alert is triggered both when the condition is first met and then afterwards when that condition is no longer being met. See the monitoring data reference article for different metrics available in Azure Cosmos DB. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - Activity log events - This alert triggers when a certain event occurs. For example, when the keys of your Azure Cosmos account are accessed or refreshed. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  You can set up alerts from the Azure Cosmos DB pane or the Azure Monitor service in the Azure portal. Both the interfaces offer the same options.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  Create an alert rule 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  This section shows how to create an alert when you receive an HTTP status code 429, which is received when the requests are rate limited. For examples, you may want to receive an alert when there are 100 or more rate limited requests. This article shows you how to configure an alert for such scenario by using the HTTP status code. You can use the similar steps to configure other types of alerts as well, you just need to choose a different condition based on your requirement. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  1. Sign into the Azure portal. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  2. Select Monitor from the left-hand navigation bar and select Alerts. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  3. Select the New alert rule button to open the Create alert rule pane. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  4. Fill out the Scope section: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - Open the Select resource pane and configure the following: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - Choose your subscription name. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - Select Azure Cosmos DB accounts for the resource type. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - The location of your Azure Cosmos account. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - After filling in the details, a list of Azure Cosmos accounts in the selected scope is displayed. Choose the one for which you want to configure alerts and select Done. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  5. Fill out the Condition section: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - Open the Select condition pane to open the Configure signal logic page and configure the following: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - Select a signal. The signal type can be a Metric or an Activity Log. Choose Metrics for this scenario. Because you want to get an alert when there are rate limiting issues on the total request units metric. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - Select All for the Monitor service 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - Choose a Signal name. To get an alert for HTTP status codes, choose the Total Request Units signal. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - In the next tab, you can define the logic for triggering an alert and use the chart to view trends of your Azure Cosmos account. The Total Request Units metric supports dimensions. These dimensions allow you to filter on the metric. If you don't select any dimension, this value is ignored. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - Choose StatusCode as the Dimension name. Select Add custom value and set the status code to 429. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - In the Alert logic, set the Threshold to Static. The static threshold uses a user-defined threshold value to evaluate the rule, whereas the dynamic thresholds use inbuilt machine learning algorithms to continuously learn the metric behavior pattern and calculate the thresholds automatically. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - Set the operator to Greater than, the Aggregation type to Total, and the Threshold value to 100. With this logic, if your client sees more than 100 requests that have a 429 status code, the alert is triggered. You can also configure the aggregation type, aggregation granularity, and the frequency of evaluation based on your requirement. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - After filling the form, select Done.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  6. Fill out the Action group section: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - On the Create rule pane, select an existing action group, or create a new action group. An action group enables you to define the action to be taken when an alert condition occurs. For this example, create a new action group to receive an email notification when the alert is triggered. Open the Add action group pane and fill out the following details: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - Action group name - The action group name must be unique within a resource group. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - Short name - The action group's Short name, this value is included in email and SMS notifications to identify which action group was the source of the notification. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - Choose the subscription and the resource group in which this action group will be created. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - Provide a name for your action and select Email/SMS message/Push/Voice as the Action Type. The following screenshot shows the details of the action type: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  7. Fill out the Alert rule details section: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - Define a name for the rule, provide an optional description, the severity level of the alert, choose whether to enable the rule upon rule creation, and then select Create rule alert to create the metric rule alert. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  After creating the alert, it will be active within 10 minutes. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Create alerts for Azure Cosmos DB using Azure Monitor" url="https://docs.microsoft.com/en-us/azure/cosmos-db/create-alerts"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  1. Go to "Monitor" and then to "Alerts". 
&lt;/div&gt; 
&lt;div&gt;
  2. Check that there is any rule to notify about Azure Cosmos DB events. 
&lt;/div&gt; 
&lt;div&gt;
  3. Check if these rules are enabled. 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:26.523">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-COSMOS-DB1" name="Create Azure Cosmos DB permissions per database" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Create Azure Cosmos DB permissions per database 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  A permission resource is associated with a user and assigned at the container as well as partition key level. Each user may contain zero or more permissions. A permission resource provides access to a security token that the user needs when trying to access a specific container or data in a specific partition key. There are two available access levels that may be provided by a permission resource: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  All: The user has full permission on the resource. 
&lt;/div&gt; 
&lt;div&gt;
  Read: The user can only read the contents of the resource but cannot perform write, update, or delete operations on the resource. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  Code sample to create permission 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The following code sample shows how to create a permission resource, read the resource token of the permission resource, and associate the permissions with User1. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  // Create a permission on a container and specific partition key value 
&lt;/div&gt; 
&lt;div&gt;
  Container container = client.GetContainer("SalesDatabase", "OrdersContainer"); 
&lt;/div&gt; 
&lt;div&gt;
  user.CreatePermissionAsync( 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; new PermissionProperties( 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; id: "permissionUser1Orders", 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; permissionMode: PermissionMode.All, 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; container: benchmark.container, 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; resourcePartitionKey: new PartitionKey("012345"))); 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Code sample to read permission for user 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The following code snippet shows how to retrieve the permission associated with the user created above and instantiate a new CosmosClient on behalf of the user, scoped to a single partition key. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  //Read a permission, create user client session. 
&lt;/div&gt; 
&lt;div&gt;
  PermissionProperties permissionProperties = await user.GetPermission("permissionUser1Orders") 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  CosmosClient client = new CosmosClient(accountEndpoint: "MyEndpoint", authKeyOrResourceToken: permissionProperties.Token); 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Secure access to data in Azure Cosmos DB" url="https://docs.microsoft.com/en-us/azure/cosmos-db/secure-access-to-data"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Ensure that your users have the right permissions for their needs.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:26.523">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-A03" name="Create Individual Accounts for the administrator users" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Create an individual account for the administrator users and with this new accounts By creating individual Azure users for people accessing your account, you can give each Azure user a unique set of security credentials.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The administrator accounts shall be used for the administrative actions and for giving or revoke credentials to the user's account. The administrator account shall be not used as a normal user account. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt; 
  &lt;li&gt;Select Azure Active Directory.&lt;/li&gt; 
  &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt; 
  &lt;li&gt;Select &amp;quot;Add New User&amp;quot;.&lt;/li&gt; 
  &lt;li&gt;Fill the required information and click &amp;quot;Create&amp;quot;.&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt; 
&lt;div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Add new users to Azure Active Directory" url="https://docs.microsoft.com/en-us/azure/active-directory/add-users-azure-active-directory"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each user has got a user account assigned.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:26.523">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-A10" name="Create mechanisms to ensure the principle of least privilege is applied" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Create the mechanisms to review periodically the group and user permissions to ensure the least privilege for the user accounts. Granting least privilege ensures that users only have the permissions required to complete their jobs rather than additional privileges that are not required. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Following this model ensures that, should an account be compromised, the blast radius of damage is limited&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Allocate privileges via groups or roles via the recommendation in "Use RBAC with pre-defined policies added into groups or roles".&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt; 
&lt;div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Create a group and add members in Azure Active Directory" url="https://docs.microsoft.com/en-us/azure/active-directory/active-directory-groups-create-azure-portal"/>
            <reference name="MS Azure - Use Role-Based Access Control to manage access to your Azure subscription resources" url="https://docs.microsoft.com/en-us/azure/active-directory/role-based-access-control-configure"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that the principle of least privilege is achieved in the assignation of roles and
                            groups to the users.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:26.524">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-L01" name="Enable diagnostic logs auditing for Microsoft Azure" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Diagnostic Logs capture activity to the data access plane while the Activity log is a subscription-level log for the control plane. Resource-level diagnostic logs provide insight into operations that were performed within that resource itself, for example, getting a secret from a Key Vault. Currently, 32 Azure resources support Diagnostic Logging (See the references section for a complete list), including Network Security Groups, Load Balancers, Key Vault, AD, Logic Apps and CosmosDB. The content of these logs varies by resource type. For example, Windows event system logs are a category of diagnostics logs for VMs, and blob, table, and queue logs are categories of diagnostics logs for storage accounts.&lt;/p&gt;&lt;p&gt;A number of back-end services were not configured to log and store Diagnostic Logs for certain activities or for a sufficient length. It is crucial that logging systems are correctly configured to log all relevant activities and retain those logs for a sufficient length of time. By default, Diagnostic Logs are not enabled. Given that the mean time to detection in an enterprise is 240 days, a minimum retention period of two years is recommended.&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation:&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;The specific steps for configuring resources within the Azure console vary depending on resource, but typically the steps are:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Go to the resource&lt;/li&gt;&lt;li&gt;Click on Diagnostic settings&lt;/li&gt;&lt;li&gt;In the blade that appears, click "Add diagnostic setting"&lt;/li&gt;&lt;li&gt;Configure the diagnostic settings&lt;/li&gt;&lt;li&gt;Click on Save&lt;/li&gt;&lt;/ol&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Enable diagnostics logging for web apps in Azure App Service" url="https://docs.microsoft.com/en-us/azure/app-service-web/web-sites-enable-diagnostic-log"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5.3" supportedStandardRef="cis-azure-standard"/>
            <standard ref="5.3" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="LT-4" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="LT-5" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Go to the resource&lt;/li&gt;&lt;li&gt;Click on Diagnostic settings&lt;/li&gt;&lt;li&gt;In the blade that appears, click "Add diagnostic setting"&lt;/li&gt;&lt;li&gt;Configure the diagnostic settings&lt;/li&gt;&lt;li&gt;Click on Save&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:26.524">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-A04" name="Enable MFA for Administrator &amp; Co Administrator accounts" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Enable multi-factor authentication (MFA) device enhances the security of the login process for the Administrator accounts. With MFA, users have a device that generates a unique authentication code (a one-time password, or OTP) and users must provide both their normal credentials (like their username and password) and the OTP. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The MFA device can either be a special piece of hardware, or it can be a virtual device. The recommendation for the Service Administrator &amp;amp; Co Administrator accounts is to use MFA to increase the level of security of the login process. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt; 
  &lt;li&gt;Select Azure Active Directory.&lt;/li&gt; 
  &lt;li&gt;Go into "Users and groups" &amp;gt; "All users".&lt;/li&gt; 
  &lt;li&gt;Select "Multi-Factor Authentication".&lt;/li&gt; 
  &lt;li&gt;Choose all the Service Administrator &amp;amp; Co Administrator accounts and enable MFA.&amp;nbsp;&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - How to require two-step verification for a user or group" url="https://docs.microsoft.com/en-us/azure/multi-factor-authentication/multi-factor-authentication-get-started-user-states"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;Multi-Factor Authentication&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check all Administrator accounts have got the MFA flag enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:26.524">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-USER-MFA" name="Enable per-user MFA" issueId="" issueLink="" platform="" cost="0" risk="40" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Enable per-user MFA 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  Multi-factor authentication (MFA) is a process where a user is prompted during a sign-in event for additional forms of identification. This prompt could be to enter a code on their cellphone or to provide a fingerprint scan. When you require a second form of authentication, security is increased as this additional factor isn't something that's easy for an attacker to obtain or duplicate. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  To secure user sign-in events in Azure AD, you can require multi-factor authentication (MFA). Enabling Azure AD Multi-Factor Authentication using Conditional Access policies is the recommended approach to protect users. Conditional Access is an Azure AD Premium P1 or P2 feature that lets you apply rules to require MFA as needed in certain scenarios 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  For Azure AD free tenants without Conditional Access, you can use security defaults to protect users. Users are prompted for MFA as needed, but you can't define your own rules to control the behavior. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Features and licenses for Azure AD Multi-Factor Authentication" url="https://docs.microsoft.com/en-us/azure/active-directory/authentication/concept-mfa-licensing"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  1. Log into the Azure portal as an owner. 
&lt;/div&gt; 
&lt;div&gt;
  2. Select Azure Active Directory. 
&lt;/div&gt; 
&lt;div&gt;
  3. Go into "Users and groups" &amp;gt; "All users". 
&lt;/div&gt; 
&lt;div&gt;
  4. Select "Multi-Factor Authentication". 
&lt;/div&gt; 
&lt;div&gt;
  5. Ensure your users have the MFA flag enabled. 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:26.524">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-COSMOS-DB3" name="Enforce a minimum TLS version server-side for Azure Cosmos DB" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Enforce a minimum TLS version server-side for Azure Cosmos DB 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  All connections to Azure Cosmos DB support HTTPS. Azure Cosmos DB also supports TLS 1.2. 
&lt;/div&gt; 
&lt;div&gt;
  It is possible to enforce a minimum TLS version server-side. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  To enforce a minimum TLS version server-side you have to contact Microsoft Azure at azurecosmosdbtls@service.microsoft.com. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Security in Azure Cosmos DB - overview" url="https://docs.microsoft.com/en-us/azure/cosmos-db/database-security"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Ensure that a minimum TLS version server-side is enforced.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:26.524">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-L05" name="Export the Audit Logs to a storage account" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Export the information of Audit Logs to a storage account. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Go to "Monitor" and then to "Activity Logs".&lt;/li&gt; 
  &lt;li&gt;Push the button "Export".&lt;/li&gt; 
  &lt;li&gt;Select "All Regions".&lt;/li&gt; 
  &lt;li&gt;Select "Export to a storage account" and select your account.&lt;/li&gt; 
  &lt;li&gt;Select the "Retention (days)" as minimum 90 days.&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Enable diagnostics logging for web apps in Azure App Service" url="https://docs.microsoft.com/en-us/azure/app-service-web/web-sites-enable-diagnostic-log"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Activity Logs&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Push the button &amp;quot;Export&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;All Regions&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;Export to a storage account&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that all fields are correctly filled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:26.524">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-N09" name="Isolate Azure instances into different VNets" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Specify a VNet for the Azure instance as a launch parameter. Applications that run on the Cloud instance can use the VNet security configuration when they access Azure resources.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  You can configure an Azure cloud service from Solution Explorer in Visual Studio. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Create a virtual network with multiple subnets" url="https://docs.microsoft.com/en-us/azure/virtual-network/virtual-networks-create-vnet-arm-pportal"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that the Azure instances are into different VNets.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:26.524">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-COSMOS-DB5" name="Modify the backup interval and retention period for Azure Cosmos DB" issueId="" issueLink="" platform="" cost="1" risk="45" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Modify the backup interval and retention period for Azure Cosmos DB 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  Azure Cosmos DB automatically takes a full backup of your data for every 4 hours and at any point of time, the latest two backups are stored. This configuration is the default option and it's offered without any additional cost. You can change the default backup interval and retention period during the Azure Cosmos account creation or after the account is created. The backup configuration is set at the Azure Cosmos account level and you need to configure it on each account. After you configure the backup options for an account, it's applied to all the containers within that account. Currently you can change them backup options from Azure portal only. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  If you have accidentally deleted or corrupted your data, before you create a support request to restore the data, make sure to increase the backup retention for your account to at least seven days. It's best to increase your retention within 8 hours of this event. This way, the Azure Cosmos DB team has enough time to restore your account. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  CAUTION: Azure support is available for selected plans only such as Standard, Developer, and plans higher than those. Azure support is not available with Basic plan. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  Use the following steps to change the default backup options for an existing Azure Cosmos account: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  1. Sign into the Azure portal. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  2. Navigate to your Azure Cosmos account and open the Backup &amp;amp; Restore pane. Update the backup interval and the backup retention period as required. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - Backup Interval - It's the interval at which Azure Cosmos DB attempts to take a backup of your data. Backup takes a non-zero amount of time and in some case it could potentially fail due to downstream dependencies. Azure Cosmos DB tries its best to take a backup at the configured interval, however, it doesn't guarantee that the backup completes within that time interval. You can configure this value in hours or minutes. Backup Interval cannot be less than 1 hour and greater than 24 hours. When you change this interval, the new interval takes into effect starting from the time when the last backup was taken. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - Backup Retention - It represents the period where each backup is retained. You can configure it in hours or days. The minimum retention period can't be less than two times the backup interval (in hours) and it can't be greater than 720 hours. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - Copies of data retained - By default, two backup copies of your data are offered at free of charge. There is an additional charge if you need more than two copies. See the Consumed Storage section in the Pricing page to know the exact price for additional copies. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  If you configure backup options during the account creation, you can configure the Backup policy, which is either Periodic or Continuous. The periodic policy allows you to configure the Backup interval and Backup retention. The continuous policy is currently available by sign-up only. The Azure Cosmos DB team will assess your workload and approve your request. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Online backup and on-demand data restore in Azure Cosmos DB" url="https://docs.microsoft.com/en-us/azure/cosmos-db/online-backup-and-restore"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Ensure that the backup interval and retention period for Azure Cosmos DB is configured according to your needs, and you are using a plan eligible for Azure support.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:26.524">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-A07" name="Recertify user access" issueId="" issueLink="" platform="" cost="0" risk="40" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Do regular reviews of accounts on the system and verify that it doesn't exist stoled or fake
                        accounts. With this process is ensured that there are not compromised accounts by former
                        employees or by attackers.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        At least every 90 days complete the following:&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Log in to the Azure portal as an owner.&lt;/li&gt;
                        &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                        &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;For any user that should not exist:&lt;/li&gt;
                        &lt;li&gt;Select the user.&lt;/li&gt;
                        &lt;li&gt;Click &amp;quot;Delete&amp;quot;.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Assign a user or group to an enterprise app in Azure Active Directory" url="https://docs.microsoft.com/en-us/azure/active-directory/active-directory-coreapps-assign-user-azure-portal"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Log in to the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each user has got an assigned account.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:26.524">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-COSMOS-DB2" name="Rotate Azure Cosmos DB primary keys" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Rotate Azure Cosmos DB primary keys 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  Microsoft recommends that you regularly rotate and regenerate your keys. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  The process of rotating your primary key is simple. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  1. Navigate to the Azure portal to retrieve your secondary key. 
&lt;/div&gt; 
&lt;div&gt;
  2. Replace your primary key with your secondary key in your application. Make sure that all the Cosmos DB clients across all the deployments are promptly restarted and will start using the updated key. 
&lt;/div&gt; 
&lt;div&gt;
  3. Rotate the primary key in the Azure portal. 
&lt;/div&gt; 
&lt;div&gt;
  4. Validate the new primary key works against all resource. Key rotation process can take anywhere from less than a minute to hours depending on the size of the Cosmos DB account. 
&lt;/div&gt; 
&lt;div&gt;
  5. Replace the secondary key with the new primary key. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Secure access to data in Azure Cosmos DB" url="https://docs.microsoft.com/en-us/azure/cosmos-db/secure-access-to-data"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Ensure that you rotate your primary key regularly.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:26.524">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-N01" name="Set Network Security Groups to be as restrictive as possible" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Use Network Security Groups (NSG) to filter the ingress/egress network traffic to Azure resources. Set the limit all the traffic (ingress/egress) on the NSG in order to force the use of least privilege into the NSG.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Identify Azure resources for each NSG.&lt;/li&gt; 
  &lt;li&gt;Create a set of least privilege NSG for those resources.&lt;/li&gt; 
  &lt;li&gt;Place the resources in those security groups.&lt;/li&gt; 
  &lt;li&gt;Change the inbound/outbound security rules to fulfill the least privilege.&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - How to open ports to a virtual machine with the Azure portal" url="https://docs.microsoft.com/en-us/azure/virtual-machines/windows/nsg-quickstart-portal"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Check that each Azure resources has got their Network Security Groups.&lt;/li&gt;
                            &lt;li&gt;Check that a set of these groups achieve with the principle of the least
                            privilege.&lt;/li&gt;
                            &lt;li&gt;Check that the inbound/outbound security rules are enabled and correctly
                            configured.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:26.524">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-N02" name="Use Network Security Groups to block inbound port traffic from 0.0.0.0/0" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Use Network Security Groups (NSG) to filter the ingress/egress network traffic to Azure resources. Set the limit inbound access to all TCP or all ports to avoid undue exposure to risk.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt; 
  &lt;li&gt;Select Network Security Groups.&lt;/li&gt; 
  &lt;li&gt;Choose the NSG to edit (or create a new one).&lt;/li&gt; 
  &lt;li&gt;In "Inbound security rules":&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;ul&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Remove all rules that allow port traffic.&lt;/li&gt; 
   &lt;li&gt;Add a rule to deny port traffic&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/ul&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - How to open ports to a virtual machine with the Azure portal" url="https://docs.microsoft.com/en-us/azure/virtual-machines/windows/nsg-quickstart-portal"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Network Security Groups.&lt;/li&gt;
                            &lt;li&gt;Choose the NSG to view one of them.&lt;/li&gt;
                            &lt;li&gt;In &amp;quot;Inbound security rules&amp;quot;, check that all the traffic from
                            0.0.0.0/0 is are blocked.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:26.524">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="authentication" name="Authentication" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="AZURE-LOST-ACCESS-ROOT" name="Attackers gain unauthorized access to the root account due to the lack of configuration of the account" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;div&gt;Attackers could gain unauthorized access to the administrator account due to a lack of configuration of the account and its security mechanisms, making it possible to modify credentials and add/remove user accounts.
                                &lt;/div&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="AZ-W04">
                  <countermeasures>
                    <countermeasure ref="AZ-A04" mitigation="50"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AZURE-MON02">
                  <countermeasures>
                    <countermeasure ref="AZ-A03" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-A03" mitigation="50"/>
                <countermeasure ref="AZ-A04" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="AZURE-LOST-ACCESS-USER" name="Attackers gain unauthorized access to the user account due to the lack of configuration of the account" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;Attackers could gain unauthorized access to the user account due to the lack of configuration of the account, for example, the security question to reset the password is configured incorrectly.&lt;/p&gt;</desc>
              <riskRating confidentiality="50" integrity="50" availability="50" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-IDENTITY-03">
                  <countermeasures>
                    <countermeasure ref="AZ-A07" mitigation="50"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AZURE-MON03">
                  <countermeasures>
                    <countermeasure ref="AZURE-USER-MFA" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-A07" mitigation="50"/>
                <countermeasure ref="AZURE-USER-MFA" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="authorization" name="Authorization" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="LOSS-CONTROL_ENV" name="Attackers gain unauthorized access to the control of the environment" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;Attackers could potentially gain unauthorized access to the control of the environment, due to user accounts - or role groups - not being well defined and configured. As a consequence attackers may be able to make changes without root approval.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="75" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-ACCESS-01">
                  <countermeasures>
                    <countermeasure ref="AZ-A09" mitigation="20"/>
                    <countermeasure ref="AZ-A10" mitigation="16"/>
                    <countermeasure ref="AZ-A11" mitigation="16"/>
                    <countermeasure ref="AZURE-COSMOS-DB1" mitigation="16"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AZURE-EXPIRATION-DATE">
                  <countermeasures>
                    <countermeasure ref="AZ-A12" mitigation="16"/>
                    <countermeasure ref="AZURE-COSMOS-DB2" mitigation="16"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-A09" mitigation="20"/>
                <countermeasure ref="AZ-A10" mitigation="16"/>
                <countermeasure ref="AZ-A11" mitigation="16"/>
                <countermeasure ref="AZ-A12" mitigation="16"/>
                <countermeasure ref="AZURE-COSMOS-DB1" mitigation="16"/>
                <countermeasure ref="AZURE-COSMOS-DB2" mitigation="16"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="general" name="General" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="AZURE-DATA-DELETED-EASY" name="Data is intentionally or accidentally deleted" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;Data can be deleted intentionally or accidentally and cannot be recovered. Attackers could rely on the lack of backup and recovery mechanisms.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-MONITOR-BACKUPS">
                  <countermeasures>
                    <countermeasure ref="AZURE-COSMOS-DB4" mitigation="50"/>
                    <countermeasure ref="AZURE-COSMOS-DB5" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZURE-COSMOS-DB4" mitigation="50"/>
                <countermeasure ref="AZURE-COSMOS-DB5" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="logging-and-monitoring" name="Logging and Monitoring" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="OWASP A10:2017" name="Exploitation of insufficient logging and monitoring" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>	&lt;p&gt;Exploitation of insufficient logging and monitoring is the bedrock of nearly every major incident.&lt;br /&gt;
 Attackers rely on the lack of monitoring and timely response to achieve their goals without being detected.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="AZ-L01" mitigation="34"/>
                    <countermeasure ref="AZ-L05" mitigation="33"/>
                    <countermeasure ref="AZURE-COSMOS-DB6" mitigation="33"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-L01" mitigation="34"/>
                <countermeasure ref="AZ-L05" mitigation="33"/>
                <countermeasure ref="AZURE-COSMOS-DB6" mitigation="33"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="networking" name="Networking" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="AZURE-UNAUTHORISED-CONNECTION" name="Attackers perform unauthorized network access" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;Attackers could perform unauthorized network access to the resources through misconfigured ports or security network configurations.&lt;/p&gt;</desc>
              <riskRating confidentiality="25" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-NET-01">
                  <countermeasures>
                    <countermeasure ref="AZ-N01" mitigation="34"/>
                    <countermeasure ref="AZ-N02" mitigation="33"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AZURE-VNET01">
                  <countermeasures>
                    <countermeasure ref="AZ-N09" mitigation="33"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-N01" mitigation="34"/>
                <countermeasure ref="AZ-N02" mitigation="33"/>
                <countermeasure ref="AZ-N09" mitigation="33"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="DATA-EXPOSED-CHANNEL" name="The data is exposed through the transmission channel" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;Attackers can obtain the data through the transmitted channel because this does not have the security measures in place to protect the data&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="DATA-TRANSMIT-CLEAR">
                  <countermeasures>
                    <countermeasure ref="AZURE-COSMOS-DB3" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZURE-COSMOS-DB3" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="2e692b1c-9d88-4535-8e8c-6bc71e653cbf" diagramComponentId="463feb9a-80fd-4631-9a7c-56a5e14de045" ref="f48b309e-2c07-48e6-9bcf-e0bae44177a5" name="Azure Container Instances" desc="" library="Microsoft-Azure" parentComponentRef="e8b36dfe-741a-4fc9-95fe-c744d87af442" componentDefinitionRef="CD-MICROSOFT-AZURE-CONTAINER-INSTANCES">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses>
        <weakness ref="AZURE-NET-01" name="Unauthorized connection attempts on open ports" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        Receiving unauthorized connections to open ports makes systems vulnerable to attacks. To
                        avoid this, access to the network must be as restricted as possible, so that only the necessary
                        ports are open and the minimum inbound traffic is accepted.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Check that each Azure resources have got their Network Security Groups.&lt;/li&gt;
                            &lt;li&gt;Check that a set of these groups achieve with the principle of the least
                            privilege.&lt;/li&gt;
                            &lt;li&gt;Check that the inbound/outbound security rules are enabled and correctly
                            configured.&lt;/li&gt;
                            &lt;li&gt;In &amp;quot;Inbound security rules&amp;quot;, check that all the traffic from
                            0.0.0.0/0&amp;nbsp;is blocked.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:30.457">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="AZURE-IDS-IPS" name="Deploy network-based IDS/IPS" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Deploy network-based intrusion detection/intrusion prevention systems (IDS/IPS)&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Select an offer from Azure Marketplace that supports IDS/IPS functionality with payload inspection capabilities. If intrusion detection and/or prevention based on payload inspection is not a requirement, Azure Firewall with Threat Intelligence can be used. Azure Firewall Threat intelligence-based filtering can alert and deny traffic to and from known malicious IP addresses and domains. The IP addresses and domains are sourced from the Microsoft Threat Intelligence feed.&lt;/p&gt; 
&lt;p&gt;Deploy the firewall solution of your choice at each of your organization's network boundaries to detect and/or deny malicious traffic.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Set up the network&lt;/p&gt; 
&lt;p&gt;First, create a resource group to contain the resources needed to deploy the firewall. Then create a VNet, subnets, and a test server.&lt;br&gt; For more information please see Reference URL.&lt;/p&gt; 
&lt;p&gt;Deploy the firewall&lt;/p&gt; 
&lt;p&gt;Deploy the firewall into the VNet.&lt;/p&gt; 
&lt;p&gt;1. On the Azure portal menu or from the Home page, select Create a resource.&lt;/p&gt; 
&lt;p&gt;2. Type firewall in the search box and press Enter.&lt;/p&gt; 
&lt;p&gt;3. Select Firewall and then select Create.&lt;/p&gt; 
&lt;p&gt;4. On the Create a Firewall page, use the following values to configure the firewall:&lt;/p&gt; 
&lt;p&gt;Subscription: &lt;br&gt; Resource group: Test-FW-RG&lt;br&gt; Name: Test-FW01&lt;br&gt; Location: Select the same location that you used previously&lt;br&gt; Choose a virtual network: Use existing: Test-FW-VN&lt;br&gt; Public IP address: Add new&lt;br&gt; Name: fw-pip&lt;/p&gt; 
&lt;p&gt;5. Select Review + create.&lt;/p&gt; 
&lt;p&gt;6. Review the summary, and then select Create to create the firewall.&lt;/p&gt; 
&lt;p&gt;This will take a few minutes to deploy.&lt;/p&gt; 
&lt;p&gt;7. After deployment completes, go to the Test-FW-RG resource group, and select the Test-FW01 firewall.&lt;/p&gt; 
&lt;p&gt;8. Note the firewall private and public IP addresses. You will use these addresses later.&lt;/p&gt; 
&lt;p&gt;Create a default route&lt;/p&gt; 
&lt;p&gt;For the Workload-SN subnet, configure the outbound default route to go through the firewall.&lt;/p&gt; 
&lt;p&gt;1. On the Azure portal menu, select All services or search for and select All services from any page.&lt;/p&gt; 
&lt;p&gt;2. Under Networking, select Route tables.&lt;/p&gt; 
&lt;p&gt;3. Select Add.&lt;/p&gt; 
&lt;p&gt;4. For Name, type Firewall-route.&lt;/p&gt; 
&lt;p&gt;5. For Subscription, select your subscription.&lt;/p&gt; 
&lt;p&gt;6. For Resource group, select Test-FW-RG.&lt;/p&gt; 
&lt;p&gt;7. For Location, select the same location that you used previously.&lt;/p&gt; 
&lt;p&gt;8. Select Create.&lt;/p&gt; 
&lt;p&gt;9. Select Refresh, and then select the Firewall-route route table.&lt;/p&gt; 
&lt;p&gt;10. Select Subnets and then select Associate.&lt;/p&gt; 
&lt;p&gt;11. Select Virtual network &amp;gt; Test-FW-VN.&lt;/p&gt; 
&lt;p&gt;12. For Subnet, select Workload-SN. Make sure that you select only the Workload-SN subnet for this route, otherwise your firewall will not work correctly.&lt;/p&gt; 
&lt;p&gt;13. Select OK.&lt;/p&gt; 
&lt;p&gt;14. Select Routes and then select Add.&lt;/p&gt; 
&lt;p&gt;15. For Route name, type fw-dg.&lt;/p&gt; 
&lt;p&gt;16. For Address prefix, type 0.0.0.0/0.&lt;/p&gt; 
&lt;p&gt;17. For Next hop type, select Virtual appliance.&lt;/p&gt; 
&lt;p&gt;Azure Firewall is actually a managed service, but virtual appliance works in this situation.&lt;/p&gt; 
&lt;p&gt;18. For Next hop address, type the private IP address for the firewall that you noted previously.&lt;/p&gt; 
&lt;p&gt;19. Select OK.&lt;/p&gt; 
&lt;p&gt;Configure an application rule&lt;/p&gt; 
&lt;p&gt;This is the application rule that allows outbound access to www.google.com.&lt;/p&gt; 
&lt;p&gt;1. Open the Test-FW-RG, and select the Test-FW01 firewall.&lt;br&gt; 2. On the Test-FW01 page, under Settings, select Rules.&lt;br&gt; 3. Select the Application rule collection tab.&lt;br&gt; 4. Select Add application rule collection.&lt;br&gt; 5. For Name, type App-Coll01.&lt;br&gt; 6. For Priority, type 200.&lt;br&gt; 7. For Action, select Allow.&lt;br&gt; 8. Under Rules, Target FQDNs, for Name, type Allow-Google.&lt;br&gt; 9. For Source type, select IP address.&lt;br&gt; 10. For Source, type 10.0.2.0/24.&lt;br&gt; 11. For Protocol:port, type http, https.&lt;br&gt; 12. For Target FQDNS, type www.google.com&lt;br&gt; 13. Select Add.&lt;/p&gt; 
&lt;p&gt;Azure Firewall includes a built-in rule collection for infrastructure FQDNs that are allowed by default. These FQDNs are specific for the platform and cannot be used for other purposes. For more information, see Infrastructure FQDNs.&lt;/p&gt; 
&lt;p&gt;Configure a network rule&lt;/p&gt; 
&lt;p&gt;This is the network rule that allows outbound access to two IP addresses at port 53 (DNS).&lt;/p&gt; 
&lt;p&gt;1. Select the Network rule collection tab.&lt;/p&gt; 
&lt;p&gt;2. Select Add network rule collection.&lt;/p&gt; 
&lt;p&gt;3. For Name, type Net-Coll01.&lt;/p&gt; 
&lt;p&gt;4. For Priority, type 200.&lt;/p&gt; 
&lt;p&gt;5. For Action, select Allow.&lt;/p&gt; 
&lt;p&gt;6. Under Rules, IP addresses, for Name, type Allow-DNS.&lt;/p&gt; 
&lt;p&gt;7. For Protocol, select UDP.&lt;/p&gt; 
&lt;p&gt;8. For Source type, select IP address.&lt;/p&gt; 
&lt;p&gt;9. For Source, type 10.0.2.0/24.&lt;/p&gt; 
&lt;p&gt;10. For Destination type select IP address.&lt;/p&gt; 
&lt;p&gt;11. For Destination address, type 209.244.0.3,209.244.0.4&lt;/p&gt; 
&lt;p&gt;These are public DNS servers operated by CenturyLink.&lt;/p&gt; 
&lt;p&gt;12. For Destination Ports, type 53.&lt;/p&gt; 
&lt;p&gt;13. Select Add.&lt;/p&gt; 
&lt;p&gt;Configure a DNAT rule&lt;/p&gt; 
&lt;p&gt;This rule allows you to connect a remote desktop to the Srv-Work virtual machine through the firewall.&lt;/p&gt; 
&lt;p&gt;1. Select the NAT rule collection tab.&lt;br&gt; 2. Select Add NAT rule collection.&lt;br&gt; 3. For Name, type rdp.&lt;br&gt; 4. For Priority, type 200.&lt;br&gt; 5. Under Rules, for Name, type rdp-nat.&lt;br&gt; 6. For Protocol, select TCP.&lt;br&gt; 7. For Source type, select IP address.&lt;br&gt; 8. For Source, type *.&lt;br&gt; 9. For Destination address, type the firewall public IP address.&lt;br&gt; 10. For Destination Ports, type 3389.&lt;br&gt; 11. For Translated address, type the Srv-work private IP address.&lt;br&gt; 12. For Translated port, type 3389.&lt;br&gt; 13. Select Add.&lt;/p&gt; 
&lt;p&gt;Change the primary and secondary DNS address for the Srv-Work network interface&lt;/p&gt; 
&lt;p&gt;For testing purposes in this tutorial, configure the server's primary and secondary DNS addresses. This is not a general Azure Firewall requirement.&lt;/p&gt; 
&lt;p&gt;1. On the Azure portal menu, select Resource groups or search for and select Resource groups from any page. Select the Test-FW-RG resource group.&lt;br&gt; 2. Select the network interface for the Srv-Work virtual machine.&lt;br&gt; 3. Under Settings, select DNS servers.&lt;br&gt; 4. Under DNS servers, select Custom.&lt;br&gt; 5. Type 209.244.0.3 in the Add DNS server text box, and 209.244.0.4 in the next text box.&lt;br&gt; 6. Select Save.&lt;br&gt; 7. Restart the Srv-Work virtual machine.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Tutorial: Deploy and configure Azure Firewall using the Azure portal" url="https://docs.microsoft.com/en-us/azure/firewall/tutorial-firewall-deploy-portal"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Test the firewall&lt;/p&gt;

  &lt;p&gt;Now, test the firewall to confirm that it works as expected.&lt;/p&gt;

  &lt;p&gt;1. Connect a remote desktop to firewall public IP address and sign in to the Srv-Work virtual machine.&lt;/p&gt;

  &lt;p&gt;2. Open Internet Explorer and browse to https://www.google.com.&lt;/p&gt;

  &lt;p&gt;3. Select OK &gt; Close on the Internet Explorer security alerts.&lt;/p&gt;

  &lt;p&gt;You should see the Google home page.&lt;/p&gt;

  &lt;p&gt;4. Browse to https://www.microsoft.com.&lt;/p&gt;

  &lt;p&gt;You should be blocked by the firewall.&lt;/p&gt;

  &lt;p&gt;So now you've verified that the firewall rules are working:&lt;/p&gt;

  &lt;p&gt;- You can browse to the one allowed FQDN, but not to any others.&lt;br /&gt;
- You can resolve DNS names using the configured external DNS server.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:30.423">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-ADAPTIVE-NET-HARDENING" name="Use Security Center's Adaptive Network Hardening" issueId="" issueLink="" platform="" cost="1" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Use Security Center's Adaptive Network Hardening&lt;/p&gt;

	&lt;p&gt;Rationale:&lt;br /&gt;
Applying network security groups (NSG) to filter traffic to and from resources, improves your network security posture. However, there can still be some cases in which the actual traffic flowing through the NSG is a subset of the NSG rules defined. In these cases, further improving the security posture can be achieved by hardening the NSG rules, based on the actual traffic patterns.&lt;/p&gt;

	&lt;p&gt;Adaptive network hardening provides recommendations to further harden the NSG rules. It uses a machine learning algorithm that factors in actual traffic, known trusted configuration, threat intelligence, and other indicators of compromise, and then provides recommendations to allow traffic only from specific IP/port tuples.&lt;/p&gt;

	&lt;p&gt;Note: Adaptive network hardening recommendations are only supported on the following specific ports (for both UDP and TCP): 13, 17, 19, 22, 23, 53, 69, 81, 111, 119, 123, 135, 137, 138, 139, 161, 162, 389, 445, 512, 514, 593, 636, 873, 1433, 1434, 1900, 2049, 2301, 2323, 2381, 3268, 3306, 3389, 4333, 5353, 5432, 5555, 5800, 5900, 5900, 5985, 5986, 6379, 6379, 7000, 7001, 7199, 8081, 8089, 8545, 9042, 9160, 9300, 11211, 16379, 26379, 27017, 37215&lt;/p&gt;

	&lt;p&gt;Remediation:&lt;br /&gt;
View and manage hardening alerts and rules&lt;/p&gt;

	&lt;p&gt;1. From Security Center's menu, open the Azure Defender dashboard and select the adaptive network hardening tile, or the insights panel item related to adaptive network hardening.&lt;/p&gt;

	&lt;p&gt;Tip: The insights panel shows the percentage of your VMs currently defended with adaptive network hardening.&lt;/p&gt;

	&lt;p&gt;The details page for the Adaptive Network Hardening recommendations should be applied on internet facing virtual machines recommendation opens with your network VMs grouped into three tabs:&lt;/p&gt;

	&lt;p&gt;a. Unhealthy resources: VMs that currently have recommendations and alerts that were triggered by running the adaptive network hardening algorithm.&lt;/p&gt;

	&lt;p&gt;b. Healthy resources: VMs without alerts and recommendations.&lt;/p&gt;

	&lt;p&gt;c. Unscanned resources: VMs that the adaptive network hardening algorithm cannot be run on because of one of the following reasons:&lt;br /&gt;
i. VMs are Classic VMs: Only Azure Resource Manager VMs are supported.&lt;br /&gt;
ii. Not enough data is available: In order to generate accurate traffic hardening recommendations, Security Center requires at least 30 days of traffic data.&lt;br /&gt;
iii. VM is not protected by Azure Defender: Only VMs protected with Azure Defender for servers are eligible for this feature.&lt;/p&gt;

	&lt;p&gt;3. From the Unhealthy resources tab, select a VM to view its alerts and the recommended hardening rules to apply.&lt;/p&gt;

	&lt;p&gt;- The Rules tab lists the rules that adaptive network hardening recommends you add&lt;br /&gt;
- The Alerts tab lists the alerts that were generated due to traffic, flowing to the resource, which is not within the IP range allowed in the recommended rules.&lt;/p&gt;

	&lt;p&gt;4. Optionally, edit the rules:&lt;/p&gt;

	&lt;p&gt;- Modify a rule&lt;br /&gt;
- Delete a rule&lt;br /&gt;
- Add a rule&lt;/p&gt;

	&lt;p&gt;5. Select the rules that you want to apply on the NSG, and click Enforce.&lt;/p&gt;

	&lt;p&gt;Tip: If the allowed source IP ranges shows as 'None', it means that recommended rule is a deny rule, otherwise, it is an allow rule.&lt;/p&gt;

	&lt;p&gt;Note: The enforced rules are added to the &lt;acronym title="s"&gt;NSG&lt;/acronym&gt; protecting the VM. (A VM could be protected by an NSG that is associated to its NIC, or the subnet in which the VM resides, or both)&lt;/p&gt;

	&lt;p&gt;Impact:&lt;br /&gt;
None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Improve your network security posture with adaptive network hardening" url="https://docs.microsoft.com/en-us/azure/security-center/security-center-adaptive-network-hardening"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that Security Center's Adaptive Network Hardening recommendations are enforced  to your NSG configurations.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:30.423">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="NETWORKING" name="Networking" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="AZURE-UNAUTHORISED-CONNECTION" name="Attackers perform unauthorized network access" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;Attackers could perform unauthorized network access to the resources through misconfigured ports or security network configurations.&lt;/p&gt;</desc>
              <riskRating confidentiality="25" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-NET-01">
                  <countermeasures>
                    <countermeasure ref="AZURE-ADAPTIVE-NET-HARDENING" mitigation="50"/>
                    <countermeasure ref="AZURE-IDS-IPS" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZURE-ADAPTIVE-NET-HARDENING" mitigation="50"/>
                <countermeasure ref="AZURE-IDS-IPS" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="063dbcc7-e86a-4839-8477-1c5d304e2a46" diagramComponentId="e1fcd36a-4400-4f7d-aa53-a559d723a8bc" ref="f15c4428-4d47-4024-bbf5-e1582ce0659a" name="Azure Private Link" desc="" library="Microsoft-Azure" parentComponentRef="87b459b6-d494-41b4-9cf5-c79f7d4d6830" componentDefinitionRef="CD-MICROSOFT-AZURE-PRIVATE-LINK">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses>
        <weakness ref="CWE-778" name="Insufficient Logging" state="0" impact="100" issueId="" issueLink="">
          <desc>When a critical security event occurs, the software either does not record the event or omits important details about the event when logging it. When critical security events are not logged properly, such as in the case of a failed login attempt, this can make malicious behavior more difficult to detect and may hinder forensic analyses after a successful attack.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:30.321">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="AZURE-MONITOR5" name="Create activity log alerts by using Azure Monitor" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Create activity log alerts by using Azure Monitor 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  Activity log alerts are the alerts that get activated when a new activity log event occurs that matches the conditions specified in the alert. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  These alerts are for Azure resources and can be created by using an Azure Resource Manager template. They also can be created, updated, or deleted in the Azure portal. Typically, you create activity log alerts to receive notifications when specific changes occur to resources in your Azure subscription. Alerts are often scoped to particular resource groups or resources. For example, you might want to be notified when any virtual machine in the sample resource group myProductionResourceGroup is deleted. Or, you might want to get notified if any new roles are assigned to a user in your subscription. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  Create with the Azure portal 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Use the following procedure. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  1. In the Azure portal, select Monitor &amp;gt; Alerts. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  2. Select New alert rule in the upper-left corner of the Alerts window. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The Create rule window appears. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  3. Under Define alert condition, provide the following information, and select Done: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - Alert target: To view and select the target for the new alert, use Filter by subscription / Filter by resource type. Select the resource or resource group from the list displayed. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Note: You can select only Azure Resource Manager tracked resource, resource group, or an entire subscription for an activity log signal. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - Under Target criteria, select Add criteria. All available signals for the target are displayed, which includes those from various categories of Activity Log. The category name is appended to the Monitor Service name. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - Select the signal from the list displayed of various operations possible for the type Activity Log. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  You can select the log history time-line and the corresponding alert logic for this target signal: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Note: In order to have a high quality and effective rules, Azure asks to add at least one more condition to rules with the signal "All Administrative". As a part of the definition of the alert you must fill one of the drop downs: "Event level", "Status" or "Initiated by" and by that the rule will be more specific. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - History time: Events available for the selected operation can be plotted over the last 6, 12, or 24 hours or over the last week. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - Alert logic: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; -- Event level: The severity level of the event: Verbose, Informational, Warning, Error, or Critical. 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; -- Status: The status of the event: Started, Failed, or Succeeded. 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; -- Event initiated by: Also known as the caller. The email address or Azure Active Directory identifier of the user who performed the operation. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  4. Under Define alert details, provide the following details: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - Alert rule name: The name for the new alert rule. 
&lt;/div&gt; 
&lt;div&gt;
  - Description: The description for the new alert rule. 
&lt;/div&gt; 
&lt;div&gt;
  - Save alert to resource group: Select the resource group where you want to save this new rule. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  5. Under Action group, from the drop-down menu, specify the action group that you want to assign to this new alert rule. Or, create a new action group and assign it to the new rule. To create a new group, select + New group. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  6. To enable the rules after you create them, select Yes for the Enable rule upon creation option. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  7. Select Create alert rule. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The new alert rule for the activity log is created, and a confirmation message appears in the upper-right corner of the window. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  You can enable, disable, edit, or delete a rule. Learn more about how to manage activity log rules. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  A simple analogy for understanding conditions on which alert rules can be created in an activity log is to explore or filter events via the activity log in the Azure portal. In the Azure Monitor - Activity log screen, you can filter or find the necessary event and then create an alert by using the Add activity log alert button. Then follow steps 4 through 7 as previously shown. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Create, view, and manage activity log alerts by using Azure Monitor" url="https://docs.microsoft.com/en-us/azure/azure-monitor/platform/alerts-activity-log"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  View and manage in the Azure portal 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  1. In the Azure portal, select Monitor &amp;gt; Alerts. Select Manage alert rules in the upper-left corner of the window. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The list of available rules appears. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  2. Search for the activity log rule to modify. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  You can use the available filters, Subscription, Resource group, Resource, Signal type, or Status, to find the activity rule that you want to edit. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Note: You can edit only Description, Target criteria, and Action groups. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  3. Select the rule, and double-click to edit the rule options. Make the required changes, and then select Save. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  4. You can enable, disable, or delete a rule. Select the appropriate option at the top of the window after you select the rule as described in step 2. 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:30.295">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="LOGGING AND MONITORING" name="Logging and Monitoring" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="INSUFFICIENT-LOGGING-MONITORING" name="Exploitation of insufficient logging and monitoring" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;Exploitation of insufficient logging and monitoring is the bedrock of nearly every major incident. Attackers rely on the lack of monitoring and timely response to achieve their goals without being detected.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="AZURE-MONITOR5" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZURE-MONITOR5" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="b5d3e8b3-67e3-419d-a18d-0cbeca77843c" diagramComponentId="364cb003-db35-4385-a421-1b5c2493de0f" ref="56fc26e4-799f-46dd-a08c-32d3804659f6" name="Azure Container Registry" desc="" library="Microsoft-Azure" parentComponentRef="b359f0ab-6790-4cbb-b7ae-c451ccbda797" componentDefinitionRef="CD-MICROSOFT-AZURE-CONTAINER-REGISTRY">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses>
        <weakness ref="CWE-778" name="Insufficient Logging" state="0" impact="100" issueId="" issueLink="">
          <desc>When a critical security event occurs, the software either does not record the event or omits important details about the event when logging it. When critical security events are not logged properly, such as in the case of a failed login attempt, this can make malicious behavior more difficult to detect and may hinder forensic analyses after a successful attack.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:26.404">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="AZURE-NSG-FLOW-LOGS" name="Enable NSG flow logs" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Enable NSG flow logs&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; A network security group (NSG) enables you to filter inbound traffic to, and outbound traffic from, a virtual machine (VM). You can log network traffic that flows through an NSG with Network Watcher's NSG flow log capability.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Enable NSG flow log&lt;/p&gt; 
&lt;p&gt;1. NSG flow log data is written to an Azure Storage account. To create an Azure Storage account, select + Create a resource at the top, left corner of the portal.&lt;/p&gt; 
&lt;p&gt;2. Select Storage, then select Storage account - blob, file, table, queue.&lt;/p&gt; 
&lt;p&gt;3. Enter, or select the following information, accept the remaining defaults, and then select Create.&lt;/p&gt; 
&lt;p&gt;Name: 3-24 characters in length, can only contain lowercase letters and numbers, and must be unique across all Azure Storage accounts.&lt;br&gt; Location: Select East US&lt;br&gt; Resource group: Select Use existing, and then select myResourceGroup&lt;/p&gt; 
&lt;p&gt;The storage account may take around minute to create. Do not continue with remaining steps until the storage account is created. In all cases, the storage account must be in the same region as the NSG.&lt;/p&gt; 
&lt;p&gt;4. In the top, left corner of portal, select All services. In the Filter box, type Network Watcher. When Network Watcher appears in the search results, select it.&lt;/p&gt; 
&lt;p&gt;5. Under LOGS, select NSG flow logs.&lt;/p&gt; 
&lt;p&gt;6. From the list of NSGs, select the NSG named myVm-nsg.&lt;/p&gt; 
&lt;p&gt;7. Under Flow logs settings, select On.&lt;/p&gt; 
&lt;p&gt;8. Select the flow logging version. Version 2 contains flow-session statistics (Bytes and Packets)&lt;/p&gt; 
&lt;p&gt;9. Select the storage account that you created in step 3.&lt;/p&gt; 
&lt;p&gt;Note: NSG Flow Logs do not work with storage accounts that have hierarchical namespace enabled.&lt;/p&gt; 
&lt;p&gt;10. In the top, left corner of portal, select All services. In the Filter box, type Network Watcher. When Network Watcher appears in the search results, select it.&lt;/p&gt; 
&lt;p&gt;11. Set Retention (days) to 5, and then select Save.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Tutorial: Log network traffic to and from a virtual machine using the Azure portal" url="https://docs.microsoft.com/en-us/azure/network-watcher/network-watcher-nsg-flow-logging-portal"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that NSG flow logs are enabled.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:26.364">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="LOGGING AND MONITORING" name="Logging and Monitoring" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="OWASP A10:2017" name="Exploitation of insufficient logging and monitoring" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>	&lt;p&gt;Exploitation of insufficient logging and monitoring is the bedrock of nearly every major incident.&lt;br /&gt;
 Attackers rely on the lack of monitoring and timely response to achieve their goals without being detected.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="AZURE-NSG-FLOW-LOGS" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZURE-NSG-FLOW-LOGS" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="ca2b75d8-addd-4676-851e-9d5aa5ce4a4e" diagramComponentId="a0b7ae5e-d2e7-4523-90d1-60ed0993ba9f" ref="453d036d-9833-419e-9ae9-9e31606130b2" name="Kubernetes Cluster" desc="" library="kubernetes-library-devops" parentComponentRef="" componentDefinitionRef="kubernetes-cluster">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="private-secured"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses>
        <weakness ref="CP-AC-1.1" name="Default permissions are changed to become more permissive" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
  File permissions are granted to users other than the owner.&amp;nbsp; By default this access is tightly controlled by Kubernetes.&amp;nbsp; This should not be changed as it protects access to PKI and other security critical information such as cluster administration.&amp;nbsp;&amp;nbsp; 
&lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:28.742">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="PO-AS-1.1" name="Exposure of environment variables" state="0" impact="100" issueId="" issueLink="">
          <desc>Secrets stored as environment variables may be exposed by other Kubernetes processes such as the behavior of apps.&amp;nbsp; Alternative ways of storing secrets may be more suitable.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:28.031">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CP-AC-1.2" name="File ownership is extended to users unnecessarily" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
  File ownership is granted to users other than root.&amp;nbsp; Granting unintended parties complete and full control over the file and allowing them to then grant access others may expose security critical data such as credentials and certificates.&amp;nbsp; Adversaries may also be able to change the way the cluster is administered. 
&lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:28.742">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="PO-LM-1.1" name="Forensics capabilities are difficult to determine at early stages" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
  Ensuring that system policies include forensics capabilities at the planning and design stages is a challenge due to the lack of presence of security concerns in the design phase and tooling. The absence of such capabilities can result in diminishing incident response and detection capabilities. 
&lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:28.030">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="PO-LM-1.2" name="Forensics capabilities not integrated into existing architectures" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
  Ensuring that forensics capabilities are integrated into existing applications and architectures is a challenge due to lack of resources to help with the modification and lack of the necessary guidance to do so. The absence can result in diminishing incident response and detection capabilities 
&lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:28.030">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="PO-G-3.1" name="Hosts which are not properly configured threaten the integrity of the container architecture" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
  Ensuring trust in host systems that store images and launch containers is a challenge. The absence of host-hardening processes can result in the compromise of images, runtime environments, and stored data 
&lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:28.030">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="PO-G-1.1" name="Image provenance not verified" state="0" impact="100" issueId="" issueLink="">
          <desc>Not allowing Kubernetes to ensure that images are verified can increase the risk of vulnerabilities being introduced to a cluster through images.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:28.031">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="PO-AA-1.1" name="Inadequate or missing infrastructure" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
  Lack of infrastructure may result in insecure communications between containers are secured, lack of network traffic monitoring, and unauthorized access to the network traffic, resources, and configurations. 
&lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:28.031">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="PO-AC-1.2" name="Insufficient boundaries around namespaces" state="0" impact="100" issueId="" issueLink="">
          <desc>Kubernetes supports multiple virtual clusters backed by the same physical cluster. These virtual clusters are called namespaces, and they provide a way to divide cluster resources between multiple users.&amp;nbsp; Namespaces which are not carefully managed can result in objects having access to parts of the cluster which should be beyond their scope.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:28.031">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="PO-AS-1.3" name="Kubernetes secrets management may be insufficient" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
  The in-built Kubernetes secret storage may not be sufficiently robust.&amp;nbsp; Depending on needs of individual systems, it may be necessary to configure alternative mechanisms. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:28.031">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CP-LA-1.1" name="Logging not carried out by default" state="0" impact="100" issueId="" issueLink="">
          <desc>Logging must be deliberately set on Kubernetes as it is not a default configuration.&amp;nbsp; However the logging requirements must be carefully balanced against the resources that logging will consume.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:28.742">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="PO-N-2.1" name="Missing or incomplete infrastructure" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
  Monitoring network activity and providing the infrastructure to do so can present a challenge because of the complexities of container architectures and a lack of network tooling and data storage. The absence can result in diminished incident response and detection capabilities. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:28.030">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="PO-N-1.1" name="Namespace network policies" state="0" impact="100" issueId="" issueLink="">
          <desc>Despite the importance of network policies in securing pods, and therefore clusters, they are not created by default in Kubernetes.&amp;nbsp; Strong network policies should be designed and then applied to all namespaces in a cluster.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:28.030">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="PO-G-1.2" name="Pipelines or build chains not secured" state="0" impact="100" issueId="" issueLink="">
          <desc>Developers and operators need to be equally engaged in the process of code promotion across application container environments. Today, developers can push code across application container environments without the need for operator interaction.&amp;nbsp; Systems should have robust policies and procedures in place to ensure that images are secured by developers at all stages of the build chain.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:28.031">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="PO-G-3.2" name="Resource mismanagement compromises quality of service" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
  In addition to authorized resource usage, the operator faces a challenge to ensure resources are not overused or abused, because this will affect usage of others in a shared environment. The absence may result in a DOS-style scenario. 
&lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:28.030">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="PO-AC-1.1" name="Roles and service accounts" state="0" impact="100" issueId="" issueLink="">
          <desc>Service accounts and role based access controls are methods which control access to cluster resources based on object identification.&amp;nbsp; Assigning permissions to objects which should be beyond their scope can result in them being misused by adversaries.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:28.031">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="PO-G-2.1" name="Seccomp disabled" state="0" impact="100" issueId="" issueLink="">
          <desc>Seccomp can be used to control cluster workloads by restricting the set of system calls that applications can make.&amp;nbsp; Kubernetes disables it by default, it should be manually configured instead.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:28.030">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="PO-AS-1.2" name="Secrets management not configured across all areas of the system" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
  Ensuring the ability to automate the configuration of the secret management tool and dynamically generate secrets required by the application in a Continuous Integration/ Continuous Deployment (CI/CD) environment is a challenge because of the lack of best practices, tooling and automation for "key zero" (the first key in the key management system that is usually handled manually). The absence can result in the compromise of the application and/or data. 
&lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:28.031">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="W-NIST-800-190-01" name="Unauthorized hosts joining the cluster and running containers" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;Unauthorized hosts should not run containers without appropriate authentication and authorization.&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:28.029">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CP-AA-1.1" name="Unrevoked security certificates" state="0" impact="100" issueId="" issueLink="">
          <desc>While security certificates are, in general, an effective security measure for a system, they are only useful if they are properly managed and controlled.&amp;nbsp; If security certificates are not revoked they may continue to be used long after a user's access should have ceased.&amp;nbsp; &amp;nbsp; The greater the number of historical unrevoked credentials there are, the greater the likelihood that an adversary will find a way to exploit the vulnerability.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:28.742">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="PO-G-1.3" name="Vulnerability definitions may not be up to date" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
  Ensuring that components are free of vulnerabilities and updated as needed can be a challenge due to differing update frequencies by third-party vendors. This can result in the compromise of third-party components. 
&lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:28.031">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="C-NSA-HG-05" name="Apply security patches and updates and remove components when they are no longer needed" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="JamesRabe" library="kubernetes-library-devops" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Following the hardening guidance outlined in this document is a step toward ensuring the security of applications running on Kubernetes orchestrated containers. However, security is an ongoing process, and it is vital to keep up with patches, updates, and upgrades. The specific software components vary depending on the individual configuration, but each piece of the overall system should be kept as secure as possible. This includes updating: Kubernetes, hypervisors, virtualization software, plugins, operating systems on which the environment is running, applications running on the servers, and any other software hosted in the Kubernetes environment. &amp;nbsp;&lt;/p&gt;&lt;p&gt;As updates are deployed, administrators should also keep up with removing any old components that are no longer needed from the environment. Using a managed Kubernetes service can help to automate upgrades and patches for Kubernetes, operating systems, and networking protocols. However, administrators must still patch and upgrade their containerized applications.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="NSA Kubernetes Hardening Guidance" url="https://www.nsa.gov/Press-Room/News-Highlights/Article/Article/2716980/nsa-cisa-release-kubernetes-hardening-guidance/"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;The Center for Internet Security (CIS) publishes benchmarks for securing software. Administrators should adhere to the CIS benchmarks for Kubernetes and any other relevant system components. Administrators should check periodically to ensure their system's security is compliant with the current security experts' consensus on best practices. Periodic vulnerability scans and penetration tests should be performed on the various system components to proactively look for insecure configurations and zero-day vulnerabilities. Any discoveries should be promptly remediated before potential cyber actors can discover and exploit them.&amp;nbsp;&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:27.848">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CIS-K-3.1.1" name="Client certificate authentication should not be used for users" issueId="" issueLink="" platform="" cost="1" risk="56" state="Recommended" owner="JamesRabe" library="kubernetes-library-devops" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt; Description: &lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Kubernetes provides the option to use client certificates for user authentication. However as there is no way to revoke these certificates when a user leaves an organization or loses their credential, they are not suitable for this purpose. 
&lt;/div&gt; 
&lt;div&gt;
  It is not possible to fully disable client certificate use within a cluster as it is used for component to component authentication. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt; Rationale: &lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  With any authentication mechanism the ability to revoke credentials if they are compromised or no longer required, is a key control. Kubernetes client certificate authentication does not allow for this due to a lack of support for certificate revocation. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;b&gt;Remediation:&lt;/b&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   Alternative mechanisms provided by Kubernetes such as the use of OIDC should be implemented in place of client certificates. 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;b&gt;Impact:&lt;/b&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   External mechanisms for authentication generally require additional software to be deployed. 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Kubernetes docs: Authenticating" url="https://kubernetes.io/docs/reference/access-authn-authz/authentication/"/>
          </references>
          <standards>
            <standard ref="3.1.1" supportedStandardRef="cis-kubernetes-level-1"/>
            <standard ref="3.1.1" supportedStandardRef="cis-kubernetes-level-2"/>
            <standard ref="K06 - Broken Authentication" supportedStandardRef="owasp-kubernetes-top-10-2022"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Review user access to the cluster and ensure that users are not making use of Kubernetes client certificate authentication.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:28.674">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="C-NSA-HG-04" name="Configure a metrics logger" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="JamesRabe" library="kubernetes-library-devops" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Kubernetes does not natively support alerting; however, several monitoring tools with alerting capabilities are compatible with Kubernetes. If Kubernetes administrators choose to configure an alerting tool to work within a Kubernetes environment, there are several metrics for which administrators should monitor and configure alerts. &amp;nbsp;&lt;/p&gt;&lt;p&gt;Alerting when storage is low can help avoid performance issues and log loss due to limited resources and help identify malicious cryptojacking attempts. Cases of privileged Pod execution can be investigated to determine if an administrator made a mistake, an authentic use case necessitates escalated privileges, or a malicious actor deployed a privileged Pod. Suspicious Pod creation source IP addresses could indicate that a malicious cyber actor has broken out of a container and is attempting to create a malicious Pod. &amp;nbsp;&lt;/p&gt;&lt;p&gt;Integrating Kubernetes with an organization's existing SIEM platform, especially those with machine learning/big data capabilities, can be useful in identifying irregularities in audit logs and cutting down on false alerts. If configuring such a tool to work with Kubernetes, it should be configured so that these cases and any others applicable to the use case are configured to trigger alerts. &amp;nbsp;&lt;/p&gt;&lt;p&gt;Systems capable of acting automatically when suspected intrusions occur could potentially be configured to take steps to mitigate compromises while administrators respond to alerts. In the case of a Pod IP being listed as the source ID of a Pod creation request, one mitigation that could be implemented to keep the application available but temporarily stop any compromises of the cluster would be to automatically evict the Pod. Doing so would allow a clean version of the Pod to be rescheduled onto one of the nodes. Investigators can then examine the logs to determine if a breach occurred and, if so, how the malicious actors executed the compromise so that a patch can be deployed.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="NSA Kubernetes Hardening Guidance" url="https://www.nsa.gov/Press-Room/News-Highlights/Article/Article/2716980/nsa-cisa-release-kubernetes-hardening-guidance/"/>
          </references>
          <standards>
            <standard ref="K05 - Inadequate Logging" supportedStandardRef="owasp-kubernetes-top-10-2022"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Examples of cases that could trigger alerts include but are not limited to:&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;low disk space on any of the machines in the environment,&lt;/li&gt;&lt;li&gt;available storage space on a logging volume running low,&lt;/li&gt;&lt;li&gt;external logging service going offline,&lt;/li&gt;&lt;li&gt;a Pod or application running with root permissions,&lt;/li&gt;&lt;li&gt;requests being made by an account for resources they do not have permission for,&lt;/li&gt;&lt;li&gt;an anonymous account being used or gaining privileges,&lt;/li&gt;&lt;li&gt;Pod or Worker Node IP addresses being listed as the source ID of a Pod creation request,&lt;/li&gt;&lt;li&gt;unusual system calls or failed API calls,&lt;/li&gt;&lt;li&gt;user/admin behavior that is abnormal (i.e. at unusual times or from an unusual location), and&lt;/li&gt;&lt;li&gt;significant deviations from the standard operation metrics baseline.&lt;/li&gt;&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:27.846">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="C-NSA-HG-03" name="Configure control plane components to use authenticated, encrypted communications using Transport Layer Security (TLS) certificates" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="JamesRabe" library="kubernetes-library-devops" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;The control plane is the core of Kubernetes and gives users the ability to view containers, schedule new Pods, read Secrets, and execute commands in the cluster. Because of these sensitive capabilities, the control plane should be highly protected. In addition to secure configurations such as TLS encryption, RBAC, and a strong authentication method, network separation can help prevent unauthorized users from accessing the control plane.&amp;nbsp;&lt;/p&gt;&lt;p&gt;The Kubernetes API server runs on ports 6443 and 8080, which should be protected by a firewall to accept only expected traffic. Port 8080, by default, is accessible without TLS encryption from the local machine, and the request bypasses authentication and authorization modules.&amp;nbsp;&lt;/p&gt;&lt;p&gt;The insecure port can be disabled using the API server flag --insecure-port=0. The Kubernetes API server should not be exposed to the Internet or an untrusted network. Network policies can be applied to the kube-system namespace to limit internet access to the kube-system. If a default deny policy is implemented to all namespaces, the kube-system namespace must still be able to communicate with other control plane segments and worker nodes.&lt;/p&gt;&lt;p&gt;The following table lists the control plane ports and services:&lt;/p&gt;&lt;p&gt;Protocol Direction Port Range Purpose&lt;/p&gt;&lt;p&gt;TCP Inbound 6443 or 8080 if not disabled Kubernetes API server&lt;/p&gt;&lt;p&gt;TCP Inbound 2379-2380 etcd server client API&lt;/p&gt;&lt;p&gt;TCP Inbound 10250 kubelet API&lt;/p&gt;&lt;p&gt;TCP Inbound 10251 kube-scheduler&lt;/p&gt;&lt;p&gt;TCP Inbound 10252 kube-controller-manager&lt;/p&gt;&lt;p&gt;TCP Inbound 10258 cloud-controller-manager (optional)&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="NSA Kubernetes Hardening Guidance" url="https://www.nsa.gov/Press-Room/News-Highlights/Article/Article/2716980/nsa-cisa-release-kubernetes-hardening-guidance/"/>
          </references>
          <standards>
            <standard ref="K08 - Secrets Management" supportedStandardRef="owasp-kubernetes-top-10-2022"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;1. Set up TLS encryption&lt;/p&gt;&lt;p&gt;2. Set up strong authentication methods&lt;/p&gt;&lt;p&gt;3. Disable access to internet and unnecessary, or untrusted networks&lt;/p&gt;&lt;p&gt;4. Use RBAC policies to restrict access&lt;/p&gt;&lt;p&gt;5. Secure the etcd datastore with authentication and RBAC policies&lt;/p&gt;&lt;p&gt;6. Protect kubeconfig files from unauthorized modifications&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:28.673">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CIS-K-5.5.1" name="Configure Image Provenance using ImagePolicyWebhook admission controller" issueId="" issueLink="" platform="" cost="1" risk="56" state="Recommended" owner="JamesRabe" library="kubernetes-library-devops" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt; Description: &lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Configure Image Provenance for your deployment. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt; Rationale: &lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Kubernetes supports plugging in provenance rules to accept or reject the images in your deployments. You could configure such rules to ensure that only approved images are deployed in the cluster. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;b&gt;Remediation:&lt;/b&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   Follow the Kubernetes documentation and setup image provenance. 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;b&gt;Impact:&lt;/b&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   You need to regularly maintain your provenance configuration based on container image updates. 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Docker: Anchore Toolbox" url="https://hub.docker.com/r/dnurmi/anchore-toolbox/"/>
            <reference name="Kubernetes docs: Admission Controllers" url="https://kubernetes.io/docs/admin/admission-controllers/"/>
            <reference name="Kubernetes issues: #22888" url="https://github.com/kubernetes/kubernetes/issues/22888"/>
          </references>
          <standards>
            <standard ref="5.5.1" supportedStandardRef="cis-kubernetes-level-2"/>
            <standard ref="K04 - Policy Enforcement" supportedStandardRef="owasp-kubernetes-top-10-2022"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Review the pod definitions in your cluster and verify that image provenance is configured as appropriate.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:27.848">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CIS-K-5.4.2" name="Consider external secret storage" issueId="" issueLink="" platform="" cost="1" risk="56" state="Recommended" owner="JamesRabe" library="kubernetes-library-devops" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt; Description: &lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Consider the use of an external secrets storage and management system, instead of using Kubernetes Secrets directly, if you have more complex secret management needs. Ensure the solution requires authentication to access secrets, has auditing of access to and use of secrets, and encrypts secrets. Some solutions also make it easier to rotate secrets. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt; Rationale: &lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Kubernetes supports secrets as first-class objects, but care needs to be taken to ensure that access to secrets is carefully limited. Using an external secrets provider can ease the management of access to secrets, especially where secrets are used across both Kubernetes and non-Kubernetes environments. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;b&gt;Remediation:&lt;/b&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   Refer to the secrets management options offered by your cloud provider or a third-party secrets management solution. 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;b&gt;Impact:&lt;/b&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   None 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.4.2" supportedStandardRef="cis-kubernetes-level-2"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Review your secrets management implementation</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:27.848">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CIS-K-5.7.1" name="Create administrative boundaries between resources using namespaces" issueId="" issueLink="" platform="" cost="1" risk="56" state="Recommended" owner="JamesRabe" library="kubernetes-library-devops" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt; Description: &lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Use namespaces to isolate your Kubernetes objects. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt; Rationale: &lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Limiting the scope of user permissions can reduce the impact of mistakes or malicious activities. A Kubernetes namespace allows you to partition created resources into logically named groups.&amp;nbsp; Resources created in one namespace can be hidden from other namespaces. 
&lt;/div&gt; 
&lt;div&gt;
  By default, each resource created by a user in Kubernetes cluster runs in a default namespace, called default. You can create additional namespaces and attach resources and users to them. You can use Kubernetes Authorization plugins to create policies that segregate access to namespace resources between different users. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;b&gt;Remediation:&lt;/b&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   Follow the documentation and create namespaces for objects in your deployment as you need them. 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;b&gt;Impact:&lt;/b&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   You need to switch between namespaces for administration. 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Kubernetes blog: Deployment Best Practices" url="https://kubernetes.io/blog/2016/08/security-best-practices-kubernetes-deployment/"/>
            <reference name="Kubernetes docs: Namespaces" url="https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/"/>
          </references>
          <standards>
            <standard ref="5.7.1" supportedStandardRef="cis-kubernetes-level-1"/>
            <standard ref="5.7.1" supportedStandardRef="cis-kubernetes-level-2"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Run the below command and review the namespaces created in the cluster. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  kubectl get namespaces 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Ensure that these namespaces are the ones you need and are adequately administered as per your requirements. 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:27.848">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CIS-K-5.3.2" name="Ensure that all Namespaces have Network Policies defined" issueId="" issueLink="" platform="" cost="1" risk="56" state="Recommended" owner="JamesRabe" library="kubernetes-library-devops" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt; Description: &lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Use network policies to isolate traffic in your cluster network. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt; Rationale: &lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Running different applications on the same Kubernetes cluster creates a risk of one compromised application attacking a neighboring application. Network segmentation is important to ensure that containers can communicate only with those they are supposed to.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt;
  A network policy is a specification of how selections of pods are allowed to communicate with each other and other network endpoints. 
&lt;/div&gt; 
&lt;div&gt;
  Network Policies are namespace scoped. When a network policy is introduced to a given namespace, all traffic not allowed by the policy is denied. However, if there are no network policies in a namespace all traffic will be allowed into and out of the pods in that namespace. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;b&gt;Remediation:&lt;/b&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   Follow the documentation and create NetworkPolicy objects as you need them. 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;b&gt;Impact:&lt;/b&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   Once network policies are in use within a given namespace, traffic not explicitly allowed by a network policy will be denied. As such it is important to ensure that, when introducing network policies, legitimate traffic is not blocked. 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Kubernetes docs: Declare Network Policy" url="https://kubernetes.io/docs/tasks/configure-pod-container/declare-network-policy/"/>
            <reference name="Kubernetes docs: Network Policies" url="https://kubernetes.io/docs/concepts/services-networking/networkpolicies/"/>
            <reference name="Octetz.com" url="https://octetz.com/docs/2019/2019-04-22-netpol-api-k8s/"/>
          </references>
          <standards>
            <standard ref="5.3.2" supportedStandardRef="cis-kubernetes-level-2"/>
            <standard ref="K07 - Network Segmentation" supportedStandardRef="owasp-kubernetes-top-10-2022"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Run the below command and review the NetworkPolicy objects created in the cluster. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  kubectl --all-namespaces get networkpolicy 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Ensure that each namespace defined in the cluster has at least one Network Policy. 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:27.848">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CIS-K-3.2.1" name="Ensure that a minimal audit policy is created" issueId="" issueLink="" platform="" cost="1" risk="56" state="Recommended" owner="JamesRabe" library="kubernetes-library-devops" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt; Description: &lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Kubernetes can audit the details of requests made to the API server. The --audit-policy-file flag must be set for this logging to be enabled. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt; Rationale: &lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Logging is an important detective control for all systems, to detect potential unauthorized access. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;b&gt;Remediation:&lt;/b&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   Create an audit policy file for your cluster. 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;b&gt;Impact:&lt;/b&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   Audit logs will be created on the master nodes, which will consume disk space. Care should be taken to avoid generating too large volumes of log information as this could impact the availability of the cluster nodes. 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Kubernetes docs: Auditing" url="https://kubernetes.io/docs/tasks/debug-application-cluster/audit/"/>
          </references>
          <standards>
            <standard ref="3.2.1" supportedStandardRef="cis-kubernetes-level-1"/>
            <standard ref="3.2.1" supportedStandardRef="cis-kubernetes-level-2"/>
            <standard ref="K09 - Misconfigured Cluster Components" supportedStandardRef="owasp-kubernetes-top-10-2022"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Run the following command on one of the cluster master nodes: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  ps -ef | grep kube-apiserver 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Verify that the --audit-policy-file is set. Review the contents of the file specified and ensure that it contains a valid audit policy. 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:28.674">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CIS-K-5.1.5" name="Ensure that default service accounts are not actively used" issueId="" issueLink="" platform="" cost="1" risk="56" state="Recommended" owner="JamesRabe" library="kubernetes-library-devops" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt; Description: &lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The default service account should not be used to ensure that rights granted to applications can be more easily audited and reviewed. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt; Rationale: &lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Kubernetes provides a default service account which is used by cluster workloads where no specific service account is assigned to the pod. 
&lt;/div&gt; 
&lt;div&gt;
  Where access to the Kubernetes API from a pod is required, a specific service account should be created for that pod, and rights granted to that service account. 
&lt;/div&gt; 
&lt;div&gt;
  The default service account should be configured such that it does not provide a service account token and does not have any explicit rights assignments. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;b&gt;Remediation:&lt;/b&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   Create explicit service accounts wherever a Kubernetes workload requires specific access to the Kubernetes API server. 
 &lt;/div&gt; 
 &lt;div&gt;
   Modify the configuration of each default service account to include this value automountServiceAccountToken: false 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;b&gt;Impact:&lt;/b&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   All workloads which require access to the Kubernetes API will require an explicit service account to be created. 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Kubernetes docs: Configure Service Account" url="https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/"/>
          </references>
          <standards>
            <standard ref="5.1.5" supportedStandardRef="cis-kubernetes-level-1"/>
            <standard ref="5.1.5" supportedStandardRef="cis-kubernetes-level-2"/>
            <standard ref="K03 - Overly Permissive RBAC" supportedStandardRef="owasp-kubernetes-top-10-2022"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  For each namespace in the cluster, review the rights assigned to the default service account and ensure that it has no roles or cluster roles bound to it apart from the defaults.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt;
  Additionally ensure that the automountServiceAccountToken: false setting is in place for each default service account. 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:27.848">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="C-NIST-800-190-02" name="Ensure that nodes are securely introduced to the cluster" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="JamesRabe" library="kubernetes-library-devops" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Orchestration platforms should be configured to provide features that create a secure environment for all the apps they run. Orchestrators should ensure that nodes are securely introduced to the cluster, have a persistent identity throughout their lifecycle, and can also provide an accurate inventory of nodes and their connectivity states. Organizations should ensure that orchestration platforms are designed specifically to be resilient to compromise of individual nodes without compromising the overall security of the cluster. A compromised node must be able to be isolated and removed from the cluster without disrupting or degrading overall cluster operations. Finally, organizations should choose orchestrators that provide mutually authenticated network connections between cluster members and end-to-end encryption of intra-cluster traffic. Because of the portability of containers, many deployments may occur across networks organizations do not directly control, so a secure-by-default posture is particularly important for this scenario.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="NIST 800-190" url="https://csrc.nist.gov/publications/detail/sp/800-190/final"/>
          </references>
          <standards>
            <standard ref="4.3.5" supportedStandardRef="nist-800-190"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:27.850">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CIS-K-1.1.14" name="Ensure that the admin.conf file ownership is set to root:root" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="JamesRabe" library="kubernetes-library-devops" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt; Description: &lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Ensure that the admin.conf file ownership is set to root:root. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt; Rationale: &lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The admin.conf file contains the admin credentials for the cluster. You should set its file ownership to maintain the integrity of the file. The file should be owned by root:root. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;b&gt;Remediation:&lt;/b&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   Run the below command (based on the file location on your system) on the master node. 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   chown root:root /etc/kubernetes/admin.conf 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;b&gt;Impact:&lt;/b&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   None. 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Kubernetes docs: kubeadm" url="https://kubernetes.io/docs/admin/kubeadm/"/>
          </references>
          <standards>
            <standard ref="1.1.14" supportedStandardRef="cis-kubernetes-level-1"/>
            <standard ref="1.1.14" supportedStandardRef="cis-kubernetes-level-2"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Run the below command (based on the file location on your system) on the master node. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  stat -c %U:%G /etc/kubernetes/admin.conf 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Verify that the ownership is set to root:root. 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:28.674">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CIS-K-1.1.13" name="Ensure that the admin.conf file permissions are set to 644 or more restrictive" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="JamesRabe" library="kubernetes-library-devops" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt; Description: &lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Ensure that the admin.conf file has permissions of 644 or more restrictive. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt; Rationale: &lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The admin.conf is the administrator kubeconfig file defining various settings for the administration of the cluster. You should restrict its file permissions to maintain the integrity of the file. The file should be writable by only the administrators on the system. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;b&gt;Remediation:&lt;/b&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   Run the below command (based on the file location on your system) on the master node. 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   chmod 644 /etc/kubernetes/admin.conf 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;b&gt;Impact:&lt;/b&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   None. 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Kubernetes docs: Create Cluster Kubeadm" url="https://kubernetes.io/docs/setup/independent/create-cluster-kubeadm/"/>
          </references>
          <standards>
            <standard ref="1.1.13" supportedStandardRef="cis-kubernetes-level-1"/>
            <standard ref="1.1.13" supportedStandardRef="cis-kubernetes-level-2"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Run the following command (based on the file location on your system) on the master node.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  stat -c %a /etc/kubernetes/admin.conf 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Verify that the permissions are 644 or more restrictive. 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:28.674">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CIS-K-3.2.2" name="Ensure that the audit policy covers key security concerns" issueId="" issueLink="" platform="" cost="1" risk="56" state="Recommended" owner="JamesRabe" library="kubernetes-library-devops" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt; Description: &lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Ensure that the audit policy created for the cluster covers key security concerns. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt; Rationale: &lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Security audit logs should cover access and modification of key resources in the cluster, to enable them to form an effective part of a security environment. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;b&gt;Remediation:&lt;/b&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   Consider modification of the audit policy in use on the cluster to include these items, at a minimum. 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;b&gt;Impact:&lt;/b&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   Increasing audit logging will consume resources on the nodes or other log destination. 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Kubernetes docs: Auditing" url="https://kubernetes.io/docs/tasks/debug-application-cluster/audit/"/>
            <reference name="Kubernetes: configure-helper.sh" url="https://github.com/kubernetes/kubernetes/blob/master/cluster/gce/gci/configure-helper.sh"/>
            <reference name="k8scop: k8s-security-dashboard" url="https://github.com/k8scop/k8s-security-dashboard/blob/master/configs/kubernetes/adv-audit.yaml"/>
          </references>
          <standards>
            <standard ref="3.2.2" supportedStandardRef="cis-kubernetes-level-2"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Review the audit policy provided for the cluster and ensure that it covers at least the following areas : 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Access to Secrets managed by the cluster.&amp;nbsp; Care should be taken to only log Metadata for requests to&amp;nbsp; &amp;nbsp; &amp;nbsp;Secrets, ConfigMaps, and TokenReviews, in order to avoid the risk of logging sensitive data.&lt;/li&gt; 
  &lt;li&gt;Modification of pod and deployment objects.&lt;/li&gt; 
  &lt;li&gt;Use of pods/exec, pods/portforward, pods/proxy and services/proxy.&lt;/li&gt; 
  &lt;li&gt;Roles and RoleBindings, ClusterRoles / ClusterRoleBindings&lt;/li&gt; 
  &lt;li&gt;ConfigMaps&lt;/li&gt; 
  &lt;li&gt;Secrets&lt;/li&gt; 
  &lt;li&gt;Workloads: Deployments, DaemonSets, Pods,&lt;/li&gt; 
  &lt;li&gt;Cluster's certificates&lt;/li&gt; 
  &lt;li&gt;The resources within each apiVersion&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;div&gt;
  For most requests, minimally logging at the Metadata level is recommended (the most basic level of logging). 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:28.674">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CIS-K-5.1.1" name="Ensure that the cluster-admin role is only used where required" issueId="" issueLink="" platform="" cost="1" risk="56" state="Recommended" owner="JamesRabe" library="kubernetes-library-devops" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt; Description: &lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The RBAC role cluster-admin provides wide-ranging powers over the environment and should be used only where and when needed. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt; Rationale: &lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Kubernetes provides a set of default roles where RBAC is used. Some of these roles such as cluster-admin provide wide-ranging privileges which should only be applied where absolutely necessary. Roles such as cluster-admin allow super-user access to perform any action on any resource. When used in a ClusterRoleBinding, it gives full control over every resource in the cluster and in all namespaces. When used in a RoleBinding, it gives full control over every resource in the rolebinding's namespace, including the namespace itself. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;b&gt;Remediation:&lt;/b&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   Identify all clusterrolebindings to the cluster-admin role. Check if they are used and if they need this role or if they could use a role with fewer privileges. 
 &lt;/div&gt; 
 &lt;div&gt;
   Where possible, first bind users to a lower privileged role and then remove the cluster rolebinding to the cluster-admin role : 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   kubectl delete clusterrolebinding [name] 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;b&gt; Impact: &lt;/b&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   Care should be taken before removing any clusterrolebindings from the environment to ensure they were not required for operation of the cluster. Specifically, modifications should not be made to clusterrolebindings with the system: prefix as they are required for the operation of system components. 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Kubernetes docs: User Facing Roles" url="https://kubernetes.io/docs/admin/authorization/rbac/"/>
          </references>
          <standards>
            <standard ref="5.1.1" supportedStandardRef="cis-kubernetes-level-1"/>
            <standard ref="5.1.1" supportedStandardRef="cis-kubernetes-level-2"/>
            <standard ref="K03 - Overly Permissive RBAC" supportedStandardRef="owasp-kubernetes-top-10-2022"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Obtain a list of the principals who have access to the cluster-admin role by reviewing the clusterrolebinding output for each role binding that has access to the cluster-admin role. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp;kubectl get clusterrolebindings -o=custom-columns= 
&lt;/div&gt; 
&lt;div&gt;
  NAME:.metadata.name,ROLE:.roleRef.name,SUBJECT:.subjects[*].name 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:27.848">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CIS-K-1.1.20" name="Ensure that the Kubernetes PKI certificate file permissions are set to 644 or more restrictive" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="JamesRabe" library="kubernetes-library-devops" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt; Description: &lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Ensure that Kubernetes PKI certificate files have permissions of 644 or more restrictive. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt; Rationale: &lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Kubernetes makes use of a number of certificate files as part of the operation of its components. The permissions on these files should be set to 644 or more restrictive to protect their integrity. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;b&gt;Remediation:&lt;/b&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   Run the below command (based on the file location on your system) on the master node. 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   chmod -R 644 /etc/kubernetes/pki/*.crt 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;b&gt;Impact:&lt;/b&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   None 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Kubernetes kube apiserver" url="https://kubernetes.io/docs/admin/kube-apiserver/"/>
          </references>
          <standards>
            <standard ref="1.1.20" supportedStandardRef="cis-kubernetes-level-1"/>
            <standard ref="1.1.20" supportedStandardRef="cis-kubernetes-level-2"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Run the below command (based on the file location on your system) on the master node. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  find /etc/kubernetes/pki -name "*.crt" | xargs stat -c '%n %a' 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Verify that the permissions are 644 or more restrictive. 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:28.674">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CIS-K-1.1.19" name="Ensure that the Kubernetes PKI directory and file ownership is set to root:root" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="JamesRabe" library="kubernetes-library-devops" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt; Description: &lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Ensure that the Kubernetes PKI directory and file ownership is set to root:root. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt; Rationale: &lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Kubernetes makes use of a number of certificates as part of its operation. You should set the ownership of the directory containing the PKI information and all files in that directory to maintain their integrity. The directory and files should be owned by root:root. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;b&gt;Remediation:&lt;/b&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   Run the below command (based on the file location on your system) on the master node. 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   chown -R root:root /etc/kubernetes/pki/ 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;b&gt;Impact:&lt;/b&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   None 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Kubernetes kube apiserver" url="https://kubernetes.io/docs/admin/kube-apiserver/"/>
          </references>
          <standards>
            <standard ref="1.1.19" supportedStandardRef="cis-kubernetes-level-1"/>
            <standard ref="1.1.19" supportedStandardRef="cis-kubernetes-level-2"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Run the below command (based on the file location on your system) on the master node. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  ls -laR /etc/kubernetes/pki/ 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Verify that the ownership of all files and directories in this hierarchy is set to root:root. 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:28.674">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CIS-K-1.1.21" name="Ensure that the Kubernetes PKI key file permissions are set to 600" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="JamesRabe" library="kubernetes-library-devops" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt; Description: &lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Ensure that Kubernetes PKI key files have permissions of 600. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt; Rationale: &lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Kubernetes makes use of a number of key files as part of the operation of its components. The permissions on these files should be set to 600 to protect their integrity and confidentiality. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;b&gt;Remediation:&lt;/b&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   Run the below command (based on the file location on your system) on the master node. 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   chmod -R 600 /etc/kubernetes/pki/*.key 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;b&gt;Impact:&lt;/b&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   None 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Kubernetes kube apiserver" url="https://kubernetes.io/docs/admin/kube-apiserver/"/>
          </references>
          <standards>
            <standard ref="1.1.21" supportedStandardRef="cis-kubernetes-level-1"/>
            <standard ref="1.1.21" supportedStandardRef="cis-kubernetes-level-2"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Run the below command (based on the file location on your system) on the master node. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  find /etc/kubernetes/pki -name "*.key" | xargs stat -c '%n %a' 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Verify that the permissions are 600. 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:28.674">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CIS-K-5.7.2" name="Ensure that the seccomp profile is set to docker/default in your pod definitions" issueId="" issueLink="" platform="" cost="1" risk="56" state="Recommended" owner="JamesRabe" library="kubernetes-library-devops" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt; Description: &lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Enable docker/default seccomp profile in your pod definitions. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt; Rationale: &lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Seccomp (secure computing mode) is used to restrict the set of system calls applications can make, allowing cluster administrators greater control over the security of workloads running in the cluster. Kubernetes disables seccomp profiles by default for historical reasons. You should enable it to ensure that the workloads have restricted actions available within the container. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;b&gt;Remediation:&lt;/b&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   Seccomp is an alpha feature currently. By default, all alpha features are disabled. So, you would need to enable alpha features in the apiserver by passing "--feature-gates=AllAlpha=true" argument. 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   Edit the /etc/kubernetes/apiserver file on the master node and set the KUBE_API_ARGS parameter to "--feature-gates=AllAlpha=true" 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   KUBE_API_ARGS="--feature-gates=AllAlpha=true" 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   Based on your system, restart the kube-apiserver service. For example: 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   systemctl restart kube-apiserver.service 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   Use annotations to enable the docker/default seccomp profile in your pod definitions. An example is as below: 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   apiVersion: v1 
 &lt;/div&gt; 
 &lt;div&gt;
   kind: Pod 
 &lt;/div&gt; 
 &lt;div&gt;
   metadata: 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;span style="white-space:pre"&gt; &lt;/span&gt;name: trustworthy-pod 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;span style="white-space:pre"&gt; &lt;/span&gt;annotations: 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;span style="white-space:pre"&gt; &lt;/span&gt;seccomp.security.alpha.kubernetes.io/pod: docker/default 
 &lt;/div&gt; 
 &lt;div&gt;
   spec: 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;span style="white-space:pre"&gt; &lt;/span&gt;containers: 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;span style="white-space:pre"&gt; &lt;/span&gt;- name: trustworthy-container 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;span style="white-space:pre"&gt; &lt;/span&gt;image: sotrustworthy:latest 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;b&gt;Impact:&lt;/b&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   If the docker/default seccomp profile is too restrictive for you, you would have to create/manage your own seccomp profiles. Also, you need to enable all alpha features for this to work. There is no individual switch to turn on this feature. 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Docker docs: Seccomp" url="https://docs.docker.com/engine/security/seccomp/"/>
            <reference name="Kubernetes issues: #39845" url="https://github.com/kubernetes/kubernetes/issues/39845"/>
            <reference name="Kubernetes: Disable seccomp policy by default" url="https://github.com/kubernetes/kubernetes/pull/21790"/>
          </references>
          <standards>
            <standard ref="5.7.2" supportedStandardRef="cis-kubernetes-level-2"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Review the pod definitions in your cluster. It should create a line as below: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  annotations: 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp;seccomp.security.alpha.kubernetes.io/pod: docker/default 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:27.848">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SACA-3.1.7:5" name="For existing infrastructure, the operator should manage a gradual roll-out of capabilities, starting with capturing data (i.e., network traffic, disk and memory artifacts)" issueId="" issueLink="" platform="" cost="1" risk="56" state="Recommended" owner="JamesRabe" library="kubernetes-library-devops" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Integrating forensics capabilities into an existing infrastructure should be part of the maintenance and&amp;nbsp; change management activities of the operator. This should be done as part of due diligence and compliance, as well as to satisfy rules and regulations. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The integration of forensics capabilities will help the operator meet due diligence requirements, compliance measures, rules, and regulations. These capabilities will provide the means to acquire and process evidence, decrease the time to determine root cause, and minimize exposure to a compromise.&amp;nbsp; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.7" supportedStandardRef="csa-container-architectures"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check the forensics plan for available forensics capabilities and verify that they have been fully integrated according to the steps outlined. 
&lt;br&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:27.849">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SACA-3.1.7:4" name="For new infrastructure, the operator should implement planned forensics capabilities" issueId="" issueLink="" platform="" cost="1" risk="56" state="Recommended" owner="JamesRabe" library="kubernetes-library-devops" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The design and implementation of planned forensics capabilities should take place along with the rest of the infrastructure and should be integrated with corporate incident response, business continuity and disaster recovery plans. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The design and implementation of forensics capabilities will help to verify the plan and revise the designs if needed to accommodate changes. These capabilities will provide the means to acquire and process evidence, decrease the time to determine root cause, and minimize exposure to a compromise. 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.7" supportedStandardRef="csa-container-architectures"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check the forensics plan for available forensics capabilities and verify that they have been applied to the system.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:27.849">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SACA-3.1.12:2" name="In a multi-tenant environment, the operator should ensure balanced resource consumption" issueId="" issueLink="" platform="" cost="1" risk="56" state="Recommended" owner="JamesRabe" library="kubernetes-library-devops" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Quality of service should always be upheld at the expense of multi-tenancy 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  This allows fulfillment of at least one service-level agreement (SLA). It can be beneficial to work with developers and/or vendors to refine resource requests. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.12" supportedStandardRef="csa-container-architectures"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;span style="display: inline !important; float: none; background-color: transparent; color: rgb(0, 0, 0); font-family: Times New Roman; font-size: 16px; font-style: normal; font-variant: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-decoration: none; text-indent: 0px; text-transform: none; -webkit-text-stroke-width: 0px; white-space: normal; word-spacing: 0px;"&gt;The method of verifying balanced resource consumption will depend on the organizational policies and available tools.&amp;nbsp; Ensure that developers have been involved in determining resource requirements.&lt;/span&gt; 
&lt;br&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:27.849">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SACA-3.1.12:3" name="In a multi-tenant environment, the operator should ensure that the CMP optimizes cluster resource consumption" issueId="" issueLink="" platform="" cost="1" risk="56" state="Recommended" owner="JamesRabe" library="kubernetes-library-devops" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Ensuring predictable platform behavior under conditions of varying resource availability can be a challenge, an operator needs to evaluate setting resource constraints to preserve environment stability when resources availability fluctuates. 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;&lt;br&gt;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Balancing the resource consumption facilitates sustainable execution, which in turn minimizes the resource contention. 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.12" supportedStandardRef="csa-container-architectures"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>The method of verifying balanced resource consumption will depend on the CMP being used to manage the system.&amp;nbsp; Check the relevant documentation for the CMP and any organizational policies.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:27.849">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CIS-K-5.1.2" name="Minimize access to secrets" issueId="" issueLink="" platform="" cost="1" risk="56" state="Recommended" owner="JamesRabe" library="kubernetes-library-devops" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt; Description: &lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The Kubernetes API stores secrets, which may be service account tokens for the Kubernetes API or credentials used by workloads in the cluster. Access to these secrets should be restricted to the smallest possible group of users to reduce the risk of privilege escalation. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt; Rationale: &lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Inappropriate access to secrets stored within the Kubernetes cluster can allow for an attacker to gain additional access to the Kubernetes cluster or external resources whose credentials are stored as secrets. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;b&gt;Remediation:&lt;/b&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   Where possible, remove get, list and watch access to secret objects in the cluster. 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;b&gt;Impact:&lt;/b&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   Care should be taken not to remove access to secrets to system components which require this for their operation 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.1.2" supportedStandardRef="cis-kubernetes-level-1"/>
            <standard ref="5.1.2" supportedStandardRef="cis-kubernetes-level-2"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Review the users who have get, list or watch access to secrets objects in the Kubernetes API.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:27.848">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CIS-K-5.1.3" name="Minimize wildcard use in Roles and ClusterRoles" issueId="" issueLink="" platform="" cost="1" risk="56" state="Recommended" owner="JamesRabe" library="kubernetes-library-devops" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt; Description: &lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Kubernetes Roles and ClusterRoles provide access to resources based on sets of objects and actions that can be taken on those objects. It is possible to set either of these to be the wildcard "*" which matches all items. 
&lt;/div&gt; 
&lt;div&gt;
  Use of wildcards is not optimal from a security perspective as it may allow for inadvertent access to be granted when new resources are added to the Kubernetes API either as CRDs or in later versions of the product. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt; Rationale: &lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The principle of least privilege recommends that users are provided only the access required for their role and nothing more. The use of wildcard rights grants is likely to provide excessive rights to the Kubernetes API. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;b&gt;Remediation:&lt;/b&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   Where possible replace any use of wildcards in clusterroles and roles with specific objects or actions. 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.1.3" supportedStandardRef="cis-kubernetes-level-1"/>
            <standard ref="5.1.3" supportedStandardRef="cis-kubernetes-level-2"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Retrieve the roles defined across each namespaces in the cluster and review for wildcards&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  kubectl get roles --all-namespaces -o yaml 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Retrieve the cluster roles defined in the cluster and review for wildcards 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  kubectl get clusterroles -o yaml 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:27.848">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SACA-3.1.10:3" name="Operators should design the secret management architecture by integrating with deployment tools or scripts and container orchestration tools" issueId="" issueLink="" platform="" cost="1" risk="56" state="Recommended" owner="JamesRabe" library="kubernetes-library-devops" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Secret management deployment and initial seeding utilizing deployment time and user inputs can be handled by closely integrating it with the specific container orchestration scripts, as well as the 
&lt;/div&gt; 
&lt;div&gt;
  corresponding deployment scripts in scenarios where deployment is triggered by a human user. In the case of a completely automated deployment, the use of a key management server (KMS) or a hardware secure module (HSM) should be utilized to bootstrap the secret management server with the initial bootstrapping secrets required. For instance, virtual machine (VM) metadata that has been bound to a specific role can be used to authenticate to an HSM to obtain secrets from an HSM during VM boot up.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Bootstrapping of secrets is always a chicken-and-egg issue and utilizing some auto-generated data, such as VM metadata, to obtain the first secret from the HSM/KMS is a way to overcome this issue. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Once the secret management system has been bootstrapped with deployment-time or boot-up time secrets, it is armed to handle dynamic generation of secrets. For instance, in order to dynamically generate database account credentials for applications it needs to use the database admin credentials obtained at deployment time to authorize the creation of a new user account and then pass these on to the application that needs to use it. 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.10" supportedStandardRef="csa-container-architectures"/>
            <standard ref="K08 - Secrets Management" supportedStandardRef="owasp-kubernetes-top-10-2022"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>There are a number of secrets management tools available.&amp;nbsp; Ensure that tools chosen is robust and that it has been correctly integrated with deployment tools and any other relevant features.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:27.848">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SACA-3.1.8:1" name="Operators should ensure the availability of the capability to validate image signatures before deployment" issueId="" issueLink="" platform="" cost="1" risk="56" state="Recommended" owner="JamesRabe" library="kubernetes-library-devops" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;&lt;/b&gt;Images should be signed as part of the build process and validated before used. Signing and validation can be achieved by using GPG&amp;nbsp; signatures on image contents or through similar methods. Developers should ensure that their images are signed as part of the build process.&amp;nbsp; Operators should ensure the availability of the capability to validate image signatures before deployment. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;&lt;/b&gt;Digital signing of image content at build time and validation of the signed data before usage ensures that image data cannot be tampered&amp;nbsp; with between build and runtime. 
 &lt;br&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.8" supportedStandardRef="csa-container-architectures"/>
            <standard ref="K02 - Supply Chain Vulnerabilities" supportedStandardRef="owasp-kubernetes-top-10-2022"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Verify that there is a suitable image signing capability such as GPG&amp;nbsp; signatures for the system, and that developers and operators are aware of its existence and how to use it. 
&lt;span style="text-align: left; color: rgb(0, 0, 0); text-transform: none; text-indent: 0px; letter-spacing: normal; font-family: Times New Roman; font-style: normal; font-variant: normal; font-weight: 400; text-decoration: none; word-spacing: 0px; display: inline !important; white-space: normal; orphans: 2; float: none; -webkit-text-stroke-width: 0px; background-color: transparent;"&gt;&lt;/span&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:27.849">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SACA-3.1.1:2" name="Operators should leverage a container management platform to securely move images across environments" issueId="" issueLink="" platform="" cost="1" risk="56" state="Recommended" owner="JamesRabe" library="kubernetes-library-devops" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  In a production container environment, there are many components to manage in addition to management of application code and container images. A CMP that can support the organization's scale across one or more environments and/or locations should have capabilities to securely synchronize container images. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  To ensure the integrity of the build chain, the Operator must have the ability to validate and verify the code and/or binary artifacts between environments and promotion phases utilizing digital certificates and/or digital signatures provided by the developer or the orchestration engine.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  To ensure the consistency of an application deployed by the build chain, the operator must also have the ability to synchronize the application code across all locations where the application is running or being consumed. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  By using a CMP to manage container images, users of the platform can confidently expect appropriate versions of a container image to be available for execution across their environments. This minimizes confusion around versions of an application that is running in different environments. When coupled with the best practice of using a root of trust, users of the platform can ensure provenance and integrity of the container images across their environments. 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.1" supportedStandardRef="csa-container-architectures"/>
            <standard ref="K02 - Supply Chain Vulnerabilities" supportedStandardRef="owasp-kubernetes-top-10-2022"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that a suitable CMP exists and is in use in your organization.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:27.849">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SACA-3.1.8:5" name="Operators should use trusted hosts that are securely hardened and, where container engine is securely configured, to store images and run containers" issueId="" issueLink="" platform="" cost="1" risk="56" state="Recommended" owner="JamesRabe" library="kubernetes-library-devops" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Operators will need to harden the OS and the container engine before storing images and running containers on them. It is important to only deploy the necessary packages on the host and to regularly apply security updates and kernel patches.&amp;nbsp; Operators will want to harden the container engine according to vendor's security best practices.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Ensuring that host OS and container engine are properly patched and securely configured will reduce the container's attack surface and exposure to known vulnerabilities. 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.8" supportedStandardRef="csa-container-architectures"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Please follow the best security practices according to your specific vendor.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:27.849">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CIS-K-5.4.1" name="Prefer using secrets as files over secrets as environment variables" issueId="" issueLink="" platform="" cost="1" risk="56" state="Recommended" owner="JamesRabe" library="kubernetes-library-devops" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt; Description: &lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Kubernetes supports mounting secrets as data volumes or as environment variables. 
&lt;/div&gt; 
&lt;div&gt;
  Minimize the use of environment variable secrets. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt; Rationale: &lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  It is reasonably common for application code to log out its environment (particularly in the event of an error). This will include any secret values passed in as environment variables, so secrets can easily be exposed to any user or entity who has access to the logs. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;b&gt;Remediation:&lt;/b&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   If possible, rewrite application code to read secrets from mounted secret files, rather than from environment variables. 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;b&gt;Impact:&lt;/b&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   Application code which expects to read secrets in the form of environment variables would need modification 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Kubernetes docs: Using Secrets" url="https://kubernetes.io/docs/concepts/configuration/secret"/>
          </references>
          <standards>
            <standard ref="5.4.1" supportedStandardRef="cis-kubernetes-level-2"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Run the following command to find references to objects which use environment variables defined from secrets. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  kubectl get all -o jsonpath='{range .items[?(@..secretKeyRef)]} {.kind} 
&lt;/div&gt; 
&lt;div&gt;
  {.metadata.name} {"\n"}{end}' -A 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:27.848">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CIS-K-5.7.4" name="The default namespace should not be used" issueId="" issueLink="" platform="" cost="1" risk="56" state="Recommended" owner="JamesRabe" library="kubernetes-library-devops" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt; Description: &lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Kubernetes provides a default namespace, where objects are placed if no namespace is specified for them. Placing objects in this namespace makes application of RBAC and other controls more difficult. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt; Rationale: &lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Resources in a Kubernetes cluster should be segregated by namespace, to allow for security controls to be applied at that level and to make it easier to manage resources. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
  &lt;b&gt;Remediation:&lt;/b&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   Ensure that namespaces are created to allow for appropriate segregation of Kubernetes resources and that all new resources are created in a specific namespace. 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;b&gt;Impact:&lt;/b&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   None 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="5.7.4" supportedStandardRef="cis-kubernetes-level-2"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Run this command to list objects in default namespace 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  kubectl get all 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The only entries there should be system managed resources such as the kubernetes service 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:27.848">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SACA-3.1.5:2" name="The operator must provide authentication and authorization infrastructure" issueId="" issueLink="" platform="" cost="1" risk="56" state="Recommended" owner="JamesRabe" library="kubernetes-library-devops" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The Operator should provide the means to not only encrypt traffic, but at the same time ensure the identity of the containers and the actions that they can take. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Using a solution such as TLS with mutual authentication would ensure both the confidentiality of the traffic and the identity of the containers. Authorization mechanisms would be provided based on an RBAC such as LDAP, which leverages the identity provided by the authentication mechanism. 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.5" supportedStandardRef="csa-container-architectures"/>
            <standard ref="4.3.2" supportedStandardRef="nist-800-190"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Individual container technologies will have their own methods for checking and applying encryption for communications.&amp;nbsp; Follow the relevant documentation for the technology in question. 
&lt;br&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:27.849">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SACA-3.1.5:3" name="The operator must provide network monitoring infrastructure" issueId="" issueLink="" platform="" cost="1" risk="56" state="Recommended" owner="JamesRabe" library="kubernetes-library-devops" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Monitoring network traffic and configurations provides the means to detect the tampering of network traffic and configurations besides potentially malicious traffic.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Network monitoring challenges may be mitigated by defining standard semantics and syntax for network monitoring for containers, specifying "must report" events for compliance, and addressing the accuracy or relevance of network activity/events to network health for containers. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Providing a record of network traffic (i.e., netflows) and configuration changes ensures that only expected behaviors and actions take place within a given environment. This helps in maintaining incident response and detection capabilities. 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.5" supportedStandardRef="csa-container-architectures"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Individual systems will have their own methods for monitoring network traffic.&amp;nbsp; Ensure that suitable methods are in use to secure both the container architecture and the underlying network technology. 
&lt;br&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:27.849">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SACA-3.1.6:4" name="The operator should design into infrastructure the ability to only allow the use of signed and approved images" issueId="" issueLink="" platform="" cost="1" risk="56" state="Recommended" owner="JamesRabe" library="kubernetes-library-devops" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Operators should design an infrastructure that will accept only signed and approved images. The image approval can be tied to the organization's software acceptance policy (e.g., quality, security, stability, etc.), or to any acceptance criteria that is applicable. It should be possible for an operator to prevent running an image even if it is properly signed but otherwise fails to meet acceptance criteria. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Checking for signature validation ensures that image data was not tampered with between build and the time image is running. Preventing the use of unauthorized or unacceptable images (even if signed) provides further validation of images before they run. 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.6" supportedStandardRef="csa-container-architectures"/>
            <standard ref="K02 - Supply Chain Vulnerabilities" supportedStandardRef="owasp-kubernetes-top-10-2022"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;span style="display: inline !important; float: none; background-color: transparent; color: rgb(0, 0, 0); font-family: Times New Roman; font-size: 16px; font-style: normal; font-variant: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: left; text-decoration: none; text-indent: 0px; text-transform: none; -webkit-text-stroke-width: 0px; white-space: normal; word-spacing: 0px;"&gt;Verify that there is a suitable image signing capability such as GPG&amp;nbsp; signatures for the system, and that developers and operators are aware of its existence and how to use it. They system should be configured to prevent access to images which are unsigned.&lt;/span&gt; 
&lt;br&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:27.849">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SACA-3.1.6:5" name="The operator should design the infrastructure to continuously identify newly published vulnerabilities" issueId="" issueLink="" platform="" cost="1" risk="56" state="Recommended" owner="JamesRabe" library="kubernetes-library-devops" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The operator should provide an infrastructure that continuously identifies image vulnerabilities in the following cases: images that are stored in a registry, images that are stored locally on the host, and images that are running as containers. Once a new vulnerability is identified, mitigation actions should take place based on the vulnerability severity and its impact on the application. Instead of patching running containers, it is preferable to apply the patch on a new image version and deploy the new image to the container runtime environment. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  There is a need to continuously rescan images since new vulnerabilities are found and published over time. The scan should include all the images in the image registry, images on local machines (waiting to run), and images that are already running as containers. Applying patches by creating a new image version instead of updating running containers will provide better visibility into the process and ensure consistency between containers and their images. 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.6" supportedStandardRef="csa-container-architectures"/>
            <standard ref="K02 - Supply Chain Vulnerabilities" supportedStandardRef="owasp-kubernetes-top-10-2022"/>
            <standard ref="K10 - Vulnerable Components" supportedStandardRef="owasp-kubernetes-top-10-2022"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Verify that a vulnerability scanner exists which is robust, appropriate for the technology in question, can be automated, and can be applied to all stages of the build pipeline.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:27.849">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SACA-3.1.7:3" name="The operator should include forensics capability planning for container environments" issueId="" issueLink="" platform="" cost="1" risk="56" state="Recommended" owner="JamesRabe" library="kubernetes-library-devops" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Forensics planning should include the instrumentation, human resources, sources of evidence (i.e., network, disk, memory), processes, and procedures. The volatile nature of the container environment necessitates a more agile framework to capture and analyze the evidence.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Forensics capabilities are the basis for any incident response and mitigation activity. Forensics can provide the necessary evidence to determine the root cause of an incident and increase the speed of mitigation. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Integrating forensics capabilities into an incident response plan and procedures will provide the means to acquire and process evidence, decrease the time to determine root cause, and minimize exposure to a compromise. 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.7" supportedStandardRef="csa-container-architectures"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div style="text-align: left; color: rgb(0, 0, 0); text-transform: none; text-indent: 0px; letter-spacing: normal; font-family: Times New Roman; font-size: 16px; font-style: normal; font-variant: normal; text-decoration: none; word-spacing: 0px; white-space: normal; orphans: 2; -webkit-text-stroke-width: 0px; background-color: transparent;"&gt;
  Verify that a forensics plan exists, that it is comprehensive, and that it includes identification of the forensics capabilities which can be applied to the system. 
&lt;/div&gt; 
&lt;div style="text-align: left; color: rgb(0, 0, 0); text-transform: none; text-indent: 0px; letter-spacing: normal; font-family: Times New Roman; font-size: 16px; font-style: normal; font-variant: normal; text-decoration: none; word-spacing: 0px; white-space: normal; orphans: 2; -webkit-text-stroke-width: 0px; background-color: transparent;"&gt; 
 &lt;br&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:27.849">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SACA-3.1.9:3" name="The operator should provide infrastructure that isolates network traffic of different users and applications" issueId="" issueLink="" platform="" cost="1" risk="56" state="Recommended" owner="JamesRabe" library="kubernetes-library-devops" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Network traffic for different users and applications needs to be segregated to limit lateral movement from potentially compromised users or applications.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  This network isolation limits the threat vector of lateral movement. 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.9" supportedStandardRef="csa-container-architectures"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Follow the instructions in the relevant documentation for the container technology in use.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:27.849">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CSA-SACA-3.1.9:2" name="The operator should provide infrastructure that supports resource management, access control, and monitoring of container volumes" issueId="" issueLink="" platform="" cost="1" risk="56" state="Recommended" owner="JamesRabe" library="kubernetes-library-devops" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;b&gt;Description&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The management of volume resources includes following volume management service activities: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
&lt;ul&gt;
&lt;li&gt;Creating, provisioning, and updating volume resource&lt;/li&gt;
&lt;li&gt;Enrolling, accessing, and denying volume resource&lt;/li&gt;
&lt;li&gt;Decommissioning and terminating volume resource&lt;/li&gt;
&lt;li&gt;Troubleshooting volume resource&lt;/li&gt;
&lt;li&gt;Monitoring, reporting, auditing, inventorying, validating, and verifying volume resource&lt;/li&gt;
&lt;li&gt;Migrating volume resource&lt;/li&gt;
&lt;li&gt;Encrypting volume resource&lt;/li&gt;
&lt;li&gt;Recovering volume resource&lt;/li&gt;
&lt;li&gt;Performance tuning volume resource&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt; 
&lt;div&gt;
  The relationship between assets (i.e., people, groups, containers, network, host, and volumes) should be explicitly known and mapped to volume management service activities (as outlined in the CSA document referenced by this countermeasure. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Rationale&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div style=""&gt;
   The granular breakdown of "resources management" is concretely identified as a potential standard practice for consistent management of volume resource management activities. 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="3.1.9" supportedStandardRef="csa-container-architectures"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check the current infrastructure to ensure that&amp;nbsp;volume management service activities are mapped according to the guidelines in the related standard documentation.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:27.849">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="access-control" name="Access control" desc="" library="kubernetes-library-devops">
          <threats>
            <threat ref="CP-AC-1" name="Attackers gain access to configuration files without necessary privileges" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="kubernetes-library-devops" editable="true">
              <desc>An adversary is able to exploit misconfigured file access to gain access to the master node configuration files which control credentials and certificates.&amp;nbsp; &amp;nbsp;The Kubernetes default is to reserve access to these files to root and to configure strong permissions.&amp;nbsp; These permissions may be changed by administrators in order to ease workflow but this can have serious implications for security.</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CP-AC-1.1">
                  <countermeasures>
                    <countermeasure ref="C-NSA-HG-03" mitigation="16"/>
                    <countermeasure ref="CIS-K-1.1.13" mitigation="20"/>
                    <countermeasure ref="CIS-K-1.1.20" mitigation="16"/>
                    <countermeasure ref="CIS-K-1.1.21" mitigation="16"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CP-AC-1.2">
                  <countermeasures>
                    <countermeasure ref="CIS-K-1.1.14" mitigation="16"/>
                    <countermeasure ref="CIS-K-1.1.19" mitigation="16"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-NSA-HG-03" mitigation="16"/>
                <countermeasure ref="CIS-K-1.1.13" mitigation="20"/>
                <countermeasure ref="CIS-K-1.1.14" mitigation="16"/>
                <countermeasure ref="CIS-K-1.1.19" mitigation="16"/>
                <countermeasure ref="CIS-K-1.1.20" mitigation="16"/>
                <countermeasure ref="CIS-K-1.1.21" mitigation="16"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="T-NIST-800-190-01" name="Attackers take advantage of bad orchestrator configurations that expose the orchestrator and all other container technology components" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="kubernetes-library-devops" editable="true">
              <desc>&lt;p&gt;Maintenance of trust between the nodes in the environment requires special care. The orchestrator is the most foundational node. Weak orchestrator configurations can expose the orchestrator and all other container technology components to increased risk. Examples of possible consequences include:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Unauthorized hosts joining the cluster and running containers&lt;/li&gt;&lt;li&gt;The compromise of a single cluster host implying compromise of the entire cluster-for example, if the same key pairs used for authentication are shared across all nodes&lt;/li&gt;&lt;li&gt;Communications between the orchestrator and DevOps personnel, administrators, and hosts being unencrypted and unauthenticated&lt;/li&gt;&lt;/ul&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references>
                <reference name="NIST 800-190" url="https://csrc.nist.gov/publications/detail/sp/800-190/final"/>
              </references>
              <weaknesses>
                <weakness ref="W-NIST-800-190-01">
                  <countermeasures>
                    <countermeasure ref="C-NIST-800-190-02" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-NIST-800-190-02" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Records" value=""/>
              </customFields>
            </threat>
            <threat ref="PO-AC-1" name="Misconfigured or incorrectly applied cluster wide roles may result in privilege escalation" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="kubernetes-library-devops" editable="true">
              <desc>There are a number of cluster wide roles which can be used to ensure security and integrity within a cluster.&amp;nbsp; Administration of these can be difficult as they can have overlapping interests, and because changes in one area can have implications for others.&amp;nbsp; It is essential to manage these appropriately in order to control access to objects in the cluster.</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="PO-AC-1.1">
                  <countermeasures>
                    <countermeasure ref="CIS-K-5.1.1" mitigation="20"/>
                    <countermeasure ref="CIS-K-5.1.2" mitigation="16"/>
                    <countermeasure ref="CIS-K-5.1.3" mitigation="16"/>
                    <countermeasure ref="CIS-K-5.1.5" mitigation="16"/>
                  </countermeasures>
                </weakness>
                <weakness ref="PO-AC-1.2">
                  <countermeasures>
                    <countermeasure ref="CIS-K-5.7.1" mitigation="16"/>
                    <countermeasure ref="CIS-K-5.7.4" mitigation="16"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CIS-K-5.1.1" mitigation="20"/>
                <countermeasure ref="CIS-K-5.1.2" mitigation="16"/>
                <countermeasure ref="CIS-K-5.1.3" mitigation="16"/>
                <countermeasure ref="CIS-K-5.1.5" mitigation="16"/>
                <countermeasure ref="CIS-K-5.7.1" mitigation="16"/>
                <countermeasure ref="CIS-K-5.7.4" mitigation="16"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="access-sensitive-data" name="Access sensitive data" desc="" library="kubernetes-library-devops">
          <threats>
            <threat ref="PO-AS-1" name="Kubernetes uses Secrets to store and manage sensitive information.  If an attacker gains access to these they can use it to attack many other parts of the cluster" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="kubernetes-library-devops" editable="true">
              <desc>Kubernetes allows sensitive data such as passwords, tokens or keys to be stored outside of their objects or configuration files. This is a useful security feature, however these secrets must be well protected in order to adequately secure the cluster.</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="PO-AS-1.1">
                  <countermeasures>
                    <countermeasure ref="CIS-K-5.4.1" mitigation="34"/>
                  </countermeasures>
                </weakness>
                <weakness ref="PO-AS-1.2">
                  <countermeasures>
                    <countermeasure ref="CSA-SACA-3.1.10:3" mitigation="33"/>
                  </countermeasures>
                </weakness>
                <weakness ref="PO-AS-1.3">
                  <countermeasures>
                    <countermeasure ref="CIS-K-5.4.2" mitigation="33"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CIS-K-5.4.1" mitigation="34"/>
                <countermeasure ref="CIS-K-5.4.2" mitigation="33"/>
                <countermeasure ref="CSA-SACA-3.1.10:3" mitigation="33"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="authentication-and-authorization" name="Authentication and Authorization" desc="" library="kubernetes-library-devops">
          <threats>
            <threat ref="CP-AA-1" name="Client credentials may be exploited to allow attackers to gain access" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="kubernetes-library-devops" editable="true">
              <desc>The exploitation of client credentials is a major threat in any system.&amp;nbsp; An adversary with access to client credentials can carry out any activity that the client can.&amp;nbsp; Their activities may also be missed by logging and other security measures as their activities may appear valid.</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CP-AA-1.1">
                  <countermeasures>
                    <countermeasure ref="CIS-K-3.1.1" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CIS-K-3.1.1" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="PO-AA-1" name="Lack of cluster wide authentication and authorization protocols may result in security gaps from individual development activities" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="kubernetes-library-devops" editable="true">
              <desc>&lt;div&gt;
  In container networking, communications between containers must be secured, network traffic must be monitored, and access to the network traffic, resources, and configurations must be controlled. In terms of applications, communications between containers affect access control-limiting access to network 
&lt;/div&gt; 
&lt;div&gt;
  traffic, resources, and configurations.&amp;nbsp; The absence of cluster wide policies make these difficult to implement on an individual level.&amp;nbsp; This absence can result in information spillage and system compromise. 
&lt;/div&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="PO-AA-1.1">
                  <countermeasures>
                    <countermeasure ref="CSA-SACA-3.1.5:2" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CSA-SACA-3.1.5:2" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="general" name="General" desc="" library="kubernetes-library-devops">
          <threats>
            <threat ref="PO-G-3" name="Complex requirements for configuring infrastructure may result in critical activities not being carried out" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="kubernetes-library-devops" editable="true">
              <desc>There are number of security risks which may be overlooked in container architectures.&amp;nbsp; This may compromise performance or integrity or clusters.&amp;nbsp;&amp;nbsp;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="PO-G-3.1">
                  <countermeasures>
                    <countermeasure ref="C-NSA-HG-05" mitigation="20"/>
                    <countermeasure ref="CSA-SACA-3.1.8:5" mitigation="20"/>
                  </countermeasures>
                </weakness>
                <weakness ref="PO-G-3.2">
                  <countermeasures>
                    <countermeasure ref="CSA-SACA-3.1.12:2" mitigation="20"/>
                    <countermeasure ref="CSA-SACA-3.1.12:3" mitigation="20"/>
                    <countermeasure ref="CSA-SACA-3.1.9:2" mitigation="20"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-NSA-HG-05" mitigation="20"/>
                <countermeasure ref="CSA-SACA-3.1.12:2" mitigation="20"/>
                <countermeasure ref="CSA-SACA-3.1.12:3" mitigation="20"/>
                <countermeasure ref="CSA-SACA-3.1.8:5" mitigation="20"/>
                <countermeasure ref="CSA-SACA-3.1.9:2" mitigation="20"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="PO-G-1" name="Malicious images may compromise security" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="kubernetes-library-devops" editable="true">
              <desc>One of the benefits of Kubernetes is the ability to share, download and re-use images.&amp;nbsp; This can greatly improve development and operation time and support collaboration.&amp;nbsp; However images which are not secured can be a mechanism for introducing malicious code etc.&amp;nbsp; to a cluster.&amp;nbsp;&amp;nbsp;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="PO-G-1.1">
                  <countermeasures>
                    <countermeasure ref="CIS-K-5.5.1" mitigation="20"/>
                    <countermeasure ref="CSA-SACA-3.1.6:4" mitigation="20"/>
                  </countermeasures>
                </weakness>
                <weakness ref="PO-G-1.2">
                  <countermeasures>
                    <countermeasure ref="CSA-SACA-3.1.1:2" mitigation="20"/>
                    <countermeasure ref="CSA-SACA-3.1.8:1" mitigation="20"/>
                  </countermeasures>
                </weakness>
                <weakness ref="PO-G-1.3">
                  <countermeasures>
                    <countermeasure ref="CSA-SACA-3.1.6:5" mitigation="20"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CIS-K-5.5.1" mitigation="20"/>
                <countermeasure ref="CSA-SACA-3.1.1:2" mitigation="20"/>
                <countermeasure ref="CSA-SACA-3.1.6:4" mitigation="20"/>
                <countermeasure ref="CSA-SACA-3.1.6:5" mitigation="20"/>
                <countermeasure ref="CSA-SACA-3.1.8:1" mitigation="20"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="PO-G-2" name="Unrestricted access to system calls make the cluster vulnerable to a variety of attack mechanisms" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="kubernetes-library-devops" editable="true">
              <desc>System calls allow programs to request services from the kernel of the operating system they are executed on.&amp;nbsp; &amp;nbsp;They are the only entry points into the kernel system and, if not properly managed, can result in unintentional system complications or targeted attacks from outside.&amp;nbsp;&amp;nbsp;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="PO-G-2.1">
                  <countermeasures>
                    <countermeasure ref="CIS-K-5.7.2" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CIS-K-5.7.2" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="logging-and-auditing" name="Logging and Auditing" desc="" library="kubernetes-library-devops">
          <threats>
            <threat ref="CP-LA-1" name="Attackers make undetected or unaudited changes or ingress to cluster via the control plane" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="kubernetes-library-devops" editable="true">
              <desc>It is very difficult to make sure that no vulnerabilities remain in a system, no matter how good those responsible for security are.&amp;nbsp; This makes it extremely important that logging and monitoring are carried out in order to ensure that exploits are noticed and managed quickly. 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  In Kubernetes, logging should be configured via the control plane as this allows many other areas of the cluster to be monitored. 
&lt;/div&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CP-LA-1.1">
                  <countermeasures>
                    <countermeasure ref="CIS-K-3.2.1" mitigation="50"/>
                    <countermeasure ref="CIS-K-3.2.2" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CIS-K-3.2.1" mitigation="50"/>
                <countermeasure ref="CIS-K-3.2.2" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="logging-and-monitoring" name="Logging and Monitoring" desc="" library="kubernetes-library-devops">
          <threats>
            <threat ref="PO-LM-1" name="Lack of infrastructure wide forensics capabilities may result in a lack of sufficient data for security analytics" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="kubernetes-library-devops" editable="true">
              <desc>&lt;div&gt;
  It is vital that the container infrastructure supports digital forensics capabilities that can be integrated into an incident response plan. Applications include image forensics (i.e., investigating the contents of an image), network forensics (i.e., investigating network traffic related to containers by collecting and analyzing netflows and full packet capture), memory forensics (i.e., investigating binaries and related activities in runtime for possible compromise), and log forensics (i.e., investigating host, container, and other infrastructure logs for anomalies and possible signs of compromise). It also ensures the infrastructure collects and provides access to the necessary data sources. 
&lt;/div&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="PO-LM-1.1">
                  <countermeasures>
                    <countermeasure ref="C-NSA-HG-04" mitigation="25"/>
                    <countermeasure ref="CSA-SACA-3.1.7:3" mitigation="25"/>
                    <countermeasure ref="CSA-SACA-3.1.7:4" mitigation="25"/>
                  </countermeasures>
                </weakness>
                <weakness ref="PO-LM-1.2">
                  <countermeasures>
                    <countermeasure ref="CSA-SACA-3.1.7:5" mitigation="25"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-NSA-HG-04" mitigation="25"/>
                <countermeasure ref="CSA-SACA-3.1.7:3" mitigation="25"/>
                <countermeasure ref="CSA-SACA-3.1.7:4" mitigation="25"/>
                <countermeasure ref="CSA-SACA-3.1.7:5" mitigation="25"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="networking" name="Networking" desc="" library="kubernetes-library-devops">
          <threats>
            <threat ref="PO-N-1" name="Incorrect network policies may allow dangerous connections between objects in the cluster" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="kubernetes-library-devops" editable="true">
              <desc>&lt;div&gt; 
 &lt;div&gt;
   Network policies are used to specify how groups of pods are allowed to communicate with each other and other network endpoints. NetworkPolicy resources use labels to select pods and define rules which specify what traffic is allowed to the selected pods.&amp;nbsp; &amp;nbsp;Running objects in a cluster without adequate network policies can result in unrestricted access.&amp;nbsp; This is a highly exploitable vulnerability which could be used to target many other areas of the cluster. 
 &lt;/div&gt; 
&lt;/div&gt; 
&lt;div&gt;&lt;/div&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="PO-N-1.1">
                  <countermeasures>
                    <countermeasure ref="CIS-K-5.3.2" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CIS-K-5.3.2" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="PO-N-2" name="Network traffic may be exposed to adversaries" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="kubernetes-library-devops" editable="true">
              <desc>&lt;div&gt;
  Microservices have a higher requirement for secure communication between components than that found in legacy applications. Operators can be challenged to provide a flexible secure network transport between selected components. The absence can result in information spillage and system compromise 
&lt;/div&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="PO-N-2.1">
                  <countermeasures>
                    <countermeasure ref="CSA-SACA-3.1.5:3" mitigation="50"/>
                    <countermeasure ref="CSA-SACA-3.1.9:3" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CSA-SACA-3.1.5:3" mitigation="50"/>
                <countermeasure ref="CSA-SACA-3.1.9:3" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="badc7d21-f402-4e9d-a9f9-0e246b62b94f" diagramComponentId="7a752ed8-c180-43e4-b3d6-27e959216e91" ref="ad9c3882-d6ad-4aa3-8509-779e778b384a" name="Azure Monitor" desc="" library="Microsoft-Azure" parentComponentRef="b359f0ab-6790-4cbb-b7ae-c451ccbda797" componentDefinitionRef="microsoft-azure-monitor">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses>
        <weakness ref="CWE-16" name="Configuration" state="0" impact="100" issueId="" issueLink="">
          <desc>Weaknesses in this category are typically introduced during the
                        configuration of the software.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:30.682">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="DATA-TRANSMIT-CLEAR" name="Data is transmitted in clear text" state="0" impact="100" issueId="" issueLink="">
          <desc>Data is not protected when transmitted to applications or customers and it can be read or modified by unauthorized actors.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:30.682">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-MON02" name="Excessive use of administrator accounts" state="0" impact="100" issueId="" issueLink="">
          <desc>The administrator accounts are used for all actions, not only for administrative actions. This
                        is because these users have not got a personal or a user account to do the daily actions.&amp;nbsp;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that there is any rule to notify when there is a bad usage of the root
                            account.&lt;/li&gt;
                            &lt;li&gt;Check if these rules are enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:30.682">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CWE-778" name="Insufficient Logging" state="0" impact="100" issueId="" issueLink="">
          <desc>When a critical security event occurs, the software either does not record the event or omits important details about the event when logging it. When critical security events are not logged properly, such as in the case of a failed login attempt, this can make malicious behavior more difficult to detect and may hinder forensic analyses after a successful attack.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:30.682">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-NON-IDENTIFY" name="Insufficient resource identification" state="0" impact="100" issueId="" issueLink="">
          <desc>Resources are not registered in the safety net systems, and/or additional unidentified resources exist. As such, additional weaknesses might be introduced.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:30.682">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-MON03" name="Lack of 2FA" state="0" impact="100" issueId="" issueLink="">
          <desc>Logging into the console without using Multi-factor Authentication (MFA) and without being detected. The connection without MFA must be audited and monitored, the correct security group must be informed and the connection must be validated.&amp;nbsp;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that there is any rule to notify when someone tries to login into the
                            console without MFA.&lt;/li&gt;
                            &lt;li&gt;Check if these rules are enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:30.682">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZ-W04" name="Misconfigured Authentication Method for Administrator Accounts" state="0" impact="100" issueId="" issueLink="">
          <desc>The authentication method &amp;quot;Multi-factor Authentication&amp;quot; for the Administrator accounts is not configured.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;Multi-Factor Authentication&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check all Administrator accounts have got the MFA flag enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:30.682">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-IDENTITY-03" name="Misconfigured User Account" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        Key security settings such as resetting the password and other password controls are not
                        configured.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log in to the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each user has got an assigned account.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;Password reset&amp;quot; &amp;gt; &amp;quot;Authentication Method&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that the security confirmation measures and the security criteria are well
                            filled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:30.681">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-ACCESS-01" name="Misconfigured credentials for groups and roles" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        The credentials for groups and roles are not correctly configured and there are user accounts with more privileges than necessary.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each user has got assigned the correct groups.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All groups&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each group has got assigned the correct roles to achieve principle of
                            least privilege.&lt;/li&gt;
                            &lt;li&gt;Check that the roles for the Cloud Service are well assigned.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;div&gt;
                            &lt;/div&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:30.681">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-EXPIRATION-DATE" name="Misconfigured password expiration" state="0" impact="100" issueId="" issueLink="">
          <desc>The password expiration is not configured and users are not obliged to change their passwords.
                        Not change frequently the passwords gives facilities to attackers to obtain them.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            Check that the password expiration has got the correct values. Therefore, we can obtain the
                            values using the Get-MsolPasswordPolicy cmdlet from the Azure Active Directory Module for
                            Windows PowerShell. With the following command:
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;br /&gt;
                            &lt;/div&gt;
                            &lt;blockquote&gt;
                            &lt;div&gt;
                            PS C:\&amp;gt; Get-MsolPasswordPolicy -DomainName contoso.com
                            &lt;/div&gt;
                            &lt;/blockquote&gt;
                            &lt;div&gt;
                            &lt;br /&gt;
                            &lt;/div&gt;
                            &lt;div&gt;
                            More information: Doc MS Azure
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:30.681">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-VNET01" name="Networks for Azure resources are not properly segmented. Without proper segmentation, when attackers gain access to one resource, any other resources in the same VNet are compromised" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        Resources in the same VNet are compromised because when one of them is attacked and the
                        attackers gain access, they also gain access to all resources.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            Identify the resources and the Microsoft Azure instances.
                            &lt;/div&gt;
                            &lt;div&gt;
                            Check that the resources are in the correct VNet.
                            &lt;/div&gt;
                            &lt;div&gt;
                            Check that the Microsoft Azure instances&amp;nbsp;are into different VNets.
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:30.681">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-MONITOR-BACKUPS" name="There is not a recover or backup mechanism" state="0" impact="100" issueId="" issueLink="">
          <desc>There are not any processes or mechanisms to regularly save the data to another place in order to have an older version of the data to restore in case of loss. Consequently the data cannot be easily recovered or they cannot be recovered at all.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:30.681">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-NET-01" name="Unauthorized connection attempts on open ports" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        Receiving unauthorized connections to open ports makes systems vulnerable to attacks. To
                        avoid this, access to the network must be as restricted as possible, so that only the necessary
                        ports are open and the minimum inbound traffic is accepted.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Check that each Azure resources have got their Network Security Groups.&lt;/li&gt;
                            &lt;li&gt;Check that a set of these groups achieve with the principle of the least
                            privilege.&lt;/li&gt;
                            &lt;li&gt;Check that the inbound/outbound security rules are enabled and correctly
                            configured.&lt;/li&gt;
                            &lt;li&gt;In &amp;quot;Inbound security rules&amp;quot;, check that all the traffic from
                            0.0.0.0/0&amp;nbsp;is blocked.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:30.680">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="AZ-A09" name="Apply RBAC with pre-defined policies added into groups or roles" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Define and create groups that relate to job functions (administrators, developers, accounting,
                        etc.) and assign the relevant permissions for each group, and then assign IAM users to those
                        groups.&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &amp;nbsp;&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        All the users in an IAM group inherit the permissions assigned to the group. That way, you can
                        make changes for everyone in a group in just one place. As people move around in your company,
                        you can simply change what IAM group their IAM user belongs to. This method is known as Role
                        Based Access Control (RBAC).&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Remove a user from a group:&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;ol&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                        &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                        &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Click on the user name. All the groups the user belongs are there.&lt;/li&gt;
                        &lt;li&gt;Choose the group and &amp;quot;Remove&amp;quot;.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/ol&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Create a group and add user:&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;ol&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                        &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                        &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All groups&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Click &amp;quot;New Group&amp;quot; and fill the information.&lt;/li&gt;
                        &lt;li&gt;Search and add the user.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Create a group and add members in Azure Active Directory" url="https://docs.microsoft.com/en-us/azure/active-directory/active-directory-groups-create-azure-portal"/>
            <reference name="MS Azure - Use Role-Based Access Control to manage access to your Azure subscription resources" url="https://docs.microsoft.com/en-us/azure/active-directory/role-based-access-control-configure"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each user has got assigned the correct groups.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All groups&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each group has got assigned the correct roles.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:30.577">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-MONITOR7" name="Configure diagnostics settings" issueId="" issueLink="" platform="" cost="0" risk="42" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;There are some options that must be configured properly to configure diagnostics settings.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Checklist:&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Ensure that a 'Diagnostics Setting' exists&lt;/li&gt;&lt;li&gt;Ensure Diagnostic Setting captures appropriate categories&lt;/li&gt;&lt;li&gt;Ensure the storage container storing the activity logs is not publicly accessible&lt;/li&gt;&lt;li&gt;Ensure the storage account containing the container with activity logs is encrypted with BYOK (Use Your Own Key)&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;From Azure Console&lt;/strong&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Click on the resource that has a diagnostic status of disabled&lt;ol&gt;&lt;li&gt;Select Add Diagnostic Settings&lt;ol&gt;&lt;li&gt;Enter a Diagnostic setting name&lt;ol&gt;&lt;li&gt;Select the appropriate log, metric, and destination. (This may be Log Analytics/Storage account or Event Hub)&lt;/li&gt;&lt;li&gt;Click save&lt;/li&gt;&lt;li&gt;Repeat these step for all resources as needed.&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;Go to Azure Monitor&lt;ol&gt;&lt;li&gt;Click Activity log&lt;ol&gt;&lt;li&gt;Click on Diagnostic settings&lt;ol&gt;&lt;li&gt;Click on Edit Settings for the diagnostic settings entry&lt;ol&gt;&lt;li&gt;Ensure that the following categories are checked: Administrative, Alert, Policy, and Security&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;Search for Storage Accounts to access Storage account blade&lt;ol&gt;&lt;li&gt;Click on the storage account name&lt;ol&gt;&lt;li&gt;In Section Blob Service click Containers. It will list all the containers in next blade&lt;ol&gt;&lt;li&gt;Look for a record with container named as insight-operational-logs. Click ... from right most column to open Context menu&lt;ol&gt;&lt;li&gt;Click Access Policy from Context Menu and set Public Access Level to Private (no anonymous access)&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;In Section SETTINGS click Encryption. It will show Storage service encryption configuration pane.&lt;ol&gt;&lt;li&gt;Check Use your own key which will expand Encryption Key Settings&lt;ol&gt;&lt;li&gt;Use option Enter key URI or Select from Key Vault to set up encryption with your own key&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;/ol&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="14" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="16" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5.1.1" supportedStandardRef="cis-azure-standard"/>
            <standard ref="5.1.1" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="5.1.2" supportedStandardRef="cis-azure-standard"/>
            <standard ref="5.1.2" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="5.1.3" supportedStandardRef="cis-azure-standard"/>
            <standard ref="5.1.3" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="5.1.4" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="8" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="9" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API7:2019-Security Misconfiguration" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="DP-5" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="LT-4" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="LT-5" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="NS-1" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Follow the paths detailed in the description and ensure that the values are set correctly.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:30.578">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-A12" name="Configure password expiration" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        &lt;div&gt;
                        Configure the password expiration to force after a determinate time, the password code shall be
                        changed for the users.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Configure password management to match security criteria. This value is configurable
                        using the Set-MsolPasswordPolicy cmdlet from the Azure Active Directory Module for Windows
                        PowerShell. With the following command as the example:&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        &lt;div&gt;
                        Set-MsolPasswordPolicy -ValidityPeriod 60 -NotificationDays 14&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;This command updates the tenant so that all users passwords expire after 60
                        days. The users receive notification 14 days prior to that expiry.
                        &lt;/blockquote&gt;
                        &lt;div&gt;
                        &lt;div&gt;
                        More information:&amp;nbsp;
                        &lt;a
                        href="https://docs.microsoft.com/en-us/powershell/module/msonline/set-msolpasswordpolicy?view=azureadps-1.0"&gt;Doc
                        MS Azure&lt;/a&gt;
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;ul&gt;
                        &lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Password policies and restrictions in Azure Active Directory" url="https://docs.microsoft.com/en-us/azure/active-directory/active-directory-passwords-policy"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            Check that the password expiration has got the correct values. Therefore, we can obtain the
                            values using the Get-MsolPasswordPolicy cmdlet from the Azure Active Directory Module for
                            Windows PowerShell. With the following command:
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;br /&gt;
                            &lt;/div&gt;
                            &lt;blockquote&gt;
                            &lt;div&gt;
                            PS C:\&amp;gt; Get-MsolPasswordPolicy -DomainName contoso.com
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;br /&gt;
                            &lt;/div&gt;
                            &lt;/blockquote&gt;More information:
                            &lt;a
                            href="https://docs.microsoft.com/en-us/powershell/module/msonline/get-msolpasswordpolicy?view=azureadps-1.0"&gt;Doc
                            MS Azure&lt;/a&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:30.578">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-A11" name="Configure roles for the Cloud Service" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Define and create the roles for the Azure Cloud Service. For each role, define the permissions and also configure how that role runs. When you launch an Azure instance, you shall specify a role for the instance as a launch parameter. Applications that run on the Cloud instance use the role's credentials when they access Azure resources. This role's permissions determine what the application is allowed to do.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Configure an Azure cloud service from Solution Explorer in Visual Studio.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Use Role-Based Access Control to manage access to your Azure subscription resources" url="https://docs.microsoft.com/en-us/azure/active-directory/role-based-access-control-configure"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that the roles for the Cloud Service are well assigned.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:30.578">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-MONITOR1" name="Connect computers without Internet access by using the Log Analytics gateway in Azure Monitor" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Connect computers without Internet access by using the Log Analytics gateway in Azure Monitor 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  The Log Analytics gateway is an HTTP forward proxy that supports HTTP tunneling using the HTTP CONNECT command. This gateway sends data to Azure Automation and a Log Analytics workspace in Azure Monitor on behalf of the computers that cannot directly connect to the Internet. 
&lt;/div&gt; 
&lt;div&gt;
  Some IT security policies don't allow Internet connection for network computers. These unconnected computers could be point of sale (POS) devices or servers supporting IT services, for example. To connect these devices to Azure Automation or a Log Analytics workspace so you can manage and monitor them, configure them to communicate directly with the Log Analytics gateway. The Log Analytics gateway can receive configuration information and forward data on their behalf. If the computers are configured with the Log Analytics agent to directly connect to a Log Analytics workspace, the computers instead communicate with the Log Analytics gateway. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  Supported encryption protocols 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The Log Analytics gateway supports only Transport Layer Security (TLS) 1.0, 1.1, and 1.2. It doesn't support Secure Sockets Layer (SSL). To ensure the security of data in transit to Log Analytics, configure the gateway to use at least TLS 1.2. Older versions of TLS or SSL are vulnerable. Although they currently allow backward compatibility, avoid using them. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - Download the Log Analytics gateway 
&lt;/div&gt; 
&lt;div&gt;
  - Get the latest version of the Log Analytics gateway Setup file from either Microsoft Download Center (Download Link) or the Azure portal. 
&lt;/div&gt; 
&lt;div&gt;
  - Install Log Analytics gateway using setup wizard or the command line 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  For more information please follow Reference URL. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Connect computers without Internet access by using the Log Analytics gateway in Azure Monitor" url="https://docs.microsoft.com/en-us/azure/azure-monitor/platform/gateway"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Ensure that you are using Log Analytics gateway to send data to a Log Analytics workspace in Azure Monitor on behalf of the computers that cannot directly connect to the Internet preventing need of computers to be connected to Internet.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:30.578">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-MONITOR5" name="Create activity log alerts by using Azure Monitor" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Create activity log alerts by using Azure Monitor 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  Activity log alerts are the alerts that get activated when a new activity log event occurs that matches the conditions specified in the alert. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  These alerts are for Azure resources and can be created by using an Azure Resource Manager template. They also can be created, updated, or deleted in the Azure portal. Typically, you create activity log alerts to receive notifications when specific changes occur to resources in your Azure subscription. Alerts are often scoped to particular resource groups or resources. For example, you might want to be notified when any virtual machine in the sample resource group myProductionResourceGroup is deleted. Or, you might want to get notified if any new roles are assigned to a user in your subscription. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  Create with the Azure portal 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Use the following procedure. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  1. In the Azure portal, select Monitor &amp;gt; Alerts. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  2. Select New alert rule in the upper-left corner of the Alerts window. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The Create rule window appears. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  3. Under Define alert condition, provide the following information, and select Done: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - Alert target: To view and select the target for the new alert, use Filter by subscription / Filter by resource type. Select the resource or resource group from the list displayed. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Note: You can select only Azure Resource Manager tracked resource, resource group, or an entire subscription for an activity log signal. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - Under Target criteria, select Add criteria. All available signals for the target are displayed, which includes those from various categories of Activity Log. The category name is appended to the Monitor Service name. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - Select the signal from the list displayed of various operations possible for the type Activity Log. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  You can select the log history time-line and the corresponding alert logic for this target signal: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Note: In order to have a high quality and effective rules, Azure asks to add at least one more condition to rules with the signal "All Administrative". As a part of the definition of the alert you must fill one of the drop downs: "Event level", "Status" or "Initiated by" and by that the rule will be more specific. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - History time: Events available for the selected operation can be plotted over the last 6, 12, or 24 hours or over the last week. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - Alert logic: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; -- Event level: The severity level of the event: Verbose, Informational, Warning, Error, or Critical. 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; -- Status: The status of the event: Started, Failed, or Succeeded. 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; -- Event initiated by: Also known as the caller. The email address or Azure Active Directory identifier of the user who performed the operation. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  4. Under Define alert details, provide the following details: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - Alert rule name: The name for the new alert rule. 
&lt;/div&gt; 
&lt;div&gt;
  - Description: The description for the new alert rule. 
&lt;/div&gt; 
&lt;div&gt;
  - Save alert to resource group: Select the resource group where you want to save this new rule. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  5. Under Action group, from the drop-down menu, specify the action group that you want to assign to this new alert rule. Or, create a new action group and assign it to the new rule. To create a new group, select + New group. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  6. To enable the rules after you create them, select Yes for the Enable rule upon creation option. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  7. Select Create alert rule. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The new alert rule for the activity log is created, and a confirmation message appears in the upper-right corner of the window. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  You can enable, disable, edit, or delete a rule. Learn more about how to manage activity log rules. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  A simple analogy for understanding conditions on which alert rules can be created in an activity log is to explore or filter events via the activity log in the Azure portal. In the Azure Monitor - Activity log screen, you can filter or find the necessary event and then create an alert by using the Add activity log alert button. Then follow steps 4 through 7 as previously shown. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Create, view, and manage activity log alerts by using Azure Monitor" url="https://docs.microsoft.com/en-us/azure/azure-monitor/platform/alerts-activity-log"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  View and manage in the Azure portal 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  1. In the Azure portal, select Monitor &amp;gt; Alerts. Select Manage alert rules in the upper-left corner of the window. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The list of available rules appears. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  2. Search for the activity log rule to modify. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  You can use the available filters, Subscription, Resource group, Resource, Signal type, or Status, to find the activity rule that you want to edit. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Note: You can edit only Description, Target criteria, and Action groups. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  3. Select the rule, and double-click to edit the rule options. Make the required changes, and then select Save. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  4. You can enable, disable, or delete a rule. Select the appropriate option at the top of the window after you select the rule as described in step 2. 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:30.578">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-A03" name="Create Individual Accounts for the administrator users" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Create an individual account for the administrator users and with this new accounts By creating individual Azure users for people accessing your account, you can give each Azure user a unique set of security credentials.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The administrator accounts shall be used for the administrative actions and for giving or revoke credentials to the user's account. The administrator account shall be not used as a normal user account. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt; 
  &lt;li&gt;Select Azure Active Directory.&lt;/li&gt; 
  &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt; 
  &lt;li&gt;Select &amp;quot;Add New User&amp;quot;.&lt;/li&gt; 
  &lt;li&gt;Fill the required information and click &amp;quot;Create&amp;quot;.&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt; 
&lt;div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Add new users to Azure Active Directory" url="https://docs.microsoft.com/en-us/azure/active-directory/add-users-azure-active-directory"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each user has got a user account assigned.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:30.578">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-A10" name="Create mechanisms to ensure the principle of least privilege is applied" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Create the mechanisms to review periodically the group and user permissions to ensure the least privilege for the user accounts. Granting least privilege ensures that users only have the permissions required to complete their jobs rather than additional privileges that are not required. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Following this model ensures that, should an account be compromised, the blast radius of damage is limited&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Allocate privileges via groups or roles via the recommendation in "Use RBAC with pre-defined policies added into groups or roles".&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt; 
&lt;div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Create a group and add members in Azure Active Directory" url="https://docs.microsoft.com/en-us/azure/active-directory/active-directory-groups-create-azure-portal"/>
            <reference name="MS Azure - Use Role-Based Access Control to manage access to your Azure subscription resources" url="https://docs.microsoft.com/en-us/azure/active-directory/role-based-access-control-configure"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that the principle of least privilege is achieved in the assignation of roles and
                            groups to the users.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:30.578">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-MONITOR6" name="Enable and use Traffic Analytics" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Enable and use Traffic Analytics 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  Traffic Analytics is a cloud-based solution that provides visibility into user and application activity in cloud networks. Traffic analytics analyzes Network Watcher network security group (NSG) flow logs to provide insights into traffic flow in your Azure cloud. With traffic analytics, you can: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - Visualize network activity across your Azure subscriptions and identify hot spots. 
&lt;/div&gt; 
&lt;div&gt;
  - Identify security threats to, and secure your network, with information such as open-ports, applications attempting Internet access, and virtual machines (VM) connecting to rogue networks. 
&lt;/div&gt; 
&lt;div&gt;
  - Understand traffic flow patterns across Azure regions and the Internet to optimize your network deployment for performance and capacity. 
&lt;/div&gt; 
&lt;div&gt;
  - Pinpoint network misconfigurations leading to failed connections in your network. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  Enable Network Watcher 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  To analyze traffic, you need to have an existing network watcher, or enable a network watcher in each region that you have NSGs that you want to analyze traffic for. Traffic analytics can be enabled for NSGs hosted in any of the supported regions. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Select a network security group 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Before enabling NSG flow logging, you must have a network security group to log flows for. If you don't have a network security group, see Create a network security group to create one. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  In Azure portal, go to Network watcher, and then select NSG flow logs. Select the network security group that you want to enable an NSG flow log for. 
&lt;/div&gt; 
&lt;div&gt;
  If you try to enable traffic analytics for an NSG that is hosted in any region other than the supported regions, you receive a "Not found" error. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Enable flow log settings 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Before enabling flow log settings, you must complete the following tasks: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Register the Azure Insights provider, if it's not already registered for your subscription: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Register-AzResourceProvider -ProviderNamespace Microsoft.Insights 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  If you don't already have an Azure Storage account to store NSG flow logs in, you must create a storage account. You can create a storage account with the command that follows. Before running the command, replace &amp;lt;replace-with-your-unique-storage-account-name&amp;gt; with a name that is unique across all Azure locations, between 3-24 characters in length, using only numbers and lower-case letters. You can also change the resource group name, if necessary. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  New-AzStorageAccount ` 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; -Location westcentralus ` 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; -Name &amp;lt;replace-with-your-unique-storage-account-name&amp;gt; ` 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; -ResourceGroupName myResourceGroup ` 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; -SkuName Standard_LRS ` 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; -Kind StorageV2 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Select the following options: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  1. Select On for Status 
&lt;/div&gt; 
&lt;div&gt;
  2. Select Version 2 for Flow Logs version. Version 2 contains flow-session statistics (Bytes and Packets) 
&lt;/div&gt; 
&lt;div&gt;
  3. Select an existing storage account to store the flow logs in. Ensure that your storage does not have "Data Lake Storage Gen2 Hierarchical Namespace Enabled" set to true. 
&lt;/div&gt; 
&lt;div&gt;
  4. Set Retention to the number of days you want to store data for. If you want to store the data forever, set the value to 0. You incur Azure Storage fees for the storage account. 
&lt;/div&gt; 
&lt;div&gt;
  5. Select On for Traffic Analytics Status. 
&lt;/div&gt; 
&lt;div&gt;
  6. Select processing interval. Based on your choice, flow logs will be collected from storage account and processed by Traffic Analytics. You can choose processing interval of every 1 hour or every 10 mins. 
&lt;/div&gt; 
&lt;div&gt;
  7. Select an existing Log Analytics (OMS) Workspace, or select Create New Workspace to create a new one. A Log Analytics workspace is used by Traffic Analytics to store the aggregated and indexed data that is then used to generate the analytics. If you select an existing workspace, it must exist in one of the supported regions and have been upgraded to the new query language. If you do not wish to upgrade an existing workspace, or do not have a workspace in a supported region, create a new one. For more information about query languages, see Azure Log Analytics upgrade to new log search. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Note: The log analytics workspace hosting the traffic analytics solution and the NSGs do not have to be in the same region. For example, you may have traffic analytics in a workspace in the West Europe region, while you may have NSGs in East US and West US. Multiple NSGs can be configured in the same workspace. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  8. Select Save. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Repeat the previous steps for any other NSGs for which you wish to enable traffic analytics for. Data from flow logs is sent to the workspace, so ensure that the local laws and regulations in your country/region permit data storage in the region where the workspace exists. If you have set different processing intervals for different NSGs, data will be collected at different intervals. For example: You can choose to enable processing interval of 10 mins for critical VNETs and 1 hour for noncritical VNETs. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  You can also configure traffic analytics using the Set-AzNetworkWatcherConfigFlowLog PowerShell cmdlet in Azure PowerShell. Run Get-Module -ListAvailable Az to find your installed version. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Traffic Analytics" url="https://docs.microsoft.com/en-us/azure/network-watcher/traffic-analytics"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  View traffic analytics 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  To view Traffic Analytics, search for Network Watcher in the portal search bar. Once inside Network Watcher, to explore traffic analytics and its capabilities, select Traffic Analytics from the left menu. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The dashboard may take up to 30 minutes to appear the first time because Traffic Analytics must first aggregate enough data for it to derive meaningful insights, before it can generate any reports. 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:30.579">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-L01" name="Enable diagnostic logs auditing for Microsoft Azure" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Diagnostic Logs capture activity to the data access plane while the Activity log is a subscription-level log for the control plane. Resource-level diagnostic logs provide insight into operations that were performed within that resource itself, for example, getting a secret from a Key Vault. Currently, 32 Azure resources support Diagnostic Logging (See the references section for a complete list), including Network Security Groups, Load Balancers, Key Vault, AD, Logic Apps and CosmosDB. The content of these logs varies by resource type. For example, Windows event system logs are a category of diagnostics logs for VMs, and blob, table, and queue logs are categories of diagnostics logs for storage accounts.&lt;/p&gt;&lt;p&gt;A number of back-end services were not configured to log and store Diagnostic Logs for certain activities or for a sufficient length. It is crucial that logging systems are correctly configured to log all relevant activities and retain those logs for a sufficient length of time. By default, Diagnostic Logs are not enabled. Given that the mean time to detection in an enterprise is 240 days, a minimum retention period of two years is recommended.&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation:&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;The specific steps for configuring resources within the Azure console vary depending on resource, but typically the steps are:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Go to the resource&lt;/li&gt;&lt;li&gt;Click on Diagnostic settings&lt;/li&gt;&lt;li&gt;In the blade that appears, click "Add diagnostic setting"&lt;/li&gt;&lt;li&gt;Configure the diagnostic settings&lt;/li&gt;&lt;li&gt;Click on Save&lt;/li&gt;&lt;/ol&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Enable diagnostics logging for web apps in Azure App Service" url="https://docs.microsoft.com/en-us/azure/app-service-web/web-sites-enable-diagnostic-log"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5.3" supportedStandardRef="cis-azure-standard"/>
            <standard ref="5.3" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="LT-4" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="LT-5" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Go to the resource&lt;/li&gt;&lt;li&gt;Click on Diagnostic settings&lt;/li&gt;&lt;li&gt;In the blade that appears, click "Add diagnostic setting"&lt;/li&gt;&lt;li&gt;Configure the diagnostic settings&lt;/li&gt;&lt;li&gt;Click on Save&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:30.579">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-A04" name="Enable MFA for Administrator &amp; Co Administrator accounts" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Enable multi-factor authentication (MFA) device enhances the security of the login process for the Administrator accounts. With MFA, users have a device that generates a unique authentication code (a one-time password, or OTP) and users must provide both their normal credentials (like their username and password) and the OTP. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The MFA device can either be a special piece of hardware, or it can be a virtual device. The recommendation for the Service Administrator &amp;amp; Co Administrator accounts is to use MFA to increase the level of security of the login process. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt; 
  &lt;li&gt;Select Azure Active Directory.&lt;/li&gt; 
  &lt;li&gt;Go into "Users and groups" &amp;gt; "All users".&lt;/li&gt; 
  &lt;li&gt;Select "Multi-Factor Authentication".&lt;/li&gt; 
  &lt;li&gt;Choose all the Service Administrator &amp;amp; Co Administrator accounts and enable MFA.&amp;nbsp;&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - How to require two-step verification for a user or group" url="https://docs.microsoft.com/en-us/azure/multi-factor-authentication/multi-factor-authentication-get-started-user-states"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;Multi-Factor Authentication&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check all Administrator accounts have got the MFA flag enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:30.579">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-USER-MFA" name="Enable per-user MFA" issueId="" issueLink="" platform="" cost="0" risk="40" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Enable per-user MFA 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  Multi-factor authentication (MFA) is a process where a user is prompted during a sign-in event for additional forms of identification. This prompt could be to enter a code on their cellphone or to provide a fingerprint scan. When you require a second form of authentication, security is increased as this additional factor isn't something that's easy for an attacker to obtain or duplicate. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  To secure user sign-in events in Azure AD, you can require multi-factor authentication (MFA). Enabling Azure AD Multi-Factor Authentication using Conditional Access policies is the recommended approach to protect users. Conditional Access is an Azure AD Premium P1 or P2 feature that lets you apply rules to require MFA as needed in certain scenarios 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  For Azure AD free tenants without Conditional Access, you can use security defaults to protect users. Users are prompted for MFA as needed, but you can't define your own rules to control the behavior. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Features and licenses for Azure AD Multi-Factor Authentication" url="https://docs.microsoft.com/en-us/azure/active-directory/authentication/concept-mfa-licensing"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  1. Log into the Azure portal as an owner. 
&lt;/div&gt; 
&lt;div&gt;
  2. Select Azure Active Directory. 
&lt;/div&gt; 
&lt;div&gt;
  3. Go into "Users and groups" &amp;gt; "All users". 
&lt;/div&gt; 
&lt;div&gt;
  4. Select "Multi-Factor Authentication". 
&lt;/div&gt; 
&lt;div&gt;
  5. Ensure your users have the MFA flag enabled. 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:30.579">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-MONITOR04" name="Ensure regular automated back-ups to Azure Monitor and related resources" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Ensure regular automated back-ups to Azure Monitor and related resources 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  Create and apply back-up mechanisms to Azure Monitor and any related resources. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  Use Azure Resource Manager to export the Azure Monitor and related resources in a JavaScript Object Notation (JSON) template which can be used as backup for Azure Monitor and related configurations. Use Azure Automation to run the backup scripts automatically. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  For more information please see Reference URLs. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="An introduction to Azure Automation" url="https://docs.microsoft.com/en-us/azure/automation/automation-intro"/>
            <reference name="Azure security baseline for Azure Monitor" url="https://docs.microsoft.com/en-us/azure/azure-monitor/security-baseline"/>
            <reference name="Resource Manager template samples for Log Analytics workspaces in Azure Monitor" url="https://docs.microsoft.com/en-us/azure/azure-monitor/samples/resource-manager-workspace"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Ensure that regular back-ups are performed.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:30.579">
              <output/>
            </source>
            <references>
              <reference name="Azure security baseline for Azure Monitor" url="https://docs.microsoft.com/en-us/azure/azure-monitor/security-baseline"/>
            </references>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-L05" name="Export the Audit Logs to a storage account" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Export the information of Audit Logs to a storage account. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Go to "Monitor" and then to "Activity Logs".&lt;/li&gt; 
  &lt;li&gt;Push the button "Export".&lt;/li&gt; 
  &lt;li&gt;Select "All Regions".&lt;/li&gt; 
  &lt;li&gt;Select "Export to a storage account" and select your account.&lt;/li&gt; 
  &lt;li&gt;Select the "Retention (days)" as minimum 90 days.&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Enable diagnostics logging for web apps in Azure App Service" url="https://docs.microsoft.com/en-us/azure/app-service-web/web-sites-enable-diagnostic-log"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Activity Logs&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Push the button &amp;quot;Export&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;All Regions&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;Export to a storage account&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that all fields are correctly filled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:30.579">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-N09" name="Isolate Azure instances into different VNets" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Specify a VNet for the Azure instance as a launch parameter. Applications that run on the Cloud instance can use the VNet security configuration when they access Azure resources.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  You can configure an Azure cloud service from Solution Explorer in Visual Studio. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Create a virtual network with multiple subnets" url="https://docs.microsoft.com/en-us/azure/virtual-network/virtual-networks-create-vnet-arm-pportal"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that the Azure instances are into different VNets.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:30.579">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-APPROVED-LOCATIONS" name="Manage Azure resources from only approved locations" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Manage Azure resources from only approved locations 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  Use Conditional Access Named Locations to allow access from only specific logical groupings of IP address ranges or countries/regions. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  Prerequisites 
&lt;/div&gt; 
&lt;div&gt;
  You need: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - An Azure AD tenant. Sign up for a free trial. 
&lt;/div&gt; 
&lt;div&gt;
  - A user, who is a global administrator for the tenant. 
&lt;/div&gt; 
&lt;div&gt;
  - An IP range that is established and credible in your organization. The IP range needs to be in Classless Interdomain Routing (CIDR) format. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Configure named locations 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  1. Sign in to the Azure portal. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  2. In the left pane, select Azure Active Directory, then select Conditional Access from the Security section. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  3. On the Conditional Access page, select Named locations and select New location. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  4. Fill out the form on the new page. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - In the Name box, type a name for your named location. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - In the IP ranges box, type the IP range in CIDR format. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - Click Create. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Quickstart: Configure named locations in Azure Active Directory" url="https://docs.microsoft.com/en-us/azure/active-directory/reports-monitoring/quickstart-configure-named-locations"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Ensure that you have configured named locations in your Azure environment.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:30.579">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-A07" name="Recertify user access" issueId="" issueLink="" platform="" cost="0" risk="40" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Do regular reviews of accounts on the system and verify that it doesn't exist stoled or fake
                        accounts. With this process is ensured that there are not compromised accounts by former
                        employees or by attackers.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        At least every 90 days complete the following:&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Log in to the Azure portal as an owner.&lt;/li&gt;
                        &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                        &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;For any user that should not exist:&lt;/li&gt;
                        &lt;li&gt;Select the user.&lt;/li&gt;
                        &lt;li&gt;Click &amp;quot;Delete&amp;quot;.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Assign a user or group to an enterprise app in Azure Active Directory" url="https://docs.microsoft.com/en-us/azure/active-directory/active-directory-coreapps-assign-user-azure-portal"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Log in to the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each user has got an assigned account.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:30.579">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-MONITOR3" name="Use Azure Private Link to securely connect networks to Azure Monitor" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Use Azure Private Link to securely connect networks to Azure Monitor 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  Azure Private Link allows you to securely link Azure PaaS services to your virtual network using private endpoints. For many services, you just set up an endpoint per resource. However, Azure Monitor is a constellation of different interconnected services that work together to monitor your workloads. As a result, Microsoft Azure has built a resource called an Azure Monitor Private Link Scope (AMPLS) that allows you to define the boundaries of your monitoring network and connect to your virtual network.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  Example connection 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Start by creating an Azure Monitor Private Link Scope resource. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  1. Go to Create a resource in the Azure portal and search for Azure Monitor Private Link Scope. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  2. Click create. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  3. Pick a Subscription and Resource Group. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  4. Give the AMPLS a name. It is best to use a name that is clear what purpose and security boundary the Scope will be used for so that someone won't accidentally break network security boundaries. For example, "AppServerProdTelem". 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  5. Click Review + Create. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  6. Let the validation pass, and then click Create. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Connect Azure Monitor resources 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  You can connect your AMPLS first to private endpoints and then to Azure Monitor resources or vice versa, but the connection process goes faster if you start with your Azure Monitor resources. Here's how we connect Azure Monitor Log Analytics workspaces and Application Insights components to an AMPLS 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  1. In your Azure Monitor Private Link scope, click on Azure Monitor Resources in the left-hand menu. Click the Add button. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  2. Add the workspace or component. Clicking the Add button brings up a dialog where you can select Azure Monitor resources. You can browse through your subscriptions and resource groups, or you can type in their name to filter down to them. Select the workspace or component and click Apply to add them to your scope. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Note: Deleting Azure Monitor resources requires that you first disconnect them from any AMPLS objects they are connected to. It's not possible to delete resources connected to an AMPLS. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Connect to a private endpoint 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Now that you have resources connected to your AMPLS, create a private endpoint to connect our network. You can do this task in the Azure portal Private Link center, or inside your Azure Monitor Private Link Scope, as done in this example. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  1. In your scope resource, click on Private Endpoint connections in the left-hand resource menu. Click on Private Endpoint to start the endpoint create process. You can also approve connections that were started in the Private Link center here by selecting them and clicking Approve. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  2. Pick the subscription, resource group, and name of the endpoint, and the region it should live in. The region needs to be the same region as the virtual network you will connect it to. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  3. Click Next: Resource. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  4. In the Resource screen, 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  a. Pick the Subscription that contains your Azure Monitor Private Scope resource. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  b. For resource type, choose Microsoft.insights/privateLinkScopes. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  c. From the resource drop-down, choose your Private Link scope you created earlier. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  d. Click Next: Configuration &amp;gt;. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  5. On the configuration pane, 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  a. Choose the virtual network and subnet that you want to connect to your Azure Monitor resources. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  b. Choose Yes for Integrate with private DNS zone, and let it automatically create a new Private DNS Zone. The actual DNS zones may be different from what is shown in the screenshot below. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Note: If you choose No and prefer to manage DNS records manually, first complete setting up your Private Link - including this Private Endpoint and the AMPLS configuration. Then, configure your DNS according to the instructions in Azure Private Endpoint DNS configuration. Make sure not to create empty records as preparation for your Private Link setup. The DNS records you create can override existing settings and impact your connectivity with Azure Monitor. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  c. Click Review + create. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  d. Let validation pass. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  e. Click Create. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  You have now created a new private endpoint that is connected to this Azure Monitor Private Link scope. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Use Azure Private Link to securely connect networks to Azure Monitor" url="https://docs.microsoft.com/en-us/azure/azure-monitor/platform/private-link-security"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Ensure that you use Azure Private Link with Azure Monitor.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:30.579">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-MONITOR2" name="Use VNet Service tags for Azure Monitor" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Use VNet Service tags for Azure Monitor 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  You can simplify network security rules by using VNet Service tags. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Use Virtual Network Service tags to define network access controls on network security groups configured for your Azure Monitor resources. Service tags can be used in place of specific IP addresses when creating security rules 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  To allow traffic to reach Azure Monitor, use the "AzureMonitor" service tags to allow inbound and outbound traffic through Network Security Groups. To allow availability monitoring test traffic to reach Azure Monitor, use the "ApplicationInsightsAvailability" service tag to all inbound traffic through network security groups. Microsoft manages the address prefixes encompassed by the service tag and automatically updates the service tag as addresses change. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Azure security baseline for Azure Monitor" url="https://docs.microsoft.com/en-us/azure/azure-monitor/security-baseline"/>
            <reference name="Virtual network service tags" url="https://docs.microsoft.com/en-us/azure/virtual-network/service-tags-overview"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Ensure that your network security rules are simplified by using VNet Service tags.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:30.579">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="authentication" name="Authentication" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="AZURE-LOST-ACCESS-ROOT" name="Attackers gain unauthorized access to the root account due to the lack of configuration of the account" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;div&gt;Attackers could gain unauthorized access to the administrator account due to a lack of configuration of the account and its security mechanisms, making it possible to modify credentials and add/remove user accounts.
                                &lt;/div&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="AZ-W04">
                  <countermeasures>
                    <countermeasure ref="AZ-A04" mitigation="50"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AZURE-MON02">
                  <countermeasures>
                    <countermeasure ref="AZ-A03" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-A03" mitigation="50"/>
                <countermeasure ref="AZ-A04" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="AZURE-LOST-ACCESS-USER" name="Attackers gain unauthorized access to the user account due to the lack of configuration of the account" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;Attackers could gain unauthorized access to the user account due to the lack of configuration of the account, for example, the security question to reset the password is configured incorrectly.&lt;/p&gt;</desc>
              <riskRating confidentiality="50" integrity="50" availability="50" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-IDENTITY-03">
                  <countermeasures>
                    <countermeasure ref="AZ-A07" mitigation="50"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AZURE-MON03">
                  <countermeasures>
                    <countermeasure ref="AZURE-USER-MFA" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-A07" mitigation="50"/>
                <countermeasure ref="AZURE-USER-MFA" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="authorization" name="Authorization" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="LOSS-CONTROL_ENV" name="Attackers gain unauthorized access to the control of the environment" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;Attackers could potentially gain unauthorized access to the control of the environment, due to user accounts - or role groups - not being well defined and configured. As a consequence attackers may be able to make changes without root approval.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="75" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-ACCESS-01">
                  <countermeasures>
                    <countermeasure ref="AZ-A09" mitigation="25"/>
                    <countermeasure ref="AZ-A10" mitigation="25"/>
                    <countermeasure ref="AZ-A11" mitigation="25"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AZURE-EXPIRATION-DATE">
                  <countermeasures>
                    <countermeasure ref="AZ-A12" mitigation="25"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-A09" mitigation="25"/>
                <countermeasure ref="AZ-A10" mitigation="25"/>
                <countermeasure ref="AZ-A11" mitigation="25"/>
                <countermeasure ref="AZ-A12" mitigation="25"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="general" name="General" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="UNCONFIGURED-SECURITY" name="Attackers gain access to the system by exploiting weak security configurations" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>Weak security configurations like using sharing passwords in plain text, using weak passwords, using obsolete encryption algorithms, etc. can lead attackers to gain access to the system.</desc>
              <riskRating confidentiality="75" integrity="50" availability="25" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-16">
                  <countermeasures>
                    <countermeasure ref="AZURE-MONITOR7" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZURE-MONITOR7" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="AZURE-DATA-DELETED-EASY" name="Data is intentionally or accidentally deleted" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;Data can be deleted intentionally or accidentally and cannot be recovered. Attackers could rely on the lack of backup and recovery mechanisms.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-MONITOR-BACKUPS">
                  <countermeasures>
                    <countermeasure ref="AZURE-MONITOR04" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZURE-MONITOR04" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="logging-and-monitoring" name="Logging and Monitoring" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="OWASP A10:2017" name="Exploitation of insufficient logging and monitoring" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>	&lt;p&gt;Exploitation of insufficient logging and monitoring is the bedrock of nearly every major incident.&lt;br /&gt;
 Attackers rely on the lack of monitoring and timely response to achieve their goals without being detected.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="AZ-L01" mitigation="25"/>
                    <countermeasure ref="AZ-L05" mitigation="25"/>
                    <countermeasure ref="AZURE-MONITOR5" mitigation="25"/>
                    <countermeasure ref="AZURE-MONITOR6" mitigation="25"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-L01" mitigation="25"/>
                <countermeasure ref="AZ-L05" mitigation="25"/>
                <countermeasure ref="AZURE-MONITOR5" mitigation="25"/>
                <countermeasure ref="AZURE-MONITOR6" mitigation="25"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="networking" name="Networking" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="AZURE-UNAUTHORISED-CONNECTION" name="Attackers perform unauthorized network access" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;Attackers could perform unauthorized network access to the resources through misconfigured ports or security network configurations.&lt;/p&gt;</desc>
              <riskRating confidentiality="25" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-NET-01">
                  <countermeasures>
                    <countermeasure ref="AZURE-APPROVED-LOCATIONS" mitigation="25"/>
                    <countermeasure ref="AZURE-MONITOR3" mitigation="25"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AZURE-NON-IDENTIFY">
                  <countermeasures>
                    <countermeasure ref="AZURE-MONITOR2" mitigation="25"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AZURE-VNET01">
                  <countermeasures>
                    <countermeasure ref="AZ-N09" mitigation="25"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-N09" mitigation="25"/>
                <countermeasure ref="AZURE-APPROVED-LOCATIONS" mitigation="25"/>
                <countermeasure ref="AZURE-MONITOR2" mitigation="25"/>
                <countermeasure ref="AZURE-MONITOR3" mitigation="25"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="DATA-EXPOSED-CHANNEL" name="The data is exposed through the transmission channel" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;Attackers can obtain the data through the transmitted channel because this does not have the security measures in place to protect the data&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="DATA-TRANSMIT-CLEAR">
                  <countermeasures>
                    <countermeasure ref="AZURE-MONITOR1" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZURE-MONITOR1" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="8946bdc6-c7a3-46b1-8858-ed93a44ce1d6" diagramComponentId="66d8388a-ed3d-4a7b-ac8c-f41d3406dce3" ref="53b49d54-7610-4c8b-a51b-8dfbc2c1010c" name="Generic Client" desc="" library="CS-Default" parentComponentRef="ddd069fc-f527-4cc5-bc8a-071f28c49100" componentDefinitionRef="generic-client">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="private-secured"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses>
        <weakness ref="CWE-798, CWE-603" name="Client side code stores secret keys, sensitive business logic or other proprietary information" state="0" impact="100" issueId="" issueLink="">
          <desc>When client side code is fully controlled by the user, a malicious user may be able to read the code or reverse engineer it if it is compiled in any form. If the client side code includes secret keys, sensitive business logic (like client authentication) or proprietary information, all of this is directly exposed to the user, allowing them to get the sensitive information or study the business logic with the aim of bypassing it.&amp;nbsp; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Some examples of this vulnerability are:&amp;nbsp; 
 &lt;div&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Performing an authentication on the client side without server side validation.&amp;nbsp;&lt;/li&gt; 
   &lt;li&gt;Making privileged calls from the client based solely on client side conditions (i.e. a cash check on the client side to place an order on an e-commerce platform).&lt;/li&gt; 
   &lt;li&gt;&amp;nbsp;Hard-coding keys and secrets on the client side to make client-to-client calls without a proxy.&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:29.205">
              <output/>
            </source>
            <references>
              <reference name="CWE-602: client-side Enforcement of Server-Side Security" url="https://cwe.mitre.org/data/definitions/602.html"/>
              <reference name="CWE-603: Use of client-side Authentication" url="https://cwe.mitre.org/data/definitions/603.html"/>
            </references>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="lack-automated-vuln-identification" name="Lack of automated vulnerability identification" state="0" impact="100" issueId="" issueLink="">
          <desc>Developmental security testing/evaluation is not enforced during post-design phases of the system development life cycle. Such testing/evaluation is necessary because it confirms that the required security controls are implemented correctly, operating as intended, enforcing the desired security policy, and meeting established security requirements.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:29.001">
              <output/>
            </source>
            <references>
              <reference name="Risk-Based and Functional Security Testing" url="https://www.us-cert.gov/bsi/articles/best-practices/security-testing/risk-based-and-functional-security-testing"/>
            </references>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CWE-311" name="Missing Encryption of Sensitive Data" state="0" impact="100" issueId="" issueLink="">
          <desc>The software does not encrypt sensitive or critical information
                        before storage or transmission.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:29.205">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CWE-312" name="Secrets, API keys and or passwords are included in the source code or online repositories" state="0" impact="100" issueId="" issueLink="">
          <desc>API keys, passwords or secrets included in the source code or in the configuration files can be leaked to users with access to the code. This access can be incidentally granted by publishing the source code on a package-form or an online, public repository.

          The unauthorized access to any of those secrets could lead to a compromise of sensitive data or a system.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:29.205">
              <output/>
            </source>
            <references>
              <reference name="CWE-312: Secrets, API keys and or passwords are included in the source code or online repositories" url="https://cwe.mitre.org/data/definitions/312.html"/>
            </references>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CWE-477" name="Use of Obsolete Function" state="0" impact="75" issueId="" issueLink="">
          <desc>The code uses deprecated or obsolete functions, which suggests that the code has not been actively reviewed or maintained.
&lt;br /&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:29.204">
              <output/>
            </source>
            <references>
              <reference name="CWE-477: Use of Obsolete Function" url="https://cwe.mitre.org/data/definitions/477.html"/>
            </references>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CWE-327" name="Use of a Broken or Risky Cryptographic Algorithm" state="0" impact="100" issueId="" issueLink="">
          <desc>The use of a broken or risky cryptographic algorithm is an unnecessary risk that may result in
                        the exposure of sensitive information.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:29.205">
              <output/>
            </source>
            <references>
              <reference name="CWE-327: Use of a Broken or Risky Cryptographic Algorithm" url="https://cwe.mitre.org/data/definitions/327.html"/>
            </references>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="CWE-319-TRANSPORT" name="Encrypt data between the client and server/service" issueId="" issueLink="" platform="" cost="0" risk="39" state="Recommended" owner="JamesRabe" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Data passed between the client and server should be protected by encryption in transit.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Implement cryptographically strong TLS end-to-end encryption between the client and server, terminating within a secure environment on the server-side.&lt;/li&gt;&lt;li&gt;Consider use of client certificates to prevent interception of (or man-in-the-middle attacks on) the encrypted connection.&lt;/li&gt;&lt;li&gt;Alternatively, asymmetric (public-key) encryption could be utilized and a recognized, proven, and tested implementation/library should be used&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA AC-03 Access Enforcement" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/25-08_02_AC-03"/>
            <reference name="OSA AC-06 Least Privilege" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/28-08_02_AC-06"/>
            <reference name="OSA AC-14 Permitted Actions Without Identification Or Authentication" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/38-08_02_AC-14"/>
            <reference name="OSA AC-16 Automated Labeling" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/198-08_02_AC-16"/>
            <reference name="OSA SC-08 Transmission Integrity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/68-08_02_SC-08"/>
            <reference name="OSA SC-13 Use Of Cryptography" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/73-08_02_SC-13"/>
          </references>
          <standards>
            <standard ref="1.9.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="1.9.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="13.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="13.2.6" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="13.2.6" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="164.312(a)(1)(D)" supportedStandardRef="hipaa-addressable"/>
            <standard ref="164.312(e)(1)(A)" supportedStandardRef="hipaa-addressable"/>
            <standard ref="5.1" supportedStandardRef="OWASP-MASVS-L1"/>
            <standard ref="5.1" supportedStandardRef="OWASP-MASVS-L1+R"/>
            <standard ref="5.1" supportedStandardRef="OWASP-MASVS-L2"/>
            <standard ref="5.1" supportedStandardRef="OWASP-MASVS-L2+R"/>
            <standard ref="9.1.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="9.1.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="9.1.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="9.2.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="9.2.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="9.2.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="9.2.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="9.2.4" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="9.4.3" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="AC-14" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AC-14" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AC-14" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AC-14" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-16" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-3" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AC-3" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AC-3" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AC-3" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-6" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AC-6" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AC-6" supportedStandardRef="NIST 800-53"/>
            <standard ref="PR.AC-4" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-6" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-7" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-2" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-5" supportedStandardRef="nist-csf"/>
            <standard ref="PR.PT-3" supportedStandardRef="nist-csf"/>
            <standard ref="SC-13" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="SC-13" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="SC-13" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="SC-13" supportedStandardRef="NIST 800-53"/>
            <standard ref="SC-8" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="SC-8" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="SC-8" supportedStandardRef="NIST 800-53"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Check client to server connections use and enforce established encryption protocols, e.g. TLSv1.2.&lt;br&gt;&amp;nbsp;&lt;/li&gt;&lt;li&gt;Verify only strong cipher suites are in use and permitted.&lt;/li&gt;&lt;li&gt;Ensure attempts to use unencrypted transport mechanisms are rejected or redirected (e.g. HTTP instead of HTTPS)&lt;/li&gt;&lt;li&gt;Review configuration of protocols and services against best-practice guidelines.&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:29.114">
              <output/>
            </source>
            <references>
              <reference name="Server Side TLS Configuration" url="https://wiki.mozilla.org/Security/Server_Side_TLS"/>
            </references>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="INS-CLIENT" name="Ensure the application does not use unsupported, insecure, or deprecated client-side technologies" issueId="" issueLink="" platform="" cost="0" risk="35" state="Recommended" owner="JamesRabe" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Ensure the application does not use unsupported, insecure, or deprecated client-side technologies such as: NSAPI plugins, Flash, Shockwave, ActiveX, Silverlight, NACL, or client-side Java applets.&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1.14.6" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="1.14.6" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ul&gt;
 &lt;li&gt;Test the presence of any client side applet such as Flash, ActiveX and Silverlight.&lt;/li&gt;
&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:29.114">
              <output/>
            </source>
            <references>
              <reference name="Testing Information Gathering" url="https://www.owasp.org/index.php/Testing_Information_Gathering"/>
            </references>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CS-CLIENT-SECRET" name="Implement sensitive logic and data validation on the server-side" issueId="" issueLink="" platform="" cost="1" risk="49" state="Recommended" owner="JamesRabe" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;All data and functionalities on the client-side must be considered tainted and subject to manipulation by a malicious actor, regardless of the controls in place (e.g. encryption or obfuscation of client-side code or content). &lt;/p&gt; This includes application logic decisions, such as access controls, and data considered sensitive or secret, such as encryption keys. While controls may be duplicated on the client-side to improve the user experience, it is important to have these enforced on the server-side.&amp;nbsp; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Business logic, in particular access controls, must be implemented on the server-side.&lt;/li&gt; 
  &lt;li&gt;Secret data should be stored on the server-side, and only what is explicitly required should be duplicated on the client-side.&amp;nbsp;&lt;/li&gt; 
 &lt;/ul&gt;All data provided from the client-side (even from binary clients) should be considered tainted, and security decisions should not be made solely on this data. For example, an insecure implementation could include a compiled application (e.g. Flash!) performing authentication on the client-side against a stored password. The decompilation of the binary (in this case flv file) or the interception and modification of controls between the client and server could expose the password or allow unauthorized access to the authenticated application content. 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA AC-01 Access Control Policies and Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/23-08_02_AC-01"/>
            <reference name="OSA SI-10 Information Accuracy, Completeness, Validity, And Authenticity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/48-08_02_SI-10"/>
            <reference name="OWASP Juice Shop: Broken Access Control" url="https://pwning.owasp-juice.shop/part2/broken-access-control.html"/>
            <reference name="OWASP Juice Shop: Injection" url="https://pwning.owasp-juice.shop/part2/injection.html"/>
          </references>
          <standards>
            <standard ref="12.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="2.4.11.7" supportedStandardRef="iotsf-class-0"/>
            <standard ref="2.4.11.7" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.11.7" supportedStandardRef="iotsf-class-2"/>
            <standard ref="4.1.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="4.1.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="4.1.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="A01:2021-Broken Access Control" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A03:2021-Injection" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A1:2017-Injection" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="A5:2017-Broken Access Control" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="AC-1" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AC-1" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AC-1" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AC-1" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-24" supportedStandardRef="NIST 800-53"/>
            <standard ref="ID.GV-1" supportedStandardRef="nist-csf"/>
            <standard ref="ID.GV-3" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-1" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-3" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-4" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-6" supportedStandardRef="nist-csf"/>
            <standard ref="SI-10" supportedStandardRef="NIST 800-53"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Identify where critical decisions are made on the application. Key areas include:&amp;nbsp;&lt;/li&gt; 
 &lt;ul&gt; 
  &lt;li&gt;authentication&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;input validation&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;access to resources&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;state bypasses&amp;nbsp;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;li&gt;Ensure those decisions are made or validated on the server side, particularly where client-side controls are implemented.&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;Verify that sensitive data passed to the client side is appropriate, and ensure no inappropriate data is stored or hard-coded into client-side components, for example&amp;nbsp;&lt;/li&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Personally Identifiable Information.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Financial data, in particular cardholder data (as defined by the &lt;span class="caps"&gt;PCI&lt;/span&gt; Council).&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Application secrets - such as symmetric encryption keys or passwords.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:29.113">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CSD-CLIENT-SECRET" name="Review code, configuration, and online repositories for secrets and sensitive information systemically" issueId="" issueLink="" platform="" cost="0" risk="49" state="Recommended" owner="JamesRabe" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Secret or sensitive information should not be exposed in source-code or client-side software.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Code and online repositories must not contain secrets or sensitive information.&lt;/li&gt;&lt;li&gt;Configuration files on the client- and server-side must not contain hard-coded credentials or other sensitive data.&lt;/li&gt;&lt;li&gt;Online repositories, services, and other associated restricted content must have appropriate access controls in place.&lt;/li&gt;&lt;li&gt;Where sensitive information must be stored on the server side, it should be in memory for transient data, or encrypted if persistent. &amp;nbsp;Depending on the use case, this encryption may be asymmetric or public key, or symmetric using a shared secret. Note however that reversible encryption on the client-side and in-memory storage are still susceptible to client-side attacks.&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="10.1.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="2.10.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.10.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="AU-13" supportedStandardRef="NIST 800-53"/>
            <standard ref="DE.CM-3" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Use automated tools to regularly search for keywords or regular expression patterns within the code, configuration and other files exposed on the client and server-side, and any remote repositories.&lt;/li&gt;&lt;li&gt;The scanning process must be triggered before the code is published (in particular for public/open source code) as once published it is likely to be archived (and any disclosed secrets would be exposed and/or have to be changed)&lt;/li&gt;&lt;li&gt;Review criteria and requirements for any temporary or persistent storage of sensitive or secret data on the client-side, and the protections in place.&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:29.113">
              <output/>
            </source>
            <references>
              <reference name="Microsoft Exchange 2016 Sensitive Information Patterns" url="https://technet.microsoft.com/en-us/library/jj150541(v=exchg.160).aspx"/>
              <reference name="Prevents you from committing secrets and credentials into git repositories" url="https://github.com/awslabs/git-secrets"/>
              <reference name="Seekret" url="https://github.com/apuigsech/seekret"/>
            </references>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="use-analysis-static-code" name="Scan the code with static code analysis tools" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="JamesRabe" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Use periodically a static code analysis tool to analyze the code and detect potentially malicious code, such as time functions, unsafe file operations and networks connections. With the scanning of static code, we ensure the integrity of the application. 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="10.1.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="10.2.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="10.2.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="10.2.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="10.2.6" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Verify that a code analysis tool is in use and it is configured to detect potentially malicious code, such as time functions, unsafe file operations and network connections. 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:28.958">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="secure-communication-ra-and-csp" name="Use secure communication between CSP and RA" issueId="" issueLink="" platform="" cost="0" risk="39" state="Recommended" owner="JamesRabe" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;In situations where the verifier and CSP are separate entities, communications between RA (Registration Authority) and CSP (Credential Service Provider), should be authenticated with a mutually-authenticated secure channel, such as a client-authenticated TLS connection, using approved cryptographic algorithms.&lt;/p&gt;
&lt;p&gt;NIST's digital identity model involves some entities:&lt;/p&gt;
&lt;p&gt;- CSP (Credential Service Provider): A credential service provider is a trusted entity that issues security tokens or electronic credentials to subscribers. A CSP forms part of an authentication system, most typically identified as a separate entity in a Federated authentication system. A CSP may be an independent third party, or may issue credentials for its own use. Credential Service Provider is typically also the Identity Provider (IDP). An example of a CSP would be an online site whose primary purpose may be, for example, internet banking - but whose users may be subsequently authenticated to other sites, applications or services without further action on their part.&lt;/p&gt;
&lt;p&gt;- Registration Authority (RA): A trusted entity that establishes and vouches for the identity of a subscriber to a CSP. The RA may be an integral part of a CSP, or it may be independent of a CSP, but it has a relationship to the CSP.&lt;/p&gt;
&lt;p&gt;- Verifier: This refers to an entity that verifies the claimant's identity by verifying the claimant's possession and control of one or two authenticators, using an authentication protocol.&lt;/p&gt;
&lt;p&gt;- RP (Relying party): This refers to an entity that relies on the subscriber's authenticator(s) and credentials or a verifier's assertion of a claimant's identity, typically to process a transaction or grant access to information or a system.&lt;/p&gt;
&lt;p&gt;- Applicant: This refers to a subject undergoing the processes of enrollment and identity proofing.&lt;/p&gt;
&lt;p&gt;- Claimant: This refers to a subject whose identity is to be verified using one or more authentication protocols.&lt;/p&gt;
&lt;p&gt;- Subscriber: This refers to a party who has received a credential or an authenticator from a CSP.&amp;nbsp;&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="NIST 800-63-1" url="https://csrc.nist.rip/groups/SMA/forum/documents/feb2012_nist-sp-800-63-1_newton-perlner.pdf"/>
            <reference name="NIST 800-63C" url="https://pages.nist.gov/800-63-3/sp800-63c.html"/>
          </references>
          <standards>
            <standard ref="2.2.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.6" supportedStandardRef="nist-800-63"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Verify the CSP and RA communicate securely with a secure channel, for example with TLS.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:29.114">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CWE-295-CLIENT" name="Validate the certificate presented by the server" issueId="" issueLink="" platform="" cost="0" risk="39" state="Recommended" owner="JamesRabe" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Certificates presented by the server must be valid, provable, and cryptographically secure in order to derive the benefits of TLS encrypted communications.&amp;nbsp; Invalid certificates expose the application and its users to spoofing attacks such as Man In The Middle (MITM) where data may be intercepted or redirected to a malicious site, and undermine confidence in the site.&lt;/p&gt;&lt;p&gt;Validate the certificate presented by the server is signed by a trusted Certificate Authority.&lt;/p&gt;&lt;p&gt;Ensure the certificate chain of trust is legitimate and secure.&lt;/p&gt;&lt;p&gt;Verify cryptographically secure ciphers are in use throughout the chain, in particular strong hashing algorithms for certificate signatures.&amp;nbsp;&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA SC-11 Trusted Path" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/71-08_02_SC-11"/>
            <reference name="OSA SC-17 Public Key Infrastructure Certificates" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/77-08_02_SC-17"/>
          </references>
          <standards>
            <standard ref="1.9.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="1.9.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="13.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="164.312(e)(1)(B)" supportedStandardRef="hipaa-addressable"/>
            <standard ref="9.2.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="9.2.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="PR.DS-2" supportedStandardRef="nist-csf"/>
            <standard ref="SC-11" supportedStandardRef="NIST 800-53"/>
            <standard ref="SC-17" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="SC-17" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="SC-17" supportedStandardRef="NIST 800-53"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Verify the client is conducting appropriate checks and receives a positive response regarding the validity and quality of the site certificate.&lt;/li&gt;&lt;li&gt;Use TLS analysis tools to check and rate the server security, for example:&lt;ol&gt;&lt;li&gt;SSL Labs SSL Server Test:&amp;nbsp;https://www.ssllabs.com/ssltest/&lt;/li&gt;&lt;li&gt;sslscan tool: https://github.com/rbsec/sslscan&lt;/li&gt;&lt;li&gt;testssh.sh tool: https://github.com/drwetter/testssl.sh&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;Remediate all security issues and warnings relating to the server certificate, and those in the trust chain.&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:29.113">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CWE-327" name="Validate the TLS implementation in use" issueId="" issueLink="" platform="" cost="0" risk="39" state="Recommended" owner="JamesRabe" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;There are a number of established open- and closed- source TLS implementations in use, which have undergone extensive review and testing by the developers, as well as third-parties in the development, security, and cryptography space. Typically, these widely used implementations have a lower risk of exploitation compared with privately developed - or less known - implementations (although vulnerabilities such as Heartbleed highlight this is not universally true) due to this additional scrutiny scrutiny.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Identify the TLS and other cryptographic libraries, implementations, and technologies in use.&lt;/li&gt;&lt;li&gt;Verify the veracity of the implementations, and review third party validations together with security advisories or best-practices relating to them.&lt;/li&gt;&lt;li&gt;Some well-known TLS libraries are NSS from Mozilla, and OpenSSL.&lt;/li&gt;&lt;li&gt;Where an unknown or unproven implementation is in use, consider use of an established option.&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="Mozilla SSL Config" url="https://ssl-config.mozilla.org/"/>
            <reference name="OSA SC-08 Transmission Integrity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/68-08_02_SC-08"/>
            <reference name="Server Side TLS Configuration" url="https://wiki.mozilla.org/Security/Server_Side_TLS"/>
          </references>
          <standards>
            <standard ref="13.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="164.312(e)(1)(B)" supportedStandardRef="hipaa-addressable"/>
            <standard ref="9.1.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="9.1.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="9.1.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="PR.DS-2" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-5" supportedStandardRef="nist-csf"/>
            <standard ref="SC-8" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="SC-8" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="SC-8" supportedStandardRef="NIST 800-53"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Confirm the TLS layer in use is a secure, stable, release of a publicly published implementation that has been subject to expert analysis and review.&lt;ul&gt;&lt;li&gt;If not, assurance of the security of the implementation should be sought, or the risk quantified.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Verify that a client connecting to the server will only be able to negotiate cryptographically strong, secure ciphers.&lt;/li&gt;&lt;li&gt;Confirm that a client can not downgrade to a weaker cipher after initial negotiation.&lt;/li&gt;&lt;li&gt;Use TLS analysis tools to check and rate the server security, for example:&lt;ol&gt;&lt;li&gt;SSL Labs SSL Server Test:&amp;nbsp;https://www.ssllabs.com/ssltest/&lt;/li&gt;&lt;li&gt;sslscan tool: https://github.com/rbsec/sslscan&lt;/li&gt;&lt;li&gt;testssh.sh tool: https://github.com/drwetter/testssl.sh&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;Remediate all security issues and warnings relating to the TLS/SSL ciphers, protocols, and security mechanisms.&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:29.114">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="GENERAL" name="General" desc="" library="CS-Default">
          <threats>
            <threat ref="sec-vuln-dev-process" name="Application contains security vulnerabilities not identified during the development process" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="CS-Default" editable="true">
              <desc>Application security should be embedded into a project's development environment, allowing developers to monitor their code regularly in order to avoid security vulnerabilities when the application is deployed in the production environment.</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references>
                <reference name="NIST Security Considerations in the System Development Life Cycle" url="https://csrc.nist.gov/publications/detail/sp/800-64/rev-2/archive/2008-10-16"/>
                <reference name="Risk-Based and Functional Security Testing" url="https://www.us-cert.gov/bsi/articles/best-practices/security-testing/risk-based-and-functional-security-testing"/>
              </references>
              <weaknesses>
                <weakness ref="lack-automated-vuln-identification">
                  <countermeasures>
                    <countermeasure ref="use-analysis-static-code" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="use-analysis-static-code" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="CSD-CLIENT-SECRET" name="Attackers gain unauthorised access to data or services by accessing a client side secret" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="CS-Default" editable="true">
              <desc>Secrets stored in any client side components, such as a mobile application, thick
                                client application or in JavaScript used by a browser, can be accessed by
                                users/attackers who have access to this client.
                                &lt;div&gt;
                                &lt;br /&gt;
                                &lt;/div&gt;
                                &lt;div&gt;
                                Attackers could then gain access to the data or services that are protected by this
                                secret, if no other credentials are required.
                                &lt;/div&gt;
                            </desc>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-312">
                  <countermeasures>
                    <countermeasure ref="CSD-CLIENT-SECRET" mitigation="50"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-798, CWE-603">
                  <countermeasures>
                    <countermeasure ref="CS-CLIENT-SECRET" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CS-CLIENT-SECRET" mitigation="50"/>
                <countermeasure ref="CSD-CLIENT-SECRET" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="DEP-CLIENT-TECH" name="Attackers gain unauthorised access to the application by the use of deprecated client-side technologies" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="CS-Default" editable="true">
              <desc>&lt;div&gt;
  As programming languages evolve, functions occasionally become obsolete due to:
&lt;/div&gt;
&lt;ul&gt;
 &lt;li&gt;Advances in the language.&lt;/li&gt;
 &lt;li&gt;Improved understanding of how operations should be performed effectively and securely.&lt;/li&gt;
 &lt;li&gt;Changes in the conventions that govern certain operations. &lt;/li&gt;
&lt;/ul&gt;
&lt;br /&gt;Functions that are removed are usually replaced by newer counterparts that perform the same task in some different and hopefully improved way.
&lt;br /&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-477">
                  <countermeasures>
                    <countermeasure ref="INS-CLIENT" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="INS-CLIENT" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="READ OR POST DATA" name="Read or Post data" desc="" library="CS-Default">
          <threats>
            <threat ref="NTW-MITM" name="Attackers could gain access to sensitive data through a man in the middle attack" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="CS-Default" editable="true">
              <desc>&lt;p&gt;This type of attack targets the communication between two components (typically client and server). The attacker places himself in the communication channel between the two components. Whenever one component attempts to communicate with the other (data flow, authentication challenges, etc.), the data first goes to the attacker, who has the opportunity to observe or alter it, and it is then passed to the other component as if it were never intercepted. This interposition is transparent leaving the two compromised components unaware of the potential corruption or leakage of their communications. The potential for Man-in-the-Middle attacks yields an implicit lack of trust in communication or identity between two components.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-311">
                  <countermeasures>
                    <countermeasure ref="CWE-295-CLIENT" mitigation="25"/>
                    <countermeasure ref="CWE-319-TRANSPORT" mitigation="25"/>
                    <countermeasure ref="secure-communication-ra-and-csp" mitigation="25"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-327">
                  <countermeasures>
                    <countermeasure ref="CWE-327" mitigation="25"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CWE-295-CLIENT" mitigation="25"/>
                <countermeasure ref="CWE-319-TRANSPORT" mitigation="25"/>
                <countermeasure ref="CWE-327" mitigation="25"/>
                <countermeasure ref="secure-communication-ra-and-csp" mitigation="25"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="4d28ad62-d29f-42e8-a3d5-b5b2328d87cd" diagramComponentId="f7c729f6-d2c0-4ede-8bae-b16d73d86081" ref="b359f0ab-6790-4cbb-b7ae-c451ccbda797" name="Azure Environment" desc="" library="Microsoft-Azure" parentComponentRef="" componentDefinitionRef="microsoft-azure-environment">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses>
        <weakness ref="AZURE-LOGS03" name="Audit logs can be deleted" state="0" impact="100" issueId="" issueLink="">
          <desc>There is no external backups of log records. If logs are deleted, there is no way to recover
                        them.ed.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Activity Logs&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Push the button &amp;quot;Export&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;All Regions&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;Export to a storage account&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that all fields are correctly filled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:32.697">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CWE-16" name="Configuration" state="0" impact="100" issueId="" issueLink="">
          <desc>Weaknesses in this category are typically introduced during the
                        configuration of the software.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:32.332">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-MON02" name="Excessive use of administrator accounts" state="0" impact="100" issueId="" issueLink="">
          <desc>The administrator accounts are used for all actions, not only for administrative actions. This
                        is because these users have not got a personal or a user account to do the daily actions.&amp;nbsp;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that there is any rule to notify when there is a bad usage of the root
                            account.&lt;/li&gt;
                            &lt;li&gt;Check if these rules are enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:32.051">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-MON03" name="Lack of 2FA" state="0" impact="100" issueId="" issueLink="">
          <desc>Logging into the console without using Multi-factor Authentication (MFA) and without being detected. The connection without MFA must be audited and monitored, the correct security group must be informed and the connection must be validated.&amp;nbsp;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that there is any rule to notify when someone tries to login into the
                            console without MFA.&lt;/li&gt;
                            &lt;li&gt;Check if these rules are enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:32.051">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZ-W04" name="Misconfigured Authentication Method for Administrator Accounts" state="0" impact="100" issueId="" issueLink="">
          <desc>The authentication method &amp;quot;Multi-factor Authentication&amp;quot; for the Administrator accounts is not configured.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;Multi-Factor Authentication&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check all Administrator accounts have got the MFA flag enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:32.332">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="LOST-SECURITY-ALERTS" name="Misconfigured Security contact details" state="0" impact="100" issueId="" issueLink="">
          <desc>The security contact details for the Azure subscription are not properly configured.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Access &amp;quot;Azure Security Center&amp;quot;.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;In the &amp;quot;Recommendations&amp;quot; tab choose &amp;quot;Provide security
                            contact details&amp;quot;.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Check that all fields are filled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:32.332">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-IDENTITY-03" name="Misconfigured User Account" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        Key security settings such as resetting the password and other password controls are not
                        configured.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log in to the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each user has got an assigned account.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;Password reset&amp;quot; &amp;gt; &amp;quot;Authentication Method&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that the security confirmation measures and the security criteria are well
                            filled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:32.332">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-ACCESS-01" name="Misconfigured credentials for groups and roles" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        The credentials for groups and roles are not correctly configured and there are user accounts with more privileges than necessary.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each user has got assigned the correct groups.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All groups&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each group has got assigned the correct roles to achieve principle of
                            least privilege.&lt;/li&gt;
                            &lt;li&gt;Check that the roles for the Cloud Service are well assigned.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;div&gt;
                            &lt;/div&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:32.332">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-EXPIRATION-DATE" name="Misconfigured password expiration" state="0" impact="100" issueId="" issueLink="">
          <desc>The password expiration is not configured and users are not obliged to change their passwords.
                        Not change frequently the passwords gives facilities to attackers to obtain them.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            Check that the password expiration has got the correct values. Therefore, we can obtain the
                            values using the Get-MsolPasswordPolicy cmdlet from the Azure Active Directory Module for
                            Windows PowerShell. With the following command:
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;br /&gt;
                            &lt;/div&gt;
                            &lt;blockquote&gt;
                            &lt;div&gt;
                            PS C:\&amp;gt; Get-MsolPasswordPolicy -DomainName contoso.com
                            &lt;/div&gt;
                            &lt;/blockquote&gt;
                            &lt;div&gt;
                            &lt;br /&gt;
                            &lt;/div&gt;
                            &lt;div&gt;
                            More information: Doc MS Azure
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:32.332">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-VNET01" name="Networks for Azure resources are not properly segmented. Without proper segmentation, when attackers gain access to one resource, any other resources in the same VNet are compromised" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        Resources in the same VNet are compromised because when one of them is attacked and the
                        attackers gain access, they also gain access to all resources.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            Identify the resources and the Microsoft Azure instances.
                            &lt;/div&gt;
                            &lt;div&gt;
                            Check that the resources are in the correct VNet.
                            &lt;/div&gt;
                            &lt;div&gt;
                            Check that the Microsoft Azure instances&amp;nbsp;are into different VNets.
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:32.560">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-LOGS02" name="Non-auditable connections to the web application" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        The status connection or failed attempts cannot be audited because they are not recorded into
                        the logs.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Go to the Azure portal.&lt;/li&gt;
                            &lt;li&gt;Go to the blade for your web app and in &amp;quot;Monitoring&amp;quot; &amp;gt;&amp;gt;
                            &amp;quot;Diagnostics logs&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that the &amp;quot;Detailed error messages&amp;quot; is enabled.&lt;/li&gt;
                            &lt;li&gt;Check that the &amp;quot;Failed request tracing&amp;quot; is enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:32.697">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-LOGS01" name="Non-auditable resource changes" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        The Diagnostic Logs are not activated and configured. Therefore, the changes or the access to
                        the resources are not recorded into the logs.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Go to the Azure portal.&lt;/li&gt;
                            &lt;li&gt;Go to the blade for your web app and in &amp;quot;Monitoring&amp;quot; &amp;gt;&amp;gt;
                            &amp;quot;Diagnostics logs&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that &amp;quot;Application Logging (Filesystem)&amp;quot; and &amp;quot;Application
                            Logging (Blob)&amp;quot; are enabled.&lt;/li&gt;
                            &lt;li&gt;Check that the type &amp;quot;Storage&amp;quot; or &amp;quot;File System&amp;quot;
                            are enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:32.697">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="LOST-ACCESS-ROOT-01" name="The Root Account is mis-configured" state="0" impact="100" issueId="" issueLink="">
          <desc>The administrator account is not configured. The security question to recover or reset the
                        password and the authentication method are not configured.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:32.331">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-MON06" name="Undetected brute force attempts on MS Azure management console" state="0" impact="100" issueId="" issueLink="">
          <desc>The failure connection attempts (brute force) must be audited and monitored and correspondent
                        personnel must be alerted and informed.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that there is any rule to notify when several console login failure attempts
                            occur.&lt;/li&gt;
                            &lt;li&gt;Check if these rules are enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:32.051">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-MON05" name="Undetected changes in data encryption configuration" state="0" impact="100" issueId="" issueLink="">
          <desc>The changes on the database encryption must be audited and monitored. When there are changes
                        on the database encryption, the security group must be alerted.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that there is any rule to alert when the Transparent Data Encryption is
                            disabled.&lt;/li&gt;
                            &lt;li&gt;Check if these rules are enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:32.051">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-MON07" name="Undetected changes in network configuration" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        Changes in network configurations (NACLs, route and gateway tables) are not detected because
                        monitoring and alerting on the network is not configured to detect these changes.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that there is any rule to notify when the VPC NACL changes.&lt;/li&gt;
                            &lt;li&gt;Check that there is any rule to notify when the VPC route table changes.&lt;/li&gt;
                            &lt;li&gt;Check that there is any rule to notify when the VPC gateway changes.&lt;/li&gt;
                            &lt;li&gt;Check if these rules are enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:32.051">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-MON01" name="Undetected changes in security configurations" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        Monitoring and alerting for security configurations are not configured and changes cannot be
                        detected.&amp;nbsp;
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that there is any rule to alert when the Activity Logs configuration
                            changes.&lt;/li&gt;
                            &lt;li&gt;Check that there is any rule to alert when the security policy changes.&lt;/li&gt;
                            &lt;li&gt;Check that there is any rule to alert when the recommended configuration changes.&lt;/li&gt;
                            &lt;li&gt;Check that there is any rule to notify when activity alerts changes.&lt;/li&gt;
                            &lt;li&gt;Check if these rules are enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:32.051">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-MON04" name="Undetected changes in security groups" state="0" impact="100" issueId="" issueLink="">
          <desc>The changes in security groups must be traced and monitored and the correspondent personnel
                        must approve these changes. If the situation is not the correct, attackers can access to
                        security systems.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that there is any rule to notify when the security groups or security group
                            configurations change.&lt;/li&gt;
                            &lt;li&gt;Check if these rules are enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:32.050">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="AZ-A09" name="Apply RBAC with pre-defined policies added into groups or roles" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Define and create groups that relate to job functions (administrators, developers, accounting,
                        etc.) and assign the relevant permissions for each group, and then assign IAM users to those
                        groups.&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &amp;nbsp;&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        All the users in an IAM group inherit the permissions assigned to the group. That way, you can
                        make changes for everyone in a group in just one place. As people move around in your company,
                        you can simply change what IAM group their IAM user belongs to. This method is known as Role
                        Based Access Control (RBAC).&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Remove a user from a group:&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;ol&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                        &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                        &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Click on the user name. All the groups the user belongs are there.&lt;/li&gt;
                        &lt;li&gt;Choose the group and &amp;quot;Remove&amp;quot;.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/ol&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Create a group and add user:&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;ol&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                        &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                        &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All groups&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Click &amp;quot;New Group&amp;quot; and fill the information.&lt;/li&gt;
                        &lt;li&gt;Search and add the user.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Create a group and add members in Azure Active Directory" url="https://docs.microsoft.com/en-us/azure/active-directory/active-directory-groups-create-azure-portal"/>
            <reference name="MS Azure - Use Role-Based Access Control to manage access to your Azure subscription resources" url="https://docs.microsoft.com/en-us/azure/active-directory/role-based-access-control-configure"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each user has got assigned the correct groups.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All groups&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each group has got assigned the correct roles.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:32.260">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-A08" name="Configure a strong security challenge questions for the user account" issueId="" issueLink="" platform="" cost="0" risk="40" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        &lt;div&gt;
                        &lt;div&gt;
                        Activate and configure the security challenge question and the possibility of resetting the
                        password by confirming the user's identity is allowed. Make sure that the security confirmation
                        measures match the security criteria. Otherwise, it could make a weak confirmation and allow the&amp;nbsp;password
                        reset to malicious users.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation: &amp;nbsp;&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Log in to the Azure portal as an owner.&lt;/li&gt;
                        &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                        &lt;li&gt;Select &amp;quot;Password reset&amp;quot; &amp;gt; &amp;quot;Authentication Method&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Choose the security confirmation measures that match the security criteria and click
                        &amp;quot;Save&amp;quot;.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;ol&gt;
                        &lt;/ol&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Azure AD self-service password reset" url="https://docs.microsoft.com/en-us/azure/active-directory/active-directory-passwords-getting-started"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log in to the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;Password reset&amp;quot; &amp;gt; &amp;quot;Authentication Method&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that the security confirmation measures and the security criteria are well
                            filled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:32.260">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-A12" name="Configure password expiration" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        &lt;div&gt;
                        Configure the password expiration to force after a determinate time, the password code shall be
                        changed for the users.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Configure password management to match security criteria. This value is configurable
                        using the Set-MsolPasswordPolicy cmdlet from the Azure Active Directory Module for Windows
                        PowerShell. With the following command as the example:&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        &lt;div&gt;
                        Set-MsolPasswordPolicy -ValidityPeriod 60 -NotificationDays 14&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;This command updates the tenant so that all users passwords expire after 60
                        days. The users receive notification 14 days prior to that expiry.
                        &lt;/blockquote&gt;
                        &lt;div&gt;
                        &lt;div&gt;
                        More information:&amp;nbsp;
                        &lt;a
                        href="https://docs.microsoft.com/en-us/powershell/module/msonline/set-msolpasswordpolicy?view=azureadps-1.0"&gt;Doc
                        MS Azure&lt;/a&gt;
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;ul&gt;
                        &lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Password policies and restrictions in Azure Active Directory" url="https://docs.microsoft.com/en-us/azure/active-directory/active-directory-passwords-policy"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            Check that the password expiration has got the correct values. Therefore, we can obtain the
                            values using the Get-MsolPasswordPolicy cmdlet from the Azure Active Directory Module for
                            Windows PowerShell. With the following command:
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;br /&gt;
                            &lt;/div&gt;
                            &lt;blockquote&gt;
                            &lt;div&gt;
                            PS C:\&amp;gt; Get-MsolPasswordPolicy -DomainName contoso.com
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;br /&gt;
                            &lt;/div&gt;
                            &lt;/blockquote&gt;More information:
                            &lt;a
                            href="https://docs.microsoft.com/en-us/powershell/module/msonline/get-msolpasswordpolicy?view=azureadps-1.0"&gt;Doc
                            MS Azure&lt;/a&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:32.261">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-A11" name="Configure roles for the Cloud Service" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Define and create the roles for the Azure Cloud Service. For each role, define the permissions and also configure how that role runs. When you launch an Azure instance, you shall specify a role for the instance as a launch parameter. Applications that run on the Cloud instance use the role's credentials when they access Azure resources. This role's permissions determine what the application is allowed to do.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Configure an Azure cloud service from Solution Explorer in Visual Studio.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Use Role-Based Access Control to manage access to your Azure subscription resources" url="https://docs.microsoft.com/en-us/azure/active-directory/role-based-access-control-configure"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that the roles for the Cloud Service are well assigned.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:32.261">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-A02" name="Configure the security challenge questions for the administrator account" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Activate and configure the security challenge question and the possibility of resetting the password by confirming the user's identity is allowed. In case of being an owner account of the subscription that has full administration access, it is necessary to do this, as a security measure that this password is lost. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The security confirmation measures will depend on those specified by the Active Directory administrator. Make sure that the security confirmation measures match the security criteria. Otherwise, it could make a weak confirmation and allow the password reset to malicious users. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Using the console:&amp;nbsp;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;ol&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Open https://aka.ms/ssprsetup and Log into the account.&lt;/li&gt; 
   &lt;li&gt;Respond to security measures.&amp;nbsp;&lt;/li&gt; 
   &lt;li&gt;Once all needed controls are finished, click on accept.&lt;/li&gt; 
  &lt;/ol&gt; 
 &lt;/ol&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Using the portal:&lt;/li&gt; 
  &lt;ol&gt; 
   &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt; 
   &lt;li&gt;Select Azure Active Directory.&lt;/li&gt; 
   &lt;li&gt;Select &amp;quot;Password reset&amp;quot; &amp;gt; &amp;quot;Authentication Method&amp;quot;.&lt;/li&gt; 
   &lt;li&gt;Choose the security confirmation measures that match the security criteria and click &amp;quot;Save&amp;quot;.&lt;/li&gt; 
  &lt;/ol&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Azure AD self-service password reset" url="https://docs.microsoft.com/en-us/azure/active-directory/active-directory-passwords-getting-started"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Using the portal:
                            &lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;Password reset&amp;quot; &amp;gt; &amp;quot;Authentication Method&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that the security confirmation measures and the security criteria are filled
                            and enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:32.261">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-M04" name="Create alerts due of Transparent Data Encryption Deletion" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Create alerts for the Activity Logs changes to monitor, audit and notify about the changes of
                        Transparent Data Encryption to the correspondent personnel. It's vital that these unauthorized
                        changes are detected.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Push &amp;quot;Add activity log alert&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Filling the fields with the corresponding values.&lt;/li&gt;
                        &lt;li&gt;Select in actions the personnel should be received this information.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Create activity log alerts" url="https://docs.microsoft.com/en-us/azure/monitoring-and-diagnostics/monitoring-activity-log-alerts"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that there is any rule to alert when the Transparent Data Encryption is
                            disabled.&lt;/li&gt;
                            &lt;li&gt;Check if these rules are enabled.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:31.964">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-M12" name="Create alerts for changes in security groups and in security groups configurations" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Create alerts for the Activity Logs changes to monitor, audit and notify about the changes in
                        the security groups or in security groups configurations to the correspondent personnel. It's
                        vital that these unauthorized changes are detected.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Push &amp;quot;Add activity log alert&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Filling the fields with the corresponding values.&lt;/li&gt;
                        &lt;li&gt;Select in actions the personnel should be received this information.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Create activity log alerts" url="https://docs.microsoft.com/en-us/azure/monitoring-and-diagnostics/monitoring-activity-log-alerts"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that there is any rule to notify when the security groups or security group
                            configurations change.&lt;/li&gt;
                            &lt;li&gt;Check if these rules are enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:31.965">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-M01" name="Create alerts for changes on Activity Logs configuration" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Create alerts for the Activity Logs changes to monitor, audit and notify about the changes to the correspondent personnel. It's vital that these unauthorized changes are detected.&lt;/p&gt;&lt;p&gt;Checklist:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Ensure that Activity Log Alert exists for:&amp;nbsp;&lt;ul&gt;&lt;li&gt;Create Policy Assignment&lt;/li&gt;&lt;li&gt;Delete Policy Assignment&lt;/li&gt;&lt;li&gt;Create or Update Network Security Group&lt;/li&gt;&lt;li&gt;Delete Network Security Group&lt;/li&gt;&lt;li&gt;Create or Update Network Security Group Rule&lt;/li&gt;&lt;li&gt;Delete Network Security Group Rule&lt;/li&gt;&lt;li&gt;Create or Update Security Solution&lt;/li&gt;&lt;li&gt;Delete Security Solution&lt;/li&gt;&lt;li&gt;Create or Update or Delete SQL Server Firewall Rule&lt;br&gt;&amp;nbsp;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;Remediation:&lt;/strong&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Go to Monitor&lt;/li&gt;&lt;li&gt;Select Alerts&lt;ol&gt;&lt;li&gt;For each one of the elements in the checklist, click On New Alert Rule&lt;ol&gt;&lt;li&gt;Under Scope, click Select resource&lt;/li&gt;&lt;li&gt;Select the appropriate subscription under Filter by subscription&lt;/li&gt;&lt;li&gt;Select Policy Assignment under Filter by resource type&lt;/li&gt;&lt;li&gt;Select All for Filter by location&lt;/li&gt;&lt;li&gt;Click on the subscription resource from the entries populated under Resource&lt;/li&gt;&lt;li&gt;Verify Selection preview shows All Policy assignment (policyAssignments) and your selected subscription name&lt;/li&gt;&lt;li&gt;Click Done&lt;/li&gt;&lt;li&gt;Under Condition click Add Condition&lt;/li&gt;&lt;li&gt;Select the corresponding element from the checklist&lt;/li&gt;&lt;li&gt;Click Done&lt;/li&gt;&lt;li&gt;Under Action group, select Add action groups and complete creation process or select appropriate action group&lt;/li&gt;&lt;li&gt;Under Alert rule details, enter Alert rule name and Description&lt;/li&gt;&lt;li&gt;Select appropriate resource group to save the alert to&lt;/li&gt;&lt;li&gt;Check Enable alert rule upon creation checkbox&lt;/li&gt;&lt;li&gt;Click Create alert rule&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;/ol&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Create activity log alerts" url="https://docs.microsoft.com/en-us/azure/monitoring-and-diagnostics/monitoring-activity-log-alerts"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5.2.1" supportedStandardRef="cis-azure-standard"/>
            <standard ref="5.2.1" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="5.2.2" supportedStandardRef="cis-azure-standard"/>
            <standard ref="5.2.2" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="5.2.3" supportedStandardRef="cis-azure-standard"/>
            <standard ref="5.2.3" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="5.2.4" supportedStandardRef="cis-azure-standard"/>
            <standard ref="5.2.4" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="5.2.5" supportedStandardRef="cis-azure-standard"/>
            <standard ref="5.2.5" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="5.2.6" supportedStandardRef="cis-azure-standard"/>
            <standard ref="5.2.6" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="5.2.7" supportedStandardRef="cis-azure-standard"/>
            <standard ref="5.2.7" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="5.2.8" supportedStandardRef="cis-azure-standard"/>
            <standard ref="5.2.8" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="5.2.9" supportedStandardRef="cis-azure-standard"/>
            <standard ref="5.2.9" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="LT-4" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Go to "Monitor" and then to "Alerts".&lt;/li&gt;&lt;li&gt;Check that there is any rule to alert when the Activity Logs configuration changes.&lt;/li&gt;&lt;li&gt;Check if these rules are enabled.&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:31.965">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-M02" name="Create alerts for security policy changes" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Create alerts for the Activity Logs changes to monitor, audit and notify about the Management
                        Security Policies changes to the correspondent personnel. It's vital that these unauthorized
                        changes are detected.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Push &amp;quot;Add activity log alert&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Filling the fields with the corresponding values.&lt;/li&gt;
                        &lt;li&gt;Select in actions the personnel should be received this information.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Create activity log alerts" url="https://docs.microsoft.com/en-us/azure/monitoring-and-diagnostics/monitoring-activity-log-alerts"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that there is any rule to alert when the security policy changes.&lt;/li&gt;
                            &lt;li&gt;Check if these rules are enabled.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:31.965">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-M08" name="Create alerts for VPC gateway changes" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Create alerts for the Activity Logs changes to monitor, audit and notify about the changes in
                        the VPC gateway tables to the correspondent personnel. It's vital that these unauthorized
                        changes are detected.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &amp;nbsp;VPC gateways are used as a means of sending traffic outside of VPC (i.e. to the
                        Internet) and are vital in ensuring traffic flows to correct destination. Therefore alerting on
                        changes to VPC gateways ensuring traffic continues to flow as expected via the correct gateway.&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Push &amp;quot;Add activity log alert&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Filling the fields with the corresponding values.&lt;/li&gt;
                        &lt;li&gt;Select in actions the personnel should be received this information.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Create activity log alerts" url="https://docs.microsoft.com/en-us/azure/monitoring-and-diagnostics/monitoring-activity-log-alerts"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that there is any rule to notify when the VPC gateway changes.&lt;/li&gt;
                            &lt;li&gt;Check if these rules are enabled.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:31.965">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-M06" name="Create alerts for VPC NACL changes" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Create alerts for the Activity Logs changes to monitor, audit and notify about the changes in
                        the Network Access Control Lists (NACLs) to the correspondent personnel. It's vital that these
                        unauthorized changes are detected.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        The Network Access Control Lists (NACLs) control inbound and outbound access to &amp;amp; from
                        MS Azure subnets and work like packet filters to protect the network. Therefore alerting on
                        changes to NACLs help ensure that the subnets protected by them are not exposed.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Push &amp;quot;Add activity log alert&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Filling the fields with the corresponding values.&lt;/li&gt;
                        &lt;li&gt;Select in actions the personnel should be received this information.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Create activity log alerts" url="https://docs.microsoft.com/en-us/azure/monitoring-and-diagnostics/monitoring-activity-log-alerts"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that there is any rule to notify when the VPC NACL changes.&lt;/li&gt;
                            &lt;li&gt;Check if these rules are enabled.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:31.965">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-M07" name="Create alerts for VPC route table changes" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Create alerts for the Activity Logs changes to monitor, audit and notify about the changes in
                        the VPC route tables to the correspondent personnel. It's vital that these unauthorized changes
                        are detected.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        VPC route table provides a means of routing network traffic between subnets and via gateways and
                        ensures traffic flows via the correct path. Therefore alerting on changes to route tables
                        ensuring the traffic continues to flow as expected.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Push &amp;quot;Add activity log alert&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Filling the fields with the corresponding values.&lt;/li&gt;
                        &lt;li&gt;Select in actions the personnel should be received this information.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Create activity log alerts" url="https://docs.microsoft.com/en-us/azure/monitoring-and-diagnostics/monitoring-activity-log-alerts"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that there is any rule to notify when the VPC route table changes.&lt;/li&gt;
                            &lt;li&gt;Check if these rules are enabled.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:31.965">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-M03" name="Create alerts to detect changes in the recommendation configurations" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Create alerts for the Activity Logs changes to monitor, audit and notify about the changes in
                        the recommendation configurations to the correspondent personnel. It's vital that these
                        unauthorized changes are detected.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Push &amp;quot;Add activity log alert&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Filling the fields with the corresponding values.&lt;/li&gt;
                        &lt;li&gt;Select in actions the personnel should be received this information.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Create activity log alerts" url="https://docs.microsoft.com/en-us/azure/monitoring-and-diagnostics/monitoring-activity-log-alerts"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that there is any rule to alert when the recommended configuration changes.&lt;/li&gt;
                            &lt;li&gt;Check if these rules are enabled.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:31.966">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-M09" name="Create alerts to detect changes on activity alerts" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Create alerts for the Activity Logs changes to monitor, audit and notify about the alert
                        modifications to the correspondent personnel. It's vital that these unauthorized changes are
                        detected.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Push &amp;quot;Add activity log alert&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Filling the fields with the corresponding values.&lt;/li&gt;
                        &lt;li&gt;Select in actions the personnel should be received this information.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Create activity log alerts" url="https://docs.microsoft.com/en-us/azure/monitoring-and-diagnostics/monitoring-activity-log-alerts"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that there is any rule to notify when activity alerts&amp;nbsp;changes.&lt;/li&gt;
                            &lt;li&gt;Check if these rules are enabled.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:31.966">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-M10" name="Create alerts to notify a bad usage of the root account" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Create alerts for the Activity Logs changes to monitor, audit and notify about the usage of the
                        root accounts to the correspondent personnel. It's vital that these unauthorized changes are
                        detected.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Push &amp;quot;Add activity log alert&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Filling the fields with the corresponding values.&lt;/li&gt;
                        &lt;li&gt;Select in actions the personnel should be received this information.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Create activity log alerts" url="https://docs.microsoft.com/en-us/azure/monitoring-and-diagnostics/monitoring-activity-log-alerts"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that there is any rule to notify when there is a bad usage of the root
                            account.&lt;/li&gt;
                            &lt;li&gt;Check if these rules are enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:31.966">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-M11" name="Create alerts to notify about the console login without MFA" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Create alerts for Activity Log changes to monitor, audit and notify about the user's login into
                        the console without Multi-factor Authentication to the correspondent personnel. It's vital that
                        these unauthorized changes are detected.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Push &amp;quot;Add activity log alert&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Filling the fields with the corresponding values.&lt;/li&gt;
                        &lt;li&gt;Select in actions the personnel should be received this information.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Create activity log alerts" url="https://docs.microsoft.com/en-us/azure/monitoring-and-diagnostics/monitoring-activity-log-alerts"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that there is any rule to notify when someone tries to login into the
                            console without MFA.&lt;/li&gt;
                            &lt;li&gt;Check if these rules are enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:31.966">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-M05" name="Create alerts to notify the console login failure attempts" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Create alerts for the Activity Logs changes to monitor, audit and notify about the console login
                        failure attempts to the correspondent personnel. It's vital that these unauthorized changes are
                        detected.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Push &amp;quot;Add activity log alert&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Filling the fields with the corresponding values.&lt;/li&gt;
                        &lt;li&gt;Select in actions the personnel should be received this information.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Create activity log alerts" url="https://docs.microsoft.com/en-us/azure/monitoring-and-diagnostics/monitoring-activity-log-alerts"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that there is any rule to notify when several&amp;nbsp;console login failure
                            attempts occur.&lt;/li&gt;
                            &lt;li&gt;Check if these rules are enabled.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:31.966">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-AD19" name="Create a resource lock administrator role" issueId="" issueLink="" platform="" cost="0" risk="42" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Resource locking is a powerful protection mechanism that can prevent inadvertent modification/deletion of resources within Azure subscriptions/Resource Groups and is a recommended NIST configuration.&lt;/p&gt;&lt;p&gt;Rationale:&lt;/p&gt;&lt;p&gt;Given the resource lock functionality is outside of standard Role Based Access Control(RBAC), it would be prudent to create a resource lock administrator role to prevent inadvertent unlocking of resources.&lt;/p&gt;&lt;p&gt;Impact:&lt;/p&gt;&lt;p&gt;By adding this role is you can have specific permissions granted for managing just resource locks rather than needing to provide the wide owner or contributor role reducing the risk of the user being able to do unintentional damage.&lt;/p&gt;&lt;p&gt;Remediation:&lt;/p&gt;&lt;p&gt;From Azure Console&lt;/p&gt;&lt;ol&gt;&lt;li&gt;In the Azure portal, open a subscription or resource group where you want the custom role to be assignable.&lt;/li&gt;&lt;li&gt;Select Access control (IAM)&lt;/li&gt;&lt;li&gt;Click Add&lt;/li&gt;&lt;li&gt;Select Add custom role`.&lt;/li&gt;&lt;li&gt;In the Custom Role Name field enter Resource Lock Administrator&lt;/li&gt;&lt;li&gt;In the Description field enter Can Administer Resource Locks&lt;/li&gt;&lt;li&gt;For Baseline permissions select Start from scratch&lt;/li&gt;&lt;li&gt;Click next&lt;/li&gt;&lt;li&gt;In the Permissions tab select Add permissions&lt;/li&gt;&lt;li&gt;In the Search for a permission box, type in Microsoft.Authorization/locks to search for permissions.&lt;/li&gt;&lt;li&gt;Select the check box next to the permission called Microsoft.Authorization/locks&lt;/li&gt;&lt;li&gt;Click add&lt;/li&gt;&lt;li&gt;Click Review+create&lt;/li&gt;&lt;li&gt;Click Create&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;Assign the newly created role to the appropriate user. Using PowerShell: Below is a power shell definition for a resource lock administrator role created at an Azure Management group level&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;Import-Module Az.Accounts Connect-AzAccount $role = Get-AzRoleDefinition "User Access Administrator" $role.Id = $null $role.Name = "Resource Lock Administrator" $role.Description = "Can Administer Resource Locks" $role.Actions.Clear() $role.Actions.Add("Microsoft.Authorization/locks/*") $role.AssignableScopes.Clear() * Scope at the Management group level Management group $role.AssignableScopes.Add("/providers/Microsoft.Management/managementGroups/MG-Name") New-AzRoleDefinition -Role $role Get-AzureRmRoleDefinition "Resource Lock Administrator"&lt;/p&gt;&lt;/blockquote&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="1.23" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="14" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="16" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="8" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="9" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API7:2019-Security Misconfiguration" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="GS-2" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="GS-6" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="PA-1" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="PA-2" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="PA-5" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="PA-7" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;From Azure Console&lt;/p&gt;&lt;ol&gt;&lt;li&gt;In the Azure portal, open a subscription or resource group where you want the view assigned roles.&lt;/li&gt;&lt;li&gt;Select Access control (IAM)&lt;/li&gt;&lt;li&gt;Select Roles&lt;/li&gt;&lt;li&gt;Search for the custom role named &amp;lt;role_name&amp;gt; Ex. from remediation "Resource Lock Administrator"&lt;/li&gt;&lt;li&gt;Ensure that the role is assigned the appropriate user/users&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:32.261">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-A03" name="Create Individual Accounts for the administrator users" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Create an individual account for the administrator users and with this new accounts By creating individual Azure users for people accessing your account, you can give each Azure user a unique set of security credentials.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The administrator accounts shall be used for the administrative actions and for giving or revoke credentials to the user's account. The administrator account shall be not used as a normal user account. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt; 
  &lt;li&gt;Select Azure Active Directory.&lt;/li&gt; 
  &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt; 
  &lt;li&gt;Select &amp;quot;Add New User&amp;quot;.&lt;/li&gt; 
  &lt;li&gt;Fill the required information and click &amp;quot;Create&amp;quot;.&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt; 
&lt;div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Add new users to Azure Active Directory" url="https://docs.microsoft.com/en-us/azure/active-directory/add-users-azure-active-directory"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each user has got a user account assigned.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:32.261">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-A10" name="Create mechanisms to ensure the principle of least privilege is applied" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Create the mechanisms to review periodically the group and user permissions to ensure the least privilege for the user accounts. Granting least privilege ensures that users only have the permissions required to complete their jobs rather than additional privileges that are not required. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Following this model ensures that, should an account be compromised, the blast radius of damage is limited&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Allocate privileges via groups or roles via the recommendation in "Use RBAC with pre-defined policies added into groups or roles".&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt; 
&lt;div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Create a group and add members in Azure Active Directory" url="https://docs.microsoft.com/en-us/azure/active-directory/active-directory-groups-create-azure-portal"/>
            <reference name="MS Azure - Use Role-Based Access Control to manage access to your Azure subscription resources" url="https://docs.microsoft.com/en-us/azure/active-directory/role-based-access-control-configure"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that the principle of least privilege is achieved in the assignation of roles and
                            groups to the users.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:32.261">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-L03" name="Enable Detailed error messages" issueId="" issueLink="" platform="" cost="0" risk="42" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Enable the detailed error information for HTTP status codes that indicate a failure (status code
                        400 or greater) is saved into the logs files. This may contain information that can help
                        determine why the server returned the error code.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Go to the Azure portal.&lt;/li&gt;
                        &lt;li&gt;Go to the blade for your web app and in &amp;quot;Monitoring&amp;quot; &amp;gt;&amp;gt;
                        &amp;quot;Diagnostics logs&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Enable the &amp;quot;Detailed error messages&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Push &amp;quot;Save&amp;quot; to save the changes.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Enable diagnostics logging for web apps in Azure App Service" url="https://docs.microsoft.com/en-us/azure/app-service-web/web-sites-enable-diagnostic-log"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Go to the Azure portal.&lt;/li&gt;
                            &lt;li&gt;Go to the blade for your web app and in &amp;quot;Monitoring&amp;quot; &amp;gt;&amp;gt;
                            &amp;quot;Diagnostics logs&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that the &amp;quot;Detailed error messages&amp;quot; is enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:32.643">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-L01" name="Enable diagnostic logs auditing for Microsoft Azure" issueId="" issueLink="" platform="" cost="0" risk="42" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Diagnostic Logs capture activity to the data access plane while the Activity log is a subscription-level log for the control plane. Resource-level diagnostic logs provide insight into operations that were performed within that resource itself, for example, getting a secret from a Key Vault. Currently, 32 Azure resources support Diagnostic Logging (See the references section for a complete list), including Network Security Groups, Load Balancers, Key Vault, AD, Logic Apps and CosmosDB. The content of these logs varies by resource type. For example, Windows event system logs are a category of diagnostics logs for VMs, and blob, table, and queue logs are categories of diagnostics logs for storage accounts.&lt;/p&gt;&lt;p&gt;A number of back-end services were not configured to log and store Diagnostic Logs for certain activities or for a sufficient length. It is crucial that logging systems are correctly configured to log all relevant activities and retain those logs for a sufficient length of time. By default, Diagnostic Logs are not enabled. Given that the mean time to detection in an enterprise is 240 days, a minimum retention period of two years is recommended.&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation:&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;The specific steps for configuring resources within the Azure console vary depending on resource, but typically the steps are:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Go to the resource&lt;/li&gt;&lt;li&gt;Click on Diagnostic settings&lt;/li&gt;&lt;li&gt;In the blade that appears, click "Add diagnostic setting"&lt;/li&gt;&lt;li&gt;Configure the diagnostic settings&lt;/li&gt;&lt;li&gt;Click on Save&lt;/li&gt;&lt;/ol&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Enable diagnostics logging for web apps in Azure App Service" url="https://docs.microsoft.com/en-us/azure/app-service-web/web-sites-enable-diagnostic-log"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5.3" supportedStandardRef="cis-azure-standard"/>
            <standard ref="5.3" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="LT-4" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="LT-5" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Go to the resource&lt;/li&gt;&lt;li&gt;Click on Diagnostic settings&lt;/li&gt;&lt;li&gt;In the blade that appears, click "Add diagnostic setting"&lt;/li&gt;&lt;li&gt;Configure the diagnostic settings&lt;/li&gt;&lt;li&gt;Click on Save&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:32.644">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-L04" name="Enable Failed Request Tracing" issueId="" issueLink="" platform="" cost="0" risk="42" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Enable to obtain the detailed information on failed requests, including a trace of the IIS components used to process the request and the time taken in each component. This can be useful if you are attempting to increase site performance or isolate what is causing a specific HTTP error to be returned. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Go to the Azure portal.&lt;/li&gt; 
  &lt;li&gt;Go to the blade for your web app and in "Monitoring" &amp;gt;&amp;gt; "Diagnostics logs".&lt;/li&gt; 
  &lt;li&gt;Enable the "Failed request tracing".&lt;/li&gt; 
  &lt;li&gt;Push "Save" to save the changes.&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Enable diagnostics logging for web apps in Azure App Service" url="https://docs.microsoft.com/en-us/azure/app-service-web/web-sites-enable-diagnostic-log"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Go to the Azure portal.&lt;/li&gt;
                            &lt;li&gt;Go to the blade for your web app and in &amp;quot;Monitoring&amp;quot; &amp;gt;&amp;gt;
                            &amp;quot;Diagnostics logs&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that the &amp;quot;Failed request tracing&amp;quot; is enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:32.644">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-A04" name="Enable MFA for Administrator &amp; Co Administrator accounts" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Enable multi-factor authentication (MFA) device enhances the security of the login process for the Administrator accounts. With MFA, users have a device that generates a unique authentication code (a one-time password, or OTP) and users must provide both their normal credentials (like their username and password) and the OTP. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The MFA device can either be a special piece of hardware, or it can be a virtual device. The recommendation for the Service Administrator &amp;amp; Co Administrator accounts is to use MFA to increase the level of security of the login process. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt; 
  &lt;li&gt;Select Azure Active Directory.&lt;/li&gt; 
  &lt;li&gt;Go into "Users and groups" &amp;gt; "All users".&lt;/li&gt; 
  &lt;li&gt;Select "Multi-Factor Authentication".&lt;/li&gt; 
  &lt;li&gt;Choose all the Service Administrator &amp;amp; Co Administrator accounts and enable MFA.&amp;nbsp;&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - How to require two-step verification for a user or group" url="https://docs.microsoft.com/en-us/azure/multi-factor-authentication/multi-factor-authentication-get-started-user-states"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;Multi-Factor Authentication&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check all Administrator accounts have got the MFA flag enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:32.261">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-L02" name="Enable Web Server Logging" issueId="" issueLink="" platform="" cost="0" risk="42" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Enable the Web Server logging to receive information about HTTP transactions using the W3C extended log file format. This is useful when determining overall site metrics such as the number of requests handled or how many requests are from a specific IP address. There are two ways to save the data: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;b&gt;File system: &lt;/b&gt;stores the application diagnostics information to the web app file system. These files can be accessed by FTP, or downloaded as a Zip archive by using the Azure PowerShell or Azure Command-Line Interface (Azure CLI).&lt;/li&gt; 
  &lt;li&gt;&lt;b&gt;Storage:&lt;/b&gt; stores the application diagnostics information in the specified Azure Storage Account and the logs are only accessible with a client account.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Go to the Azure portal.&lt;/li&gt; 
  &lt;li&gt;Go to the blade for your web app and in "Monitoring" &amp;gt;&amp;gt; "Diagnostics logs".&lt;/li&gt; 
  &lt;li&gt;Enable the type "Storage" or "File System" to activate this function.&lt;/li&gt; 
  &lt;li&gt;Push "Save" to save the changes.&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Enable diagnostics logging for web apps in Azure App Service" url="https://docs.microsoft.com/en-us/azure/app-service-web/web-sites-enable-diagnostic-log"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Go to the Azure portal.&lt;/li&gt;
                            &lt;li&gt;Go to the blade for your web app and in &amp;quot;Monitoring&amp;quot; &amp;gt;&amp;gt;
                            &amp;quot;Diagnostics logs&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that the type &amp;quot;Storage&amp;quot; or &amp;quot;File System&amp;quot;
                            are enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:32.644">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-L05" name="Export the Audit Logs to a storage account" issueId="" issueLink="" platform="" cost="0" risk="42" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Export the information of Audit Logs to a storage account. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Go to "Monitor" and then to "Activity Logs".&lt;/li&gt; 
  &lt;li&gt;Push the button "Export".&lt;/li&gt; 
  &lt;li&gt;Select "All Regions".&lt;/li&gt; 
  &lt;li&gt;Select "Export to a storage account" and select your account.&lt;/li&gt; 
  &lt;li&gt;Select the "Retention (days)" as minimum 90 days.&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Enable diagnostics logging for web apps in Azure App Service" url="https://docs.microsoft.com/en-us/azure/app-service-web/web-sites-enable-diagnostic-log"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Activity Logs&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Push the button &amp;quot;Export&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;All Regions&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;Export to a storage account&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that all fields are correctly filled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:32.644">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-N09" name="Isolate Azure instances into different VNets" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Specify a VNet for the Azure instance as a launch parameter. Applications that run on the Cloud instance can use the VNet security configuration when they access Azure resources.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  You can configure an Azure cloud service from Solution Explorer in Visual Studio. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Create a virtual network with multiple subnets" url="https://docs.microsoft.com/en-us/azure/virtual-network/virtual-networks-create-vnet-arm-pportal"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that the Azure instances are into different VNets.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:32.528">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-N08" name="Isolate Azure resources into separate VNets by function" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Place the resources into separate VNets according to their use (production, development, test).
                        Placing such resources accordingly ensures that a resource of a higher security level is not
                        exposed by the security settings of a lower labeled VNet.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Identify the resources that exist in an incorrect VNet.&lt;/li&gt;
                        &lt;li&gt;Migrate or move it to the correct Vnet.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Azure Virtual Network" url="https://docs.microsoft.com/en-us/azure/virtual-network/virtual-networks-overview"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Identify the resources that exist in an incorrect VNet.&lt;/li&gt;
                            &lt;li&gt;Check that the resources are into the correct Vnet.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:32.528">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-A07" name="Recertify user access" issueId="" issueLink="" platform="" cost="0" risk="40" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Do regular reviews of accounts on the system and verify that it doesn't exist stoled or fake
                        accounts. With this process is ensured that there are not compromised accounts by former
                        employees or by attackers.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        At least every 90 days complete the following:&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Log in to the Azure portal as an owner.&lt;/li&gt;
                        &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                        &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;For any user that should not exist:&lt;/li&gt;
                        &lt;li&gt;Select the user.&lt;/li&gt;
                        &lt;li&gt;Click &amp;quot;Delete&amp;quot;.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Assign a user or group to an enterprise app in Azure Active Directory" url="https://docs.microsoft.com/en-us/azure/active-directory/active-directory-coreapps-assign-user-azure-portal"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Log in to the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each user has got an assigned account.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:32.261">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-A01" name="Register a Security contact for your Azure account" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Provide the security contact details for the Azure subscription. Microsoft Security Response Center (MSRC) performs security monitoring of the Azure network and infrastructure and receives threat intelligence and abuse complaints from third parties. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Microsoft will use this information provided to contact if the MSRC discovers that customer data has been accessed by an unlawful or unauthorized party. Also, this provides the means of ensuring these advisories are routed to the security team, especially if a distribution email address is used.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Access &amp;quot;Azure Security Center&amp;quot;.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;In the &amp;quot;Recommendations&amp;quot; tab choose &amp;quot;Provide security contact details&amp;quot;.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Once filled, save changes.&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Provide security contact details in Azure Security Center" url="https://docs.microsoft.com/en-us/azure/security-center/security-center-provide-security-contact-details"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Access &amp;quot;Azure Security Center&amp;quot;.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;In the &amp;quot;Recommendations&amp;quot; tab choose &amp;quot;Provide security
                            contact details&amp;quot;.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Check that all fields are filled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:32.261">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="API LOGGING AND AUDITING" name="API Logging and Auditing" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="UNAUDITABLE-CHANGES-AZURE" name="Attackers make undetected and unaudited changes to system configurations" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>If audit trails are not properly protected, an attacker could gain access to the
                                system, modify the status of resources or exfiltrate sensitive data without being
                                noticed.</desc>
              <riskRating confidentiality="25" integrity="75" availability="25" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-LOGS01">
                  <countermeasures>
                    <countermeasure ref="AZ-L01" mitigation="20"/>
                    <countermeasure ref="AZ-L02" mitigation="20"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AZURE-LOGS02">
                  <countermeasures>
                    <countermeasure ref="AZ-L03" mitigation="20"/>
                    <countermeasure ref="AZ-L04" mitigation="20"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AZURE-LOGS03">
                  <countermeasures>
                    <countermeasure ref="AZ-L05" mitigation="20"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-L01" mitigation="20"/>
                <countermeasure ref="AZ-L02" mitigation="20"/>
                <countermeasure ref="AZ-L03" mitigation="20"/>
                <countermeasure ref="AZ-L04" mitigation="20"/>
                <countermeasure ref="AZ-L05" mitigation="20"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="AUTHENTICATION" name="Authentication" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="AZURE-LOST-ACCESS-ROOT" name="Attackers gain unauthorized access to the root account due to the lack of configuration of the account" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;div&gt;Attackers could gain unauthorized access to the administrator account due to a lack of configuration of the account and its security mechanisms, making it possible to modify credentials and add/remove user accounts.
                                &lt;/div&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="AZ-W04">
                  <countermeasures>
                    <countermeasure ref="AZ-A04" mitigation="25"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AZURE-MON02">
                  <countermeasures>
                    <countermeasure ref="AZ-A03" mitigation="25"/>
                  </countermeasures>
                </weakness>
                <weakness ref="LOST-ACCESS-ROOT-01">
                  <countermeasures>
                    <countermeasure ref="AZ-A02" mitigation="25"/>
                  </countermeasures>
                </weakness>
                <weakness ref="LOST-SECURITY-ALERTS">
                  <countermeasures>
                    <countermeasure ref="AZ-A01" mitigation="25"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-A01" mitigation="25"/>
                <countermeasure ref="AZ-A02" mitigation="25"/>
                <countermeasure ref="AZ-A03" mitigation="25"/>
                <countermeasure ref="AZ-A04" mitigation="25"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="AZURE-LOST-ACCESS-USER" name="Attackers gain unauthorized access to the user account due to the lack of configuration of the account" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;Attackers could gain unauthorized access to the user account due to the lack of configuration of the account, for example, the security question to reset the password is configured incorrectly.&lt;/p&gt;</desc>
              <riskRating confidentiality="50" integrity="50" availability="50" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-IDENTITY-03">
                  <countermeasures>
                    <countermeasure ref="AZ-A07" mitigation="50"/>
                    <countermeasure ref="AZ-A08" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-A07" mitigation="50"/>
                <countermeasure ref="AZ-A08" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="AUTHORIZATION" name="Authorization" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="LOSS-CONTROL_ENV" name="Attackers gain unauthorized access to the control of the environment" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;Attackers could potentially gain unauthorized access to the control of the environment, due to user accounts - or role groups - not being well defined and configured. As a consequence attackers may be able to make changes without root approval.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="75" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-ACCESS-01">
                  <countermeasures>
                    <countermeasure ref="AZ-A09" mitigation="20"/>
                    <countermeasure ref="AZ-A10" mitigation="30"/>
                    <countermeasure ref="AZ-A11" mitigation="30"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AZURE-EXPIRATION-DATE">
                  <countermeasures>
                    <countermeasure ref="AZ-A12" mitigation="20"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-A09" mitigation="20"/>
                <countermeasure ref="AZ-A10" mitigation="30"/>
                <countermeasure ref="AZ-A11" mitigation="30"/>
                <countermeasure ref="AZ-A12" mitigation="20"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="GENERAL" name="General" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="UNCONFIGURED-SECURITY" name="Attackers gain access to the system by exploiting weak security configurations" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>Weak security configurations like using sharing passwords in plain text, using weak passwords, using obsolete encryption algorithms, etc. can lead attackers to gain access to the system.</desc>
              <riskRating confidentiality="75" integrity="50" availability="25" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-16">
                  <countermeasures>
                    <countermeasure ref="AZURE-AD19" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZURE-AD19" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="LOG ACTIVITY ALERTS" name="Log Activity alerts" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="UNAUTHORIZED-ACCESS-SYSTEMS" name="Attackers access the systems without being detected" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;Attackers gain access to the systems and are not detected and consequently, changes made by attackers can not be audited or detected.&lt;/p&gt;</desc>
              <riskRating confidentiality="50" integrity="25" availability="25" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-MON02">
                  <countermeasures>
                    <countermeasure ref="AZ-M10" mitigation="20"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AZURE-MON03">
                  <countermeasures>
                    <countermeasure ref="AZ-M11" mitigation="20"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AZURE-MON04">
                  <countermeasures>
                    <countermeasure ref="AZ-M12" mitigation="20"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AZURE-MON05">
                  <countermeasures>
                    <countermeasure ref="AZ-M04" mitigation="20"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AZURE-MON06">
                  <countermeasures>
                    <countermeasure ref="AZ-M05" mitigation="20"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-M04" mitigation="20"/>
                <countermeasure ref="AZ-M05" mitigation="20"/>
                <countermeasure ref="AZ-M10" mitigation="20"/>
                <countermeasure ref="AZ-M11" mitigation="20"/>
                <countermeasure ref="AZ-M12" mitigation="20"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="UNAUTHORIZED-ACCESS-SECURITY-SYSTEMS" name="Attackers gain undetected access to the security system configurations" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>Attackers could gain undetected access to the security system configurations and
                                changes made by attackers couldn't be audited or detected.
                            </desc>
              <riskRating confidentiality="50" integrity="50" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-MON01">
                  <countermeasures>
                    <countermeasure ref="AZ-M01" mitigation="25"/>
                    <countermeasure ref="AZ-M02" mitigation="25"/>
                    <countermeasure ref="AZ-M03" mitigation="25"/>
                    <countermeasure ref="AZ-M09" mitigation="25"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-M01" mitigation="25"/>
                <countermeasure ref="AZ-M02" mitigation="25"/>
                <countermeasure ref="AZ-M03" mitigation="25"/>
                <countermeasure ref="AZ-M09" mitigation="25"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="UNAUTHORIZED-ACCESS-NETWORK" name="Sensitive data is compromised through network access" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>Attackers gain undetected access to the network systems and changes made by the
                                attackers couldn't be audited or detected.
                            </desc>
              <riskRating confidentiality="50" integrity="50" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-MON07">
                  <countermeasures>
                    <countermeasure ref="AZ-M06" mitigation="40"/>
                    <countermeasure ref="AZ-M07" mitigation="30"/>
                    <countermeasure ref="AZ-M08" mitigation="30"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-M06" mitigation="40"/>
                <countermeasure ref="AZ-M07" mitigation="30"/>
                <countermeasure ref="AZ-M08" mitigation="30"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="NETWORKING" name="Networking" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="UNAUTHORIZED-CONNECTION" name="Attackers gain unauthorized connection to the resources" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;Attackers could potentially gain unauthorized connection to the resources through misconfigured ports or security network configurations.&lt;/p&gt;</desc>
              <riskRating confidentiality="50" integrity="50" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-VNET01">
                  <countermeasures>
                    <countermeasure ref="AZ-N08" mitigation="50"/>
                    <countermeasure ref="AZ-N09" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-N08" mitigation="50"/>
                <countermeasure ref="AZ-N09" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="faa97ac8-d96b-4171-8c72-78b44ba54ae4" diagramComponentId="f1fa28c5-627a-48d9-989d-385ca0d63076" ref="0bdc7eaf-e703-4edf-9902-c6c77916858d" name="Azure Key Vault" desc="" library="Microsoft-Azure" parentComponentRef="b359f0ab-6790-4cbb-b7ae-c451ccbda797" componentDefinitionRef="microsoft-azure-key-vault">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses>
        <weakness ref="AZURE-UNSECURE-CREDENTIALS" name="Credentials are not securely stored" state="0" impact="100" issueId="" issueLink="">
          <desc>The credentials used to access the resources are not securely stored and can be accessed by unauthorized personnel.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:31.289">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-MON02" name="Excessive use of administrator accounts" state="0" impact="100" issueId="" issueLink="">
          <desc>The administrator accounts are used for all actions, not only for administrative actions. This
                        is because these users have not got a personal or a user account to do the daily actions.&amp;nbsp;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that there is any rule to notify when there is a bad usage of the root
                            account.&lt;/li&gt;
                            &lt;li&gt;Check if these rules are enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:31.289">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CWE-77" name="Improper Neutralization of Special Elements used in a Command ('Command Injection')" state="0" impact="100" issueId="" issueLink="">
          <desc>The software constructs all or part of a command using
                    externally-influenced input from an upstream component, but it does not
                    neutralize or incorrectly neutralizes special elements that could modify the
                    intended command when it is sent to a downstream
                    component.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:31.288">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CWE-778" name="Insufficient Logging" state="0" impact="100" issueId="" issueLink="">
          <desc>When a critical security event occurs, the software either does not record the event or omits important details about the event when logging it. When critical security events are not logged properly, such as in the case of a failed login attempt, this can make malicious behavior more difficult to detect and may hinder forensic analyses after a successful attack.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:31.288">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-NON-IDENTIFY" name="Insufficient resource identification" state="0" impact="100" issueId="" issueLink="">
          <desc>Resources are not registered in the safety net systems, and/or additional unidentified resources exist. As such, additional weaknesses might be introduced.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:31.288">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CWE-320" name="Key Management Errors" state="0" impact="100" issueId="" issueLink="">
          <desc>Weaknesses in this category are related to errors in the management of cryptographic keys.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:31.288">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-MON03" name="Lack of 2FA" state="0" impact="100" issueId="" issueLink="">
          <desc>Logging into the console without using Multi-factor Authentication (MFA) and without being detected. The connection without MFA must be audited and monitored, the correct security group must be informed and the connection must be validated.&amp;nbsp;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that there is any rule to notify when someone tries to login into the
                            console without MFA.&lt;/li&gt;
                            &lt;li&gt;Check if these rules are enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:31.288">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZ-W04" name="Misconfigured Authentication Method for Administrator Accounts" state="0" impact="100" issueId="" issueLink="">
          <desc>The authentication method &amp;quot;Multi-factor Authentication&amp;quot; for the Administrator accounts is not configured.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;Multi-Factor Authentication&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check all Administrator accounts have got the MFA flag enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:31.288">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-IDENTITY-03" name="Misconfigured User Account" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        Key security settings such as resetting the password and other password controls are not
                        configured.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log in to the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each user has got an assigned account.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;Password reset&amp;quot; &amp;gt; &amp;quot;Authentication Method&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that the security confirmation measures and the security criteria are well
                            filled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:31.288">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-ACCESS-01" name="Misconfigured credentials for groups and roles" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        The credentials for groups and roles are not correctly configured and there are user accounts with more privileges than necessary.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each user has got assigned the correct groups.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All groups&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each group has got assigned the correct roles to achieve principle of
                            least privilege.&lt;/li&gt;
                            &lt;li&gt;Check that the roles for the Cloud Service are well assigned.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;div&gt;
                            &lt;/div&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:31.288">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-VNET01" name="Networks for Azure resources are not properly segmented. Without proper segmentation, when attackers gain access to one resource, any other resources in the same VNet are compromised" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        Resources in the same VNet are compromised because when one of them is attacked and the
                        attackers gain access, they also gain access to all resources.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            Identify the resources and the Microsoft Azure instances.
                            &lt;/div&gt;
                            &lt;div&gt;
                            Check that the resources are in the correct VNet.
                            &lt;/div&gt;
                            &lt;div&gt;
                            Check that the Microsoft Azure instances&amp;nbsp;are into different VNets.
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:31.288">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-VM01" name="Security policies exposing system resources" state="0" impact="100" issueId="" issueLink="">
          <desc>The security policies are not adequately configured.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:31.288">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-MONITOR-BACKUPS" name="There is not a recover or backup mechanism" state="0" impact="100" issueId="" issueLink="">
          <desc>There are not any processes or mechanisms to regularly save the data to another place in order to have an older version of the data to restore in case of loss. Consequently the data cannot be easily recovered or they cannot be recovered at all.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:31.287">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-NET-01" name="Unauthorized connection attempts on open ports" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        Receiving unauthorized connections to open ports makes systems vulnerable to attacks. To
                        avoid this, access to the network must be as restricted as possible, so that only the necessary
                        ports are open and the minimum inbound traffic is accepted.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Check that each Azure resources have got their Network Security Groups.&lt;/li&gt;
                            &lt;li&gt;Check that a set of these groups achieve with the principle of the least
                            privilege.&lt;/li&gt;
                            &lt;li&gt;Check that the inbound/outbound security rules are enabled and correctly
                            configured.&lt;/li&gt;
                            &lt;li&gt;In &amp;quot;Inbound security rules&amp;quot;, check that all the traffic from
                            0.0.0.0/0&amp;nbsp;is blocked.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:31.286">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="AZURE-KEY-VAULT12" name="Activate purge-protection and soft-delete on key vaults" issueId="" issueLink="" platform="" cost="0" risk="42" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;The key vault contains object keys, secrets and certificates. Accidental unavailability of a key vault can cause immediate data loss or loss of security functions (authentication, validation, verification, non-repudiation, etc.) supported by the key vault objects.&lt;/p&gt;&lt;p&gt;It is recommended the key vault be made recoverable by enabling the "Do Not Purge" and "Soft Delete" functions. This is in order to prevent loss of encrypted data including storage accounts, SQL databases, and/or dependent services provided by key vault objects (Keys, Secrets, Certificates) etc., as may happen in the case of accidental deletion by a user or from disruptive activity by a malicious user.&lt;/p&gt;&lt;p&gt;Rationale:&lt;/p&gt;&lt;p&gt;There could be scenarios where users accidently run delete/purge commands on key vault or attacker/malicious user does it deliberately to cause disruption. Deleting or purging a key vault leads to immediate data loss as keys encrypting data and secrets/certificates allowing access/services will become non-accessible. There are 2 key vault properties that plays role in permanent unavailability of a key vault.&lt;/p&gt;&lt;p&gt;1. enableSoftDelete:&lt;/p&gt;&lt;p&gt;Setting this parameter to true for a key vault ensures that even if key vault is deleted, Key vault itself or its objects remain recoverable for next 90days. In this span of 90 days either key vault/objects can be recovered or purged (permanent deletion). If no action is taken, after 90 days key vault and its objects will be purged.&lt;/p&gt;&lt;p&gt;2. enablePurgeProtection:&lt;/p&gt;&lt;p&gt;enableSoftDelete only ensures that key vault is not deleted permanently and will be recoverable for 90 days from date of deletion. However, there are chances that the key vault and/or its objects are accidentally purged and hence will not be recoverable. Setting enablePurgeProtection to "true" ensures that the key vault and its objects cannot be purged.&lt;/p&gt;&lt;p&gt;Enabling both the parameters on key vaults ensures that key vaults and their objects cannot be deleted/purged permanently.&lt;/p&gt;&lt;p&gt;Remediation:&lt;/p&gt;&lt;p&gt;To enable "Do Not Purge" and "Soft Delete" for a Key Vault:&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;From Azure Portal&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Azure Portal does not have provision to update the respective configurations&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Using Azure CLI 2.0&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;az resource update --id /subscriptions/xxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/&amp;lt;resourceGroupName&amp;gt;/providers/Microsoft.KeyVault /vaults/&amp;lt;keyVaultName&amp;gt; --set properties.enablePurgeProtection=true properties.enableSoftDelete=true&lt;/p&gt;&lt;/blockquote&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="8.4" supportedStandardRef="cis-azure-standard"/>
            <standard ref="8.4" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="BR-3" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;&lt;strong&gt;From Azure Portal&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Azure Portal does not have provision to update the respective configurations&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Using Azure CLI 2.0&lt;/strong&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;List all Resources of type Key Vaults: az resource list --query "[?type=='Microsoft.KeyVault/vaults']"&lt;/li&gt;&lt;li&gt;For Every Key Vault ID ensure check parameters enableSoftDelete and enablePurgeProtection are set to enabled. az resource show --id /subscriptions/xxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx/resourceGroups/&amp;lt;resourceGroupName&amp;gt;/providers/Microsoft.KeyVault /vaults/&amp;lt;keyVaultName&amp;gt;&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:31.096">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-A09" name="Apply RBAC with pre-defined policies added into groups or roles" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Define and create groups that relate to job functions (administrators, developers, accounting,
                        etc.) and assign the relevant permissions for each group, and then assign IAM users to those
                        groups.&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &amp;nbsp;&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        All the users in an IAM group inherit the permissions assigned to the group. That way, you can
                        make changes for everyone in a group in just one place. As people move around in your company,
                        you can simply change what IAM group their IAM user belongs to. This method is known as Role
                        Based Access Control (RBAC).&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Remove a user from a group:&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;ol&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                        &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                        &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Click on the user name. All the groups the user belongs are there.&lt;/li&gt;
                        &lt;li&gt;Choose the group and &amp;quot;Remove&amp;quot;.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/ol&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Create a group and add user:&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;ol&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                        &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                        &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All groups&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Click &amp;quot;New Group&amp;quot; and fill the information.&lt;/li&gt;
                        &lt;li&gt;Search and add the user.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Create a group and add members in Azure Active Directory" url="https://docs.microsoft.com/en-us/azure/active-directory/active-directory-groups-create-azure-portal"/>
            <reference name="MS Azure - Use Role-Based Access Control to manage access to your Azure subscription resources" url="https://docs.microsoft.com/en-us/azure/active-directory/role-based-access-control-configure"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each user has got assigned the correct groups.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All groups&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each group has got assigned the correct roles.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:31.096">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-KEY-VAULT5" name="Configure alerts on Azure Key Vault" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Configure alerts on Azure Key Vault&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Once you have started to use key vault to store your production secrets, it is important to monitor the health of your key vault to make sure your service operates as intended. As you start to scale your service the number of requests sent to your key vault will rise. This has a potential to increase the latency of your requests and in extreme cases, cause your requests to be throttled which will impact the performance of your service. You also need to be alerted if your key vault is sending an unusual number of error codes, so you can be quickly notified of any access policy or firewall configuration issues. &lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; How to configure alerts on your Key Vault&lt;br&gt; Important: Please note it can take up to 10 minutes for newly configured alerts to start sending notifications.&lt;/p&gt; 
&lt;p&gt;Configure an action group&lt;/p&gt; 
&lt;p&gt;An action group is a configurable list of notifications and properties.&lt;/p&gt; 
&lt;p&gt;1. Login to the Azure portal&lt;/p&gt; 
&lt;p&gt;2. Search for Alerts in the search box&lt;/p&gt; 
&lt;p&gt;3. Select Manage Actions&lt;/p&gt; 
&lt;p&gt;4. Select + Add Action Group&lt;/p&gt; 
&lt;p&gt;5. Choose the Action Type for your Action Group. In this example, we will create an email alert.&lt;/p&gt; 
&lt;p&gt;6. Click OK at the bottom of the page. You have successfully created an action group.&lt;/p&gt; 
&lt;p&gt;Configure alert thresholds&lt;/p&gt; 
&lt;p&gt;1. Select your key vault resource in the Azure portal and select Alerts under Monitoring&lt;/p&gt; 
&lt;p&gt;2. Select New Alert Rule&lt;/p&gt; 
&lt;p&gt;3. Select the scope of your alert rule. You can select a single vault or multiple.&lt;/p&gt; 
&lt;p&gt;Important: Please note that when you are selecting multiple vaults for the scope of your alerts, all selected vaults must be in the same region. You will have to configure separate alert rules for vaults in different regions.&lt;/p&gt; 
&lt;p&gt;4. Select the conditions for your alerts. You can choose any of the following signals and define your logic for alerting. The Key Vault team recommends configuring the following alerting thresholds.&lt;/p&gt; 
&lt;p&gt;- Key Vault Availability drops below 100% (Static Threshold)&lt;br&gt; - Key Vault Latency is greater than 500ms (Static Threshold)&lt;br&gt; - Overall Vault Saturation is greater than 75% (Static Threshold)&lt;br&gt; - Overall Vault Saturation exceeds average (Dynamic Threshold)&lt;br&gt; - Total Error Codes higher than average (Dynamic Threshold)&lt;/p&gt; 
&lt;p&gt;Example 1: Configuring a static alert threshold for latency&lt;br&gt; Select Overall Service API Latency as the signal name&lt;/p&gt; 
&lt;p&gt;Please see the following configuration parameters.&lt;/p&gt; 
&lt;p&gt;- Set the Threshold to Static&lt;br&gt; - Set the Operator to Greater Than&lt;br&gt; - Set the Aggregation Type to Average&lt;br&gt; - Set the Threshold Value to 500&lt;br&gt; - Set Aggregation Period to 5 minutes&lt;br&gt; - Set the Evaluation Frequency to 1 minute&lt;br&gt; - Select Done&lt;/p&gt; 
&lt;p&gt;Example 2: Configuring a dynamic alert threshold for vault saturation&lt;br&gt; When you use a dynamic alert, you will be able to see historical data of the key vault you have selected. The blue area represents the average usage of your key vault. The red area shows spikes that would have triggered an alert provided other criteria in the alert configuration are met. The red dots show instances of violations where the criteria for the alert was met during the aggregated time window. You can set an alert to fire after a certain number of violations within a set time. If you do not want to include past data, there is an option to exclude old data below in advanced settings.&lt;/p&gt; 
&lt;p&gt;Please see the following configuration parameters.&lt;/p&gt; 
&lt;p&gt;- Set the Threshold to Dynamic&lt;br&gt; - Set the Operator to Greater Than&lt;br&gt; - Set the Aggregation Type to Average&lt;br&gt; - Set the Threshold Sensitivity to Medium&lt;br&gt; - Set Aggregation Period to 5 minutes&lt;br&gt; - Set the Evaluation Frequency to 1 minute&lt;br&gt; - Optional Configure Advanced Settings&lt;br&gt; - Select Done&lt;/p&gt; 
&lt;p&gt;5. Add the action group that you have configured&lt;/p&gt; 
&lt;p&gt;6. Enable the alert and assign a severity&lt;/p&gt; 
&lt;p&gt;7.Create the alert&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Monitoring and alerting for Azure Key Vault" url="https://docs.microsoft.com/en-us/azure/key-vault/general/alert"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Once you have followed all the steps to create an alert, you should receive email alerts when your key vault meets the alert criteria you configured.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:31.096">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-KEY-VAULT11" name="Configure Azure Key Vault settings for each Key vault" issueId="" issueLink="" platform="" cost="0" risk="42" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Ensure that all keys in Azure Key Vault have an expiration time set.&lt;/p&gt;&lt;p&gt;Rationale:&lt;/p&gt;&lt;p&gt;Azure Key Vault enables users to store and use cryptographic keys within the Microsoft Azure environment. The exp (expiration time) attribute identifies the expiration time on or after which the key MUST NOT be used for a cryptographic operation. By default, keys never expire. It is thus recommended that keys be rotated in the key vault and set an explicit expiration time for all keys. This ensures that the keys cannot be used beyond their assigned lifetimes.&lt;/p&gt;&lt;p&gt;Impact:&lt;/p&gt;&lt;p&gt;Keys cannot be used beyond their assigned expiration times respectively. Keys need to be rotated periodically wherever they are used.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;From Azure Console&lt;/strong&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Go to Key vaults&lt;/li&gt;&lt;li&gt;For each Key vault, click on Keys.&lt;ol&gt;&lt;li&gt;Under the Settings section, Make sure Enabled? is set to Yes&lt;/li&gt;&lt;li&gt;Set an appropriate EXPIRATION DATE on all keys.&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;Repeat the same process for secrets&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;strong&gt;Using Azure Command Line Interface 2.0&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Update the EXPIRATION DATE for the key using below command.&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;az keyvault key set-attributes --name &amp;lt;keyName&amp;gt; --vault-name &amp;lt;vaultName&amp;gt; --expires Y-m-d'T'H:M:S'Z'&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Use the below command to set EXPIRATION DATE on the all secrets.&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;az keyvault secret set-attributes --name &amp;lt;secretName&amp;gt; --vault-name &amp;lt;vaultName&amp;gt; --expires Y-m-d'T'H:M:S'Z'&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Note: In order to access expiration time on all keys in Azure Key Vault using Microsoft API requires "List" Key permission. To provide required access follow below steps,&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Go to Key vaults&lt;/li&gt;&lt;li&gt;For each Key vault, click on Access Policy.&lt;/li&gt;&lt;li&gt;Add access policy with Key permission as List&lt;/li&gt;&lt;/ol&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="8.1" supportedStandardRef="cis-azure-standard"/>
            <standard ref="8.1" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="8.2" supportedStandardRef="cis-azure-standard"/>
            <standard ref="8.2" supportedStandardRef="cis-azure-standard-level-2"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;&lt;strong&gt;From Azure Console&lt;/strong&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Go to Key vaults&lt;/li&gt;&lt;li&gt;For each Key vault, click on Keys.&lt;ol&gt;&lt;li&gt;Under the Settings section, Make sure Enabled? is set to Yes&lt;/li&gt;&lt;li&gt;Then ensure that each key in the vault has EXPIRATION DATE set as appropriate&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;Repeat the same process for secrets&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;strong&gt;Using Azure Command Line Interface 2.0&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Ensure that the output of the below command contains Key ID (kid), enabled status as true and Expiration date (expires) is not empty or null:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;az keyvault key list --vault-name &amp;lt;KEYVALUTNAME&amp;gt; --query [*].[{"kid":kid},{"enabled":attributes.enabled},{"expires":attributes.expires}]&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Ensure that the output of the below command contains ID (id), enabled status as true and Expiration date (expires) is not empty or null:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;az keyvault secret list --vault-name &amp;lt;KEYVAULTNAME&amp;gt; --query [*].[{"id":id},{"enabled":attributes.enabled},{"expires":attributes.expires}]&lt;/p&gt;&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:31.096">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-A11" name="Configure roles for the Cloud Service" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Define and create the roles for the Azure Cloud Service. For each role, define the permissions and also configure how that role runs. When you launch an Azure instance, you shall specify a role for the instance as a launch parameter. Applications that run on the Cloud instance use the role's credentials when they access Azure resources. This role's permissions determine what the application is allowed to do.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Configure an Azure cloud service from Solution Explorer in Visual Studio.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Use Role-Based Access Control to manage access to your Azure subscription resources" url="https://docs.microsoft.com/en-us/azure/active-directory/role-based-access-control-configure"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that the roles for the Cloud Service are well assigned.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:31.097">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-KEY-VAULT1" name="Control Access to Azure Key Vault" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Control Access to Azure Key Vault&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Azure Key Vault is a cloud service that safeguards encryption keys and secrets like certificates, connection strings, and passwords. Because this data is sensitive and business critical, you need to secure access to your key vaults by allowing only authorized applications and users.&lt;br&gt; Key Vault currently supports the Contributor role, which allows management operations on Key Vault resources. If a user has Contributor permissions to a key vault management plane, the user can grant themselves access to the data plane by setting a Key Vault access policy. You should tightly control who has Contributor role access to your key vaults. Ensure that only those with a need for access authorized persons can access and manage your vaults.&lt;/p&gt; 
&lt;p&gt;In addition you can use n Azure service principal in conjunction with the AppId, TenantID, and ClientSecret, to seamlessly authenticate your application and retrieve the token that will be used to access your Azure Key Vault secrets.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Enable Azure RBAC permissions on Key Vault&lt;/p&gt; 
&lt;p&gt;Important: Setting Azure RBAC permission model invalidates all access policies permissions. It can cause outages when equivalent Azure roles are not assigned.&lt;/p&gt; 
&lt;p&gt;1. Enable Azure RBAC permissions on new key vault:&lt;/p&gt; 
&lt;p&gt;- Go into Dashboard&amp;gt;Key vaults&amp;gt;Create key vault&lt;br&gt; - Go to Access policy tab and under Permission model select Azure role-based access control&lt;/p&gt; 
&lt;p&gt;2. Enable Azure RBAC permissions on existing key vault:&lt;/p&gt; 
&lt;p&gt;- Go to Dashboard and select your Key Vault&lt;br&gt; - Under Permission model select Azure role-based access control&lt;/p&gt; 
&lt;p&gt;Assign role&lt;/p&gt; 
&lt;p&gt;Note: It is recommended to use the unique role ID instead of the role name in scripts. Therefore, if a role is renamed, your scripts would continue to work. During preview every role would have "(preview)" suffix, which would be removed later. In this guide role name is used only for readability.&lt;/p&gt; 
&lt;p&gt;In the Azure portal, the Azure role assignments screen is available for all resources on the Access control (IAM) tab.&lt;/p&gt; 
&lt;p&gt;Resource group scope role assignment&lt;/p&gt; 
&lt;p&gt;1. Go to key vault Resource Group.&lt;/p&gt; 
&lt;p&gt;2. Click Access control (IAM) &amp;gt; Add-role assignment&amp;gt;Add&lt;/p&gt; 
&lt;p&gt;3. Create Key Vault Reader role "Key Vault Reader (preview)" for current user&lt;/p&gt; 
&lt;p&gt;Above role assignment provides ability to list key vault objects in key vault.&lt;/p&gt; 
&lt;p&gt;Key Vault scope role assignment&lt;/p&gt; 
&lt;p&gt;1. Go to Key Vault &amp;gt; Access control (IAM) tab&lt;/p&gt; 
&lt;p&gt;2. Click Add-role assignment&amp;gt;Add&lt;/p&gt; 
&lt;p&gt;3. Create Key Secrets Officer role "Key Vault Secrets Officer (preview)" for current user.&lt;/p&gt; 
&lt;p&gt;After creating above role assignment you can create/update/delete secrets.&lt;/p&gt; 
&lt;p&gt;4. Create new secret ( Secrets &amp;gt; +Generate/Import) for testing secret level role assignment.&lt;/p&gt; 
&lt;p&gt;Secret scope role assignment&lt;/p&gt; 
&lt;p&gt;1. Open one of previously created secrets, notice Overview and Access control (IAM) (preview)&lt;/p&gt; 
&lt;p&gt;2. Click Access control(IAM)(preview) tab&lt;/p&gt; 
&lt;p&gt;3. Create Key Secrets Officer role "Key Vault Secrets Officer (preview)" for current user, same like it was done above for the Key Vault.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Provide access to Key Vault keys, certificates, and secrets with an Azure role-based access control (preview)" url="https://docs.microsoft.com/en-us/azure/key-vault/general/rbac-guide"/>
            <reference name="SSecure access to a key vault" url="https://docs.microsoft.com/en-us/azure/key-vault/general/secure-your-key-vault"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Test and verify&lt;/p&gt;

  &lt;p&gt;Note: Browsers use caching and page refresh is required after removing role assignments.&lt;br /&gt;
Allow several minutes for role assignments to refresh&lt;/p&gt;

  &lt;p&gt;1. Validate adding new secret without "Key Vault Secrets Officer" role on key vault level.&lt;/p&gt;

  &lt;p&gt;- Go to key vault Access control (IAM) tab and remove "Key Vault Secrets Officer (preview)" role assignment for this resource.&lt;/p&gt;

  &lt;p&gt;- Navigate to previously created secret. (Please see Description section) &lt;br /&gt;
You can see all secret properties.&lt;/p&gt;

  &lt;p&gt;- Create new secret ( Secrets &gt; +Generate/Import) should show error:&lt;br /&gt;
"The operation is not allowed by RBAC"&lt;/p&gt;


  &lt;p&gt;2. Validate secret editing without "Key Vault Secret Officer" role on secret level.&lt;br /&gt;
- Go to previously created secret Access Control (IAM) (preview) tab and remove "Key Vault Secrets Officer (preview)" role assignment for this resource.&lt;/p&gt;

  &lt;p&gt;- Navigate to previously created secret. You can see secret properties.&lt;/p&gt;

  &lt;p&gt;3. Validate secrets read without reader role on key vault level.&lt;br /&gt;
- Go to key vault resource group Access control (IAM) tab and remove "Key Vault Reader (preview)" role assignment.&lt;/p&gt;

  &lt;p&gt;- Navigating to key vault's Secrets tab should show error:&lt;br /&gt;
"The operation is not allowed by RBAC" &lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:31.097">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-A03" name="Create Individual Accounts for the administrator users" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Create an individual account for the administrator users and with this new accounts By creating individual Azure users for people accessing your account, you can give each Azure user a unique set of security credentials.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The administrator accounts shall be used for the administrative actions and for giving or revoke credentials to the user's account. The administrator account shall be not used as a normal user account. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt; 
  &lt;li&gt;Select Azure Active Directory.&lt;/li&gt; 
  &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt; 
  &lt;li&gt;Select &amp;quot;Add New User&amp;quot;.&lt;/li&gt; 
  &lt;li&gt;Fill the required information and click &amp;quot;Create&amp;quot;.&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt; 
&lt;div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Add new users to Azure Active Directory" url="https://docs.microsoft.com/en-us/azure/active-directory/add-users-azure-active-directory"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each user has got a user account assigned.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:31.097">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-A10" name="Create mechanisms to ensure the principle of least privilege is applied" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Create the mechanisms to review periodically the group and user permissions to ensure the least privilege for the user accounts. Granting least privilege ensures that users only have the permissions required to complete their jobs rather than additional privileges that are not required. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Following this model ensures that, should an account be compromised, the blast radius of damage is limited&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Allocate privileges via groups or roles via the recommendation in "Use RBAC with pre-defined policies added into groups or roles".&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt; 
&lt;div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Create a group and add members in Azure Active Directory" url="https://docs.microsoft.com/en-us/azure/active-directory/active-directory-groups-create-azure-portal"/>
            <reference name="MS Azure - Use Role-Based Access Control to manage access to your Azure subscription resources" url="https://docs.microsoft.com/en-us/azure/active-directory/role-based-access-control-configure"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that the principle of least privilege is achieved in the assignation of roles and
                            groups to the users.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:31.097">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-KEY-VAULT7" name="Enable Azure Defender for Azure Key Vault" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Enable Azure Defender for Azure Key Vault&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Azure Defender for Key Vault is an Azure-native threat protection service, which detects unusual and potentially harmful access to Key Vault accounts. It provides an additional layer of security intelligence for the keys, secrets and certificates stored in the Azure Key Vault by alerting you to suspicious or malicious access. This layer of security allows you to address threats without being a security expert, and without the need to manage third-party security monitoring systems.&lt;/p&gt; 
&lt;p&gt;When anomalous activities occur, Azure Defender shows alerts and optionally sends them via email to relevant members of your organization. These alerts include the details of suspicious activity and recommendations on how to investigate and remediate the threats. &lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; How to enable Azure Defender for Key Vault&lt;/p&gt; 
&lt;p&gt;Azure Defender for Key Vault can be enabled from Security Center, or from Key Vault.&lt;/p&gt; 
&lt;p&gt;Method 1: Enable from Security Center&lt;br&gt; 1. Go to the Security Center from Azure Portal. &lt;br&gt; 2. From Security Center's main menu, select Pricing &amp;amp; settings under Management. &lt;br&gt; 3. Select the subscription that you want to enable Azure Defender for Key Vault. &lt;br&gt; 4. Select Azure Defender to upgrade. &lt;br&gt; 5. Switch Azure Defender plan for Key Vault to On. &lt;br&gt; 6. Select Save. &lt;/p&gt; 
&lt;p&gt;Method 2: Enable from Key Vault &lt;br&gt; 1. Go to the target Key Vault from Azure Portal. &lt;br&gt; 2. From Key Vault's main menu, select Security under Settings. &lt;br&gt; 3. Under Security alerts, select Try it free for the first 30 days. &lt;br&gt; 4. Select the subscription that you want to enable Azure Defender for Key Vault. &lt;br&gt; 5. Select Upgrade. &lt;/p&gt; 
&lt;p&gt;How to find alerts of Azure Defender for Key Vault&lt;/p&gt; 
&lt;p&gt;The Azure Defender for Key Vault alerts show up on Key Vault and Security Center. &lt;/p&gt; 
&lt;p&gt;1. View alerts on the Key Vault's Security page &lt;br&gt; a. Go to the target Key Vault from Azure Portal. &lt;br&gt; b. From Key Vault's main menu, select Security under Settings. &lt;/p&gt; 
&lt;p&gt;2. View alerts in the Security Center's Security alerts page. &lt;br&gt; a. Go to the Security Center from Azure Portal. &lt;br&gt; b. From Security Center's main menu, select Security alerts under General. &lt;br&gt; 3. Details on the alert page&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Azure Defender for Key Vault" url="https://techcommunity.microsoft.com/t5/azure-security-center/azure-defender-for-key-vault/ba-p/1825055"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that Azure Defender is enabled for Azure Key Vault.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:31.097">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-SENTINEL" name="Enable Azure Sentinel" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Enable Azure Sentinel&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Microsoft Azure Sentinel is a scalable, cloud-native, security information event management (SIEM) and security orchestration automated response (SOAR) solution. Azure Sentinel delivers intelligent security analytics and threat intelligence across the enterprise, providing a single solution for alert detection, threat visibility, proactive hunting, and threat response.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Enable Azure Sentinel&lt;/p&gt; 
&lt;p&gt;1. Sign in to the Azure portal. Make sure that the subscription in which Azure Sentinel is created is selected.&lt;/p&gt; 
&lt;p&gt;2. Search for and select Azure Sentinel.&lt;/p&gt; 
&lt;p&gt;3. Select Add.&lt;/p&gt; 
&lt;p&gt;4. Select the workspace you want to use or create a new one. You can run Azure Sentinel on more than one workspace, but the data is isolated to a single workspace.&lt;/p&gt; 
&lt;p&gt;Note: Default workspaces created by Azure Security Center will not appear in the list; you cannot install Azure Sentinel on them.&lt;/p&gt; 
&lt;p&gt;Important: Once deployed on a workspace, Azure Sentinel does not currently support the moving of that workspace to other resource groups or subscriptions.&lt;/p&gt; 
&lt;p&gt;If you have already moved the workspace, disable all active rules under Analytics and re-enable them after five minutes. This should be effective in most cases, though, to reiterate, it is unsupported and undertaken at your own risk.&lt;/p&gt; 
&lt;p&gt;5. Select Add Azure Sentinel.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Quickstart: On-board Azure Sentinel" url="https://docs.microsoft.com/en-us/azure/sentinel/quickstart-onboard"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure Azure Sentinel is enabled.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:31.097">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-KEY-VAULT10" name="Enable DDoS Standard protection on your Azure VNets associated with Key Vault instances" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Enable DDoS Standard protection on your Azure VNets associated with Enable DDoS Standard protection on your Azure VNets associated with Key Vault instances&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Enable Azure DDoS Protection Standard on the Azure Virtual Networks associated with your Key Vault instances for protection against distributed denial-of-service attacks. Use Azure Security Center Integrated Threat Intelligence to deny communications with known malicious or unused Internet IP addresses.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Create a DDoS protection plan&lt;/p&gt; 
&lt;p&gt;1. Select Create a resource in the upper left corner of the Azure portal.&lt;/p&gt; 
&lt;p&gt;2. Search the term DDoS. When DDoS protection plan appears in the search results, select it.&lt;/p&gt; 
&lt;p&gt;3. Select Create.&lt;/p&gt; 
&lt;p&gt;4. Enter or select the following values, then select Create:&lt;/p&gt; 
&lt;p&gt;Name: Enter MyDdosProtectionPlan.&lt;br&gt; Subscription: Select your subscription.&lt;br&gt; Resource group: Select Create new and enter MyResourceGroup.&lt;br&gt; Location: Enter East US.&lt;/p&gt; 
&lt;p&gt;Enable DDoS protection for a new virtual network&lt;/p&gt; 
&lt;p&gt;1. Select Create a resource in the upper left corner of the Azure portal.&lt;/p&gt; 
&lt;p&gt;2. Select Networking, and then select Virtual network.&lt;/p&gt; 
&lt;p&gt;3. Enter or select the following values, accept the remaining defaults, and then select Create:&lt;/p&gt; 
&lt;p&gt;Name: Enter MyVnet.&lt;br&gt; Subscription: Select your subscription.&lt;br&gt; Resource group: Select Use existing, and then select MyResourceGroup&lt;br&gt; Location: Enter East US&lt;br&gt; DDoS Protection Standard: Select Enable. The plan you select can be in the same, or different subscription than the virtual network, but both subscriptions must be associated to the same Azure Active Directory tenant.&lt;/p&gt; 
&lt;p&gt;Enable DDoS protection for an existing virtual network&lt;/p&gt; 
&lt;p&gt;1. Create a DDoS protection plan by completing the steps in Create a DDoS protection plan, if you do not have an existing DDoS protection plan.&lt;br&gt; 2. Select Create a resource in the upper left corner of the Azure portal.&lt;br&gt; 3. Enter the name of the virtual network that you want to enable DDoS Protection Standard for in the Search resources, services, and docs box at the top of the portal. When the name of the virtual network appears in the search results, select it.&lt;br&gt; 4. Select DDoS protection, under SETTINGS.&lt;br&gt; 5. Select Standard. Under DDoS protection plan, select an existing DDoS protection plan, or the plan you created in step 1, and then select Save. The plan you select can be in the same, or different subscription than the virtual network, but both subscriptions must be associated to the same Azure Active Directory tenant.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; You cannot move a virtual network to another resource group or subscription when DDoS Standard is enabled for the virtual network. If you need to move a virtual network with DDoS Standard enabled, disable DDoS Standard first, move the virtual network, and then enable DDoS standard. After the move, the auto-tuned policy thresholds for all the protected public IP addresses in the virtual network are reset.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Introduction to Azure Defender" url="https://docs.microsoft.com/en-us/azure/security-center/azure-defender"/>
            <reference name="Quickstart: Create and configure Azure DDoS Protection Standard" url="https://docs.microsoft.com/en-us/azure/ddos-protection/manage-ddos-protection"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Validate and test&lt;/p&gt;

  &lt;p&gt;First, check the details of your DDoS protection plan:&lt;/p&gt;

  &lt;p&gt;1. Select All services on the top, left of the portal.&lt;br /&gt;
2. Enter DDoS in the Filter box. When DDoS protection plans appear in the results, select it.&lt;br /&gt;
3. Select your DDoS protection plan from the list.&lt;/p&gt;

  &lt;p&gt;The MyVnet virtual network should be listed.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:31.097">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-L01" name="Enable diagnostic logs auditing for Microsoft Azure" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Diagnostic Logs capture activity to the data access plane while the Activity log is a subscription-level log for the control plane. Resource-level diagnostic logs provide insight into operations that were performed within that resource itself, for example, getting a secret from a Key Vault. Currently, 32 Azure resources support Diagnostic Logging (See the references section for a complete list), including Network Security Groups, Load Balancers, Key Vault, AD, Logic Apps and CosmosDB. The content of these logs varies by resource type. For example, Windows event system logs are a category of diagnostics logs for VMs, and blob, table, and queue logs are categories of diagnostics logs for storage accounts.&lt;/p&gt;&lt;p&gt;A number of back-end services were not configured to log and store Diagnostic Logs for certain activities or for a sufficient length. It is crucial that logging systems are correctly configured to log all relevant activities and retain those logs for a sufficient length of time. By default, Diagnostic Logs are not enabled. Given that the mean time to detection in an enterprise is 240 days, a minimum retention period of two years is recommended.&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation:&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;The specific steps for configuring resources within the Azure console vary depending on resource, but typically the steps are:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Go to the resource&lt;/li&gt;&lt;li&gt;Click on Diagnostic settings&lt;/li&gt;&lt;li&gt;In the blade that appears, click "Add diagnostic setting"&lt;/li&gt;&lt;li&gt;Configure the diagnostic settings&lt;/li&gt;&lt;li&gt;Click on Save&lt;/li&gt;&lt;/ol&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Enable diagnostics logging for web apps in Azure App Service" url="https://docs.microsoft.com/en-us/azure/app-service-web/web-sites-enable-diagnostic-log"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5.3" supportedStandardRef="cis-azure-standard"/>
            <standard ref="5.3" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="LT-4" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="LT-5" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Go to the resource&lt;/li&gt;&lt;li&gt;Click on Diagnostic settings&lt;/li&gt;&lt;li&gt;In the blade that appears, click "Add diagnostic setting"&lt;/li&gt;&lt;li&gt;Configure the diagnostic settings&lt;/li&gt;&lt;li&gt;Click on Save&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:31.097">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-KEY-VAULT9" name="Enable Key Vault Firewall" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Enable Key Vault Firewall&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; You can configure Key Vault firewalls and virtual networks to deny access to traffic from all networks (including Internet traffic) by default. You can grant access to traffic from specific Azure virtual networks and public Internet IP address ranges, allowing you to build a secure network boundary for your applications.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Here's how to configure Key Vault firewalls and virtual networks by using the Azure portal:&lt;/p&gt; 
&lt;p&gt;1. Browse to the key vault you want to secure.&lt;br&gt; 2. Select Networking, and then select the Firewalls and virtual networks tab.&lt;br&gt; 3. Under Allow access from, select Selected networks.&lt;br&gt; 4. To add existing virtual networks to firewalls and virtual network rules, select + Add existing virtual networks.&lt;br&gt; 5. In the new blade that opens, select the subscription, virtual networks, and subnets that you want to allow access to this key vault. If the virtual networks and subnets you select do not have service endpoints enabled, confirm that you want to enable service endpoints, and select Enable. It might take up to 15 minutes to take effect.&lt;br&gt; 6. Under IP Networks, add IPv4 address ranges by typing IPv4 address ranges in CIDR (Classless Inter-domain Routing) notation or individual IP addresses.&lt;br&gt; 7. If you want to allow Microsoft Trusted Services to bypass the Key Vault Firewall, select 'Yes'. For a full list of the current Key Vault Trusted Services please see the following link. Azure Key Vault Trusted Services&lt;br&gt; 8. Select Save.&lt;/p&gt; 
&lt;p&gt;You can also add new virtual networks and subnets, and then enable service endpoints for the newly created virtual networks and subnets, by selecting + Add new virtual network. Then follow the prompts.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Configure Azure Key Vault firewalls and virtual networks" url="https://docs.microsoft.com/en-us/azure/key-vault/general/network-security"/>
            <reference name="Virtual network service endpoints for Azure Key Vault" url="https://docs.microsoft.com/en-us/azure/key-vault/general/overview-vnet-service-endpoints"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that Key Vault Firewall is enabled.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:31.097">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-KEY-VAULT6" name="Enable Key Vault logging" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Enable Key Vault logging&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; After you create one or more key vaults, you will likely want to monitor how and when your key vaults are accessed, and by whom. You can do this by enabling logging for Azure Key Vault, which saves information in an Azure storage account that you provide.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Enable logging using Azure PowerShell&lt;/p&gt; 
&lt;p&gt;To enable logging for Key Vault, we'll use the Azure CLI az monitor diagnostic-settings create command, or the Set-AzDiagnosticSetting cmdlet, together with the storage account ID and the key vault Resource ID.&lt;/p&gt; 
&lt;p&gt;az monitor diagnostic-settings create -storage-account "" -resource "" -name "Key vault logs" -logs '[{"category": "AuditEvent","enabled": true}]' -metrics '[{"category": "AllMetrics","enabled": true}]'&lt;/p&gt; 
&lt;p&gt;With Azure PowerShell, we'll use the Set-AzDiagnosticSetting cmdlet, with the -Enabled flag set to $true and the category set to AuditEvent (the only category for Key Vault logging):&lt;/p&gt; 
&lt;p&gt;Set-AzDiagnosticSetting -ResourceId "" -StorageAccountId $sa.id -Enabled $true -Category "AuditEvent"&lt;/p&gt; 
&lt;p&gt;Optionally, you can set a retention policy for your logs, so that older logs are automatically deleted after a specified amount of time. For example, you could set set retention policy that automatically deletes logs older than 90 days.&lt;/p&gt; 
&lt;p&gt;With Azure PowerShell, use the Set-AzDiagnosticSetting cmdlet.&lt;/p&gt; 
&lt;p&gt;Set-AzDiagnosticSetting "" -StorageAccountId $sa.id -Enabled $true -Category AuditEvent -RetentionEnabled $true -RetentionInDays 90&lt;/p&gt; 
&lt;p&gt;What is logged:&lt;/p&gt; 
&lt;p&gt;- All authenticated REST API requests, including failed requests as a result of access permissions, system errors, or bad requests.&lt;br&gt; - Operations on the key vault itself, including creation, deletion, setting key vault access policies, and updating key vault attributes such as tags.&lt;br&gt; - Operations on keys and secrets in the key vault, including: - Creating, modifying, or deleting these keys or secrets. - Signing, verifying, encrypting, decrypting, wrapping and unwrapping keys, getting secrets, and listing keys and secrets (and their versions).&lt;br&gt; - Unauthenticated requests that result in a 401 response. Examples are requests that do not have a bearer token, that are malformed or expired, or that have an invalid token.&lt;br&gt; - Event Grid notification events for near expiry, expired and vault access policy changed (new version event is not logged). Events are logged regardless if there is event subscription created on key vault. For more information see, Event Grid event schema for Key Vault&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="How to enable Key Vault logging" url="https://docs.microsoft.com/en-us/azure/key-vault/general/howto-logging"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5.1.5" supportedStandardRef="cis-azure-standard"/>
            <standard ref="5.1.5" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="LT-4" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Access your logs&lt;/p&gt;

  &lt;p&gt;Key Vault logs are stored in the "insights-logs-auditevent" container in the storage account that you provided. To view the logs, you have to download blobs.&lt;/p&gt;

  &lt;p&gt;First, list all the blobs in the container. With the Azure CLI, use the az storage blob list command.&lt;/p&gt;

  &lt;p&gt;az storage blob list -account-name "&lt;your-unique-storage-account-name&gt;" -container-name "insights-logs-auditevent"&lt;/p&gt;

  &lt;p&gt;With Azure PowerShell, use the Get-AzStorageBlob list all the blobs in this container, enter:&lt;/p&gt;

  &lt;p&gt;Get-AzStorageBlob -Container $container -Context $sa.Context&lt;/p&gt;

  &lt;p&gt;As you will see from the output of either the Azure CLI command or the Azure PowerShell cmdlet, the name of the blobs are in the format resourceId=&lt;ARM resource ID&gt;/y=&lt;year&gt;/m=&lt;month&gt;/d=&lt;day of month&gt;/h=&lt;hour&gt;/m=&lt;minute&gt;/filename.json. The date and time values use UTC.&lt;/p&gt;

  &lt;p&gt;Because you can use the same storage account to collect logs for multiple resources, the full resource ID in the blob name is useful to access or download just the blobs that you need. But before we do that, we'll first cover how to download all the blobs.&lt;/p&gt;

  &lt;p&gt;With the Azure CLI, use the az storage blob download command, pass it the names of the blobs, and the path to the file where you wish to save the results.&lt;/p&gt;

  &lt;p&gt;az storage blob download -container-name "insights-logs-auditevent" -file &lt;path-to-file&gt; -name "&lt;blob-name&gt;" -account-name "&lt;your-unique-storage-account-name&gt;"&lt;/p&gt;

  &lt;p&gt;With Azure PowerShell, use the Gt-AzStorageBlobs cmdlet to get a list of the blobs, then pipe that to the Get-AzStorageBlobContent cmdlet to download the logs to your chosen path.&lt;/p&gt;

  &lt;p&gt;$blobs = Get-AzStorageBlob -Container $container -Context $sa.Context | Get-AzStorageBlobContent -Destination "&lt;path-to-file&gt;"&lt;/p&gt;

  &lt;p&gt;When you run this second cmdlet in PowerShell, the / delimiter in the blob names creates a full folder structure under the destination folder. You'll use this structure to download and store the blobs as files.&lt;/p&gt;

  &lt;p&gt;To selectively download blobs, use wildcards. For example:&lt;/p&gt;

 - If you have multiple key vaults and want to download logs for just one key vault, named CONTOSOKEYVAULT3:

  &lt;p&gt;Get-AzStorageBlob -Container $container -Context $sa.Context -Blob '*/VAULTS/CONTOSOKEYVAULT3&lt;/p&gt;

  &lt;p&gt;- If you have multiple resource groups and want to download logs for just one resource group, use -Blob '&lt;strong&gt;/RESOURCEGROUPS/&lt;resource group name&gt;/&lt;/strong&gt;':&lt;/p&gt;

  &lt;p&gt;Get-AzStorageBlob -Container $container -Context $sa.Context -Blob '&lt;strong&gt;/RESOURCEGROUPS/CONTOSORESOURCEGROUP3/&lt;/strong&gt;'&lt;/p&gt;

  &lt;p&gt;- If you want to download all the logs for the month of January 2019, use -Blob '&lt;strong&gt;/year=2019/m=01/&lt;/strong&gt;':&lt;/p&gt;

  &lt;p&gt;Get-AzStorageBlob -Container $container -Context $sa.Context -Blob '&lt;strong&gt;/year=2016/m=01/&lt;/strong&gt;'&lt;/p&gt;

  &lt;p&gt;You're now ready to start looking at what's in the logs.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:31.097">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-A04" name="Enable MFA for Administrator &amp; Co Administrator accounts" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Enable multi-factor authentication (MFA) device enhances the security of the login process for the Administrator accounts. With MFA, users have a device that generates a unique authentication code (a one-time password, or OTP) and users must provide both their normal credentials (like their username and password) and the OTP. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The MFA device can either be a special piece of hardware, or it can be a virtual device. The recommendation for the Service Administrator &amp;amp; Co Administrator accounts is to use MFA to increase the level of security of the login process. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt; 
  &lt;li&gt;Select Azure Active Directory.&lt;/li&gt; 
  &lt;li&gt;Go into "Users and groups" &amp;gt; "All users".&lt;/li&gt; 
  &lt;li&gt;Select "Multi-Factor Authentication".&lt;/li&gt; 
  &lt;li&gt;Choose all the Service Administrator &amp;amp; Co Administrator accounts and enable MFA.&amp;nbsp;&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - How to require two-step verification for a user or group" url="https://docs.microsoft.com/en-us/azure/multi-factor-authentication/multi-factor-authentication-get-started-user-states"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;Multi-Factor Authentication&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check all Administrator accounts have got the MFA flag enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:31.097">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-USER-MFA" name="Enable per-user MFA" issueId="" issueLink="" platform="" cost="0" risk="40" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Enable per-user MFA 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  Multi-factor authentication (MFA) is a process where a user is prompted during a sign-in event for additional forms of identification. This prompt could be to enter a code on their cellphone or to provide a fingerprint scan. When you require a second form of authentication, security is increased as this additional factor isn't something that's easy for an attacker to obtain or duplicate. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  To secure user sign-in events in Azure AD, you can require multi-factor authentication (MFA). Enabling Azure AD Multi-Factor Authentication using Conditional Access policies is the recommended approach to protect users. Conditional Access is an Azure AD Premium P1 or P2 feature that lets you apply rules to require MFA as needed in certain scenarios 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  For Azure AD free tenants without Conditional Access, you can use security defaults to protect users. Users are prompted for MFA as needed, but you can't define your own rules to control the behavior. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Features and licenses for Azure AD Multi-Factor Authentication" url="https://docs.microsoft.com/en-us/azure/active-directory/authentication/concept-mfa-licensing"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  1. Log into the Azure portal as an owner. 
&lt;/div&gt; 
&lt;div&gt;
  2. Select Azure Active Directory. 
&lt;/div&gt; 
&lt;div&gt;
  3. Go into "Users and groups" &amp;gt; "All users". 
&lt;/div&gt; 
&lt;div&gt;
  4. Select "Multi-Factor Authentication". 
&lt;/div&gt; 
&lt;div&gt;
  5. Ensure your users have the MFA flag enabled. 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:31.097">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-AD10" name="Enable Privileged Identity Management for tracking admin role use" issueId="" issueLink="" platform="" cost="1" risk="45" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Enable Privileged Identity Management for tracking admin role use&lt;/p&gt;

  &lt;p&gt;Rationale:&lt;br /&gt;
Use Privileged Identity Management (PIM) to manage, control, and monitor access within your Azure Active Directory (Azure AD) organization. With PIM you can provide as-needed and just-in-time access to Azure resources, Azure AD resources, and other Microsoft online services like Microsoft 365 or Microsoft Intune.&lt;/p&gt;

  &lt;p&gt;Remediation:&lt;br /&gt;
Licensing requirements&lt;/p&gt;

  &lt;p&gt;To use Privileged Identity Management, your directory must have one of the following paid or trial licenses.&lt;/p&gt;

  &lt;p&gt;- Azure AD Premium P2&lt;br /&gt;
- Enterprise Mobility + Security (EMS) E5&lt;/p&gt;

  &lt;p&gt;When a user who is active in a privileged role in an Azure AD organization with a Premium P2 license goes to Roles and administrators in Azure AD and selects a role (or even just visits Privileged Identity Management):&lt;/p&gt;

  &lt;p&gt;- Azure automatically enables PIM for the organization&lt;br /&gt;
- Their experience is now that they can either assign a "regular" role assignment or an eligible role assignment&lt;br /&gt;
When PIM is enabled it doesn't have any other effect on your organization that you need to worry about. It gives you additional assignment options such as active vs eligible with start and end time. PIM also enables you to define scope for role assignments using Administrative Units and custom roles. If you are a Global Administrator or Privileged Role Administrator, you might start getting a few additional emails like the PIM weekly digest. You might also see MS-PIM service principal in the audit log related to role assignment. This is an expected change that should have no effect on your workflow.&lt;/p&gt;

  &lt;p&gt;For more PIM configurations please see Reference URL.&lt;/p&gt;

  &lt;p&gt;Impact:&lt;br /&gt;
None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Start using Privileged Identity Management" url="https://docs.microsoft.com/en-us/azure/active-directory/privileged-identity-management/pim-getting-started"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that Privileged Identity Management is enabled.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:31.097">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-KEY-VAULT3" name="Enable soft-delete on Azure Key Vault" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Enable soft-delete on Azure Key Vault&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Key Vault's soft-delete feature allows recovery of the deleted vaults and deleted key vault objects (for example, keys, secrets, certificates), known as soft-delete. Specifically, we address the following scenarios: This safeguard offer the following protections:&lt;/p&gt; 
&lt;p&gt;- Once a secret, key, certificate, or key vault is deleted, it will remain recoverable for a configurable period of 7 to 90 calendar days. If no configuration is specified the default recovery period will be set to 90 days. This provides users with sufficient time to notice an accidental secret deletion and respond.&lt;br&gt; - Two operations must be made to permanently delete a secret. First a user must delete the object, which puts it into the soft-deleted state. Second, a user must purge the object in the soft-deleted state. The purge operation requires additional access policy permissions. These additional protections reduce the risk of a user accidentally or maliciously deleting a secret or a key vault.&lt;br&gt; - To purge a secret in the soft-deleted state, a service principal must be granted an additional "purge" access policy permission. The purge access policy permission is not granted by default to any service principal including key vault and subscription owners and must be deliberately set. By requiring an elevated access policy permission to purge a soft-deleted secret, it reduces the probability of accidentally deleting a secret.&lt;/p&gt; 
&lt;p&gt;IMPORTANT: You must enable soft-delete on your key vaults immediately. The ability to opt out of soft-delete will be deprecated soon.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Turn on Soft Delete for an existing key vault&lt;/p&gt; 
&lt;p&gt;1. Log in to the Azure portal.&lt;br&gt; 2. Search for your Key Vault.&lt;br&gt; 3. Select "Properties" under settings.&lt;br&gt; 4. Under Soft-Delete, select the radio button corresponding to "Enable recovery of this vault and its objects".&lt;br&gt; 5. Set the retention period for soft-delete.&lt;br&gt; 6. Select "Save".&lt;/p&gt; 
&lt;p&gt;Grant purge access policy permissions to a security principal&lt;/p&gt; 
&lt;p&gt;1. Log in to the Azure portal.&lt;br&gt; 2. Search for your Key Vault.&lt;br&gt; 3. Select "Access Policies" under settings.&lt;br&gt; 4. Select the service principal you would like to grant access to.&lt;br&gt; 5. For each drop-down under key, secret, and certificate permissions scroll down to "Privileged Operations" and select the "Purge" permission.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; Can my application work with soft delete enabled?&lt;/p&gt; 
&lt;p&gt;Important: Please review the following information carefully before turning on soft delete for your key vaults&lt;/p&gt; 
&lt;p&gt;Key Vault names are globally unique. The names of secrets stored in a key vault are also unique. You will not be able to reuse the name of a key vault or key vault object that exists in the soft deleted state.&lt;/p&gt; 
&lt;p&gt;Example #1: If your application programmatically creates a key vault named 'Vault A' and later deletes 'Vault A'. The key vault will be moved to the soft deleted state. Your application will not be able to recreate another key vault named 'Vault A' until the key vault is purged from the soft deleted state.&lt;/p&gt; 
&lt;p&gt;Example #2: If your application creates a key named test key in key vault A, and later deletes the key from vault A, your application will not be able to create a new key named test key in key vault A until the test key object is purged from the soft deleted state.&lt;/p&gt; 
&lt;p&gt;This may result in conflict errors if you attempt to delete a key vault object and recreate it with the same name without purging it from the soft-deleted state first. This may cause your applications or automation to fail. Consult your Dev team prior to making the required application and administration changes below.&lt;/p&gt; 
&lt;p&gt;Application changes&lt;br&gt; If your application assumes that soft-delete is not enabled and expects that deleted secret or key vault names are available for immediate reuse, your application logic will need to make the following changes in order to adopt this change.&lt;/p&gt; 
&lt;p&gt;1. Delete the original key vault or secret&lt;br&gt; 2. Purge the key vault or secret in the soft-deleted state.&lt;br&gt; 3. Wait - immediate recreate may result in a conflict.&lt;br&gt; 4. Re-create the key vault with the same name.&lt;br&gt; 5. Implement re-try if the create operation still results in a name conflict error, it may take up to 10 minutes for DNS records to update in the worst-case scenario.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Azure Key Vault soft-delete overview" url="https://docs.microsoft.com/en-us/azure/key-vault/general/soft-delete-overview"/>
            <reference name="Soft-delete will be enabled on all key vaults" url="https://docs.microsoft.com/en-us/azure/key-vault/general/soft-delete-change"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Audit your key vaults to check if soft-delete is enabled&lt;/p&gt;

  &lt;p&gt;1. Log in to the Azure portal.&lt;br /&gt;
2. Search for "Azure Policy".&lt;br /&gt;
3. Select "Definitions".&lt;br /&gt;
4. Under Category, select "Key Vault" in the filter.&lt;br /&gt;
5. Select the "Key Vault should have soft delete enabled" policy.&lt;br /&gt;
6. Click "Assign".&lt;br /&gt;
7. Set the scope to your subscription.&lt;br /&gt;
8. Make sure the effect of the policy is set to "Audit".&lt;br /&gt;
9. Select "Review + Create".&lt;br /&gt;
10. It can take up to 24 hours for a full scan of your environment to complete.&lt;br /&gt;
11. In the Azure Policy Blade, click "Compliance".&lt;br /&gt;
12. Select the policy you applied.&lt;/p&gt;

  &lt;p&gt;You should now be able to filter and see which of your key vaults have soft-delete enabled (compliant resources) and which key vaults do not have soft-delete enabled (non-compliant resources).&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:31.097">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-L05" name="Export the Audit Logs to a storage account" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Export the information of Audit Logs to a storage account. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Go to "Monitor" and then to "Activity Logs".&lt;/li&gt; 
  &lt;li&gt;Push the button "Export".&lt;/li&gt; 
  &lt;li&gt;Select "All Regions".&lt;/li&gt; 
  &lt;li&gt;Select "Export to a storage account" and select your account.&lt;/li&gt; 
  &lt;li&gt;Select the "Retention (days)" as minimum 90 days.&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Enable diagnostics logging for web apps in Azure App Service" url="https://docs.microsoft.com/en-us/azure/app-service-web/web-sites-enable-diagnostic-log"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Activity Logs&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Push the button &amp;quot;Export&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;All Regions&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;Export to a storage account&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that all fields are correctly filled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:31.098">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-CRED-SCAN" name="Implement Credential Scanner to identify credentials within code" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Implement Credential Scanner to identify credentials within code&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Credential Scanner (aka CredScan) is a tool developed and maintained by Microsoft to identify credential leaks such as those in source code and configuration files. Some of the commonly found types of credentials are default passwords, SQL connection strings and Certificates with private keys.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Prerequisites:&lt;br&gt; 1. You are using the Azure DevOps Build system.&lt;br&gt; 2. The Microsoft Security Code Analysis Extension installed in your account.&lt;br&gt; Setup:&lt;br&gt; 1. Open your team project from your Azure DevOps Account.&lt;br&gt; 2. Navigate to the Build tab under Build and Release&lt;br&gt; 3. Select the Build Definition into which you wish to add the CredScan build task.&lt;br&gt; - New - Click New and follow the steps detailed to create a new Build Definition.&lt;br&gt; - Edit - Select the Build Definition. On the subsequent page, click Edit to begin editing the Build Definition.&lt;br&gt; 4. Click + to navigate to the Add Tasks pane.&lt;br&gt; 5. Find the CredScan build task either from the list or using the search box and then click Add.&lt;br&gt; 6. The Run CredScan build task should now be a part of the Build Definition.&lt;/p&gt; 
&lt;p&gt;Customizing the CredScan Build Task:&lt;br&gt; 1. Click the task Run CredScan to see the different options available within.&lt;br&gt; 2. Available options include&lt;br&gt; Output Format - TSV/ CSV/ SARIF/ PREfast&lt;br&gt; Tool Version (Recommended: Latest)&lt;br&gt; Scan Folder - The folder in your repository to scan&lt;br&gt; Searchers File Type - Options to locate the searchers file used for scanning.&lt;br&gt; Suppressions File - A JSON file can be used for suppressing issues in the output log (more details in the Resources section).&lt;br&gt; (New) Verbose Output - self explanatory&lt;br&gt; Batch Size - The number of concurrent threads used to run Credential Scanners in parallel. Defaults to 20 (Value must be in the range of 1 to 2147483647).&lt;br&gt; (New) Match Timeout - The amount of time to spend attempting a searcher match before abandoning the check.&lt;br&gt; (New) File Scan Read Buffer Size - Buffer size while reading content in bytes. (Defaults to 524288)&lt;br&gt; (New) Maximum File Scan Read Bytes - Maximum number of bytes to read from a given file during content analysis. (Defaults to 104857600)&lt;br&gt; Run this task (under Control Options) - Specifies when the task should run. Choose "Custom conditions" to specify more complex conditions.&lt;/p&gt; 
&lt;p&gt;*Version - Build task version within Azure DevOps. Not frequently used.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Getting started with Credential Scanner (CredScan)" url="https://secdevtools.azurewebsites.net/helpcredscan.html"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that Credential Scanner is implemented&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:31.098">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-SUBSCRIPTIONS" name="Implement isolation using separate subscriptions" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Implement isolation using separate subscriptions&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; You can create an additional subscription for your Enterprise Agreement (EA), Microsoft Customer Agreement or Microsoft Partner Agreement billing account in the Azure portal. You may want an additional subscription to avoid hitting subscription limits, to create separate environments for security, or to isolate data for compliance reasons.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Create a subscription in the Azure portal&lt;/p&gt; 
&lt;p&gt;1. Sign in to the Azure portal.&lt;/p&gt; 
&lt;p&gt;2. Search for Subscriptions.&lt;/p&gt; 
&lt;p&gt;3. Select Add.&lt;/p&gt; 
&lt;p&gt;4. If you have access to multiple billing accounts, select the billing account for which you want to create the subscription.&lt;/p&gt; 
&lt;p&gt;5. Fill the form and click Create.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Create an additional Azure subscription" url="https://docs.microsoft.com/en-us/azure/cost-management-billing/manage/create-subscription"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that you have implemented isolation through separate subscriptions.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:31.098">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-N09" name="Isolate Azure instances into different VNets" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Specify a VNet for the Azure instance as a launch parameter. Applications that run on the Cloud instance can use the VNet security configuration when they access Azure resources.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  You can configure an Azure cloud service from Solution Explorer in Visual Studio. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Create a virtual network with multiple subnets" url="https://docs.microsoft.com/en-us/azure/virtual-network/virtual-networks-create-vnet-arm-pportal"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that the Azure instances are into different VNets.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:31.098">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-KEY-VAULT2" name="Maintain an inventory of administrative accounts for Azure Key Vault" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Maintain an inventory of administrative accounts for Azure Key Vault&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Maintain an inventory of your Azure Active Directory-registered applications, as well as any user accounts that have access to your Azure Key Vault keys, secrets, and certificates. You may use either the Azure portal or PowerShell to query and reconcile Key Vault access.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Registering an application with Azure Active Directory&lt;/p&gt; 
&lt;p&gt;This step would usually be done by a developer, on a separate computer. It is not specific to Azure Key Vault but is included here, for awareness. To complete the app registration, your account, the vault, and the application need to be in the same Azure directory.&lt;/p&gt; 
&lt;p&gt;Applications that use a key vault must authenticate by using a token from Azure Active Directory. The owner of the application must register it in Azure Active Directory first. At the end of registration, the application owner gets the following values:&lt;/p&gt; 
&lt;p&gt;- An Application ID (also known as the AAD Client ID or appID)&lt;br&gt; - An authentication key (also known as the shared secret).&lt;/p&gt; 
&lt;p&gt;The application must present both these values to Azure Active Directory, to get a token. How an application is configured to get a token will depend on the application. For the Key Vault sample application, the application owner sets these values in the app.config file.&lt;/p&gt; 
&lt;p&gt;To register an application in Azure Active Directory:&lt;/p&gt; 
&lt;p&gt;Azure CLI&lt;br&gt; az ad sp create-for-rbac -n "MyApp" -password "hVFkk965BuUv" -skip-assignment &lt;/p&gt;
&lt;ol&gt; 
 &lt;li&gt;If you do not specify a password, one will be created for you.&lt;/li&gt; 
&lt;/ol&gt;
&lt;p&gt;&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Manage Key Vault using the Azure CLI" url="https://docs.microsoft.com/en-us/azure/key-vault/general/manage-with-cli2"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that you maintain an inventory of administrative accounts for Azure Key Vault.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:31.098">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-APPROVED-LOCATIONS" name="Manage Azure resources from only approved locations" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Manage Azure resources from only approved locations 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  Use Conditional Access Named Locations to allow access from only specific logical groupings of IP address ranges or countries/regions. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  Prerequisites 
&lt;/div&gt; 
&lt;div&gt;
  You need: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - An Azure AD tenant. Sign up for a free trial. 
&lt;/div&gt; 
&lt;div&gt;
  - A user, who is a global administrator for the tenant. 
&lt;/div&gt; 
&lt;div&gt;
  - An IP range that is established and credible in your organization. The IP range needs to be in Classless Interdomain Routing (CIDR) format. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Configure named locations 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  1. Sign in to the Azure portal. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  2. In the left pane, select Azure Active Directory, then select Conditional Access from the Security section. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  3. On the Conditional Access page, select Named locations and select New location. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  4. Fill out the form on the new page. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - In the Name box, type a name for your named location. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - In the IP ranges box, type the IP range in CIDR format. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - Click Create. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Quickstart: Configure named locations in Azure Active Directory" url="https://docs.microsoft.com/en-us/azure/active-directory/reports-monitoring/quickstart-configure-named-locations"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Ensure that you have configured named locations in your Azure environment.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:31.098">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-KEY-VAULT4" name="Perform backups of your Key Vault data" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Perform backups of your Key Vault data&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Perform backups of your Key Vault Certificates, Keys, Managed Storage Accounts, and Secrets.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Ensure regular automated backups of your Key Vault Certificates, Keys, Managed Storage Accounts, and Secrets, with the following PowerShell commands:&lt;/p&gt; 
&lt;p&gt;- Backup-AzKeyVaultCertificate&lt;/p&gt; 
&lt;p&gt;- Backup-AzKeyVaultKey&lt;/p&gt; 
&lt;p&gt;- Backup-AzKeyVaultManagedStorageAccount&lt;/p&gt; 
&lt;p&gt;- Backup-AzKeyVaultSecret&lt;/p&gt; 
&lt;p&gt;Optionally, you may store your Key Vault backups within Azure Backup.&lt;/p&gt; 
&lt;p&gt;Periodically perform data restoration of your Key Vault Certificates, Keys, Managed Storage Accounts, and Secrets, with the following PowerShell commands:&lt;/p&gt; 
&lt;p&gt;- Restore-AzKeyVaultCertificate&lt;/p&gt; 
&lt;p&gt;- Restore-AzKeyVaultKey&lt;/p&gt; 
&lt;p&gt;- Restore-AzKeyVaultManagedStorageAccount&lt;/p&gt; 
&lt;p&gt;- Restore-AzKeyVaultSecret&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Add-AzKeyVaultManagedStorageAccount" url="https://docs.microsoft.com/en-us/powershell/module/az.keyvault/add-azkeyvaultmanagedstorageaccount?view=azps-5.4.0"/>
            <reference name="Backup-AzureKeyVaultCertificate" url="https://docs.microsoft.com/en-us/powershell/module/azurerm.keyvault/backup-azurekeyvaultcertificate?view=azurermps-6.13.0"/>
            <reference name="Backup-AzureKeyVaultKey" url="https://docs.microsoft.com/en-us/powershell/module/azurerm.keyvault/backup-azurekeyvaultkey?view=azurermps-6.13.0"/>
            <reference name="Backup-AzureKeyVaultSecret" url="https://docs.microsoft.com/en-us/powershell/module/azurerm.keyvault/backup-azurekeyvaultsecret?view=azurermps-6.13.0"/>
            <reference name="What is the Azure Backup service?" url="https://docs.microsoft.com/en-us/azure/backup/backup-overview"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure regular automated backups of your Key Vault Certificates, Keys, Managed Storage Accounts, and Secrets are performed.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:31.098">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-FILE-SCAN" name="Pre-scan files to be uploaded to Azure resources" issueId="" issueLink="" platform="" cost="0" risk="66" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Pre-scan files to be uploaded to Azure resources&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Microsoft Anti-malware is enabled on the underlying host that supports Azure services (for example, Azure Backup), however it does not run on your content.&lt;br&gt; Pre-scan any files being uploaded to non-compute Azure resources, such as App Service, Data Lake Storage, Blob Storage, etc.&lt;br&gt; Use Azure Security Center's Threat detection for data services to detect malware uploaded to storage accounts.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Virtual machines - enable and configure anti-malware&lt;/p&gt; 
&lt;p&gt;Deployment While creating a VM using the Azure portal&lt;/p&gt; 
&lt;p&gt;To enable and configure Microsoft Anti-malware for Azure Virtual Machines using the Azure portal while provisioning a Virtual Machine, follow the steps below:&lt;/p&gt; 
&lt;p&gt;1. Sign in to the Azure portal at https://portal.azure.com.&lt;br&gt; 2. To create a new virtual machine, navigate to Virtual machines, select Add, and choose Windows Server.&lt;br&gt; 3. Select the version of Windows server that you would like to use.&lt;br&gt; 4. Select Create.&lt;br&gt; 5. Provide a Name, Username, Password, and create a new resource group or choose an existing resource group.&lt;br&gt; 6. Select Ok.&lt;br&gt; 7. Choose a vm size.&lt;br&gt; 8. In the next section, make the appropriate choices for your needs select the Extensions section.&lt;br&gt; 9. Select Add extension&lt;br&gt; 10. Under New resource, choose Microsoft Anti-malware.&lt;br&gt; 11. Select Create&lt;br&gt; 12. In the Install extension section file, locations, and process exclusions can be configured as well as other scan options. Choose Ok.&lt;br&gt; 13. Choose Ok.&lt;br&gt; 14. Back in the Settings section, choose Ok.&lt;br&gt; 15. In the Create screen, choose Ok.&lt;/p&gt; 
&lt;p&gt;Deployment using the Visual Studio virtual machine configuration&lt;/p&gt; 
&lt;p&gt;To enable and configure the Microsoft Anti-malware service using Visual Studio:&lt;/p&gt; 
&lt;p&gt;1. Connect to Microsoft Azure in Visual Studio.&lt;/p&gt; 
&lt;p&gt;2. Choose your Virtual Machine in the Virtual Machines node in Server Explorer&lt;/p&gt; 
&lt;p&gt;3. Right-click configure to view the Virtual Machine configuration page&lt;/p&gt; 
&lt;p&gt;4. Select Microsoft Anti-malware extension from the drop-down list under Installed Extensions and click Add to configure with default anti-malware configuration. &lt;/p&gt; 
&lt;p&gt;5. To customize the default Anti-malware configuration, select (highlight) the Anti-malware extension in the installed extensions list and click Configure.&lt;/p&gt; 
&lt;p&gt;6. Replace the default Anti-malware configuration with your custom configuration in supported JSON format in the public configuration text-box and click OK.&lt;/p&gt; 
&lt;p&gt;7. Click the Update button to push the configuration updates to your Virtual Machine.&lt;/p&gt; 
&lt;p&gt;Enable Azure Defender&lt;/p&gt; 
&lt;p&gt;You can protect an entire Azure subscription with Azure Defender and the protections will be inherited by all resources within the subscription.&lt;/p&gt; 
&lt;p&gt;To enable Azure Defender:&lt;/p&gt; 
&lt;p&gt;1. From Security Center's main menu, select Pricing &amp;amp; settings.&lt;br&gt; 2. Select the subscription that you want to upgrade.&lt;br&gt; 3. Select Azure Defender on to upgrade.&lt;br&gt; 4. Select Save.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Microsoft Anti-malware for Azure Cloud Services and Virtual Machines" url="https://docs.microsoft.com/en-us/azure/security/fundamentals/antimalware"/>
            <reference name="Pricing of Azure Security Center" url="https://docs.microsoft.com/en-us/azure/security-center/security-center-pricing"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="12" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="14" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="16" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="18" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="19" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="24" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="6" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="8" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API8:2019-Injection" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that files are pre-scanned to be uploaded to Azure resources.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:31.098">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-A07" name="Recertify user access" issueId="" issueLink="" platform="" cost="0" risk="40" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Do regular reviews of accounts on the system and verify that it doesn't exist stoled or fake
                        accounts. With this process is ensured that there are not compromised accounts by former
                        employees or by attackers.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        At least every 90 days complete the following:&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Log in to the Azure portal as an owner.&lt;/li&gt;
                        &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                        &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;For any user that should not exist:&lt;/li&gt;
                        &lt;li&gt;Select the user.&lt;/li&gt;
                        &lt;li&gt;Click &amp;quot;Delete&amp;quot;.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Assign a user or group to an enterprise app in Azure Active Directory" url="https://docs.microsoft.com/en-us/azure/active-directory/active-directory-coreapps-assign-user-azure-portal"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Log in to the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each user has got an assigned account.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:31.098">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-REPOS-GIT" name="Securely store configuration of Azure resources" issueId="" issueLink="" platform="" cost="0" risk="42" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Securely store configuration of Azure resources&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; If using custom Azure Policy definitions, use Azure DevOps or Azure Repos to securely store and manage your code.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Use version control to save your work and coordinate code changes across your team. Even if you are just a single developer, version control helps you stay organized as you fix bugs and develop new features. Version control keeps a history of your development so that you can review and even rollback to any version of your code with ease.&lt;/p&gt; 
&lt;p&gt;Version control workflow&lt;/p&gt; 
&lt;p&gt;Version control has a general workflow that most developers use when writing code and sharing it with the team.&lt;/p&gt; 
&lt;p&gt;These steps are:&lt;br&gt; 1. Get a local copy of code if they do not have one yet.&lt;br&gt; 2. Make changes to code to fix bugs or add new features.&lt;br&gt; 3. Once the code is ready, make it available for review by your team.&lt;br&gt; 4. Once the code is reviewed, merge it into the team's shared codebase.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Azure Repos Git tutorial" url="https://docs.microsoft.com/en-us/azure/devops/repos/git/gitworkflow?view=azure-devops"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that the configuration of Azure resources is securely stored.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:31.098">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-KEY-VAULT13" name="Set App Service to use a Azure Key Vaults" issueId="" issueLink="" platform="" cost="0" risk="42" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Encryption keys ,Certificate thumbprints and Managed Identity Credentials can be coded into the APP service, this renders them visible as part of the configuration, to maintain security of these keys it is better to store in an Azure Keyvault and reference them from the Keyvault.&lt;/p&gt;&lt;p&gt;Rationale:&lt;/p&gt;&lt;p&gt;App secrets control access to the application and thus need to be secured externally to the app configuration, storing the secrets externally and referencing them in the configuration also enables key rotation without having to redeploy the app service.&lt;/p&gt;&lt;p&gt;Impact:&lt;/p&gt;&lt;p&gt;Impact is primarily during the initial setup of the application or redeploying an old app to include this functionality. This will require configuration effort to setup the keyvault and then to configure the app service to use the keyvault.&lt;/p&gt;&lt;p&gt;Remediation:&lt;/p&gt;&lt;p&gt;Remediation has 2 steps&lt;/p&gt;&lt;p&gt;1. Setup the keyvault&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Using Azure CLI&lt;/strong&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;`az keyvault create --name "myKV" --resource-group "myResourceGroup" --location myLocation Using Azure Powershell `New-AzKeyvault -name MyKV -ResourceGroupName myResourceGroup -Location myLocation&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;2. Setup the app service to use the keyvault&lt;/p&gt;&lt;p&gt;Sample JSON Template for App Service Configuration&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;{ //... "resources": [ { "type": "Microsoft.Storage/storageAccounts", "name": "[variables('storageAccountName')]", //... }, { "type": "Microsoft.Insights/components", "name": "[variables('appInsightsName')]", //... }, { "type": "Microsoft.Web/sites", "name": "[variables('functionAppName')]", "identity": { "type": "SystemAssigned" }, //... "resources": [ { "type": "config", "name": "appsettings", //... "dependsOn": [ "[resourceId('Microsoft.Web/sites', variables('functionAppName'))]", "[resourceId('Microsoft.KeyVault/vaults/', variables('keyVaultName'))]", "[resourceId('Microsoft.KeyVault/vaults/secrets', variables('keyVaultName'), variables('storageConnectionStringName'))]", "[resourceId('Microsoft.KeyVault/vaults/secrets', variables('keyVaultName'), variables('appInsightsKeyName'))]" ], "properties": { "AzureWebJobsStorage": "[concat('@Microsoft.KeyVault(SecretUri=', reference(variables('storageConnectionStringResourceId')).secretUriWithVersion, ')')]", "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING": "[concat('@Microsoft.KeyVault(SecretUri=',reference(variables('storageConnectionStringResourceId')).secretUriWithVersion, ')')]", "APPINSIGHTS_INSTRUMENTATIONKEY": "[concat('@Microsoft.KeyVault(SecretUri=', reference(variables('appInsightsKeyResourceId')).secretUriWithVersion, ')')]", "WEBSITE_ENABLE_SYNC_UPDATE_SITE": "true" //... } }, { "type": "sourcecontrols", "name": "web", //... "dependsOn": [ "[resourceId('Microsoft.Web/sites', variables('functionAppName'))]", "[resourceId('Microsoft.Web/sites/config', variables('functionAppName'), 'appsettings')]" ], } ] }, { "type": "Microsoft.KeyVault/vaults", "name": "[variables('keyVaultName')]", //... "dependsOn": [ "[resourceId('Microsoft.Web/sites', variables('functionAppName'))]" ], "properties": { //... "accessPolicies": [ { "tenantId": "[reference(concat('Microsoft.Web/sites/', variables('functionAppName'), '/providers/Microsoft.ManagedIdentity/Identities/default'), '2015-08-31-PREVIEW').tenantId]", "objectId": "[reference(concat('Microsoft.Web/sites/', variables('functionAppName'), '/providers/Microsoft.ManagedIdentity/Identities/default'), '2015-08-31-PREVIEW').principalId]", "permissions": { "secrets": [ "get" ] } } ] }, "resources": [ { "type": "secrets", "name": "[variables('storageConnectionStringName')]", //... "dependsOn": [ "[resourceId('Microsoft.KeyVault/vaults/', variables('keyVaultName'))]",&lt;/p&gt;&lt;/blockquote&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="9.11" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="IM-2" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;&lt;strong&gt;From Azure Console&lt;/strong&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Login to Azure Portal using https://portal.azure.com&lt;/li&gt;&lt;li&gt;Go to Key Vaults&lt;/li&gt;&lt;li&gt;Ensure that key vault exists and keys are listed&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:31.098">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-V02" name="Set up the security policy" issueId="" issueLink="" platform="" cost="0" risk="42" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Set up the security policies to define the items for which Security Center collects data and makes recommendations. Apply different security policies to different sets of Azure resources. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;On the Security Center dashboard, select Security policy, and then select your subscription.&lt;/li&gt; 
  &lt;li&gt;Select Prevention policy.&lt;/li&gt; 
  &lt;li&gt;Turn on or turn off policy items that you want to apply to all Azure resources.&lt;/li&gt; 
  &lt;li&gt;When you're finished selecting your settings, select OK.&lt;/li&gt; 
  &lt;li&gt;On the Security policy blade, select Save.&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt; 
&lt;div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Set security policies in Azure Security Center" url="https://docs.microsoft.com/en-us/azure/security-center/security-center-policies"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;On the Security Center dashboard, select Security policy, and then select your
                            subscription.&lt;/li&gt;
                            &lt;li&gt;Select Prevention policy.&lt;/li&gt;
                            &lt;li&gt;Check that the required policy items are enabled.&amp;nbsp;&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:31.098">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-SSO" name="Use Azure Active Directory single sign-on (SSO)" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Use Azure Active Directory single sign-on (SSO)&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Single sign-on means a user does not have to sign in to every application they use. The user logs in once and that credential is used for other apps too.&lt;/p&gt; 
&lt;p&gt;Single sign-on provides many benefits over traditional sign-on methods.&lt;/p&gt; 
&lt;p&gt;- With single sign-on, users sign in once with one account to access domain-joined devices, company resources, software as a service (SaaS) applications, and web applications. After signing in, the user can launch applications from the Office 365 portal or My Apps. Administrators can centralize user account management, and automatically add or remove user access to applications based on group membership.&lt;/p&gt; 
&lt;p&gt;- Without single sign-on, users must remember application-specific passwords and sign in to each application. IT staff needs to create and update user accounts for each application such as Microsoft 365, Box, and Salesforce. Users need to remember their passwords, plus spend the time to sign in to each application.&lt;/p&gt; 
&lt;p&gt;Azure Active Directory (Azure AD) has a gallery that contains thousands of pre-integrated applications. Many of the applications your organization uses are probably already in the gallery.&lt;/p&gt; 
&lt;p&gt;After an application is added to your Azure AD tenant, you can:&lt;/p&gt; 
&lt;p&gt;- Configure properties for the app.&lt;br&gt; - Manage user access to the app with a Conditional Access policy.&lt;br&gt; - Configure single sign-on so users can sign in to the app with their Azure AD credentials.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Add an app to your Azure AD tenant&lt;/p&gt; 
&lt;p&gt;To add an application to your Azure AD tenant:&lt;/p&gt; 
&lt;p&gt;1. In the Azure portal, on the left navigation panel, select Azure Active Directory.&lt;/p&gt; 
&lt;p&gt;2. In the Azure Active Directory pane, select Enterprise applications. The All applications pane opens and displays a random sample of the applications in your Azure AD tenant.&lt;/p&gt; 
&lt;p&gt;3. In the Enterprise applications pane, select New application. Select New application to add a gallery app to your tenant&lt;/p&gt; 
&lt;p&gt;4. Switch to the new gallery preview experience: In the banner at the top of the Add an application page, select the link that says Click here to try out the new and improved app gallery.&lt;/p&gt; 
&lt;p&gt;5. The Browse Azure AD Gallery (Preview) pane opens and displays tiles for cloud platforms, on-premises applications, and featured applications. Applications listed in the Featured applications section have icons indicating whether they support federated single sign-on (SSO) and provisioning.&lt;/p&gt; 
&lt;p&gt;6. You can browse the gallery for the application you want to add, or search for the application by entering its name in the search box. Then select the application from the results.&lt;/p&gt; 
&lt;p&gt;7. The next step depends on the way the developer of the application implemented single sign-on (SSO). Single sign-on can be implemented by app developers in four ways. The four ways are SAML, OpenID Connect, Password, and Linked. When you add an app, you can choose to filter and see only apps using a particular SSO implementation as shown in the screenshot. For example, a popular standard to implement SSO is called Security Assertion Markup Language (SAML). Another standard that is popular is called OpenId Connect (OIDC). The way you configure SSO with these standards is different so take note of the type of SSO that is implemented by the app that you are adding.&lt;/p&gt; 
&lt;p&gt;- If the developer of the app used the OIDC standard for SSO then select Sign Up. A setup page appears. Next, go to the quickstart on setting up OIDC-based single sign-on. Screenshot shows adding an OIDC-based SSO app.&lt;/p&gt; 
&lt;p&gt;- If the developer of the app used the SAML standard for SSO then select Create. A getting started page appears with the options for configuring the application for your organization. In the form, you can edit the name of the application to match the needs of your organization. Next, go to the quickstart on setting up SAML-based single sign-on. Screenshot shows adding an SAML-based SSO app.&lt;/p&gt; 
&lt;p&gt;Important: There are some key differences between SAML-based and OIDC-based SSO implementations. With SAML-based apps you can add multiple instances of the same app. For example, GitHub1, GitHub2, etc.. For OIDC-based apps you can only add one instance of an app. If you have already added an OIDC-based app and try to add the same app again and provide consent twice, it will not be added again in the tenant.&lt;/p&gt; 
&lt;p&gt;If the application you are looking for is not in the gallery then you can select the link Create your own application and then under What are you looking to do with your application? choose Integrate any other application you do not find in the gallery. Microsoft has already worked with many application developers to pre-configure them to work with Azure AD. The pre-configured apps show up in the gallery. But if the app you want to add is not listed then you can create a new, generic, app and then configure it yourself or with the guidance of the developer that created it.&lt;/p&gt; 
&lt;p&gt;You have finished adding an application. &lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Quickstart: Add an application to your Azure Active Directory (Azure AD) tenant" url="https://docs.microsoft.com/en-us/azure/active-directory/manage-apps/add-application-portal"/>
            <reference name="What is single sign-on (SSO)?" url="https://docs.microsoft.com/en-us/azure/active-directory/manage-apps/what-is-single-sign-on"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that, wherever possible, you are using Azure Active Directory SSO instead of configuring individual stand-alone credentials per-service.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:31.100">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-RESOURCE-MANAGER" name="Use Azure Resource Manager" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Use Azure Resource Manager&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; The Resource Manager and classic deployment models represent two different ways of deploying and managing your Azure solutions. You work with them through two different API sets, and the deployed resources can contain important differences. The two models are not compatible with each other.&lt;br&gt; With Resource Manager, you can:&lt;br&gt; - Manage your infrastructure through declarative templates rather than scripts.&lt;br&gt; - Deploy, manage, and monitor all the resources for your solution as a group, rather than handling these resources individually.&lt;br&gt; - Redeploy your solution throughout the development life-cycle and have confidence your resources are deployed in a consistent state.&lt;br&gt; - Define the dependencies between resources so they are deployed in the correct order.&lt;br&gt; - Apply access control to all services because Azure role-based access control (Azure RBAC) is natively integrated into the management platform.&lt;br&gt; - Apply tags to resources to logically organize all the resources in your subscription.&lt;br&gt; - Clarify your organization's billing by viewing costs for a group of resources sharing the same tag.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; To simplify the deployment and management of resources, Microsoft recommends that you use Resource Manager for all new resources. If possible, Microsoft recommends that you redeploy existing resources through Resource Manager.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; Resource Manager and classic deployment models are not compatible with each other.&lt;br&gt; There are three scenarios to be aware of:&lt;br&gt; 1. Cloud Services does not support Resource Manager deployment model.&lt;br&gt; 2. Virtual machines, storage accounts, and virtual networks support both Resource Manager and classic deployment models.&lt;br&gt; 3. All other Azure services support Resource Manager.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Azure Resource Manager vs. classic deployment: Understand deployment models and the state of your resources" url="https://docs.microsoft.com/en-us/azure/azure-resource-manager/management/deployment-models"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that you are using Resource Manager for all new resources.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:31.101">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-KEY-VAULT8" name="Use separate Key Vault" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Use separate Key Vault&lt;/p&gt; 
&lt;p&gt;Rationale: &lt;br&gt; Azure recommends as best practice to use a vault per application per environment (Development, Pre-Production and Production). This helps you not share secrets across environments and also reduces the threat in case of a breach.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Use separate key vaults per environment.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Best practices to use Key Vault" url="https://docs.microsoft.com/en-us/azure/key-vault/general/best-practices"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that separate Key Vaults are used per environment.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:31.101">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-TAGS" name="Use service tags in place of specific IP addresses" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Use service tags in place of specific IP addresses&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; A service tag represents a group of IP address prefixes from a given Azure service. Microsoft manages the address prefixes encompassed by the service tag and automatically updates the service tag as addresses change, minimizing the complexity of frequent updates to network security rules.&lt;/p&gt; 
&lt;p&gt;You can use service tags to define network access controls on network security groups or Azure Firewall. Use service tags in place of specific IP addresses when you create security rules. By specifying the service tag name, such as ApiManagement, in the appropriate source or destination field of a rule, you can allow or deny the traffic for the corresponding service.&lt;/p&gt; 
&lt;p&gt;You can use service tags to achieve network isolation and protect your Azure resources from the general Internet while accessing Azure services that have public endpoints. Create inbound/outbound network security group rules to deny traffic to/from Internet and allow traffic to/from AzureCloud or other available service tags of specific Azure services.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; By default, service tags reflect the ranges for the entire cloud. Some service tags also allow more granular control by restricting the corresponding IP ranges to a specified region. For example, the service tag Storage represents Azure Storage for the entire cloud, but Storage.WestUS narrows the range to only the storage IP address ranges from the WestUS region.&lt;/p&gt; 
&lt;p&gt;By specifying the service tag name in the appropriate source or destination field of a rule, you can allow or deny the traffic for the corresponding service.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Virtual network service tags" url="https://docs.microsoft.com/en-us/azure/virtual-network/service-tags-overview"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that your network security rules are simplified by using VNet Service tags.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:31.101">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="AUTHENTICATION" name="Authentication" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="AZURE-LOST-ACCESS-ROOT" name="Attackers gain unauthorized access to the root account due to the lack of configuration of the account" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;div&gt;Attackers could gain unauthorized access to the administrator account due to a lack of configuration of the account and its security mechanisms, making it possible to modify credentials and add/remove user accounts.
                                &lt;/div&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="AZ-W04">
                  <countermeasures>
                    <countermeasure ref="AZ-A04" mitigation="33"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AZURE-MON02">
                  <countermeasures>
                    <countermeasure ref="AZ-A03" mitigation="34"/>
                    <countermeasure ref="AZURE-SUBSCRIPTIONS" mitigation="33"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-A03" mitigation="34"/>
                <countermeasure ref="AZ-A04" mitigation="33"/>
                <countermeasure ref="AZURE-SUBSCRIPTIONS" mitigation="33"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="AZURE-LOST-ACCESS-USER" name="Attackers gain unauthorized access to the user account due to the lack of configuration of the account" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;Attackers could gain unauthorized access to the user account due to the lack of configuration of the account, for example, the security question to reset the password is configured incorrectly.&lt;/p&gt;</desc>
              <riskRating confidentiality="50" integrity="50" availability="50" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-IDENTITY-03">
                  <countermeasures>
                    <countermeasure ref="AZ-A07" mitigation="50"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AZURE-MON03">
                  <countermeasures>
                    <countermeasure ref="AZURE-USER-MFA" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-A07" mitigation="50"/>
                <countermeasure ref="AZURE-USER-MFA" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="AUTHORIZATION" name="Authorization" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="LOSS-CONTROL_ENV" name="Attackers gain unauthorized access to the control of the environment" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;Attackers could potentially gain unauthorized access to the control of the environment, due to user accounts - or role groups - not being well defined and configured. As a consequence attackers may be able to make changes without root approval.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="75" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-ACCESS-01">
                  <countermeasures>
                    <countermeasure ref="AZ-A09" mitigation="15"/>
                    <countermeasure ref="AZ-A10" mitigation="15"/>
                    <countermeasure ref="AZ-A11" mitigation="14"/>
                    <countermeasure ref="AZURE-KEY-VAULT1" mitigation="14"/>
                    <countermeasure ref="AZURE-KEY-VAULT2" mitigation="14"/>
                    <countermeasure ref="AZURE-RESOURCE-MANAGER" mitigation="14"/>
                    <countermeasure ref="AZURE-SSO" mitigation="14"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-A09" mitigation="15"/>
                <countermeasure ref="AZ-A10" mitigation="15"/>
                <countermeasure ref="AZ-A11" mitigation="14"/>
                <countermeasure ref="AZURE-KEY-VAULT1" mitigation="14"/>
                <countermeasure ref="AZURE-KEY-VAULT2" mitigation="14"/>
                <countermeasure ref="AZURE-RESOURCE-MANAGER" mitigation="14"/>
                <countermeasure ref="AZURE-SSO" mitigation="14"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="GENERAL" name="General" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="UNCONFIGURED-SECURITY" name="Attackers gain access to the system by exploiting weak security configurations" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>Weak security configurations like using sharing passwords in plain text, using weak passwords, using obsolete encryption algorithms, etc. can lead attackers to gain access to the system.</desc>
              <riskRating confidentiality="75" integrity="50" availability="25" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-VM01">
                  <countermeasures>
                    <countermeasure ref="AZ-V02" mitigation="20"/>
                    <countermeasure ref="AZURE-REPOS-GIT" mitigation="20"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-320">
                  <countermeasures>
                    <countermeasure ref="AZURE-KEY-VAULT11" mitigation="20"/>
                    <countermeasure ref="AZURE-KEY-VAULT12" mitigation="20"/>
                    <countermeasure ref="AZURE-KEY-VAULT13" mitigation="20"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-V02" mitigation="20"/>
                <countermeasure ref="AZURE-KEY-VAULT11" mitigation="20"/>
                <countermeasure ref="AZURE-KEY-VAULT12" mitigation="20"/>
                <countermeasure ref="AZURE-KEY-VAULT13" mitigation="20"/>
                <countermeasure ref="AZURE-REPOS-GIT" mitigation="20"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="AZURE-DATA-DELETED-EASY" name="Data is intentionally or accidentally deleted" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;Data can be deleted intentionally or accidentally and cannot be recovered. Attackers could rely on the lack of backup and recovery mechanisms.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-MONITOR-BACKUPS">
                  <countermeasures>
                    <countermeasure ref="AZURE-KEY-VAULT3" mitigation="50"/>
                    <countermeasure ref="AZURE-KEY-VAULT4" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZURE-KEY-VAULT3" mitigation="50"/>
                <countermeasure ref="AZURE-KEY-VAULT4" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="ACCESS-TO-DATA" name="Sensitive data is compromised through unauthorized access to data storage" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;A data breach is a security violation in which sensitive, protected or confidential data is copied, transmitted, viewed, stolen or used by an individual unauthorized to do so. Sensitive data could be exposed due to a bad configuration in user permissions.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-UNSECURE-CREDENTIALS">
                  <countermeasures>
                    <countermeasure ref="AZURE-CRED-SCAN" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZURE-CRED-SCAN" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="LOGGING AND MONITORING" name="Logging and Monitoring" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="OWASP A10:2017" name="Exploitation of insufficient logging and monitoring" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>	&lt;p&gt;Exploitation of insufficient logging and monitoring is the bedrock of nearly every major incident.&lt;br /&gt;
 Attackers rely on the lack of monitoring and timely response to achieve their goals without being detected.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="AZ-L01" mitigation="14"/>
                    <countermeasure ref="AZ-L05" mitigation="14"/>
                    <countermeasure ref="AZURE-AD10" mitigation="14"/>
                    <countermeasure ref="AZURE-KEY-VAULT5" mitigation="15"/>
                    <countermeasure ref="AZURE-KEY-VAULT6" mitigation="15"/>
                    <countermeasure ref="AZURE-KEY-VAULT7" mitigation="14"/>
                    <countermeasure ref="AZURE-SENTINEL" mitigation="14"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-L01" mitigation="14"/>
                <countermeasure ref="AZ-L05" mitigation="14"/>
                <countermeasure ref="AZURE-AD10" mitigation="14"/>
                <countermeasure ref="AZURE-KEY-VAULT5" mitigation="15"/>
                <countermeasure ref="AZURE-KEY-VAULT6" mitigation="15"/>
                <countermeasure ref="AZURE-KEY-VAULT7" mitigation="14"/>
                <countermeasure ref="AZURE-SENTINEL" mitigation="14"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="NETWORKING" name="Networking" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="CAPEC-248" name="An attacker injects new items into an existing command to execute a command of their choosing" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;An adversary looking to execute a command of their choosing, injects new items into an existing command thus modifying interpretation away from what was intended. Commands in this context are often standalone strings that are interpreted by a downstream component and cause specific responses. This type of attack is possible when untrusted values are used to build these command strings. Weaknesses in input validation or command construction can enable the attack and lead to successful exploitation.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-77">
                  <countermeasures>
                    <countermeasure ref="AZURE-FILE-SCAN" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZURE-FILE-SCAN" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="AZURE-UNAUTHORISED-CONNECTION" name="Attackers perform unauthorized network access" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;Attackers could perform unauthorized network access to the resources through misconfigured ports or security network configurations.&lt;/p&gt;</desc>
              <riskRating confidentiality="25" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-NET-01">
                  <countermeasures>
                    <countermeasure ref="AZURE-APPROVED-LOCATIONS" mitigation="17"/>
                    <countermeasure ref="AZURE-KEY-VAULT10" mitigation="17"/>
                    <countermeasure ref="AZURE-KEY-VAULT9" mitigation="17"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AZURE-NON-IDENTIFY">
                  <countermeasures>
                    <countermeasure ref="AZURE-TAGS" mitigation="16"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AZURE-VNET01">
                  <countermeasures>
                    <countermeasure ref="AZ-N09" mitigation="16"/>
                    <countermeasure ref="AZURE-KEY-VAULT8" mitigation="17"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-N09" mitigation="16"/>
                <countermeasure ref="AZURE-APPROVED-LOCATIONS" mitigation="17"/>
                <countermeasure ref="AZURE-KEY-VAULT10" mitigation="17"/>
                <countermeasure ref="AZURE-KEY-VAULT8" mitigation="17"/>
                <countermeasure ref="AZURE-KEY-VAULT9" mitigation="17"/>
                <countermeasure ref="AZURE-TAGS" mitigation="16"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="cba84fb4-245b-4d7b-9b11-a89ba9e45c35" diagramComponentId="2770eeee-f4b7-4e9c-bdf9-298df0bf203f" ref="ed7aec4d-3d94-45d3-832a-74cea88d6e7d" name="End user" desc="" library="unece-wp-29-csms-2" parentComponentRef="" componentDefinitionRef="end-user">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="internet"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses>
        <weakness ref="CSMS-4.3.4-15.2" name="Defined security procedures are not followed" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt; &lt;b&gt;Defined security procedures&lt;/b&gt; are not followed&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:27.604">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CSMS-4.3.4-15.1" name="Social engineering" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt; Innocent victim (e.g. owner, operator or maintenance engineer) being &lt;b&gt;tricked into taking an action&lt;/b&gt; to&lt;b&gt; &lt;/b&gt;unintentionally load malware or enable an attack&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:27.603">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="CSMS-M19" name="Define security procedures" issueId="" issueLink="" platform="" cost="0" risk="78" state="Recommended" owner="JamesRabe" library="unece-wp-29-csms" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt; Organizations shall ensure security procedures are defined and followed including logging of actions and access related to the management of the security functions&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="NIST 800-53 PS-1 Personnel Security Policy and Procedures" url="https://nvd.nist.gov/800-53/Rev4/control/PS-1"/>
            <reference name="OWASP Logging Cheat Sheet" url="https://cheatsheetseries.owasp.org/cheatsheets/Logging_Cheat_Sheet.html"/>
          </references>
          <standards>
            <standard ref="10.4.2" supportedStandardRef="iso-sae-21434"/>
            <standard ref="10.4.3" supportedStandardRef="iso-sae-21434"/>
            <standard ref="M19" supportedStandardRef="unece-wp29-csms"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:27.558">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CSMS-M18" name="Define user roles and access privileges" issueId="" issueLink="" platform="" cost="0" risk="78" state="Recommended" owner="JamesRabe" library="unece-wp-29-csms" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt; Measures shall be implemented for defining and controlling user roles and access privileges, based on the principle of least access privilege&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OWASP WSTG: Testing Role Definitions" url="https://owasp.org/www-project-web-security-testing-guide/latest/4-Web_Application_Security_Testing/03-Identity_Management_Testing/01-Test_Role_Definitions"/>
          </references>
          <standards>
            <standard ref="10.4.2" supportedStandardRef="iso-sae-21434"/>
            <standard ref="10.4.3" supportedStandardRef="iso-sae-21434"/>
            <standard ref="M18" supportedStandardRef="unece-wp29-csms"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:27.558">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="general" name="General" desc="" library="unece-wp-29-csms">
          <threats>
            <threat ref="CSMS-4.3.4-15" name="Unintended human actions carried out from outside of vehicles" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="unece-wp-29-csms" editable="true">
              <desc>This threat include: 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Legitimate actors are able to take actions that would unwittingly facilitate a cyber-attack&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt;</desc>
              <riskRating confidentiality="75" integrity="100" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CSMS-4.3.4-15.1">
                  <countermeasures>
                    <countermeasure ref="CSMS-M18" mitigation="50"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CSMS-4.3.4-15.2">
                  <countermeasures>
                    <countermeasure ref="CSMS-M19" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CSMS-M18" mitigation="50"/>
                <countermeasure ref="CSMS-M19" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="7ecbccac-d54d-4793-bf2c-edbceeac88d7" diagramComponentId="32fe5d10-aa88-41a7-9a70-96abfac538c4" ref="10d916a0-ea95-4b78-ac09-72ff2a5f2410" name="Azure Web Apps" desc="" library="Microsoft-Azure" parentComponentRef="87b459b6-d494-41b4-9cf5-c79f7d4d6830" componentDefinitionRef="microsoft-azure-web-apps">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses>
        <weakness ref="CWE-16" name="Configuration" state="0" impact="100" issueId="" issueLink="">
          <desc>Weaknesses in this category are typically introduced during the
                        configuration of the software.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:27.135">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-UNSECURE-CREDENTIALS" name="Credentials are not securely stored" state="0" impact="100" issueId="" issueLink="">
          <desc>The credentials used to access the resources are not securely stored and can be accessed by unauthorized personnel.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:27.135">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="DATA-TRANSMIT-CLEAR" name="Data is transmitted in clear text" state="0" impact="100" issueId="" issueLink="">
          <desc>Data is not protected when transmitted to applications or customers and it can be read or modified by unauthorized actors.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:27.135">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-MON02" name="Excessive use of administrator accounts" state="0" impact="100" issueId="" issueLink="">
          <desc>The administrator accounts are used for all actions, not only for administrative actions. This
                        is because these users have not got a personal or a user account to do the daily actions.&amp;nbsp;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that there is any rule to notify when there is a bad usage of the root
                            account.&lt;/li&gt;
                            &lt;li&gt;Check if these rules are enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:27.135">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CWE-778" name="Insufficient Logging" state="0" impact="100" issueId="" issueLink="">
          <desc>When a critical security event occurs, the software either does not record the event or omits important details about the event when logging it. When critical security events are not logged properly, such as in the case of a failed login attempt, this can make malicious behavior more difficult to detect and may hinder forensic analyses after a successful attack.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:27.135">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-MON03" name="Lack of 2FA" state="0" impact="100" issueId="" issueLink="">
          <desc>Logging into the console without using Multi-factor Authentication (MFA) and without being detected. The connection without MFA must be audited and monitored, the correct security group must be informed and the connection must be validated.&amp;nbsp;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that there is any rule to notify when someone tries to login into the
                            console without MFA.&lt;/li&gt;
                            &lt;li&gt;Check if these rules are enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:27.135">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZ-W04" name="Misconfigured Authentication Method for Administrator Accounts" state="0" impact="100" issueId="" issueLink="">
          <desc>The authentication method &amp;quot;Multi-factor Authentication&amp;quot; for the Administrator accounts is not configured.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;Multi-Factor Authentication&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check all Administrator accounts have got the MFA flag enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:27.135">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-IDENTITY-03" name="Misconfigured User Account" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        Key security settings such as resetting the password and other password controls are not
                        configured.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log in to the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each user has got an assigned account.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;Password reset&amp;quot; &amp;gt; &amp;quot;Authentication Method&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that the security confirmation measures and the security criteria are well
                            filled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:27.135">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-ACCESS-01" name="Misconfigured credentials for groups and roles" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        The credentials for groups and roles are not correctly configured and there are user accounts with more privileges than necessary.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each user has got assigned the correct groups.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All groups&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each group has got assigned the correct roles to achieve principle of
                            least privilege.&lt;/li&gt;
                            &lt;li&gt;Check that the roles for the Cloud Service are well assigned.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;div&gt;
                            &lt;/div&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:27.135">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-EXPIRATION-DATE" name="Misconfigured password expiration" state="0" impact="100" issueId="" issueLink="">
          <desc>The password expiration is not configured and users are not obliged to change their passwords.
                        Not change frequently the passwords gives facilities to attackers to obtain them.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            Check that the password expiration has got the correct values. Therefore, we can obtain the
                            values using the Get-MsolPasswordPolicy cmdlet from the Azure Active Directory Module for
                            Windows PowerShell. With the following command:
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;br /&gt;
                            &lt;/div&gt;
                            &lt;blockquote&gt;
                            &lt;div&gt;
                            PS C:\&amp;gt; Get-MsolPasswordPolicy -DomainName contoso.com
                            &lt;/div&gt;
                            &lt;/blockquote&gt;
                            &lt;div&gt;
                            &lt;br /&gt;
                            &lt;/div&gt;
                            &lt;div&gt;
                            More information: Doc MS Azure
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:27.135">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-VNET01" name="Networks for Azure resources are not properly segmented. Without proper segmentation, when attackers gain access to one resource, any other resources in the same VNet are compromised" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        Resources in the same VNet are compromised because when one of them is attacked and the
                        attackers gain access, they also gain access to all resources.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            Identify the resources and the Microsoft Azure instances.
                            &lt;/div&gt;
                            &lt;div&gt;
                            Check that the resources are in the correct VNet.
                            &lt;/div&gt;
                            &lt;div&gt;
                            Check that the Microsoft Azure instances&amp;nbsp;are into different VNets.
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:27.135">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-NET-01" name="Unauthorized connection attempts on open ports" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        Receiving unauthorized connections to open ports makes systems vulnerable to attacks. To
                        avoid this, access to the network must be as restricted as possible, so that only the necessary
                        ports are open and the minimum inbound traffic is accepted.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Check that each Azure resources have got their Network Security Groups.&lt;/li&gt;
                            &lt;li&gt;Check that a set of these groups achieve with the principle of the least
                            privilege.&lt;/li&gt;
                            &lt;li&gt;Check that the inbound/outbound security rules are enabled and correctly
                            configured.&lt;/li&gt;
                            &lt;li&gt;In &amp;quot;Inbound security rules&amp;quot;, check that all the traffic from
                            0.0.0.0/0&amp;nbsp;is blocked.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:27.134">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="AZ-A09" name="Apply RBAC with pre-defined policies added into groups or roles" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Define and create groups that relate to job functions (administrators, developers, accounting,
                        etc.) and assign the relevant permissions for each group, and then assign IAM users to those
                        groups.&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &amp;nbsp;&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        All the users in an IAM group inherit the permissions assigned to the group. That way, you can
                        make changes for everyone in a group in just one place. As people move around in your company,
                        you can simply change what IAM group their IAM user belongs to. This method is known as Role
                        Based Access Control (RBAC).&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Remove a user from a group:&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;ol&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                        &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                        &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Click on the user name. All the groups the user belongs are there.&lt;/li&gt;
                        &lt;li&gt;Choose the group and &amp;quot;Remove&amp;quot;.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/ol&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Create a group and add user:&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;ol&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                        &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                        &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All groups&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Click &amp;quot;New Group&amp;quot; and fill the information.&lt;/li&gt;
                        &lt;li&gt;Search and add the user.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Create a group and add members in Azure Active Directory" url="https://docs.microsoft.com/en-us/azure/active-directory/active-directory-groups-create-azure-portal"/>
            <reference name="MS Azure - Use Role-Based Access Control to manage access to your Azure subscription resources" url="https://docs.microsoft.com/en-us/azure/active-directory/role-based-access-control-configure"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each user has got assigned the correct groups.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All groups&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each group has got assigned the correct roles.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:27.011">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-WEBAPPS1" name="Configure App Service settings for each app" issueId="" issueLink="" platform="" cost="0" risk="42" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;There are some options that must be configured properly to secure Azure PostgreSQL databases.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Checklist:&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Ensure App Service Authentication is set on Azure App Service&lt;/li&gt;&lt;li&gt;Ensure web app redirects all HTTP traffic to HTTPS in Azure App Service&lt;/li&gt;&lt;li&gt;Ensure web app is using the latest version of TLS encryption&lt;/li&gt;&lt;li&gt;Ensure the web app has 'Client Certificates (Incoming client certificates)&lt;/li&gt;&lt;li&gt;Ensure that Register with Azure Active Directory is enabled on App Service&lt;/li&gt;&lt;li&gt;Ensure that 'PHP version' is the latest, if used to run the web app&lt;/li&gt;&lt;li&gt;Ensure that 'Python version' is the latest, if used to run the web app&lt;/li&gt;&lt;li&gt;Ensure that 'Java version' is the latest, if used to run the web app&lt;/li&gt;&lt;li&gt;Ensure that 'HTTP Version' is the latest, if used to run the web app&lt;/li&gt;&lt;li&gt;Ensure FTP deployments are disabled&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Remediation:&lt;/p&gt;&lt;p&gt;&lt;strong&gt;From Azure Console&lt;/strong&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Login to Azure Portal using https://portal.azure.com&lt;/li&gt;&lt;li&gt;Go to App Services&lt;/li&gt;&lt;li&gt;Click on each App&lt;/li&gt;&lt;li&gt;Under Setting section, Click on Authentication / Authorization&lt;ol&gt;&lt;li&gt;Set App Service Authentication to On&lt;/li&gt;&lt;li&gt;Choose other parameters as per your requirement and Click on Save&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;Under Setting section, Click on SSL settings&lt;ol&gt;&lt;li&gt;Set HTTPS Only to On under Protocol Settings section&lt;/li&gt;&lt;li&gt;Set Minimum TLS Version to 1.2 under Protocol Settings section&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;Under Setting section, Click on Configuration&lt;ol&gt;&lt;li&gt;Set the option Client certificate mode located under Incoming client certificates is set to Require&lt;/li&gt;&lt;li&gt;Set PHP version to latest version available under General settings&lt;/li&gt;&lt;li&gt;Set HTTP version to 2.0 under General settings&lt;/li&gt;&lt;li&gt;Under Platform Settings, FTP state should be Disabled or FTPS Only&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;Under Setting section, Click on Identity&lt;ol&gt;&lt;li&gt;Set Status to On&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;Under Setting section, Click on Application settings&lt;ol&gt;&lt;li&gt;Set Python version to latest version available under General settings&lt;/li&gt;&lt;li&gt;Under General settings, Set Java version to latest version available&lt;/li&gt;&lt;li&gt;Set Java minor version to latest version available&lt;/li&gt;&lt;li&gt;Set Java web container to the latest version of web container available&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;Alternatively, some of these can be done with Azure CLI.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Using Azure Command Line Interface&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;To set App Service Authentication for an existing app, run the following command:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;az webapp auth update --resource-group &amp;lt;RESOURCE_GROUP_NAME&amp;gt; --name &amp;lt;APP_NAME&amp;gt; --enabled true&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;To set HTTPS-only traffic value for an existing app, run the following command:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;az webapp update --resource-group &amp;lt;RESOURCE_GROUP_NAME&amp;gt; --name &amp;lt;APP_NAME&amp;gt; --set httpsOnly=true&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;To set TLS Version for an existing app, run the following command:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;az webapp config set --resource-group &amp;lt;RESOURCE_GROUP_NAME&amp;gt; --name &amp;lt;APP_NAME&amp;gt; --min-tls-version 1.2&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;To set Incoming client certificates value for an existing app, run the following command:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;az webapp update --resource-group &amp;lt;RESOURCE_GROUP_NAME&amp;gt; --name &amp;lt;APP_NAME&amp;gt; --set clientCertEnabled=true&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;To set Register with Azure Active Directory feature for an existing app, run the following command:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;az webapp identity assign --resource-group &amp;lt;RESOURCE_GROUP_NAME&amp;gt; --name &amp;lt;APP_NAME&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;To see the list of supported runtimes:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;az webapp list-runtimes | grep php&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;To set latest PHP version for an existing app, run the following command:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;az webapp config set --resource-group &amp;lt;RESOURCE_GROUP_NAME&amp;gt; --name &amp;lt;APP_NAME&amp;gt; --php-version &amp;lt;VERSION&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;To see the list of supported runtimes:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;az webapp list-runtimes | grep python&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;To set latest Python version for an existing app, run the following command:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;az webapp config set --resource-group &amp;lt;RESOURCE_GROUP_NAME&amp;gt; --name &amp;lt;APP_NAME&amp;gt; --python-version &amp;lt;VERSION&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;To see the list of supported runtimes:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;az webapp list-runtimes | grep java&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;To set latest Java version for an existing app, run the following command:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;az webapp config set --resource-group &amp;lt;RESOURCE_GROUP_NAME&amp;gt; --name &amp;lt;APP_NAME&amp;gt; --java-version '1.8' --java-container 'Tomcat' --java-container-version '&amp;lt;VERSION&amp;gt;'&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;To set HTTP 2.0 version for an existing app, run the following command:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;az webapp config set --resource-group &amp;lt;RESOURCE_GROUP_NAME&amp;gt; --name &amp;lt;APP_NAME&amp;gt; --http20-enabled true&lt;/p&gt;&lt;/blockquote&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="14" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="16" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="8" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="9" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="9.1" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="9.10" supportedStandardRef="cis-azure-standard"/>
            <standard ref="9.10" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="9.2" supportedStandardRef="cis-azure-standard"/>
            <standard ref="9.2" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="9.3" supportedStandardRef="cis-azure-standard"/>
            <standard ref="9.3" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="9.4" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="9.5" supportedStandardRef="cis-azure-standard"/>
            <standard ref="9.5" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="9.6" supportedStandardRef="cis-azure-standard"/>
            <standard ref="9.6" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="9.7" supportedStandardRef="cis-azure-standard"/>
            <standard ref="9.7" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="9.8" supportedStandardRef="cis-azure-standard"/>
            <standard ref="9.8" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="9.9" supportedStandardRef="cis-azure-standard"/>
            <standard ref="9.9" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="API7:2019-Security Misconfiguration" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="DP-4" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="GS-6" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="IM-1" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="NS-1" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="PA-5" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="PV-3" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="PV-7" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Follow the paths detailed in the description and ensure that the values are the ones indicated.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:27.012">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-A12" name="Configure password expiration" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        &lt;div&gt;
                        Configure the password expiration to force after a determinate time, the password code shall be
                        changed for the users.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Configure password management to match security criteria. This value is configurable
                        using the Set-MsolPasswordPolicy cmdlet from the Azure Active Directory Module for Windows
                        PowerShell. With the following command as the example:&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;div&gt;
                        &lt;div&gt;
                        Set-MsolPasswordPolicy -ValidityPeriod 60 -NotificationDays 14&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;/blockquote&gt;This command updates the tenant so that all users passwords expire after 60
                        days. The users receive notification 14 days prior to that expiry.
                        &lt;/blockquote&gt;
                        &lt;div&gt;
                        &lt;div&gt;
                        More information:&amp;nbsp;
                        &lt;a
                        href="https://docs.microsoft.com/en-us/powershell/module/msonline/set-msolpasswordpolicy?view=azureadps-1.0"&gt;Doc
                        MS Azure&lt;/a&gt;
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;ul&gt;
                        &lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Password policies and restrictions in Azure Active Directory" url="https://docs.microsoft.com/en-us/azure/active-directory/active-directory-passwords-policy"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            Check that the password expiration has got the correct values. Therefore, we can obtain the
                            values using the Get-MsolPasswordPolicy cmdlet from the Azure Active Directory Module for
                            Windows PowerShell. With the following command:
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;br /&gt;
                            &lt;/div&gt;
                            &lt;blockquote&gt;
                            &lt;div&gt;
                            PS C:\&amp;gt; Get-MsolPasswordPolicy -DomainName contoso.com
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;br /&gt;
                            &lt;/div&gt;
                            &lt;/blockquote&gt;More information:
                            &lt;a
                            href="https://docs.microsoft.com/en-us/powershell/module/msonline/get-msolpasswordpolicy?view=azureadps-1.0"&gt;Doc
                            MS Azure&lt;/a&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:27.012">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-A11" name="Configure roles for the Cloud Service" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Define and create the roles for the Azure Cloud Service. For each role, define the permissions and also configure how that role runs. When you launch an Azure instance, you shall specify a role for the instance as a launch parameter. Applications that run on the Cloud instance use the role's credentials when they access Azure resources. This role's permissions determine what the application is allowed to do.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Configure an Azure cloud service from Solution Explorer in Visual Studio.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Use Role-Based Access Control to manage access to your Azure subscription resources" url="https://docs.microsoft.com/en-us/azure/active-directory/role-based-access-control-configure"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that the roles for the Cloud Service are well assigned.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:27.012">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-A03" name="Create Individual Accounts for the administrator users" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Create an individual account for the administrator users and with this new accounts By creating individual Azure users for people accessing your account, you can give each Azure user a unique set of security credentials.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The administrator accounts shall be used for the administrative actions and for giving or revoke credentials to the user's account. The administrator account shall be not used as a normal user account. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt; 
  &lt;li&gt;Select Azure Active Directory.&lt;/li&gt; 
  &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt; 
  &lt;li&gt;Select &amp;quot;Add New User&amp;quot;.&lt;/li&gt; 
  &lt;li&gt;Fill the required information and click &amp;quot;Create&amp;quot;.&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt; 
&lt;div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Add new users to Azure Active Directory" url="https://docs.microsoft.com/en-us/azure/active-directory/add-users-azure-active-directory"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each user has got a user account assigned.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:27.012">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-A10" name="Create mechanisms to ensure the principle of least privilege is applied" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Create the mechanisms to review periodically the group and user permissions to ensure the least privilege for the user accounts. Granting least privilege ensures that users only have the permissions required to complete their jobs rather than additional privileges that are not required. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Following this model ensures that, should an account be compromised, the blast radius of damage is limited&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Allocate privileges via groups or roles via the recommendation in "Use RBAC with pre-defined policies added into groups or roles".&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt; 
&lt;div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Create a group and add members in Azure Active Directory" url="https://docs.microsoft.com/en-us/azure/active-directory/active-directory-groups-create-azure-portal"/>
            <reference name="MS Azure - Use Role-Based Access Control to manage access to your Azure subscription resources" url="https://docs.microsoft.com/en-us/azure/active-directory/role-based-access-control-configure"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that the principle of least privilege is achieved in the assignation of roles and
                            groups to the users.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:27.013">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-WAF-GW" name="Deploy a WAF with Azure Application Gateway" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Deploy a Web Application Firewall (WAF) with Azure Application Gateway in front of an Internet facing app 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  Azure Web Application Firewall (WAF) on Azure Application Gateway provides centralized protection of your web applications from common exploits and vulnerabilities. Web applications are increasingly targeted by malicious attacks that exploit commonly known vulnerabilities. SQL injection and cross-site scripting are among the most common attacks. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  To enable a Web Application Firewall on Application Gateway, you must create a WAF policy. This policy is where all of the managed rules, custom rules, exclusions, and other customizations such as file upload limit exist. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  You can configure a WAF policy and associate that policy to one or more application gateways for protection. A WAF policy consists of two types of security rules: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - Custom rules that you create 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - Managed rule sets that are a collection of Azure-managed pre-configured set of rules 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  When both are present, custom rules are processed before processing the rules in a managed rule set. A rule is made of a match condition, a priority, and an action. Action types supported are: ALLOW, BLOCK, and LOG. You can create a fully customized policy that meets your specific application protection requirements by combining managed and custom rules. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rules within a policy are processed in a priority order. Priority is a unique integer that defines the order of rules to process. Smaller integer value denotes a higher priority and those rules are evaluated before rules with a higher integer value. Once a rule is matched, the corresponding action that was defined in the rule is applied to the request. Once such a match is processed, rules with lower priorities aren't processed further. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  A web application delivered by Application Gateway can have a WAF policy associated to it at the global level, at a per-site level, or at a per-URI level. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Create a policy 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  First, create a basic WAF policy with a managed Default Rule Set (DRS) using the Azure portal. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  1. On the upper left side of the portal, select Create a resource. Search for WAF, select Web Application Firewall, then select Create. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  2. On Create a WAF policy page, Basics tab, enter or select the following information, accept the defaults for the remaining settings, and then select Review + create: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Setting&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Value 
&lt;/div&gt; 
&lt;div&gt;
  Policy for&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Regional WAF (Application Gateway) 
&lt;/div&gt; 
&lt;div&gt;
  Subscription&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Select your subscription name 
&lt;/div&gt; 
&lt;div&gt;
  Resource group&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Select your resource group 
&lt;/div&gt; 
&lt;div&gt;
  Policy name&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Type a unique name for your WAF policy. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  3. On the Association tab, enter one of the following settings, then select Add: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Setting&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Value 
&lt;/div&gt; 
&lt;div&gt;
  Associate Application Gateway&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Select your Application Gateway profile name. 
&lt;/div&gt; 
&lt;div&gt;
  Associate Listeners&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Select the name of your Application Gateway Listener, then select Add. 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt;
  Note 
&lt;/div&gt; 
&lt;div&gt;
  If you assign a policy to your Application Gateway (or listener) that already has a policy in place, the original policy is overwritten and replaced by the new policy. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  4. Select Review + create, then select Create. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Tutorial: Create an application gateway with a Web Application Firewall using the Azure portal" url="https://docs.microsoft.com/en-us/azure/web-application-firewall/ag/application-gateway-web-application-firewall-portal"/>
            <reference name="What is Azure Web Application Firewall on Azure Application Gateway?" url="https://docs.microsoft.com/en-us/azure/web-application-firewall/ag/ag-overview"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Test the application gateway 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Although IIS isn't required to create the application gateway, you installed it to verify whether Azure successfully created the application gateway. Use IIS to test the application gateway: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  1. Find the public IP address for the application gateway on its Overview page. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Or, you can select All resources, enter myAGPublicIPAddress in the search box, and then select it in the search results. Azure displays the public IP address on the Overview page. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  2. Copy the public IP address, and then paste it into the address bar of your browser. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  3. Check the response. A valid response verifies that the application gateway was successfully created and it can successfully connect with the backend. 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:27.013">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-APP-SERVICE1" name="Disable anonymous access" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Disable anonymous access 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  Unless you need to support anonymous requests, disable anonymous access. Whenever possible, use the App Service authentication module instead of writing code to handle authentication and authorization 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  In the Azure portal, you can configure App Service authorization with a number of behaviors when incoming request is not authenticated. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Allow only authenticated requests 
&lt;/div&gt; 
&lt;div&gt;
  The option is Log in with &amp;lt;provider&amp;gt;. App Service redirects all anonymous requests to /.auth/login/&amp;lt;provider&amp;gt; for the provider you choose. If the anonymous request comes from a native mobile app, the returned response is an HTTP 401 Unauthorized. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  With this option, you don't need to write any authentication code in your app. Finer authorization, such as role-specific authorization, can be handled by inspecting the user's claims. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  Restricting access in this way applies to all calls to your app, which may not be desirable for apps wanting a publicly available home page, as in many single-page applications. 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Authentication and authorization in Azure App Service and Azure Functions" url="https://docs.microsoft.com/en-us/azure/app-service/overview-authentication-authorization"/>
            <reference name="Security recommendations for App Service" url="https://docs.microsoft.com/en-us/azure/app-service/security-recommendations"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>In the Azure portal, ensure that anonymous access is disabled.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:27.013">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-ENABLE-ALERTS" name="Enable alerts for anomalous activities" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Enable alerts for anomalous activities 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  Azure Security Center generates detailed security alerts and recommendations. You can view them in the portal or through programmatic tools. You may also need to export some or all of this information for tracking with other monitoring tools in your environment. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Continuous export lets you fully customize what will be exported, and where it will go. For example, you can configure it so that: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  All high severity alerts are sent to an Azure Event Hub 
&lt;/div&gt; 
&lt;div&gt;
  All medium or higher severity findings from vulnerability assessment scans of your SQL servers are sent to a specific Log Analytics workspace 
&lt;/div&gt; 
&lt;div&gt;
  Specific recommendations are delivered to an Event Hub or Log Analytics workspace whenever they're generated 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  Set up a continuous export 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  You can configure continuous export from the Security Center pages in Azure portal, via the Security Center REST API, or at scale using the supplied Azure Policy templates. Select the appropriate tab below for details of each. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Configure continuous export from the Security Center pages in Azure portal 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The steps below are necessary whether you're setting up a continuous export to Log Analytics workspace or Azure Event Hubs. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  1. From Security Center's sidebar, select Pricing &amp;amp; settings. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  2. Select the specific subscription for which you want to configure the data export. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  3. From the sidebar of the settings page for that subscription, select Continuous Export. 
&lt;/div&gt; 
&lt;div&gt;
  Here you see the export options. There's a tab for each available export target. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  4. Select the data type you'd like to export and choose from the filters on each type (for example, export only high severity alerts). 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  5. Optionally, if your selection includes one of these four recommendations, you can include the vulnerability assessment findings together with them: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - Vulnerability Assessment findings on your SQL databases should be remediated 
&lt;/div&gt; 
&lt;div&gt;
  - Vulnerability Assessment findings on your SQL servers on machines should be remediated (Preview) 
&lt;/div&gt; 
&lt;div&gt;
  - Vulnerabilities in Azure Container Registry images should be remediated (powered by Qualys) 
&lt;/div&gt; 
&lt;div&gt;
  - Vulnerabilities in your virtual machines should be remediated 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  To include the findings with these recommendations, enable the include security findings option. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  6. From the "Export target" area, choose where you'd like the data saved. Data can be saved in a target on a different subscription (for example on a Central Event Hub instance or a central Log Analytics workspace). 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  7. Select Save. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Continuously export Security Center data" url="https://docs.microsoft.com/en-us/azure/security-center/continuous-export?tabs=azure-portal"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  View exported alerts and recommendations in Azure Monitor 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  In some cases, you may choose to view the exported Security Alerts and/or recommendations in Azure Monitor. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Azure Monitor provides a unified alerting experience for a variety of Azure alerts including Diagnostic Log, Metric alerts, and custom alerts based on Log Analytics workspace queries. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  To view alerts and recommendations from Security Center in Azure Monitor, configure an Alert rule based on Log Analytics queries (Log Alert): 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  1. From Azure Monitor's Alerts page, select New alert rule. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  2. In the create rule page, configure your new rule (in the same way you'd configure a log alert rule in Azure Monitor): 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - For Resource, select the Log Analytics workspace to which you exported security alerts and recommendations. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - For Condition, select Custom log search. In the page that appears, configure the query, look-back period, and frequency period. In the search query, you can type SecurityAlert or SecurityRecommendation to query the data types that Security Center continuously exports to as you enable the Continuous export to Log Analytics feature. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - Optionally, configure the Action Group that you'd like to trigger. Action groups can trigger email sending, ITSM tickets, WebHooks, and more. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  You'll now see new Azure Security Center alerts or recommendations (depending on your configured continuous export rules and the condition you defined in your Azure Monitor alert rule) in Azure Monitor alerts, with automatic triggering of an action group (if provided). 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:27.013">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-L01" name="Enable diagnostic logs auditing for Microsoft Azure" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Diagnostic Logs capture activity to the data access plane while the Activity log is a subscription-level log for the control plane. Resource-level diagnostic logs provide insight into operations that were performed within that resource itself, for example, getting a secret from a Key Vault. Currently, 32 Azure resources support Diagnostic Logging (See the references section for a complete list), including Network Security Groups, Load Balancers, Key Vault, AD, Logic Apps and CosmosDB. The content of these logs varies by resource type. For example, Windows event system logs are a category of diagnostics logs for VMs, and blob, table, and queue logs are categories of diagnostics logs for storage accounts.&lt;/p&gt;&lt;p&gt;A number of back-end services were not configured to log and store Diagnostic Logs for certain activities or for a sufficient length. It is crucial that logging systems are correctly configured to log all relevant activities and retain those logs for a sufficient length of time. By default, Diagnostic Logs are not enabled. Given that the mean time to detection in an enterprise is 240 days, a minimum retention period of two years is recommended.&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation:&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;The specific steps for configuring resources within the Azure console vary depending on resource, but typically the steps are:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Go to the resource&lt;/li&gt;&lt;li&gt;Click on Diagnostic settings&lt;/li&gt;&lt;li&gt;In the blade that appears, click "Add diagnostic setting"&lt;/li&gt;&lt;li&gt;Configure the diagnostic settings&lt;/li&gt;&lt;li&gt;Click on Save&lt;/li&gt;&lt;/ol&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Enable diagnostics logging for web apps in Azure App Service" url="https://docs.microsoft.com/en-us/azure/app-service-web/web-sites-enable-diagnostic-log"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5.3" supportedStandardRef="cis-azure-standard"/>
            <standard ref="5.3" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="LT-4" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="LT-5" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Go to the resource&lt;/li&gt;&lt;li&gt;Click on Diagnostic settings&lt;/li&gt;&lt;li&gt;In the blade that appears, click "Add diagnostic setting"&lt;/li&gt;&lt;li&gt;Configure the diagnostic settings&lt;/li&gt;&lt;li&gt;Click on Save&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:27.013">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-L04" name="Enable Failed Request Tracing" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Enable to obtain the detailed information on failed requests, including a trace of the IIS components used to process the request and the time taken in each component. This can be useful if you are attempting to increase site performance or isolate what is causing a specific HTTP error to be returned. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Go to the Azure portal.&lt;/li&gt; 
  &lt;li&gt;Go to the blade for your web app and in "Monitoring" &amp;gt;&amp;gt; "Diagnostics logs".&lt;/li&gt; 
  &lt;li&gt;Enable the "Failed request tracing".&lt;/li&gt; 
  &lt;li&gt;Push "Save" to save the changes.&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Enable diagnostics logging for web apps in Azure App Service" url="https://docs.microsoft.com/en-us/azure/app-service-web/web-sites-enable-diagnostic-log"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Go to the Azure portal.&lt;/li&gt;
                            &lt;li&gt;Go to the blade for your web app and in &amp;quot;Monitoring&amp;quot; &amp;gt;&amp;gt;
                            &amp;quot;Diagnostics logs&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that the &amp;quot;Failed request tracing&amp;quot; is enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:27.013">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-A04" name="Enable MFA for Administrator &amp; Co Administrator accounts" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Enable multi-factor authentication (MFA) device enhances the security of the login process for the Administrator accounts. With MFA, users have a device that generates a unique authentication code (a one-time password, or OTP) and users must provide both their normal credentials (like their username and password) and the OTP. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The MFA device can either be a special piece of hardware, or it can be a virtual device. The recommendation for the Service Administrator &amp;amp; Co Administrator accounts is to use MFA to increase the level of security of the login process. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt; 
  &lt;li&gt;Select Azure Active Directory.&lt;/li&gt; 
  &lt;li&gt;Go into "Users and groups" &amp;gt; "All users".&lt;/li&gt; 
  &lt;li&gt;Select "Multi-Factor Authentication".&lt;/li&gt; 
  &lt;li&gt;Choose all the Service Administrator &amp;amp; Co Administrator accounts and enable MFA.&amp;nbsp;&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - How to require two-step verification for a user or group" url="https://docs.microsoft.com/en-us/azure/multi-factor-authentication/multi-factor-authentication-get-started-user-states"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;Multi-Factor Authentication&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check all Administrator accounts have got the MFA flag enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:27.013">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-USER-MFA" name="Enable per-user MFA" issueId="" issueLink="" platform="" cost="0" risk="40" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Enable per-user MFA 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  Multi-factor authentication (MFA) is a process where a user is prompted during a sign-in event for additional forms of identification. This prompt could be to enter a code on their cellphone or to provide a fingerprint scan. When you require a second form of authentication, security is increased as this additional factor isn't something that's easy for an attacker to obtain or duplicate. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  To secure user sign-in events in Azure AD, you can require multi-factor authentication (MFA). Enabling Azure AD Multi-Factor Authentication using Conditional Access policies is the recommended approach to protect users. Conditional Access is an Azure AD Premium P1 or P2 feature that lets you apply rules to require MFA as needed in certain scenarios 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  For Azure AD free tenants without Conditional Access, you can use security defaults to protect users. Users are prompted for MFA as needed, but you can't define your own rules to control the behavior. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Features and licenses for Azure AD Multi-Factor Authentication" url="https://docs.microsoft.com/en-us/azure/active-directory/authentication/concept-mfa-licensing"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  1. Log into the Azure portal as an owner. 
&lt;/div&gt; 
&lt;div&gt;
  2. Select Azure Active Directory. 
&lt;/div&gt; 
&lt;div&gt;
  3. Go into "Users and groups" &amp;gt; "All users". 
&lt;/div&gt; 
&lt;div&gt;
  4. Select "Multi-Factor Authentication". 
&lt;/div&gt; 
&lt;div&gt;
  5. Ensure your users have the MFA flag enabled. 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:27.013">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-ENABLE-WAF-LOGS" name="Enable WAF logs" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Enable WAF logs 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  You can monitor Web Application Firewall resources using logs. You can save performance, access, and other data or consume it from a resource for monitoring purposes. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  Enable logging through the Azure portal 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  1. In the Azure portal, find your resource and select Diagnostic settings. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  For Application Gateway, three logs are available: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - Access log 
&lt;/div&gt; 
&lt;div&gt;
  - Performance log 
&lt;/div&gt; 
&lt;div&gt;
  - Firewall log 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  2. To start collecting data, select Turn on diagnostics. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  3. The Diagnostics settings page provides the settings for the resource logs. In this example, Log Analytics stores the logs. You can also use event hubs and a storage account to save the resource logs. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  4. Type a name for the settings, confirm the settings, and select Save. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Resource logs for Azure Web Application Firewall" url="https://docs.microsoft.com/en-us/azure/web-application-firewall/ag/web-application-firewall-logs"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Ensure that all WAF logs are enabled.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:27.013">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-L02" name="Enable Web Server Logging" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Enable the Web Server logging to receive information about HTTP transactions using the W3C extended log file format. This is useful when determining overall site metrics such as the number of requests handled or how many requests are from a specific IP address. There are two ways to save the data: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;&lt;b&gt;File system: &lt;/b&gt;stores the application diagnostics information to the web app file system. These files can be accessed by FTP, or downloaded as a Zip archive by using the Azure PowerShell or Azure Command-Line Interface (Azure CLI).&lt;/li&gt; 
  &lt;li&gt;&lt;b&gt;Storage:&lt;/b&gt; stores the application diagnostics information in the specified Azure Storage Account and the logs are only accessible with a client account.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Go to the Azure portal.&lt;/li&gt; 
  &lt;li&gt;Go to the blade for your web app and in "Monitoring" &amp;gt;&amp;gt; "Diagnostics logs".&lt;/li&gt; 
  &lt;li&gt;Enable the type "Storage" or "File System" to activate this function.&lt;/li&gt; 
  &lt;li&gt;Push "Save" to save the changes.&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Enable diagnostics logging for web apps in Azure App Service" url="https://docs.microsoft.com/en-us/azure/app-service-web/web-sites-enable-diagnostic-log"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Go to the Azure portal.&lt;/li&gt;
                            &lt;li&gt;Go to the blade for your web app and in &amp;quot;Monitoring&amp;quot; &amp;gt;&amp;gt;
                            &amp;quot;Diagnostics logs&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that the type &amp;quot;Storage&amp;quot; or &amp;quot;File System&amp;quot;
                            are enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:27.013">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-ENCRYPTION-TRANSIT" name="Encrypt Sensitive data in transit" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;div&gt;
   Use encryption to protect traffic on external and public networks as it is critical for data protection 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   Rationale: 
 &lt;/div&gt; 
 &lt;div&gt;
   Protect data in transit against 'out of band' attacks (such as traffic capture) using encryption to ensure that attackers cannot easily read or modify the data. 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   Remediation: 
 &lt;/div&gt; 
 &lt;div&gt;
   1. Use a valid TLS/SSL certificate for custom domains. 
 &lt;/div&gt; 
 &lt;div&gt;
   2. Ensure that any clients connecting to your Azure resources for HTTP traffic can negotiate TLS v1.2 or greater. 
 &lt;/div&gt; 
 &lt;div&gt;
   3. Use SSH (for Linux) or RDP/TLS (for Windows) for remote management, instead of unencrypted protocols 
 &lt;/div&gt; 
 &lt;div&gt;
   4. Disable obsoleted SSL/TLS/SSH versions, protocols, and weak ciphers 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   Redirect HTTP to HTTPs 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   By default, clients can connect to web apps by using both HTTP or HTTPS. Microsoft Azure recommends redirecting HTTP to HTTPs because HTTPS uses the SSL/TLS protocol to provide a secure connection, which is both encrypted and authenticated. 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   Enforce FTPS 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   For enhanced security, you should allow FTP over TLS/SSL only. You can also disable both FTP and FTPS if you don't use FTP deployment. 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   In your app's resource page in Azure portal, select Configuration &amp;gt; General settings from the left navigation. 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   To disable unencrypted FTP, select FTPS Only in FTP state. To disable both FTP and FTPS entirely, select Disabled. When finished, click Save. If using FTPS Only, you must enforce TLS 1.2 or higher by navigating to the TLS/SSL settings blade of your web app. TLS 1.0 and 1.1 are not supported with FTPS Only. 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   Enable client certificates 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   To set up your app to require client certificates, you can switch On the Require incoming certificate by selecting Configuration &amp;gt; General Settings from the Azure Portal or you need to set the clientCertEnabled setting for your app to true. To set the setting, run the following command in the Cloud Shell. 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   az webapp update --set clientCertEnabled=true --name &amp;lt;app_name&amp;gt; --resource-group &amp;lt;group_name&amp;gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   Impact: 
 &lt;/div&gt; 
 &lt;div&gt;
   None 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Add a TLS/SSL certificate in Azure App Service" url="https://docs.microsoft.com/en-us/azure/app-service/configure-ssl-certificate"/>
            <reference name="Azure App ServiceSecurity" url="https://docs.microsoft.com/en-us/azure/app-service/overview-security"/>
            <reference name="Configure TLS mutual authentication for Azure App Service" url="https://docs.microsoft.com/en-us/azure/app-service/app-service-web-configure-tls-mutual-auth"/>
            <reference name="Deploy your app to Azure App Service using FTP/S" url="https://docs.microsoft.com/en-us/azure/app-service/deploy-ftp"/>
            <reference name="Security in Azure App Service" url="https://docs.microsoft.com/en-us/azure/app-service/overview-security"/>
            <reference name="Security recommendations for App Service" url="https://docs.microsoft.com/en-us/azure/app-service/security-recommendations"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Test HTTPS 
&lt;/div&gt; 
&lt;div&gt;
  In various browsers, browse to https://&amp;lt;your.custom.domain&amp;gt; to verify that it serves up your app. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Your application code can inspect the protocol via the "x-appservice-proto" header. The header will have a value of http or https. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Note 
&lt;/div&gt; 
&lt;div&gt;
  If your app gives you certificate validation errors, you're probably using a self-signed certificate. 
&lt;/div&gt; 
&lt;div&gt;
  If that's not the case, you may have left out intermediate certificates when you export your certificate to the PFX file. 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:27.014">
              <output/>
            </source>
            <references>
              <reference name="Azure App ServiceSecurity" url="https://docs.microsoft.com/en-us/azure/app-service/overview-security"/>
            </references>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-L05" name="Export the Audit Logs to a storage account" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Export the information of Audit Logs to a storage account. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Go to "Monitor" and then to "Activity Logs".&lt;/li&gt; 
  &lt;li&gt;Push the button "Export".&lt;/li&gt; 
  &lt;li&gt;Select "All Regions".&lt;/li&gt; 
  &lt;li&gt;Select "Export to a storage account" and select your account.&lt;/li&gt; 
  &lt;li&gt;Select the "Retention (days)" as minimum 90 days.&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Enable diagnostics logging for web apps in Azure App Service" url="https://docs.microsoft.com/en-us/azure/app-service-web/web-sites-enable-diagnostic-log"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Activity Logs&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Push the button &amp;quot;Export&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;All Regions&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;Export to a storage account&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that all fields are correctly filled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:27.014">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-N09" name="Isolate Azure instances into different VNets" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Specify a VNet for the Azure instance as a launch parameter. Applications that run on the Cloud instance can use the VNet security configuration when they access Azure resources.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  You can configure an Azure cloud service from Solution Explorer in Visual Studio. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Create a virtual network with multiple subnets" url="https://docs.microsoft.com/en-us/azure/virtual-network/virtual-networks-create-vnet-arm-pportal"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that the Azure instances are into different VNets.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:27.014">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-A07" name="Recertify user access" issueId="" issueLink="" platform="" cost="0" risk="40" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Do regular reviews of accounts on the system and verify that it doesn't exist stoled or fake
                        accounts. With this process is ensured that there are not compromised accounts by former
                        employees or by attackers.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        At least every 90 days complete the following:&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Log in to the Azure portal as an owner.&lt;/li&gt;
                        &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                        &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;For any user that should not exist:&lt;/li&gt;
                        &lt;li&gt;Select the user.&lt;/li&gt;
                        &lt;li&gt;Click &amp;quot;Delete&amp;quot;.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Assign a user or group to an enterprise app in Azure Active Directory" url="https://docs.microsoft.com/en-us/azure/active-directory/active-directory-coreapps-assign-user-azure-portal"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Log in to the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each user has got an assigned account.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:27.014">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-APP-SECRETS" name="Secure application secrets" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Secure application secrets 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  Don't store application secrets, such as database credentials, API tokens, or private keys in your code or configuration files. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  The commonly accepted approach is to access application secrets as environment variables using the standard pattern in your language of choice. In Azure App Service, you can define environment variables through app settings and connection strings. App settings and connection strings are stored encrypted in Azure. The app settings are decrypted only before being injected into your app's process memory when the app starts. The encryption keys are rotated regularly. Alternatively, you can integrate your Azure App Service app with Azure Key Vault for advanced secrets management. By accessing the Key Vault with a managed identity, your App Service app can securely access the secrets you need. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Security recommendations for App Service" url="https://docs.microsoft.com/en-us/azure/app-service/security-recommendations"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Ensure that application secrets, such as database credentials, API tokens, or private keys are not stored in your code or configuration files.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:27.014">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-N01" name="Set Network Security Groups to be as restrictive as possible" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Use Network Security Groups (NSG) to filter the ingress/egress network traffic to Azure resources. Set the limit all the traffic (ingress/egress) on the NSG in order to force the use of least privilege into the NSG.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Identify Azure resources for each NSG.&lt;/li&gt; 
  &lt;li&gt;Create a set of least privilege NSG for those resources.&lt;/li&gt; 
  &lt;li&gt;Place the resources in those security groups.&lt;/li&gt; 
  &lt;li&gt;Change the inbound/outbound security rules to fulfill the least privilege.&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - How to open ports to a virtual machine with the Azure portal" url="https://docs.microsoft.com/en-us/azure/virtual-machines/windows/nsg-quickstart-portal"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Check that each Azure resources has got their Network Security Groups.&lt;/li&gt;
                            &lt;li&gt;Check that a set of these groups achieve with the principle of the least
                            privilege.&lt;/li&gt;
                            &lt;li&gt;Check that the inbound/outbound security rules are enabled and correctly
                            configured.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:27.014">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-N02" name="Use Network Security Groups to block inbound port traffic from 0.0.0.0/0" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Use Network Security Groups (NSG) to filter the ingress/egress network traffic to Azure resources. Set the limit inbound access to all TCP or all ports to avoid undue exposure to risk.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt; 
  &lt;li&gt;Select Network Security Groups.&lt;/li&gt; 
  &lt;li&gt;Choose the NSG to edit (or create a new one).&lt;/li&gt; 
  &lt;li&gt;In "Inbound security rules":&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;ul&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Remove all rules that allow port traffic.&lt;/li&gt; 
   &lt;li&gt;Add a rule to deny port traffic&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/ul&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - How to open ports to a virtual machine with the Azure portal" url="https://docs.microsoft.com/en-us/azure/virtual-machines/windows/nsg-quickstart-portal"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Network Security Groups.&lt;/li&gt;
                            &lt;li&gt;Choose the NSG to view one of them.&lt;/li&gt;
                            &lt;li&gt;In &amp;quot;Inbound security rules&amp;quot;, check that all the traffic from
                            0.0.0.0/0 is are blocked.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:27.014">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="authentication" name="Authentication" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="AZURE-LOST-ACCESS-ROOT" name="Attackers gain unauthorized access to the root account due to the lack of configuration of the account" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;div&gt;Attackers could gain unauthorized access to the administrator account due to a lack of configuration of the account and its security mechanisms, making it possible to modify credentials and add/remove user accounts.
                                &lt;/div&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="AZ-W04">
                  <countermeasures>
                    <countermeasure ref="AZ-A04" mitigation="50"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AZURE-MON02">
                  <countermeasures>
                    <countermeasure ref="AZ-A03" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-A03" mitigation="50"/>
                <countermeasure ref="AZ-A04" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="AZURE-LOST-ACCESS-USER" name="Attackers gain unauthorized access to the user account due to the lack of configuration of the account" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;Attackers could gain unauthorized access to the user account due to the lack of configuration of the account, for example, the security question to reset the password is configured incorrectly.&lt;/p&gt;</desc>
              <riskRating confidentiality="50" integrity="50" availability="50" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-IDENTITY-03">
                  <countermeasures>
                    <countermeasure ref="AZ-A07" mitigation="50"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AZURE-MON03">
                  <countermeasures>
                    <countermeasure ref="AZURE-USER-MFA" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-A07" mitigation="50"/>
                <countermeasure ref="AZURE-USER-MFA" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="authorization" name="Authorization" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="LOSS-CONTROL_ENV" name="Attackers gain unauthorized access to the control of the environment" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;Attackers could potentially gain unauthorized access to the control of the environment, due to user accounts - or role groups - not being well defined and configured. As a consequence attackers may be able to make changes without root approval.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="75" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-ACCESS-01">
                  <countermeasures>
                    <countermeasure ref="AZ-A09" mitigation="20"/>
                    <countermeasure ref="AZ-A10" mitigation="20"/>
                    <countermeasure ref="AZ-A11" mitigation="20"/>
                    <countermeasure ref="AZURE-APP-SERVICE1" mitigation="20"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AZURE-EXPIRATION-DATE">
                  <countermeasures>
                    <countermeasure ref="AZ-A12" mitigation="20"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-A09" mitigation="20"/>
                <countermeasure ref="AZ-A10" mitigation="20"/>
                <countermeasure ref="AZ-A11" mitigation="20"/>
                <countermeasure ref="AZ-A12" mitigation="20"/>
                <countermeasure ref="AZURE-APP-SERVICE1" mitigation="20"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="general" name="General" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="UNCONFIGURED-SECURITY" name="Attackers gain access to the system by exploiting weak security configurations" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>Weak security configurations like using sharing passwords in plain text, using weak passwords, using obsolete encryption algorithms, etc. can lead attackers to gain access to the system.</desc>
              <riskRating confidentiality="75" integrity="50" availability="25" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-16">
                  <countermeasures>
                    <countermeasure ref="AZURE-WEBAPPS1" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZURE-WEBAPPS1" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="ACCESS-TO-DATA" name="Sensitive data is compromised through unauthorized access to data storage" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;A data breach is a security violation in which sensitive, protected or confidential data is copied, transmitted, viewed, stolen or used by an individual unauthorized to do so. Sensitive data could be exposed due to a bad configuration in user permissions.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-UNSECURE-CREDENTIALS">
                  <countermeasures>
                    <countermeasure ref="AZURE-APP-SECRETS" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZURE-APP-SECRETS" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="logging-and-monitoring" name="Logging and Monitoring" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="OWASP A10:2017" name="Exploitation of insufficient logging and monitoring" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>	&lt;p&gt;Exploitation of insufficient logging and monitoring is the bedrock of nearly every major incident.&lt;br /&gt;
 Attackers rely on the lack of monitoring and timely response to achieve their goals without being detected.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="AZ-ENABLE-ALERTS" mitigation="20"/>
                    <countermeasure ref="AZ-ENABLE-WAF-LOGS" mitigation="16"/>
                    <countermeasure ref="AZ-L01" mitigation="16"/>
                    <countermeasure ref="AZ-L02" mitigation="16"/>
                    <countermeasure ref="AZ-L04" mitigation="16"/>
                    <countermeasure ref="AZ-L05" mitigation="16"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-ENABLE-ALERTS" mitigation="20"/>
                <countermeasure ref="AZ-ENABLE-WAF-LOGS" mitigation="16"/>
                <countermeasure ref="AZ-L01" mitigation="16"/>
                <countermeasure ref="AZ-L02" mitigation="16"/>
                <countermeasure ref="AZ-L04" mitigation="16"/>
                <countermeasure ref="AZ-L05" mitigation="16"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="networking" name="Networking" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="AZURE-UNAUTHORISED-CONNECTION" name="Attackers perform unauthorized network access" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;Attackers could perform unauthorized network access to the resources through misconfigured ports or security network configurations.&lt;/p&gt;</desc>
              <riskRating confidentiality="25" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-NET-01">
                  <countermeasures>
                    <countermeasure ref="AZ-N01" mitigation="25"/>
                    <countermeasure ref="AZ-N02" mitigation="25"/>
                    <countermeasure ref="AZURE-WAF-GW" mitigation="25"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AZURE-VNET01">
                  <countermeasures>
                    <countermeasure ref="AZ-N09" mitigation="25"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-N01" mitigation="25"/>
                <countermeasure ref="AZ-N02" mitigation="25"/>
                <countermeasure ref="AZ-N09" mitigation="25"/>
                <countermeasure ref="AZURE-WAF-GW" mitigation="25"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="DATA-EXPOSED-CHANNEL" name="The data is exposed through the transmission channel" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;Attackers can obtain the data through the transmitted channel because this does not have the security measures in place to protect the data&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="DATA-TRANSMIT-CLEAR">
                  <countermeasures>
                    <countermeasure ref="AZURE-ENCRYPTION-TRANSIT" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZURE-ENCRYPTION-TRANSIT" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="c427bc73-a1b1-4f71-927a-03d152f179cd" diagramComponentId="f960d3d8-699a-4072-892d-dfc3800ba93b" ref="a004ceee-6065-4196-a1ce-15337fda686c" name="Azure Kubernetes Service" desc="" library="Microsoft-Azure" parentComponentRef="87b459b6-d494-41b4-9cf5-c79f7d4d6830" componentDefinitionRef="microsoft-azure-kubernetes-service">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses>
        <weakness ref="CWE-284" name="Improper Access Control" state="0" impact="100" issueId="" issueLink="">
          <desc>The software does not restrict or incorrectly restricts access to a resource from an unauthorized actor.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:24.143">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="AZURE-KUBERNETES-SERVICE1" name="Enable RBAC within Azure Kubernetes Service" issueId="" issueLink="" platform="" cost="0" risk="42" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Azure Kubernetes Services has the capability to integrate Azure Active Directory users and groups into Kubernetes RBAC controls within the AKS Kubernetes API Server. This should be utilized to enable granular access to Kubernetes resources within the AKS clusters supporting RBAC controls not just of the overarching AKS instance but also the individual resources managed within Kubernetes.&lt;/p&gt;&lt;p&gt;Impact:&lt;/p&gt;&lt;p&gt;If RBAC is not enabled, the granularity of permissions granted to Kubernetes resources is diminished presenting more permissions than needed to users requiring access to Kubernetes resources in AKS.&lt;/p&gt;&lt;p&gt;Remediation:&lt;/p&gt;&lt;p&gt;WARNING: This setting cannot be changed after AKS deployment, cluster will require recreation.&lt;/p&gt;&lt;p&gt;Default Value:&lt;/p&gt;&lt;p&gt;By default, RBAC is enabled.&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="10" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="18" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="19" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="3" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="8.5" supportedStandardRef="cis-azure-standard"/>
            <standard ref="8.5" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="API1:2019-Broken Object Level Authorization" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="PA-7" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;&lt;strong&gt;From Azure Console&lt;/strong&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Go to Kubernetes Services&lt;/li&gt;&lt;li&gt;For each Kubernetes Services instance, click on Automation Script.&lt;/li&gt;&lt;li&gt;Ensure that each variable "enableRBAC" is set to true.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;strong&gt;Using Azure Command Line Interface 2.0&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Ensure that the output of the below command is not empty or null.&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;az aks show --name &amp;lt;AKS Instance Name&amp;gt; --query enableRbac --resource-group &amp;lt;Resource Group Name&amp;gt; --subscription &amp;lt;Subscription ID&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2022-12-24T18:45:24.109">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="GENERAL" name="General" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="UNCONFIGURED-SECURITY" name="Attackers gain access to the system by exploiting weak security configurations" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>Weak security configurations like using sharing passwords in plain text, using weak passwords, using obsolete encryption algorithms, etc. can lead attackers to gain access to the system.</desc>
              <riskRating confidentiality="75" integrity="50" availability="25" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-284">
                  <countermeasures>
                    <countermeasure ref="AZURE-KUBERNETES-SERVICE1" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZURE-KUBERNETES-SERVICE1" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="bd16685c-f0b7-418a-b52c-c83200d7ef27" diagramComponentId="1f06c281-217c-4870-bdf0-695be6c7493c" ref="e8b36dfe-741a-4fc9-95fe-c744d87af442" name="Azure Container Instances" desc="" library="CS-Default" parentComponentRef="87b459b6-d494-41b4-9cf5-c79f7d4d6830" componentDefinitionRef="empty-component">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses/>
      <countermeasures/>
      <usecases/>
    </component>
  </components>
</template>
