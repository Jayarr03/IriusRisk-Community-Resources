<?xml version="1.0" encoding="UTF-8"?>
<template ref="azure-on-premise-ad-domains-integrated-with-aad" name="Azure - On Premise AD Domains integrated with AAD" tags="">
  <desc>&lt;p&gt;Source - &lt;a href="https://learn.microsoft.com/en-us/azure/architecture/reference-architectures/identity/azure-ad" target="_blank"&gt;https://learn.microsoft.com/en-us/azure/architecture/reference-architectures/identity/azure-ad&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Visio - https://arch-center.azureedge.net/identity-architectures.vsdx&lt;/p&gt;</desc>
  <diagram draft="false">
    <schema></schema>
  </diagram>
  <trustZones>
    <trustZone ref="public-cloud" uuid="b61d6911-338d-46a8-9f39-8dcd24abfe91" name="Public Cloud" desc="Public cloud services" trustRating="60"/>
    <trustZone ref="private-secured" uuid="2ab4effa-40b7-4cd2-ba81-8247d29a6f2d" name="Private Secured" desc="A secured zone within a trusted private zone" trustRating="100"/>
    <trustZone ref="internet" uuid="f0ba7722-39b6-4c81-8290-a30a248bb8d9" name="Internet" desc="Untrusted Internet public zone" trustRating="1"/>
  </trustZones>
  <questions/>
  <assets/>
  <settings/>
  <dataflows>
    <dataflow name="Generic Client -&gt; Azure Active Directory" ref="16737165-449d-4041-98cc-9e6af4b93a79" source="a7dd8414-04ad-47c0-81ca-8894bffc90d7" target="3a689354-8936-4a32-855b-ef9f1763f25c">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Azure Load Balancer -&gt; Azure Virtual Machines" ref="582045a7-ac42-434b-94dc-d889c55c5fb4" source="b407081f-6d26-4779-8854-b6d0c2e3f470" target="0e62cc32-edc7-459a-bff3-63cfaf6946c0">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Web Tier -&gt; Azure Load Balancer" ref="6769dca8-7886-46d1-8049-9e5bcb519a2e" source="37f32cf3-3a52-4ec6-be95-fdd624d45001" target="9e458146-6f7c-48d4-9c06-e2e70e1eeb86">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Azure Load Balancer -&gt; Azure Virtual Machines" ref="90fa5fad-fb97-479a-bb4c-8cded08e2ba1" source="94df54d2-acca-470e-8ab5-95173e4a9370" target="97eb09a1-b3ec-4423-be4c-f8938eec7e9d">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Azure Load Balancer -&gt; Azure Virtual Machines" ref="9baebd9d-7368-46c7-974d-feac34d85ada" source="9e458146-6f7c-48d4-9c06-e2e70e1eeb86" target="a315fb34-349d-4395-b728-36e75aa09751">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Web Tier -&gt; Azure Load Balancer" ref="bc535a38-518d-45bf-8d32-905caeacb17f" source="8a4aa198-240b-4035-bec7-9847a31eace5" target="94df54d2-acca-470e-8ab5-95173e4a9370">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Off-Premise Users -&gt; Azure Active Directory" ref="bc84ccf6-0ed7-4fc1-a1dc-f2d135622123" source="9a93e3e4-9c1d-4105-a6c4-a8a8dd9baf25" target="3a689354-8936-4a32-855b-ef9f1763f25c">
      <assets/>
      <tags/>
    </dataflow>
    <dataflow name="Azure Active Directory -&gt; Azure Load Balancer" ref="e513acb2-3301-488a-ae18-6e1030be88b2" source="3a689354-8936-4a32-855b-ef9f1763f25c" target="b407081f-6d26-4779-8854-b6d0c2e3f470">
      <assets/>
      <tags/>
    </dataflow>
  </dataflows>
  <customFields>
    <customField ref="APT" value=""/>
    <customField ref="Application Details" value=""/>
    <customField ref="Application Downtime Cost" value=""/>
    <customField ref="Application Type" value=""/>
    <customField ref="Apply Standard at all times" value="1"/>
    <customField ref="Contact Email" value=""/>
    <customField ref="Custom Field A" value=""/>
    <customField ref="DEL" value=""/>
    <customField ref="GPS Environment" value="NO"/>
    <customField ref="Hosting Location" value="GCP"/>
    <customField ref="Milestone 1" value=""/>
    <customField ref="Milestone 1 - Deadline" value=""/>
    <customField ref="Milestone 2" value=""/>
    <customField ref="Milestone 2 - Deadline" value=""/>
    <customField ref="Milestone 3" value=""/>
    <customField ref="Milestone 3 - Deadline" value=""/>
    <customField ref="Product Review Session Details" value=""/>
    <customField ref="Project Management Details" value=""/>
    <customField ref="Project Manager" value=""/>
    <customField ref="Project Number" value="_::_"/>
    <customField ref="Project Owner Email" value="jrabe@iriusrisk.com"/>
    <customField ref="Ready for Workflow advancement?" value="NO"/>
    <customField ref="Requirements" value=""/>
    <customField ref="Test Custom" value=""/>
    <customField ref="Third Party Contact" value=""/>
    <customField ref="Third Party Organization" value=""/>
    <customField ref="UPS Template Picker" value="GCP Template"/>
    <customField ref="Use Case" value=""/>
    <customField ref="User Email Field" value=""/>
    <customField ref="VZ - Requirements" value="Type 1||Type 2"/>
  </customFields>
  <components>
    <component uuid="cd14c012-7b59-484f-9c99-5b797749e56c" diagramComponentId="0dbcb567-665d-48e1-904b-76165d6dc49a" ref="b407081f-6d26-4779-8854-b6d0c2e3f470" name="Azure Load Balancer" desc="" library="Microsoft-Azure" parentComponentRef="" componentDefinitionRef="microsoft-azure-load-balancer">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses>
        <weakness ref="AZURE-MON02" name="Excessive use of administrator accounts" state="0" impact="100" issueId="" issueLink="">
          <desc>The administrator accounts are used for all actions, not only for administrative actions. This
                        is because these users have not got a personal or a user account to do the daily actions.&amp;nbsp;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that there is any rule to notify when there is a bad usage of the root
                            account.&lt;/li&gt;
                            &lt;li&gt;Check if these rules are enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:11.822">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CWE-778" name="Insufficient Logging" state="0" impact="100" issueId="" issueLink="">
          <desc>When a critical security event occurs, the software either does not record the event or omits important details about the event when logging it. When critical security events are not logged properly, such as in the case of a failed login attempt, this can make malicious behavior more difficult to detect and may hinder forensic analyses after a successful attack.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:11.459">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-NON-IDENTIFY" name="Insufficient resource identification" state="0" impact="100" issueId="" issueLink="">
          <desc>Resources are not registered in the safety net systems, and/or additional unidentified resources exist. As such, additional weaknesses might be introduced.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:11.459">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-MON03" name="Lack of 2FA" state="0" impact="100" issueId="" issueLink="">
          <desc>Logging into the console without using Multi-factor Authentication (MFA) and without being detected. The connection without MFA must be audited and monitored, the correct security group must be informed and the connection must be validated.&amp;nbsp;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that there is any rule to notify when someone tries to login into the
                            console without MFA.&lt;/li&gt;
                            &lt;li&gt;Check if these rules are enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:11.822">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZ-W04" name="Misconfigured Authentication Method for Administrator Accounts" state="0" impact="100" issueId="" issueLink="">
          <desc>The authentication method &amp;quot;Multi-factor Authentication&amp;quot; for the Administrator accounts is not configured.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;Multi-Factor Authentication&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check all Administrator accounts have got the MFA flag enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:11.822">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="LOST-SECURITY-ALERTS" name="Misconfigured Security contact details" state="0" impact="100" issueId="" issueLink="">
          <desc>The security contact details for the Azure subscription are not properly configured.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Access &amp;quot;Azure Security Center&amp;quot;.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;In the &amp;quot;Recommendations&amp;quot; tab choose &amp;quot;Provide security
                            contact details&amp;quot;.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Check that all fields are filled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:11.822">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-IDENTITY-03" name="Misconfigured User Account" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        Key security settings such as resetting the password and other password controls are not
                        configured.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log in to the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each user has got an assigned account.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;Password reset&amp;quot; &amp;gt; &amp;quot;Authentication Method&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that the security confirmation measures and the security criteria are well
                            filled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:11.822">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-ACCESS-01" name="Misconfigured credentials for groups and roles" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        The credentials for groups and roles are not correctly configured and there are user accounts with more privileges than necessary.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each user has got assigned the correct groups.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All groups&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each group has got assigned the correct roles to achieve principle of
                            least privilege.&lt;/li&gt;
                            &lt;li&gt;Check that the roles for the Cloud Service are well assigned.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;div&gt;
                            &lt;/div&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:11.459">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-VNET01" name="Networks for Azure resources are not properly segmented. Without proper segmentation, when attackers gain access to one resource, any other resources in the same VNet are compromised" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        Resources in the same VNet are compromised because when one of them is attacked and the
                        attackers gain access, they also gain access to all resources.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            Identify the resources and the Microsoft Azure instances.
                            &lt;/div&gt;
                            &lt;div&gt;
                            Check that the resources are in the correct VNet.
                            &lt;/div&gt;
                            &lt;div&gt;
                            Check that the Microsoft Azure instances&amp;nbsp;are into different VNets.
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:11.459">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-VM01" name="Security policies exposing system resources" state="0" impact="100" issueId="" issueLink="">
          <desc>The security policies are not adequately configured.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:11.458">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-NET-04" name="Unauthorized connection attempts on Azure resources" state="0" impact="100" issueId="" issueLink="">
          <desc>Receiving unauthorized connections to Azure resources is most likely to be receiving an
                        attack. To avoid this, access to the network must be as restricted as possible using Network
                        Access Control Lists for blacklisting.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;Network security groups&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Select the Network Security Group (NSG) for your virtual machine and click on
                            &amp;quot;Inbound security rules&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that there is a rule to deny the inbound access from a blacklisted IP
                            address or range to a designated port or port range.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:11.821">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-NET-01" name="Unauthorized connection attempts on open ports" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        Receiving unauthorized connections to open ports makes systems vulnerable to attacks. To
                        avoid this, access to the network must be as restricted as possible, so that only the necessary
                        ports are open and the minimum inbound traffic is accepted.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Check that each Azure resources have got their Network Security Groups.&lt;/li&gt;
                            &lt;li&gt;Check that a set of these groups achieve with the principle of the least
                            privilege.&lt;/li&gt;
                            &lt;li&gt;Check that the inbound/outbound security rules are enabled and correctly
                            configured.&lt;/li&gt;
                            &lt;li&gt;In &amp;quot;Inbound security rules&amp;quot;, check that all the traffic from
                            0.0.0.0/0&amp;nbsp;is blocked.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:11.458">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="AZ-A09" name="Apply RBAC with pre-defined policies added into groups or roles" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Define and create groups that relate to job functions (administrators, developers, accounting,
                        etc.) and assign the relevant permissions for each group, and then assign IAM users to those
                        groups.&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &amp;nbsp;&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        All the users in an IAM group inherit the permissions assigned to the group. That way, you can
                        make changes for everyone in a group in just one place. As people move around in your company,
                        you can simply change what IAM group their IAM user belongs to. This method is known as Role
                        Based Access Control (RBAC).&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Remove a user from a group:&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;ol&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                        &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                        &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Click on the user name. All the groups the user belongs are there.&lt;/li&gt;
                        &lt;li&gt;Choose the group and &amp;quot;Remove&amp;quot;.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/ol&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Create a group and add user:&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;ol&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                        &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                        &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All groups&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Click &amp;quot;New Group&amp;quot; and fill the information.&lt;/li&gt;
                        &lt;li&gt;Search and add the user.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Create a group and add members in Azure Active Directory" url="https://docs.microsoft.com/en-us/azure/active-directory/active-directory-groups-create-azure-portal"/>
            <reference name="MS Azure - Use Role-Based Access Control to manage access to your Azure subscription resources" url="https://docs.microsoft.com/en-us/azure/active-directory/role-based-access-control-configure"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each user has got assigned the correct groups.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All groups&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each group has got assigned the correct roles.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:11.725">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-A11" name="Configure roles for the Cloud Service" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Define and create the roles for the Azure Cloud Service. For each role, define the permissions and also configure how that role runs. When you launch an Azure instance, you shall specify a role for the instance as a launch parameter. Applications that run on the Cloud instance use the role's credentials when they access Azure resources. This role's permissions determine what the application is allowed to do.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Configure an Azure cloud service from Solution Explorer in Visual Studio.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Use Role-Based Access Control to manage access to your Azure subscription resources" url="https://docs.microsoft.com/en-us/azure/active-directory/role-based-access-control-configure"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that the roles for the Cloud Service are well assigned.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:11.726">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-M01" name="Create alerts for changes on Activity Logs configuration" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Create alerts for the Activity Logs changes to monitor, audit and notify about the changes to the correspondent personnel. It's vital that these unauthorized changes are detected.&lt;/p&gt;&lt;p&gt;Checklist:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Ensure that Activity Log Alert exists for:&amp;nbsp;&lt;ul&gt;&lt;li&gt;Create Policy Assignment&lt;/li&gt;&lt;li&gt;Delete Policy Assignment&lt;/li&gt;&lt;li&gt;Create or Update Network Security Group&lt;/li&gt;&lt;li&gt;Delete Network Security Group&lt;/li&gt;&lt;li&gt;Create or Update Network Security Group Rule&lt;/li&gt;&lt;li&gt;Delete Network Security Group Rule&lt;/li&gt;&lt;li&gt;Create or Update Security Solution&lt;/li&gt;&lt;li&gt;Delete Security Solution&lt;/li&gt;&lt;li&gt;Create or Update or Delete SQL Server Firewall Rule&lt;br&gt;&amp;nbsp;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;Remediation:&lt;/strong&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Go to Monitor&lt;/li&gt;&lt;li&gt;Select Alerts&lt;ol&gt;&lt;li&gt;For each one of the elements in the checklist, click On New Alert Rule&lt;ol&gt;&lt;li&gt;Under Scope, click Select resource&lt;/li&gt;&lt;li&gt;Select the appropriate subscription under Filter by subscription&lt;/li&gt;&lt;li&gt;Select Policy Assignment under Filter by resource type&lt;/li&gt;&lt;li&gt;Select All for Filter by location&lt;/li&gt;&lt;li&gt;Click on the subscription resource from the entries populated under Resource&lt;/li&gt;&lt;li&gt;Verify Selection preview shows All Policy assignment (policyAssignments) and your selected subscription name&lt;/li&gt;&lt;li&gt;Click Done&lt;/li&gt;&lt;li&gt;Under Condition click Add Condition&lt;/li&gt;&lt;li&gt;Select the corresponding element from the checklist&lt;/li&gt;&lt;li&gt;Click Done&lt;/li&gt;&lt;li&gt;Under Action group, select Add action groups and complete creation process or select appropriate action group&lt;/li&gt;&lt;li&gt;Under Alert rule details, enter Alert rule name and Description&lt;/li&gt;&lt;li&gt;Select appropriate resource group to save the alert to&lt;/li&gt;&lt;li&gt;Check Enable alert rule upon creation checkbox&lt;/li&gt;&lt;li&gt;Click Create alert rule&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;/ol&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Create activity log alerts" url="https://docs.microsoft.com/en-us/azure/monitoring-and-diagnostics/monitoring-activity-log-alerts"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5.2.1" supportedStandardRef="cis-azure-standard"/>
            <standard ref="5.2.1" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="5.2.10" supportedStandardRef="cis-azure-standard"/>
            <standard ref="5.2.10" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="5.2.2" supportedStandardRef="cis-azure-standard"/>
            <standard ref="5.2.2" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="5.2.3" supportedStandardRef="cis-azure-standard"/>
            <standard ref="5.2.3" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="5.2.4" supportedStandardRef="cis-azure-standard"/>
            <standard ref="5.2.4" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="5.2.5" supportedStandardRef="cis-azure-standard"/>
            <standard ref="5.2.5" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="5.2.6" supportedStandardRef="cis-azure-standard"/>
            <standard ref="5.2.6" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="5.2.7" supportedStandardRef="cis-azure-standard"/>
            <standard ref="5.2.7" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="5.2.8" supportedStandardRef="cis-azure-standard"/>
            <standard ref="5.2.8" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="5.2.9" supportedStandardRef="cis-azure-standard"/>
            <standard ref="5.2.9" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="LT-4" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Go to "Monitor" and then to "Alerts".&lt;/li&gt;&lt;li&gt;Check that there is any rule to alert when the Activity Logs configuration changes.&lt;/li&gt;&lt;li&gt;Check if these rules are enabled.&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:11.348">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-A03" name="Create Individual Accounts for the administrator users" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Create an individual account for the administrator users and with this new accounts By creating individual Azure users for people accessing your account, you can give each Azure user a unique set of security credentials.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The administrator accounts shall be used for the administrative actions and for giving or revoke credentials to the user's account. The administrator account shall be not used as a normal user account. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt; 
  &lt;li&gt;Select Azure Active Directory.&lt;/li&gt; 
  &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt; 
  &lt;li&gt;Select &amp;quot;Add New User&amp;quot;.&lt;/li&gt; 
  &lt;li&gt;Fill the required information and click &amp;quot;Create&amp;quot;.&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt; 
&lt;div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Add new users to Azure Active Directory" url="https://docs.microsoft.com/en-us/azure/active-directory/add-users-azure-active-directory"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each user has got a user account assigned.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:11.726">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-A10" name="Create mechanisms to ensure the principle of least privilege is applied" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Create the mechanisms to review periodically the group and user permissions to ensure the least privilege for the user accounts. Granting least privilege ensures that users only have the permissions required to complete their jobs rather than additional privileges that are not required. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Following this model ensures that, should an account be compromised, the blast radius of damage is limited&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Allocate privileges via groups or roles via the recommendation in "Use RBAC with pre-defined policies added into groups or roles".&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt; 
&lt;div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Create a group and add members in Azure Active Directory" url="https://docs.microsoft.com/en-us/azure/active-directory/active-directory-groups-create-azure-portal"/>
            <reference name="MS Azure - Use Role-Based Access Control to manage access to your Azure subscription resources" url="https://docs.microsoft.com/en-us/azure/active-directory/role-based-access-control-configure"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that the principle of least privilege is achieved in the assignation of roles and
                            groups to the users.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:11.726">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-IDS-IPS" name="Deploy network-based IDS/IPS" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Deploy network-based intrusion detection/intrusion prevention systems (IDS/IPS)&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Select an offer from Azure Marketplace that supports IDS/IPS functionality with payload inspection capabilities. If intrusion detection and/or prevention based on payload inspection is not a requirement, Azure Firewall with Threat Intelligence can be used. Azure Firewall Threat intelligence-based filtering can alert and deny traffic to and from known malicious IP addresses and domains. The IP addresses and domains are sourced from the Microsoft Threat Intelligence feed.&lt;/p&gt; 
&lt;p&gt;Deploy the firewall solution of your choice at each of your organization's network boundaries to detect and/or deny malicious traffic.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Set up the network&lt;/p&gt; 
&lt;p&gt;First, create a resource group to contain the resources needed to deploy the firewall. Then create a VNet, subnets, and a test server.&lt;br&gt; For more information please see Reference URL.&lt;/p&gt; 
&lt;p&gt;Deploy the firewall&lt;/p&gt; 
&lt;p&gt;Deploy the firewall into the VNet.&lt;/p&gt; 
&lt;p&gt;1. On the Azure portal menu or from the Home page, select Create a resource.&lt;/p&gt; 
&lt;p&gt;2. Type firewall in the search box and press Enter.&lt;/p&gt; 
&lt;p&gt;3. Select Firewall and then select Create.&lt;/p&gt; 
&lt;p&gt;4. On the Create a Firewall page, use the following values to configure the firewall:&lt;/p&gt; 
&lt;p&gt;Subscription: &lt;br&gt; Resource group: Test-FW-RG&lt;br&gt; Name: Test-FW01&lt;br&gt; Location: Select the same location that you used previously&lt;br&gt; Choose a virtual network: Use existing: Test-FW-VN&lt;br&gt; Public IP address: Add new&lt;br&gt; Name: fw-pip&lt;/p&gt; 
&lt;p&gt;5. Select Review + create.&lt;/p&gt; 
&lt;p&gt;6. Review the summary, and then select Create to create the firewall.&lt;/p&gt; 
&lt;p&gt;This will take a few minutes to deploy.&lt;/p&gt; 
&lt;p&gt;7. After deployment completes, go to the Test-FW-RG resource group, and select the Test-FW01 firewall.&lt;/p&gt; 
&lt;p&gt;8. Note the firewall private and public IP addresses. You will use these addresses later.&lt;/p&gt; 
&lt;p&gt;Create a default route&lt;/p&gt; 
&lt;p&gt;For the Workload-SN subnet, configure the outbound default route to go through the firewall.&lt;/p&gt; 
&lt;p&gt;1. On the Azure portal menu, select All services or search for and select All services from any page.&lt;/p&gt; 
&lt;p&gt;2. Under Networking, select Route tables.&lt;/p&gt; 
&lt;p&gt;3. Select Add.&lt;/p&gt; 
&lt;p&gt;4. For Name, type Firewall-route.&lt;/p&gt; 
&lt;p&gt;5. For Subscription, select your subscription.&lt;/p&gt; 
&lt;p&gt;6. For Resource group, select Test-FW-RG.&lt;/p&gt; 
&lt;p&gt;7. For Location, select the same location that you used previously.&lt;/p&gt; 
&lt;p&gt;8. Select Create.&lt;/p&gt; 
&lt;p&gt;9. Select Refresh, and then select the Firewall-route route table.&lt;/p&gt; 
&lt;p&gt;10. Select Subnets and then select Associate.&lt;/p&gt; 
&lt;p&gt;11. Select Virtual network &amp;gt; Test-FW-VN.&lt;/p&gt; 
&lt;p&gt;12. For Subnet, select Workload-SN. Make sure that you select only the Workload-SN subnet for this route, otherwise your firewall will not work correctly.&lt;/p&gt; 
&lt;p&gt;13. Select OK.&lt;/p&gt; 
&lt;p&gt;14. Select Routes and then select Add.&lt;/p&gt; 
&lt;p&gt;15. For Route name, type fw-dg.&lt;/p&gt; 
&lt;p&gt;16. For Address prefix, type 0.0.0.0/0.&lt;/p&gt; 
&lt;p&gt;17. For Next hop type, select Virtual appliance.&lt;/p&gt; 
&lt;p&gt;Azure Firewall is actually a managed service, but virtual appliance works in this situation.&lt;/p&gt; 
&lt;p&gt;18. For Next hop address, type the private IP address for the firewall that you noted previously.&lt;/p&gt; 
&lt;p&gt;19. Select OK.&lt;/p&gt; 
&lt;p&gt;Configure an application rule&lt;/p&gt; 
&lt;p&gt;This is the application rule that allows outbound access to www.google.com.&lt;/p&gt; 
&lt;p&gt;1. Open the Test-FW-RG, and select the Test-FW01 firewall.&lt;br&gt; 2. On the Test-FW01 page, under Settings, select Rules.&lt;br&gt; 3. Select the Application rule collection tab.&lt;br&gt; 4. Select Add application rule collection.&lt;br&gt; 5. For Name, type App-Coll01.&lt;br&gt; 6. For Priority, type 200.&lt;br&gt; 7. For Action, select Allow.&lt;br&gt; 8. Under Rules, Target FQDNs, for Name, type Allow-Google.&lt;br&gt; 9. For Source type, select IP address.&lt;br&gt; 10. For Source, type 10.0.2.0/24.&lt;br&gt; 11. For Protocol:port, type http, https.&lt;br&gt; 12. For Target FQDNS, type www.google.com&lt;br&gt; 13. Select Add.&lt;/p&gt; 
&lt;p&gt;Azure Firewall includes a built-in rule collection for infrastructure FQDNs that are allowed by default. These FQDNs are specific for the platform and cannot be used for other purposes. For more information, see Infrastructure FQDNs.&lt;/p&gt; 
&lt;p&gt;Configure a network rule&lt;/p&gt; 
&lt;p&gt;This is the network rule that allows outbound access to two IP addresses at port 53 (DNS).&lt;/p&gt; 
&lt;p&gt;1. Select the Network rule collection tab.&lt;/p&gt; 
&lt;p&gt;2. Select Add network rule collection.&lt;/p&gt; 
&lt;p&gt;3. For Name, type Net-Coll01.&lt;/p&gt; 
&lt;p&gt;4. For Priority, type 200.&lt;/p&gt; 
&lt;p&gt;5. For Action, select Allow.&lt;/p&gt; 
&lt;p&gt;6. Under Rules, IP addresses, for Name, type Allow-DNS.&lt;/p&gt; 
&lt;p&gt;7. For Protocol, select UDP.&lt;/p&gt; 
&lt;p&gt;8. For Source type, select IP address.&lt;/p&gt; 
&lt;p&gt;9. For Source, type 10.0.2.0/24.&lt;/p&gt; 
&lt;p&gt;10. For Destination type select IP address.&lt;/p&gt; 
&lt;p&gt;11. For Destination address, type 209.244.0.3,209.244.0.4&lt;/p&gt; 
&lt;p&gt;These are public DNS servers operated by CenturyLink.&lt;/p&gt; 
&lt;p&gt;12. For Destination Ports, type 53.&lt;/p&gt; 
&lt;p&gt;13. Select Add.&lt;/p&gt; 
&lt;p&gt;Configure a DNAT rule&lt;/p&gt; 
&lt;p&gt;This rule allows you to connect a remote desktop to the Srv-Work virtual machine through the firewall.&lt;/p&gt; 
&lt;p&gt;1. Select the NAT rule collection tab.&lt;br&gt; 2. Select Add NAT rule collection.&lt;br&gt; 3. For Name, type rdp.&lt;br&gt; 4. For Priority, type 200.&lt;br&gt; 5. Under Rules, for Name, type rdp-nat.&lt;br&gt; 6. For Protocol, select TCP.&lt;br&gt; 7. For Source type, select IP address.&lt;br&gt; 8. For Source, type *.&lt;br&gt; 9. For Destination address, type the firewall public IP address.&lt;br&gt; 10. For Destination Ports, type 3389.&lt;br&gt; 11. For Translated address, type the Srv-work private IP address.&lt;br&gt; 12. For Translated port, type 3389.&lt;br&gt; 13. Select Add.&lt;/p&gt; 
&lt;p&gt;Change the primary and secondary DNS address for the Srv-Work network interface&lt;/p&gt; 
&lt;p&gt;For testing purposes in this tutorial, configure the server's primary and secondary DNS addresses. This is not a general Azure Firewall requirement.&lt;/p&gt; 
&lt;p&gt;1. On the Azure portal menu, select Resource groups or search for and select Resource groups from any page. Select the Test-FW-RG resource group.&lt;br&gt; 2. Select the network interface for the Srv-Work virtual machine.&lt;br&gt; 3. Under Settings, select DNS servers.&lt;br&gt; 4. Under DNS servers, select Custom.&lt;br&gt; 5. Type 209.244.0.3 in the Add DNS server text box, and 209.244.0.4 in the next text box.&lt;br&gt; 6. Select Save.&lt;br&gt; 7. Restart the Srv-Work virtual machine.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Tutorial: Deploy and configure Azure Firewall using the Azure portal" url="https://docs.microsoft.com/en-us/azure/firewall/tutorial-firewall-deploy-portal"/>
          </references>
          <standards>
            <standard ref="NS-3" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="NS-4" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Test the firewall&lt;/p&gt;&lt;p&gt;Now, test the firewall to confirm that it works as expected.&lt;/p&gt;&lt;p&gt;1. Connect a remote desktop to firewall public IP address and sign in to the Srv-Work virtual machine.&lt;/p&gt;&lt;p&gt;2. Open Internet Explorer and browse to https://www.google.com.&lt;/p&gt;&lt;p&gt;3. Select OK &amp;gt; Close on the Internet Explorer security alerts.&lt;/p&gt;&lt;p&gt;You should see the Google home page.&lt;/p&gt;&lt;p&gt;4. Browse to https://www.microsoft.com.&lt;/p&gt;&lt;p&gt;You should be blocked by the firewall.LT-3&lt;/p&gt;&lt;p&gt;So now you've verified that the firewall rules are working:&lt;/p&gt;&lt;p&gt;- You can browse to the one allowed FQDN, but not to any others.&lt;br&gt;- You can resolve DNS names using the configured external DNS server.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:11.349">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-ENABLE-ALERTS" name="Enable alerts for anomalous activities" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Enable alerts for anomalous activities 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  Azure Security Center generates detailed security alerts and recommendations. You can view them in the portal or through programmatic tools. You may also need to export some or all of this information for tracking with other monitoring tools in your environment. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Continuous export lets you fully customize what will be exported, and where it will go. For example, you can configure it so that: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  All high severity alerts are sent to an Azure Event Hub 
&lt;/div&gt; 
&lt;div&gt;
  All medium or higher severity findings from vulnerability assessment scans of your SQL servers are sent to a specific Log Analytics workspace 
&lt;/div&gt; 
&lt;div&gt;
  Specific recommendations are delivered to an Event Hub or Log Analytics workspace whenever they're generated 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  Set up a continuous export 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  You can configure continuous export from the Security Center pages in Azure portal, via the Security Center REST API, or at scale using the supplied Azure Policy templates. Select the appropriate tab below for details of each. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Configure continuous export from the Security Center pages in Azure portal 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The steps below are necessary whether you're setting up a continuous export to Log Analytics workspace or Azure Event Hubs. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  1. From Security Center's sidebar, select Pricing &amp;amp; settings. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  2. Select the specific subscription for which you want to configure the data export. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  3. From the sidebar of the settings page for that subscription, select Continuous Export. 
&lt;/div&gt; 
&lt;div&gt;
  Here you see the export options. There's a tab for each available export target. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  4. Select the data type you'd like to export and choose from the filters on each type (for example, export only high severity alerts). 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  5. Optionally, if your selection includes one of these four recommendations, you can include the vulnerability assessment findings together with them: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - Vulnerability Assessment findings on your SQL databases should be remediated 
&lt;/div&gt; 
&lt;div&gt;
  - Vulnerability Assessment findings on your SQL servers on machines should be remediated (Preview) 
&lt;/div&gt; 
&lt;div&gt;
  - Vulnerabilities in Azure Container Registry images should be remediated (powered by Qualys) 
&lt;/div&gt; 
&lt;div&gt;
  - Vulnerabilities in your virtual machines should be remediated 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  To include the findings with these recommendations, enable the include security findings option. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  6. From the "Export target" area, choose where you'd like the data saved. Data can be saved in a target on a different subscription (for example on a Central Event Hub instance or a central Log Analytics workspace). 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  7. Select Save. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Continuously export Security Center data" url="https://docs.microsoft.com/en-us/azure/security-center/continuous-export?tabs=azure-portal"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  View exported alerts and recommendations in Azure Monitor 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  In some cases, you may choose to view the exported Security Alerts and/or recommendations in Azure Monitor. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Azure Monitor provides a unified alerting experience for a variety of Azure alerts including Diagnostic Log, Metric alerts, and custom alerts based on Log Analytics workspace queries. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  To view alerts and recommendations from Security Center in Azure Monitor, configure an Alert rule based on Log Analytics queries (Log Alert): 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  1. From Azure Monitor's Alerts page, select New alert rule. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  2. In the create rule page, configure your new rule (in the same way you'd configure a log alert rule in Azure Monitor): 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - For Resource, select the Log Analytics workspace to which you exported security alerts and recommendations. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - For Condition, select Custom log search. In the page that appears, configure the query, look-back period, and frequency period. In the search query, you can type SecurityAlert or SecurityRecommendation to query the data types that Security Center continuously exports to as you enable the Continuous export to Log Analytics feature. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - Optionally, configure the Action Group that you'd like to trigger. Action groups can trigger email sending, ITSM tickets, WebHooks, and more. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  You'll now see new Azure Security Center alerts or recommendations (depending on your configured continuous export rules and the condition you defined in your Azure Monitor alert rule) in Azure Monitor alerts, with automatic triggering of an action group (if provided). 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:11.349">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-MONITOR6" name="Enable and use Traffic Analytics" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Enable and use Traffic Analytics 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  Traffic Analytics is a cloud-based solution that provides visibility into user and application activity in cloud networks. Traffic analytics analyzes Network Watcher network security group (NSG) flow logs to provide insights into traffic flow in your Azure cloud. With traffic analytics, you can: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - Visualize network activity across your Azure subscriptions and identify hot spots. 
&lt;/div&gt; 
&lt;div&gt;
  - Identify security threats to, and secure your network, with information such as open-ports, applications attempting Internet access, and virtual machines (VM) connecting to rogue networks. 
&lt;/div&gt; 
&lt;div&gt;
  - Understand traffic flow patterns across Azure regions and the Internet to optimize your network deployment for performance and capacity. 
&lt;/div&gt; 
&lt;div&gt;
  - Pinpoint network misconfigurations leading to failed connections in your network. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  Enable Network Watcher 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  To analyze traffic, you need to have an existing network watcher, or enable a network watcher in each region that you have NSGs that you want to analyze traffic for. Traffic analytics can be enabled for NSGs hosted in any of the supported regions. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Select a network security group 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Before enabling NSG flow logging, you must have a network security group to log flows for. If you don't have a network security group, see Create a network security group to create one. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  In Azure portal, go to Network watcher, and then select NSG flow logs. Select the network security group that you want to enable an NSG flow log for. 
&lt;/div&gt; 
&lt;div&gt;
  If you try to enable traffic analytics for an NSG that is hosted in any region other than the supported regions, you receive a "Not found" error. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Enable flow log settings 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Before enabling flow log settings, you must complete the following tasks: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Register the Azure Insights provider, if it's not already registered for your subscription: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Register-AzResourceProvider -ProviderNamespace Microsoft.Insights 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  If you don't already have an Azure Storage account to store NSG flow logs in, you must create a storage account. You can create a storage account with the command that follows. Before running the command, replace &amp;lt;replace-with-your-unique-storage-account-name&amp;gt; with a name that is unique across all Azure locations, between 3-24 characters in length, using only numbers and lower-case letters. You can also change the resource group name, if necessary. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  New-AzStorageAccount ` 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; -Location westcentralus ` 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; -Name &amp;lt;replace-with-your-unique-storage-account-name&amp;gt; ` 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; -ResourceGroupName myResourceGroup ` 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; -SkuName Standard_LRS ` 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; -Kind StorageV2 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Select the following options: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  1. Select On for Status 
&lt;/div&gt; 
&lt;div&gt;
  2. Select Version 2 for Flow Logs version. Version 2 contains flow-session statistics (Bytes and Packets) 
&lt;/div&gt; 
&lt;div&gt;
  3. Select an existing storage account to store the flow logs in. Ensure that your storage does not have "Data Lake Storage Gen2 Hierarchical Namespace Enabled" set to true. 
&lt;/div&gt; 
&lt;div&gt;
  4. Set Retention to the number of days you want to store data for. If you want to store the data forever, set the value to 0. You incur Azure Storage fees for the storage account. 
&lt;/div&gt; 
&lt;div&gt;
  5. Select On for Traffic Analytics Status. 
&lt;/div&gt; 
&lt;div&gt;
  6. Select processing interval. Based on your choice, flow logs will be collected from storage account and processed by Traffic Analytics. You can choose processing interval of every 1 hour or every 10 mins. 
&lt;/div&gt; 
&lt;div&gt;
  7. Select an existing Log Analytics (OMS) Workspace, or select Create New Workspace to create a new one. A Log Analytics workspace is used by Traffic Analytics to store the aggregated and indexed data that is then used to generate the analytics. If you select an existing workspace, it must exist in one of the supported regions and have been upgraded to the new query language. If you do not wish to upgrade an existing workspace, or do not have a workspace in a supported region, create a new one. For more information about query languages, see Azure Log Analytics upgrade to new log search. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Note: The log analytics workspace hosting the traffic analytics solution and the NSGs do not have to be in the same region. For example, you may have traffic analytics in a workspace in the West Europe region, while you may have NSGs in East US and West US. Multiple NSGs can be configured in the same workspace. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  8. Select Save. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Repeat the previous steps for any other NSGs for which you wish to enable traffic analytics for. Data from flow logs is sent to the workspace, so ensure that the local laws and regulations in your country/region permit data storage in the region where the workspace exists. If you have set different processing intervals for different NSGs, data will be collected at different intervals. For example: You can choose to enable processing interval of 10 mins for critical VNETs and 1 hour for noncritical VNETs. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  You can also configure traffic analytics using the Set-AzNetworkWatcherConfigFlowLog PowerShell cmdlet in Azure PowerShell. Run Get-Module -ListAvailable Az to find your installed version. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Traffic Analytics" url="https://docs.microsoft.com/en-us/azure/network-watcher/traffic-analytics"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="6.6" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  View traffic analytics 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  To view Traffic Analytics, search for Network Watcher in the portal search bar. Once inside Network Watcher, to explore traffic analytics and its capabilities, select Traffic Analytics from the left menu. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The dashboard may take up to 30 minutes to appear the first time because Traffic Analytics must first aggregate enough data for it to derive meaningful insights, before it can generate any reports. 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:11.349">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-DDOS-PROTECTION" name="Enable Azure DDoS Standard protection on your Azure Virtual Network" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Enable Azure DDoS Standard protection on your Azure Virtual Network&lt;/p&gt;&lt;p&gt;Rationale:&lt;br&gt;Enable Azure Distributed Denial of Service (DDoS) Standard protection on your Azure Virtual Network to guard against DDoS attacks.&lt;/p&gt;&lt;p&gt;Remediation:&lt;br&gt;Create a DDoS protection plan&lt;/p&gt;&lt;p&gt;1. Select Create a resource in the upper left corner of the Azure portal.&lt;/p&gt;&lt;p&gt;2. Search the term DDoS. When DDoS protection plan appears in the search results, select it.&lt;/p&gt;&lt;p&gt;3. Select Create.&lt;/p&gt;&lt;p&gt;4. Enter or select the following values, then select Create:&lt;/p&gt;&lt;p&gt;Name: Enter MyDdosProtectionPlan.&lt;br&gt;Subscription: Select your subscription.&lt;br&gt;Resource group: Select Create new and enter MyResourceGroup.&lt;br&gt;Location: Enter East US.&lt;/p&gt;&lt;p&gt;Enable DDoS protection for a new virtual network&lt;/p&gt;&lt;p&gt;1. Select Create a resource in the upper left corner of the Azure portal.&lt;/p&gt;&lt;p&gt;2. Select Networking, and then select Virtual network.&lt;/p&gt;&lt;p&gt;3. Enter or select the following values, accept the remaining defaults, and then select Create:&lt;/p&gt;&lt;p&gt;Name: Enter MyVnet.&lt;br&gt;Subscription: Select your subscription.&lt;br&gt;Resource group: Select Use existing, and then select MyResourceGroup&lt;br&gt;Location: Enter East US&lt;br&gt;DDoS Protection Standard: Select Enable. The plan you select can be in the same, or different subscription than the virtual network, but both subscriptions must be associated to the same Azure Active Directory tenant.&lt;/p&gt;&lt;p&gt;Enable DDoS protection for an existing virtual network&lt;/p&gt;&lt;p&gt;1. Create a DDoS protection plan by completing the steps in Create a DDoS protection plan, if you don't have an existing DDoS protection plan.&lt;br&gt;2. Select Create a resource in the upper left corner of the Azure portal.&lt;br&gt;3. Enter the name of the virtual network that you want to enable DDoS Protection Standard for in the Search resources, services, and docs box at the top of the portal. When the name of the virtual network appears in the search results, select it.&lt;br&gt;4. Select DDoS protection, under SETTINGS.&lt;br&gt;5. Select Standard. Under DDoS protection plan, select an existing DDoS protection plan, or the plan you created in step 1, and then select Save. The plan you select can be in the same, or different subscription than the virtual network, but both subscriptions must be associated to the same Azure Active Directory tenant.&lt;/p&gt;&lt;p&gt;Impact:&lt;br&gt;You cannot move a virtual network to another resource group or subscription when DDoS Standard is enabled for the virtual network. If you need to move a virtual network with DDoS Standard enabled, disable DDoS Standard first, move the virtual network, and then enable DDoS standard. After the move, the auto-tuned policy thresholds for all the protected public IP addresses in the virtual network are reset.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Quickstart: Create and configure Azure DDoS Protection Standard" url="https://docs.microsoft.com/en-us/azure/ddos-protection/manage-ddos-protection"/>
          </references>
          <standards>
            <standard ref="GS-9" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="NS-5" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Validate and test&lt;/p&gt;

	&lt;p&gt;First, check the details of your DDoS protection plan:&lt;/p&gt;

	&lt;p&gt;1. Select All services on the top, left of the portal.&lt;br /&gt;
2. Enter DDoS in the Filter box. When DDoS protection plans appear in the results, select it.&lt;br /&gt;
3. Select your DDoS protection plan from the list.&lt;/p&gt;

	&lt;p&gt;The MyVnet virtual network should be listed.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:11.349">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-SENTINEL" name="Enable Azure Sentinel" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Enable Azure Sentinel&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Microsoft Azure Sentinel is a scalable, cloud-native, security information event management (SIEM) and security orchestration automated response (SOAR) solution. Azure Sentinel delivers intelligent security analytics and threat intelligence across the enterprise, providing a single solution for alert detection, threat visibility, proactive hunting, and threat response.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Enable Azure Sentinel&lt;/p&gt; 
&lt;p&gt;1. Sign in to the Azure portal. Make sure that the subscription in which Azure Sentinel is created is selected.&lt;/p&gt; 
&lt;p&gt;2. Search for and select Azure Sentinel.&lt;/p&gt; 
&lt;p&gt;3. Select Add.&lt;/p&gt; 
&lt;p&gt;4. Select the workspace you want to use or create a new one. You can run Azure Sentinel on more than one workspace, but the data is isolated to a single workspace.&lt;/p&gt; 
&lt;p&gt;Note: Default workspaces created by Azure Security Center will not appear in the list; you cannot install Azure Sentinel on them.&lt;/p&gt; 
&lt;p&gt;Important: Once deployed on a workspace, Azure Sentinel does not currently support the moving of that workspace to other resource groups or subscriptions.&lt;/p&gt; 
&lt;p&gt;If you have already moved the workspace, disable all active rules under Analytics and re-enable them after five minutes. This should be effective in most cases, though, to reiterate, it is unsupported and undertaken at your own risk.&lt;/p&gt; 
&lt;p&gt;5. Select Add Azure Sentinel.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Quickstart: On-board Azure Sentinel" url="https://docs.microsoft.com/en-us/azure/sentinel/quickstart-onboard"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="NS-8" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure Azure Sentinel is enabled.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:11.726">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-L01" name="Enable diagnostic logs auditing for Microsoft Azure" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Diagnostic Logs capture activity to the data access plane while the Activity log is a subscription-level log for the control plane. Resource-level diagnostic logs provide insight into operations that were performed within that resource itself, for example, getting a secret from a Key Vault. Currently, 32 Azure resources support Diagnostic Logging (See the references section for a complete list), including Network Security Groups, Load Balancers, Key Vault, AD, Logic Apps and CosmosDB. The content of these logs varies by resource type. For example, Windows event system logs are a category of diagnostics logs for VMs, and blob, table, and queue logs are categories of diagnostics logs for storage accounts.&lt;/p&gt;&lt;p&gt;A number of back-end services were not configured to log and store Diagnostic Logs for certain activities or for a sufficient length. It is crucial that logging systems are correctly configured to log all relevant activities and retain those logs for a sufficient length of time. By default, Diagnostic Logs are not enabled. Given that the mean time to detection in an enterprise is 240 days, a minimum retention period of two years is recommended.&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation:&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;The specific steps for configuring resources within the Azure console vary depending on resource, but typically the steps are:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Go to the resource&lt;/li&gt;&lt;li&gt;Click on Diagnostic settings&lt;/li&gt;&lt;li&gt;In the blade that appears, click "Add diagnostic setting"&lt;/li&gt;&lt;li&gt;Configure the diagnostic settings&lt;/li&gt;&lt;li&gt;Click on Save&lt;/li&gt;&lt;/ol&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Enable diagnostics logging for web apps in Azure App Service" url="https://docs.microsoft.com/en-us/azure/app-service-web/web-sites-enable-diagnostic-log"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5.3" supportedStandardRef="cis-azure-standard"/>
            <standard ref="5.3" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="LT-4" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="LT-5" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Go to the resource&lt;/li&gt;&lt;li&gt;Click on Diagnostic settings&lt;/li&gt;&lt;li&gt;In the blade that appears, click "Add diagnostic setting"&lt;/li&gt;&lt;li&gt;Configure the diagnostic settings&lt;/li&gt;&lt;li&gt;Click on Save&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:11.727">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-A04" name="Enable MFA for Administrator &amp; Co Administrator accounts" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Enable multi-factor authentication (MFA) device enhances the security of the login process for the Administrator accounts. With MFA, users have a device that generates a unique authentication code (a one-time password, or OTP) and users must provide both their normal credentials (like their username and password) and the OTP. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The MFA device can either be a special piece of hardware, or it can be a virtual device. The recommendation for the Service Administrator &amp;amp; Co Administrator accounts is to use MFA to increase the level of security of the login process. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt; 
  &lt;li&gt;Select Azure Active Directory.&lt;/li&gt; 
  &lt;li&gt;Go into "Users and groups" &amp;gt; "All users".&lt;/li&gt; 
  &lt;li&gt;Select "Multi-Factor Authentication".&lt;/li&gt; 
  &lt;li&gt;Choose all the Service Administrator &amp;amp; Co Administrator accounts and enable MFA.&amp;nbsp;&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - How to require two-step verification for a user or group" url="https://docs.microsoft.com/en-us/azure/multi-factor-authentication/multi-factor-authentication-get-started-user-states"/>
          </references>
          <standards>
            <standard ref="IM-6" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="IM-7" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;Multi-Factor Authentication&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check all Administrator accounts have got the MFA flag enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:11.727">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-NSG-LOGS" name="Enable Network Security Group flow logs" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Enable Network Security Group (NSG) flow logs&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; A network security group (NSG) enables you to filter inbound traffic to, and outbound traffic from, a virtual machine (VM). You can log network traffic that flows through an NSG with Network Watcher's NSG flow log capability. &lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; How to enable NSG flow log&lt;/p&gt; 
&lt;p&gt;1. NSG flow log data is written to an Azure Storage account. To create an Azure Storage account, select + Create a resource at the top, left corner of the portal.&lt;/p&gt; 
&lt;p&gt;2. Select Storage, then select Storage account - blob, file, table, queue.&lt;/p&gt; 
&lt;p&gt;3. Enter, or select the following information, accept the remaining defaults, and then select Create.&lt;/p&gt; 
&lt;p&gt;Name: 3-24 characters in length, can only contain lowercase letters and numbers, and must be unique across all Azure Storage accounts.&lt;br&gt; Location: Select East US&lt;br&gt; Resource group: Select Use existing, and then select myResourceGroup&lt;/p&gt; 
&lt;p&gt;The storage account may take around minute to create. Don't continue with remaining steps until the storage account is created. In all cases, the storage account must be in the same region as the NSG.&lt;/p&gt; 
&lt;p&gt;4. In the top, left corner of portal, select All services. In the Filter box, type Network Watcher. When Network Watcher appears in the search results, select it.&lt;/p&gt; 
&lt;p&gt;5. Under LOGS, select NSG flow logs.&lt;/p&gt; 
&lt;p&gt;6. From the list of NSGs, select the NSG named myVm-nsg.&lt;/p&gt; 
&lt;p&gt;7. Under Flow logs settings, select On.&lt;/p&gt; 
&lt;p&gt;8. Select the flow logging version. Version 2 contains flow-session statistics (Bytes and Packets)&lt;/p&gt; 
&lt;p&gt;9. Select the storage account that you created in step 3.&lt;/p&gt; 
&lt;p&gt;Note: NSG Flow Logs do not work with storage accounts that have hierarchical namespace enabled.&lt;/p&gt; 
&lt;p&gt;10. In the top, left corner of portal, select All services. In the Filter box, type Network Watcher. When Network Watcher appears in the search results, select it.&lt;/p&gt; 
&lt;p&gt;11. Set Retention (days) to 5, and then select Save.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Tutorial: Log network traffic to and from a virtual machine using the Azure portal" url="https://docs.microsoft.com/en-us/azure/network-watcher/network-watcher-nsg-flow-logging-portal"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="6.5" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Download flow log&lt;/p&gt;

	&lt;p&gt;1. From Network Watcher, in the portal, select NSG flow logs under LOGS.&lt;/p&gt;

	&lt;p&gt;2. Select You can download flow logs from configured storage accounts.&lt;/p&gt;

	&lt;p&gt;3. Select the storage account that you configured in step 2 of Enable NSG flow log (Remediation section).&lt;/p&gt;

	&lt;p&gt;4. Under Blob service, select Containers, and then select the insights-logs-networksecuritygroupflowevent container.&lt;/p&gt;

	&lt;p&gt;5. In the container, navigate the folder hierarchy until you get to a PT1H.json file. Log files are written to a folder hierarchy that follows the following naming convention: https://{storageAccountName}.blob.core.windows.net/insights-logs-networksecuritygroupflowevent/resourceId=/SUBSCRIPTIONS/{subscriptionID}/RESOURCEGROUPS/{resourceGroupName}/PROVIDERS/MICROSOFT.NETWORK/NETWORKSECURITYGROUPS/{nsgName}/y={year}/m={month}/d={day}/h={hour}/m=00/macAddress={macAddress}/PT1H.json&lt;/p&gt;

	&lt;p&gt;6. Select ... to the right of the PT1H.json file and select Download.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:11.349">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-USER-MFA" name="Enable per-user MFA" issueId="" issueLink="" platform="" cost="0" risk="40" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Enable per-user MFA 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  Multi-factor authentication (MFA) is a process where a user is prompted during a sign-in event for additional forms of identification. This prompt could be to enter a code on their cellphone or to provide a fingerprint scan. When you require a second form of authentication, security is increased as this additional factor isn't something that's easy for an attacker to obtain or duplicate. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  To secure user sign-in events in Azure AD, you can require multi-factor authentication (MFA). Enabling Azure AD Multi-Factor Authentication using Conditional Access policies is the recommended approach to protect users. Conditional Access is an Azure AD Premium P1 or P2 feature that lets you apply rules to require MFA as needed in certain scenarios 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  For Azure AD free tenants without Conditional Access, you can use security defaults to protect users. Users are prompted for MFA as needed, but you can't define your own rules to control the behavior. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Features and licenses for Azure AD Multi-Factor Authentication" url="https://docs.microsoft.com/en-us/azure/active-directory/authentication/concept-mfa-licensing"/>
          </references>
          <standards>
            <standard ref="1.1.2" supportedStandardRef="cis-azure-standard"/>
            <standard ref="1.1.2" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="1.1.3" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="IM-6" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="IM-7" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  1. Log into the Azure portal as an owner. 
&lt;/div&gt; 
&lt;div&gt;
  2. Select Azure Active Directory. 
&lt;/div&gt; 
&lt;div&gt;
  3. Go into "Users and groups" &amp;gt; "All users". 
&lt;/div&gt; 
&lt;div&gt;
  4. Select "Multi-Factor Authentication". 
&lt;/div&gt; 
&lt;div&gt;
  5. Ensure your users have the MFA flag enabled. 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:11.727">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-FIREWALL3" name="Enable Threat intelligence-based filtering to alert and deny traffic" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Enable Threat intelligence-based filtering to alert and deny traffic&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Threat intelligence-based filtering can be enabled for your firewall to alert and deny traffic from/to known malicious IP addresses and domains. The IP addresses and domains are sourced from the Microsoft Threat Intelligence feed.&lt;br&gt; By default, threat intelligence-based filtering is enabled in alert mode. Azure recommends to enable it in alert and deny mode.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; By default, threat intelligence-based filtering is enabled in alert mode. You cannot turn off this feature or change the mode until the portal interface becomes available in your region.&lt;br&gt; You can then change the mode by selecting "Alert and deny" in the Azure portal interface.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; none&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Azure Firewall threat intelligence-based filtering" url="https://docs.microsoft.com/en-us/azure/firewall/threat-intel"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Testing&lt;/p&gt;

  &lt;p&gt;- Outbound testing - Outbound traffic alerts should be a rare occurrence, as it means that your environment has been compromised. To help test outbound alerts are working, a test FQDN has been created that triggers an alert. Use testmaliciousdomain.eastus.cloudapp.azure.com for your outbound tests.&lt;/p&gt;

  &lt;p&gt;- Inbound testing - You can expect to see alerts on incoming traffic if DNAT rules are configured on the firewall. This is true even if only specific sources are allowed on the DNAT rule and traffic is otherwise denied. Azure Firewall doesn't alert on all known port scanners; only on scanners that are known to also engage in malicious activity.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:11.349">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-SECURE-CONFIG" name="Establish secure configurations with Azure Policy" issueId="" issueLink="" platform="" cost="0" risk="42" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Establish secure configurations with Azure Policy&lt;/p&gt;&lt;p&gt;Rationale:&lt;br&gt;Azure Policy helps to enforce organizational standards and to assess compliance at-scale. Through its compliance dashboard, it provides an aggregated view to evaluate the overall state of the environment, with the ability to drill down to the per-resource, per-policy granularity. It also helps to bring your resources to compliance through bulk remediation for existing resources and automatic remediation for new resources.&lt;/p&gt;&lt;p&gt;Common use cases for Azure Policy include implementing governance for resource consistency, regulatory compliance, security, cost, and management. Policy definitions for these common use cases are already available in your Azure environment as built-ins to help you get started.&lt;/p&gt;&lt;p&gt;All Azure Policy data and objects are encrypted at rest.&lt;/p&gt;&lt;p&gt;Remediation:&lt;br&gt;Define and implement standard security configurations with Azure Policy&lt;/p&gt;&lt;p&gt;1. Use Azure Policy to put restrictions on the type of resources that can be created in your and in customer subscriptions using the following built-in policy definitions:&lt;br&gt;- Not allowed resource types&lt;br&gt;- Allowed resource types&lt;br&gt;You can also create custom Azure Policy definitions to restrict more granular resource settings.&lt;/p&gt;&lt;p&gt;2. Use built-in Azure Policy definitions as well as Azure Policy aliases in the "Microsoft.Network" namespace to create custom policies to alert, audit, and enforce system configurations. Additionally, develop a process and pipeline for managing policy exceptions.&lt;/p&gt;&lt;p&gt;3. Use Azure Policy [audit], [deny], and [deploy if not exist] to automatically enforce configurations for your Azure resources.&lt;/p&gt;&lt;p&gt;4. You can use recommendations from Azure Security Center or built-in Azure Policies, such as:&lt;br&gt;- There should be more than one owner assigned to your subscription&lt;br&gt;- Deprecated accounts with owner permissions should be removed from your subscription&lt;br&gt;- External accounts with owner permissions should be removed from your subscription&lt;/p&gt;&lt;p&gt;Impact:&lt;br&gt;It is important to validate a new policy works as intended before allowing it to change or block work. The validation must ensure only the intended resources are determined to be non-compliant and no compliant resources are incorrectly included (known as a false positive) in the results.&lt;br&gt;For this reason, your policy definitions should be as tightly defined and focused on the resources and the properties you need to evaluate for compliance as possible.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Tutorial: Create and manage policies to enforce compliance" url="https://docs.microsoft.com/en-us/azure/governance/policy/tutorials/create-and-manage"/>
            <reference name="Understand Azure Policy effects" url="https://docs.microsoft.com/en-us/azure/governance/policy/concepts/effects"/>
          </references>
          <standards>
            <standard ref="AM-2" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="GS-5" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;The recommended approach to validating a new policy definition is by following these steps:&lt;/p&gt;

	&lt;p&gt;- Tightly define your policy&lt;br /&gt;
- Audit your existing resources&lt;br /&gt;
- Audit new or updated resource requests&lt;br /&gt;
- Deploy your policy to resources&lt;br /&gt;
- Continuous monitoring&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:11.727">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="C-AZURE-COMMON1" name="Evaluate public IP addresses on a periodic basis" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Public IP Addresses provide tenant accounts with Internet connectivity for resources contained within the tenant. During the creation of certain resources in Azure, a Public IP Address may be created. All Public IP Addresses within the tenant should be periodically reviewed for accuracy and necessity.&lt;/p&gt;
&lt;p&gt;Rationale:&lt;/p&gt;
&lt;p&gt;Public IP Addresses allocated to the tenant should be periodically reviewed for necessity. Public IP Addresses that are not intentionally assigned and controlled present a publicly facing vector for threat actors and significant risk to the tenant.&lt;/p&gt;
&lt;p&gt;Remediation:&lt;/p&gt;
&lt;p&gt;Remediation will vary significantly depending on your organization's security requirements for the resources attached to each individual Public IP address&lt;/p&gt;
&lt;p&gt;Impact:&lt;/p&gt;
&lt;p&gt;None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Security Control v3: Network security" url="https://learn.microsoft.com/en-us/security/benchmark/azure/security-controls-v3-network-security"/>
            <reference name="az network public-ip" url="https://learn.microsoft.com/en-us/cli/azure/network/public-ip?view=azure-cli-latest"/>
          </references>
          <standards>
            <standard ref="6.7" supportedStandardRef="cis-azure-standard"/>
            <standard ref="NS-2" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;From Azure Portal&lt;br&gt;1. Open the All Resources blade&lt;br&gt;2. Click on Add Filter&lt;br&gt;3. In the Add Filter window, select the following:&lt;br&gt;Filter: Type&lt;br&gt;Operator: Equals&lt;br&gt;Value: Public IP address&lt;br&gt;4. Click the Apply button&lt;br&gt;5. For each Public IP address in the list, use Overview (or Properties) to review the "Associated to:" field and determine if the associated resource is still relevant to your tenant environment. If the associated resource is relevant, ensure that additional controls exist to mitigate risk (e.g. Firewalls, VPNs, Traffic Filtering, Virtual Gateway Appliances, Web Application Firewalls, etc.) on all subsequently attached resources.&lt;br&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;From Azure CLI&lt;br&gt;List all Public IP addresses:&lt;br&gt;az network public-ip list&lt;br&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;For each Public IP address in the output, review the "name" property and determine if &amp;nbsp;the associated resource is still relevant to your tenant environment. If the associated resource is relevant, ensure that additional controls exist to mitigate risk (e.g. Firewalls, VPNs, Traffic Filtering, Virtual Gateway Appliances, Web Application Firewalls, etc.) on all subsequently attached resources.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:11.728">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-L05" name="Export the Audit Logs to a storage account" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Export the information of Audit Logs to a storage account. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Go to "Monitor" and then to "Activity Logs".&lt;/li&gt; 
  &lt;li&gt;Push the button "Export".&lt;/li&gt; 
  &lt;li&gt;Select "All Regions".&lt;/li&gt; 
  &lt;li&gt;Select "Export to a storage account" and select your account.&lt;/li&gt; 
  &lt;li&gt;Select the "Retention (days)" as minimum 90 days.&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Enable diagnostics logging for web apps in Azure App Service" url="https://docs.microsoft.com/en-us/azure/app-service-web/web-sites-enable-diagnostic-log"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="6.5" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Activity Logs&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Push the button &amp;quot;Export&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;All Regions&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;Export to a storage account&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that all fields are correctly filled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:11.727">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-SUBSCRIPTIONS" name="Implement isolation using separate subscriptions" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Implement isolation using separate subscriptions&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; You can create an additional subscription for your Enterprise Agreement (EA), Microsoft Customer Agreement or Microsoft Partner Agreement billing account in the Azure portal. You may want an additional subscription to avoid hitting subscription limits, to create separate environments for security, or to isolate data for compliance reasons.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Create a subscription in the Azure portal&lt;/p&gt; 
&lt;p&gt;1. Sign in to the Azure portal.&lt;/p&gt; 
&lt;p&gt;2. Search for Subscriptions.&lt;/p&gt; 
&lt;p&gt;3. Select Add.&lt;/p&gt; 
&lt;p&gt;4. If you have access to multiple billing accounts, select the billing account for which you want to create the subscription.&lt;/p&gt; 
&lt;p&gt;5. Fill the form and click Create.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Create an additional Azure subscription" url="https://docs.microsoft.com/en-us/azure/cost-management-billing/manage/create-subscription"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that you have implemented isolation through separate subscriptions.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:11.727">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-LOAD-BALANCER3" name="Integrate Azure Firewall with Azure Standard Load Balancer" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Integrate Azure Firewall with Azure Standard Load Balancer&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; You can integrate an Azure Firewall into a virtual network with an Azure Standard Load Balancer (either public or internal).&lt;br&gt; Explicitly define internet connectivity and valid source IPs through outbound rules and network security groups with your Load Balancer to use Microsoft's threat intelligence for protecting your web applications.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; The preferred design is to integrate an internal load balancer with your Azure firewall, as this is a much simpler design. You can use a public load balancer if you already have one deployed and you want to keep it in place. However, you need to be aware of an asymmetric routing issue that can break functionality with the public load balancer scenario.&lt;/p&gt; 
&lt;p&gt;Public load balancer&lt;/p&gt; 
&lt;p&gt;With a public load balancer, the load balancer is deployed with a public frontend IP address.&lt;/p&gt; 
&lt;p&gt;Asymmetric routing&lt;/p&gt; 
&lt;p&gt;Asymmetric routing is where a packet takes one path to the destination and takes another path when returning to the source. This issue occurs when a subnet has a default route going to the firewall's private IP address and you're using a public load balancer. In this case, the incoming load balancer traffic is received via its public IP address, but the return path goes through the firewall's private IP address. Since the firewall is stateful, it drops the returning packet because the firewall isn't aware of such an established session.&lt;/p&gt; 
&lt;p&gt;Fix the routing issue&lt;/p&gt; 
&lt;p&gt;When you deploy an Azure Firewall into a subnet, one step is to create a default route for the subnet directing packets through the firewall's private IP address located on the AzureFirewallSubnet.&lt;br&gt; When you introduce the firewall into your load balancer scenario, you want your Internet traffic to come in through your firewall's public IP address. From there, the firewall applies its firewall rules and NATs the packets to your load balancer's public IP address. This is where the problem occurs. Packets arrive on the firewall's public IP address, but return to the firewall via the private IP address (using the default route). To avoid this problem, create an additional host route for the firewall's public IP address. Packets going to the firewall's public IP address are routed via the Internet. This avoids taking the default route to the firewall's private IP address.&lt;/p&gt; 
&lt;p&gt;Internal load balancer&lt;/p&gt; 
&lt;p&gt;With an internal load balancer, the load balancer is deployed with a private frontend IP address.&lt;br&gt; There's no asymmetric routing issue with this scenario. The incoming packets arrive at the firewall's public IP address, get translated to the load balancer's private IP address, and then returns to the firewall's private IP address using the same return path.&lt;br&gt; So, you can deploy this scenario similar to the public load balancer scenario, but without the need for the firewall public IP address host route.&lt;/p&gt; 
&lt;p&gt;Note: The virtual machines in the backend pool will not have outbound internet connectivity with this configuration. For more information please see Reference URLs.&lt;/p&gt; 
&lt;p&gt;Additional security&lt;/p&gt; 
&lt;p&gt;To further enhance the security of your load-balanced scenario, you can use network security groups (NSGs).&lt;br&gt; For example, you can create an NSG on the backend subnet where the load-balanced virtual machines are located. Allow incoming traffic originating from the firewall IP address/port.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; You need to be aware of an asymmetric routing issue that can break functionality with the public load balancer scenario.&lt;br&gt; The virtual machines in the backend pool will not have outbound internet connectivity with this configuration. For more information please see Reference URLs.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Integrate Azure Firewall with Azure Standard Load Balancer" url="https://docs.microsoft.com/en-us/azure/firewall/integrate-lb"/>
            <reference name="Tutorial: Deploy and configure Azure Firewall using the Azure portal" url="https://docs.microsoft.com/en-us/azure/firewall/tutorial-firewall-deploy-portal"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that Azure Firewall is integrated with Azure Standard Load Balancer.&lt;br /&gt;
Test the firewall to confirm that it works as expected, following the testing steps for firewall deployment.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:11.349">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-N09" name="Isolate Azure instances into different VNets" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Specify a VNet for the Azure instance as a launch parameter. Applications that run on the Cloud instance can use the VNet security configuration when they access Azure resources.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  You can configure an Azure cloud service from Solution Explorer in Visual Studio. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Create a virtual network with multiple subnets" url="https://docs.microsoft.com/en-us/azure/virtual-network/virtual-networks-create-vnet-arm-pportal"/>
          </references>
          <standards>
            <standard ref="GS-4" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that the Azure instances are into different VNets.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:11.350">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-LOAD-BALANCER1" name="Maintain an inventory of administrative accounts for Azure Load Balancer" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Maintain an inventory of administrative accounts for Azure Load Balancer&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Azure role-based access control (Azure RBAC) allows you to manage access to Azure resources such as your Load Balancer through role assignments. Assign these roles to users, groups service principals, and managed identities.&lt;br&gt; Inventory Pre-defined and built-in roles for certain resources with tools like Azure CLI, Azure PowerShell or the Azure portal.&lt;br&gt; It is highly recommended by Microsoft to maintain an inventory of administrative accounts.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; How to get a directory role in Azure AD with PowerShell&lt;/p&gt; 
&lt;p&gt;Get-AzureADDirectoryRole [-Filter ] [-InformationAction ] [-InformationVariable ] []&lt;/p&gt; 
&lt;p&gt;Get-AzureADDirectoryRole -ObjectId  [-InformationAction ] [-InformationVariable ] []&lt;/p&gt; 
&lt;p&gt;How to get members of a directory role in Azure AD with PowerShell&lt;/p&gt; 
&lt;p&gt;Get-AzureADDirectoryRoleMember -ObjectId  [-InformationAction ] [-InformationVariable ] []&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Azure built-in roles" url="https://docs.microsoft.com/en-us/azure/role-based-access-control/built-in-roles"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that you maintain an inventory of administrative accounts for Azure Load Balancer&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:11.350">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-A07" name="Recertify user access" issueId="" issueLink="" platform="" cost="0" risk="40" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Do regular reviews of accounts on the system and verify that it doesn't exist stoled or fake accounts. With this process is ensured that there are not compromised accounts by former employees or by attackers.&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation:&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;At least every 90 days complete the following:&amp;nbsp;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Log in to the Azure portal as an owner.&lt;/li&gt;&lt;li&gt;Select Azure Active Directory.&lt;/li&gt;&lt;li&gt;Go into "Users and groups" &amp;gt; "All users".&lt;/li&gt;&lt;li&gt;For any user that should not exist:&lt;/li&gt;&lt;li&gt;Select the user.&lt;/li&gt;&lt;li&gt;Click "Delete".&lt;/li&gt;&lt;/ol&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Assign a user or group to an enterprise app in Azure Active Directory" url="https://docs.microsoft.com/en-us/azure/active-directory/active-directory-coreapps-assign-user-azure-portal"/>
          </references>
          <standards>
            <standard ref="PA-4" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Log in to the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each user has got an assigned account.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:11.727">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-A01" name="Register a Security contact for your Azure account" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Provide the security contact details for the Azure subscription. Microsoft Security Response Center (MSRC) performs security monitoring of the Azure network and infrastructure and receives threat intelligence and abuse complaints from third parties. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Microsoft will use this information provided to contact if the MSRC discovers that customer data has been accessed by an unlawful or unauthorized party. Also, this provides the means of ensuring these advisories are routed to the security team, especially if a distribution email address is used.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Access &amp;quot;Azure Security Center&amp;quot;.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;In the &amp;quot;Recommendations&amp;quot; tab choose &amp;quot;Provide security contact details&amp;quot;.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Once filled, save changes.&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Provide security contact details in Azure Security Center" url="https://docs.microsoft.com/en-us/azure/security-center/security-center-provide-security-contact-details"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Access &amp;quot;Azure Security Center&amp;quot;.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;In the &amp;quot;Recommendations&amp;quot; tab choose &amp;quot;Provide security
                            contact details&amp;quot;.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Check that all fields are filled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:11.727">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-REPOS-GIT" name="Securely store configuration of Azure resources" issueId="" issueLink="" platform="" cost="0" risk="42" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Securely store configuration of Azure resources&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; If using custom Azure Policy definitions, use Azure DevOps or Azure Repos to securely store and manage your code.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Use version control to save your work and coordinate code changes across your team. Even if you are just a single developer, version control helps you stay organized as you fix bugs and develop new features. Version control keeps a history of your development so that you can review and even rollback to any version of your code with ease.&lt;/p&gt; 
&lt;p&gt;Version control workflow&lt;/p&gt; 
&lt;p&gt;Version control has a general workflow that most developers use when writing code and sharing it with the team.&lt;/p&gt; 
&lt;p&gt;These steps are:&lt;br&gt; 1. Get a local copy of code if they do not have one yet.&lt;br&gt; 2. Make changes to code to fix bugs or add new features.&lt;br&gt; 3. Once the code is ready, make it available for review by your team.&lt;br&gt; 4. Once the code is reviewed, merge it into the team's shared codebase.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Azure Repos Git tutorial" url="https://docs.microsoft.com/en-us/azure/devops/repos/git/gitworkflow?view=azure-devops"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that the configuration of Azure resources is securely stored.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:11.350">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-JIT-VM-ACCESS" name="Secure your management ports with just-in-time VM access" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Secure your management ports with just-in-time (JIT) VM access&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Threat actors actively hunt accessible machines with open management ports, like RDP or SSH. All of your virtual machines are potential targets for an attack. When a VM is successfully compromised, it's used as the entry point to attack further resources within your environment.&lt;/p&gt; 
&lt;p&gt;As with all cybersecurity prevention techniques, your goal should be to reduce the attack surface. In this case, that means having fewer open ports, especially management ports.&lt;br&gt; Your legitimate users also use these ports, so it's not practical to keep them closed.&lt;br&gt; To solve this dilemma, Azure Security Center offers JIT. With JIT, you can lock down the inbound traffic to your VMs, reducing exposure to attacks while providing easy access to connect to VMs when needed.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; How to Enable JIT on your VMs from Azure Security Center&lt;/p&gt; 
&lt;p&gt;From Security Center, you can enable and configure the JIT VM access.&lt;/p&gt; 
&lt;p&gt;1. Open the Azure Defender dashboard and from the advanced protection area, select Just-in-time VM access.&lt;/p&gt; 
&lt;p&gt;The Just-in-time VM access page opens with your VMs grouped into the following tabs:&lt;/p&gt; 
&lt;p&gt;a. Configured - VMs that have been already been configured to support just-in-time VM access. For each VM, the configured tab shows:&lt;br&gt; i. The number of approved JIT requests in the last seven days&lt;br&gt; ii. The last access date and time&lt;br&gt; iii. The connection details configured&lt;br&gt; iv. The last user&lt;/p&gt; 
&lt;p&gt;b. Not configured - VMs without JIT enabled, but that can support JIT. Microsoft recommends that you enable JIT for these VMs.&lt;/p&gt; 
&lt;p&gt;c. Unsupported - VMs without JIT enabled and which don't support the feature. Your VM might be in this tab for the following reasons:&lt;br&gt; i. Missing network security group (NSG) - JIT requires an NSG to be configured&lt;br&gt; ii. Classic VM - JIT supports VMs that are deployed through Azure Resource Manager, not 'classic deployment'. Learn more about classic vs Azure Resource Manager deployment models.&lt;br&gt; iii. Other - Your VM might be in this tab if the JIT solution is disabled in the security policy of the subscription or the resource group.&lt;/p&gt; 
&lt;p&gt;2. From the Not configured tab, mark the VMs to protect with JIT and select Enable JIT on VMs.&lt;/p&gt; 
&lt;p&gt;The JIT VM access page opens listing the ports that Security Center recommends protecting:&lt;/p&gt; 
&lt;p&gt;- 22 - SSH&lt;br&gt; - 3389 - RDP&lt;br&gt; - 5985 - WinRM&lt;br&gt; - 5986 - WinRM&lt;/p&gt; 
&lt;p&gt;To accept the default settings, select Save.&lt;/p&gt; 
&lt;p&gt;3. To customize the JIT options:&lt;/p&gt; 
&lt;p&gt;- Add custom ports with the Add button.&lt;br&gt; - Modify one of the default ports, by selecting it from the list.&lt;/p&gt; 
&lt;p&gt;For each port (custom and default) the Add port configuration pane offers the following options:&lt;/p&gt; 
&lt;p&gt;- Protocol- The protocol that is allowed on this port when a request is approved&lt;br&gt; - Allowed source IPs- The IP ranges that are allowed on this port when a request is approved&lt;br&gt; - Maximum request time- The maximum time window during which a specific port can be opened&lt;/p&gt; 
&lt;p&gt;a. Set the port security to your needs.&lt;/p&gt; 
&lt;p&gt;b. Select OK.&lt;/p&gt; 
&lt;p&gt;4. Select Save.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; JIT does not support VMs protected by Azure Firewalls controlled by Azure Firewall Manager.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Secure your management ports with just-in-time access" url="https://docs.microsoft.com/en-us/azure/security-center/security-center-just-in-time"/>
            <reference name="Understanding just-in-time (JIT) VM access" url="https://docs.microsoft.com/en-us/azure/security-center/just-in-time-explained"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Audit JIT access activity in Security Center&lt;/p&gt;

	&lt;p&gt;You can gain insights into VM activities using log search. To view the logs:&lt;/p&gt;

	&lt;p&gt;1. From Just-in-time VM access, select the Configured tab.&lt;/p&gt;

	&lt;p&gt;2. For the VM that you want to audit, open the ellipsis menu at the end of the row.&lt;/p&gt;

	&lt;p&gt;3. Select Activity Log from the menu.&lt;/p&gt;

	&lt;p&gt;4. The activity log provides a filtered view of previous operations for that VM along with time, date, and subscription.&lt;/p&gt;

	&lt;p&gt;To download the log information, select Download as CSV.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:11.350">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-RESOURCE1" name="Set resource locks for mission critical Azure resources" issueId="" issueLink="" platform="" cost="0" risk="42" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Resource Manager Locks provide a way for administrators to lock down Azure resources to prevent deletion of, or modifications to, a resource. These locks sit outside of the Role Based Access Controls (RBAC) hierarchy and, when applied, will place restrictions on the resource for all users. These locks are very useful when there is an important resource in a subscription that users should not be able to delete or change. Locks can help prevent accidental and malicious changes or deletion.&lt;/p&gt;&lt;p&gt;Rationale:&lt;/p&gt;&lt;p&gt;As an administrator, it may be necessary to lock a subscription, resource group, or resource to prevent other users in the organization from accidentally deleting or modifying critical resources. The lock level can be set to to CanNotDelete or ReadOnly to achieve this purpose.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;CanNotDelete means authorized users can still read and modify a resource, but they can't delete the resource.&lt;/li&gt;&lt;li&gt;ReadOnly means authorized users can read a resource, but they can't delete or update the resource. Applying this lock is similar to restricting all authorized users to the permissions granted by the Reader role.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Remediation:&lt;/p&gt;&lt;p&gt;&lt;strong&gt;From Azure Console&lt;/strong&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Navigate to the specific Azure Resource or Resource Group&lt;/li&gt;&lt;li&gt;For each of the mission critical resource, click on Locks&lt;/li&gt;&lt;li&gt;Click Add&lt;/li&gt;&lt;li&gt;Give the lock a name and a description, then select the type, CanNotDelete or ReadOnly as appropriate&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;strong&gt;Using Azure Command Line Interface 2.0&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;To lock a resource, provide the name of the resource, its resource type, and its resource group name.&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;az lock create --name &amp;lt;LockName&amp;gt; --lock-type &amp;lt;CanNotDelete/Read-only&amp;gt; --resource-group &amp;lt;resourceGroupName&amp;gt; --resource-name &amp;lt;resourceName&amp;gt; --resource-type &amp;lt;resourceType&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="10.1" supportedStandardRef="cis-azure-standard-level-2"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;&lt;strong&gt;From Azure Console&lt;/strong&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Navigate to the specific Azure Resource or Resource Group&lt;/li&gt;&lt;li&gt;Click on Locks&lt;/li&gt;&lt;li&gt;Ensure the lock is defined with name and description, type as CanNotDelete or ReadOnly as appropriate.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;strong&gt;Using Azure Command Line Interface 2.0&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Review the list of all locks set currently:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;az lock list --resource-group &amp;lt;resourcegroupname&amp;gt; --resource-name &amp;lt;resourcename&amp;gt; --namespace &amp;lt;Namespace&amp;gt; --resource-type &amp;lt;type&amp;gt; --parent ""&lt;/p&gt;&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:11.728">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-V02" name="Set up the security policy" issueId="" issueLink="" platform="" cost="0" risk="42" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Set up the security policies to define the items for which Security Center collects data and makes recommendations. Apply different security policies to different sets of Azure resources. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;On the Security Center dashboard, select Security policy, and then select your subscription.&lt;/li&gt; 
  &lt;li&gt;Select Prevention policy.&lt;/li&gt; 
  &lt;li&gt;Turn on or turn off policy items that you want to apply to all Azure resources.&lt;/li&gt; 
  &lt;li&gt;When you're finished selecting your settings, select OK.&lt;/li&gt; 
  &lt;li&gt;On the Security policy blade, select Save.&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt; 
&lt;div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Set security policies in Azure Security Center" url="https://docs.microsoft.com/en-us/azure/security-center/security-center-policies"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;On the Security Center dashboard, select Security policy, and then select your
                            subscription.&lt;/li&gt;
                            &lt;li&gt;Select Prevention policy.&lt;/li&gt;
                            &lt;li&gt;Check that the required policy items are enabled.&amp;nbsp;&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:11.728">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-LOAD-BALANCER2" name="Upgrade Azure Public Load Balancers from Basic to Standard" issueId="" issueLink="" platform="" cost="1" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Upgrade Azure Public Load Balancers from Basic to Standard&lt;/p&gt;

	&lt;p&gt;Rationale:&lt;br /&gt;
Azure offers two types of Load Balancer offerings, Standard and Basic. &lt;/p&gt;

	&lt;p&gt;Standard Load Balancer is secure by default and part of your virtual network. The virtual network is a private and isolated network. This means Standard Load Balancers and Standard Public IP addresses are closed to inbound flows unless opened by Network Security Groups. NSGs are used to explicitly permit allowed traffic. If you do not have an NSG on a subnet or NIC of your virtual machine resource, traffic is not allowed to reach this resource.&lt;br /&gt;
Basic Load Balancer is open to the internet by default.&lt;/p&gt;

	&lt;p&gt;Using a Standard Load Balancer is recommended for your production workloads and typically the Basic Load Balancer is only used for testing since the basic type is open to connections from the internet by default, and doesn't require network security groups for operation.&lt;/p&gt;

	&lt;p&gt;Remediation:&lt;br /&gt;
There are two stages in an upgrade:&lt;/p&gt;

	&lt;p&gt;1. Change IP allocation method from Dynamic to Static.&lt;br /&gt;
2. Run the PowerShell script to complete the upgrade and traffic migration.&lt;/p&gt;

	&lt;p&gt;There are different scripts to support upgrade for Public (External) Load Balancers, Private (Internal) where no outbound connection is required and Private (Internal) where outbound connection is required.&lt;br /&gt;
For more information please see the Reference URLs. &lt;/p&gt;

	&lt;p&gt;Impact:&lt;br /&gt;
It usually take about 5-10 minutes for the script to finish and it could take longer depending on the complexity of your Load Balancer configuration. Therefore, keep the downtime in mind and plan for failover if necessary.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Upgrade Azure Internal Load Balancer - Outbound Connection Required" url="https://docs.microsoft.com/en-us/azure/load-balancer/upgrade-internalbasic-to-publicstandard"/>
            <reference name="Upgrade Azure Internal Load Balancer- No Outbound Connection Required" url="https://docs.microsoft.com/en-us/azure/load-balancer/upgrade-basicinternal-standard"/>
            <reference name="Upgrade Azure Public Load Balancer" url="https://docs.microsoft.com/en-us/azure/load-balancer/upgrade-basic-standard"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that you are using Standard Load Balancers for your production workloads.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:11.350">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-SSO" name="Use Azure Active Directory single sign-on (SSO)" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Use Azure Active Directory single sign-on (SSO)&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Single sign-on means a user does not have to sign in to every application they use. The user logs in once and that credential is used for other apps too.&lt;/p&gt; 
&lt;p&gt;Single sign-on provides many benefits over traditional sign-on methods.&lt;/p&gt; 
&lt;p&gt;- With single sign-on, users sign in once with one account to access domain-joined devices, company resources, software as a service (SaaS) applications, and web applications. After signing in, the user can launch applications from the Office 365 portal or My Apps. Administrators can centralize user account management, and automatically add or remove user access to applications based on group membership.&lt;/p&gt; 
&lt;p&gt;- Without single sign-on, users must remember application-specific passwords and sign in to each application. IT staff needs to create and update user accounts for each application such as Microsoft 365, Box, and Salesforce. Users need to remember their passwords, plus spend the time to sign in to each application.&lt;/p&gt; 
&lt;p&gt;Azure Active Directory (Azure AD) has a gallery that contains thousands of pre-integrated applications. Many of the applications your organization uses are probably already in the gallery.&lt;/p&gt; 
&lt;p&gt;After an application is added to your Azure AD tenant, you can:&lt;/p&gt; 
&lt;p&gt;- Configure properties for the app.&lt;br&gt; - Manage user access to the app with a Conditional Access policy.&lt;br&gt; - Configure single sign-on so users can sign in to the app with their Azure AD credentials.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Add an app to your Azure AD tenant&lt;/p&gt; 
&lt;p&gt;To add an application to your Azure AD tenant:&lt;/p&gt; 
&lt;p&gt;1. In the Azure portal, on the left navigation panel, select Azure Active Directory.&lt;/p&gt; 
&lt;p&gt;2. In the Azure Active Directory pane, select Enterprise applications. The All applications pane opens and displays a random sample of the applications in your Azure AD tenant.&lt;/p&gt; 
&lt;p&gt;3. In the Enterprise applications pane, select New application. Select New application to add a gallery app to your tenant&lt;/p&gt; 
&lt;p&gt;4. Switch to the new gallery preview experience: In the banner at the top of the Add an application page, select the link that says Click here to try out the new and improved app gallery.&lt;/p&gt; 
&lt;p&gt;5. The Browse Azure AD Gallery (Preview) pane opens and displays tiles for cloud platforms, on-premises applications, and featured applications. Applications listed in the Featured applications section have icons indicating whether they support federated single sign-on (SSO) and provisioning.&lt;/p&gt; 
&lt;p&gt;6. You can browse the gallery for the application you want to add, or search for the application by entering its name in the search box. Then select the application from the results.&lt;/p&gt; 
&lt;p&gt;7. The next step depends on the way the developer of the application implemented single sign-on (SSO). Single sign-on can be implemented by app developers in four ways. The four ways are SAML, OpenID Connect, Password, and Linked. When you add an app, you can choose to filter and see only apps using a particular SSO implementation as shown in the screenshot. For example, a popular standard to implement SSO is called Security Assertion Markup Language (SAML). Another standard that is popular is called OpenId Connect (OIDC). The way you configure SSO with these standards is different so take note of the type of SSO that is implemented by the app that you are adding.&lt;/p&gt; 
&lt;p&gt;- If the developer of the app used the OIDC standard for SSO then select Sign Up. A setup page appears. Next, go to the quickstart on setting up OIDC-based single sign-on. Screenshot shows adding an OIDC-based SSO app.&lt;/p&gt; 
&lt;p&gt;- If the developer of the app used the SAML standard for SSO then select Create. A getting started page appears with the options for configuring the application for your organization. In the form, you can edit the name of the application to match the needs of your organization. Next, go to the quickstart on setting up SAML-based single sign-on. Screenshot shows adding an SAML-based SSO app.&lt;/p&gt; 
&lt;p&gt;Important: There are some key differences between SAML-based and OIDC-based SSO implementations. With SAML-based apps you can add multiple instances of the same app. For example, GitHub1, GitHub2, etc.. For OIDC-based apps you can only add one instance of an app. If you have already added an OIDC-based app and try to add the same app again and provide consent twice, it will not be added again in the tenant.&lt;/p&gt; 
&lt;p&gt;If the application you are looking for is not in the gallery then you can select the link Create your own application and then under What are you looking to do with your application? choose Integrate any other application you do not find in the gallery. Microsoft has already worked with many application developers to pre-configure them to work with Azure AD. The pre-configured apps show up in the gallery. But if the app you want to add is not listed then you can create a new, generic, app and then configure it yourself or with the guidance of the developer that created it.&lt;/p&gt; 
&lt;p&gt;You have finished adding an application. &lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Quickstart: Add an application to your Azure Active Directory (Azure AD) tenant" url="https://docs.microsoft.com/en-us/azure/active-directory/manage-apps/add-application-portal"/>
            <reference name="What is single sign-on (SSO)?" url="https://docs.microsoft.com/en-us/azure/active-directory/manage-apps/what-is-single-sign-on"/>
          </references>
          <standards>
            <standard ref="IM-5" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="PA-6" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that, wherever possible, you are using Azure Active Directory SSO instead of configuring individual stand-alone credentials per-service.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:11.728">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-RESOURCE-MANAGER" name="Use Azure Resource Manager" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Use Azure Resource Manager&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; The Resource Manager and classic deployment models represent two different ways of deploying and managing your Azure solutions. You work with them through two different API sets, and the deployed resources can contain important differences. The two models are not compatible with each other.&lt;br&gt; With Resource Manager, you can:&lt;br&gt; - Manage your infrastructure through declarative templates rather than scripts.&lt;br&gt; - Deploy, manage, and monitor all the resources for your solution as a group, rather than handling these resources individually.&lt;br&gt; - Redeploy your solution throughout the development life-cycle and have confidence your resources are deployed in a consistent state.&lt;br&gt; - Define the dependencies between resources so they are deployed in the correct order.&lt;br&gt; - Apply access control to all services because Azure role-based access control (Azure RBAC) is natively integrated into the management platform.&lt;br&gt; - Apply tags to resources to logically organize all the resources in your subscription.&lt;br&gt; - Clarify your organization's billing by viewing costs for a group of resources sharing the same tag.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; To simplify the deployment and management of resources, Microsoft recommends that you use Resource Manager for all new resources. If possible, Microsoft recommends that you redeploy existing resources through Resource Manager.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; Resource Manager and classic deployment models are not compatible with each other.&lt;br&gt; There are three scenarios to be aware of:&lt;br&gt; 1. Cloud Services does not support Resource Manager deployment model.&lt;br&gt; 2. Virtual machines, storage accounts, and virtual networks support both Resource Manager and classic deployment models.&lt;br&gt; 3. All other Azure services support Resource Manager.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Azure Resource Manager vs. classic deployment: Understand deployment models and the state of your resources" url="https://docs.microsoft.com/en-us/azure/azure-resource-manager/management/deployment-models"/>
          </references>
          <standards>
            <standard ref="AM-3" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that you are using Resource Manager for all new resources.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:11.728">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-ADAPTIVE-NET-HARDENING" name="Use Security Center's Adaptive Network Hardening" issueId="" issueLink="" platform="" cost="1" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Use Defender for Cloud's Adaptive Network Hardening&lt;/p&gt;&lt;p&gt;Rationale:&lt;br&gt;Applying network security groups (NSG) to filter traffic to and from resources, improves your network security posture. However, there can still be some cases in which the actual traffic flowing through the NSG is a subset of the NSG rules defined. In these cases, further improving the security posture can be achieved by hardening the NSG rules, based on the actual traffic patterns.&lt;/p&gt;&lt;p&gt;Adaptive network hardening provides recommendations to further harden the NSG rules. It uses a machine learning algorithm that factors in actual traffic, known trusted configuration, threat intelligence, and other indicators of compromise, and then provides recommendations to allow traffic only from specific IP/port tuples.&lt;/p&gt;&lt;p&gt;Note: Adaptive network hardening recommendations are only supported on the following specific ports (for both UDP and TCP): 13, 17, 19, 22, 23, 53, 69, 81, 111, 119, 123, 135, 137, 138, 139, 161, 162, 389, 445, 512, 514, 593, 636, 873, 1433, 1434, 1900, 2049, 2301, 2323, 2381, 3268, 3306, 3389, 4333, 5353, 5432, 5555, 5800, 5900, 5900, 5985, 5986, 6379, 6379, 7000, 7001, 7199, 8081, 8089, 8545, 9042, 9160, 9300, 11211, 16379, 26379, 27017, 37215&lt;/p&gt;&lt;p&gt;Remediation:&lt;br&gt;View and manage hardening alerts and rules&lt;/p&gt;&lt;p&gt;1. From Defender for Cloud's menu, open the Workload protections dashboard and select the adaptive network hardening tile, or the insights panel item related to adaptive network hardening.&lt;/p&gt;&lt;p&gt;Tip: The insights panel shows the percentage of your VMs currently defended with adaptive network hardening.&lt;/p&gt;&lt;p&gt;The details page for the Adaptive Network Hardening recommendations should be applied on internet facing virtual machines recommendation opens with your network VMs grouped into three tabs:&lt;/p&gt;&lt;p&gt;a. Unhealthy resources: VMs that currently have recommendations and alerts that were triggered by running the adaptive network hardening algorithm.&lt;/p&gt;&lt;p&gt;b. Healthy resources: VMs without alerts and recommendations.&lt;/p&gt;&lt;p&gt;c. Unscanned resources: VMs that the adaptive network hardening algorithm cannot be run on because of one of the following reasons:&lt;br&gt;i. VMs are Classic VMs: Only Azure Resource Manager VMs are supported.&lt;br&gt;ii. Not enough data is available: In order to generate accurate traffic hardening recommendations, Security Center requires at least 30 days of traffic data.&lt;br&gt;iii. VM is not protected by Azure Defender: Only VMs protected with Azure Defender for servers are eligible for this feature.&lt;/p&gt;&lt;p&gt;3. From the Unhealthy resources tab, select a VM to view its alerts and the recommended hardening rules to apply.&lt;/p&gt;&lt;p&gt;- The Rules tab lists the rules that adaptive network hardening recommends you add&lt;br&gt;- The Alerts tab lists the alerts that were generated due to traffic, flowing to the resource, which is not within the IP range allowed in the recommended rules.&lt;/p&gt;&lt;p&gt;4. Optionally, edit the rules:&lt;/p&gt;&lt;p&gt;- Modify a rule&lt;br&gt;- Delete a rule&lt;br&gt;- Add a rule&lt;/p&gt;&lt;p&gt;5. Select the rules that you want to apply on the NSG, and click Enforce.&lt;/p&gt;&lt;p&gt;Tip: If the allowed source IP ranges shows as 'None', it means that recommended rule is a deny rule, otherwise, it is an allow rule.&lt;/p&gt;&lt;p&gt;Note: The enforced rules are added to the NSG protecting the VM. (A VM could be protected by an NSG that is associated to its NIC, or the subnet in which the VM resides, or both)&lt;/p&gt;&lt;p&gt;Impact:&lt;br&gt;None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Improve your network security posture with adaptive network hardening" url="https://docs.microsoft.com/en-us/azure/security-center/security-center-adaptive-network-hardening"/>
          </references>
          <standards>
            <standard ref="NS-7" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that Security Center's Adaptive Network Hardening recommendations are enforced  to your NSG configurations.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:11.350">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-TAGS" name="Use service tags in place of specific IP addresses" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Use service tags in place of specific IP addresses&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; A service tag represents a group of IP address prefixes from a given Azure service. Microsoft manages the address prefixes encompassed by the service tag and automatically updates the service tag as addresses change, minimizing the complexity of frequent updates to network security rules.&lt;/p&gt; 
&lt;p&gt;You can use service tags to define network access controls on network security groups or Azure Firewall. Use service tags in place of specific IP addresses when you create security rules. By specifying the service tag name, such as ApiManagement, in the appropriate source or destination field of a rule, you can allow or deny the traffic for the corresponding service.&lt;/p&gt; 
&lt;p&gt;You can use service tags to achieve network isolation and protect your Azure resources from the general Internet while accessing Azure services that have public endpoints. Create inbound/outbound network security group rules to deny traffic to/from Internet and allow traffic to/from AzureCloud or other available service tags of specific Azure services.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; By default, service tags reflect the ranges for the entire cloud. Some service tags also allow more granular control by restricting the corresponding IP ranges to a specified region. For example, the service tag Storage represents Azure Storage for the entire cloud, but Storage.WestUS narrows the range to only the storage IP address ranges from the WestUS region.&lt;/p&gt; 
&lt;p&gt;By specifying the service tag name in the appropriate source or destination field of a rule, you can allow or deny the traffic for the corresponding service.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Virtual network service tags" url="https://docs.microsoft.com/en-us/azure/virtual-network/service-tags-overview"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that your network security rules are simplified by using VNet Service tags.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:11.350">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="AUTHENTICATION" name="Authentication" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="AZURE-LOST-ACCESS-ROOT" name="Attackers gain unauthorized access to the root account due to the lack of configuration of the account" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;div&gt;Attackers could gain unauthorized access to the administrator account due to a lack of configuration of the account and its security mechanisms, making it possible to modify credentials and add/remove user accounts.
                                &lt;/div&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="AZ-W04">
                  <countermeasures>
                    <countermeasure ref="AZ-A04" mitigation="25"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AZURE-MON02">
                  <countermeasures>
                    <countermeasure ref="AZ-A03" mitigation="25"/>
                    <countermeasure ref="AZURE-SUBSCRIPTIONS" mitigation="25"/>
                  </countermeasures>
                </weakness>
                <weakness ref="LOST-SECURITY-ALERTS">
                  <countermeasures>
                    <countermeasure ref="AZ-A01" mitigation="25"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-A01" mitigation="25"/>
                <countermeasure ref="AZ-A03" mitigation="25"/>
                <countermeasure ref="AZ-A04" mitigation="25"/>
                <countermeasure ref="AZURE-SUBSCRIPTIONS" mitigation="25"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="AZURE-LOST-ACCESS-USER" name="Attackers gain unauthorized access to the user account due to the lack of configuration of the account" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;Attackers could gain unauthorized access to the user account due to the lack of configuration of the account, for example, the security question to reset the password is configured incorrectly.&lt;/p&gt;</desc>
              <riskRating confidentiality="50" integrity="50" availability="50" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-IDENTITY-03">
                  <countermeasures>
                    <countermeasure ref="AZ-A07" mitigation="50"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AZURE-MON03">
                  <countermeasures>
                    <countermeasure ref="AZURE-USER-MFA" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-A07" mitigation="50"/>
                <countermeasure ref="AZURE-USER-MFA" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="AUTHORIZATION" name="Authorization" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="LOSS-CONTROL_ENV" name="Attackers gain unauthorized access to the control of the environment" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;Attackers could potentially gain unauthorized access to the control of the environment, due to user accounts - or role groups - not being well defined and configured. As a consequence attackers may be able to make changes without root approval.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="75" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-ACCESS-01">
                  <countermeasures>
                    <countermeasure ref="AZ-A09" mitigation="20"/>
                    <countermeasure ref="AZ-A10" mitigation="20"/>
                    <countermeasure ref="AZ-A11" mitigation="20"/>
                    <countermeasure ref="AZURE-LOAD-BALANCER1" mitigation="100"/>
                    <countermeasure ref="AZURE-RESOURCE-MANAGER" mitigation="20"/>
                    <countermeasure ref="AZURE-SSO" mitigation="20"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-A09" mitigation="20"/>
                <countermeasure ref="AZ-A10" mitigation="20"/>
                <countermeasure ref="AZ-A11" mitigation="20"/>
                <countermeasure ref="AZURE-LOAD-BALANCER1" mitigation="100"/>
                <countermeasure ref="AZURE-RESOURCE-MANAGER" mitigation="20"/>
                <countermeasure ref="AZURE-SSO" mitigation="20"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="GENERAL" name="General" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="UNCONFIGURED-SECURITY" name="Attackers gain access to the system by exploiting weak security configurations" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>Weak security configurations like using sharing passwords in plain text, using weak passwords, using obsolete encryption algorithms, etc. can lead attackers to gain access to the system.</desc>
              <riskRating confidentiality="75" integrity="50" availability="25" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-NET-04">
                  <countermeasures>
                    <countermeasure ref="AZURE-RESOURCE1" mitigation="34"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AZURE-VM01">
                  <countermeasures>
                    <countermeasure ref="AZ-V02" mitigation="33"/>
                    <countermeasure ref="AZURE-REPOS-GIT" mitigation="100"/>
                    <countermeasure ref="AZURE-SECURE-CONFIG" mitigation="33"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-V02" mitigation="33"/>
                <countermeasure ref="AZURE-REPOS-GIT" mitigation="100"/>
                <countermeasure ref="AZURE-RESOURCE1" mitigation="34"/>
                <countermeasure ref="AZURE-SECURE-CONFIG" mitigation="33"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="LOGGING AND MONITORING" name="Logging and Monitoring" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="OWASP A10:2017" name="Exploitation of insufficient logging and monitoring" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>	&lt;p&gt;Exploitation of insufficient logging and monitoring is the bedrock of nearly every major incident.&lt;br /&gt;
 Attackers rely on the lack of monitoring and timely response to achieve their goals without being detected.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="AZ-ENABLE-ALERTS" mitigation="25"/>
                    <countermeasure ref="AZ-L01" mitigation="33"/>
                    <countermeasure ref="AZ-L05" mitigation="33"/>
                    <countermeasure ref="AZ-M01" mitigation="25"/>
                    <countermeasure ref="AZURE-MONITOR6" mitigation="25"/>
                    <countermeasure ref="AZURE-NSG-LOGS" mitigation="25"/>
                    <countermeasure ref="AZURE-SENTINEL" mitigation="34"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-ENABLE-ALERTS" mitigation="25"/>
                <countermeasure ref="AZ-L01" mitigation="33"/>
                <countermeasure ref="AZ-L05" mitigation="33"/>
                <countermeasure ref="AZ-M01" mitigation="25"/>
                <countermeasure ref="AZURE-MONITOR6" mitigation="25"/>
                <countermeasure ref="AZURE-NSG-LOGS" mitigation="25"/>
                <countermeasure ref="AZURE-SENTINEL" mitigation="34"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="NETWORKING" name="Networking" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="AZURE-UNAUTHORISED-CONNECTION" name="Attackers perform unauthorized network access" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;Attackers could perform unauthorized network access to the resources through misconfigured ports or security network configurations.&lt;/p&gt;</desc>
              <riskRating confidentiality="25" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-NET-01">
                  <countermeasures>
                    <countermeasure ref="AZURE-ADAPTIVE-NET-HARDENING" mitigation="11"/>
                    <countermeasure ref="AZURE-DDOS-PROTECTION" mitigation="11"/>
                    <countermeasure ref="AZURE-FIREWALL3" mitigation="11"/>
                    <countermeasure ref="AZURE-IDS-IPS" mitigation="11"/>
                    <countermeasure ref="AZURE-JIT-VM-ACCESS" mitigation="11"/>
                    <countermeasure ref="AZURE-LOAD-BALANCER2" mitigation="11"/>
                    <countermeasure ref="AZURE-LOAD-BALANCER3" mitigation="11"/>
                    <countermeasure ref="C-AZURE-COMMON1" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AZURE-NON-IDENTIFY">
                  <countermeasures>
                    <countermeasure ref="AZURE-TAGS" mitigation="11"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AZURE-VNET01">
                  <countermeasures>
                    <countermeasure ref="AZ-N09" mitigation="12"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-N09" mitigation="12"/>
                <countermeasure ref="AZURE-ADAPTIVE-NET-HARDENING" mitigation="11"/>
                <countermeasure ref="AZURE-DDOS-PROTECTION" mitigation="11"/>
                <countermeasure ref="AZURE-FIREWALL3" mitigation="11"/>
                <countermeasure ref="AZURE-IDS-IPS" mitigation="11"/>
                <countermeasure ref="AZURE-JIT-VM-ACCESS" mitigation="11"/>
                <countermeasure ref="AZURE-LOAD-BALANCER2" mitigation="11"/>
                <countermeasure ref="AZURE-LOAD-BALANCER3" mitigation="11"/>
                <countermeasure ref="AZURE-TAGS" mitigation="11"/>
                <countermeasure ref="C-AZURE-COMMON1" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="7551afb7-c99d-44f1-a111-e962033e8871" diagramComponentId="0f5d3984-561c-4c75-a3b8-13dd9627b72c" ref="7e45ae06-b835-4bf7-b2e7-35055cdac58c" name="Mobile Device Client" desc="" library="OWASP-MASVS" parentComponentRef="9a93e3e4-9c1d-4105-a6c4-a8a8dd9baf25" componentDefinitionRef="mobile-device-client">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="internet"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses>
        <weakness ref="CWE-388" name="An error condition is not properly handled (Error Handling)" state="0" impact="100" issueId="" issueLink="">
          <desc>Errors and error handling represent a class of API. Errors related to error handling are so
                        common that they deserve a special kingdom of their own. As with "API Abuse", there
                        are two ways to introduce an error-related security vulnerability: the most common one is handling errors poorly (or not at all). The second is producing errors that either give out too much information (to possible attackers) or are difficult to handle
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:10.659">
              <output/>
            </source>
            <references>
              <reference name="CWE-388: An error condition is not properly handled (Error Handling)" url="https://cwe.mitre.org/data/definitions/388.html"/>
            </references>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CWE-120" name="Buffer Copy without Checking Size of Input ('Classic Buffer Overflow')" state="0" impact="100" issueId="" issueLink="">
          <desc>The program copies an input buffer to an output buffer without verifying that the size of the
                        input buffer is less than the size of the output buffer, leading to a buffer overflow.
                        &lt;br /&gt;A buffer overflow condition exists when a program attempts to put more data in a
                        buffer than it can hold, or when a program attempts to put data in a memory area outside of the
                        boundaries of a buffer. The simplest type of error, and the most common cause of buffer
                        overflows, is the &amp;quot;classic&amp;quot; case in which the program copies the buffer
                        without restricting how much is copied. Other variants exist, but the existence of a classic
                        overflow strongly suggests that the programmer is not considering even the most basic of
                        security protections.
                        &lt;br /&gt;
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:10.659">
              <output/>
            </source>
            <references>
              <reference name="CWE-120: Buffer Copy without Checking Size of Input ('Classic Buffer Overflow')" url="https://cwe.mitre.org/data/definitions/120.html"/>
              <reference name="Smashing The Stack For Fun And Profit" url="https://insecure.org/stf/smashstack.html"/>
            </references>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CWE-494" name="Download of Code Without Integrity Check" state="0" impact="100" issueId="" issueLink="">
          <desc>The product downloads source code or an executable from a remote location and executes the
                        code without sufficiently verifying the origin and integrity of the code.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:10.659">
              <output/>
            </source>
            <references>
              <reference name="CWE-494: Download of Code Without Integrity Check" url="https://cwe.mitre.org/data/definitions/494.html"/>
            </references>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CWE-250" name="Execution with Unnecessary Privileges" state="0" impact="100" issueId="" issueLink="">
          <desc>The software performs an operation at a privilege level that is higher than the minimum level
                        required, which creates new weaknesses or amplifies the consequences of other weaknesses.

                        New weaknesses can be exposed because running with extra privileges, such as root or
                        Administrator, can disable the normal security checks being performed by the operating system or
                        surrounding environment. Other pre-existing weaknesses can turn into security vulnerabilities if
                        they occur while operating at raised privileges. Privilege management functions can behave in
                        some less-than-obvious ways, and they have different quirks on different platforms. These
                        inconsistencies are particularly pronounced if you are transitioning from one non-root user to
                        another. Signal handlers and spawned processes run at the privilege of the owning process, so if
                        a process is running as root when a signal fires or a sub-process is executed, the signal
                        handler or sub-process will operate with root privileges.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:10.659">
              <output/>
            </source>
            <references>
              <reference name="CWE-250: Execution with Unnecessary Privileges" url="https://cwe.mitre.org/data/definitions/250.html"/>
            </references>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CWE-749" name="Exposed Dangerous Method or Function" state="0" impact="100" issueId="" issueLink="">
          <desc>The software provides an Applications Programming Interface (API) or similar interface for
                        interaction with external actors, but the interface includes a dangerous method or function that
                        is not properly restricted.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:10.658">
              <output/>
            </source>
            <references>
              <reference name="CWE-749: Exposed Dangerous Method or Function" url="https://cwe.mitre.org/data/definitions/749.html"/>
            </references>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CWE-79" name="Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')" state="0" impact="100" issueId="" issueLink="">
          <desc>The software does not neutralize or incorrectly neutralizes user-controllable input before it
                        is placed in output that is used as a web page that is served to other users. Cross-site
                        scripting (XSS) vulnerabilities occur when:
                        &lt;ol&gt;
                        &lt;li&gt;Untrusted data enters a web application, typically from a web request.&lt;/li&gt;
                        &lt;li&gt;The web application dynamically generates a web page that contains this untrusted
                        data.&lt;/li&gt;
                        &lt;li&gt;During page generation, the application does not prevent the data from containing
                        content that is executable by a web browser, such as JavaScript, HTML tags, HTML attributes,
                        mouse events, Flash, ActiveX, etc.&lt;/li&gt;
                        &lt;li&gt;A victim visits the generated web page through a web browser, which contains malicious
                        script that was injected using the untrusted data.&lt;/li&gt;
                        &lt;li&gt;Since the script comes from a web page that was sent by the web server, the victim's
                        web browser executes the malicious script in the context of the web server's domain.&lt;/li&gt;
                        &lt;li&gt;This effectively violates the intention of the web browser's same-origin policy, which
                        states that scripts in one domain should not be able to access resources or run code in a
                        different domain.&lt;/li&gt;
                        &lt;/ol&gt;There are three main kinds of XSS:
                        &lt;ul&gt;
                        &lt;li&gt;&lt;b&gt;Type 1: Reflected XSS (or Non-Persistent)&lt;/b&gt;&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;blockquote&gt;
                        The server reads data directly from the HTTP request and reflects it back in the HTTP response.
                        Reflected XSS exploits occur when an attacker causes a victim to supply dangerous content to a
                        vulnerable web application, which is then reflected back to the victim and executed by the web
                        browser. The most common mechanism for delivering malicious content is to include it as a
                        parameter in a URL that is posted publicly or e-mailed directly to the victim. URLs constructed
                        in this manner constitute the core of many phishing schemes, whereby an attacker convinces a
                        victim to visit a URL that refers to a vulnerable site. After the site reflects the attacker's
                        content back to the victim, the content is executed by the victim's browser.
                        &lt;/blockquote&gt;
                        &lt;ul&gt;
                        &lt;li&gt;&lt;b&gt;Type 2: Stored XSS (or Persistent)&lt;/b&gt;&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;blockquote&gt;
                        The application stores dangerous data in a database, message forum, visitor log, or other
                        trusted data store. At a later time, the dangerous data is subsequently read back into the
                        application and included in dynamic content. From an attacker's perspective, the optimal place
                        to inject malicious content is in an area that is displayed to either many users or particularly
                        interesting users. Interesting users typically have elevated privileges in the application or
                        interact with sensitive data that is valuable to the attacker. If one of these users executes
                        malicious content, the attacker may be able to perform privileged operations on behalf of the
                        user or gain access to sensitive data belonging to the user. For example, the attacker might
                        inject XSS into a log message, which might not be handled properly when an administrator views
                        the logs.
                        &lt;/blockquote&gt;
                        &lt;ul&gt;
                        &lt;li&gt;&lt;b&gt;Type 0: DOM-Based XSS&lt;/b&gt;&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;blockquote&gt;
                        In DOM-based XSS, the client performs the injection of XSS into the page; in the other types,
                        the server performs the injection. DOM-based XSS generally involves server-controlled, trusted
                        script that is sent to the client, such as Javascript that performs sanity checks on a form
                        before the user submits it. If the server-supplied script processes user-supplied data and then
                        injects it back into the web page (such as with dynamic HTML), then DOM-based XSS is
                        possible.Once the malicious script is injected, the attacker can perform a variety of malicious
                        activities. The attacker could transfer private information, such as cookies that may include
                        session information, from the victim's machine to the attacker. The attacker could send
                        malicious requests to a web site on behalf of the victim, which could be especially dangerous to
                        the site if the victim has administrator privileges to manage that site. Phishing attacks could
                        be used to emulate trusted web sites and trick the victim into entering a password, allowing the
                        attacker to compromise the victim's account on that web site. Finally, the script could exploit
                        a vulnerability in the web browser itself possibly taking over the victim's machine, sometimes
                        referred to as &amp;quot;drive-by hacking&amp;quot;.
                        &lt;/blockquote&gt;
                        &lt;blockquote&gt;
                        &lt;br /&gt;
                        &lt;/blockquote&gt;In many cases, the attack can be launched without the victim even being aware
                        of it. Even with careful users, attackers frequently use a variety of methods to encode the
                        malicious portion of the attack, such as URL encoding or Unicode, so the request looks less
                        suspicious.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:10.658">
              <output/>
            </source>
            <references>
              <reference name="CWE-79: Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting')" url="https://cwe.mitre.org/data/definitions/79.html"/>
            </references>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CWE-83" name="Improper Neutralization of Script in Attributes in a Web Page" state="0" impact="100" issueId="" issueLink="">
          <desc>The software does not neutralize or incorrectly neutralizes "javascript:" or other URIs from
                        dangerous attributes within tags, such as onmouseover, onload, onerror, or style.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:10.658">
              <output/>
            </source>
            <references>
              <reference name="CWE-83: Improper Neutralization of Script in Attributes in a Web Page" url="https://cwe.mitre.org/data/definitions/83.html"/>
            </references>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="MASVS-EMULATION-TOOLS" name="Inappropriate use of emulation tools" state="0" impact="100" issueId="" issueLink="">
          <desc>The inappropriate use of emulation tools are not detected by the app, and attackers can
                        leverage them to obtain information about the app.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:10.658">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="MASVS-REVERSE-ENGINEERING-TOOLS" name="Inappropriate use of reverse engineering tools" state="0" impact="100" issueId="" issueLink="">
          <desc>The inappropriate use of the reverse engineering tools is not detected by the app, and
                        attackers can leverage them to obtain information about the app.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:10.658">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CWE-732" name="Incorrect Permission Assignment for Critical Resource" state="0" impact="100" issueId="" issueLink="">
          <desc>The software specifies permissions for a security-critical resource in a way that allows that resource to be read or modified by unintended actors.

When a resource is given a permission setting that provides access to a wider range of actors than required, it can lead to the exposure of sensitive information or to the modification of that resource by unintended parties. This is especially dangerous when the resource is related to program configuration, execution or sensitive user data.  </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:10.658">
              <output/>
            </source>
            <references>
              <reference name="CWE-732: Incorrect Permission Assignment for Critical Resource" url="https://cwe.mitre.org/data/definitions/732.html"/>
            </references>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CWE-215" name="Information Exposure Through Debug Information" state="0" impact="100" issueId="" issueLink="">
          <desc>The application contains debugging code that can expose sensitive information to untrusted parties.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:10.659">
              <output/>
            </source>
            <references>
              <reference name="CWE-215: Information Exposure Through Debug Information" url="https://cwe.mitre.org/data/definitions/215.html"/>
            </references>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="lack-automated-vuln-identification" name="Lack of automated vulnerability identification" state="0" impact="100" issueId="" issueLink="">
          <desc>Developmental security testing/evaluation is not enforced during post-design phases of the system development life cycle. Such testing/evaluation is necessary because it confirms that the required security controls are implemented correctly, operating as intended, enforcing the desired security policy, and meeting established security requirements.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:10.657">
              <output/>
            </source>
            <references>
              <reference name="Risk-Based and Functional Security Testing" url="https://www.us-cert.gov/bsi/articles/best-practices/security-testing/risk-based-and-functional-security-testing"/>
            </references>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CWE-489" name="Leftover Debug Code" state="0" impact="100" issueId="" issueLink="">
          <desc>The application can be deployed with active debugging code that can create unintended entry
                        points.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:10.659">
              <output/>
            </source>
            <references>
              <reference name="CWE-489: Leftover Debug Code" url="https://cwe.mitre.org/data/definitions/489.html"/>
            </references>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="MEMORY-LEAKAGE" name="Memory Leakage" state="0" impact="100" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:10.658">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="OUTDATED-LIBRARIES" name="Outdated libraries" state="0" impact="100" issueId="" issueLink="">
          <desc/>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:10.658">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CWE-656" name="Reliance on Security Through Obscurity" state="0" impact="100" issueId="" issueLink="">
          <desc>The software uses a protection mechanism whose strength depends heavily on its obscurity, such
                        that knowledge of its algorithms or key data is sufficient to defeat the mechanism.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:10.659">
              <output/>
            </source>
            <references>
              <reference name="CWE-656: Reliance on Security Through Obscurity" url="https://cwe.mitre.org/data/definitions/656.html"/>
            </references>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="MASVS-7.9" name="Activate the Free Security Features" issueId="" issueLink="" platform="" cost="1" risk="78" state="Recommended" owner="JamesRabe" library="OWASP-MASVS" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>For Android:&amp;nbsp; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;We shall activate the Obfuscation of the code and strip unneeded debugging information.&amp;nbsp;&lt;/li&gt; 
 &lt;/ul&gt;For iOS:&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;We shall activate:&amp;nbsp;&lt;/li&gt; 
  &lt;ul&gt; 
   &lt;li&gt;ARC (Automatic Reference Counting): memory management feature, adds retain and release messages when required.&amp;nbsp;&lt;/li&gt; 
   &lt;li&gt;Stack Canary: helps prevent buffer overflow attacks.&amp;nbsp;&lt;/li&gt; 
   &lt;li&gt;PIE (Position Independent Executable): enables full ASLR for binary.&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/ul&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="OWASP MASVS - Android - Verifying Compiler Settings" url="https://mobile-security.gitbook.io/mobile-security-testing-guide/android-testing-guide/0x05i-testing-code-quality-and-build-settings#testing-for-debugging-symbols-mstg-code-3"/>
            <reference name="OWASP MASVS - iOS - Verifying Compiler Settings" url="https://mobile-security.gitbook.io/mobile-security-testing-guide/ios-testing-guide/0x06i-testing-code-quality-and-build-settings#finding-debugging-code-and-verbose-error-logging-mstg-code-4"/>
          </references>
          <standards>
            <standard ref="7.9" supportedStandardRef="OWASP-MASVS-L1"/>
            <standard ref="7.9" supportedStandardRef="OWASP-MASVS-L1+R"/>
            <standard ref="7.9" supportedStandardRef="OWASP-MASVS-L2"/>
            <standard ref="7.9" supportedStandardRef="OWASP-MASVS-L2+R"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:10.449">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="MASVS-6.6" name="Allow only the minimum set of protocol handlers required" issueId="" issueLink="" platform="" cost="1" risk="70" state="Recommended" owner="JamesRabe" library="OWASP-MASVS" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Configure the WebViews to allow only the minimum set of protocol handlers required (ideally, only https). Potentially dangerous handlers, such as file, tel and app-id, are disabled.</desc>
          <implementations/>
          <references>
            <reference name="OWASP MASVS - Android - Testing WebView Protocol Handlers" url="https://mobile-security.gitbook.io/mobile-security-testing-guide/android-testing-guide/0x05h-testing-platform-interaction#testing-webview-protocol-handlers-mstg-platform-6"/>
            <reference name="OWASP MASVS - iOS - Testing WebView Protocol Handlers" url="https://mobile-security.gitbook.io/mobile-security-testing-guide/ios-testing-guide/0x06h-testing-platform-interaction#testing-webview-protocol-handlers-mstg-platform-6"/>
          </references>
          <standards>
            <standard ref="6.6" supportedStandardRef="OWASP-MASVS-L1"/>
            <standard ref="6.6" supportedStandardRef="OWASP-MASVS-L1+R"/>
            <standard ref="6.6" supportedStandardRef="OWASP-MASVS-L2"/>
            <standard ref="6.6" supportedStandardRef="OWASP-MASVS-L2+R"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that the set of protocol handlers are deactivated.
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:10.448">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="MASVS-2.6" name="Anonymize all data that is sent to 3rd Party services" issueId="" issueLink="" platform="" cost="1" risk="78" state="Recommended" owner="JamesRabe" library="OWASP-MASVS" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>All data that is sent to 3rd Party services shall be anonymized, so no PII data is available that would allow the 3rd party to identify the user account. Also all other data, like IDs in an application that can be mapped to a user account or session should not be sent to a third party.</desc>
          <implementations/>
          <references>
            <reference name="OWASP MASVS - Android - Testing Whether Sensitive Data Is Exposed via IPC Mechanisms" url="https://mobile-security.gitbook.io/mobile-security-testing-guide/android-testing-guide/0x05d-testing-data-storage#determining-whether-sensitive-stored-data-has-been-exposed-via-ipc-mechanisms-mstg-storage-6"/>
            <reference name="OWASP MASVS - iOS - Testing Whether Sensitive Data Is Exposed via IPC Mechanisms" url="https://mobile-security.gitbook.io/mobile-security-testing-guide/ios-testing-guide/0x06d-testing-data-storage#determining-whether-sensitive-data-is-exposed-via-ipc-mechanisms-mstg-storage-6"/>
          </references>
          <standards>
            <standard ref="2.6" supportedStandardRef="OWASP-MASVS-L1"/>
            <standard ref="2.6" supportedStandardRef="OWASP-MASVS-L1+R"/>
            <standard ref="2.6" supportedStandardRef="OWASP-MASVS-L2"/>
            <standard ref="2.6" supportedStandardRef="OWASP-MASVS-L2+R"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that all data that is sent to 3rd Party services is anonymized.

                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:10.447">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="MASVS-4.9" name="Apply 2FA Authentication on remote services" issueId="" issueLink="" platform="" cost="0" risk="78" state="Recommended" owner="JamesRabe" library="OWASP-MASVS" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  A second factor of authentication exists at the remote endpoint and the 2FA requirement is consistently enforced. 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="OWASP MASVS - Authentication and Session Management Requirements" url="https://mobile-security.gitbook.io/masvs/security-requirements/0x09-v4-authentication_and_session_management_requirements"/>
          </references>
          <standards>
            <standard ref="4.9" supportedStandardRef="OWASP-MASVS-L2"/>
            <standard ref="4.9" supportedStandardRef="OWASP-MASVS-L2+R"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:10.448">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="MASVS-8.13" name="Apply application level payload encryption" issueId="" issueLink="" platform="" cost="0" risk="78" state="Recommended" owner="JamesRabe" library="OWASP-MASVS" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;span style="white-space: pre;"&gt;As a defense in depth, next to having solid hardening of the communicating parties, application level payload encryption can be applied to further impede eavesdropping.&lt;/span&gt;</desc>
          <implementations/>
          <references>
            <reference name="OWASP MASVS - Resilience Requirements" url="https://mobile-security.gitbook.io/masvs/security-requirements/0x15-v8-resiliency_against_reverse_engineering_requirements"/>
          </references>
          <standards>
            <standard ref="8.13" supportedStandardRef="OWASP-MASVS-L1+R"/>
            <standard ref="8.13" supportedStandardRef="OWASP-MASVS-L2+R"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:10.451">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="MASVS-7.6" name="Catch and handle the possible exceptions" issueId="" issueLink="" platform="" cost="1" risk="68" state="Recommended" owner="JamesRabe" library="OWASP-MASVS" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Implement a well-designed and unified scheme to handle exceptions. Make sure the application has centralized handlers for exceptions that result in similar behavior. This can be a static class for instance. For specific exceptions given the methods context, specific catch blocks should be provided.</desc>
          <implementations/>
          <references>
            <reference name="OWASP MASVS - Android - Testing Exception Handling" url="https://mobile-security.gitbook.io/mobile-security-testing-guide/android-testing-guide/0x05i-testing-code-quality-and-build-settings#testing-exception-handling-mstg-code-6-and-mstg-code-7"/>
            <reference name="OWASP MASVS - iOS - Testing Error Handling in Security Controls" url="https://mobile-security.gitbook.io/mobile-security-testing-guide/ios-testing-guide/0x06i-testing-code-quality-and-build-settings#testing-exception-handling-mstg-code-6"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="14" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="16" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="7.6" supportedStandardRef="OWASP-MASVS-L1"/>
            <standard ref="7.6" supportedStandardRef="OWASP-MASVS-L1+R"/>
            <standard ref="7.6" supportedStandardRef="OWASP-MASVS-L2"/>
            <standard ref="7.6" supportedStandardRef="OWASP-MASVS-L2+R"/>
            <standard ref="8" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="9" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API7:2019-Security Misconfiguration" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that the exceptions are well-designed and are catched and handled well.
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:10.448">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="MASVS-7.5" name="Check for weaknesses in 3rd party libraries" issueId="" issueLink="" platform="" cost="0" risk="78" state="Recommended" owner="JamesRabe" library="OWASP-MASVS" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;iOS applications often make use of third party libraries. These third party libraries accelerate development as the developer has to write less code in order to solve a problem. There are two categories of libraries:&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; 
  &lt;div class="reset-3c756112--listItemContent-756c9114"&gt; 
   &lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;&lt;span&gt;&lt;span&gt;Libraries that are not (or should not) be packed within the actual production application, such as &lt;/span&gt;&lt;span&gt;&lt;code&gt;OHHTTPStubs&lt;/code&gt;&lt;/span&gt;&lt;span&gt; used for testing.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;/div&gt;&lt;/li&gt; 
 &lt;li&gt; 
  &lt;div class="reset-3c756112--listItemContent-756c9114"&gt; 
   &lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;&lt;span&gt;&lt;span&gt;Libraries that are packed within the actual production application, such as &lt;/span&gt;&lt;span&gt;&lt;code&gt;Alamofire&lt;/code&gt;&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;/div&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;These libraries can lead to unwanted side-effects:&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; 
  &lt;div class="reset-3c756112--listItemContent-756c9114"&gt; 
   &lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;&lt;span&gt;&lt;span&gt;A library can contain a vulnerability, which will make the application vulnerable. A good example is &lt;/span&gt;&lt;span&gt;&lt;code&gt;AFNetworking&lt;/code&gt;&lt;/span&gt;&lt;span&gt; version 2.5.1, which contained a bug that disabled certificate validation. This vulnerability would allow attackers to execute man-in-the-middle attacks against apps that are using the library to connect to their APIs.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;/div&gt;&lt;/li&gt; 
 &lt;li&gt; 
  &lt;div class="reset-3c756112--listItemContent-756c9114"&gt; 
   &lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;A library can no longer be maintained or hardly be used, which is why no vulnerabilities are reported and/or fixed. This can lead to having bad and/or vulnerable code in your application through the library.&lt;/span&gt;&lt;/p&gt; 
  &lt;/div&gt;&lt;/li&gt; 
 &lt;li&gt; 
  &lt;div class="reset-3c756112--listItemContent-756c9114"&gt; 
   &lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;A library can use a license, such as LGPL2.1, which requires the application author to provide access to the source code for those who use the application and request insight in its sources. In fact the application should then be allowed to be redistributed with modifications to its source code. This can endanger the intellectual property (IP) of the application.&lt;/span&gt;&lt;/p&gt; 
  &lt;/div&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;Note: there are two widely used package management tools: Carthage and CocoaPods. Please note that this issue can hold on multiple levels: When you use webviews with JavaScript running in the webview, the JavaScript libraries can have these issues as well. The same holds for plugins/libraries for Cordova, React-native and Xamarin apps.&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;&lt;br&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;iOS applications often make use of third party libraries. These third party libraries accelerate development as the developer has to write less code in order to solve a problem. There are two categories of libraries:&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; 
  &lt;div class="reset-3c756112--listItemContent-756c9114"&gt; 
   &lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;&lt;span&gt;&lt;span&gt;Libraries that are not (or should not) be packed within the actual production application, such as &lt;/span&gt;&lt;span&gt;&lt;code&gt;OHHTTPStubs&lt;/code&gt;&lt;/span&gt;&lt;span&gt; used for testing.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;/div&gt;&lt;/li&gt; 
 &lt;li&gt; 
  &lt;div class="reset-3c756112--listItemContent-756c9114"&gt; 
   &lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;&lt;span&gt;&lt;span&gt;Libraries that are packed within the actual production application, such as &lt;/span&gt;&lt;span&gt;&lt;code&gt;Alamofire&lt;/code&gt;&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;/div&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;These libraries can lead to unwanted side-effects:&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; 
  &lt;div class="reset-3c756112--listItemContent-756c9114"&gt; 
   &lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;&lt;span&gt;&lt;span&gt;A library can contain a vulnerability, which will make the application vulnerable. A good example is &lt;/span&gt;&lt;span&gt;&lt;code&gt;AFNetworking&lt;/code&gt;&lt;/span&gt;&lt;span&gt; version 2.5.1, which contained a bug that disabled certificate validation. This vulnerability would allow attackers to execute man-in-the-middle attacks against apps that are using the library to connect to their APIs.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;/div&gt;&lt;/li&gt; 
 &lt;li&gt; 
  &lt;div class="reset-3c756112--listItemContent-756c9114"&gt; 
   &lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;A library can no longer be maintained or hardly be used, which is why no vulnerabilities are reported and/or fixed. This can lead to having bad and/or vulnerable code in your application through the library.&lt;/span&gt;&lt;/p&gt; 
  &lt;/div&gt;&lt;/li&gt; 
 &lt;li&gt; 
  &lt;div class="reset-3c756112--listItemContent-756c9114"&gt; 
   &lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;A library can use a license, such as LGPL2.1, which requires the application author to provide access to the source code for those who use the application and request insight in its sources. In fact the application should then be allowed to be redistributed with modifications to its source code. This can endanger the intellectual property (IP) of the application.&lt;/span&gt;&lt;/p&gt; 
  &lt;/div&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;Note: there are two widely used package management tools: Carthage and CocoaPods. Please note that this issue can hold on multiple levels: When you use webviews with JavaScript running in the webview, the JavaScript libraries can have these issues as well. The same holds for plugins/libraries for Cordova, React-native and Xamarin apps.&lt;/span&gt;&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OWASP MASVS - Android - Checking for Weaknesses in Third Party Libraries" url="https://mobile-security.gitbook.io/mobile-security-testing-guide/android-testing-guide/0x05i-testing-code-quality-and-build-settings#checking-for-weaknesses-in-third-party-libraries-mstg-code-5"/>
            <reference name="OWASP MASVS - iOS - Checking for Weaknesses in Third Party Libraries" url="https://mobile-security.gitbook.io/mobile-security-testing-guide/ios-testing-guide/0x06i-testing-code-quality-and-build-settings"/>
          </references>
          <standards>
            <standard ref="7.5" supportedStandardRef="OWASP-MASVS-L1"/>
            <standard ref="7.5" supportedStandardRef="OWASP-MASVS-L1+R"/>
            <standard ref="7.5" supportedStandardRef="OWASP-MASVS-L2"/>
            <standard ref="7.5" supportedStandardRef="OWASP-MASVS-L2+R"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;span&gt;The dynamic analysis of this section comprises validating whether the copyrights of the licenses have been adhered to. This often means that the application should have an &lt;/span&gt; 
&lt;span&gt;&lt;code&gt;about&lt;/code&gt;&lt;/span&gt; 
&lt;span&gt; or &lt;/span&gt; 
&lt;span&gt;&lt;code&gt;EULA&lt;/code&gt;&lt;/span&gt; 
&lt;span&gt; section in which the copy-right statements are noted as required by the license of the third party library.&lt;/span&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:10.448">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="MASVS-2.15" name="Clean local storage after several failed attempts to authenticate user" issueId="" issueLink="" platform="" cost="0" risk="78" state="Recommended" owner="JamesRabe" library="OWASP-MASVS" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>The app's local storage should be wiped after an excessive number of failed authentication attempts.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="2.15" supportedStandardRef="OWASP-MASVS-L2"/>
            <standard ref="2.15" supportedStandardRef="OWASP-MASVS-L2+R"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that local storage is cleaned after failed attempts to authenticate</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:10.447">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="MASVS-6.10" name="Clear WebView's resources" issueId="" issueLink="" platform="" cost="0" risk="70" state="Recommended" owner="JamesRabe" library="OWASP-MASVS" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;span style="white-space: pre;"&gt;A WebView's cache, storage, and loaded resources (JavaScript, etc.) should be cleared before the WebView is destroyed.&lt;/span&gt;</desc>
          <implementations/>
          <references>
            <reference name="OWASP MASVS - Platform Interaction Requirements" url="https://mobile-security.gitbook.io/masvs/security-requirements/0x11-v6-interaction_with_the_environment"/>
          </references>
          <standards>
            <standard ref="6.10" supportedStandardRef="OWASP-MASVS-L2"/>
            <standard ref="6.10" supportedStandardRef="OWASP-MASVS-L2+R"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:10.448">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="MASVS-1.9" name="Create a mechanism to force updates on application" issueId="" issueLink="" platform="" cost="0" risk="78" state="Recommended" owner="JamesRabe" library="OWASP-MASVS" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;&lt;span&gt;&lt;span&gt;Starting from Android 5.0 (API level 21), together with the Play Core Library, apps can be forced to be updated. This mechanism is based on using the &lt;/span&gt;&lt;span&gt;&lt;code&gt;AppUpdateManager&lt;/code&gt;&lt;/span&gt;&lt;span&gt;. Before that, other mechanisms were used, such as doing http calls to the Google Play Store, which are not as reliable as the APIs of the Play Store might change. Alternatively, Firebase could be used to check for possible forced updates as well (see this &lt;/span&gt;&lt;/span&gt;&lt;a href="https://medium.com/@sembozdemir/force-your-users-to-update-your-app-with-using-firebase-33f1e0bcec5a" target="_blank"&gt;&lt;span&gt;&lt;span&gt;blog&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&lt;span&gt;). Enforced updating can be really helpful when it comes to public key pinning (see the Testing Network communication for more details) when a pin has to be refreshed due to a certificate/public key rotation. Next, vulnerabilities are easily patched by means of forced updates.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;&lt;span&gt;&lt;span&gt;For iOS, enforced updating can be really helpful when it comes to public key pinning (see the Testing Network communication for more details) when a pin has to be refreshed due to a certificate/public key rotation. Next, vulnerabilities are easily patched by means of forced updates. The challenge with iOS however, is that Apple does not provide any APIs yet to automate this process, instead, developers will have to create their own mechanism, such as described at various &lt;/span&gt;&lt;/span&gt;&lt;a href="https://mobikul.com/show-update-application-latest-version-functionality-ios-app-swift-3/" target="_blank"&gt;&lt;span&gt;&lt;span&gt;blogs&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&lt;span&gt; which boil down to looking up properties of the app using &lt;/span&gt;&lt;span&gt;&lt;code&gt;http://itunes.apple.com/lookup\?id\&amp;lt;BundleId&amp;gt;&lt;/code&gt;&lt;/span&gt;&lt;span&gt; or third party libraries, such as &lt;/span&gt;&lt;/span&gt;&lt;a href="https://github.com/ArtSabintsev/Siren" target="_blank"&gt;&lt;span&gt;&lt;span&gt;Siren&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&lt;span&gt; and &lt;/span&gt;&lt;/span&gt;&lt;a href="https://www.npmjs.com/package/react-native-appstore-version-checker" target="_blank"&gt;&lt;span&gt;&lt;span&gt;react-native-appstore-version-checker&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&lt;span&gt;. Most of these implementations will require a certain given version offered by an API or just "latest in the appstore", which means users can be frustrated with having to update the app, even though no business/security need for an update is truly there.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;Please note that newer versions of an application will not fix security issues that are living in the backends to which the app communicates. Allowing an app not to communicate with it might not be enough. Having proper API-lifecycle management is key here. Similarly, when a user is not forced to update, do not forget to test older versions of your app against your API and/or use proper API versioning.&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OWASP MASVS - Android - Testing enforced updating" url="https://mobile-security.gitbook.io/mobile-security-testing-guide/android-testing-guide/0x05h-testing-platform-interaction#testing-enforced-updating-mstg-arch-9"/>
            <reference name="OWASP MASVS - iOS - Testing enforced updating" url="https://mobile-security.gitbook.io/mobile-security-testing-guide/ios-testing-guide/0x06h-testing-platform-interaction#testing-enforced-updating-mstg-arch-9"/>
          </references>
          <standards>
            <standard ref="1.9" supportedStandardRef="OWASP-MASVS-L2"/>
            <standard ref="1.9" supportedStandardRef="OWASP-MASVS-L2+R"/>
            <standard ref="M7: Client Code Quality" supportedStandardRef="owasp-mobile-top-10-2016"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;span style="white-space: pre;"&gt;In order to test for proper updating: try downloading an older version of the application with a security vulnerability, either by a release from the developers or by using a third party app-store. Next, verify whether or not you can continue to use the application without updating it. If an update prompt is given, verify if you can still use the application by canceling the prompt or otherwise circumventing it through normal application usage. This includes validating whether the backend will stop calls to vulnerable backends and/or whether the vulnerable app-version itself is blocked by the backend. Lastly, see if you can play with the version number of a man-in-the-middled app and see how the backend responds to this (and if it is recorded at all for instance).&lt;/span&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:10.446">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="MASVS-4.12" name="Create an authorization model on remote endpoints" issueId="" issueLink="" platform="" cost="0" risk="78" state="Recommended" owner="JamesRabe" library="OWASP-MASVS" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;span style="white-space: pre;"&gt;Authorization models should be defined and enforced at the remote endpoint.&lt;/span&gt;</desc>
          <implementations/>
          <references>
            <reference name="OWASP MASVS - Authentication and Session Management Requirements" url="https://mobile-security.gitbook.io/masvs/security-requirements/0x09-v4-authentication_and_session_management_requirements"/>
          </references>
          <standards>
            <standard ref="4.12" supportedStandardRef="OWASP-MASVS-L1"/>
            <standard ref="4.12" supportedStandardRef="OWASP-MASVS-L1+R"/>
            <standard ref="4.12" supportedStandardRef="OWASP-MASVS-L2"/>
            <standard ref="4.12" supportedStandardRef="OWASP-MASVS-L2+R"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:10.447">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="MASVS-4.5-4.6" name="Create a strong password policy" issueId="" issueLink="" platform="" cost="0" risk="78" state="Recommended" owner="JamesRabe" library="OWASP-MASVS" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;span style="white-space: pre;"&gt;Password strength is a key concern when passwords are used for authentication. The password policy defines requirements to which end users should adhere. A password policy typically specifies password length, password complexity, and password topologies. A "strong" password policy makes manual or automated password cracking difficult or impossible.&lt;/span&gt;</desc>
          <implementations/>
          <references>
            <reference name="OWASP MASVS - Testing Login Activity and Device Blocking" url="https://mobile-security.gitbook.io/mobile-security-testing-guide/general-mobile-app-testing-guide/0x04e-testing-authentication-and-session-management"/>
          </references>
          <standards>
            <standard ref="4.5" supportedStandardRef="OWASP-MASVS-L1"/>
            <standard ref="4.5" supportedStandardRef="OWASP-MASVS-L1+R"/>
            <standard ref="4.5" supportedStandardRef="OWASP-MASVS-L2"/>
            <standard ref="4.5" supportedStandardRef="OWASP-MASVS-L2+R"/>
            <standard ref="4.6" supportedStandardRef="OWASP-MASVS-L1"/>
            <standard ref="4.6" supportedStandardRef="OWASP-MASVS-L1+R"/>
            <standard ref="4.6" supportedStandardRef="OWASP-MASVS-L2"/>
            <standard ref="4.6" supportedStandardRef="OWASP-MASVS-L2+R"/>
            <standard ref="M4: Insecure Authentication" supportedStandardRef="owasp-mobile-top-10-2016"/>
            <standard ref="M6: Insecure Authorization" supportedStandardRef="owasp-mobile-top-10-2016"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;span&gt;Automated password guessing attacks can be performed using a number of tools. For HTTP(S) services, using an interception proxy is a viable option. For example, you can use &lt;/span&gt; 
&lt;a href="https://portswigger.net/burp/help/intruder_using.html" target="_blank"&gt;&lt;span&gt;Burp Suite Intruder&lt;/span&gt;&lt;/a&gt; 
&lt;span&gt; to perform both wordlist-based and brute-force attacks.&lt;/span&gt; 
&lt;div&gt; 
 &lt;span&gt;&lt;br&gt;&lt;/span&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;span&gt;&lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;&lt;span&gt;&lt;span&gt;Execute the following steps for a wordlist based brute force attack with Burp Intruder:&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;ul&gt; 
   &lt;li&gt; 
    &lt;div class="reset-3c756112--listItemContent-756c9114"&gt; 
     &lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;&lt;span&gt;&lt;span&gt;Start Burp Suite Professional.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
    &lt;/div&gt;&lt;/li&gt; 
   &lt;li&gt; 
    &lt;div class="reset-3c756112--listItemContent-756c9114"&gt; 
     &lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;&lt;span&gt;&lt;span&gt;Create a new project (or open an existing one).&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
    &lt;/div&gt;&lt;/li&gt; 
   &lt;li&gt; 
    &lt;div class="reset-3c756112--listItemContent-756c9114"&gt; 
     &lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;&lt;span&gt;&lt;span&gt;Set up your mobile device to use Burp as the HTTP/HTTPS proxy. Log into the mobile app and intercept the authentication request sent to the backend service.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
    &lt;/div&gt;&lt;/li&gt; 
   &lt;li&gt; 
    &lt;div class="reset-3c756112--listItemContent-756c9114"&gt; 
     &lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;&lt;span&gt;&lt;span&gt;Right-click this request on the &lt;/span&gt;&lt;span&gt;&lt;strong&gt;Proxy/HTTP History&lt;/strong&gt;&lt;/span&gt;&lt;span&gt; tab and select &lt;/span&gt;&lt;span&gt;&lt;strong&gt;Send to Intruder&lt;/strong&gt;&lt;/span&gt;&lt;span&gt; in the context menu.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
    &lt;/div&gt;&lt;/li&gt; 
   &lt;li&gt; 
    &lt;div class="reset-3c756112--listItemContent-756c9114"&gt; 
     &lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;&lt;span&gt;&lt;span&gt;Select the &lt;/span&gt;&lt;span&gt;&lt;strong&gt;Intruder&lt;/strong&gt;&lt;/span&gt;&lt;span&gt; tab. For further information on how to use &lt;/span&gt;&lt;/span&gt;&lt;a href="https://portswigger.net/burp/documentation/desktop/tools/intruder/using" target="_blank"&gt;&lt;span&gt;&lt;span&gt;Burp Intruder&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&lt;span&gt; read the official documentation on Portswigger.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
    &lt;/div&gt;&lt;/li&gt; 
   &lt;li&gt; 
    &lt;div class="reset-3c756112--listItemContent-756c9114"&gt; 
     &lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;&lt;span&gt;&lt;span&gt;Make sure all parameters in the &lt;/span&gt;&lt;span&gt;&lt;strong&gt;Target&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;, &lt;/span&gt;&lt;span&gt;&lt;strong&gt;Positions&lt;/strong&gt;&lt;/span&gt;&lt;span&gt;, and &lt;/span&gt;&lt;span&gt;&lt;strong&gt;Options&lt;/strong&gt;&lt;/span&gt;&lt;span&gt; tabs are appropriately set and select the &lt;/span&gt;&lt;span&gt;&lt;strong&gt;Payload&lt;/strong&gt;&lt;/span&gt;&lt;span&gt; tab.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
    &lt;/div&gt;&lt;/li&gt; 
   &lt;li&gt; 
    &lt;div class="reset-3c756112--listItemContent-756c9114"&gt; 
     &lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;&lt;span&gt;&lt;span&gt;Load or paste the list of passwords you want to try. There are several resources available that offer password lists, like &lt;/span&gt;&lt;/span&gt;&lt;a href="https://github.com/fuzzdb-project/fuzzdb/" target="_blank"&gt;&lt;span&gt;&lt;span&gt;FuzzDB&lt;/span&gt;&lt;/span&gt;&lt;/a&gt;&lt;span&gt;&lt;span&gt;, the built-in lists in Burp Intruder or the files available in &lt;/span&gt;&lt;span&gt;&lt;code&gt;/usr/share/wordlists&lt;/code&gt;&lt;/span&gt;&lt;span&gt; on Kali Linux.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
    &lt;/div&gt;&lt;/li&gt; 
  &lt;/ul&gt;&lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;&lt;span&gt;&lt;span&gt;Once everything is configured and you have a word-list selected, you're ready to start the attack!&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt;&lt;/span&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:10.447">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="MASVS-2.11" name="Create the functionality to verify the app uses a minimum device-access-security policy" issueId="" issueLink="" platform="" cost="1" risk="78" state="Recommended" owner="JamesRabe" library="OWASP-MASVS" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Different checks on the Android device can be implemented by querying different system preferences from Settings.Secure. The Device Administration API offers different mechanisms to create security aware applications, that are able to enforce password policies or encryption of the device.</desc>
          <implementations/>
          <references>
            <reference name="OWASP MASVS - Android - Testing the Device-Access-Security Policy" url="https://mobile-security.gitbook.io/mobile-security-testing-guide/android-testing-guide/0x05d-testing-data-storage#testing-the-device-access-security-policy-mstg-storage-11"/>
            <reference name="OWASP MASVS - iOS - Testing the Device-Access-Security Policy" url="https://mobile-security.gitbook.io/mobile-security-testing-guide/ios-testing-guide/0x06d-testing-data-storage#testing-local-data-storage-mstg-storage-1-and-mstg-storage-2"/>
          </references>
          <standards>
            <standard ref="2.11" supportedStandardRef="OWASP-MASVS-L2"/>
            <standard ref="2.11" supportedStandardRef="OWASP-MASVS-L2+R"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that the app verifies the mobile device complies with the minimum
                            device-access-security policy.
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:10.447">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="MASVS-7.7" name="Deny the access by default when an uncaught exception appears" issueId="" issueLink="" platform="" cost="1" risk="68" state="Recommended" owner="JamesRabe" library="OWASP-MASVS" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Deny the access by default to prevent the app crashing because of uncaught exception and to avoid unauthorized access.</desc>
          <implementations/>
          <references>
            <reference name="OWASP MASVS - Android - Testing Exception Handling" url="https://mobile-security.gitbook.io/mobile-security-testing-guide/android-testing-guide/0x05i-testing-code-quality-and-build-settings#testing-exception-handling-mstg-code-6-and-mstg-code-7"/>
            <reference name="OWASP MASVS - iOS - Testing Error Handling in Security Controls" url="https://mobile-security.gitbook.io/mobile-security-testing-guide/ios-testing-guide/0x06i-testing-code-quality-and-build-settings#testing-exception-handling-mstg-code-6"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="14" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="16" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="7.7" supportedStandardRef="OWASP-MASVS-L1"/>
            <standard ref="7.7" supportedStandardRef="OWASP-MASVS-L1+R"/>
            <standard ref="7.7" supportedStandardRef="OWASP-MASVS-L2"/>
            <standard ref="7.7" supportedStandardRef="OWASP-MASVS-L2+R"/>
            <standard ref="8" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="9" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API7:2019-Security Misconfiguration" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="M7: Client Code Quality" supportedStandardRef="owasp-mobile-top-10-2016"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that the application denies access to the session when the exceptions appear.
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:10.449">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="MASVS-6.5" name="Disable JavaScript by default in a WebView if it is not necessary" issueId="" issueLink="" platform="" cost="1" risk="70" state="Recommended" owner="JamesRabe" library="OWASP-MASVS" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>JavaScript is disabled by default in a WebView and if not needed shouldn't be enabled. This reduces the attack surface and potential threats to the app.</desc>
          <implementations/>
          <references>
            <reference name="OWASP MASVS - Android - Testing JavaScript Execution in WebViews" url="https://mobile-security.gitbook.io/mobile-security-testing-guide/android-testing-guide/0x05h-testing-platform-interaction#testing-javascript-execution-in-webviews-mstg-platform-5"/>
            <reference name="OWASP MASVS - iOS - Testing JavaScript Execution in WebViews" url="https://mobile-security.gitbook.io/mobile-security-testing-guide/ios-testing-guide/0x06h-testing-platform-interaction#testing-ios-webviews-mstg-platform-5"/>
          </references>
          <standards>
            <standard ref="6.5" supportedStandardRef="OWASP-MASVS-L1"/>
            <standard ref="6.5" supportedStandardRef="OWASP-MASVS-L1+R"/>
            <standard ref="6.5" supportedStandardRef="OWASP-MASVS-L2"/>
            <standard ref="6.5" supportedStandardRef="OWASP-MASVS-L2+R"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>For Android:&amp;nbsp;
                            &lt;div&gt;
                            &lt;ul&gt;
                            &lt;li&gt;Search in the code the following instruction:
                            webview.getSettings().setJavaScriptEnabled(true);&lt;/li&gt;
                            &lt;li&gt;Check that this instruction doesn't exist in the code.&amp;nbsp;&lt;/li&gt;
                            &lt;/ul&gt;For iOS:&amp;nbsp;
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;ul&gt;
                            &lt;li&gt;Check that the JavaScript is disabled and configured as following:&amp;nbsp;&lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;/div&gt;
                            &lt;blockquote&gt;
                            &lt;div&gt;
                            #import &amp;quot;ViewController.h&amp;quot;&amp;nbsp;
                            &lt;/div&gt;
                            &lt;div&gt;
                            #import @interface ViewController () @property(strong,nonatomic) WKWebView *webView;
                            &lt;/div&gt;
                            &lt;div&gt;
                            @end @implementation ViewController - (void)viewDidLoad { NSURL *url = [NSURL
                            URLWithString:@&amp;quot;http://www.example.com/&amp;quot;];&amp;nbsp;
                            &lt;/div&gt;
                            &lt;div&gt;
                            NSURLRequest *request = [NSURLRequest requestWithURL:url];&amp;nbsp;
                            &lt;/div&gt;
                            &lt;div&gt;
                            WKPreferences *pref = [[WKPreferences alloc] init]; //Disable javascript execution: [pref
                            setJavaScriptEnabled:NO];&amp;nbsp;
                            &lt;/div&gt;
                            &lt;div&gt;
                            [pref setJavaScriptCanOpenWindowsAutomatically:NO];&amp;nbsp;
                            &lt;/div&gt;
                            &lt;div&gt;
                            WKWebViewConfiguration *conf = [[WKWebViewConfiguration alloc] init];&amp;nbsp;
                            &lt;/div&gt;
                            &lt;div&gt;
                            [conf setPreferences:pref]; _webView = [[WKWebView
                            alloc]initWithFrame:CGRectMake(self.view.frame.origin.x,85, self.view.frame.size.width,
                            self.view.frame.size.height-85) configuration:conf] ;&amp;nbsp;
                            &lt;/div&gt;
                            &lt;div&gt;
                            [_webView loadRequest:request];&amp;nbsp;
                            &lt;/div&gt;
                            &lt;div&gt;
                            [self.view addSubview:_webView]; }
                            &lt;/div&gt;
                            &lt;/blockquote&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:10.448">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="MASVS-2.5" name="Disable keyboard cache on sensitive data text inputs" issueId="" issueLink="" platform="" cost="1" risk="78" state="Recommended" owner="JamesRabe" library="OWASP-MASVS" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>A general best practice is overwriting different functions in the input field to disable the clipboard specifically for it. Also longclickable should be deactivated for the input field.</desc>
          <implementations/>
          <references>
            <reference name="OWASP MASVS - Android - Testing Whether Sensitive Data Is Exposed via IPC Mechanisms" url="https://mobile-security.gitbook.io/mobile-security-testing-guide/android-testing-guide/0x05d-testing-data-storage#determining-whether-sensitive-stored-data-has-been-exposed-via-ipc-mechanisms-mstg-storage-6"/>
            <reference name="OWASP MASVS - iOS - Testing for Sensitive Data in the Clipboard" url="https://mobile-security.gitbook.io/mobile-security-testing-guide/ios-testing-guide/0x06d-testing-data-storage#finding-sensitive-data-in-the-keyboard-cache-mstg-storage-5"/>
          </references>
          <standards>
            <standard ref="2.5" supportedStandardRef="OWASP-MASVS-L1"/>
            <standard ref="2.5" supportedStandardRef="OWASP-MASVS-L1+R"/>
            <standard ref="2.5" supportedStandardRef="OWASP-MASVS-L2"/>
            <standard ref="2.5" supportedStandardRef="OWASP-MASVS-L2+R"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check the clipboard is disabled when sensitive data is used.
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:10.447">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="MASVS-8.10" name="Do not use the SSAID for 'device binding'" issueId="" issueLink="" platform="" cost="1" risk="78" state="Recommended" owner="JamesRabe" library="OWASP-MASVS" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Do not use the SSAID for device binding because the behavior of the SSAID has changed since
                        Android O and the behavior of MAC addresses have changed in Android N.

                        Google has set a new set of recommendations in their SDK documentation regarding identifiers as
                        well. Because of this new behavior, we recommend developers not rely on the SSAID alone, as the
                        identifier has become less stable. For instance: The SSAID might change upon a factory reset or
                        when the app is reinstalled after the upgrade to Android O. Please note that there are a number
                        of devices which have the same ANDROID_ID and/or have an ANDROID_ID that can be overridden.
                        Also, the Build.Serial was often used but now apps targeting Android O will get "UNKNOWN" when
                        they request the Build.Serial.
                    </desc>
          <implementations/>
          <references>
            <reference name="OWASP MASVS - Android - Testing Device Binding" url="https://mobile-security.gitbook.io/mobile-security-testing-guide/android-testing-guide/0x05j-testing-resiliency-against-reverse-engineering#testing-device-binding-mstg-resilience-10"/>
            <reference name="OWASP MASVS - iOS - Testing Device Binding" url="https://mobile-security.gitbook.io/mobile-security-testing-guide/ios-testing-guide/0x06j-testing-resiliency-against-reverse-engineering#device-binding-mstg-resilience-10"/>
          </references>
          <standards>
            <standard ref="8.10" supportedStandardRef="OWASP-MASVS-L1+R"/>
            <standard ref="8.10" supportedStandardRef="OWASP-MASVS-L2+R"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ul&gt;
                            &lt;li&gt;Dynamic Analysis using an Emulator.&lt;/li&gt;
                            &lt;li&gt;Run the application on an Emulator.&lt;/li&gt;
                            &lt;li&gt;Make sure you can raise the trust in the instance of the application (e.g.
                            authenticate).&lt;/li&gt;
                            &lt;li&gt;Retrieve the data from the Emulator. This has a few steps:&amp;nbsp;&lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;ol&gt;
                            &lt;ol&gt;
                            &lt;li&gt;ssh to your emulator using ADB shell&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;run-as&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;chmod 777 the contents of cache and shared-preferences&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;exit the current user&lt;/li&gt;
                            &lt;li&gt;copy the contents of /dat/data//cache &amp;amp; shared-preferences to the sdcard&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;use ADB or the DDMS to pull the contents&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Install the application on another Emulator&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;&amp;nbsp;Overwrite the data from step 3 in the data folder of the application.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;copy the contents of step 3 to the sdcard of the second emulator.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;ssh to your emulator using ADB shell&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;run-as&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;chmod 777 the folders cache and shared-preferences&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;copy the older contents of the sdcard to /dat/data//cache &amp;amp;
                            shared-preferences&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Can you continue in an authenticated state? If so, then binding might not be
                            working properly.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/ol&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:10.451">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="MASVS-2.3" name="Don't write any sensitive data on logs" issueId="" issueLink="" platform="" cost="0" risk="78" state="Recommended" owner="JamesRabe" library="OWASP-MASVS" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;There are many legitimate reasons for creating log files on a mobile device, including keeping track of crashes or errors that are stored locally while the device is offline (so that they can be sent to the app's developer once online), and storing usage statistics. However, logging sensitive data, such as credit card numbers and session information, may expose the data to attackers or malicious applications. Log files can be created in several ways.&amp;nbsp;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;The following list includes two classes that are available for Android:&lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Log Class&lt;/li&gt; 
 &lt;li&gt;Logger Class&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;p&gt;Use a centralized logging class and mechanism and remove logging statements from the production release because other applications may be able to read them.&lt;/p&gt; 
&lt;p&gt;The following list shows the methods available on iOS:&lt;/p&gt; 
&lt;p&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;NSLog Method&lt;/li&gt; 
 &lt;li&gt;printf-like function&lt;/li&gt; 
 &lt;li&gt;NSAssert-like function&lt;/li&gt; 
 &lt;li&gt;Macro&lt;/li&gt; 
&lt;/ul&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;p&gt;&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OWASP MASVS - Android - Testing Data Storage" url="https://mobile-security.gitbook.io/mobile-security-testing-guide/android-testing-guide/0x05d-testing-data-storage"/>
            <reference name="OWASP MASVS - iOS - Testing Data Storage" url="https://mobile-security.gitbook.io/mobile-security-testing-guide/ios-testing-guide/0x06d-testing-data-storage"/>
          </references>
          <standards>
            <standard ref="2.3" supportedStandardRef="OWASP-MASVS-L1"/>
            <standard ref="2.3" supportedStandardRef="OWASP-MASVS-L1+R"/>
            <standard ref="2.3" supportedStandardRef="OWASP-MASVS-L2"/>
            <standard ref="2.3" supportedStandardRef="OWASP-MASVS-L2+R"/>
            <standard ref="M1: Improper Platform Usage" supportedStandardRef="owasp-mobile-top-10-2016"/>
            <standard ref="M2: Insecure Data Storage" supportedStandardRef="owasp-mobile-top-10-2016"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ul&gt; 
 &lt;li&gt;Review app logs in search of sensitive data&lt;/li&gt; 
&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:10.447">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="MASVS-8.11" name="Encrypt and pack all executable files and libraries belonging to the app" issueId="" issueLink="" platform="" cost="1" risk="78" state="Recommended" owner="JamesRabe" library="OWASP-MASVS" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Ensure that all executable files and libraries belonging to the app are encrypted on the file level and/or important code and data segments inside the executables are encrypted or packed.</desc>
          <implementations/>
          <references>
            <reference name="OWASP MASVS - Android - Testing Advanced Obfuscation" url="https://mobile-security.gitbook.io/mobile-security-testing-guide/android-testing-guide/0x05j-testing-resiliency-against-reverse-engineering#testing-obfuscation-mstg-resilience-9"/>
            <reference name="OWASP MASVS - iOS - Testing Simple Obfuscation" url="https://mobile-security.gitbook.io/mobile-security-testing-guide/ios-testing-guide/0x06j-testing-resiliency-against-reverse-engineering#testing-obfuscation-mstg-resilience-9"/>
          </references>
          <standards>
            <standard ref="8.11" supportedStandardRef="OWASP-MASVS-L1+R"/>
            <standard ref="8.11" supportedStandardRef="OWASP-MASVS-L2+R"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that all executable files and libraries belonging to the app are encrypted or
                            packed.
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:10.451">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="MASVS-2.14" name="Encrypt sensitive data stored locally" issueId="" issueLink="" platform="" cost="0" risk="78" state="Recommended" owner="JamesRabe" library="OWASP-MASVS" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>If sensitive data is still required to be stored locally, it should be encrypted using a key derived from hardware backed storage which requires authentication</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="2.14" supportedStandardRef="OWASP-MASVS-L2"/>
            <standard ref="2.14" supportedStandardRef="OWASP-MASVS-L2+R"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that sensitive data is not stored in plain text.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:10.447">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="MASVS-2.13" name="Ensure sensitive data is not stored locally on the mobile device" issueId="" issueLink="" platform="" cost="0" risk="78" state="Recommended" owner="JamesRabe" library="OWASP-MASVS" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>No sensitive data should be stored locally on the mobile device. Instead, data should be retrieved from a remote endpoint when needed and only be kept in memory.</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="2.13" supportedStandardRef="OWASP-MASVS-L2"/>
            <standard ref="2.13" supportedStandardRef="OWASP-MASVS-L2+R"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check if any sensitive data is stored on the device and analyze if it is necessary.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:10.447">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="MASVS-8.7" name="Ensure that the app responds correctly against tampering, debugging and emulation" issueId="" issueLink="" platform="" cost="1" risk="78" state="Recommended" owner="JamesRabe" library="OWASP-MASVS" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Ensure the app implements multiple different responses to tampering, debugging and emulation,
                        including stealthy responses that don't simply terminate the app.
                    </desc>
          <implementations/>
          <references>
            <reference name="OWASP MASVS - Android - Verifying the Variability of Tampering Responses" url="https://mobile-security.gitbook.io/mobile-security-testing-guide/android-testing-guide/0x05c-reverse-engineering-and-tampering"/>
            <reference name="OWASP MASVS - iOS - Verifying the Variability of Tampering Responses" url="https://mobile-security.gitbook.io/mobile-security-testing-guide/ios-testing-guide/0x06c-reverse-engineering-and-tampering"/>
          </references>
          <standards>
            <standard ref="8.7" supportedStandardRef="OWASP-MASVS-L1+R"/>
            <standard ref="8.7" supportedStandardRef="OWASP-MASVS-L2+R"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check the app implements multiple different responses to tampering, debugging and
                            emulation, including stealthy responses that don't simply terminate the app.
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:10.451">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="MASVS-5.6" name="Ensure the app only depends on up-to-date connectivity and security libraries" issueId="" issueLink="" platform="" cost="0" risk="78" state="Recommended" owner="JamesRabe" library="OWASP-MASVS" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Android relies on a security provider to provide SSL/TLS-based connections. The problem with this kind of security provider (one example is OpenSSL), which comes with the device, is that it often has bugs and/or vulnerabilities. To avoid known vulnerabilities, developers need to make sure that the application will install a proper security provider. Since July 11, 2016, Google has been rejecting Play Store application submissions (both new applications and updates) that use vulnerable versions of OpenSSL.</desc>
          <implementations/>
          <references>
            <reference name="OWASP MASVS - Android - Testing the Security Provider" url="https://mobile-security.gitbook.io/mobile-security-testing-guide/android-testing-guide/0x05g-testing-network-communication#testing-the-security-provider-mstg-network-6"/>
          </references>
          <standards>
            <standard ref="5.6" supportedStandardRef="OWASP-MASVS-L2"/>
            <standard ref="5.6" supportedStandardRef="OWASP-MASVS-L2+R"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;When you have the source code:&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; 
  &lt;div class="reset-3c756112--listItemContent-756c9114"&gt; 
   &lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;Run the application in debug mode, then create a breakpoint where the app will first contact the endpoint(s).&lt;/span&gt;&lt;/p&gt; 
  &lt;/div&gt;&lt;/li&gt; 
 &lt;li&gt; 
  &lt;div class="reset-3c756112--listItemContent-756c9114"&gt; 
   &lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;&lt;span&gt;&lt;span&gt;Right click the highlighted code and select &lt;/span&gt;&lt;span&gt;&lt;code&gt;Evaluate Expression&lt;/code&gt;&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;/div&gt;&lt;/li&gt; 
 &lt;li&gt; 
  &lt;div class="reset-3c756112--listItemContent-756c9114"&gt; 
   &lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;&lt;span&gt;&lt;span&gt;Type &lt;/span&gt;&lt;span&gt;&lt;code&gt;Security.getProviders()&lt;/code&gt;&lt;/span&gt;&lt;span&gt; and press enter.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;/div&gt;&lt;/li&gt; 
 &lt;li&gt; 
  &lt;div class="reset-3c756112--listItemContent-756c9114"&gt; 
   &lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;&lt;span&gt;&lt;span&gt;Check the providers and try to find &lt;/span&gt;&lt;span&gt;&lt;code&gt;GmsCore_OpenSSL&lt;/code&gt;&lt;/span&gt;&lt;span&gt;, which should be the new top-listed provider.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;/div&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;When you do not have the source code:&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; 
  &lt;div class="reset-3c756112--listItemContent-756c9114"&gt; 
   &lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;&lt;span&gt;&lt;span&gt;Use Xposed to hook into the &lt;/span&gt;&lt;span&gt;&lt;code&gt;java.security&lt;/code&gt;&lt;/span&gt;&lt;span&gt; package, then hook into &lt;/span&gt;&lt;span&gt;&lt;code&gt;java.security.Security&lt;/code&gt;&lt;/span&gt;&lt;span&gt; with the method &lt;/span&gt;&lt;span&gt;&lt;code&gt;getProviders&lt;/code&gt;&lt;/span&gt;&lt;span&gt; (with no arguments). The return value will be an array of &lt;/span&gt;&lt;span&gt;&lt;code&gt;Provider&lt;/code&gt;&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;/div&gt;&lt;/li&gt; 
 &lt;li&gt; 
  &lt;div class="reset-3c756112--listItemContent-756c9114"&gt; 
   &lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;&lt;span&gt;&lt;span&gt;Determine whether the first provider is &lt;/span&gt;&lt;span&gt;&lt;code&gt;GmsCore_OpenSSL&lt;/code&gt;&lt;/span&gt;&lt;span&gt;.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
  &lt;/div&gt;&lt;/li&gt; 
&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:10.448">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="MASVS-4.4" name="Ensure the logout functionality terminates the session" issueId="" issueLink="" platform="" cost="0" risk="78" state="Recommended" owner="JamesRabe" library="OWASP-MASVS" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;The purpose of this test case is verifying logout functionality and determining whether it effectively terminates the session on both client and server and invalidates a stateless token.&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;Failing to destroy the server-side session is one of the most common logout functionality implementation errors. This error keeps the session or token alive, even after the user logs out of the application. An attacker who gets valid authentication information can continue to use it and hijack a user's account.&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;Many mobile apps don't automatically log users out. There can be various reasons, such as: because it is inconvenient for customers, or because of decisions made when implementing stateless authentication. The application should still have a logout function, and it should be implemented according to best practices, destroying all locally stored tokens or session identifiers. If session information is stored on the server, it should also be destroyed by sending a logout request to that server. In case of a high-risk application, tokens should be blacklisted. Not removing tokens or session identifiers can result in unauthorized access to the application in case the tokens are leaked. Note that other sensitive types of information should be removed as well, as any information that is not properly cleared may be leaked later, for example during a device backup.&lt;/span&gt;&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OWASP MASVS - Testing Login Activity and Device Blocking" url="https://mobile-security.gitbook.io/mobile-security-testing-guide/general-mobile-app-testing-guide/0x04e-testing-authentication-and-session-management"/>
          </references>
          <standards>
            <standard ref="4.4" supportedStandardRef="OWASP-MASVS-L1"/>
            <standard ref="4.4" supportedStandardRef="OWASP-MASVS-L1+R"/>
            <standard ref="4.4" supportedStandardRef="OWASP-MASVS-L2"/>
            <standard ref="4.4" supportedStandardRef="OWASP-MASVS-L2+R"/>
            <standard ref="M4: Insecure Authentication" supportedStandardRef="owasp-mobile-top-10-2016"/>
            <standard ref="M6: Insecure Authorization" supportedStandardRef="owasp-mobile-top-10-2016"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;Use an interception proxy for dynamic application analysis and execute the following steps to check whether the logout is implemented properly:&lt;/span&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; 
  &lt;div class="reset-3c756112--listItemContent-756c9114"&gt; 
   &lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;Log in to the application.&lt;/span&gt;&lt;/p&gt; 
  &lt;/div&gt;&lt;/li&gt; 
 &lt;li&gt; 
  &lt;div class="reset-3c756112--listItemContent-756c9114"&gt; 
   &lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;Access a resource that requires authentication, typically a request for private information belonging to your account.&lt;/span&gt;&lt;/p&gt; 
  &lt;/div&gt;&lt;/li&gt; 
 &lt;li&gt; 
  &lt;div class="reset-3c756112--listItemContent-756c9114"&gt; 
   &lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;Log out of the application.&lt;/span&gt;&lt;/p&gt; 
  &lt;/div&gt;&lt;/li&gt; 
 &lt;li&gt; 
  &lt;div class="reset-3c756112--listItemContent-756c9114"&gt; 
   &lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;Try to access the data again by resending the request from step 2.&lt;/span&gt;&lt;/p&gt; 
  &lt;/div&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;If the logout is correctly implemented on the server, an error message or redirect to the login page will be sent back to the client. On the other hand, if you receive the same response you got in step 2, the token or session ID is still valid and hasn't been correctly terminated on the server.&lt;/span&gt;&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:10.447">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="MASVS-4.11" name="Implement a device blocking functionality" issueId="" issueLink="" platform="" cost="0" risk="78" state="Recommended" owner="JamesRabe" library="OWASP-MASVS" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;For applications which require L2 protection, the MASVS states that they should inform the user about all login activities within the app with the possibility of blocking certain devices. This can be broken down into various scenarios:&lt;/span&gt;&lt;/p&gt; 
&lt;ol&gt; 
 &lt;li&gt; 
  &lt;div class="reset-3c756112--listItemContent-756c9114"&gt; 
   &lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;The application provides a push notification the moment their account is used on another device to notify the user of different activities. The user can then block this device after opening the app via the push-notification.&lt;/span&gt;&lt;/p&gt; 
  &lt;/div&gt;&lt;/li&gt; 
 &lt;li&gt; 
  &lt;div class="reset-3c756112--listItemContent-756c9114"&gt; 
   &lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;The application provides an overview of the last session after login. If the previous session was with a different configuration (e.g. location, device, app-version) compared to the current configuration, then the user should have the option to report suspicious activities and block devices used in the previous session.&lt;/span&gt;&lt;/p&gt; 
  &lt;/div&gt;&lt;/li&gt; 
 &lt;li&gt; 
  &lt;div class="reset-3c756112--listItemContent-756c9114"&gt; 
   &lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;The application provides an overview of the last session after login at all times.&lt;/span&gt;&lt;/p&gt; 
  &lt;/div&gt;&lt;/li&gt; 
 &lt;li&gt; 
  &lt;div class="reset-3c756112--listItemContent-756c9114"&gt; 
   &lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;The application has a self-service portal in which the user can see an audit-log. This allows the user to manage the different devices that are logged in.&lt;/span&gt;&lt;/p&gt; 
  &lt;/div&gt;&lt;/li&gt; 
&lt;/ol&gt; 
&lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;The developer can make use of specific meta-information and associate it to each different activity or event within the application. This will make it easier for the user to spot suspicious behavior and block the corresponding device. The meta-information may include:&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; 
  &lt;div class="reset-3c756112--listItemContent-756c9114"&gt; 
   &lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;Device: The user can clearly identify all devices where the app is being used.&lt;/span&gt;&lt;/p&gt; 
  &lt;/div&gt;&lt;/li&gt; 
 &lt;li&gt; 
  &lt;div class="reset-3c756112--listItemContent-756c9114"&gt; 
   &lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;Date and Time: The user can clearly see the latest date and time when the app was used.&lt;/span&gt;&lt;/p&gt; 
  &lt;/div&gt;&lt;/li&gt; 
 &lt;li&gt; 
  &lt;div class="reset-3c756112--listItemContent-756c9114"&gt; 
   &lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;Location: The user can clearly identify the latest locations where the app was used.&lt;/span&gt;&lt;/p&gt; 
  &lt;/div&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;The application can provide a list of activities history which will be updated after each sensitive activity within the application. The choice of which activities to audit needs to be done for each application based on the data it handles and the level of security risk the team is willing to have. Below is a list of common sensitive activities that are usually audited:&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; 
  &lt;div class="reset-3c756112--listItemContent-756c9114"&gt; 
   &lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;Login attempts&lt;/span&gt;&lt;/p&gt; 
  &lt;/div&gt;&lt;/li&gt; 
 &lt;li&gt; 
  &lt;div class="reset-3c756112--listItemContent-756c9114"&gt; 
   &lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;Password changes&lt;/span&gt;&lt;/p&gt; 
  &lt;/div&gt;&lt;/li&gt; 
 &lt;li&gt; 
  &lt;div class="reset-3c756112--listItemContent-756c9114"&gt; 
   &lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;Personal Identifiable Information changes (name, email address, telephone number, etc.)&lt;/span&gt;&lt;/p&gt; 
  &lt;/div&gt;&lt;/li&gt; 
 &lt;li&gt; 
  &lt;div class="reset-3c756112--listItemContent-756c9114"&gt; 
   &lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;Sensitive activities (purchase, accessing important resources, etc.)&lt;/span&gt;&lt;/p&gt; 
  &lt;/div&gt;&lt;/li&gt; 
 &lt;li&gt; 
  &lt;div class="reset-3c756112--listItemContent-756c9114"&gt; 
   &lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;Consent to Terms and Conditions clauses&lt;/span&gt;&lt;/p&gt; 
  &lt;/div&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;Paid content requires special care, and additional meta-information (e.g., operation cost, credit, etc.) might be used to ensure user's knowledge about the whole operation's parameters.&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;In addition, non-repudiation mechanisms should be applied to sensitive transactions (e.g. payed content access, given consent to Terms and Conditions clauses, etc.) in order to prove that a specific transaction was in fact performed (integrity) and by whom (authentication).&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;br&gt;&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OWASP MASVS - Testing Login Activity and Device Blocking" url="https://mobile-security.gitbook.io/mobile-security-testing-guide/general-mobile-app-testing-guide/0x04e-testing-authentication-and-session-management"/>
          </references>
          <standards>
            <standard ref="4.11" supportedStandardRef="OWASP-MASVS-L2"/>
            <standard ref="4.11" supportedStandardRef="OWASP-MASVS-L2+R"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;&lt;span&gt;&lt;span&gt;In all cases, you should verify whether different devices are detected correctly. Therefore, the binding of the application to the actual device should be tested. In iOS, a developer can use&amp;nbsp;&lt;/span&gt;&lt;span&gt;&lt;code&gt;identifierForVendor&lt;/code&gt;&lt;/span&gt;&lt;span&gt;, which is related to the bundle ID: the moment you change a bundle ID, the method will return a different value. When the app is ran for the first time, make sure you store the value returned by&amp;nbsp;&lt;/span&gt;&lt;span&gt;&lt;code&gt;identifierForVendor&lt;/code&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;to the KeyChain, so that changes to it can be detected at an early stage.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;&lt;span&gt;&lt;span&gt;In Android, the developer can use&amp;nbsp;&lt;/span&gt;&lt;span&gt;&lt;code&gt;Settings.Secure.ANDROID_ID&lt;/code&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;till Android 8.0 (API level 26) to identify an application instance. Note that starting at Android 8.0 (API level 26),&amp;nbsp;&lt;/span&gt;&lt;span&gt;&lt;code&gt;ANDROID_ID&lt;/code&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;is no longer a device unique ID. Instead, it becomes scoped by the combination of app signing key, user and device. So validating&amp;nbsp;&lt;/span&gt;&lt;span&gt;&lt;code&gt;ANDROID_ID&lt;/code&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;for device blocking could be tricky for these Android versions. Because if an app changes its signing key, the&amp;nbsp;&lt;/span&gt;&lt;span&gt;&lt;code&gt;ANDROID_ID&lt;/code&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;will change and it won't be able to recognize old users devices. Therefore, it's better to store the&amp;nbsp;&lt;/span&gt;&lt;span&gt;&lt;code&gt;ANDROID_ID&lt;/code&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;encrypted and privately in a private a shared preferences file using a randomly generated key from the&amp;nbsp;&lt;/span&gt;&lt;span&gt;&lt;code&gt;AndroidKeyStore&lt;/code&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;and preferably AES_GCM encryption. The moment the app signature changes, the application can check for a delta and register the new&amp;nbsp;&lt;/span&gt;&lt;span&gt;&lt;code&gt;ANDROID_ID&lt;/code&gt;&lt;/span&gt;&lt;span&gt;. The moment this new ID changes without a new application signing key, it should indicate that something else is wrong. Next, the device binding can be extended by signing requests with a key stored in the&amp;nbsp;&lt;/span&gt;&lt;span&gt;&lt;code&gt;Keychain&lt;/code&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;for iOS and in the&amp;nbsp;&lt;/span&gt;&lt;span&gt;&lt;code&gt;KeyStore&lt;/code&gt;&lt;/span&gt;&lt;span&gt;&amp;nbsp;in Android can reassure strong device binding. You should also test if using different IPs, different locations and/or different time-slots will trigger the right type of information in all scenarios.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/p&gt; 
&lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;Lastly, the blocking of the devices should be tested, by blocking a registered instance of the app and see if it is then no longer allowed to authenticate. Note: in case of an application which requires L2 protection, it can be a good idea to warn a user even before the first authentication on a new device. Instead: warn the user already when a second instance of the app is registered.&lt;/span&gt;&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:10.447">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="MASVS-8.1" name="Implement detection and response functionalities for root detection" issueId="" issueLink="" platform="" cost="1" risk="78" state="Recommended" owner="JamesRabe" library="OWASP-MASVS" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Implement detection and response functionalities to detect rooted devices and if the device is rooted, the app shall respond in two ways:&amp;nbsp; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;The app notifies the user that their device is rooted and it's not secure to continue with the app.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Terminate the session and the app, because sensitive data is vulnerable.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="OWASP MASVS - Android - Testing Advanced Root Detection" url="https://mobile-security.gitbook.io/mobile-security-testing-guide/android-testing-guide/0x05j-testing-resiliency-against-reverse-engineering#testing-root-detection-mstg-resilience-1"/>
            <reference name="OWASP MASVS - iOS - Testing Advanced Root Detection" url="https://mobile-security.gitbook.io/mobile-security-testing-guide/ios-testing-guide/0x06j-testing-resiliency-against-reverse-engineering#jailbreak-detection-mstg-resilience-1"/>
          </references>
          <standards>
            <standard ref="8.1" supportedStandardRef="OWASP-MASVS-L1+R"/>
            <standard ref="8.1" supportedStandardRef="OWASP-MASVS-L2+R"/>
            <standard ref="M8: Code Tampering" supportedStandardRef="owasp-mobile-top-10-2016"/>
            <standard ref="M9: Reverse Engineering" supportedStandardRef="owasp-mobile-top-10-2016"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ul&gt;
                            &lt;li&gt;Check that the app has two or more functionalities with independent methods to
                            detect a rooted device.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Check that if the device is rooted, the user is alerted or the app is terminated.&lt;/li&gt;
                            &lt;/ul&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:10.449">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="MASVS-8.3" name="Implement functionality to alert when the app code changes" issueId="" issueLink="" platform="" cost="1" risk="78" state="Recommended" owner="JamesRabe" library="OWASP-MASVS" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Implement functionality to detect, notify and respond when the app is modified by executable files or by anti-debugging tools within its own sandbox. When the injection is detected the app shall alert the user and terminate the session.</desc>
          <implementations/>
          <references>
            <reference name="OWASP MASVS - Android - Testing File Integrity Checks" url="https://mobile-security.gitbook.io/mobile-security-testing-guide/android-testing-guide/0x05j-testing-resiliency-against-reverse-engineering#testing-file-integrity-checks-mstg-resilience-3"/>
            <reference name="OWASP MASVS - iOS - Testing Memory Integrity Checks" url="https://mobile-security.gitbook.io/mobile-security-testing-guide/ios-testing-guide/0x06j-testing-resiliency-against-reverse-engineering#file-integrity-checks-mstg-resilience-3-and-mstg-resilience-11"/>
          </references>
          <standards>
            <standard ref="8.3" supportedStandardRef="OWASP-MASVS-L1+R"/>
            <standard ref="8.3" supportedStandardRef="OWASP-MASVS-L2+R"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;For the application source integrity checks, run the app on the device in an
                            unmodified state and make sure that everything works.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Then apply simple patches to the classes.dex and any .so libraries contained in
                            the app package. Re-package and re-sign the app.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Check the app alerts the user and/or terminates the session.&lt;/li&gt;
                            &lt;/ol&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:10.451">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="MASVS-8.6" name="Implement functionality to detect and respond to, modifications of process memory" issueId="" issueLink="" platform="" cost="1" risk="78" state="Recommended" owner="JamesRabe" library="OWASP-MASVS" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Create functionality to detect &amp;quot;hostile&amp;quot; code in its memory and respond
                        accordingly. Controls in this category verify the integrity of the app's own memory space, with
                        the goal of protecting against memory patches applied during runtime. This includes unwanted
                        changes to binary code or bytecode, functions pointer tables, and important data structures, as
                        well as rogue code loaded into process memory.&amp;nbsp;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;div&gt;
                        Integrity can be verified either by:&amp;nbsp;
                        &lt;div&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Comparing the contents of memory, or a checksum over the contents, with known good
                        values.&amp;nbsp;&lt;/li&gt;
                        &lt;li&gt;Searching memory for signatures of unwanted modifications.&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/div&gt;
                        &lt;/div&gt;
                        &lt;/div&gt;
                    </desc>
          <implementations/>
          <references>
            <reference name="OWASP MASVS - Android - Testing File Integrity Checks" url="https://mobile-security.gitbook.io/mobile-security-testing-guide/android-testing-guide/0x05j-testing-resiliency-against-reverse-engineering#testing-file-integrity-checks-mstg-resilience-3"/>
            <reference name="OWASP MASVS - iOS - Testing Memory Integrity Checks" url="https://mobile-security.gitbook.io/mobile-security-testing-guide/ios-testing-guide/0x06j-testing-resiliency-against-reverse-engineering#file-integrity-checks-mstg-resilience-3-and-mstg-resilience-11"/>
          </references>
          <standards>
            <standard ref="8.6" supportedStandardRef="OWASP-MASVS-L1+R"/>
            <standard ref="8.6" supportedStandardRef="OWASP-MASVS-L2+R"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ul&gt;
                            &lt;li&gt;Disable all file-based detection of reverse engineering tools.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Then inject code using Xposed, Frida and Substrate, and attempt to install native
                            hooks and Java method hooks.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Check that the app detects the &amp;quot;hostile&amp;quot; code in its memory and
                            responds accordingly.&lt;/li&gt;
                            &lt;/ul&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:10.451">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="MASVS-8.5" name="Implement functionality to detect if the app is being run inside an emulator" issueId="" issueLink="" platform="" cost="1" risk="78" state="Recommended" owner="JamesRabe" library="OWASP-MASVS" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Create and implement functionality to detect when the app is being run inside an emulator. If
                        the app is running inside an emulator, the app shall terminate the session.
                    </desc>
          <implementations/>
          <references>
            <reference name="OWASP MASVS - Android - Testing Simple Emulator Detection" url="https://mobile-security.gitbook.io/mobile-security-testing-guide/android-testing-guide/0x05j-testing-resiliency-against-reverse-engineering#testing-emulator-detection-mstg-resilience-5"/>
            <reference name="OWASP MASVS - iOS - Testing Simple Emulator Detection" url="https://mobile-security.gitbook.io/mobile-security-testing-guide/ios-testing-guide/0x06j-testing-resiliency-against-reverse-engineering#testing-emulator-detection-mstg-resilience-5"/>
          </references>
          <standards>
            <standard ref="8.5" supportedStandardRef="OWASP-MASVS-L1+R"/>
            <standard ref="8.5" supportedStandardRef="OWASP-MASVS-L2+R"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Install and run the app within an emulator.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Check the app detects this and terminates the session.&lt;/li&gt;
                            &lt;/ol&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:10.451">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="MASVS-8.4" name="Implement functionality to detect the presence of widely used reverse engineering tools" issueId="" issueLink="" platform="" cost="1" risk="78" state="Recommended" owner="JamesRabe" library="OWASP-MASVS" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Create functionality to detect the presence of widely used reverse engineering tools, such as
                        code injection tools, hooking frameworks and debugging servers. If any reverse engineering tool
                        is detected, the app shall force termination of the session.
                    </desc>
          <implementations/>
          <references>
            <reference name="OWASP MASVS - Android - Testing Detection of Reverse Engineering Tools" url="https://mobile-security.gitbook.io/mobile-security-testing-guide/android-testing-guide/0x05j-testing-resiliency-against-reverse-engineering#testing-reverse-engineering-tools-detection-mstg-resilience-4"/>
            <reference name="OWASP MASVS - iOS - Testing Detection of Reverse Engineering Tools" url="https://mobile-security.gitbook.io/mobile-security-testing-guide/ios-testing-guide/0x06j-testing-resiliency-against-reverse-engineering#testing-reverse-engineering-tools-detection-mstg-resilience-4"/>
          </references>
          <standards>
            <standard ref="8.4" supportedStandardRef="OWASP-MASVS-L1+R"/>
            <standard ref="8.4" supportedStandardRef="OWASP-MASVS-L2+R"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Launch the app systematically with various apps and frameworks installed, such as the
                            following:&amp;nbsp;
                            &lt;div&gt;
                            &lt;ul&gt;
                            &lt;li&gt;Substrate for Android&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Xposed&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Frida&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Introspy-Android&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Drozer&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;RootCloak&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Android SSL Trust Killer&amp;nbsp;&lt;/li&gt;
                            &lt;/ul&gt;The app should alert the user and/or terminate the app.
                            &lt;/div&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:10.451">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="MASVS-8.2" name="Implement functionality to notify when debugging mechanisms are presented within the app" issueId="" issueLink="" platform="" cost="1" risk="78" state="Recommended" owner="JamesRabe" library="OWASP-MASVS" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Implement anti-debugging mechanisms to prohibit debug mode being activated. Anti-debugging
                        features can be preventive or reactive. As the name implies, preventive anti-debugging
                        techniques prevent the debugger from attaching in the first place, while reactive techniques
                        attempt to detect whether a debugger is present and react to it in some way (e.g. terminating
                        the app, or triggering some kind of hidden behavior).&amp;nbsp;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        The &amp;quot;more-is-better&amp;quot; rule applies: To maximize effectiveness, defenders
                        combine multiple methods of prevention and detection which operate on different API layers and
                        are distributed throughout the app.
                        &lt;/div&gt;
                    </desc>
          <implementations/>
          <references>
            <reference name="OWASP MASVS - Android - Testing Debugging Defenses" url="https://mobile-security.gitbook.io/mobile-security-testing-guide/android-testing-guide/0x05j-testing-resiliency-against-reverse-engineering#testing-anti-debugging-detection-mstg-resilience-2"/>
            <reference name="OWASP MASVS - iOS - Testing Debugging Defenses" url="https://mobile-security.gitbook.io/mobile-security-testing-guide/ios-testing-guide/0x06j-testing-resiliency-against-reverse-engineering#testing-anti-debugging-detection-mstg-resilience-2"/>
          </references>
          <standards>
            <standard ref="8.2" supportedStandardRef="OWASP-MASVS-L1+R"/>
            <standard ref="8.2" supportedStandardRef="OWASP-MASVS-L2+R"/>
            <standard ref="M8: Code Tampering" supportedStandardRef="owasp-mobile-top-10-2016"/>
            <standard ref="M9: Reverse Engineering" supportedStandardRef="owasp-mobile-top-10-2016"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check for the presence of anti-debugging mechanisms and verify if with the following
                            criteria the anti-debugging mechanisms are bypassed:&amp;nbsp;
                            &lt;div&gt;
                            &lt;ul&gt;
                            &lt;li&gt;Attaching JDB and ptrace based debuggers either fails or causes the app to
                            terminate or malfunction&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Multiple detection methods are scattered throughout the app (as opposed to putting
                            everything into a single method or function);&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;The anti-debugging defenses operate on multiple API layers (Java, native library
                            functions, Assembler/system calls);&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;The mechanisms show some level of originality (vs. copy/paste from StackOverflow
                            or other sources);&lt;/li&gt;
                            &lt;/ul&gt;
                            &lt;/div&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:10.451">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="MASVS-7.4" name="Insert the condition DEVELOPER-MODE to remove the debugging code, log verbose errors or debugging messages in the production version" issueId="" issueLink="" platform="" cost="1" risk="78" state="Recommended" owner="JamesRabe" library="OWASP-MASVS" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Insert the policy in the if statement with DEVELOPER_MODE as condition. The DEVELOPER_MODE has
                        to be disabled for release build in order to disable StrictMode too.&amp;nbsp;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        Remove the debugging code, log verbose errors or debugging messages in the production version.
                        &lt;/div&gt;
                    </desc>
          <implementations/>
          <references>
            <reference name="OWASP MASVS - Android - Testing for Debugging Code and Verbose Error Logging" url="https://mobile-security.gitbook.io/mobile-security-testing-guide/android-testing-guide/0x05i-testing-code-quality-and-build-settings#testing-for-debugging-code-and-verbose-error-logging-mstg-code-4"/>
            <reference name="OWASP MASVS - iOS - Verifying Compiler Settings" url="https://mobile-security.gitbook.io/mobile-security-testing-guide/ios-testing-guide/0x06i-testing-code-quality-and-build-settings#finding-debugging-code-and-verbose-error-logging-mstg-code-4"/>
          </references>
          <standards>
            <standard ref="7.4" supportedStandardRef="OWASP-MASVS-L1"/>
            <standard ref="7.4" supportedStandardRef="OWASP-MASVS-L1+R"/>
            <standard ref="7.4" supportedStandardRef="OWASP-MASVS-L2"/>
            <standard ref="7.4" supportedStandardRef="OWASP-MASVS-L2+R"/>
            <standard ref="M10: Extraneous Functionality" supportedStandardRef="owasp-mobile-top-10-2016"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ul&gt;
                            &lt;li&gt;Check that there is only one method to activate the DEVELOPMENT_MODE.&lt;/li&gt;
                            &lt;li&gt;Check that the debugging code was removed.&lt;/li&gt;
                            &lt;/ul&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:10.448">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="MASVS-8.9-8.12" name="Obfuscate all executable files, libraries, important code and data segments" issueId="" issueLink="" platform="" cost="1" risk="78" state="Recommended" owner="JamesRabe" library="OWASP-MASVS" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Obfuscation is the process of transforming code and data in order to make it more difficult to comprehend. It is an integral part of every software protection scheme. 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  If the goal of obfuscation is to protect sensitive computations, an obfuscation scheme is used that is both appropriate for the particular task and robust against manual and automated de-obfuscation methods, considering currently published research. The effectiveness of the obfuscation scheme must be verified through manual testing. Note that hardware-based isolation features are preferred over obfuscation whenever possible. 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="OWASP MASVS - Android - Testing Advanced Obfuscation" url="https://mobile-security.gitbook.io/mobile-security-testing-guide/android-testing-guide/0x05j-testing-resiliency-against-reverse-engineering#testing-obfuscation-mstg-resilience-9"/>
            <reference name="OWASP MASVS - iOS - Testing Simple Obfuscation" url="https://mobile-security.gitbook.io/mobile-security-testing-guide/ios-testing-guide/0x06j-testing-resiliency-against-reverse-engineering#testing-obfuscation-mstg-resilience-9"/>
          </references>
          <standards>
            <standard ref="8.12" supportedStandardRef="OWASP-MASVS-L1+R"/>
            <standard ref="8.12" supportedStandardRef="OWASP-MASVS-L2+R"/>
            <standard ref="8.9" supportedStandardRef="OWASP-MASVS-L1+R"/>
            <standard ref="8.9" supportedStandardRef="OWASP-MASVS-L2+R"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;Attempt to decompile the byte-code, disassemble any included library files, and perform static analysis. At the very least, the app's core functionality (i.e., the functionality meant to be obfuscated) shouldn't be easily discerned. Verify that&lt;/span&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt; 
  &lt;div class="reset-3c756112--listItemContent-756c9114"&gt; 
   &lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;meaningful identifiers, such as class names, method names, and variable names, have been discarded,&lt;/span&gt;&lt;/p&gt; 
  &lt;/div&gt;&lt;/li&gt; 
 &lt;li&gt; 
  &lt;div class="reset-3c756112--listItemContent-756c9114"&gt; 
   &lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;string resources and strings in binaries are encrypted,&lt;/span&gt;&lt;/p&gt; 
  &lt;/div&gt;&lt;/li&gt; 
 &lt;li&gt; 
  &lt;div class="reset-3c756112--listItemContent-756c9114"&gt; 
   &lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;code and data related to the protected functionality is encrypted, packed, or otherwise concealed.&lt;/span&gt;&lt;/p&gt; 
  &lt;/div&gt;&lt;/li&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;span class="text-4505230f--TextH400-3033861f--textContentFamily-49a318e1"&gt;For a more detailed assessment, you need a detailed understanding of the relevant threats and the obfuscation methods used.&lt;/span&gt;&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:10.452">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="MASVS-6.7" name="Only JavaScript provided with the app code is allowed" issueId="" issueLink="" platform="" cost="1" risk="70" state="Recommended" owner="JamesRabe" library="OWASP-MASVS" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>If native methods of the app are exposed to a WebView, verify that the WebView only renders JavaScript contained within the app package.</desc>
          <implementations/>
          <references>
            <reference name="OWASP MASVS - Android - Testing Whether Java Objects Are Exposed Through WebViews" url="https://mobile-security.gitbook.io/mobile-security-testing-guide/android-testing-guide/0x05h-testing-platform-interaction#determining-whether-java-objects-are-exposed-through-webviews-mstg-platform-7"/>
          </references>
          <standards>
            <standard ref="6.7" supportedStandardRef="OWASP-MASVS-L1"/>
            <standard ref="6.7" supportedStandardRef="OWASP-MASVS-L1+R"/>
            <standard ref="6.7" supportedStandardRef="OWASP-MASVS-L2"/>
            <standard ref="6.7" supportedStandardRef="OWASP-MASVS-L2+R"/>
            <standard ref="cwe-top-25" supportedStandardRef="cwe-top-25-dangerous-weaknesses"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>- Produce a JavaScript payload.
                            - Inject it into the file that the app is requesting. The injection could be done either
                            through a MITM attack or by directly modifying the file in case it is stored on external
                            storage. The whole process could be done through Drozer that uses weasel (MWR's advanced
                            exploitation payload) which is able to install a full agent, injecting a limited agent into
                            a running process, or connecting a reverse shell to act as a Remote Access Tool (RAT).
                            - Check that only the JavaScript provided with the app is allowed.
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:10.448">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="MASVS-4.1" name="Perform authentication process on remote services" issueId="" issueLink="" platform="" cost="0" risk="78" state="Recommended" owner="JamesRabe" library="OWASP-MASVS" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  If the app provides users access to a remote service, some form of authentication, such as username/password authentication, is performed at the remote endpoint. 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="OWASP MASVS - Authentication and Session Management Requirements" url="https://mobile-security.gitbook.io/masvs/security-requirements/0x09-v4-authentication_and_session_management_requirements"/>
          </references>
          <standards>
            <standard ref="4.1" supportedStandardRef="OWASP-MASVS-L1"/>
            <standard ref="4.1" supportedStandardRef="OWASP-MASVS-L1+R"/>
            <standard ref="4.1" supportedStandardRef="OWASP-MASVS-L2"/>
            <standard ref="4.1" supportedStandardRef="OWASP-MASVS-L2+R"/>
            <standard ref="4.2" supportedStandardRef="OWASP-MASVS-L1"/>
            <standard ref="4.2" supportedStandardRef="OWASP-MASVS-L1+R"/>
            <standard ref="4.2" supportedStandardRef="OWASP-MASVS-L2"/>
            <standard ref="4.2" supportedStandardRef="OWASP-MASVS-L2+R"/>
            <standard ref="M4: Insecure Authentication" supportedStandardRef="owasp-mobile-top-10-2016"/>
            <standard ref="M6: Insecure Authorization" supportedStandardRef="owasp-mobile-top-10-2016"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:10.447">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="MASVS-7.3" name="Remove or obfuscate the debugging symbols from native binaries" issueId="" issueLink="" platform="" cost="1" risk="78" state="Recommended" owner="JamesRabe" library="OWASP-MASVS" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>As a general rule of thumb, as little explanative information as possible should be provided
                        along with the compiled code. Some metadata such as debugging information, line numbers and
                        descriptive function or method names make the binary or bytecode easier to understand for the
                        reverse engineer, but isn't actually needed in a release build and can therefore be safely
                        discarded without impacting the functionality of the app.

                        This data shall be removed from the release version or shall be obfuscated in order to be
                        inaccessible to the reverse engineer.
                    </desc>
          <implementations/>
          <references>
            <reference name="OWASP MASVS - Android - Verifying Compiler Settings" url="https://mobile-security.gitbook.io/mobile-security-testing-guide/android-testing-guide/0x05i-testing-code-quality-and-build-settings#testing-for-debugging-symbols-mstg-code-3"/>
            <reference name="OWASP MASVS - iOS - Testing for Debugging Symbols" url="https://mobile-security.gitbook.io/mobile-security-testing-guide/ios-testing-guide/0x06i-testing-code-quality-and-build-settings#finding-debugging-symbols-mstg-code-3"/>
          </references>
          <standards>
            <standard ref="7.3" supportedStandardRef="OWASP-MASVS-L1"/>
            <standard ref="7.3" supportedStandardRef="OWASP-MASVS-L1+R"/>
            <standard ref="7.3" supportedStandardRef="OWASP-MASVS-L2"/>
            <standard ref="7.3" supportedStandardRef="OWASP-MASVS-L2+R"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>For Android:&amp;nbsp;
                            &lt;blockquote&gt;
                            &lt;div&gt;
                            Symbols are usually stripped during the build process, so you need the compiled byte-code
                            and libraries to verify whether any unnecessary metadata has been discarded. First find the
                            nm binary in your Android NDK and export it (or create an alias).
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;br /&gt;
                            &lt;/div&gt;
                            &lt;/blockquote&gt;
                            &lt;blockquote&gt;
                            &lt;blockquote&gt;
                            &lt;div&gt;
                            export $NM =
                            $ANDROID_NDK_DIR/toolchains/arm-linux-androideabi-4.9/prebuilt/darwin-x86_64/bin/arm-linux-androideabi-nm&amp;nbsp;
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;br /&gt;
                            &lt;/div&gt;
                            &lt;/blockquote&gt;
                            &lt;/blockquote&gt;
                            &lt;blockquote&gt;
                            &lt;div&gt;
                            To display debug symbols:
                            &lt;/div&gt;
                            &lt;/blockquote&gt;
                            &lt;blockquote&gt;
                            &lt;blockquote&gt;
                            &lt;div&gt;
                            $ $NM -a
                            libfoo.so/tmp/toolchains/arm-linux-androideabi-4.9/prebuilt/darwin-x86_64/bin/arm-linux-androideabi-nm:
                            libfoo.so: no symbols&amp;nbsp;
                            &lt;/div&gt;
                            &lt;/blockquote&gt;To display dynamic symbols:
                            &lt;/blockquote&gt;
                            &lt;blockquote&gt;
                            &lt;blockquote&gt;
                            $ $NM -D libfoo.so&amp;nbsp;
                            &lt;/blockquote&gt;Alternatively, open the file in your favorite disassembler and check the
                            symbol tables manually. Dynamic symbols can be stripped using the visibility compiler flag.
                            Adding this flag causes gcc to discard the function names while still preserving the names
                            of functions declared as JNIEXPORT.&amp;nbsp;
                            &lt;/blockquote&gt;
                            &lt;blockquote&gt;
                            &lt;br /&gt;
                            &lt;/blockquote&gt;
                            &lt;blockquote&gt;
                            Check if the following was added to build.gradle:&amp;nbsp;
                            &lt;/blockquote&gt;
                            &lt;blockquote&gt;
                            &lt;blockquote&gt;
                            externalNativeBuild { cmake { cppFlags &amp;quot;-fvisibility=hidden&amp;quot; } }&amp;nbsp;
                            &lt;/blockquote&gt;
                            &lt;blockquote&gt;
                            &lt;br /&gt;
                            &lt;/blockquote&gt;
                            &lt;/blockquote&gt;For iOS:&amp;nbsp;
                            &lt;blockquote&gt;
                            &lt;div&gt;
                            Use gobjdump to inspect the main binary and any included dylibs for Stabs and DWARF symbols.
                            &lt;/div&gt;
                            &lt;/blockquote&gt;
                            &lt;blockquote&gt;
                            &lt;blockquote&gt;
                            &lt;div&gt;
                            $ gobjdump --stabs --dwarf TargetApp&amp;nbsp;
                            &lt;/div&gt;
                            &lt;/blockquote&gt;In archive MyTargetApp:&amp;nbsp;
                            &lt;/blockquote&gt;
                            &lt;blockquote&gt;
                            &lt;blockquote&gt;
                            - armv5te: file format mach-o-arm - aarch64: file format mach-o-arm64 Gobjdump is part of
                            binutils and can be installed via Homebrew on Mac OS X.
                            &lt;/blockquote&gt;
                            &lt;/blockquote&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:10.448">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="MASVS-6.1" name="Request only the minimum required permissions from the mobile operating system" issueId="" issueLink="" platform="" cost="1" risk="78" state="Recommended" owner="JamesRabe" library="OWASP-MASVS" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Security best practice dictates the practice of least-privilege is followed, thereby reducing the attack surface and risk of compromise. By limiting the access an application has to the system, developers may reduce the impact a compromise may have.&amp;nbsp; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Request only the minimum required permissions from the mobile operating system. For example, if there is no requirement to use the camera then the application should not request this permission. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Review features and functionality present in the application, in particular legacy features, to determine if they are relevant and required, and if not remove them and associated OS permissions. 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="OWASP MASVS - Android - Testing App Permissions" url="https://mobile-security.gitbook.io/mobile-security-testing-guide/android-testing-guide"/>
            <reference name="OWASP MASVS - iOS - Testing Custom URL Schemes" url="https://mobile-security.gitbook.io/mobile-security-testing-guide/ios-testing-guide/0x06h-testing-platform-interaction#testing-app-permissions-mstg-platform-1"/>
          </references>
          <standards>
            <standard ref="6.1" supportedStandardRef="OWASP-MASVS-L1"/>
            <standard ref="6.1" supportedStandardRef="OWASP-MASVS-L1+R"/>
            <standard ref="6.1" supportedStandardRef="OWASP-MASVS-L2"/>
            <standard ref="6.1" supportedStandardRef="OWASP-MASVS-L2+R"/>
            <standard ref="M1: Improper Platform Usage" supportedStandardRef="owasp-mobile-top-10-2016"/>
            <standard ref="M4: Insecure Authentication" supportedStandardRef="owasp-mobile-top-10-2016"/>
            <standard ref="M7: Client Code Quality" supportedStandardRef="owasp-mobile-top-10-2016"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>For Android applications:&amp;nbsp;
                            &lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Install the application and review the permissions the application is asking for.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Check they are actually needed.&lt;/li&gt;
                            &lt;/ol&gt;For iOS applications:&amp;nbsp;
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Install the application and use its main functionality, iOS will ask for the
                            permission when it is needed.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Verify those permissions requests are in accordance with the minimum set of
                            permissions needed by the application.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:10.448">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="use-analysis-static-code" name="Scan the code with static code analysis tools" issueId="" issueLink="" platform="" cost="0" risk="78" state="Recommended" owner="JamesRabe" library="OWASP-MASVS" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Use periodically a static code analysis tool to analyze the code and detect potentially malicious code, such as time functions, unsafe file operations and networks connections. With the scanning of static code, we ensure the integrity of the application. 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="10.1.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="10.2.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="10.2.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="10.2.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="10.2.6" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Verify that a code analysis tool is in use and it is configured to detect potentially malicious code, such as time functions, unsafe file operations and network connections. 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:10.452">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="MASVS-5.1-5.2" name="Secure channels with TLS" issueId="" issueLink="" platform="" cost="0" risk="78" state="Recommended" owner="JamesRabe" library="OWASP-MASVS" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  One of the core mobile app functions is sending/receiving data over untrusted networks like the Internet. If the data is not properly protected in transit, an attacker with access to any part of the network infrastructure (e.g., a Wi-Fi access point) may intercept, read, or modify it. This is why plaintext network protocols are rarely advisable. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The vast majority of apps rely on HTTP for communication with the backend. HTTPS wraps HTTP in an encrypted connection (the acronym HTTPS originally referred to HTTP over Secure Socket Layer (SSL); SSL is the deprecated predecessor of TLS). TLS allows authentication of the backend service and ensures confidentiality and integrity of the network data. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Ensuring proper TLS configuration on the server side is also important. The SSL protocol is deprecated and should no longer be used. Also TLS v1.0 and TLS v1.1 have known vulnerabilities and their usage is deprecated in all major browsers by 2020. TLS v1.2 and TLS v1.3 are considered best practice for secure transmission of data. Starting with Android 10 (API level 29) TLS v1.3 will be enabled by default for faster and secure communication. The major change with TLS v1.3 is that customizing cipher suites is no longer possible and that all of them are enabled when TLS v1.3 is enabled, whereas Zero Round Trip (0-RTT) mode isn't supported. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  When both the client and server are controlled by the same organization and used only for communicating with one another, you can increase security by hardening the configuration. 
&lt;/div&gt; 
&lt;div&gt;
  If a mobile application connects to a specific server, its networking stack can be tuned to ensure the highest possible security level for the server's configuration. Lack of support in the underlying operating system may force the mobile application to use a weaker configuration. 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="OWASP MASVS - Verifying Data Encryption on the Network" url="https://mobile-security.gitbook.io/mobile-security-testing-guide/general-mobile-app-testing-guide/0x04f-testing-network-communication"/>
          </references>
          <standards>
            <standard ref="5.1" supportedStandardRef="OWASP-MASVS-L1"/>
            <standard ref="5.1" supportedStandardRef="OWASP-MASVS-L1+R"/>
            <standard ref="5.1" supportedStandardRef="OWASP-MASVS-L2"/>
            <standard ref="5.1" supportedStandardRef="OWASP-MASVS-L2+R"/>
            <standard ref="5.2" supportedStandardRef="OWASP-MASVS-L1"/>
            <standard ref="5.2" supportedStandardRef="OWASP-MASVS-L1+R"/>
            <standard ref="5.2" supportedStandardRef="OWASP-MASVS-L2"/>
            <standard ref="5.2" supportedStandardRef="OWASP-MASVS-L2+R"/>
            <standard ref="M3: Insecure Communication" supportedStandardRef="owasp-mobile-top-10-2016"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Intercept the tested app's incoming and outgoing network traffic and make sure that this traffic is encrypted. You can intercept network traffic in any of the following ways: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Capture all HTTP(S) and Websocket traffic with an interception proxy like OWASP ZAP or Burp Suite and make sure all requests are made via HTTPS instead of HTTP.&lt;/li&gt; 
  &lt;li&gt;Interception proxies like Burp and OWASP ZAP will show HTTP(S) traffic only. You can, however, use a Burp plugin such as Burp-non-HTTP-Extension or the tool mitm-relay to decode and visualize communication via XMPP and other protocols.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:10.448">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="MASVS-7.8" name="Secure in the unmanaged code, the allocated memory, freed memory and used memory" issueId="" issueLink="" platform="" cost="1" risk="68" state="Recommended" owner="JamesRabe" library="OWASP-MASVS" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Memory corruption bugs are a popular mainstay for hackers. This class of bug results from a programming error that causes the program to access an unintended memory location. Under the right conditions, attackers can capitalize on this behavior to hijack the execution flow of the vulnerable program and execute arbitrary code.&amp;nbsp; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  This kind of vulnerability occurs in a number of ways: 
 &lt;div&gt; 
  &lt;ul&gt; 
   &lt;li&gt;&lt;b&gt;Buffer overflows:&lt;/b&gt; This describes a programming error where an app writes beyond an allocated memory range for a particular operation. An attacker can use this flaw to overwrite important control data located in adjacent memory, such as function pointers. Buffer overflows were formerly the most common type of memory corruption flaw, but have become less prevalent over the years due to a number of factors. Notably, awareness among developers of the risks in using unsafe C library functions is now a common best practice plus, catching buffer overflow bugs is relatively simple. However, it is still worth testing for such defects.&amp;nbsp;&lt;/li&gt; 
   &lt;li&gt;&lt;b&gt;Out-of-bounds-access: &lt;/b&gt;Buggy pointer arithmetic may cause a pointer or index to reference a position beyond the bounds of the intended memory structure (e.g. buffer or list). When an app attempts to write to an out-of-bounds address, a crash or unintended behavior occurs. If the attacker can control the target offset and manipulate the content written to some extent, code execution exploit is likely possible.&amp;nbsp;&lt;/li&gt; 
   &lt;li&gt;&lt;b&gt;Dangling pointers:&lt;/b&gt; These occur when an object with an incoming reference to a memory location is deleted or deallocated, but the object pointer is not reset. If the program later uses the dangling pointer to call a virtual function of the already deallocated object, it is possible to hijack execution by overwriting the original vtable pointer. Alternatively, it is possible to read or write object variables or other memory structures referenced by a dangling pointer.&amp;nbsp;&lt;/li&gt; 
   &lt;li&gt;&lt;b&gt;Use-after-free:&lt;/b&gt; This refers to a special case of dangling pointers referencing released (deallocated) memory. After a memory address is cleared, all pointers referencing the location become invalid, causing the memory manager to return the address to a pool of available memory. When this memory location is eventually re-allocated, accessing the original pointer will read or write the data contained in the newly allocated memory. This usually leads to data corruption and undefined behavior, but crafty attackers can set up the appropriate memory locations to leverage control of the instruction pointer.&amp;nbsp;&lt;/li&gt; 
   &lt;li&gt;&lt;b&gt;Integer overflows: &lt;/b&gt;When the result of an arithmetic operation exceeds the maximum value for the integer type defined by the programmer, this results in the value "wrapping around" the maximum integer value, inevitably resulting in a small value being stored. Conversely, when the result of an arithmetic operation is smaller than the minimum value of the integer type, an integer underflow occurs where the result is larger than expected. Whether a particular integer overflow/underflow bug is exploitable depends on how the integer is used - for example, if the integer type were to represent the length of a buffer, this could create a buffer overflow vulnerability.&amp;nbsp;&lt;/li&gt; 
   &lt;li&gt;&lt;b&gt;Format string vulnerabilities: &lt;/b&gt;When unchecked user input is passed to the format string parameter of the printf() family of C functions, attackers may inject format tokens such as '%c' and '%n' to access memory. Format string bugs are convenient to exploit due to their flexibility. Should a program output the result of the string formatting operation, the attacker can read and write to memory arbitrarily, thus bypassing protection features such as ASLR.&amp;nbsp;&lt;/li&gt; 
  &lt;/ul&gt; 
  &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   A best practice to fix the Memory Corruption Bugs are the following:&amp;nbsp; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;ul&gt; 
   &lt;li&gt;When using integer variables for array indexing, buffer length calculations, or any other security-critical operation, verify that unsigned integer types are used and perform precondition tests to prevent the possibility of integer wrapping.&amp;nbsp;&lt;/li&gt; 
   &lt;li&gt;Ensure the app does not use unsafe string functions such as strcpy, most other functions beginning with the "str" prefix, sprint, vsprintf, gets, etc.; If the app contains C++ code, ANSI C++ string classes are used; iOS apps written in Objective-C use NSString class. C apps on iOS should use CFString, the Core Foundation representation of a string. No untrusted data is concatenated into format strings.&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="OWASP MASVS - Testing for Memory Management Bugs" url="https://mobile-security.gitbook.io/mobile-security-testing-guide/general-mobile-app-testing-guide/0x04h-testing-code-quality#memory-corruption-bugs-mstg-code-8"/>
          </references>
          <standards>
            <standard ref="7.8" supportedStandardRef="OWASP-MASVS-L1"/>
            <standard ref="7.8" supportedStandardRef="OWASP-MASVS-L1+R"/>
            <standard ref="7.8" supportedStandardRef="OWASP-MASVS-L2"/>
            <standard ref="7.8" supportedStandardRef="OWASP-MASVS-L2+R"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check if some of the different Memory Corruption bugs appear when you try to use them to
                            gain access to the system.
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:10.449">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="MASVS-8.8" name="Set the detection mechanism to trigger different alarms" issueId="" issueLink="" platform="" cost="0" risk="78" state="Recommended" owner="JamesRabe" library="OWASP-MASVS" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;span style="white-space: pre;"&gt;The detection mechanisms trigger responses of different types, including delayed and stealthy responses.&lt;/span&gt;</desc>
          <implementations/>
          <references>
            <reference name="OWASP MASVS - Resilience Requirements" url="https://mobile-security.gitbook.io/masvs/security-requirements/0x15-v8-resiliency_against_reverse_engineering_requirements"/>
          </references>
          <standards>
            <standard ref="8.8" supportedStandardRef="OWASP-MASVS-L1+R"/>
            <standard ref="8.8" supportedStandardRef="OWASP-MASVS-L2+R"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:10.452">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="MASVS-7.1" name="Sign the app and provision with valid certificate with a properly protected key" issueId="" issueLink="" platform="" cost="1" risk="78" state="Recommended" owner="JamesRabe" library="OWASP-MASVS" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>Code signing your app assures users that it is from a known source and the app hasn't been modified since it was last signed. This process can prevent an app from being tampered with, or modified to include malicious code.</desc>
          <implementations/>
          <references>
            <reference name="OWASP MASVS - Android - Verifying That the App is Properly Signed" url="https://mobile-security.gitbook.io/mobile-security-testing-guide/android-testing-guide/0x05i-testing-code-quality-and-build-settings#making-sure-that-the-app-is-properly-signed-mstg-code-1"/>
            <reference name="OWASP MASVS - iOS - Verifying That the App is Properly Signed" url="https://mobile-security.gitbook.io/mobile-security-testing-guide/ios-testing-guide/0x06i-testing-code-quality-and-build-settings#making-sure-that-the-app-is-properly-signed-mstg-code-1"/>
          </references>
          <standards>
            <standard ref="7.1" supportedStandardRef="OWASP-MASVS-L1"/>
            <standard ref="7.1" supportedStandardRef="OWASP-MASVS-L1+R"/>
            <standard ref="7.1" supportedStandardRef="OWASP-MASVS-L2"/>
            <standard ref="7.1" supportedStandardRef="OWASP-MASVS-L2+R"/>
            <standard ref="M8: Code Tampering" supportedStandardRef="owasp-mobile-top-10-2016"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that the app is correctly signed.
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:10.448">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="GENERAL" name="General" desc="" library="OWASP-MASVS">
          <threats>
            <threat ref="CAPEC-133" name="An attacker attempts to invoke all common switches and options to discover weaknesses" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="OWASP-MASVS" editable="true">
              <desc>An attacker attempts to invoke all common switches and options in the target
                                application for the purpose of discovering weaknesses in the target. For example, in
                                some applications, adding the --debug switch causes debugging information to be
                                displayed, which can sometimes reveal sensitive processing or configuration information
                                to an attacker.&amp;nbsp;
                                &lt;div&gt;
                                &lt;br /&gt;
                                &lt;/div&gt;
                                &lt;div&gt;
                                This attack differs from other forms of API abuse in that the attacker is blindly
                                attempting to invoke options in the hope that one of them will work rather than
                                specifically targeting a known option. Nonetheless, even if the attacker is familiar
                                with the published options of a targeted application this attack method may still be
                                fruitful as it might discover unpublicized functionality.
                                &lt;/div&gt;
                            </desc>
              <riskRating confidentiality="50" integrity="50" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-215">
                  <countermeasures>
                    <countermeasure ref="MASVS-7.3" mitigation="15"/>
                    <countermeasure ref="MASVS-7.4" mitigation="5"/>
                    <countermeasure ref="MASVS-8.2" mitigation="5"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-489">
                  <countermeasures>
                    <countermeasure ref="MASVS-7.4" mitigation="5"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-656">
                  <countermeasures>
                    <countermeasure ref="MASVS-2.13" mitigation="5"/>
                    <countermeasure ref="MASVS-2.14" mitigation="5"/>
                    <countermeasure ref="MASVS-2.3" mitigation="5"/>
                    <countermeasure ref="MASVS-5.1-5.2" mitigation="5"/>
                    <countermeasure ref="MASVS-7.9" mitigation="5"/>
                    <countermeasure ref="MASVS-8.11" mitigation="5"/>
                    <countermeasure ref="MASVS-8.13" mitigation="5"/>
                    <countermeasure ref="MASVS-8.8" mitigation="5"/>
                    <countermeasure ref="MASVS-8.9-8.12" mitigation="5"/>
                  </countermeasures>
                </weakness>
                <weakness ref="MEMORY-LEAKAGE">
                  <countermeasures>
                    <countermeasure ref="MASVS-2.15" mitigation="5"/>
                    <countermeasure ref="MASVS-2.5" mitigation="5"/>
                    <countermeasure ref="MASVS-4.4" mitigation="5"/>
                  </countermeasures>
                </weakness>
                <weakness ref="OUTDATED-LIBRARIES">
                  <countermeasures>
                    <countermeasure ref="MASVS-1.9" mitigation="5"/>
                    <countermeasure ref="MASVS-5.6" mitigation="5"/>
                    <countermeasure ref="MASVS-7.5" mitigation="5"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="MASVS-1.9" mitigation="5"/>
                <countermeasure ref="MASVS-2.13" mitigation="5"/>
                <countermeasure ref="MASVS-2.14" mitigation="5"/>
                <countermeasure ref="MASVS-2.15" mitigation="5"/>
                <countermeasure ref="MASVS-2.3" mitigation="5"/>
                <countermeasure ref="MASVS-2.5" mitigation="5"/>
                <countermeasure ref="MASVS-4.4" mitigation="5"/>
                <countermeasure ref="MASVS-5.1-5.2" mitigation="5"/>
                <countermeasure ref="MASVS-5.6" mitigation="5"/>
                <countermeasure ref="MASVS-7.3" mitigation="15"/>
                <countermeasure ref="MASVS-7.4" mitigation="5"/>
                <countermeasure ref="MASVS-7.5" mitigation="5"/>
                <countermeasure ref="MASVS-7.9" mitigation="5"/>
                <countermeasure ref="MASVS-8.11" mitigation="5"/>
                <countermeasure ref="MASVS-8.13" mitigation="5"/>
                <countermeasure ref="MASVS-8.2" mitigation="5"/>
                <countermeasure ref="MASVS-8.8" mitigation="5"/>
                <countermeasure ref="MASVS-8.9-8.12" mitigation="5"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="sec-vuln-dev-process" name="Application contains security vulnerabilities not identified during the development process" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="OWASP-MASVS" editable="true">
              <desc>Application security should be embedded into a project's development environment, allowing developers to monitor their code regularly in order to avoid security vulnerabilities when the application is deployed in the production environment.</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references>
                <reference name="NIST Security Considerations in the System Development Life Cycle" url="https://csrc.nist.gov/publications/detail/sp/800-64/rev-2/archive/2008-10-16"/>
                <reference name="Risk-Based and Functional Security Testing" url="https://www.us-cert.gov/bsi/articles/best-practices/security-testing/risk-based-and-functional-security-testing"/>
              </references>
              <weaknesses>
                <weakness ref="CWE-494">
                  <countermeasures>
                    <countermeasure ref="MASVS-7.1" mitigation="34"/>
                    <countermeasure ref="MASVS-8.3" mitigation="33"/>
                  </countermeasures>
                </weakness>
                <weakness ref="lack-automated-vuln-identification">
                  <countermeasures>
                    <countermeasure ref="use-analysis-static-code" mitigation="33"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="MASVS-7.1" mitigation="34"/>
                <countermeasure ref="MASVS-8.3" mitigation="33"/>
                <countermeasure ref="use-analysis-static-code" mitigation="33"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="CAPEC-188" name="Attacker gains access to sensitive data by modifying the application's expected behavior" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="OWASP-MASVS" editable="true">
              <desc>An attacker discovers the structure, function, and composition of an object, resource,
                                or system by using a variety of analysis techniques to effectively determine how the
                                analyzed entity was constructed or operates. The goal of reverse engineering is often to
                                duplicate the function, or a part of the function, of an object in order to duplicate or
                                &amp;quot;back engineer&amp;quot; some aspect of its functioning.&amp;nbsp;
                                &lt;div&gt;
                                &lt;br /&gt;
                                &lt;/div&gt;
                                &lt;div&gt;
                                Reverse engineering techniques can be applied to mechanical objects, electronic devices,
                                or software, although the methodology and techniques involved in each type of analysis
                                differ widely. When adversaries are reverse engineering software, methodologies fall
                                into two broad categories, 'white box' and 'black box.' White box techniques involve
                                methods which can be applied to a piece of software when an executable or some other
                                compiled object can be directly subjected to analysis, revealing at least a portion of
                                its machine instructions that can be observed upon execution.
                                &lt;/div&gt;
                                &lt;div&gt;
                                &lt;br /&gt;
                                &lt;/div&gt;
                                &lt;div&gt;
                                'Black Box' methods involve interacting with the software indirectly, in the absence of
                                the ability to measure, instrument, or analyze an executable object directly. Such
                                analysis typically involves interacting with the software at the boundaries of where the
                                software interfaces with a larger execution environment, such as input-output vectors,
                                libraries, or APIs.
                                &lt;/div&gt;
                            </desc>
              <riskRating confidentiality="25" integrity="25" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="MASVS-EMULATION-TOOLS">
                  <countermeasures>
                    <countermeasure ref="MASVS-8.5" mitigation="20"/>
                    <countermeasure ref="MASVS-8.7" mitigation="20"/>
                  </countermeasures>
                </weakness>
                <weakness ref="MASVS-REVERSE-ENGINEERING-TOOLS">
                  <countermeasures>
                    <countermeasure ref="MASVS-8.10" mitigation="20"/>
                    <countermeasure ref="MASVS-8.4" mitigation="20"/>
                    <countermeasure ref="MASVS-8.6" mitigation="20"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="MASVS-8.10" mitigation="20"/>
                <countermeasure ref="MASVS-8.4" mitigation="20"/>
                <countermeasure ref="MASVS-8.5" mitigation="20"/>
                <countermeasure ref="MASVS-8.6" mitigation="20"/>
                <countermeasure ref="MASVS-8.7" mitigation="20"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="CAPEC-122-MOBILE" name="Users lose trust in the application because it requests unnecessary privileges" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="OWASP-MASVS" editable="true">
              <desc>If the mobile application requests permissions or access to components that are not
                                strictly needed by the application, then users can lose trust in the security of the
                                application with an associated impact on the trust placed in the application provider.
                            </desc>
              <riskRating confidentiality="50" integrity="50" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-250">
                  <countermeasures>
                    <countermeasure ref="MASVS-2.11" mitigation="20"/>
                    <countermeasure ref="MASVS-4.11" mitigation="20"/>
                    <countermeasure ref="MASVS-4.5-4.6" mitigation="20"/>
                    <countermeasure ref="MASVS-6.1" mitigation="20"/>
                    <countermeasure ref="MASVS-8.1" mitigation="20"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="MASVS-2.11" mitigation="20"/>
                <countermeasure ref="MASVS-4.11" mitigation="20"/>
                <countermeasure ref="MASVS-4.5-4.6" mitigation="20"/>
                <countermeasure ref="MASVS-6.1" mitigation="20"/>
                <countermeasure ref="MASVS-8.1" mitigation="20"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="PROVIDE MOBILE ACCESS TO SERVICES" name="Provide mobile access to services" desc="" library="OWASP-MASVS">
          <threats>
            <threat ref="CAPEC-1" name="Accessing Functionality Not Properly Constrained by ACLs" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="OWASP-MASVS" editable="true">
              <desc>&lt;p&gt;In applications, particularly web applications, access to functionality is mitigated by the authorization framework, whose job it is to map ACLs to elements of the application's functionality; particularly URL's for web-apps. In cases in which the administrator failed to specify an ACL for a particular element, an attacker may be able to access it with impunity. An attacker with the ability to access functionality not properly constrained by ACLs can obtain sensitive information and possibly compromise the entire application. Such an attacker could potentially access resources that should only be available to users of a higher privilege level, or access management sections of the application, or can run queries for data that he is otherwise not supposed to.&amp;nbsp;&lt;br&gt;&amp;nbsp;&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="100" easeOfExploitation="100"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-732">
                  <countermeasures>
                    <countermeasure ref="MASVS-2.6" mitigation="25"/>
                    <countermeasure ref="MASVS-4.1" mitigation="25"/>
                    <countermeasure ref="MASVS-4.12" mitigation="25"/>
                    <countermeasure ref="MASVS-4.9" mitigation="25"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="MASVS-2.6" mitigation="25"/>
                <countermeasure ref="MASVS-4.1" mitigation="25"/>
                <countermeasure ref="MASVS-4.12" mitigation="25"/>
                <countermeasure ref="MASVS-4.9" mitigation="25"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="ACCESS-WEBVIEW" name="Attackers gain access to the data through the WebView functionality" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="OWASP-MASVS" editable="true">
              <desc>An attacker employs forceful browsing to access portions of a website that are
                                otherwise unreachable through direct URL entry.

                                Usually, a front controller or similar design pattern is employed to protect access to
                                portions of a web application.

                                Forceful browsing enables an attacker to access information, perform privileged
                                operations and otherwise reach sections of the web application that have been improperly
                                protected.
                            </desc>
              <riskRating confidentiality="75" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-749">
                  <countermeasures>
                    <countermeasure ref="MASVS-6.10" mitigation="25"/>
                    <countermeasure ref="MASVS-6.6" mitigation="25"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-79">
                  <countermeasures>
                    <countermeasure ref="MASVS-6.7" mitigation="25"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-83">
                  <countermeasures>
                    <countermeasure ref="MASVS-6.5" mitigation="25"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="MASVS-6.10" mitigation="25"/>
                <countermeasure ref="MASVS-6.5" mitigation="25"/>
                <countermeasure ref="MASVS-6.6" mitigation="25"/>
                <countermeasure ref="MASVS-6.7" mitigation="25"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="7k-CWE-ErrorH" name="Attackers gain unauthorised access to the application through an error handling flaw" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="OWASP-MASVS" editable="true">
              <desc>Errors and error handling represent a class of API. Errors related to error handling
                                are so common that they deserve a special kingdom of their own. As with API Abuse, there are two ways to introduce an error-related security vulnerability: the most common
                                one is handling errors poorly (or not at all). The second is producing errors that either give out too much information (to possible attackers) or are difficult to handle.
                            </desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-388">
                  <countermeasures>
                    <countermeasure ref="MASVS-7.6" mitigation="50"/>
                    <countermeasure ref="MASVS-7.7" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="MASVS-7.6" mitigation="50"/>
                <countermeasure ref="MASVS-7.7" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="CAPEC-100" name="Attackers gain unauthorised access to the application through buffer overflow flaws" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="OWASP-MASVS" editable="true">
              <desc>Buffer Overflow attacks target improper or missing bounds checking on buffer
                                operations, typically triggered by input injected by an attacker. As a consequence, an
                                attacker is able to write past the boundaries of allocated buffer regions in memory,
                                causing a program crash or potentially redirection of execution as per the attackers'
                                choice.
                            </desc>
              <riskRating confidentiality="100" integrity="100" availability="1" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-120">
                  <countermeasures>
                    <countermeasure ref="MASVS-7.8" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="MASVS-7.8" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="7603a798-d873-47e1-b12e-0ce6ce03bc9a" diagramComponentId="ebb8311e-b1bf-4d9e-9688-7cf911470f39" ref="9e458146-6f7c-48d4-9c06-e2e70e1eeb86" name="Azure Load Balancer" desc="" library="Microsoft-Azure" parentComponentRef="c53a9781-46e2-40bb-aa97-1631d71bc846" componentDefinitionRef="microsoft-azure-load-balancer">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses>
        <weakness ref="AZURE-MON02" name="Excessive use of administrator accounts" state="0" impact="100" issueId="" issueLink="">
          <desc>The administrator accounts are used for all actions, not only for administrative actions. This
                        is because these users have not got a personal or a user account to do the daily actions.&amp;nbsp;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that there is any rule to notify when there is a bad usage of the root
                            account.&lt;/li&gt;
                            &lt;li&gt;Check if these rules are enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:13.808">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CWE-778" name="Insufficient Logging" state="0" impact="100" issueId="" issueLink="">
          <desc>When a critical security event occurs, the software either does not record the event or omits important details about the event when logging it. When critical security events are not logged properly, such as in the case of a failed login attempt, this can make malicious behavior more difficult to detect and may hinder forensic analyses after a successful attack.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:13.808">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-NON-IDENTIFY" name="Insufficient resource identification" state="0" impact="100" issueId="" issueLink="">
          <desc>Resources are not registered in the safety net systems, and/or additional unidentified resources exist. As such, additional weaknesses might be introduced.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:14.208">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-MON03" name="Lack of 2FA" state="0" impact="100" issueId="" issueLink="">
          <desc>Logging into the console without using Multi-factor Authentication (MFA) and without being detected. The connection without MFA must be audited and monitored, the correct security group must be informed and the connection must be validated.&amp;nbsp;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that there is any rule to notify when someone tries to login into the
                            console without MFA.&lt;/li&gt;
                            &lt;li&gt;Check if these rules are enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:13.808">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZ-W04" name="Misconfigured Authentication Method for Administrator Accounts" state="0" impact="100" issueId="" issueLink="">
          <desc>The authentication method &amp;quot;Multi-factor Authentication&amp;quot; for the Administrator accounts is not configured.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;Multi-Factor Authentication&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check all Administrator accounts have got the MFA flag enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:13.808">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="LOST-SECURITY-ALERTS" name="Misconfigured Security contact details" state="0" impact="100" issueId="" issueLink="">
          <desc>The security contact details for the Azure subscription are not properly configured.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Access &amp;quot;Azure Security Center&amp;quot;.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;In the &amp;quot;Recommendations&amp;quot; tab choose &amp;quot;Provide security
                            contact details&amp;quot;.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Check that all fields are filled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:13.808">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-IDENTITY-03" name="Misconfigured User Account" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        Key security settings such as resetting the password and other password controls are not
                        configured.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log in to the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each user has got an assigned account.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;Password reset&amp;quot; &amp;gt; &amp;quot;Authentication Method&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that the security confirmation measures and the security criteria are well
                            filled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:13.808">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-ACCESS-01" name="Misconfigured credentials for groups and roles" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        The credentials for groups and roles are not correctly configured and there are user accounts with more privileges than necessary.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each user has got assigned the correct groups.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All groups&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each group has got assigned the correct roles to achieve principle of
                            least privilege.&lt;/li&gt;
                            &lt;li&gt;Check that the roles for the Cloud Service are well assigned.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;div&gt;
                            &lt;/div&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:13.808">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-VNET01" name="Networks for Azure resources are not properly segmented. Without proper segmentation, when attackers gain access to one resource, any other resources in the same VNet are compromised" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        Resources in the same VNet are compromised because when one of them is attacked and the
                        attackers gain access, they also gain access to all resources.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            Identify the resources and the Microsoft Azure instances.
                            &lt;/div&gt;
                            &lt;div&gt;
                            Check that the resources are in the correct VNet.
                            &lt;/div&gt;
                            &lt;div&gt;
                            Check that the Microsoft Azure instances&amp;nbsp;are into different VNets.
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:14.207">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-VM01" name="Security policies exposing system resources" state="0" impact="100" issueId="" issueLink="">
          <desc>The security policies are not adequately configured.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:13.808">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-NET-04" name="Unauthorized connection attempts on Azure resources" state="0" impact="100" issueId="" issueLink="">
          <desc>Receiving unauthorized connections to Azure resources is most likely to be receiving an
                        attack. To avoid this, access to the network must be as restricted as possible using Network
                        Access Control Lists for blacklisting.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;Network security groups&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Select the Network Security Group (NSG) for your virtual machine and click on
                            &amp;quot;Inbound security rules&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that there is a rule to deny the inbound access from a blacklisted IP
                            address or range to a designated port or port range.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:13.808">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-NET-01" name="Unauthorized connection attempts on open ports" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        Receiving unauthorized connections to open ports makes systems vulnerable to attacks. To
                        avoid this, access to the network must be as restricted as possible, so that only the necessary
                        ports are open and the minimum inbound traffic is accepted.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Check that each Azure resources have got their Network Security Groups.&lt;/li&gt;
                            &lt;li&gt;Check that a set of these groups achieve with the principle of the least
                            privilege.&lt;/li&gt;
                            &lt;li&gt;Check that the inbound/outbound security rules are enabled and correctly
                            configured.&lt;/li&gt;
                            &lt;li&gt;In &amp;quot;Inbound security rules&amp;quot;, check that all the traffic from
                            0.0.0.0/0&amp;nbsp;is blocked.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:13.807">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="AZ-A09" name="Apply RBAC with pre-defined policies added into groups or roles" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Define and create groups that relate to job functions (administrators, developers, accounting,
                        etc.) and assign the relevant permissions for each group, and then assign IAM users to those
                        groups.&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &amp;nbsp;&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        All the users in an IAM group inherit the permissions assigned to the group. That way, you can
                        make changes for everyone in a group in just one place. As people move around in your company,
                        you can simply change what IAM group their IAM user belongs to. This method is known as Role
                        Based Access Control (RBAC).&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Remove a user from a group:&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;ol&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                        &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                        &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Click on the user name. All the groups the user belongs are there.&lt;/li&gt;
                        &lt;li&gt;Choose the group and &amp;quot;Remove&amp;quot;.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/ol&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Create a group and add user:&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;ol&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                        &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                        &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All groups&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Click &amp;quot;New Group&amp;quot; and fill the information.&lt;/li&gt;
                        &lt;li&gt;Search and add the user.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Create a group and add members in Azure Active Directory" url="https://docs.microsoft.com/en-us/azure/active-directory/active-directory-groups-create-azure-portal"/>
            <reference name="MS Azure - Use Role-Based Access Control to manage access to your Azure subscription resources" url="https://docs.microsoft.com/en-us/azure/active-directory/role-based-access-control-configure"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each user has got assigned the correct groups.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All groups&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each group has got assigned the correct roles.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:13.711">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-A11" name="Configure roles for the Cloud Service" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Define and create the roles for the Azure Cloud Service. For each role, define the permissions and also configure how that role runs. When you launch an Azure instance, you shall specify a role for the instance as a launch parameter. Applications that run on the Cloud instance use the role's credentials when they access Azure resources. This role's permissions determine what the application is allowed to do.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Configure an Azure cloud service from Solution Explorer in Visual Studio.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Use Role-Based Access Control to manage access to your Azure subscription resources" url="https://docs.microsoft.com/en-us/azure/active-directory/role-based-access-control-configure"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that the roles for the Cloud Service are well assigned.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:13.712">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-M01" name="Create alerts for changes on Activity Logs configuration" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Create alerts for the Activity Logs changes to monitor, audit and notify about the changes to the correspondent personnel. It's vital that these unauthorized changes are detected.&lt;/p&gt;&lt;p&gt;Checklist:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Ensure that Activity Log Alert exists for:&amp;nbsp;&lt;ul&gt;&lt;li&gt;Create Policy Assignment&lt;/li&gt;&lt;li&gt;Delete Policy Assignment&lt;/li&gt;&lt;li&gt;Create or Update Network Security Group&lt;/li&gt;&lt;li&gt;Delete Network Security Group&lt;/li&gt;&lt;li&gt;Create or Update Network Security Group Rule&lt;/li&gt;&lt;li&gt;Delete Network Security Group Rule&lt;/li&gt;&lt;li&gt;Create or Update Security Solution&lt;/li&gt;&lt;li&gt;Delete Security Solution&lt;/li&gt;&lt;li&gt;Create or Update or Delete SQL Server Firewall Rule&lt;br&gt;&amp;nbsp;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;Remediation:&lt;/strong&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Go to Monitor&lt;/li&gt;&lt;li&gt;Select Alerts&lt;ol&gt;&lt;li&gt;For each one of the elements in the checklist, click On New Alert Rule&lt;ol&gt;&lt;li&gt;Under Scope, click Select resource&lt;/li&gt;&lt;li&gt;Select the appropriate subscription under Filter by subscription&lt;/li&gt;&lt;li&gt;Select Policy Assignment under Filter by resource type&lt;/li&gt;&lt;li&gt;Select All for Filter by location&lt;/li&gt;&lt;li&gt;Click on the subscription resource from the entries populated under Resource&lt;/li&gt;&lt;li&gt;Verify Selection preview shows All Policy assignment (policyAssignments) and your selected subscription name&lt;/li&gt;&lt;li&gt;Click Done&lt;/li&gt;&lt;li&gt;Under Condition click Add Condition&lt;/li&gt;&lt;li&gt;Select the corresponding element from the checklist&lt;/li&gt;&lt;li&gt;Click Done&lt;/li&gt;&lt;li&gt;Under Action group, select Add action groups and complete creation process or select appropriate action group&lt;/li&gt;&lt;li&gt;Under Alert rule details, enter Alert rule name and Description&lt;/li&gt;&lt;li&gt;Select appropriate resource group to save the alert to&lt;/li&gt;&lt;li&gt;Check Enable alert rule upon creation checkbox&lt;/li&gt;&lt;li&gt;Click Create alert rule&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;/ol&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Create activity log alerts" url="https://docs.microsoft.com/en-us/azure/monitoring-and-diagnostics/monitoring-activity-log-alerts"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5.2.1" supportedStandardRef="cis-azure-standard"/>
            <standard ref="5.2.1" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="5.2.10" supportedStandardRef="cis-azure-standard"/>
            <standard ref="5.2.10" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="5.2.2" supportedStandardRef="cis-azure-standard"/>
            <standard ref="5.2.2" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="5.2.3" supportedStandardRef="cis-azure-standard"/>
            <standard ref="5.2.3" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="5.2.4" supportedStandardRef="cis-azure-standard"/>
            <standard ref="5.2.4" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="5.2.5" supportedStandardRef="cis-azure-standard"/>
            <standard ref="5.2.5" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="5.2.6" supportedStandardRef="cis-azure-standard"/>
            <standard ref="5.2.6" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="5.2.7" supportedStandardRef="cis-azure-standard"/>
            <standard ref="5.2.7" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="5.2.8" supportedStandardRef="cis-azure-standard"/>
            <standard ref="5.2.8" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="5.2.9" supportedStandardRef="cis-azure-standard"/>
            <standard ref="5.2.9" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="LT-4" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Go to "Monitor" and then to "Alerts".&lt;/li&gt;&lt;li&gt;Check that there is any rule to alert when the Activity Logs configuration changes.&lt;/li&gt;&lt;li&gt;Check if these rules are enabled.&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:14.112">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-A03" name="Create Individual Accounts for the administrator users" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Create an individual account for the administrator users and with this new accounts By creating individual Azure users for people accessing your account, you can give each Azure user a unique set of security credentials.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The administrator accounts shall be used for the administrative actions and for giving or revoke credentials to the user's account. The administrator account shall be not used as a normal user account. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt; 
  &lt;li&gt;Select Azure Active Directory.&lt;/li&gt; 
  &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt; 
  &lt;li&gt;Select &amp;quot;Add New User&amp;quot;.&lt;/li&gt; 
  &lt;li&gt;Fill the required information and click &amp;quot;Create&amp;quot;.&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt; 
&lt;div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Add new users to Azure Active Directory" url="https://docs.microsoft.com/en-us/azure/active-directory/add-users-azure-active-directory"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each user has got a user account assigned.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:13.712">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-A10" name="Create mechanisms to ensure the principle of least privilege is applied" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Create the mechanisms to review periodically the group and user permissions to ensure the least privilege for the user accounts. Granting least privilege ensures that users only have the permissions required to complete their jobs rather than additional privileges that are not required. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Following this model ensures that, should an account be compromised, the blast radius of damage is limited&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Allocate privileges via groups or roles via the recommendation in "Use RBAC with pre-defined policies added into groups or roles".&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt; 
&lt;div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Create a group and add members in Azure Active Directory" url="https://docs.microsoft.com/en-us/azure/active-directory/active-directory-groups-create-azure-portal"/>
            <reference name="MS Azure - Use Role-Based Access Control to manage access to your Azure subscription resources" url="https://docs.microsoft.com/en-us/azure/active-directory/role-based-access-control-configure"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that the principle of least privilege is achieved in the assignation of roles and
                            groups to the users.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:13.713">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-IDS-IPS" name="Deploy network-based IDS/IPS" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Deploy network-based intrusion detection/intrusion prevention systems (IDS/IPS)&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Select an offer from Azure Marketplace that supports IDS/IPS functionality with payload inspection capabilities. If intrusion detection and/or prevention based on payload inspection is not a requirement, Azure Firewall with Threat Intelligence can be used. Azure Firewall Threat intelligence-based filtering can alert and deny traffic to and from known malicious IP addresses and domains. The IP addresses and domains are sourced from the Microsoft Threat Intelligence feed.&lt;/p&gt; 
&lt;p&gt;Deploy the firewall solution of your choice at each of your organization's network boundaries to detect and/or deny malicious traffic.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Set up the network&lt;/p&gt; 
&lt;p&gt;First, create a resource group to contain the resources needed to deploy the firewall. Then create a VNet, subnets, and a test server.&lt;br&gt; For more information please see Reference URL.&lt;/p&gt; 
&lt;p&gt;Deploy the firewall&lt;/p&gt; 
&lt;p&gt;Deploy the firewall into the VNet.&lt;/p&gt; 
&lt;p&gt;1. On the Azure portal menu or from the Home page, select Create a resource.&lt;/p&gt; 
&lt;p&gt;2. Type firewall in the search box and press Enter.&lt;/p&gt; 
&lt;p&gt;3. Select Firewall and then select Create.&lt;/p&gt; 
&lt;p&gt;4. On the Create a Firewall page, use the following values to configure the firewall:&lt;/p&gt; 
&lt;p&gt;Subscription: &lt;br&gt; Resource group: Test-FW-RG&lt;br&gt; Name: Test-FW01&lt;br&gt; Location: Select the same location that you used previously&lt;br&gt; Choose a virtual network: Use existing: Test-FW-VN&lt;br&gt; Public IP address: Add new&lt;br&gt; Name: fw-pip&lt;/p&gt; 
&lt;p&gt;5. Select Review + create.&lt;/p&gt; 
&lt;p&gt;6. Review the summary, and then select Create to create the firewall.&lt;/p&gt; 
&lt;p&gt;This will take a few minutes to deploy.&lt;/p&gt; 
&lt;p&gt;7. After deployment completes, go to the Test-FW-RG resource group, and select the Test-FW01 firewall.&lt;/p&gt; 
&lt;p&gt;8. Note the firewall private and public IP addresses. You will use these addresses later.&lt;/p&gt; 
&lt;p&gt;Create a default route&lt;/p&gt; 
&lt;p&gt;For the Workload-SN subnet, configure the outbound default route to go through the firewall.&lt;/p&gt; 
&lt;p&gt;1. On the Azure portal menu, select All services or search for and select All services from any page.&lt;/p&gt; 
&lt;p&gt;2. Under Networking, select Route tables.&lt;/p&gt; 
&lt;p&gt;3. Select Add.&lt;/p&gt; 
&lt;p&gt;4. For Name, type Firewall-route.&lt;/p&gt; 
&lt;p&gt;5. For Subscription, select your subscription.&lt;/p&gt; 
&lt;p&gt;6. For Resource group, select Test-FW-RG.&lt;/p&gt; 
&lt;p&gt;7. For Location, select the same location that you used previously.&lt;/p&gt; 
&lt;p&gt;8. Select Create.&lt;/p&gt; 
&lt;p&gt;9. Select Refresh, and then select the Firewall-route route table.&lt;/p&gt; 
&lt;p&gt;10. Select Subnets and then select Associate.&lt;/p&gt; 
&lt;p&gt;11. Select Virtual network &amp;gt; Test-FW-VN.&lt;/p&gt; 
&lt;p&gt;12. For Subnet, select Workload-SN. Make sure that you select only the Workload-SN subnet for this route, otherwise your firewall will not work correctly.&lt;/p&gt; 
&lt;p&gt;13. Select OK.&lt;/p&gt; 
&lt;p&gt;14. Select Routes and then select Add.&lt;/p&gt; 
&lt;p&gt;15. For Route name, type fw-dg.&lt;/p&gt; 
&lt;p&gt;16. For Address prefix, type 0.0.0.0/0.&lt;/p&gt; 
&lt;p&gt;17. For Next hop type, select Virtual appliance.&lt;/p&gt; 
&lt;p&gt;Azure Firewall is actually a managed service, but virtual appliance works in this situation.&lt;/p&gt; 
&lt;p&gt;18. For Next hop address, type the private IP address for the firewall that you noted previously.&lt;/p&gt; 
&lt;p&gt;19. Select OK.&lt;/p&gt; 
&lt;p&gt;Configure an application rule&lt;/p&gt; 
&lt;p&gt;This is the application rule that allows outbound access to www.google.com.&lt;/p&gt; 
&lt;p&gt;1. Open the Test-FW-RG, and select the Test-FW01 firewall.&lt;br&gt; 2. On the Test-FW01 page, under Settings, select Rules.&lt;br&gt; 3. Select the Application rule collection tab.&lt;br&gt; 4. Select Add application rule collection.&lt;br&gt; 5. For Name, type App-Coll01.&lt;br&gt; 6. For Priority, type 200.&lt;br&gt; 7. For Action, select Allow.&lt;br&gt; 8. Under Rules, Target FQDNs, for Name, type Allow-Google.&lt;br&gt; 9. For Source type, select IP address.&lt;br&gt; 10. For Source, type 10.0.2.0/24.&lt;br&gt; 11. For Protocol:port, type http, https.&lt;br&gt; 12. For Target FQDNS, type www.google.com&lt;br&gt; 13. Select Add.&lt;/p&gt; 
&lt;p&gt;Azure Firewall includes a built-in rule collection for infrastructure FQDNs that are allowed by default. These FQDNs are specific for the platform and cannot be used for other purposes. For more information, see Infrastructure FQDNs.&lt;/p&gt; 
&lt;p&gt;Configure a network rule&lt;/p&gt; 
&lt;p&gt;This is the network rule that allows outbound access to two IP addresses at port 53 (DNS).&lt;/p&gt; 
&lt;p&gt;1. Select the Network rule collection tab.&lt;/p&gt; 
&lt;p&gt;2. Select Add network rule collection.&lt;/p&gt; 
&lt;p&gt;3. For Name, type Net-Coll01.&lt;/p&gt; 
&lt;p&gt;4. For Priority, type 200.&lt;/p&gt; 
&lt;p&gt;5. For Action, select Allow.&lt;/p&gt; 
&lt;p&gt;6. Under Rules, IP addresses, for Name, type Allow-DNS.&lt;/p&gt; 
&lt;p&gt;7. For Protocol, select UDP.&lt;/p&gt; 
&lt;p&gt;8. For Source type, select IP address.&lt;/p&gt; 
&lt;p&gt;9. For Source, type 10.0.2.0/24.&lt;/p&gt; 
&lt;p&gt;10. For Destination type select IP address.&lt;/p&gt; 
&lt;p&gt;11. For Destination address, type 209.244.0.3,209.244.0.4&lt;/p&gt; 
&lt;p&gt;These are public DNS servers operated by CenturyLink.&lt;/p&gt; 
&lt;p&gt;12. For Destination Ports, type 53.&lt;/p&gt; 
&lt;p&gt;13. Select Add.&lt;/p&gt; 
&lt;p&gt;Configure a DNAT rule&lt;/p&gt; 
&lt;p&gt;This rule allows you to connect a remote desktop to the Srv-Work virtual machine through the firewall.&lt;/p&gt; 
&lt;p&gt;1. Select the NAT rule collection tab.&lt;br&gt; 2. Select Add NAT rule collection.&lt;br&gt; 3. For Name, type rdp.&lt;br&gt; 4. For Priority, type 200.&lt;br&gt; 5. Under Rules, for Name, type rdp-nat.&lt;br&gt; 6. For Protocol, select TCP.&lt;br&gt; 7. For Source type, select IP address.&lt;br&gt; 8. For Source, type *.&lt;br&gt; 9. For Destination address, type the firewall public IP address.&lt;br&gt; 10. For Destination Ports, type 3389.&lt;br&gt; 11. For Translated address, type the Srv-work private IP address.&lt;br&gt; 12. For Translated port, type 3389.&lt;br&gt; 13. Select Add.&lt;/p&gt; 
&lt;p&gt;Change the primary and secondary DNS address for the Srv-Work network interface&lt;/p&gt; 
&lt;p&gt;For testing purposes in this tutorial, configure the server's primary and secondary DNS addresses. This is not a general Azure Firewall requirement.&lt;/p&gt; 
&lt;p&gt;1. On the Azure portal menu, select Resource groups or search for and select Resource groups from any page. Select the Test-FW-RG resource group.&lt;br&gt; 2. Select the network interface for the Srv-Work virtual machine.&lt;br&gt; 3. Under Settings, select DNS servers.&lt;br&gt; 4. Under DNS servers, select Custom.&lt;br&gt; 5. Type 209.244.0.3 in the Add DNS server text box, and 209.244.0.4 in the next text box.&lt;br&gt; 6. Select Save.&lt;br&gt; 7. Restart the Srv-Work virtual machine.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Tutorial: Deploy and configure Azure Firewall using the Azure portal" url="https://docs.microsoft.com/en-us/azure/firewall/tutorial-firewall-deploy-portal"/>
          </references>
          <standards>
            <standard ref="NS-3" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="NS-4" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Test the firewall&lt;/p&gt;&lt;p&gt;Now, test the firewall to confirm that it works as expected.&lt;/p&gt;&lt;p&gt;1. Connect a remote desktop to firewall public IP address and sign in to the Srv-Work virtual machine.&lt;/p&gt;&lt;p&gt;2. Open Internet Explorer and browse to https://www.google.com.&lt;/p&gt;&lt;p&gt;3. Select OK &amp;gt; Close on the Internet Explorer security alerts.&lt;/p&gt;&lt;p&gt;You should see the Google home page.&lt;/p&gt;&lt;p&gt;4. Browse to https://www.microsoft.com.&lt;/p&gt;&lt;p&gt;You should be blocked by the firewall.LT-3&lt;/p&gt;&lt;p&gt;So now you've verified that the firewall rules are working:&lt;/p&gt;&lt;p&gt;- You can browse to the one allowed FQDN, but not to any others.&lt;br&gt;- You can resolve DNS names using the configured external DNS server.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:14.113">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-ENABLE-ALERTS" name="Enable alerts for anomalous activities" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Enable alerts for anomalous activities 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  Azure Security Center generates detailed security alerts and recommendations. You can view them in the portal or through programmatic tools. You may also need to export some or all of this information for tracking with other monitoring tools in your environment. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Continuous export lets you fully customize what will be exported, and where it will go. For example, you can configure it so that: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  All high severity alerts are sent to an Azure Event Hub 
&lt;/div&gt; 
&lt;div&gt;
  All medium or higher severity findings from vulnerability assessment scans of your SQL servers are sent to a specific Log Analytics workspace 
&lt;/div&gt; 
&lt;div&gt;
  Specific recommendations are delivered to an Event Hub or Log Analytics workspace whenever they're generated 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  Set up a continuous export 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  You can configure continuous export from the Security Center pages in Azure portal, via the Security Center REST API, or at scale using the supplied Azure Policy templates. Select the appropriate tab below for details of each. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Configure continuous export from the Security Center pages in Azure portal 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The steps below are necessary whether you're setting up a continuous export to Log Analytics workspace or Azure Event Hubs. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  1. From Security Center's sidebar, select Pricing &amp;amp; settings. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  2. Select the specific subscription for which you want to configure the data export. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  3. From the sidebar of the settings page for that subscription, select Continuous Export. 
&lt;/div&gt; 
&lt;div&gt;
  Here you see the export options. There's a tab for each available export target. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  4. Select the data type you'd like to export and choose from the filters on each type (for example, export only high severity alerts). 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  5. Optionally, if your selection includes one of these four recommendations, you can include the vulnerability assessment findings together with them: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - Vulnerability Assessment findings on your SQL databases should be remediated 
&lt;/div&gt; 
&lt;div&gt;
  - Vulnerability Assessment findings on your SQL servers on machines should be remediated (Preview) 
&lt;/div&gt; 
&lt;div&gt;
  - Vulnerabilities in Azure Container Registry images should be remediated (powered by Qualys) 
&lt;/div&gt; 
&lt;div&gt;
  - Vulnerabilities in your virtual machines should be remediated 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  To include the findings with these recommendations, enable the include security findings option. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  6. From the "Export target" area, choose where you'd like the data saved. Data can be saved in a target on a different subscription (for example on a Central Event Hub instance or a central Log Analytics workspace). 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  7. Select Save. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Continuously export Security Center data" url="https://docs.microsoft.com/en-us/azure/security-center/continuous-export?tabs=azure-portal"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  View exported alerts and recommendations in Azure Monitor 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  In some cases, you may choose to view the exported Security Alerts and/or recommendations in Azure Monitor. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Azure Monitor provides a unified alerting experience for a variety of Azure alerts including Diagnostic Log, Metric alerts, and custom alerts based on Log Analytics workspace queries. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  To view alerts and recommendations from Security Center in Azure Monitor, configure an Alert rule based on Log Analytics queries (Log Alert): 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  1. From Azure Monitor's Alerts page, select New alert rule. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  2. In the create rule page, configure your new rule (in the same way you'd configure a log alert rule in Azure Monitor): 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - For Resource, select the Log Analytics workspace to which you exported security alerts and recommendations. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - For Condition, select Custom log search. In the page that appears, configure the query, look-back period, and frequency period. In the search query, you can type SecurityAlert or SecurityRecommendation to query the data types that Security Center continuously exports to as you enable the Continuous export to Log Analytics feature. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - Optionally, configure the Action Group that you'd like to trigger. Action groups can trigger email sending, ITSM tickets, WebHooks, and more. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  You'll now see new Azure Security Center alerts or recommendations (depending on your configured continuous export rules and the condition you defined in your Azure Monitor alert rule) in Azure Monitor alerts, with automatic triggering of an action group (if provided). 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:14.113">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-MONITOR6" name="Enable and use Traffic Analytics" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Enable and use Traffic Analytics 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  Traffic Analytics is a cloud-based solution that provides visibility into user and application activity in cloud networks. Traffic analytics analyzes Network Watcher network security group (NSG) flow logs to provide insights into traffic flow in your Azure cloud. With traffic analytics, you can: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - Visualize network activity across your Azure subscriptions and identify hot spots. 
&lt;/div&gt; 
&lt;div&gt;
  - Identify security threats to, and secure your network, with information such as open-ports, applications attempting Internet access, and virtual machines (VM) connecting to rogue networks. 
&lt;/div&gt; 
&lt;div&gt;
  - Understand traffic flow patterns across Azure regions and the Internet to optimize your network deployment for performance and capacity. 
&lt;/div&gt; 
&lt;div&gt;
  - Pinpoint network misconfigurations leading to failed connections in your network. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  Enable Network Watcher 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  To analyze traffic, you need to have an existing network watcher, or enable a network watcher in each region that you have NSGs that you want to analyze traffic for. Traffic analytics can be enabled for NSGs hosted in any of the supported regions. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Select a network security group 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Before enabling NSG flow logging, you must have a network security group to log flows for. If you don't have a network security group, see Create a network security group to create one. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  In Azure portal, go to Network watcher, and then select NSG flow logs. Select the network security group that you want to enable an NSG flow log for. 
&lt;/div&gt; 
&lt;div&gt;
  If you try to enable traffic analytics for an NSG that is hosted in any region other than the supported regions, you receive a "Not found" error. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Enable flow log settings 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Before enabling flow log settings, you must complete the following tasks: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Register the Azure Insights provider, if it's not already registered for your subscription: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Register-AzResourceProvider -ProviderNamespace Microsoft.Insights 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  If you don't already have an Azure Storage account to store NSG flow logs in, you must create a storage account. You can create a storage account with the command that follows. Before running the command, replace &amp;lt;replace-with-your-unique-storage-account-name&amp;gt; with a name that is unique across all Azure locations, between 3-24 characters in length, using only numbers and lower-case letters. You can also change the resource group name, if necessary. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  New-AzStorageAccount ` 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; -Location westcentralus ` 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; -Name &amp;lt;replace-with-your-unique-storage-account-name&amp;gt; ` 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; -ResourceGroupName myResourceGroup ` 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; -SkuName Standard_LRS ` 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; -Kind StorageV2 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Select the following options: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  1. Select On for Status 
&lt;/div&gt; 
&lt;div&gt;
  2. Select Version 2 for Flow Logs version. Version 2 contains flow-session statistics (Bytes and Packets) 
&lt;/div&gt; 
&lt;div&gt;
  3. Select an existing storage account to store the flow logs in. Ensure that your storage does not have "Data Lake Storage Gen2 Hierarchical Namespace Enabled" set to true. 
&lt;/div&gt; 
&lt;div&gt;
  4. Set Retention to the number of days you want to store data for. If you want to store the data forever, set the value to 0. You incur Azure Storage fees for the storage account. 
&lt;/div&gt; 
&lt;div&gt;
  5. Select On for Traffic Analytics Status. 
&lt;/div&gt; 
&lt;div&gt;
  6. Select processing interval. Based on your choice, flow logs will be collected from storage account and processed by Traffic Analytics. You can choose processing interval of every 1 hour or every 10 mins. 
&lt;/div&gt; 
&lt;div&gt;
  7. Select an existing Log Analytics (OMS) Workspace, or select Create New Workspace to create a new one. A Log Analytics workspace is used by Traffic Analytics to store the aggregated and indexed data that is then used to generate the analytics. If you select an existing workspace, it must exist in one of the supported regions and have been upgraded to the new query language. If you do not wish to upgrade an existing workspace, or do not have a workspace in a supported region, create a new one. For more information about query languages, see Azure Log Analytics upgrade to new log search. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Note: The log analytics workspace hosting the traffic analytics solution and the NSGs do not have to be in the same region. For example, you may have traffic analytics in a workspace in the West Europe region, while you may have NSGs in East US and West US. Multiple NSGs can be configured in the same workspace. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  8. Select Save. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Repeat the previous steps for any other NSGs for which you wish to enable traffic analytics for. Data from flow logs is sent to the workspace, so ensure that the local laws and regulations in your country/region permit data storage in the region where the workspace exists. If you have set different processing intervals for different NSGs, data will be collected at different intervals. For example: You can choose to enable processing interval of 10 mins for critical VNETs and 1 hour for noncritical VNETs. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  You can also configure traffic analytics using the Set-AzNetworkWatcherConfigFlowLog PowerShell cmdlet in Azure PowerShell. Run Get-Module -ListAvailable Az to find your installed version. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Traffic Analytics" url="https://docs.microsoft.com/en-us/azure/network-watcher/traffic-analytics"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="6.6" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  View traffic analytics 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  To view Traffic Analytics, search for Network Watcher in the portal search bar. Once inside Network Watcher, to explore traffic analytics and its capabilities, select Traffic Analytics from the left menu. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The dashboard may take up to 30 minutes to appear the first time because Traffic Analytics must first aggregate enough data for it to derive meaningful insights, before it can generate any reports. 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:14.113">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-DDOS-PROTECTION" name="Enable Azure DDoS Standard protection on your Azure Virtual Network" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Enable Azure DDoS Standard protection on your Azure Virtual Network&lt;/p&gt;&lt;p&gt;Rationale:&lt;br&gt;Enable Azure Distributed Denial of Service (DDoS) Standard protection on your Azure Virtual Network to guard against DDoS attacks.&lt;/p&gt;&lt;p&gt;Remediation:&lt;br&gt;Create a DDoS protection plan&lt;/p&gt;&lt;p&gt;1. Select Create a resource in the upper left corner of the Azure portal.&lt;/p&gt;&lt;p&gt;2. Search the term DDoS. When DDoS protection plan appears in the search results, select it.&lt;/p&gt;&lt;p&gt;3. Select Create.&lt;/p&gt;&lt;p&gt;4. Enter or select the following values, then select Create:&lt;/p&gt;&lt;p&gt;Name: Enter MyDdosProtectionPlan.&lt;br&gt;Subscription: Select your subscription.&lt;br&gt;Resource group: Select Create new and enter MyResourceGroup.&lt;br&gt;Location: Enter East US.&lt;/p&gt;&lt;p&gt;Enable DDoS protection for a new virtual network&lt;/p&gt;&lt;p&gt;1. Select Create a resource in the upper left corner of the Azure portal.&lt;/p&gt;&lt;p&gt;2. Select Networking, and then select Virtual network.&lt;/p&gt;&lt;p&gt;3. Enter or select the following values, accept the remaining defaults, and then select Create:&lt;/p&gt;&lt;p&gt;Name: Enter MyVnet.&lt;br&gt;Subscription: Select your subscription.&lt;br&gt;Resource group: Select Use existing, and then select MyResourceGroup&lt;br&gt;Location: Enter East US&lt;br&gt;DDoS Protection Standard: Select Enable. The plan you select can be in the same, or different subscription than the virtual network, but both subscriptions must be associated to the same Azure Active Directory tenant.&lt;/p&gt;&lt;p&gt;Enable DDoS protection for an existing virtual network&lt;/p&gt;&lt;p&gt;1. Create a DDoS protection plan by completing the steps in Create a DDoS protection plan, if you don't have an existing DDoS protection plan.&lt;br&gt;2. Select Create a resource in the upper left corner of the Azure portal.&lt;br&gt;3. Enter the name of the virtual network that you want to enable DDoS Protection Standard for in the Search resources, services, and docs box at the top of the portal. When the name of the virtual network appears in the search results, select it.&lt;br&gt;4. Select DDoS protection, under SETTINGS.&lt;br&gt;5. Select Standard. Under DDoS protection plan, select an existing DDoS protection plan, or the plan you created in step 1, and then select Save. The plan you select can be in the same, or different subscription than the virtual network, but both subscriptions must be associated to the same Azure Active Directory tenant.&lt;/p&gt;&lt;p&gt;Impact:&lt;br&gt;You cannot move a virtual network to another resource group or subscription when DDoS Standard is enabled for the virtual network. If you need to move a virtual network with DDoS Standard enabled, disable DDoS Standard first, move the virtual network, and then enable DDoS standard. After the move, the auto-tuned policy thresholds for all the protected public IP addresses in the virtual network are reset.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Quickstart: Create and configure Azure DDoS Protection Standard" url="https://docs.microsoft.com/en-us/azure/ddos-protection/manage-ddos-protection"/>
          </references>
          <standards>
            <standard ref="GS-9" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="NS-5" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Validate and test&lt;/p&gt;

	&lt;p&gt;First, check the details of your DDoS protection plan:&lt;/p&gt;

	&lt;p&gt;1. Select All services on the top, left of the portal.&lt;br /&gt;
2. Enter DDoS in the Filter box. When DDoS protection plans appear in the results, select it.&lt;br /&gt;
3. Select your DDoS protection plan from the list.&lt;/p&gt;

	&lt;p&gt;The MyVnet virtual network should be listed.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:14.113">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-SENTINEL" name="Enable Azure Sentinel" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Enable Azure Sentinel&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Microsoft Azure Sentinel is a scalable, cloud-native, security information event management (SIEM) and security orchestration automated response (SOAR) solution. Azure Sentinel delivers intelligent security analytics and threat intelligence across the enterprise, providing a single solution for alert detection, threat visibility, proactive hunting, and threat response.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Enable Azure Sentinel&lt;/p&gt; 
&lt;p&gt;1. Sign in to the Azure portal. Make sure that the subscription in which Azure Sentinel is created is selected.&lt;/p&gt; 
&lt;p&gt;2. Search for and select Azure Sentinel.&lt;/p&gt; 
&lt;p&gt;3. Select Add.&lt;/p&gt; 
&lt;p&gt;4. Select the workspace you want to use or create a new one. You can run Azure Sentinel on more than one workspace, but the data is isolated to a single workspace.&lt;/p&gt; 
&lt;p&gt;Note: Default workspaces created by Azure Security Center will not appear in the list; you cannot install Azure Sentinel on them.&lt;/p&gt; 
&lt;p&gt;Important: Once deployed on a workspace, Azure Sentinel does not currently support the moving of that workspace to other resource groups or subscriptions.&lt;/p&gt; 
&lt;p&gt;If you have already moved the workspace, disable all active rules under Analytics and re-enable them after five minutes. This should be effective in most cases, though, to reiterate, it is unsupported and undertaken at your own risk.&lt;/p&gt; 
&lt;p&gt;5. Select Add Azure Sentinel.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Quickstart: On-board Azure Sentinel" url="https://docs.microsoft.com/en-us/azure/sentinel/quickstart-onboard"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="NS-8" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure Azure Sentinel is enabled.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:13.713">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-L01" name="Enable diagnostic logs auditing for Microsoft Azure" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Diagnostic Logs capture activity to the data access plane while the Activity log is a subscription-level log for the control plane. Resource-level diagnostic logs provide insight into operations that were performed within that resource itself, for example, getting a secret from a Key Vault. Currently, 32 Azure resources support Diagnostic Logging (See the references section for a complete list), including Network Security Groups, Load Balancers, Key Vault, AD, Logic Apps and CosmosDB. The content of these logs varies by resource type. For example, Windows event system logs are a category of diagnostics logs for VMs, and blob, table, and queue logs are categories of diagnostics logs for storage accounts.&lt;/p&gt;&lt;p&gt;A number of back-end services were not configured to log and store Diagnostic Logs for certain activities or for a sufficient length. It is crucial that logging systems are correctly configured to log all relevant activities and retain those logs for a sufficient length of time. By default, Diagnostic Logs are not enabled. Given that the mean time to detection in an enterprise is 240 days, a minimum retention period of two years is recommended.&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation:&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;The specific steps for configuring resources within the Azure console vary depending on resource, but typically the steps are:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Go to the resource&lt;/li&gt;&lt;li&gt;Click on Diagnostic settings&lt;/li&gt;&lt;li&gt;In the blade that appears, click "Add diagnostic setting"&lt;/li&gt;&lt;li&gt;Configure the diagnostic settings&lt;/li&gt;&lt;li&gt;Click on Save&lt;/li&gt;&lt;/ol&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Enable diagnostics logging for web apps in Azure App Service" url="https://docs.microsoft.com/en-us/azure/app-service-web/web-sites-enable-diagnostic-log"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5.3" supportedStandardRef="cis-azure-standard"/>
            <standard ref="5.3" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="LT-4" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="LT-5" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Go to the resource&lt;/li&gt;&lt;li&gt;Click on Diagnostic settings&lt;/li&gt;&lt;li&gt;In the blade that appears, click "Add diagnostic setting"&lt;/li&gt;&lt;li&gt;Configure the diagnostic settings&lt;/li&gt;&lt;li&gt;Click on Save&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:13.713">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-A04" name="Enable MFA for Administrator &amp; Co Administrator accounts" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Enable multi-factor authentication (MFA) device enhances the security of the login process for the Administrator accounts. With MFA, users have a device that generates a unique authentication code (a one-time password, or OTP) and users must provide both their normal credentials (like their username and password) and the OTP. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The MFA device can either be a special piece of hardware, or it can be a virtual device. The recommendation for the Service Administrator &amp;amp; Co Administrator accounts is to use MFA to increase the level of security of the login process. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt; 
  &lt;li&gt;Select Azure Active Directory.&lt;/li&gt; 
  &lt;li&gt;Go into "Users and groups" &amp;gt; "All users".&lt;/li&gt; 
  &lt;li&gt;Select "Multi-Factor Authentication".&lt;/li&gt; 
  &lt;li&gt;Choose all the Service Administrator &amp;amp; Co Administrator accounts and enable MFA.&amp;nbsp;&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - How to require two-step verification for a user or group" url="https://docs.microsoft.com/en-us/azure/multi-factor-authentication/multi-factor-authentication-get-started-user-states"/>
          </references>
          <standards>
            <standard ref="IM-6" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="IM-7" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;Multi-Factor Authentication&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check all Administrator accounts have got the MFA flag enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:13.713">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-NSG-LOGS" name="Enable Network Security Group flow logs" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Enable Network Security Group (NSG) flow logs&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; A network security group (NSG) enables you to filter inbound traffic to, and outbound traffic from, a virtual machine (VM). You can log network traffic that flows through an NSG with Network Watcher's NSG flow log capability. &lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; How to enable NSG flow log&lt;/p&gt; 
&lt;p&gt;1. NSG flow log data is written to an Azure Storage account. To create an Azure Storage account, select + Create a resource at the top, left corner of the portal.&lt;/p&gt; 
&lt;p&gt;2. Select Storage, then select Storage account - blob, file, table, queue.&lt;/p&gt; 
&lt;p&gt;3. Enter, or select the following information, accept the remaining defaults, and then select Create.&lt;/p&gt; 
&lt;p&gt;Name: 3-24 characters in length, can only contain lowercase letters and numbers, and must be unique across all Azure Storage accounts.&lt;br&gt; Location: Select East US&lt;br&gt; Resource group: Select Use existing, and then select myResourceGroup&lt;/p&gt; 
&lt;p&gt;The storage account may take around minute to create. Don't continue with remaining steps until the storage account is created. In all cases, the storage account must be in the same region as the NSG.&lt;/p&gt; 
&lt;p&gt;4. In the top, left corner of portal, select All services. In the Filter box, type Network Watcher. When Network Watcher appears in the search results, select it.&lt;/p&gt; 
&lt;p&gt;5. Under LOGS, select NSG flow logs.&lt;/p&gt; 
&lt;p&gt;6. From the list of NSGs, select the NSG named myVm-nsg.&lt;/p&gt; 
&lt;p&gt;7. Under Flow logs settings, select On.&lt;/p&gt; 
&lt;p&gt;8. Select the flow logging version. Version 2 contains flow-session statistics (Bytes and Packets)&lt;/p&gt; 
&lt;p&gt;9. Select the storage account that you created in step 3.&lt;/p&gt; 
&lt;p&gt;Note: NSG Flow Logs do not work with storage accounts that have hierarchical namespace enabled.&lt;/p&gt; 
&lt;p&gt;10. In the top, left corner of portal, select All services. In the Filter box, type Network Watcher. When Network Watcher appears in the search results, select it.&lt;/p&gt; 
&lt;p&gt;11. Set Retention (days) to 5, and then select Save.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Tutorial: Log network traffic to and from a virtual machine using the Azure portal" url="https://docs.microsoft.com/en-us/azure/network-watcher/network-watcher-nsg-flow-logging-portal"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="6.5" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Download flow log&lt;/p&gt;

	&lt;p&gt;1. From Network Watcher, in the portal, select NSG flow logs under LOGS.&lt;/p&gt;

	&lt;p&gt;2. Select You can download flow logs from configured storage accounts.&lt;/p&gt;

	&lt;p&gt;3. Select the storage account that you configured in step 2 of Enable NSG flow log (Remediation section).&lt;/p&gt;

	&lt;p&gt;4. Under Blob service, select Containers, and then select the insights-logs-networksecuritygroupflowevent container.&lt;/p&gt;

	&lt;p&gt;5. In the container, navigate the folder hierarchy until you get to a PT1H.json file. Log files are written to a folder hierarchy that follows the following naming convention: https://{storageAccountName}.blob.core.windows.net/insights-logs-networksecuritygroupflowevent/resourceId=/SUBSCRIPTIONS/{subscriptionID}/RESOURCEGROUPS/{resourceGroupName}/PROVIDERS/MICROSOFT.NETWORK/NETWORKSECURITYGROUPS/{nsgName}/y={year}/m={month}/d={day}/h={hour}/m=00/macAddress={macAddress}/PT1H.json&lt;/p&gt;

	&lt;p&gt;6. Select ... to the right of the PT1H.json file and select Download.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:14.113">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-USER-MFA" name="Enable per-user MFA" issueId="" issueLink="" platform="" cost="0" risk="40" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Enable per-user MFA 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  Multi-factor authentication (MFA) is a process where a user is prompted during a sign-in event for additional forms of identification. This prompt could be to enter a code on their cellphone or to provide a fingerprint scan. When you require a second form of authentication, security is increased as this additional factor isn't something that's easy for an attacker to obtain or duplicate. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  To secure user sign-in events in Azure AD, you can require multi-factor authentication (MFA). Enabling Azure AD Multi-Factor Authentication using Conditional Access policies is the recommended approach to protect users. Conditional Access is an Azure AD Premium P1 or P2 feature that lets you apply rules to require MFA as needed in certain scenarios 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  For Azure AD free tenants without Conditional Access, you can use security defaults to protect users. Users are prompted for MFA as needed, but you can't define your own rules to control the behavior. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Features and licenses for Azure AD Multi-Factor Authentication" url="https://docs.microsoft.com/en-us/azure/active-directory/authentication/concept-mfa-licensing"/>
          </references>
          <standards>
            <standard ref="1.1.2" supportedStandardRef="cis-azure-standard"/>
            <standard ref="1.1.2" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="1.1.3" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="IM-6" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="IM-7" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  1. Log into the Azure portal as an owner. 
&lt;/div&gt; 
&lt;div&gt;
  2. Select Azure Active Directory. 
&lt;/div&gt; 
&lt;div&gt;
  3. Go into "Users and groups" &amp;gt; "All users". 
&lt;/div&gt; 
&lt;div&gt;
  4. Select "Multi-Factor Authentication". 
&lt;/div&gt; 
&lt;div&gt;
  5. Ensure your users have the MFA flag enabled. 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:13.713">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-FIREWALL3" name="Enable Threat intelligence-based filtering to alert and deny traffic" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Enable Threat intelligence-based filtering to alert and deny traffic&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Threat intelligence-based filtering can be enabled for your firewall to alert and deny traffic from/to known malicious IP addresses and domains. The IP addresses and domains are sourced from the Microsoft Threat Intelligence feed.&lt;br&gt; By default, threat intelligence-based filtering is enabled in alert mode. Azure recommends to enable it in alert and deny mode.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; By default, threat intelligence-based filtering is enabled in alert mode. You cannot turn off this feature or change the mode until the portal interface becomes available in your region.&lt;br&gt; You can then change the mode by selecting "Alert and deny" in the Azure portal interface.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; none&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Azure Firewall threat intelligence-based filtering" url="https://docs.microsoft.com/en-us/azure/firewall/threat-intel"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Testing&lt;/p&gt;

  &lt;p&gt;- Outbound testing - Outbound traffic alerts should be a rare occurrence, as it means that your environment has been compromised. To help test outbound alerts are working, a test FQDN has been created that triggers an alert. Use testmaliciousdomain.eastus.cloudapp.azure.com for your outbound tests.&lt;/p&gt;

  &lt;p&gt;- Inbound testing - You can expect to see alerts on incoming traffic if DNAT rules are configured on the firewall. This is true even if only specific sources are allowed on the DNAT rule and traffic is otherwise denied. Azure Firewall doesn't alert on all known port scanners; only on scanners that are known to also engage in malicious activity.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:14.113">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-SECURE-CONFIG" name="Establish secure configurations with Azure Policy" issueId="" issueLink="" platform="" cost="0" risk="42" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Establish secure configurations with Azure Policy&lt;/p&gt;&lt;p&gt;Rationale:&lt;br&gt;Azure Policy helps to enforce organizational standards and to assess compliance at-scale. Through its compliance dashboard, it provides an aggregated view to evaluate the overall state of the environment, with the ability to drill down to the per-resource, per-policy granularity. It also helps to bring your resources to compliance through bulk remediation for existing resources and automatic remediation for new resources.&lt;/p&gt;&lt;p&gt;Common use cases for Azure Policy include implementing governance for resource consistency, regulatory compliance, security, cost, and management. Policy definitions for these common use cases are already available in your Azure environment as built-ins to help you get started.&lt;/p&gt;&lt;p&gt;All Azure Policy data and objects are encrypted at rest.&lt;/p&gt;&lt;p&gt;Remediation:&lt;br&gt;Define and implement standard security configurations with Azure Policy&lt;/p&gt;&lt;p&gt;1. Use Azure Policy to put restrictions on the type of resources that can be created in your and in customer subscriptions using the following built-in policy definitions:&lt;br&gt;- Not allowed resource types&lt;br&gt;- Allowed resource types&lt;br&gt;You can also create custom Azure Policy definitions to restrict more granular resource settings.&lt;/p&gt;&lt;p&gt;2. Use built-in Azure Policy definitions as well as Azure Policy aliases in the "Microsoft.Network" namespace to create custom policies to alert, audit, and enforce system configurations. Additionally, develop a process and pipeline for managing policy exceptions.&lt;/p&gt;&lt;p&gt;3. Use Azure Policy [audit], [deny], and [deploy if not exist] to automatically enforce configurations for your Azure resources.&lt;/p&gt;&lt;p&gt;4. You can use recommendations from Azure Security Center or built-in Azure Policies, such as:&lt;br&gt;- There should be more than one owner assigned to your subscription&lt;br&gt;- Deprecated accounts with owner permissions should be removed from your subscription&lt;br&gt;- External accounts with owner permissions should be removed from your subscription&lt;/p&gt;&lt;p&gt;Impact:&lt;br&gt;It is important to validate a new policy works as intended before allowing it to change or block work. The validation must ensure only the intended resources are determined to be non-compliant and no compliant resources are incorrectly included (known as a false positive) in the results.&lt;br&gt;For this reason, your policy definitions should be as tightly defined and focused on the resources and the properties you need to evaluate for compliance as possible.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Tutorial: Create and manage policies to enforce compliance" url="https://docs.microsoft.com/en-us/azure/governance/policy/tutorials/create-and-manage"/>
            <reference name="Understand Azure Policy effects" url="https://docs.microsoft.com/en-us/azure/governance/policy/concepts/effects"/>
          </references>
          <standards>
            <standard ref="AM-2" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="GS-5" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;The recommended approach to validating a new policy definition is by following these steps:&lt;/p&gt;

	&lt;p&gt;- Tightly define your policy&lt;br /&gt;
- Audit your existing resources&lt;br /&gt;
- Audit new or updated resource requests&lt;br /&gt;
- Deploy your policy to resources&lt;br /&gt;
- Continuous monitoring&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:13.713">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="C-AZURE-COMMON1" name="Evaluate public IP addresses on a periodic basis" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Public IP Addresses provide tenant accounts with Internet connectivity for resources contained within the tenant. During the creation of certain resources in Azure, a Public IP Address may be created. All Public IP Addresses within the tenant should be periodically reviewed for accuracy and necessity.&lt;/p&gt;
&lt;p&gt;Rationale:&lt;/p&gt;
&lt;p&gt;Public IP Addresses allocated to the tenant should be periodically reviewed for necessity. Public IP Addresses that are not intentionally assigned and controlled present a publicly facing vector for threat actors and significant risk to the tenant.&lt;/p&gt;
&lt;p&gt;Remediation:&lt;/p&gt;
&lt;p&gt;Remediation will vary significantly depending on your organization's security requirements for the resources attached to each individual Public IP address&lt;/p&gt;
&lt;p&gt;Impact:&lt;/p&gt;
&lt;p&gt;None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Security Control v3: Network security" url="https://learn.microsoft.com/en-us/security/benchmark/azure/security-controls-v3-network-security"/>
            <reference name="az network public-ip" url="https://learn.microsoft.com/en-us/cli/azure/network/public-ip?view=azure-cli-latest"/>
          </references>
          <standards>
            <standard ref="6.7" supportedStandardRef="cis-azure-standard"/>
            <standard ref="NS-2" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;From Azure Portal&lt;br&gt;1. Open the All Resources blade&lt;br&gt;2. Click on Add Filter&lt;br&gt;3. In the Add Filter window, select the following:&lt;br&gt;Filter: Type&lt;br&gt;Operator: Equals&lt;br&gt;Value: Public IP address&lt;br&gt;4. Click the Apply button&lt;br&gt;5. For each Public IP address in the list, use Overview (or Properties) to review the "Associated to:" field and determine if the associated resource is still relevant to your tenant environment. If the associated resource is relevant, ensure that additional controls exist to mitigate risk (e.g. Firewalls, VPNs, Traffic Filtering, Virtual Gateway Appliances, Web Application Firewalls, etc.) on all subsequently attached resources.&lt;br&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;From Azure CLI&lt;br&gt;List all Public IP addresses:&lt;br&gt;az network public-ip list&lt;br&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;For each Public IP address in the output, review the "name" property and determine if &amp;nbsp;the associated resource is still relevant to your tenant environment. If the associated resource is relevant, ensure that additional controls exist to mitigate risk (e.g. Firewalls, VPNs, Traffic Filtering, Virtual Gateway Appliances, Web Application Firewalls, etc.) on all subsequently attached resources.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:13.714">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-L05" name="Export the Audit Logs to a storage account" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Export the information of Audit Logs to a storage account. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Go to "Monitor" and then to "Activity Logs".&lt;/li&gt; 
  &lt;li&gt;Push the button "Export".&lt;/li&gt; 
  &lt;li&gt;Select "All Regions".&lt;/li&gt; 
  &lt;li&gt;Select "Export to a storage account" and select your account.&lt;/li&gt; 
  &lt;li&gt;Select the "Retention (days)" as minimum 90 days.&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Enable diagnostics logging for web apps in Azure App Service" url="https://docs.microsoft.com/en-us/azure/app-service-web/web-sites-enable-diagnostic-log"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="6.5" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Activity Logs&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Push the button &amp;quot;Export&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;All Regions&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;Export to a storage account&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that all fields are correctly filled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:13.713">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-SUBSCRIPTIONS" name="Implement isolation using separate subscriptions" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Implement isolation using separate subscriptions&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; You can create an additional subscription for your Enterprise Agreement (EA), Microsoft Customer Agreement or Microsoft Partner Agreement billing account in the Azure portal. You may want an additional subscription to avoid hitting subscription limits, to create separate environments for security, or to isolate data for compliance reasons.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Create a subscription in the Azure portal&lt;/p&gt; 
&lt;p&gt;1. Sign in to the Azure portal.&lt;/p&gt; 
&lt;p&gt;2. Search for Subscriptions.&lt;/p&gt; 
&lt;p&gt;3. Select Add.&lt;/p&gt; 
&lt;p&gt;4. If you have access to multiple billing accounts, select the billing account for which you want to create the subscription.&lt;/p&gt; 
&lt;p&gt;5. Fill the form and click Create.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Create an additional Azure subscription" url="https://docs.microsoft.com/en-us/azure/cost-management-billing/manage/create-subscription"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that you have implemented isolation through separate subscriptions.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:13.713">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-LOAD-BALANCER3" name="Integrate Azure Firewall with Azure Standard Load Balancer" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Integrate Azure Firewall with Azure Standard Load Balancer&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; You can integrate an Azure Firewall into a virtual network with an Azure Standard Load Balancer (either public or internal).&lt;br&gt; Explicitly define internet connectivity and valid source IPs through outbound rules and network security groups with your Load Balancer to use Microsoft's threat intelligence for protecting your web applications.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; The preferred design is to integrate an internal load balancer with your Azure firewall, as this is a much simpler design. You can use a public load balancer if you already have one deployed and you want to keep it in place. However, you need to be aware of an asymmetric routing issue that can break functionality with the public load balancer scenario.&lt;/p&gt; 
&lt;p&gt;Public load balancer&lt;/p&gt; 
&lt;p&gt;With a public load balancer, the load balancer is deployed with a public frontend IP address.&lt;/p&gt; 
&lt;p&gt;Asymmetric routing&lt;/p&gt; 
&lt;p&gt;Asymmetric routing is where a packet takes one path to the destination and takes another path when returning to the source. This issue occurs when a subnet has a default route going to the firewall's private IP address and you're using a public load balancer. In this case, the incoming load balancer traffic is received via its public IP address, but the return path goes through the firewall's private IP address. Since the firewall is stateful, it drops the returning packet because the firewall isn't aware of such an established session.&lt;/p&gt; 
&lt;p&gt;Fix the routing issue&lt;/p&gt; 
&lt;p&gt;When you deploy an Azure Firewall into a subnet, one step is to create a default route for the subnet directing packets through the firewall's private IP address located on the AzureFirewallSubnet.&lt;br&gt; When you introduce the firewall into your load balancer scenario, you want your Internet traffic to come in through your firewall's public IP address. From there, the firewall applies its firewall rules and NATs the packets to your load balancer's public IP address. This is where the problem occurs. Packets arrive on the firewall's public IP address, but return to the firewall via the private IP address (using the default route). To avoid this problem, create an additional host route for the firewall's public IP address. Packets going to the firewall's public IP address are routed via the Internet. This avoids taking the default route to the firewall's private IP address.&lt;/p&gt; 
&lt;p&gt;Internal load balancer&lt;/p&gt; 
&lt;p&gt;With an internal load balancer, the load balancer is deployed with a private frontend IP address.&lt;br&gt; There's no asymmetric routing issue with this scenario. The incoming packets arrive at the firewall's public IP address, get translated to the load balancer's private IP address, and then returns to the firewall's private IP address using the same return path.&lt;br&gt; So, you can deploy this scenario similar to the public load balancer scenario, but without the need for the firewall public IP address host route.&lt;/p&gt; 
&lt;p&gt;Note: The virtual machines in the backend pool will not have outbound internet connectivity with this configuration. For more information please see Reference URLs.&lt;/p&gt; 
&lt;p&gt;Additional security&lt;/p&gt; 
&lt;p&gt;To further enhance the security of your load-balanced scenario, you can use network security groups (NSGs).&lt;br&gt; For example, you can create an NSG on the backend subnet where the load-balanced virtual machines are located. Allow incoming traffic originating from the firewall IP address/port.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; You need to be aware of an asymmetric routing issue that can break functionality with the public load balancer scenario.&lt;br&gt; The virtual machines in the backend pool will not have outbound internet connectivity with this configuration. For more information please see Reference URLs.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Integrate Azure Firewall with Azure Standard Load Balancer" url="https://docs.microsoft.com/en-us/azure/firewall/integrate-lb"/>
            <reference name="Tutorial: Deploy and configure Azure Firewall using the Azure portal" url="https://docs.microsoft.com/en-us/azure/firewall/tutorial-firewall-deploy-portal"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that Azure Firewall is integrated with Azure Standard Load Balancer.&lt;br /&gt;
Test the firewall to confirm that it works as expected, following the testing steps for firewall deployment.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:14.113">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-N09" name="Isolate Azure instances into different VNets" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Specify a VNet for the Azure instance as a launch parameter. Applications that run on the Cloud instance can use the VNet security configuration when they access Azure resources.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  You can configure an Azure cloud service from Solution Explorer in Visual Studio. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Create a virtual network with multiple subnets" url="https://docs.microsoft.com/en-us/azure/virtual-network/virtual-networks-create-vnet-arm-pportal"/>
          </references>
          <standards>
            <standard ref="GS-4" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that the Azure instances are into different VNets.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:14.114">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-LOAD-BALANCER1" name="Maintain an inventory of administrative accounts for Azure Load Balancer" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Maintain an inventory of administrative accounts for Azure Load Balancer&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Azure role-based access control (Azure RBAC) allows you to manage access to Azure resources such as your Load Balancer through role assignments. Assign these roles to users, groups service principals, and managed identities.&lt;br&gt; Inventory Pre-defined and built-in roles for certain resources with tools like Azure CLI, Azure PowerShell or the Azure portal.&lt;br&gt; It is highly recommended by Microsoft to maintain an inventory of administrative accounts.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; How to get a directory role in Azure AD with PowerShell&lt;/p&gt; 
&lt;p&gt;Get-AzureADDirectoryRole [-Filter ] [-InformationAction ] [-InformationVariable ] []&lt;/p&gt; 
&lt;p&gt;Get-AzureADDirectoryRole -ObjectId  [-InformationAction ] [-InformationVariable ] []&lt;/p&gt; 
&lt;p&gt;How to get members of a directory role in Azure AD with PowerShell&lt;/p&gt; 
&lt;p&gt;Get-AzureADDirectoryRoleMember -ObjectId  [-InformationAction ] [-InformationVariable ] []&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Azure built-in roles" url="https://docs.microsoft.com/en-us/azure/role-based-access-control/built-in-roles"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that you maintain an inventory of administrative accounts for Azure Load Balancer&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:14.114">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-A07" name="Recertify user access" issueId="" issueLink="" platform="" cost="0" risk="40" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Do regular reviews of accounts on the system and verify that it doesn't exist stoled or fake accounts. With this process is ensured that there are not compromised accounts by former employees or by attackers.&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation:&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;At least every 90 days complete the following:&amp;nbsp;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Log in to the Azure portal as an owner.&lt;/li&gt;&lt;li&gt;Select Azure Active Directory.&lt;/li&gt;&lt;li&gt;Go into "Users and groups" &amp;gt; "All users".&lt;/li&gt;&lt;li&gt;For any user that should not exist:&lt;/li&gt;&lt;li&gt;Select the user.&lt;/li&gt;&lt;li&gt;Click "Delete".&lt;/li&gt;&lt;/ol&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Assign a user or group to an enterprise app in Azure Active Directory" url="https://docs.microsoft.com/en-us/azure/active-directory/active-directory-coreapps-assign-user-azure-portal"/>
          </references>
          <standards>
            <standard ref="PA-4" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Log in to the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each user has got an assigned account.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:13.713">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-A01" name="Register a Security contact for your Azure account" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Provide the security contact details for the Azure subscription. Microsoft Security Response Center (MSRC) performs security monitoring of the Azure network and infrastructure and receives threat intelligence and abuse complaints from third parties. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Microsoft will use this information provided to contact if the MSRC discovers that customer data has been accessed by an unlawful or unauthorized party. Also, this provides the means of ensuring these advisories are routed to the security team, especially if a distribution email address is used.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Access &amp;quot;Azure Security Center&amp;quot;.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;In the &amp;quot;Recommendations&amp;quot; tab choose &amp;quot;Provide security contact details&amp;quot;.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Once filled, save changes.&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Provide security contact details in Azure Security Center" url="https://docs.microsoft.com/en-us/azure/security-center/security-center-provide-security-contact-details"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Access &amp;quot;Azure Security Center&amp;quot;.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;In the &amp;quot;Recommendations&amp;quot; tab choose &amp;quot;Provide security
                            contact details&amp;quot;.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Check that all fields are filled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:13.713">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-REPOS-GIT" name="Securely store configuration of Azure resources" issueId="" issueLink="" platform="" cost="0" risk="42" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Securely store configuration of Azure resources&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; If using custom Azure Policy definitions, use Azure DevOps or Azure Repos to securely store and manage your code.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Use version control to save your work and coordinate code changes across your team. Even if you are just a single developer, version control helps you stay organized as you fix bugs and develop new features. Version control keeps a history of your development so that you can review and even rollback to any version of your code with ease.&lt;/p&gt; 
&lt;p&gt;Version control workflow&lt;/p&gt; 
&lt;p&gt;Version control has a general workflow that most developers use when writing code and sharing it with the team.&lt;/p&gt; 
&lt;p&gt;These steps are:&lt;br&gt; 1. Get a local copy of code if they do not have one yet.&lt;br&gt; 2. Make changes to code to fix bugs or add new features.&lt;br&gt; 3. Once the code is ready, make it available for review by your team.&lt;br&gt; 4. Once the code is reviewed, merge it into the team's shared codebase.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Azure Repos Git tutorial" url="https://docs.microsoft.com/en-us/azure/devops/repos/git/gitworkflow?view=azure-devops"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that the configuration of Azure resources is securely stored.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:14.114">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-JIT-VM-ACCESS" name="Secure your management ports with just-in-time VM access" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Secure your management ports with just-in-time (JIT) VM access&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Threat actors actively hunt accessible machines with open management ports, like RDP or SSH. All of your virtual machines are potential targets for an attack. When a VM is successfully compromised, it's used as the entry point to attack further resources within your environment.&lt;/p&gt; 
&lt;p&gt;As with all cybersecurity prevention techniques, your goal should be to reduce the attack surface. In this case, that means having fewer open ports, especially management ports.&lt;br&gt; Your legitimate users also use these ports, so it's not practical to keep them closed.&lt;br&gt; To solve this dilemma, Azure Security Center offers JIT. With JIT, you can lock down the inbound traffic to your VMs, reducing exposure to attacks while providing easy access to connect to VMs when needed.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; How to Enable JIT on your VMs from Azure Security Center&lt;/p&gt; 
&lt;p&gt;From Security Center, you can enable and configure the JIT VM access.&lt;/p&gt; 
&lt;p&gt;1. Open the Azure Defender dashboard and from the advanced protection area, select Just-in-time VM access.&lt;/p&gt; 
&lt;p&gt;The Just-in-time VM access page opens with your VMs grouped into the following tabs:&lt;/p&gt; 
&lt;p&gt;a. Configured - VMs that have been already been configured to support just-in-time VM access. For each VM, the configured tab shows:&lt;br&gt; i. The number of approved JIT requests in the last seven days&lt;br&gt; ii. The last access date and time&lt;br&gt; iii. The connection details configured&lt;br&gt; iv. The last user&lt;/p&gt; 
&lt;p&gt;b. Not configured - VMs without JIT enabled, but that can support JIT. Microsoft recommends that you enable JIT for these VMs.&lt;/p&gt; 
&lt;p&gt;c. Unsupported - VMs without JIT enabled and which don't support the feature. Your VM might be in this tab for the following reasons:&lt;br&gt; i. Missing network security group (NSG) - JIT requires an NSG to be configured&lt;br&gt; ii. Classic VM - JIT supports VMs that are deployed through Azure Resource Manager, not 'classic deployment'. Learn more about classic vs Azure Resource Manager deployment models.&lt;br&gt; iii. Other - Your VM might be in this tab if the JIT solution is disabled in the security policy of the subscription or the resource group.&lt;/p&gt; 
&lt;p&gt;2. From the Not configured tab, mark the VMs to protect with JIT and select Enable JIT on VMs.&lt;/p&gt; 
&lt;p&gt;The JIT VM access page opens listing the ports that Security Center recommends protecting:&lt;/p&gt; 
&lt;p&gt;- 22 - SSH&lt;br&gt; - 3389 - RDP&lt;br&gt; - 5985 - WinRM&lt;br&gt; - 5986 - WinRM&lt;/p&gt; 
&lt;p&gt;To accept the default settings, select Save.&lt;/p&gt; 
&lt;p&gt;3. To customize the JIT options:&lt;/p&gt; 
&lt;p&gt;- Add custom ports with the Add button.&lt;br&gt; - Modify one of the default ports, by selecting it from the list.&lt;/p&gt; 
&lt;p&gt;For each port (custom and default) the Add port configuration pane offers the following options:&lt;/p&gt; 
&lt;p&gt;- Protocol- The protocol that is allowed on this port when a request is approved&lt;br&gt; - Allowed source IPs- The IP ranges that are allowed on this port when a request is approved&lt;br&gt; - Maximum request time- The maximum time window during which a specific port can be opened&lt;/p&gt; 
&lt;p&gt;a. Set the port security to your needs.&lt;/p&gt; 
&lt;p&gt;b. Select OK.&lt;/p&gt; 
&lt;p&gt;4. Select Save.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; JIT does not support VMs protected by Azure Firewalls controlled by Azure Firewall Manager.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Secure your management ports with just-in-time access" url="https://docs.microsoft.com/en-us/azure/security-center/security-center-just-in-time"/>
            <reference name="Understanding just-in-time (JIT) VM access" url="https://docs.microsoft.com/en-us/azure/security-center/just-in-time-explained"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Audit JIT access activity in Security Center&lt;/p&gt;

	&lt;p&gt;You can gain insights into VM activities using log search. To view the logs:&lt;/p&gt;

	&lt;p&gt;1. From Just-in-time VM access, select the Configured tab.&lt;/p&gt;

	&lt;p&gt;2. For the VM that you want to audit, open the ellipsis menu at the end of the row.&lt;/p&gt;

	&lt;p&gt;3. Select Activity Log from the menu.&lt;/p&gt;

	&lt;p&gt;4. The activity log provides a filtered view of previous operations for that VM along with time, date, and subscription.&lt;/p&gt;

	&lt;p&gt;To download the log information, select Download as CSV.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:14.114">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-RESOURCE1" name="Set resource locks for mission critical Azure resources" issueId="" issueLink="" platform="" cost="0" risk="42" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Resource Manager Locks provide a way for administrators to lock down Azure resources to prevent deletion of, or modifications to, a resource. These locks sit outside of the Role Based Access Controls (RBAC) hierarchy and, when applied, will place restrictions on the resource for all users. These locks are very useful when there is an important resource in a subscription that users should not be able to delete or change. Locks can help prevent accidental and malicious changes or deletion.&lt;/p&gt;&lt;p&gt;Rationale:&lt;/p&gt;&lt;p&gt;As an administrator, it may be necessary to lock a subscription, resource group, or resource to prevent other users in the organization from accidentally deleting or modifying critical resources. The lock level can be set to to CanNotDelete or ReadOnly to achieve this purpose.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;CanNotDelete means authorized users can still read and modify a resource, but they can't delete the resource.&lt;/li&gt;&lt;li&gt;ReadOnly means authorized users can read a resource, but they can't delete or update the resource. Applying this lock is similar to restricting all authorized users to the permissions granted by the Reader role.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Remediation:&lt;/p&gt;&lt;p&gt;&lt;strong&gt;From Azure Console&lt;/strong&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Navigate to the specific Azure Resource or Resource Group&lt;/li&gt;&lt;li&gt;For each of the mission critical resource, click on Locks&lt;/li&gt;&lt;li&gt;Click Add&lt;/li&gt;&lt;li&gt;Give the lock a name and a description, then select the type, CanNotDelete or ReadOnly as appropriate&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;strong&gt;Using Azure Command Line Interface 2.0&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;To lock a resource, provide the name of the resource, its resource type, and its resource group name.&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;az lock create --name &amp;lt;LockName&amp;gt; --lock-type &amp;lt;CanNotDelete/Read-only&amp;gt; --resource-group &amp;lt;resourceGroupName&amp;gt; --resource-name &amp;lt;resourceName&amp;gt; --resource-type &amp;lt;resourceType&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="10.1" supportedStandardRef="cis-azure-standard-level-2"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;&lt;strong&gt;From Azure Console&lt;/strong&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Navigate to the specific Azure Resource or Resource Group&lt;/li&gt;&lt;li&gt;Click on Locks&lt;/li&gt;&lt;li&gt;Ensure the lock is defined with name and description, type as CanNotDelete or ReadOnly as appropriate.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;strong&gt;Using Azure Command Line Interface 2.0&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Review the list of all locks set currently:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;az lock list --resource-group &amp;lt;resourcegroupname&amp;gt; --resource-name &amp;lt;resourcename&amp;gt; --namespace &amp;lt;Namespace&amp;gt; --resource-type &amp;lt;type&amp;gt; --parent ""&lt;/p&gt;&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:13.713">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-V02" name="Set up the security policy" issueId="" issueLink="" platform="" cost="0" risk="42" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Set up the security policies to define the items for which Security Center collects data and makes recommendations. Apply different security policies to different sets of Azure resources. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;On the Security Center dashboard, select Security policy, and then select your subscription.&lt;/li&gt; 
  &lt;li&gt;Select Prevention policy.&lt;/li&gt; 
  &lt;li&gt;Turn on or turn off policy items that you want to apply to all Azure resources.&lt;/li&gt; 
  &lt;li&gt;When you're finished selecting your settings, select OK.&lt;/li&gt; 
  &lt;li&gt;On the Security policy blade, select Save.&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt; 
&lt;div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Set security policies in Azure Security Center" url="https://docs.microsoft.com/en-us/azure/security-center/security-center-policies"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;On the Security Center dashboard, select Security policy, and then select your
                            subscription.&lt;/li&gt;
                            &lt;li&gt;Select Prevention policy.&lt;/li&gt;
                            &lt;li&gt;Check that the required policy items are enabled.&amp;nbsp;&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:13.713">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-LOAD-BALANCER2" name="Upgrade Azure Public Load Balancers from Basic to Standard" issueId="" issueLink="" platform="" cost="1" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Upgrade Azure Public Load Balancers from Basic to Standard&lt;/p&gt;

	&lt;p&gt;Rationale:&lt;br /&gt;
Azure offers two types of Load Balancer offerings, Standard and Basic. &lt;/p&gt;

	&lt;p&gt;Standard Load Balancer is secure by default and part of your virtual network. The virtual network is a private and isolated network. This means Standard Load Balancers and Standard Public IP addresses are closed to inbound flows unless opened by Network Security Groups. NSGs are used to explicitly permit allowed traffic. If you do not have an NSG on a subnet or NIC of your virtual machine resource, traffic is not allowed to reach this resource.&lt;br /&gt;
Basic Load Balancer is open to the internet by default.&lt;/p&gt;

	&lt;p&gt;Using a Standard Load Balancer is recommended for your production workloads and typically the Basic Load Balancer is only used for testing since the basic type is open to connections from the internet by default, and doesn't require network security groups for operation.&lt;/p&gt;

	&lt;p&gt;Remediation:&lt;br /&gt;
There are two stages in an upgrade:&lt;/p&gt;

	&lt;p&gt;1. Change IP allocation method from Dynamic to Static.&lt;br /&gt;
2. Run the PowerShell script to complete the upgrade and traffic migration.&lt;/p&gt;

	&lt;p&gt;There are different scripts to support upgrade for Public (External) Load Balancers, Private (Internal) where no outbound connection is required and Private (Internal) where outbound connection is required.&lt;br /&gt;
For more information please see the Reference URLs. &lt;/p&gt;

	&lt;p&gt;Impact:&lt;br /&gt;
It usually take about 5-10 minutes for the script to finish and it could take longer depending on the complexity of your Load Balancer configuration. Therefore, keep the downtime in mind and plan for failover if necessary.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Upgrade Azure Internal Load Balancer - Outbound Connection Required" url="https://docs.microsoft.com/en-us/azure/load-balancer/upgrade-internalbasic-to-publicstandard"/>
            <reference name="Upgrade Azure Internal Load Balancer- No Outbound Connection Required" url="https://docs.microsoft.com/en-us/azure/load-balancer/upgrade-basicinternal-standard"/>
            <reference name="Upgrade Azure Public Load Balancer" url="https://docs.microsoft.com/en-us/azure/load-balancer/upgrade-basic-standard"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that you are using Standard Load Balancers for your production workloads.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:14.114">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-SSO" name="Use Azure Active Directory single sign-on (SSO)" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Use Azure Active Directory single sign-on (SSO)&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Single sign-on means a user does not have to sign in to every application they use. The user logs in once and that credential is used for other apps too.&lt;/p&gt; 
&lt;p&gt;Single sign-on provides many benefits over traditional sign-on methods.&lt;/p&gt; 
&lt;p&gt;- With single sign-on, users sign in once with one account to access domain-joined devices, company resources, software as a service (SaaS) applications, and web applications. After signing in, the user can launch applications from the Office 365 portal or My Apps. Administrators can centralize user account management, and automatically add or remove user access to applications based on group membership.&lt;/p&gt; 
&lt;p&gt;- Without single sign-on, users must remember application-specific passwords and sign in to each application. IT staff needs to create and update user accounts for each application such as Microsoft 365, Box, and Salesforce. Users need to remember their passwords, plus spend the time to sign in to each application.&lt;/p&gt; 
&lt;p&gt;Azure Active Directory (Azure AD) has a gallery that contains thousands of pre-integrated applications. Many of the applications your organization uses are probably already in the gallery.&lt;/p&gt; 
&lt;p&gt;After an application is added to your Azure AD tenant, you can:&lt;/p&gt; 
&lt;p&gt;- Configure properties for the app.&lt;br&gt; - Manage user access to the app with a Conditional Access policy.&lt;br&gt; - Configure single sign-on so users can sign in to the app with their Azure AD credentials.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Add an app to your Azure AD tenant&lt;/p&gt; 
&lt;p&gt;To add an application to your Azure AD tenant:&lt;/p&gt; 
&lt;p&gt;1. In the Azure portal, on the left navigation panel, select Azure Active Directory.&lt;/p&gt; 
&lt;p&gt;2. In the Azure Active Directory pane, select Enterprise applications. The All applications pane opens and displays a random sample of the applications in your Azure AD tenant.&lt;/p&gt; 
&lt;p&gt;3. In the Enterprise applications pane, select New application. Select New application to add a gallery app to your tenant&lt;/p&gt; 
&lt;p&gt;4. Switch to the new gallery preview experience: In the banner at the top of the Add an application page, select the link that says Click here to try out the new and improved app gallery.&lt;/p&gt; 
&lt;p&gt;5. The Browse Azure AD Gallery (Preview) pane opens and displays tiles for cloud platforms, on-premises applications, and featured applications. Applications listed in the Featured applications section have icons indicating whether they support federated single sign-on (SSO) and provisioning.&lt;/p&gt; 
&lt;p&gt;6. You can browse the gallery for the application you want to add, or search for the application by entering its name in the search box. Then select the application from the results.&lt;/p&gt; 
&lt;p&gt;7. The next step depends on the way the developer of the application implemented single sign-on (SSO). Single sign-on can be implemented by app developers in four ways. The four ways are SAML, OpenID Connect, Password, and Linked. When you add an app, you can choose to filter and see only apps using a particular SSO implementation as shown in the screenshot. For example, a popular standard to implement SSO is called Security Assertion Markup Language (SAML). Another standard that is popular is called OpenId Connect (OIDC). The way you configure SSO with these standards is different so take note of the type of SSO that is implemented by the app that you are adding.&lt;/p&gt; 
&lt;p&gt;- If the developer of the app used the OIDC standard for SSO then select Sign Up. A setup page appears. Next, go to the quickstart on setting up OIDC-based single sign-on. Screenshot shows adding an OIDC-based SSO app.&lt;/p&gt; 
&lt;p&gt;- If the developer of the app used the SAML standard for SSO then select Create. A getting started page appears with the options for configuring the application for your organization. In the form, you can edit the name of the application to match the needs of your organization. Next, go to the quickstart on setting up SAML-based single sign-on. Screenshot shows adding an SAML-based SSO app.&lt;/p&gt; 
&lt;p&gt;Important: There are some key differences between SAML-based and OIDC-based SSO implementations. With SAML-based apps you can add multiple instances of the same app. For example, GitHub1, GitHub2, etc.. For OIDC-based apps you can only add one instance of an app. If you have already added an OIDC-based app and try to add the same app again and provide consent twice, it will not be added again in the tenant.&lt;/p&gt; 
&lt;p&gt;If the application you are looking for is not in the gallery then you can select the link Create your own application and then under What are you looking to do with your application? choose Integrate any other application you do not find in the gallery. Microsoft has already worked with many application developers to pre-configure them to work with Azure AD. The pre-configured apps show up in the gallery. But if the app you want to add is not listed then you can create a new, generic, app and then configure it yourself or with the guidance of the developer that created it.&lt;/p&gt; 
&lt;p&gt;You have finished adding an application. &lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Quickstart: Add an application to your Azure Active Directory (Azure AD) tenant" url="https://docs.microsoft.com/en-us/azure/active-directory/manage-apps/add-application-portal"/>
            <reference name="What is single sign-on (SSO)?" url="https://docs.microsoft.com/en-us/azure/active-directory/manage-apps/what-is-single-sign-on"/>
          </references>
          <standards>
            <standard ref="IM-5" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="PA-6" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that, wherever possible, you are using Azure Active Directory SSO instead of configuring individual stand-alone credentials per-service.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:13.714">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-RESOURCE-MANAGER" name="Use Azure Resource Manager" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Use Azure Resource Manager&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; The Resource Manager and classic deployment models represent two different ways of deploying and managing your Azure solutions. You work with them through two different API sets, and the deployed resources can contain important differences. The two models are not compatible with each other.&lt;br&gt; With Resource Manager, you can:&lt;br&gt; - Manage your infrastructure through declarative templates rather than scripts.&lt;br&gt; - Deploy, manage, and monitor all the resources for your solution as a group, rather than handling these resources individually.&lt;br&gt; - Redeploy your solution throughout the development life-cycle and have confidence your resources are deployed in a consistent state.&lt;br&gt; - Define the dependencies between resources so they are deployed in the correct order.&lt;br&gt; - Apply access control to all services because Azure role-based access control (Azure RBAC) is natively integrated into the management platform.&lt;br&gt; - Apply tags to resources to logically organize all the resources in your subscription.&lt;br&gt; - Clarify your organization's billing by viewing costs for a group of resources sharing the same tag.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; To simplify the deployment and management of resources, Microsoft recommends that you use Resource Manager for all new resources. If possible, Microsoft recommends that you redeploy existing resources through Resource Manager.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; Resource Manager and classic deployment models are not compatible with each other.&lt;br&gt; There are three scenarios to be aware of:&lt;br&gt; 1. Cloud Services does not support Resource Manager deployment model.&lt;br&gt; 2. Virtual machines, storage accounts, and virtual networks support both Resource Manager and classic deployment models.&lt;br&gt; 3. All other Azure services support Resource Manager.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Azure Resource Manager vs. classic deployment: Understand deployment models and the state of your resources" url="https://docs.microsoft.com/en-us/azure/azure-resource-manager/management/deployment-models"/>
          </references>
          <standards>
            <standard ref="AM-3" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that you are using Resource Manager for all new resources.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:13.714">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-ADAPTIVE-NET-HARDENING" name="Use Security Center's Adaptive Network Hardening" issueId="" issueLink="" platform="" cost="1" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Use Defender for Cloud's Adaptive Network Hardening&lt;/p&gt;&lt;p&gt;Rationale:&lt;br&gt;Applying network security groups (NSG) to filter traffic to and from resources, improves your network security posture. However, there can still be some cases in which the actual traffic flowing through the NSG is a subset of the NSG rules defined. In these cases, further improving the security posture can be achieved by hardening the NSG rules, based on the actual traffic patterns.&lt;/p&gt;&lt;p&gt;Adaptive network hardening provides recommendations to further harden the NSG rules. It uses a machine learning algorithm that factors in actual traffic, known trusted configuration, threat intelligence, and other indicators of compromise, and then provides recommendations to allow traffic only from specific IP/port tuples.&lt;/p&gt;&lt;p&gt;Note: Adaptive network hardening recommendations are only supported on the following specific ports (for both UDP and TCP): 13, 17, 19, 22, 23, 53, 69, 81, 111, 119, 123, 135, 137, 138, 139, 161, 162, 389, 445, 512, 514, 593, 636, 873, 1433, 1434, 1900, 2049, 2301, 2323, 2381, 3268, 3306, 3389, 4333, 5353, 5432, 5555, 5800, 5900, 5900, 5985, 5986, 6379, 6379, 7000, 7001, 7199, 8081, 8089, 8545, 9042, 9160, 9300, 11211, 16379, 26379, 27017, 37215&lt;/p&gt;&lt;p&gt;Remediation:&lt;br&gt;View and manage hardening alerts and rules&lt;/p&gt;&lt;p&gt;1. From Defender for Cloud's menu, open the Workload protections dashboard and select the adaptive network hardening tile, or the insights panel item related to adaptive network hardening.&lt;/p&gt;&lt;p&gt;Tip: The insights panel shows the percentage of your VMs currently defended with adaptive network hardening.&lt;/p&gt;&lt;p&gt;The details page for the Adaptive Network Hardening recommendations should be applied on internet facing virtual machines recommendation opens with your network VMs grouped into three tabs:&lt;/p&gt;&lt;p&gt;a. Unhealthy resources: VMs that currently have recommendations and alerts that were triggered by running the adaptive network hardening algorithm.&lt;/p&gt;&lt;p&gt;b. Healthy resources: VMs without alerts and recommendations.&lt;/p&gt;&lt;p&gt;c. Unscanned resources: VMs that the adaptive network hardening algorithm cannot be run on because of one of the following reasons:&lt;br&gt;i. VMs are Classic VMs: Only Azure Resource Manager VMs are supported.&lt;br&gt;ii. Not enough data is available: In order to generate accurate traffic hardening recommendations, Security Center requires at least 30 days of traffic data.&lt;br&gt;iii. VM is not protected by Azure Defender: Only VMs protected with Azure Defender for servers are eligible for this feature.&lt;/p&gt;&lt;p&gt;3. From the Unhealthy resources tab, select a VM to view its alerts and the recommended hardening rules to apply.&lt;/p&gt;&lt;p&gt;- The Rules tab lists the rules that adaptive network hardening recommends you add&lt;br&gt;- The Alerts tab lists the alerts that were generated due to traffic, flowing to the resource, which is not within the IP range allowed in the recommended rules.&lt;/p&gt;&lt;p&gt;4. Optionally, edit the rules:&lt;/p&gt;&lt;p&gt;- Modify a rule&lt;br&gt;- Delete a rule&lt;br&gt;- Add a rule&lt;/p&gt;&lt;p&gt;5. Select the rules that you want to apply on the NSG, and click Enforce.&lt;/p&gt;&lt;p&gt;Tip: If the allowed source IP ranges shows as 'None', it means that recommended rule is a deny rule, otherwise, it is an allow rule.&lt;/p&gt;&lt;p&gt;Note: The enforced rules are added to the NSG protecting the VM. (A VM could be protected by an NSG that is associated to its NIC, or the subnet in which the VM resides, or both)&lt;/p&gt;&lt;p&gt;Impact:&lt;br&gt;None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Improve your network security posture with adaptive network hardening" url="https://docs.microsoft.com/en-us/azure/security-center/security-center-adaptive-network-hardening"/>
          </references>
          <standards>
            <standard ref="NS-7" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that Security Center's Adaptive Network Hardening recommendations are enforced  to your NSG configurations.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:14.114">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-TAGS" name="Use service tags in place of specific IP addresses" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Use service tags in place of specific IP addresses&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; A service tag represents a group of IP address prefixes from a given Azure service. Microsoft manages the address prefixes encompassed by the service tag and automatically updates the service tag as addresses change, minimizing the complexity of frequent updates to network security rules.&lt;/p&gt; 
&lt;p&gt;You can use service tags to define network access controls on network security groups or Azure Firewall. Use service tags in place of specific IP addresses when you create security rules. By specifying the service tag name, such as ApiManagement, in the appropriate source or destination field of a rule, you can allow or deny the traffic for the corresponding service.&lt;/p&gt; 
&lt;p&gt;You can use service tags to achieve network isolation and protect your Azure resources from the general Internet while accessing Azure services that have public endpoints. Create inbound/outbound network security group rules to deny traffic to/from Internet and allow traffic to/from AzureCloud or other available service tags of specific Azure services.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; By default, service tags reflect the ranges for the entire cloud. Some service tags also allow more granular control by restricting the corresponding IP ranges to a specified region. For example, the service tag Storage represents Azure Storage for the entire cloud, but Storage.WestUS narrows the range to only the storage IP address ranges from the WestUS region.&lt;/p&gt; 
&lt;p&gt;By specifying the service tag name in the appropriate source or destination field of a rule, you can allow or deny the traffic for the corresponding service.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Virtual network service tags" url="https://docs.microsoft.com/en-us/azure/virtual-network/service-tags-overview"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that your network security rules are simplified by using VNet Service tags.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:14.114">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="AUTHENTICATION" name="Authentication" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="AZURE-LOST-ACCESS-ROOT" name="Attackers gain unauthorized access to the root account due to the lack of configuration of the account" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;div&gt;Attackers could gain unauthorized access to the administrator account due to a lack of configuration of the account and its security mechanisms, making it possible to modify credentials and add/remove user accounts.
                                &lt;/div&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="AZ-W04">
                  <countermeasures>
                    <countermeasure ref="AZ-A04" mitigation="25"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AZURE-MON02">
                  <countermeasures>
                    <countermeasure ref="AZ-A03" mitigation="25"/>
                    <countermeasure ref="AZURE-SUBSCRIPTIONS" mitigation="25"/>
                  </countermeasures>
                </weakness>
                <weakness ref="LOST-SECURITY-ALERTS">
                  <countermeasures>
                    <countermeasure ref="AZ-A01" mitigation="25"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-A01" mitigation="25"/>
                <countermeasure ref="AZ-A03" mitigation="25"/>
                <countermeasure ref="AZ-A04" mitigation="25"/>
                <countermeasure ref="AZURE-SUBSCRIPTIONS" mitigation="25"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="AZURE-LOST-ACCESS-USER" name="Attackers gain unauthorized access to the user account due to the lack of configuration of the account" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;Attackers could gain unauthorized access to the user account due to the lack of configuration of the account, for example, the security question to reset the password is configured incorrectly.&lt;/p&gt;</desc>
              <riskRating confidentiality="50" integrity="50" availability="50" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-IDENTITY-03">
                  <countermeasures>
                    <countermeasure ref="AZ-A07" mitigation="50"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AZURE-MON03">
                  <countermeasures>
                    <countermeasure ref="AZURE-USER-MFA" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-A07" mitigation="50"/>
                <countermeasure ref="AZURE-USER-MFA" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="AUTHORIZATION" name="Authorization" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="LOSS-CONTROL_ENV" name="Attackers gain unauthorized access to the control of the environment" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;Attackers could potentially gain unauthorized access to the control of the environment, due to user accounts - or role groups - not being well defined and configured. As a consequence attackers may be able to make changes without root approval.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="75" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-ACCESS-01">
                  <countermeasures>
                    <countermeasure ref="AZ-A09" mitigation="20"/>
                    <countermeasure ref="AZ-A10" mitigation="20"/>
                    <countermeasure ref="AZ-A11" mitigation="20"/>
                    <countermeasure ref="AZURE-LOAD-BALANCER1" mitigation="100"/>
                    <countermeasure ref="AZURE-RESOURCE-MANAGER" mitigation="20"/>
                    <countermeasure ref="AZURE-SSO" mitigation="20"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-A09" mitigation="20"/>
                <countermeasure ref="AZ-A10" mitigation="20"/>
                <countermeasure ref="AZ-A11" mitigation="20"/>
                <countermeasure ref="AZURE-LOAD-BALANCER1" mitigation="100"/>
                <countermeasure ref="AZURE-RESOURCE-MANAGER" mitigation="20"/>
                <countermeasure ref="AZURE-SSO" mitigation="20"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="GENERAL" name="General" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="UNCONFIGURED-SECURITY" name="Attackers gain access to the system by exploiting weak security configurations" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>Weak security configurations like using sharing passwords in plain text, using weak passwords, using obsolete encryption algorithms, etc. can lead attackers to gain access to the system.</desc>
              <riskRating confidentiality="75" integrity="50" availability="25" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-NET-04">
                  <countermeasures>
                    <countermeasure ref="AZURE-RESOURCE1" mitigation="34"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AZURE-VM01">
                  <countermeasures>
                    <countermeasure ref="AZ-V02" mitigation="33"/>
                    <countermeasure ref="AZURE-REPOS-GIT" mitigation="100"/>
                    <countermeasure ref="AZURE-SECURE-CONFIG" mitigation="33"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-V02" mitigation="33"/>
                <countermeasure ref="AZURE-REPOS-GIT" mitigation="100"/>
                <countermeasure ref="AZURE-RESOURCE1" mitigation="34"/>
                <countermeasure ref="AZURE-SECURE-CONFIG" mitigation="33"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="LOGGING AND MONITORING" name="Logging and Monitoring" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="OWASP A10:2017" name="Exploitation of insufficient logging and monitoring" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>	&lt;p&gt;Exploitation of insufficient logging and monitoring is the bedrock of nearly every major incident.&lt;br /&gt;
 Attackers rely on the lack of monitoring and timely response to achieve their goals without being detected.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="AZ-ENABLE-ALERTS" mitigation="25"/>
                    <countermeasure ref="AZ-L01" mitigation="33"/>
                    <countermeasure ref="AZ-L05" mitigation="33"/>
                    <countermeasure ref="AZ-M01" mitigation="25"/>
                    <countermeasure ref="AZURE-MONITOR6" mitigation="25"/>
                    <countermeasure ref="AZURE-NSG-LOGS" mitigation="25"/>
                    <countermeasure ref="AZURE-SENTINEL" mitigation="34"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-ENABLE-ALERTS" mitigation="25"/>
                <countermeasure ref="AZ-L01" mitigation="33"/>
                <countermeasure ref="AZ-L05" mitigation="33"/>
                <countermeasure ref="AZ-M01" mitigation="25"/>
                <countermeasure ref="AZURE-MONITOR6" mitigation="25"/>
                <countermeasure ref="AZURE-NSG-LOGS" mitigation="25"/>
                <countermeasure ref="AZURE-SENTINEL" mitigation="34"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="NETWORKING" name="Networking" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="AZURE-UNAUTHORISED-CONNECTION" name="Attackers perform unauthorized network access" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;Attackers could perform unauthorized network access to the resources through misconfigured ports or security network configurations.&lt;/p&gt;</desc>
              <riskRating confidentiality="25" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-NET-01">
                  <countermeasures>
                    <countermeasure ref="AZURE-ADAPTIVE-NET-HARDENING" mitigation="11"/>
                    <countermeasure ref="AZURE-DDOS-PROTECTION" mitigation="11"/>
                    <countermeasure ref="AZURE-FIREWALL3" mitigation="11"/>
                    <countermeasure ref="AZURE-IDS-IPS" mitigation="11"/>
                    <countermeasure ref="AZURE-JIT-VM-ACCESS" mitigation="11"/>
                    <countermeasure ref="AZURE-LOAD-BALANCER2" mitigation="11"/>
                    <countermeasure ref="AZURE-LOAD-BALANCER3" mitigation="11"/>
                    <countermeasure ref="C-AZURE-COMMON1" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AZURE-NON-IDENTIFY">
                  <countermeasures>
                    <countermeasure ref="AZURE-TAGS" mitigation="11"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AZURE-VNET01">
                  <countermeasures>
                    <countermeasure ref="AZ-N09" mitigation="12"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-N09" mitigation="12"/>
                <countermeasure ref="AZURE-ADAPTIVE-NET-HARDENING" mitigation="11"/>
                <countermeasure ref="AZURE-DDOS-PROTECTION" mitigation="11"/>
                <countermeasure ref="AZURE-FIREWALL3" mitigation="11"/>
                <countermeasure ref="AZURE-IDS-IPS" mitigation="11"/>
                <countermeasure ref="AZURE-JIT-VM-ACCESS" mitigation="11"/>
                <countermeasure ref="AZURE-LOAD-BALANCER2" mitigation="11"/>
                <countermeasure ref="AZURE-LOAD-BALANCER3" mitigation="11"/>
                <countermeasure ref="AZURE-TAGS" mitigation="11"/>
                <countermeasure ref="C-AZURE-COMMON1" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="8631a78d-122a-4664-81c2-9a51b0ee504e" diagramComponentId="2f2ebe30-bf3e-44bb-966d-83f71a74a7ae" ref="cb2c4b71-ed70-4816-b244-6a240b4795d2" name="Azure Bastion" desc="" library="Microsoft-Azure" parentComponentRef="2cb38d96-1cee-47da-8153-248f6d467342" componentDefinitionRef="CD-MICROSOFT-AZURE-BASTION">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses>
        <weakness ref="AZURE-VNET01" name="Networks for Azure resources are not properly segmented. Without proper segmentation, when attackers gain access to one resource, any other resources in the same VNet are compromised" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        Resources in the same VNet are compromised because when one of them is attacked and the
                        attackers gain access, they also gain access to all resources.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            Identify the resources and the Microsoft Azure instances.
                            &lt;/div&gt;
                            &lt;div&gt;
                            Check that the resources are in the correct VNet.
                            &lt;/div&gt;
                            &lt;div&gt;
                            Check that the Microsoft Azure instances&amp;nbsp;are into different VNets.
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:44:48.792">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-NET-01" name="Unauthorized connection attempts on open ports" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        Receiving unauthorized connections to open ports makes systems vulnerable to attacks. To
                        avoid this, access to the network must be as restricted as possible, so that only the necessary
                        ports are open and the minimum inbound traffic is accepted.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Check that each Azure resources have got their Network Security Groups.&lt;/li&gt;
                            &lt;li&gt;Check that a set of these groups achieve with the principle of the least
                            privilege.&lt;/li&gt;
                            &lt;li&gt;Check that the inbound/outbound security rules are enabled and correctly
                            configured.&lt;/li&gt;
                            &lt;li&gt;In &amp;quot;Inbound security rules&amp;quot;, check that all the traffic from
                            0.0.0.0/0&amp;nbsp;is blocked.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:44:48.792">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-BAS-01" name="Unauthorized connection via native SSH or RDP client" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;Azure Bastion supports RDP and SSH. However, there is a feature that allows users to connect via their native SSH or RDP client instead of the web interface.&lt;/p&gt;&lt;p&gt;By enabling Azure Bastion Native Client support end users are able to communicate directly with the internal VM. By passing all data through a websockets tunnel directly to the internal Azure VMs we lose the security properties of the hardened external host, exposing potentially insecure resources directly to untrusted input from the remote host.&lt;/p&gt;&lt;p&gt;The ability to choose the port on the internal VM have the following implications:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Internal VMs can be port-scanned through Azure Bastion.&lt;/li&gt;&lt;li&gt;Open ports with vulnerable services running on them can be accessed and exploited by anyone that can request a Bastion session for a specific VM.&lt;/li&gt;&lt;/ul&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;An attacker must have the following requirements in order to establish a websockets tunnel:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Azure RBAC reader role assigned to the VM.&lt;/li&gt;&lt;li&gt;Azure RBAC reader role assigned to the NIC associated with the private IP address.&lt;/li&gt;&lt;li&gt;Azure RBAC reader role assigned to Azure Bastion service.&lt;/li&gt;&lt;li&gt;The network must contain routes that allow the Azure Bastion subnet to communicate with the VM, either on the same VNet or across a VNet peering.&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:44:48.791">
              <output/>
            </source>
            <references>
              <reference name="Abusing TCP tunneling in Azure Bastion" url="https://codyburkard.com/blog/bastionabuse/"/>
            </references>
            <customFields/>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="AZ-N10" name="Disable Native Client support for Bastion services" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Use Azure Policy to disable native client support for all Bastion services.&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation:&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;If for some reason native client support cannot be disabled, then:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Ensure that the subnet Azure Bastion is deployed to has an NSG applied to it, which limits outbound connectivity to ports 3389 and 22.&lt;/li&gt;&lt;li&gt;Limit the number of users that have RBAC reader access scoped to a high level resource in the Azure resource heirarchy, such as the root management group.&lt;/li&gt;&lt;li&gt;Include an NSG rule on the Bastion subnet that limits connectivity from Bastion to specific IP addresses or a small set of subnets.&lt;/li&gt;&lt;/ol&gt;</desc>
          <implementations/>
          <references>
            <reference name="Azure Bastion: Connect to a VM using a native client" url="https://learn.microsoft.com/en-us/azure/bastion/connect-native-client-windows"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;An attacker must have the following requirements in order to establish a websockets tunnel:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Azure RBAC reader role assigned to the VM.&lt;/li&gt;&lt;li&gt;Azure RBAC reader role assigned to the NIC associated with the private IP address.&lt;/li&gt;&lt;li&gt;Azure RBAC reader role assigned to Azure Bastion service.&lt;/li&gt;&lt;li&gt;The network must contain routes that allow the Azure Bastion subnet to communicate with the VM, either on the same VNet or across a VNet peering.&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:44:48.744">
              <output/>
            </source>
            <references>
              <reference name="Abusing TCP tunneling in Azure Bastion" url="https://codyburkard.com/blog/bastionabuse/"/>
            </references>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-N09" name="Isolate Azure instances into different VNets" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Specify a VNet for the Azure instance as a launch parameter. Applications that run on the Cloud instance can use the VNet security configuration when they access Azure resources.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  You can configure an Azure cloud service from Solution Explorer in Visual Studio. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Create a virtual network with multiple subnets" url="https://docs.microsoft.com/en-us/azure/virtual-network/virtual-networks-create-vnet-arm-pportal"/>
          </references>
          <standards>
            <standard ref="GS-4" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that the Azure instances are into different VNets.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:44:48.743">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-N01" name="Set Network Security Groups to be as restrictive as possible" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Use Network Security Groups (NSG) to filter the ingress/egress network traffic to Azure resources. Set the limit all the traffic (ingress/egress) on the NSG in order to force the use of least privilege into the NSG.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Identify Azure resources for each NSG.&lt;/li&gt; 
  &lt;li&gt;Create a set of least privilege NSG for those resources.&lt;/li&gt; 
  &lt;li&gt;Place the resources in those security groups.&lt;/li&gt; 
  &lt;li&gt;Change the inbound/outbound security rules to fulfill the least privilege.&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - How to open ports to a virtual machine with the Azure portal" url="https://docs.microsoft.com/en-us/azure/virtual-machines/windows/nsg-quickstart-portal"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Check that each Azure resources has got their Network Security Groups.&lt;/li&gt;
                            &lt;li&gt;Check that a set of these groups achieve with the principle of the least
                            privilege.&lt;/li&gt;
                            &lt;li&gt;Check that the inbound/outbound security rules are enabled and correctly
                            configured.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:44:48.744">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="NETWORKING" name="Networking" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="AZURE-UNAUTHORISED-CONNECTION" name="Attackers perform unauthorized network access" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;Attackers could perform unauthorized network access to the resources through misconfigured ports or security network configurations.&lt;/p&gt;</desc>
              <riskRating confidentiality="25" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-BAS-01">
                  <countermeasures>
                    <countermeasure ref="AZ-N10" mitigation="34"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AZURE-NET-01">
                  <countermeasures>
                    <countermeasure ref="AZ-N01" mitigation="50"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AZURE-VNET01">
                  <countermeasures>
                    <countermeasure ref="AZ-N09" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-N01" mitigation="50"/>
                <countermeasure ref="AZ-N09" mitigation="50"/>
                <countermeasure ref="AZ-N10" mitigation="34"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="e0a10c8c-283a-484e-91c6-ba5931aa9a01" diagramComponentId="e2250cad-9956-4bf7-bad5-771c73e9d5e9" ref="2cb38d96-1cee-47da-8153-248f6d467342" name="Management Subnet" desc="" library="CS-Default" parentComponentRef="4560c874-df9e-41bd-8263-17574a8d5767" componentDefinitionRef="empty-component">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses/>
      <countermeasures/>
      <usecases/>
    </component>
    <component uuid="d6cb7934-eb38-48a3-9e82-43e22f60ce2b" diagramComponentId="9b9a394a-ef6b-44a0-9320-4cca0d3c88dd" ref="97eb09a1-b3ec-4423-be4c-f8938eec7e9d" name="Azure Virtual Machines" desc="" library="Microsoft-Azure" parentComponentRef="37f32cf3-3a52-4ec6-be95-fdd624d45001" componentDefinitionRef="azure-virtual-machines">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses>
        <weakness ref="AZURE-LOGS03" name="Audit logs can be deleted" state="0" impact="100" issueId="" issueLink="">
          <desc>There is no external backups of log records. If logs are deleted, there is no way to recover
                        them.ed.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Activity Logs&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Push the button &amp;quot;Export&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;All Regions&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;Export to a storage account&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that all fields are correctly filled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:12.223">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-NET-05" name="Communication is not allowed from/to Virtual Machines" state="0" impact="100" issueId="" issueLink="">
          <desc>IP allocation of virtual machines, DNS resolution, and node monitorization is performed by a
                        Microsoft host node. It is necessary to allow the communication with this virtual IP to be able
                        to make the communication from/to the virtual machine of Azure.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Network Security Groups.&lt;/li&gt;
                            &lt;li&gt;Choose the NSG to edit (or create a new one).&lt;/li&gt;
                            &lt;li&gt;In &amp;quot;Inbound security rules&amp;quot;, check that the IP 168.63.129.16
                            inbound traffic is allowed.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:12.222">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CWE-16" name="Configuration" state="0" impact="100" issueId="" issueLink="">
          <desc>Weaknesses in this category are typically introduced during the
                        configuration of the software.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:12.222">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CWE-311" name="Missing Encryption of Sensitive Data" state="0" impact="100" issueId="" issueLink="">
          <desc>The software does not encrypt sensitive or critical information
                        before storage or transmission.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:12.222">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-VM01" name="Security policies exposing system resources" state="0" impact="100" issueId="" issueLink="">
          <desc>The security policies are not adequately configured.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:12.222">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-NET-04" name="Unauthorized connection attempts on Azure resources" state="0" impact="100" issueId="" issueLink="">
          <desc>Receiving unauthorized connections to Azure resources is most likely to be receiving an
                        attack. To avoid this, access to the network must be as restricted as possible using Network
                        Access Control Lists for blacklisting.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;Network security groups&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Select the Network Security Group (NSG) for your virtual machine and click on
                            &amp;quot;Inbound security rules&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that there is a rule to deny the inbound access from a blacklisted IP
                            address or range to a designated port or port range.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:12.222">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-NET-01" name="Unauthorized connection attempts on open ports" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        Receiving unauthorized connections to open ports makes systems vulnerable to attacks. To
                        avoid this, access to the network must be as restricted as possible, so that only the necessary
                        ports are open and the minimum inbound traffic is accepted.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Check that each Azure resources have got their Network Security Groups.&lt;/li&gt;
                            &lt;li&gt;Check that a set of these groups achieve with the principle of the least
                            privilege.&lt;/li&gt;
                            &lt;li&gt;Check that the inbound/outbound security rules are enabled and correctly
                            configured.&lt;/li&gt;
                            &lt;li&gt;In &amp;quot;Inbound security rules&amp;quot;, check that all the traffic from
                            0.0.0.0/0&amp;nbsp;is blocked.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:12.222">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-NET-02" name="Unauthorized connection attempts on port 22" state="0" impact="100" issueId="" issueLink="">
          <desc>Receiving unauthorized connections to port 22 is most likely to be receiving an SSH attack. To
                        avoid this, access to the network must be as restricted as possible, so that only the necessary
                        ports are open and the minimum inbound traffic is accepted.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Login&amp;nbsp;into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Network Security Groups.&lt;/li&gt;
                            &lt;li&gt;Choose the NSG to view one of them.&lt;/li&gt;
                            &lt;li&gt;In &amp;quot;Inbound security rules&amp;quot;, check that the traffic through the
                            port 22 is blocked.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:12.222">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-NET-03" name="Unauthorized connection attempts on port 3389" state="0" impact="100" issueId="" issueLink="">
          <desc>Receiving unauthorized connections to port 3389 is most likely to be receiving an RDP attack.
                        To avoid this, access to the network must be as restricted as possible, so that only the
                        necessary ports are open and the minimum inbound traffic is accepted.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Login&amp;nbsp;into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Network Security Groups.&lt;/li&gt;
                            &lt;li&gt;Choose the NSG to view one of them.&lt;/li&gt;
                            &lt;li&gt;In &amp;quot;Inbound security rules&amp;quot;, check that the traffic through the
                            port 3389 is blocked.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:12.222">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-VM02" name="Undetected changes in Virtual Machine configurations" state="0" impact="100" issueId="" issueLink="">
          <desc>The changes in virtual machines configurations are not detected because the monitorization and
                        alerts of the security configuration are not configured.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;In the Azure portal, click Resource Groups, select myResourceGroup, and then
                            select myVM in the resource list.&lt;/li&gt;
                            &lt;li&gt;Click Alert rules on the VM blade.&lt;/li&gt;
                            &lt;li&gt;Check there are some metric alerts and they are correctly configured and enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:12.222">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-VM-NOT_LICENSE" name="Unlicensed Virtual Machines" state="0" impact="100" issueId="" issueLink="">
          <desc>Azure is a system formed by Microsoft machines, therefore, it is necessary that Microsoft
                        perform periodic verification of the licenses of the products.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Network Security Groups.&lt;/li&gt;
                            &lt;li&gt;Choose the NSG to view one of them.&lt;/li&gt;
                            &lt;li&gt;In &amp;quot;Inbound security rules&amp;quot;, check that the traffic outbound
                            through the port 1688 is allowed.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:12.221">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="AZ-N06" name="Allow Key Management Service request" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Allow Key Management Service host server to handle the periodic request to ensure Microsoft
                        licensing. Set the limit outbound access to port 1688 (Service Request) in the Network Security
                        Groups to avoid undue exposure to risk.&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                        &lt;li&gt;Select Network Security Groups.&lt;/li&gt;
                        &lt;li&gt;Choose the NSG to edit (or create a new one).&lt;/li&gt;
                        &lt;li&gt;In &amp;quot;Outbound security rules&amp;quot;: Allow port 1688 outbound traffic.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - How to open ports to a virtual machine with the Azure portal" url="https://docs.microsoft.com/en-us/azure/virtual-machines/windows/nsg-quickstart-portal"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Network Security Groups.&lt;/li&gt;
                            &lt;li&gt;Choose the NSG to view one of them.&lt;/li&gt;
                            &lt;li&gt;In &amp;quot;Inbound security rules&amp;quot;, check that the traffic outbound
                            through the port 1688 is allowed.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:12.136">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-N05" name="Allow Virtual IP of the Microsoft host node" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Allow inbound accesses in Network Security Groups from the IP address 168.63.129.16 to
                        communicate with the Azure Service. This IP belongs to Microsoft and acts as DHCP server, DNS
                        server and monitoring the host node hosting the Azure Virtual Machine.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                        &lt;li&gt;Select Network Security Groups.&lt;/li&gt;
                        &lt;li&gt;Choose the NSG to edit (or create a new one).&lt;/li&gt;
                        &lt;li&gt;In &amp;quot;Inbound security rules&amp;quot;: Allow IP 168.63.129.16 inbound traffic.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - How to open ports to a virtual machine with the Azure portal" url="https://docs.microsoft.com/en-us/azure/virtual-machines/windows/nsg-quickstart-portal"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Network Security Groups.&lt;/li&gt;
                            &lt;li&gt;Choose the NSG to edit (or create a new one).&lt;/li&gt;
                            &lt;li&gt;In &amp;quot;Inbound security rules&amp;quot;, check that the IP 168.63.129.16
                            inbound traffic is allowed.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:12.136">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-V07" name="Apply common security best practices in virtual machine's configuration" issueId="" issueLink="" platform="" cost="0" risk="42" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Only install organization-approved extensions on VMs.&lt;/p&gt;&lt;p&gt;Rationale:&lt;/p&gt;&lt;p&gt;Azure virtual machine extensions are small applications that provide post-deployment configuration and automation tasks on Azure virtual machines. These extensions run with administrative privileges and could potentially access anything on a virtual machine. The Azure Portal and community provide several such extensions. Each organization should carefully evaluate these extensions and ensure that only those that are approved for use are actually implemented.&lt;/p&gt;&lt;p&gt;Windows and Linux virtual machines should be kept updated to:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Address a specific bug or flaw&lt;/li&gt;&lt;li&gt;Improve an OS or application's general stability&lt;/li&gt;&lt;li&gt;Fix a security vulnerability&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;The Azure Security Center retrieves a list of available security and critical updates from Windows Update or Windows Server Update Services (WSUS), depending on which service is configured on a Windows VM. The security center also checks for the latest updates in Linux systems. If a VM is missing a system update, the security center will recommend system updates be applied.&lt;/p&gt;&lt;p&gt;Installing endpoint protection systems (like Antimalware for Azure) provides for real-time protection capability that helps identify and remove viruses, spyware, and other malicious software, with configurable alerts when known malicious or unwanted software attempts to install itself or run on Azure systems.&lt;/p&gt;&lt;p&gt;Remediation:&lt;/p&gt;&lt;p&gt;&lt;strong&gt;From Azure Console&lt;/strong&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Go to Virtual machines&lt;/li&gt;&lt;li&gt;For each virtual machine, go to Settings&lt;/li&gt;&lt;li&gt;Click on Extensions&lt;/li&gt;&lt;li&gt;If there are unapproved extensions, uninstall them.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;Follow Microsoft Azure documentation to apply security patches and install endpoint protection from the security center. Alternatively, you can employ your own patch assessment and management tool or endpoint protection tool to periodically assess, report and install the required security patches for your OS.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;From Azure Command Line Interface 2.0&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;From the audit command identify the unapproved extensions, and use the below CLI command to remove an unapproved extension attached to VM. az vm extension delete --resource-group &amp;lt;resourceGroupName&amp;gt; --vm-name &amp;lt;vmName&amp;gt; --name &amp;lt;extensionName&amp;gt;&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="14" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="16" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="2.5" supportedStandardRef="cis-azure-standard"/>
            <standard ref="2.5" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="7.4" supportedStandardRef="cis-azure-standard"/>
            <standard ref="7.4" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="7.5" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="8" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="9" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API7:2019-Security Misconfiguration" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="ES-1" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="ES-2" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="ES-3" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="PV-7" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;&lt;strong&gt;From Azure Console&lt;/strong&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Go to Virtual machines&lt;ol&gt;&lt;li&gt;For each virtual machine, go to Settings&lt;/li&gt;&lt;li&gt;Click on Extensions&lt;/li&gt;&lt;li&gt;Ensure that the listed extensions are approved for use.&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;Go to Security Center - Recommendations&lt;ol&gt;&lt;li&gt;Ensure that there are no recommendations for Apply system updates&lt;/li&gt;&lt;li&gt;Ensure that there are no recommendations for Endpoint Protection not installed on Azure VMs&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;strong&gt;From Azure Command Line Interface 2.0&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Use the below command to list the extensions attached to a VM, and ensure the listed extensions are approved for use.&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;az vm extension list --vm-name &amp;lt;vmName&amp;gt; --resource-group &amp;lt;sourceGroupName&amp;gt; --query [*].name&lt;/p&gt;&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:12.137">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-V03" name="Create alerts for Virtual Machines" issueId="" issueLink="" platform="" cost="0" risk="40" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Create alerts based on specific performance metrics:
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Notify to the correspondent personnel when the average CPU usage exceeds a certain
                        threshold.&lt;/li&gt;
                        &lt;li&gt;Notify to the correspondent personnel when the available free disk space drops below a
                        certain amount,&lt;/li&gt;
                        &lt;li&gt;Notify to the correspondent personnel when the security configuration of the Virtual
                        Machines changes.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;In the Azure portal, click Resource Groups, select myResourceGroup, and then select
                        myVM in the resource list.&lt;/li&gt;
                        &lt;li&gt;Click Alert rules on the VM blade, then click Add metric alert across the top of the
                        alerts blade.&lt;/li&gt;
                        &lt;li&gt;Provide a Name for your alert, such as myAlertRule&lt;/li&gt;
                        &lt;li&gt;To trigger an alert when CPU percentage exceeds 1.0 for five minutes, leave all the
                        other defaults selected.&lt;/li&gt;
                        &lt;li&gt;Optionally, check the box for Email owners, contributors, and readers to send an email
                        notification. The default action is to present a notification in the portal.&lt;/li&gt;
                        &lt;li&gt;Click the OK button.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Microsoft Azure Virtual Machine Monitoring with Azure Diagnostics Extension" url="https://azure.microsoft.com/en-us/blog/windows-azure-virtual-machine-monitoring-with-wad-extension/"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;In the Azure portal, click Resource Groups, select myResourceGroup, and then
                            select myVM in the resource list.&lt;/li&gt;
                            &lt;li&gt;Click Alert rules on the VM blade.&lt;/li&gt;
                            &lt;li&gt;Check there are some metric alerts and they are correctly configured and enabled.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:12.137">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-V04" name="Disable Internet exposed UDP ports on network security groups" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Disable Internet exposed UDP ports on network security groups.&lt;/p&gt;&lt;p&gt;Rationale:&lt;/p&gt;&lt;p&gt;The potential security problem with broadly exposing UDP services over the Internet is that attackers can use DDoS amplification techniques to reflect spoofed UDP traffic from Azure Virtual Machines. The most common types of these attacks use exposed DNS, NTP, SSDP, SNMP, CLDAP and other UDP-based services as amplification source for disrupting services of other machines on the Azure Virtual Network or even attack networked devices outside of Azure.&lt;/p&gt;&lt;p&gt;Remediation:&lt;/p&gt;&lt;p&gt;Disable direct UDP access to your Azure Virtual Machines from the Internet. After direct UDP access from the Internet is disabled, you have other options you can use to access UDP based services running on these virtual machines:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/azure/vpn-gateway/vpn-gateway-howto-point-to-site-resource-manager-portal"&gt;Point-to-site VPN&lt;/a&gt;&amp;nbsp;&lt;/li&gt;&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/azure/vpn-gateway/tutorial-site-to-site-portal"&gt;Site-to-site VPN&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/azure/expressroute/"&gt;ExpressRoute&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.3" supportedStandardRef="cis-azure-standard"/>
            <standard ref="6.3" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="NS-1" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;&lt;strong&gt;From Azure Console&lt;/strong&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Open the Networking blade for the specific Virtual machine in Azure portal&lt;/li&gt;&lt;li&gt;Verify that the INBOUND PORT RULES does not have a rule for UDP such as&lt;/li&gt;&lt;/ol&gt;&lt;ul&gt;&lt;li&gt;protocol = UDP,&lt;/li&gt;&lt;li&gt;Source = Any OR Internet&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;Using Azure Command Line Interface 2.0&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;List Network security groups with corresponding non-default Security rules:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;az network nsg list --query [*].[name,securityRules]&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Ensure that none of the NSGs have security rule as below&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;"access" : "Allow"&amp;nbsp;&lt;/p&gt;&lt;p&gt;"destinationPortRange" : "*" or "[port range containing 53, 123, 161, 389, 1900, or other configured UDP-based services]"&amp;nbsp;&lt;/p&gt;&lt;p&gt;"direction" : "Inbound"&amp;nbsp;&lt;/p&gt;&lt;p&gt;"protocol" : "UDP"&amp;nbsp;&lt;/p&gt;&lt;p&gt;"sourceAddressPrefix" : "*" or "0.0.0.0" or "&amp;lt;nw&amp;gt;/0" or "/0" or "internet" or "any"&lt;/p&gt;&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:12.137">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-V06" name="Encrypt disks with CMK" issueId="" issueLink="" platform="" cost="0" risk="42" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Ensure that OS disks (boot volumes) and data disks (non-boot volumes) are encrypted with CMK.&lt;/p&gt;&lt;p&gt;Rationale:&lt;/p&gt;&lt;p&gt;Encrypting the IaaS VM's OS disk (boot volume), Data disks (non-boot volume) ensures that the entire content is fully unrecoverable without a key and thus protects the volume from unwarranted reads. CMK is superior encryption although requires additional planning.&lt;/p&gt;&lt;p&gt;Impact:&lt;/p&gt;&lt;p&gt;Using CMK/BYOK will entail additional management of keys.&lt;/p&gt;&lt;p&gt;NOTE: You must have your key vault setup to utilize this.&lt;/p&gt;&lt;p&gt;Remediation:&lt;/p&gt;&lt;p&gt;&lt;strong&gt;From Azure Console&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Note: Disks must be detached from VMs to have encryption changed.&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Go to Virtual machines&lt;/li&gt;&lt;li&gt;For each virtual machine, go to Settings&lt;/li&gt;&lt;li&gt;Click on Disks&lt;/li&gt;&lt;li&gt;Click the X to detach the disk from the VM&lt;/li&gt;&lt;li&gt;Now search for Disks and locate the unattached disk&lt;/li&gt;&lt;li&gt;Click the disk then select Encryption&lt;/li&gt;&lt;li&gt;Change your encryption type, then select your encryption set&lt;/li&gt;&lt;li&gt;Click Save&lt;/li&gt;&lt;li&gt;Go back to the VM and re-attach the disk&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;strong&gt;Using PowerShell&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;$KVRGname = 'MyKeyVaultResourceGroup'; $VMRGName = 'MyVirtualMachineResourceGroup'; $vmName = 'MySecureVM'; $KeyVaultName = 'MySecureVault'; $KeyVault = Get-AzKeyVault -VaultName $KeyVaultName -ResourceGroupName $KVRGname; $diskEncryptionKeyVaultUrl = $KeyVault.VaultUri; $KeyVaultResourceId = $KeyVault.ResourceId; Set-AzVMDiskEncryptionExtension -ResourceGroupName $VMRGname -VMName $vmName -DiskEncryptionKeyVaultUrl $diskEncryptionKeyVaultUrl -DiskEncryptionKeyVaultId $KeyVaultResourceId;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Managed disks are encrypted by default with Platform-managed keys. Using Customer-managed keys may provide an additional level of security or meet an organization's regulatory requirements. Encrypting managed disks ensures that its entire content is fully unrecoverable without a key and thus protects the volume from unwarranted reads. Even if the disk is not attached to any of the VMs, there is always a risk where a compromised user account with administrative access to VM service can mount/attach these data disks which may lead to sensitive information disclosure and tampering.&lt;/p&gt;&lt;p&gt;If data stored in the disk is no longer useful, refer to Azure documentation to delete unattached data disks at:&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;https://docs.microsoft.com/en-us/rest/api/compute/disks/delete&lt;/li&gt;&lt;li&gt;https://docs.microsoft.com/en-us/cli/azure/disk?view=azure-cli-latest#az-disk-delete&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;If data stored in the disk is important, To encrypt the disk refer azure documentation at:&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;https://docs.microsoft.com/en-us/azure/virtual-machines/disks-enable-customer-managed-keys-portal&lt;/li&gt;&lt;li&gt;https://docs.microsoft.com/en-us/rest/api/compute/disks/update#encryptionsettings&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;NOTE: During encryption it is likely that a reboot will be required, it may take up to 15 minutes to complete the process. NOTE 2: This may differ for Linux Machines as you may need to set the -skipVmBackup parameter&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.2" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="7.3" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="DP-5" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;&lt;strong&gt;From Azure Console&lt;/strong&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Go to Virtual machines&lt;ol&gt;&lt;li&gt;For each virtual machine, go to Settings&lt;/li&gt;&lt;li&gt;Click on Disks&lt;/li&gt;&lt;li&gt;Ensure that the OS disk and Data disks have encryption set to CMK.&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;Go to Disks&lt;ol&gt;&lt;li&gt;Click on Add Filter&lt;/li&gt;&lt;li&gt;In the filter field select Disk state&lt;/li&gt;&lt;li&gt;In the Value field select Unattached&lt;/li&gt;&lt;li&gt;Click Apply&lt;/li&gt;&lt;li&gt;For each disk listed ensure that Encryption type in the encryption blade is `Encryption at-rest with a customer-managed key'&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;strong&gt;Using PowerShell&lt;/strong&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;$ResourceGroupName="yourResourceGroupName" $DiskName="yourDiskName" $disk=Get-AzDisk -ResourceGroupName $ResourceGroupName -DiskName $DiskName $disk.Encryption.Type&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;strong&gt;From Azure Command Line Interface 2.0&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Ensure command below does not return any output.&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;az disk list --query '[? diskstate == `Unattached`].{encryptionSettings: encryptionSettings, name: name}' -o json&lt;/p&gt;&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:12.137">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-N01" name="Set Network Security Groups to be as restrictive as possible" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Use Network Security Groups (NSG) to filter the ingress/egress network traffic to Azure resources. Set the limit all the traffic (ingress/egress) on the NSG in order to force the use of least privilege into the NSG.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Identify Azure resources for each NSG.&lt;/li&gt; 
  &lt;li&gt;Create a set of least privilege NSG for those resources.&lt;/li&gt; 
  &lt;li&gt;Place the resources in those security groups.&lt;/li&gt; 
  &lt;li&gt;Change the inbound/outbound security rules to fulfill the least privilege.&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - How to open ports to a virtual machine with the Azure portal" url="https://docs.microsoft.com/en-us/azure/virtual-machines/windows/nsg-quickstart-portal"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Check that each Azure resources has got their Network Security Groups.&lt;/li&gt;
                            &lt;li&gt;Check that a set of these groups achieve with the principle of the least
                            privilege.&lt;/li&gt;
                            &lt;li&gt;Check that the inbound/outbound security rules are enabled and correctly
                            configured.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:12.137">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-V01" name="Set up data collection" issueId="" issueLink="" platform="" cost="0" risk="42" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Set up the Security Center Data Collection to create an Azure storage account to hold the
                        collected data.&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;On the Security Center dashboard, click Security policy, and then select your
                        subscription.&lt;/li&gt;
                        &lt;li&gt;For Data collection, select On.&lt;/li&gt;
                        &lt;li&gt;To create a storage account, select Choose a storage account. Then, select OK.&lt;/li&gt;
                        &lt;li&gt;On the Security Policy blade, select Save.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Configure auto provisioning for agents and extensions from Azure Security Center" url="https://docs.microsoft.com/en-us/azure/security-center/security-center-enable-data-collection"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;On the Security Center dashboard, click Security policy, and then select your
                            subscription.&lt;/li&gt;
                            &lt;li&gt;Check that the Data collection is enabled and correctly configured.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:12.137">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-V02" name="Set up the security policy" issueId="" issueLink="" platform="" cost="0" risk="42" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Set up the security policies to define the items for which Security Center collects data and makes recommendations. Apply different security policies to different sets of Azure resources. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;On the Security Center dashboard, select Security policy, and then select your subscription.&lt;/li&gt; 
  &lt;li&gt;Select Prevention policy.&lt;/li&gt; 
  &lt;li&gt;Turn on or turn off policy items that you want to apply to all Azure resources.&lt;/li&gt; 
  &lt;li&gt;When you're finished selecting your settings, select OK.&lt;/li&gt; 
  &lt;li&gt;On the Security policy blade, select Save.&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt; 
&lt;div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Set security policies in Azure Security Center" url="https://docs.microsoft.com/en-us/azure/security-center/security-center-policies"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;On the Security Center dashboard, select Security policy, and then select your
                            subscription.&lt;/li&gt;
                            &lt;li&gt;Select Prevention policy.&lt;/li&gt;
                            &lt;li&gt;Check that the required policy items are enabled.&amp;nbsp;&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:12.137">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-V05" name="Use Managed disks for virtual machines" issueId="" issueLink="" platform="" cost="0" risk="42" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Migrate BLOB based VHD's to Managed Disks on Virtual Machines to exploit the default features of this configuration. The features include&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Default Disk Encryption&lt;/li&gt;&lt;li&gt;Resilience as Microsoft will managed the disk storage and move around if underlying hardware goes faulty&lt;/li&gt;&lt;li&gt;Reduction of costs over storage accounts&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;Rationale:&lt;/p&gt;&lt;p&gt;Managed disks are by default encrypted on the underlying hardware so no additional encryption is required for basic protection, it is available if additional encryption is required. Managed disks are by design more resilient that storage accounts.&lt;/p&gt;&lt;p&gt;For ARM deployed Virtual Machines, Azure Adviser will at some point recommend moving VHD's to managed disks both from a security and cost management perspective.&lt;/p&gt;&lt;p&gt;Impact:&lt;/p&gt;&lt;p&gt;There is no operational impact of migrating to managed disks other than the benefits mentioned above.&lt;/p&gt;&lt;p&gt;NOTE: When converting to managed disks VMs will be powered off and back on.&lt;/p&gt;&lt;p&gt;Remediation:&lt;/p&gt;&lt;p&gt;&lt;strong&gt;From Azure Console&lt;/strong&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Using the search feature, go to Virtual Machines&lt;/li&gt;&lt;li&gt;Select the virtual machine you would like to convert&lt;/li&gt;&lt;li&gt;Select Disks in the menu for the VM&lt;/li&gt;&lt;li&gt;At the top select Migrate to managed disks&lt;/li&gt;&lt;li&gt;You may follow the prompts to convert the disk and finish by selecting `Migrate' to start the process&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;NOTE VMs will be stopped and restarted after migration is complete.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Using Powershell&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;Stop-AzVM -ResourceGroupName $rgName -Name $vmName -Force ConvertTo-AzVMManagedDisk -ResourceGroupName $rgName -VMName $vmName Start-AzVM -ResourceGroupName $rgName -Name $vmName&lt;/p&gt;&lt;/blockquote&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.1" supportedStandardRef="cis-azure-standard"/>
            <standard ref="7.1" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="GS-1" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;&lt;strong&gt;From Azure Console&lt;/strong&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Using the search feature, go to Virtual Machines&lt;/li&gt;&lt;li&gt;Select Edit columns&lt;/li&gt;&lt;li&gt;Add Uses managed disks to the selected columns&lt;/li&gt;&lt;li&gt;Select Apply&lt;/li&gt;&lt;li&gt;Ensure virtual machine listed are using a managed disk&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;strong&gt;Using Powershell&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;Get-AzVM | ForEach-Object {"Name: " + $_.Name;"ManagedDisk Id: " + $_.StorageProfile.OsDisk.ManagedDisk.Id;""}&lt;/p&gt;&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:12.137">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-N07" name="Use Network Access Control Lists (NACLs) for blacklisting" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Use Network Access Control Lists (NACLs) as a method of blacklisting IP addresses to filters the
                        traffic across endpoints to allow or deny traffic per pre-created rules.&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation: &amp;nbsp;&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                        &lt;li&gt;Select &amp;quot;Network security groups&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Select the Network Security Group (NSG) for your virtual machine and click on &amp;quot;Inbound
                        security rules&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Add a DENY rule that will restrict inbound access from a blacklisted IP address or
                        range to a designated port or port range.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;
                        &lt;ol&gt;
                        &lt;ul&gt;
                        &lt;/ul&gt;
                        &lt;/ol&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - How to open ports to a virtual machine with the Azure portal" url="https://docs.microsoft.com/en-us/azure/virtual-machines/windows/nsg-quickstart-portal"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;Network security groups&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Select the Network Security Group (NSG) for your virtual machine and click on
                            &amp;quot;Inbound security rules&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that there is a rule to deny the inbound access from a blacklisted IP
                            address or range to a designated port or port range.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:12.137">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-N02" name="Use Network Security Groups to block inbound port traffic from 0.0.0.0/0" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Use Network Security Groups (NSG) to filter the ingress/egress network traffic to Azure resources. Set the limit inbound access to all TCP or all ports to avoid undue exposure to risk.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt; 
  &lt;li&gt;Select Network Security Groups.&lt;/li&gt; 
  &lt;li&gt;Choose the NSG to edit (or create a new one).&lt;/li&gt; 
  &lt;li&gt;In "Inbound security rules":&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;ul&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Remove all rules that allow port traffic.&lt;/li&gt; 
   &lt;li&gt;Add a rule to deny port traffic&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/ul&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - How to open ports to a virtual machine with the Azure portal" url="https://docs.microsoft.com/en-us/azure/virtual-machines/windows/nsg-quickstart-portal"/>
          </references>
          <standards>
            <standard ref="6.4" supportedStandardRef="cis-azure-standard"/>
            <standard ref="6.4" supportedStandardRef="cis-azure-standard-level-2"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Network Security Groups.&lt;/li&gt;
                            &lt;li&gt;Choose the NSG to view one of them.&lt;/li&gt;
                            &lt;li&gt;In &amp;quot;Inbound security rules&amp;quot;, check that all the traffic from
                            0.0.0.0/0 is are blocked.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:12.137">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-N04" name="Use Network Security Groups to block ingress to port 22 from 0.0.0.0/0" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Use Network Security Groups (NSG) to filter the ingress/egress network traffic to Azure
                        resources. Set the limit inbound access to port 22 (Secure Desk) to IP addresses that require
                        this access to avoid undue exposure to risk.&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                        &lt;li&gt;Select Network Security Groups.&lt;/li&gt;
                        &lt;li&gt;Choose the NSG to edit (or create a new one).&lt;/li&gt;
                        &lt;li&gt;In &amp;quot;Inbound security rules&amp;quot;:&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ul&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Allow SSH port traffic just to/from IPs that require the access.&lt;/li&gt;
                        &lt;li&gt;Otherwise, remove all rules that allow port 22 traffic.&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/ul&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - How to open ports to a virtual machine with the Azure portal" url="https://docs.microsoft.com/en-us/azure/virtual-machines/windows/nsg-quickstart-portal"/>
          </references>
          <standards>
            <standard ref="6.2" supportedStandardRef="cis-azure-standard"/>
            <standard ref="6.2" supportedStandardRef="cis-azure-standard-level-2"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Network Security Groups.&lt;/li&gt;
                            &lt;li&gt;Choose the NSG to view one of them.&lt;/li&gt;
                            &lt;li&gt;In &amp;quot;Inbound security rules&amp;quot;, check that the traffic through the
                            port 22 is blocked.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:12.138">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-N03" name="Use Network Security Groups to block ingress to port 3389 from 0.0.0.0/0" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Use Network Security Groups (NSG) to filter the ingress/egress network traffic to Azure
                        resources. Set the limit inbound access to port 3389 (Remote Desk Protocol) to IP addresses that
                        require this access to avoid undue exposure to risk.&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                        &lt;li&gt;Select Network Security Groups.&lt;/li&gt;
                        &lt;li&gt;Choose the NSG to edit (or create a new one).&lt;/li&gt;
                        &lt;li&gt;In &amp;quot;Inbound security rules&amp;quot;:&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ul&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Allow RDP port traffic just to/from IPs that require the access.&lt;/li&gt;
                        &lt;li&gt;Otherwise, remove all rules that allow port 3389 traffic.&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/ul&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - How to open ports to a virtual machine with the Azure portal" url="https://docs.microsoft.com/en-us/azure/virtual-machines/windows/nsg-quickstart-portal"/>
          </references>
          <standards>
            <standard ref="6.1" supportedStandardRef="cis-azure-standard"/>
            <standard ref="6.1" supportedStandardRef="cis-azure-standard-level-2"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Network Security Groups.&lt;/li&gt;
                            &lt;li&gt;Choose the NSG to view one of them.&lt;/li&gt;
                            &lt;li&gt;In &amp;quot;Inbound security rules&amp;quot;, check that the traffic through the
                            port 3389 is blocked.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:12.138">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="ACTIVITY LOGS ALERTS" name="Activity Logs alerts" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="UNAUTHORIZED-ACCESS-VIRTUAL-MACHINES" name="Attackers gain undetected access to the system by changing Virtual Machine configurations" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>Attackers can gain undetected access to the virtual machine configurations and these
                                changes couldn't be audited or detected.
                            </desc>
              <riskRating confidentiality="50" integrity="50" availability="25" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-VM02">
                  <countermeasures>
                    <countermeasure ref="AZ-V03" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-V03" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="API LOGGING AND AUDITING" name="API Logging and Auditing" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="UNAUDITABLE-CHANGES-AZURE" name="Attackers make undetected and unaudited changes to system configurations" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>If audit trails are not properly protected, an attacker could gain access to the
                                system, modify the status of resources or exfiltrate sensitive data without being
                                noticed.</desc>
              <riskRating confidentiality="25" integrity="75" availability="25" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-LOGS03">
                  <countermeasures>
                    <countermeasure ref="AZ-V01" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-V01" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="GENERAL" name="General" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="UNCONFIGURED-SECURITY" name="Attackers gain access to the system by exploiting weak security configurations" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>Weak security configurations like using sharing passwords in plain text, using weak passwords, using obsolete encryption algorithms, etc. can lead attackers to gain access to the system.</desc>
              <riskRating confidentiality="75" integrity="50" availability="25" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-VM01">
                  <countermeasures>
                    <countermeasure ref="AZ-V02" mitigation="25"/>
                    <countermeasure ref="AZ-V05" mitigation="25"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-16">
                  <countermeasures>
                    <countermeasure ref="AZ-V07" mitigation="25"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-311">
                  <countermeasures>
                    <countermeasure ref="AZ-V06" mitigation="25"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-V02" mitigation="25"/>
                <countermeasure ref="AZ-V05" mitigation="25"/>
                <countermeasure ref="AZ-V06" mitigation="25"/>
                <countermeasure ref="AZ-V07" mitigation="25"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="NETWORKING" name="Networking" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="UNAUTHORISED-CONNECTION" name="Attackers gain unauthorized connection to the resources" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>Attackers could gain unauthorized connection to the resources through misconfigured
                                ports or security network configurations.
                            </desc>
              <riskRating confidentiality="25" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-NET-01">
                  <countermeasures>
                    <countermeasure ref="AZ-N01" mitigation="20"/>
                    <countermeasure ref="AZ-N02" mitigation="10"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AZURE-NET-02">
                  <countermeasures>
                    <countermeasure ref="AZ-N04" mitigation="10"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AZURE-NET-03">
                  <countermeasures>
                    <countermeasure ref="AZ-N03" mitigation="20"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AZURE-NET-04">
                  <countermeasures>
                    <countermeasure ref="AZ-N07" mitigation="20"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AZURE-NET-05">
                  <countermeasures>
                    <countermeasure ref="AZ-N05" mitigation="20"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-N01" mitigation="20"/>
                <countermeasure ref="AZ-N02" mitigation="10"/>
                <countermeasure ref="AZ-N03" mitigation="20"/>
                <countermeasure ref="AZ-N04" mitigation="10"/>
                <countermeasure ref="AZ-N05" mitigation="20"/>
                <countermeasure ref="AZ-N07" mitigation="20"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="UNAUTHORIZED-CONNECTION" name="Attackers gain unauthorized connection to the resources" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;Attackers could potentially gain unauthorized connection to the resources through misconfigured ports or security network configurations.&lt;/p&gt;</desc>
              <riskRating confidentiality="50" integrity="50" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-NET-01">
                  <countermeasures>
                    <countermeasure ref="AZ-V04" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-V04" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="PATCHING" name="Patching" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="UNAUTHZ-SERVICES-NOT-UPDATE" name="Attackers gain access to the system exploiting a known vulnerability" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;Attackers can gain access to the systems because the security patches for each system have not been applied or the licenses of the products have expired.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-VM-NOT_LICENSE">
                  <countermeasures>
                    <countermeasure ref="AZ-N06" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-N06" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="32a35004-c917-4672-a9e4-20f4f10f4fcb" diagramComponentId="e2c43848-d7dc-4cd2-97df-18aa4261eb9f" ref="37f32cf3-3a52-4ec6-be95-fdd624d45001" name="Web Tier" desc="" library="CS-Default" parentComponentRef="4560c874-df9e-41bd-8263-17574a8d5767" componentDefinitionRef="empty-component">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses/>
      <countermeasures/>
      <usecases/>
    </component>
    <component uuid="60e0fdbc-e277-49a6-9901-38b6fdd7cc44" diagramComponentId="5bd246be-1f92-4d1b-90ca-9fc025672c3d" ref="0e62cc32-edc7-459a-bff3-63cfaf6946c0" name="Azure Virtual Machines" desc="" library="Microsoft-Azure" parentComponentRef="8a4aa198-240b-4035-bec7-9847a31eace5" componentDefinitionRef="azure-virtual-machines">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses>
        <weakness ref="AZURE-LOGS03" name="Audit logs can be deleted" state="0" impact="100" issueId="" issueLink="">
          <desc>There is no external backups of log records. If logs are deleted, there is no way to recover
                        them.ed.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Activity Logs&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Push the button &amp;quot;Export&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;All Regions&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;Export to a storage account&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that all fields are correctly filled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:14.921">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-NET-05" name="Communication is not allowed from/to Virtual Machines" state="0" impact="100" issueId="" issueLink="">
          <desc>IP allocation of virtual machines, DNS resolution, and node monitorization is performed by a
                        Microsoft host node. It is necessary to allow the communication with this virtual IP to be able
                        to make the communication from/to the virtual machine of Azure.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Network Security Groups.&lt;/li&gt;
                            &lt;li&gt;Choose the NSG to edit (or create a new one).&lt;/li&gt;
                            &lt;li&gt;In &amp;quot;Inbound security rules&amp;quot;, check that the IP 168.63.129.16
                            inbound traffic is allowed.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:14.921">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CWE-16" name="Configuration" state="0" impact="100" issueId="" issueLink="">
          <desc>Weaknesses in this category are typically introduced during the
                        configuration of the software.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:14.921">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CWE-311" name="Missing Encryption of Sensitive Data" state="0" impact="100" issueId="" issueLink="">
          <desc>The software does not encrypt sensitive or critical information
                        before storage or transmission.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:14.921">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-VM01" name="Security policies exposing system resources" state="0" impact="100" issueId="" issueLink="">
          <desc>The security policies are not adequately configured.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:14.921">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-NET-04" name="Unauthorized connection attempts on Azure resources" state="0" impact="100" issueId="" issueLink="">
          <desc>Receiving unauthorized connections to Azure resources is most likely to be receiving an
                        attack. To avoid this, access to the network must be as restricted as possible using Network
                        Access Control Lists for blacklisting.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;Network security groups&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Select the Network Security Group (NSG) for your virtual machine and click on
                            &amp;quot;Inbound security rules&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that there is a rule to deny the inbound access from a blacklisted IP
                            address or range to a designated port or port range.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:14.921">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-NET-01" name="Unauthorized connection attempts on open ports" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        Receiving unauthorized connections to open ports makes systems vulnerable to attacks. To
                        avoid this, access to the network must be as restricted as possible, so that only the necessary
                        ports are open and the minimum inbound traffic is accepted.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Check that each Azure resources have got their Network Security Groups.&lt;/li&gt;
                            &lt;li&gt;Check that a set of these groups achieve with the principle of the least
                            privilege.&lt;/li&gt;
                            &lt;li&gt;Check that the inbound/outbound security rules are enabled and correctly
                            configured.&lt;/li&gt;
                            &lt;li&gt;In &amp;quot;Inbound security rules&amp;quot;, check that all the traffic from
                            0.0.0.0/0&amp;nbsp;is blocked.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:14.921">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-NET-02" name="Unauthorized connection attempts on port 22" state="0" impact="100" issueId="" issueLink="">
          <desc>Receiving unauthorized connections to port 22 is most likely to be receiving an SSH attack. To
                        avoid this, access to the network must be as restricted as possible, so that only the necessary
                        ports are open and the minimum inbound traffic is accepted.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Login&amp;nbsp;into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Network Security Groups.&lt;/li&gt;
                            &lt;li&gt;Choose the NSG to view one of them.&lt;/li&gt;
                            &lt;li&gt;In &amp;quot;Inbound security rules&amp;quot;, check that the traffic through the
                            port 22 is blocked.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:14.921">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-NET-03" name="Unauthorized connection attempts on port 3389" state="0" impact="100" issueId="" issueLink="">
          <desc>Receiving unauthorized connections to port 3389 is most likely to be receiving an RDP attack.
                        To avoid this, access to the network must be as restricted as possible, so that only the
                        necessary ports are open and the minimum inbound traffic is accepted.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Login&amp;nbsp;into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Network Security Groups.&lt;/li&gt;
                            &lt;li&gt;Choose the NSG to view one of them.&lt;/li&gt;
                            &lt;li&gt;In &amp;quot;Inbound security rules&amp;quot;, check that the traffic through the
                            port 3389 is blocked.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:14.921">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-VM02" name="Undetected changes in Virtual Machine configurations" state="0" impact="100" issueId="" issueLink="">
          <desc>The changes in virtual machines configurations are not detected because the monitorization and
                        alerts of the security configuration are not configured.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;In the Azure portal, click Resource Groups, select myResourceGroup, and then
                            select myVM in the resource list.&lt;/li&gt;
                            &lt;li&gt;Click Alert rules on the VM blade.&lt;/li&gt;
                            &lt;li&gt;Check there are some metric alerts and they are correctly configured and enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:14.921">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-VM-NOT_LICENSE" name="Unlicensed Virtual Machines" state="0" impact="100" issueId="" issueLink="">
          <desc>Azure is a system formed by Microsoft machines, therefore, it is necessary that Microsoft
                        perform periodic verification of the licenses of the products.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Network Security Groups.&lt;/li&gt;
                            &lt;li&gt;Choose the NSG to view one of them.&lt;/li&gt;
                            &lt;li&gt;In &amp;quot;Inbound security rules&amp;quot;, check that the traffic outbound
                            through the port 1688 is allowed.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:14.920">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="AZ-N06" name="Allow Key Management Service request" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Allow Key Management Service host server to handle the periodic request to ensure Microsoft
                        licensing. Set the limit outbound access to port 1688 (Service Request) in the Network Security
                        Groups to avoid undue exposure to risk.&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                        &lt;li&gt;Select Network Security Groups.&lt;/li&gt;
                        &lt;li&gt;Choose the NSG to edit (or create a new one).&lt;/li&gt;
                        &lt;li&gt;In &amp;quot;Outbound security rules&amp;quot;: Allow port 1688 outbound traffic.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - How to open ports to a virtual machine with the Azure portal" url="https://docs.microsoft.com/en-us/azure/virtual-machines/windows/nsg-quickstart-portal"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Network Security Groups.&lt;/li&gt;
                            &lt;li&gt;Choose the NSG to view one of them.&lt;/li&gt;
                            &lt;li&gt;In &amp;quot;Inbound security rules&amp;quot;, check that the traffic outbound
                            through the port 1688 is allowed.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:14.829">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-N05" name="Allow Virtual IP of the Microsoft host node" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Allow inbound accesses in Network Security Groups from the IP address 168.63.129.16 to
                        communicate with the Azure Service. This IP belongs to Microsoft and acts as DHCP server, DNS
                        server and monitoring the host node hosting the Azure Virtual Machine.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                        &lt;li&gt;Select Network Security Groups.&lt;/li&gt;
                        &lt;li&gt;Choose the NSG to edit (or create a new one).&lt;/li&gt;
                        &lt;li&gt;In &amp;quot;Inbound security rules&amp;quot;: Allow IP 168.63.129.16 inbound traffic.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - How to open ports to a virtual machine with the Azure portal" url="https://docs.microsoft.com/en-us/azure/virtual-machines/windows/nsg-quickstart-portal"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Network Security Groups.&lt;/li&gt;
                            &lt;li&gt;Choose the NSG to edit (or create a new one).&lt;/li&gt;
                            &lt;li&gt;In &amp;quot;Inbound security rules&amp;quot;, check that the IP 168.63.129.16
                            inbound traffic is allowed.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:14.835">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-V07" name="Apply common security best practices in virtual machine's configuration" issueId="" issueLink="" platform="" cost="0" risk="42" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Only install organization-approved extensions on VMs.&lt;/p&gt;&lt;p&gt;Rationale:&lt;/p&gt;&lt;p&gt;Azure virtual machine extensions are small applications that provide post-deployment configuration and automation tasks on Azure virtual machines. These extensions run with administrative privileges and could potentially access anything on a virtual machine. The Azure Portal and community provide several such extensions. Each organization should carefully evaluate these extensions and ensure that only those that are approved for use are actually implemented.&lt;/p&gt;&lt;p&gt;Windows and Linux virtual machines should be kept updated to:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Address a specific bug or flaw&lt;/li&gt;&lt;li&gt;Improve an OS or application's general stability&lt;/li&gt;&lt;li&gt;Fix a security vulnerability&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;The Azure Security Center retrieves a list of available security and critical updates from Windows Update or Windows Server Update Services (WSUS), depending on which service is configured on a Windows VM. The security center also checks for the latest updates in Linux systems. If a VM is missing a system update, the security center will recommend system updates be applied.&lt;/p&gt;&lt;p&gt;Installing endpoint protection systems (like Antimalware for Azure) provides for real-time protection capability that helps identify and remove viruses, spyware, and other malicious software, with configurable alerts when known malicious or unwanted software attempts to install itself or run on Azure systems.&lt;/p&gt;&lt;p&gt;Remediation:&lt;/p&gt;&lt;p&gt;&lt;strong&gt;From Azure Console&lt;/strong&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Go to Virtual machines&lt;/li&gt;&lt;li&gt;For each virtual machine, go to Settings&lt;/li&gt;&lt;li&gt;Click on Extensions&lt;/li&gt;&lt;li&gt;If there are unapproved extensions, uninstall them.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;Follow Microsoft Azure documentation to apply security patches and install endpoint protection from the security center. Alternatively, you can employ your own patch assessment and management tool or endpoint protection tool to periodically assess, report and install the required security patches for your OS.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;From Azure Command Line Interface 2.0&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;From the audit command identify the unapproved extensions, and use the below CLI command to remove an unapproved extension attached to VM. az vm extension delete --resource-group &amp;lt;resourceGroupName&amp;gt; --vm-name &amp;lt;vmName&amp;gt; --name &amp;lt;extensionName&amp;gt;&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="14" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="16" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="2.5" supportedStandardRef="cis-azure-standard"/>
            <standard ref="2.5" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="7.4" supportedStandardRef="cis-azure-standard"/>
            <standard ref="7.4" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="7.5" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="8" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="9" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API7:2019-Security Misconfiguration" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="ES-1" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="ES-2" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="ES-3" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="PV-7" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;&lt;strong&gt;From Azure Console&lt;/strong&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Go to Virtual machines&lt;ol&gt;&lt;li&gt;For each virtual machine, go to Settings&lt;/li&gt;&lt;li&gt;Click on Extensions&lt;/li&gt;&lt;li&gt;Ensure that the listed extensions are approved for use.&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;Go to Security Center - Recommendations&lt;ol&gt;&lt;li&gt;Ensure that there are no recommendations for Apply system updates&lt;/li&gt;&lt;li&gt;Ensure that there are no recommendations for Endpoint Protection not installed on Azure VMs&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;strong&gt;From Azure Command Line Interface 2.0&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Use the below command to list the extensions attached to a VM, and ensure the listed extensions are approved for use.&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;az vm extension list --vm-name &amp;lt;vmName&amp;gt; --resource-group &amp;lt;sourceGroupName&amp;gt; --query [*].name&lt;/p&gt;&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:14.836">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-V03" name="Create alerts for Virtual Machines" issueId="" issueLink="" platform="" cost="0" risk="40" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Create alerts based on specific performance metrics:
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Notify to the correspondent personnel when the average CPU usage exceeds a certain
                        threshold.&lt;/li&gt;
                        &lt;li&gt;Notify to the correspondent personnel when the available free disk space drops below a
                        certain amount,&lt;/li&gt;
                        &lt;li&gt;Notify to the correspondent personnel when the security configuration of the Virtual
                        Machines changes.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;In the Azure portal, click Resource Groups, select myResourceGroup, and then select
                        myVM in the resource list.&lt;/li&gt;
                        &lt;li&gt;Click Alert rules on the VM blade, then click Add metric alert across the top of the
                        alerts blade.&lt;/li&gt;
                        &lt;li&gt;Provide a Name for your alert, such as myAlertRule&lt;/li&gt;
                        &lt;li&gt;To trigger an alert when CPU percentage exceeds 1.0 for five minutes, leave all the
                        other defaults selected.&lt;/li&gt;
                        &lt;li&gt;Optionally, check the box for Email owners, contributors, and readers to send an email
                        notification. The default action is to present a notification in the portal.&lt;/li&gt;
                        &lt;li&gt;Click the OK button.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Microsoft Azure Virtual Machine Monitoring with Azure Diagnostics Extension" url="https://azure.microsoft.com/en-us/blog/windows-azure-virtual-machine-monitoring-with-wad-extension/"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;In the Azure portal, click Resource Groups, select myResourceGroup, and then
                            select myVM in the resource list.&lt;/li&gt;
                            &lt;li&gt;Click Alert rules on the VM blade.&lt;/li&gt;
                            &lt;li&gt;Check there are some metric alerts and they are correctly configured and enabled.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:14.836">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-V04" name="Disable Internet exposed UDP ports on network security groups" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Disable Internet exposed UDP ports on network security groups.&lt;/p&gt;&lt;p&gt;Rationale:&lt;/p&gt;&lt;p&gt;The potential security problem with broadly exposing UDP services over the Internet is that attackers can use DDoS amplification techniques to reflect spoofed UDP traffic from Azure Virtual Machines. The most common types of these attacks use exposed DNS, NTP, SSDP, SNMP, CLDAP and other UDP-based services as amplification source for disrupting services of other machines on the Azure Virtual Network or even attack networked devices outside of Azure.&lt;/p&gt;&lt;p&gt;Remediation:&lt;/p&gt;&lt;p&gt;Disable direct UDP access to your Azure Virtual Machines from the Internet. After direct UDP access from the Internet is disabled, you have other options you can use to access UDP based services running on these virtual machines:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/azure/vpn-gateway/vpn-gateway-howto-point-to-site-resource-manager-portal"&gt;Point-to-site VPN&lt;/a&gt;&amp;nbsp;&lt;/li&gt;&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/azure/vpn-gateway/tutorial-site-to-site-portal"&gt;Site-to-site VPN&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/azure/expressroute/"&gt;ExpressRoute&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.3" supportedStandardRef="cis-azure-standard"/>
            <standard ref="6.3" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="NS-1" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;&lt;strong&gt;From Azure Console&lt;/strong&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Open the Networking blade for the specific Virtual machine in Azure portal&lt;/li&gt;&lt;li&gt;Verify that the INBOUND PORT RULES does not have a rule for UDP such as&lt;/li&gt;&lt;/ol&gt;&lt;ul&gt;&lt;li&gt;protocol = UDP,&lt;/li&gt;&lt;li&gt;Source = Any OR Internet&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;Using Azure Command Line Interface 2.0&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;List Network security groups with corresponding non-default Security rules:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;az network nsg list --query [*].[name,securityRules]&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Ensure that none of the NSGs have security rule as below&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;"access" : "Allow"&amp;nbsp;&lt;/p&gt;&lt;p&gt;"destinationPortRange" : "*" or "[port range containing 53, 123, 161, 389, 1900, or other configured UDP-based services]"&amp;nbsp;&lt;/p&gt;&lt;p&gt;"direction" : "Inbound"&amp;nbsp;&lt;/p&gt;&lt;p&gt;"protocol" : "UDP"&amp;nbsp;&lt;/p&gt;&lt;p&gt;"sourceAddressPrefix" : "*" or "0.0.0.0" or "&amp;lt;nw&amp;gt;/0" or "/0" or "internet" or "any"&lt;/p&gt;&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:14.836">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-V06" name="Encrypt disks with CMK" issueId="" issueLink="" platform="" cost="0" risk="42" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Ensure that OS disks (boot volumes) and data disks (non-boot volumes) are encrypted with CMK.&lt;/p&gt;&lt;p&gt;Rationale:&lt;/p&gt;&lt;p&gt;Encrypting the IaaS VM's OS disk (boot volume), Data disks (non-boot volume) ensures that the entire content is fully unrecoverable without a key and thus protects the volume from unwarranted reads. CMK is superior encryption although requires additional planning.&lt;/p&gt;&lt;p&gt;Impact:&lt;/p&gt;&lt;p&gt;Using CMK/BYOK will entail additional management of keys.&lt;/p&gt;&lt;p&gt;NOTE: You must have your key vault setup to utilize this.&lt;/p&gt;&lt;p&gt;Remediation:&lt;/p&gt;&lt;p&gt;&lt;strong&gt;From Azure Console&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Note: Disks must be detached from VMs to have encryption changed.&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Go to Virtual machines&lt;/li&gt;&lt;li&gt;For each virtual machine, go to Settings&lt;/li&gt;&lt;li&gt;Click on Disks&lt;/li&gt;&lt;li&gt;Click the X to detach the disk from the VM&lt;/li&gt;&lt;li&gt;Now search for Disks and locate the unattached disk&lt;/li&gt;&lt;li&gt;Click the disk then select Encryption&lt;/li&gt;&lt;li&gt;Change your encryption type, then select your encryption set&lt;/li&gt;&lt;li&gt;Click Save&lt;/li&gt;&lt;li&gt;Go back to the VM and re-attach the disk&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;strong&gt;Using PowerShell&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;$KVRGname = 'MyKeyVaultResourceGroup'; $VMRGName = 'MyVirtualMachineResourceGroup'; $vmName = 'MySecureVM'; $KeyVaultName = 'MySecureVault'; $KeyVault = Get-AzKeyVault -VaultName $KeyVaultName -ResourceGroupName $KVRGname; $diskEncryptionKeyVaultUrl = $KeyVault.VaultUri; $KeyVaultResourceId = $KeyVault.ResourceId; Set-AzVMDiskEncryptionExtension -ResourceGroupName $VMRGname -VMName $vmName -DiskEncryptionKeyVaultUrl $diskEncryptionKeyVaultUrl -DiskEncryptionKeyVaultId $KeyVaultResourceId;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Managed disks are encrypted by default with Platform-managed keys. Using Customer-managed keys may provide an additional level of security or meet an organization's regulatory requirements. Encrypting managed disks ensures that its entire content is fully unrecoverable without a key and thus protects the volume from unwarranted reads. Even if the disk is not attached to any of the VMs, there is always a risk where a compromised user account with administrative access to VM service can mount/attach these data disks which may lead to sensitive information disclosure and tampering.&lt;/p&gt;&lt;p&gt;If data stored in the disk is no longer useful, refer to Azure documentation to delete unattached data disks at:&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;https://docs.microsoft.com/en-us/rest/api/compute/disks/delete&lt;/li&gt;&lt;li&gt;https://docs.microsoft.com/en-us/cli/azure/disk?view=azure-cli-latest#az-disk-delete&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;If data stored in the disk is important, To encrypt the disk refer azure documentation at:&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;https://docs.microsoft.com/en-us/azure/virtual-machines/disks-enable-customer-managed-keys-portal&lt;/li&gt;&lt;li&gt;https://docs.microsoft.com/en-us/rest/api/compute/disks/update#encryptionsettings&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;NOTE: During encryption it is likely that a reboot will be required, it may take up to 15 minutes to complete the process. NOTE 2: This may differ for Linux Machines as you may need to set the -skipVmBackup parameter&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.2" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="7.3" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="DP-5" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;&lt;strong&gt;From Azure Console&lt;/strong&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Go to Virtual machines&lt;ol&gt;&lt;li&gt;For each virtual machine, go to Settings&lt;/li&gt;&lt;li&gt;Click on Disks&lt;/li&gt;&lt;li&gt;Ensure that the OS disk and Data disks have encryption set to CMK.&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;Go to Disks&lt;ol&gt;&lt;li&gt;Click on Add Filter&lt;/li&gt;&lt;li&gt;In the filter field select Disk state&lt;/li&gt;&lt;li&gt;In the Value field select Unattached&lt;/li&gt;&lt;li&gt;Click Apply&lt;/li&gt;&lt;li&gt;For each disk listed ensure that Encryption type in the encryption blade is `Encryption at-rest with a customer-managed key'&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;strong&gt;Using PowerShell&lt;/strong&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;$ResourceGroupName="yourResourceGroupName" $DiskName="yourDiskName" $disk=Get-AzDisk -ResourceGroupName $ResourceGroupName -DiskName $DiskName $disk.Encryption.Type&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;strong&gt;From Azure Command Line Interface 2.0&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Ensure command below does not return any output.&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;az disk list --query '[? diskstate == `Unattached`].{encryptionSettings: encryptionSettings, name: name}' -o json&lt;/p&gt;&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:14.836">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-N01" name="Set Network Security Groups to be as restrictive as possible" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Use Network Security Groups (NSG) to filter the ingress/egress network traffic to Azure resources. Set the limit all the traffic (ingress/egress) on the NSG in order to force the use of least privilege into the NSG.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Identify Azure resources for each NSG.&lt;/li&gt; 
  &lt;li&gt;Create a set of least privilege NSG for those resources.&lt;/li&gt; 
  &lt;li&gt;Place the resources in those security groups.&lt;/li&gt; 
  &lt;li&gt;Change the inbound/outbound security rules to fulfill the least privilege.&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - How to open ports to a virtual machine with the Azure portal" url="https://docs.microsoft.com/en-us/azure/virtual-machines/windows/nsg-quickstart-portal"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Check that each Azure resources has got their Network Security Groups.&lt;/li&gt;
                            &lt;li&gt;Check that a set of these groups achieve with the principle of the least
                            privilege.&lt;/li&gt;
                            &lt;li&gt;Check that the inbound/outbound security rules are enabled and correctly
                            configured.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:14.836">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-V01" name="Set up data collection" issueId="" issueLink="" platform="" cost="0" risk="42" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Set up the Security Center Data Collection to create an Azure storage account to hold the
                        collected data.&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;On the Security Center dashboard, click Security policy, and then select your
                        subscription.&lt;/li&gt;
                        &lt;li&gt;For Data collection, select On.&lt;/li&gt;
                        &lt;li&gt;To create a storage account, select Choose a storage account. Then, select OK.&lt;/li&gt;
                        &lt;li&gt;On the Security Policy blade, select Save.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Configure auto provisioning for agents and extensions from Azure Security Center" url="https://docs.microsoft.com/en-us/azure/security-center/security-center-enable-data-collection"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;On the Security Center dashboard, click Security policy, and then select your
                            subscription.&lt;/li&gt;
                            &lt;li&gt;Check that the Data collection is enabled and correctly configured.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:14.836">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-V02" name="Set up the security policy" issueId="" issueLink="" platform="" cost="0" risk="42" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Set up the security policies to define the items for which Security Center collects data and makes recommendations. Apply different security policies to different sets of Azure resources. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;On the Security Center dashboard, select Security policy, and then select your subscription.&lt;/li&gt; 
  &lt;li&gt;Select Prevention policy.&lt;/li&gt; 
  &lt;li&gt;Turn on or turn off policy items that you want to apply to all Azure resources.&lt;/li&gt; 
  &lt;li&gt;When you're finished selecting your settings, select OK.&lt;/li&gt; 
  &lt;li&gt;On the Security policy blade, select Save.&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt; 
&lt;div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Set security policies in Azure Security Center" url="https://docs.microsoft.com/en-us/azure/security-center/security-center-policies"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;On the Security Center dashboard, select Security policy, and then select your
                            subscription.&lt;/li&gt;
                            &lt;li&gt;Select Prevention policy.&lt;/li&gt;
                            &lt;li&gt;Check that the required policy items are enabled.&amp;nbsp;&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:14.836">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-V05" name="Use Managed disks for virtual machines" issueId="" issueLink="" platform="" cost="0" risk="42" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Migrate BLOB based VHD's to Managed Disks on Virtual Machines to exploit the default features of this configuration. The features include&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Default Disk Encryption&lt;/li&gt;&lt;li&gt;Resilience as Microsoft will managed the disk storage and move around if underlying hardware goes faulty&lt;/li&gt;&lt;li&gt;Reduction of costs over storage accounts&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;Rationale:&lt;/p&gt;&lt;p&gt;Managed disks are by default encrypted on the underlying hardware so no additional encryption is required for basic protection, it is available if additional encryption is required. Managed disks are by design more resilient that storage accounts.&lt;/p&gt;&lt;p&gt;For ARM deployed Virtual Machines, Azure Adviser will at some point recommend moving VHD's to managed disks both from a security and cost management perspective.&lt;/p&gt;&lt;p&gt;Impact:&lt;/p&gt;&lt;p&gt;There is no operational impact of migrating to managed disks other than the benefits mentioned above.&lt;/p&gt;&lt;p&gt;NOTE: When converting to managed disks VMs will be powered off and back on.&lt;/p&gt;&lt;p&gt;Remediation:&lt;/p&gt;&lt;p&gt;&lt;strong&gt;From Azure Console&lt;/strong&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Using the search feature, go to Virtual Machines&lt;/li&gt;&lt;li&gt;Select the virtual machine you would like to convert&lt;/li&gt;&lt;li&gt;Select Disks in the menu for the VM&lt;/li&gt;&lt;li&gt;At the top select Migrate to managed disks&lt;/li&gt;&lt;li&gt;You may follow the prompts to convert the disk and finish by selecting `Migrate' to start the process&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;NOTE VMs will be stopped and restarted after migration is complete.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Using Powershell&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;Stop-AzVM -ResourceGroupName $rgName -Name $vmName -Force ConvertTo-AzVMManagedDisk -ResourceGroupName $rgName -VMName $vmName Start-AzVM -ResourceGroupName $rgName -Name $vmName&lt;/p&gt;&lt;/blockquote&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.1" supportedStandardRef="cis-azure-standard"/>
            <standard ref="7.1" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="GS-1" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;&lt;strong&gt;From Azure Console&lt;/strong&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Using the search feature, go to Virtual Machines&lt;/li&gt;&lt;li&gt;Select Edit columns&lt;/li&gt;&lt;li&gt;Add Uses managed disks to the selected columns&lt;/li&gt;&lt;li&gt;Select Apply&lt;/li&gt;&lt;li&gt;Ensure virtual machine listed are using a managed disk&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;strong&gt;Using Powershell&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;Get-AzVM | ForEach-Object {"Name: " + $_.Name;"ManagedDisk Id: " + $_.StorageProfile.OsDisk.ManagedDisk.Id;""}&lt;/p&gt;&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:14.836">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-N07" name="Use Network Access Control Lists (NACLs) for blacklisting" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Use Network Access Control Lists (NACLs) as a method of blacklisting IP addresses to filters the
                        traffic across endpoints to allow or deny traffic per pre-created rules.&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation: &amp;nbsp;&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                        &lt;li&gt;Select &amp;quot;Network security groups&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Select the Network Security Group (NSG) for your virtual machine and click on &amp;quot;Inbound
                        security rules&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Add a DENY rule that will restrict inbound access from a blacklisted IP address or
                        range to a designated port or port range.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;
                        &lt;ol&gt;
                        &lt;ul&gt;
                        &lt;/ul&gt;
                        &lt;/ol&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - How to open ports to a virtual machine with the Azure portal" url="https://docs.microsoft.com/en-us/azure/virtual-machines/windows/nsg-quickstart-portal"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;Network security groups&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Select the Network Security Group (NSG) for your virtual machine and click on
                            &amp;quot;Inbound security rules&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that there is a rule to deny the inbound access from a blacklisted IP
                            address or range to a designated port or port range.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:14.837">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-N02" name="Use Network Security Groups to block inbound port traffic from 0.0.0.0/0" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Use Network Security Groups (NSG) to filter the ingress/egress network traffic to Azure resources. Set the limit inbound access to all TCP or all ports to avoid undue exposure to risk.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt; 
  &lt;li&gt;Select Network Security Groups.&lt;/li&gt; 
  &lt;li&gt;Choose the NSG to edit (or create a new one).&lt;/li&gt; 
  &lt;li&gt;In "Inbound security rules":&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;ul&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Remove all rules that allow port traffic.&lt;/li&gt; 
   &lt;li&gt;Add a rule to deny port traffic&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/ul&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - How to open ports to a virtual machine with the Azure portal" url="https://docs.microsoft.com/en-us/azure/virtual-machines/windows/nsg-quickstart-portal"/>
          </references>
          <standards>
            <standard ref="6.4" supportedStandardRef="cis-azure-standard"/>
            <standard ref="6.4" supportedStandardRef="cis-azure-standard-level-2"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Network Security Groups.&lt;/li&gt;
                            &lt;li&gt;Choose the NSG to view one of them.&lt;/li&gt;
                            &lt;li&gt;In &amp;quot;Inbound security rules&amp;quot;, check that all the traffic from
                            0.0.0.0/0 is are blocked.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:14.837">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-N04" name="Use Network Security Groups to block ingress to port 22 from 0.0.0.0/0" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Use Network Security Groups (NSG) to filter the ingress/egress network traffic to Azure
                        resources. Set the limit inbound access to port 22 (Secure Desk) to IP addresses that require
                        this access to avoid undue exposure to risk.&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                        &lt;li&gt;Select Network Security Groups.&lt;/li&gt;
                        &lt;li&gt;Choose the NSG to edit (or create a new one).&lt;/li&gt;
                        &lt;li&gt;In &amp;quot;Inbound security rules&amp;quot;:&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ul&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Allow SSH port traffic just to/from IPs that require the access.&lt;/li&gt;
                        &lt;li&gt;Otherwise, remove all rules that allow port 22 traffic.&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/ul&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - How to open ports to a virtual machine with the Azure portal" url="https://docs.microsoft.com/en-us/azure/virtual-machines/windows/nsg-quickstart-portal"/>
          </references>
          <standards>
            <standard ref="6.2" supportedStandardRef="cis-azure-standard"/>
            <standard ref="6.2" supportedStandardRef="cis-azure-standard-level-2"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Network Security Groups.&lt;/li&gt;
                            &lt;li&gt;Choose the NSG to view one of them.&lt;/li&gt;
                            &lt;li&gt;In &amp;quot;Inbound security rules&amp;quot;, check that the traffic through the
                            port 22 is blocked.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:14.837">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-N03" name="Use Network Security Groups to block ingress to port 3389 from 0.0.0.0/0" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Use Network Security Groups (NSG) to filter the ingress/egress network traffic to Azure
                        resources. Set the limit inbound access to port 3389 (Remote Desk Protocol) to IP addresses that
                        require this access to avoid undue exposure to risk.&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                        &lt;li&gt;Select Network Security Groups.&lt;/li&gt;
                        &lt;li&gt;Choose the NSG to edit (or create a new one).&lt;/li&gt;
                        &lt;li&gt;In &amp;quot;Inbound security rules&amp;quot;:&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ul&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Allow RDP port traffic just to/from IPs that require the access.&lt;/li&gt;
                        &lt;li&gt;Otherwise, remove all rules that allow port 3389 traffic.&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/ul&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - How to open ports to a virtual machine with the Azure portal" url="https://docs.microsoft.com/en-us/azure/virtual-machines/windows/nsg-quickstart-portal"/>
          </references>
          <standards>
            <standard ref="6.1" supportedStandardRef="cis-azure-standard"/>
            <standard ref="6.1" supportedStandardRef="cis-azure-standard-level-2"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Network Security Groups.&lt;/li&gt;
                            &lt;li&gt;Choose the NSG to view one of them.&lt;/li&gt;
                            &lt;li&gt;In &amp;quot;Inbound security rules&amp;quot;, check that the traffic through the
                            port 3389 is blocked.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:14.837">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="ACTIVITY LOGS ALERTS" name="Activity Logs alerts" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="UNAUTHORIZED-ACCESS-VIRTUAL-MACHINES" name="Attackers gain undetected access to the system by changing Virtual Machine configurations" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>Attackers can gain undetected access to the virtual machine configurations and these
                                changes couldn't be audited or detected.
                            </desc>
              <riskRating confidentiality="50" integrity="50" availability="25" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-VM02">
                  <countermeasures>
                    <countermeasure ref="AZ-V03" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-V03" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="API LOGGING AND AUDITING" name="API Logging and Auditing" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="UNAUDITABLE-CHANGES-AZURE" name="Attackers make undetected and unaudited changes to system configurations" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>If audit trails are not properly protected, an attacker could gain access to the
                                system, modify the status of resources or exfiltrate sensitive data without being
                                noticed.</desc>
              <riskRating confidentiality="25" integrity="75" availability="25" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-LOGS03">
                  <countermeasures>
                    <countermeasure ref="AZ-V01" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-V01" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="GENERAL" name="General" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="UNCONFIGURED-SECURITY" name="Attackers gain access to the system by exploiting weak security configurations" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>Weak security configurations like using sharing passwords in plain text, using weak passwords, using obsolete encryption algorithms, etc. can lead attackers to gain access to the system.</desc>
              <riskRating confidentiality="75" integrity="50" availability="25" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-VM01">
                  <countermeasures>
                    <countermeasure ref="AZ-V02" mitigation="25"/>
                    <countermeasure ref="AZ-V05" mitigation="25"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-16">
                  <countermeasures>
                    <countermeasure ref="AZ-V07" mitigation="25"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-311">
                  <countermeasures>
                    <countermeasure ref="AZ-V06" mitigation="25"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-V02" mitigation="25"/>
                <countermeasure ref="AZ-V05" mitigation="25"/>
                <countermeasure ref="AZ-V06" mitigation="25"/>
                <countermeasure ref="AZ-V07" mitigation="25"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="NETWORKING" name="Networking" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="UNAUTHORISED-CONNECTION" name="Attackers gain unauthorized connection to the resources" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>Attackers could gain unauthorized connection to the resources through misconfigured
                                ports or security network configurations.
                            </desc>
              <riskRating confidentiality="25" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-NET-01">
                  <countermeasures>
                    <countermeasure ref="AZ-N01" mitigation="20"/>
                    <countermeasure ref="AZ-N02" mitigation="10"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AZURE-NET-02">
                  <countermeasures>
                    <countermeasure ref="AZ-N04" mitigation="10"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AZURE-NET-03">
                  <countermeasures>
                    <countermeasure ref="AZ-N03" mitigation="20"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AZURE-NET-04">
                  <countermeasures>
                    <countermeasure ref="AZ-N07" mitigation="20"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AZURE-NET-05">
                  <countermeasures>
                    <countermeasure ref="AZ-N05" mitigation="20"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-N01" mitigation="20"/>
                <countermeasure ref="AZ-N02" mitigation="10"/>
                <countermeasure ref="AZ-N03" mitigation="20"/>
                <countermeasure ref="AZ-N04" mitigation="10"/>
                <countermeasure ref="AZ-N05" mitigation="20"/>
                <countermeasure ref="AZ-N07" mitigation="20"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="UNAUTHORIZED-CONNECTION" name="Attackers gain unauthorized connection to the resources" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;Attackers could potentially gain unauthorized connection to the resources through misconfigured ports or security network configurations.&lt;/p&gt;</desc>
              <riskRating confidentiality="50" integrity="50" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-NET-01">
                  <countermeasures>
                    <countermeasure ref="AZ-V04" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-V04" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="PATCHING" name="Patching" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="UNAUTHZ-SERVICES-NOT-UPDATE" name="Attackers gain access to the system exploiting a known vulnerability" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;Attackers can gain access to the systems because the security patches for each system have not been applied or the licenses of the products have expired.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-VM-NOT_LICENSE">
                  <countermeasures>
                    <countermeasure ref="AZ-N06" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-N06" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="b45b8d49-c45f-46c9-b73c-28f768d31fd3" diagramComponentId="515f581b-5499-4f9e-8e85-502e914132a7" ref="a7dd8414-04ad-47c0-81ca-8894bffc90d7" name="Generic Client" desc="" library="CS-Default" parentComponentRef="" componentDefinitionRef="generic-client">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="private-secured"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses>
        <weakness ref="CWE-798, CWE-603" name="Client side code stores secret keys, sensitive business logic or other proprietary information" state="0" impact="100" issueId="" issueLink="">
          <desc>When client side code is fully controlled by the user, a malicious user may be able to read the code or reverse engineer it if it is compiled in any form. If the client side code includes secret keys, sensitive business logic (like client authentication) or proprietary information, all of this is directly exposed to the user, allowing them to get the sensitive information or study the business logic with the aim of bypassing it.&amp;nbsp; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Some examples of this vulnerability are:&amp;nbsp; 
 &lt;div&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Performing an authentication on the client side without server side validation.&amp;nbsp;&lt;/li&gt; 
   &lt;li&gt;Making privileged calls from the client based solely on client side conditions (i.e. a cash check on the client side to place an order on an e-commerce platform).&lt;/li&gt; 
   &lt;li&gt;&amp;nbsp;Hard-coding keys and secrets on the client side to make client-to-client calls without a proxy.&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:13.518">
              <output/>
            </source>
            <references>
              <reference name="CWE-602: client-side Enforcement of Server-Side Security" url="https://cwe.mitre.org/data/definitions/602.html"/>
              <reference name="CWE-603: Use of client-side Authentication" url="https://cwe.mitre.org/data/definitions/603.html"/>
            </references>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="lack-automated-vuln-identification" name="Lack of automated vulnerability identification" state="0" impact="100" issueId="" issueLink="">
          <desc>Developmental security testing/evaluation is not enforced during post-design phases of the system development life cycle. Such testing/evaluation is necessary because it confirms that the required security controls are implemented correctly, operating as intended, enforcing the desired security policy, and meeting established security requirements.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:13.346">
              <output/>
            </source>
            <references>
              <reference name="Risk-Based and Functional Security Testing" url="https://www.us-cert.gov/bsi/articles/best-practices/security-testing/risk-based-and-functional-security-testing"/>
            </references>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CWE-311" name="Missing Encryption of Sensitive Data" state="0" impact="100" issueId="" issueLink="">
          <desc>The software does not encrypt sensitive or critical information
                        before storage or transmission.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:13.519">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CWE-312" name="Secrets, API keys and or passwords are included in the source code or online repositories" state="0" impact="100" issueId="" issueLink="">
          <desc>API keys, passwords or secrets included in the source code or in the configuration files can be leaked to users with access to the code. This access can be incidentally granted by publishing the source code on a package-form or an online, public repository.

          The unauthorized access to any of those secrets could lead to a compromise of sensitive data or a system.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:13.518">
              <output/>
            </source>
            <references>
              <reference name="CWE-312: Secrets, API keys and or passwords are included in the source code or online repositories" url="https://cwe.mitre.org/data/definitions/312.html"/>
            </references>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CWE-477" name="Use of Obsolete Function" state="0" impact="75" issueId="" issueLink="">
          <desc>The code uses deprecated or obsolete functions, which suggests that the code has not been actively reviewed or maintained.
&lt;br /&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:13.518">
              <output/>
            </source>
            <references>
              <reference name="CWE-477: Use of Obsolete Function" url="https://cwe.mitre.org/data/definitions/477.html"/>
            </references>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CWE-327" name="Use of a Broken or Risky Cryptographic Algorithm" state="0" impact="100" issueId="" issueLink="">
          <desc>The use of a broken or risky cryptographic algorithm is an unnecessary risk that may result in
                        the exposure of sensitive information.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:13.519">
              <output/>
            </source>
            <references>
              <reference name="CWE-327: Use of a Broken or Risky Cryptographic Algorithm" url="https://cwe.mitre.org/data/definitions/327.html"/>
            </references>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="CWE-319-TRANSPORT" name="Encrypt data between the client and server/service" issueId="" issueLink="" platform="" cost="0" risk="39" state="Recommended" owner="JamesRabe" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Data passed between the client and server should be protected by encryption in transit.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Implement cryptographically strong TLS end-to-end encryption between the client and server, terminating within a secure environment on the server-side.&lt;/li&gt;&lt;li&gt;Consider use of client certificates to prevent interception of (or man-in-the-middle attacks on) the encrypted connection.&lt;/li&gt;&lt;li&gt;Alternatively, asymmetric (public-key) encryption could be utilized and a recognized, proven, and tested implementation/library should be used&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA AC-03 Access Enforcement" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/25-08_02_AC-03"/>
            <reference name="OSA AC-06 Least Privilege" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/28-08_02_AC-06"/>
            <reference name="OSA AC-14 Permitted Actions Without Identification Or Authentication" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/38-08_02_AC-14"/>
            <reference name="OSA AC-16 Automated Labeling" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/198-08_02_AC-16"/>
            <reference name="OSA SC-08 Transmission Integrity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/68-08_02_SC-08"/>
            <reference name="OSA SC-13 Use Of Cryptography" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/73-08_02_SC-13"/>
          </references>
          <standards>
            <standard ref="1.9.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="1.9.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="13.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="13.2.6" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="13.2.6" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="164.312(a)(1)(D)" supportedStandardRef="hipaa-addressable"/>
            <standard ref="164.312(e)(1)(A)" supportedStandardRef="hipaa-addressable"/>
            <standard ref="5.1" supportedStandardRef="OWASP-MASVS-L1"/>
            <standard ref="5.1" supportedStandardRef="OWASP-MASVS-L1+R"/>
            <standard ref="5.1" supportedStandardRef="OWASP-MASVS-L2"/>
            <standard ref="5.1" supportedStandardRef="OWASP-MASVS-L2+R"/>
            <standard ref="9.1.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="9.1.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="9.1.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="9.2.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="9.2.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="9.2.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="9.2.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="9.2.4" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="9.4.3" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="AC-14" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AC-14" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AC-14" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AC-14" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-16" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-3" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AC-3" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AC-3" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AC-3" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-6" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AC-6" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AC-6" supportedStandardRef="NIST 800-53"/>
            <standard ref="PR.AC-4" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-6" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-7" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-2" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-5" supportedStandardRef="nist-csf"/>
            <standard ref="PR.PT-3" supportedStandardRef="nist-csf"/>
            <standard ref="SC-13" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="SC-13" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="SC-13" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="SC-13" supportedStandardRef="NIST 800-53"/>
            <standard ref="SC-8" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="SC-8" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="SC-8" supportedStandardRef="NIST 800-53"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Check client to server connections use and enforce established encryption protocols, e.g. TLSv1.2.&lt;br&gt;&amp;nbsp;&lt;/li&gt;&lt;li&gt;Verify only strong cipher suites are in use and permitted.&lt;/li&gt;&lt;li&gt;Ensure attempts to use unencrypted transport mechanisms are rejected or redirected (e.g. HTTP instead of HTTPS)&lt;/li&gt;&lt;li&gt;Review configuration of protocols and services against best-practice guidelines.&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:13.432">
              <output/>
            </source>
            <references>
              <reference name="Server Side TLS Configuration" url="https://wiki.mozilla.org/Security/Server_Side_TLS"/>
            </references>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="INS-CLIENT" name="Ensure the application does not use unsupported, insecure, or deprecated client-side technologies" issueId="" issueLink="" platform="" cost="0" risk="35" state="Recommended" owner="JamesRabe" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Ensure the application does not use unsupported, insecure, or deprecated client-side technologies such as: NSAPI plugins, Flash, Shockwave, ActiveX, Silverlight, NACL, or client-side Java applets.&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1.14.6" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="1.14.6" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ul&gt;
 &lt;li&gt;Test the presence of any client side applet such as Flash, ActiveX and Silverlight.&lt;/li&gt;
&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:13.433">
              <output/>
            </source>
            <references>
              <reference name="Testing Information Gathering" url="https://www.owasp.org/index.php/Testing_Information_Gathering"/>
            </references>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CS-CLIENT-SECRET" name="Implement sensitive logic and data validation on the server-side" issueId="" issueLink="" platform="" cost="1" risk="49" state="Recommended" owner="JamesRabe" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;All data and functionalities on the client-side must be considered tainted and subject to manipulation by a malicious actor, regardless of the controls in place (e.g. encryption or obfuscation of client-side code or content). &lt;/p&gt; This includes application logic decisions, such as access controls, and data considered sensitive or secret, such as encryption keys. While controls may be duplicated on the client-side to improve the user experience, it is important to have these enforced on the server-side.&amp;nbsp; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Business logic, in particular access controls, must be implemented on the server-side.&lt;/li&gt; 
  &lt;li&gt;Secret data should be stored on the server-side, and only what is explicitly required should be duplicated on the client-side.&amp;nbsp;&lt;/li&gt; 
 &lt;/ul&gt;All data provided from the client-side (even from binary clients) should be considered tainted, and security decisions should not be made solely on this data. For example, an insecure implementation could include a compiled application (e.g. Flash!) performing authentication on the client-side against a stored password. The decompilation of the binary (in this case flv file) or the interception and modification of controls between the client and server could expose the password or allow unauthorized access to the authenticated application content. 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA AC-01 Access Control Policies and Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/23-08_02_AC-01"/>
            <reference name="OSA SI-10 Information Accuracy, Completeness, Validity, And Authenticity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/48-08_02_SI-10"/>
            <reference name="OWASP Juice Shop: Broken Access Control" url="https://pwning.owasp-juice.shop/part2/broken-access-control.html"/>
            <reference name="OWASP Juice Shop: Injection" url="https://pwning.owasp-juice.shop/part2/injection.html"/>
          </references>
          <standards>
            <standard ref="12.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="2.4.11.7" supportedStandardRef="iotsf-class-0"/>
            <standard ref="2.4.11.7" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.11.7" supportedStandardRef="iotsf-class-2"/>
            <standard ref="4.1.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="4.1.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="4.1.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="A01:2021-Broken Access Control" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A03:2021-Injection" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A1:2017-Injection" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="A5:2017-Broken Access Control" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="AC-1" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AC-1" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AC-1" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AC-1" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-24" supportedStandardRef="NIST 800-53"/>
            <standard ref="ID.GV-1" supportedStandardRef="nist-csf"/>
            <standard ref="ID.GV-3" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-1" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-3" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-4" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-6" supportedStandardRef="nist-csf"/>
            <standard ref="SI-10" supportedStandardRef="NIST 800-53"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Identify where critical decisions are made on the application. Key areas include:&amp;nbsp;&lt;/li&gt; 
 &lt;ul&gt; 
  &lt;li&gt;authentication&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;input validation&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;access to resources&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;state bypasses&amp;nbsp;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;li&gt;Ensure those decisions are made or validated on the server side, particularly where client-side controls are implemented.&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;Verify that sensitive data passed to the client side is appropriate, and ensure no inappropriate data is stored or hard-coded into client-side components, for example&amp;nbsp;&lt;/li&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Personally Identifiable Information.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Financial data, in particular cardholder data (as defined by the &lt;span class="caps"&gt;PCI&lt;/span&gt; Council).&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Application secrets - such as symmetric encryption keys or passwords.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:13.432">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CSD-CLIENT-SECRET" name="Review code, configuration, and online repositories for secrets and sensitive information systemically" issueId="" issueLink="" platform="" cost="0" risk="49" state="Recommended" owner="JamesRabe" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Secret or sensitive information should not be exposed in source-code or client-side software.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Code and online repositories must not contain secrets or sensitive information.&lt;/li&gt;&lt;li&gt;Configuration files on the client- and server-side must not contain hard-coded credentials or other sensitive data.&lt;/li&gt;&lt;li&gt;Online repositories, services, and other associated restricted content must have appropriate access controls in place.&lt;/li&gt;&lt;li&gt;Where sensitive information must be stored on the server side, it should be in memory for transient data, or encrypted if persistent. &amp;nbsp;Depending on the use case, this encryption may be asymmetric or public key, or symmetric using a shared secret. Note however that reversible encryption on the client-side and in-memory storage are still susceptible to client-side attacks.&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="10.1.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="2.10.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.10.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="AU-13" supportedStandardRef="NIST 800-53"/>
            <standard ref="DE.CM-3" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Use automated tools to regularly search for keywords or regular expression patterns within the code, configuration and other files exposed on the client and server-side, and any remote repositories.&lt;/li&gt;&lt;li&gt;The scanning process must be triggered before the code is published (in particular for public/open source code) as once published it is likely to be archived (and any disclosed secrets would be exposed and/or have to be changed)&lt;/li&gt;&lt;li&gt;Review criteria and requirements for any temporary or persistent storage of sensitive or secret data on the client-side, and the protections in place.&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:13.432">
              <output/>
            </source>
            <references>
              <reference name="Microsoft Exchange 2016 Sensitive Information Patterns" url="https://technet.microsoft.com/en-us/library/jj150541(v=exchg.160).aspx"/>
              <reference name="Prevents you from committing secrets and credentials into git repositories" url="https://github.com/awslabs/git-secrets"/>
              <reference name="Seekret" url="https://github.com/apuigsech/seekret"/>
            </references>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="use-analysis-static-code" name="Scan the code with static code analysis tools" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="JamesRabe" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Use periodically a static code analysis tool to analyze the code and detect potentially malicious code, such as time functions, unsafe file operations and networks connections. With the scanning of static code, we ensure the integrity of the application. 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="10.1.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="10.2.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="10.2.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="10.2.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="10.2.6" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Verify that a code analysis tool is in use and it is configured to detect potentially malicious code, such as time functions, unsafe file operations and network connections. 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:13.317">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="secure-communication-ra-and-csp" name="Use secure communication between CSP and RA" issueId="" issueLink="" platform="" cost="0" risk="39" state="Recommended" owner="JamesRabe" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;In situations where the verifier and CSP are separate entities, communications between RA (Registration Authority) and CSP (Credential Service Provider), should be authenticated with a mutually-authenticated secure channel, such as a client-authenticated TLS connection, using approved cryptographic algorithms.&lt;/p&gt;
&lt;p&gt;NIST's digital identity model involves some entities:&lt;/p&gt;
&lt;p&gt;- CSP (Credential Service Provider): A credential service provider is a trusted entity that issues security tokens or electronic credentials to subscribers. A CSP forms part of an authentication system, most typically identified as a separate entity in a Federated authentication system. A CSP may be an independent third party, or may issue credentials for its own use. Credential Service Provider is typically also the Identity Provider (IDP). An example of a CSP would be an online site whose primary purpose may be, for example, internet banking - but whose users may be subsequently authenticated to other sites, applications or services without further action on their part.&lt;/p&gt;
&lt;p&gt;- Registration Authority (RA): A trusted entity that establishes and vouches for the identity of a subscriber to a CSP. The RA may be an integral part of a CSP, or it may be independent of a CSP, but it has a relationship to the CSP.&lt;/p&gt;
&lt;p&gt;- Verifier: This refers to an entity that verifies the claimant's identity by verifying the claimant's possession and control of one or two authenticators, using an authentication protocol.&lt;/p&gt;
&lt;p&gt;- RP (Relying party): This refers to an entity that relies on the subscriber's authenticator(s) and credentials or a verifier's assertion of a claimant's identity, typically to process a transaction or grant access to information or a system.&lt;/p&gt;
&lt;p&gt;- Applicant: This refers to a subject undergoing the processes of enrollment and identity proofing.&lt;/p&gt;
&lt;p&gt;- Claimant: This refers to a subject whose identity is to be verified using one or more authentication protocols.&lt;/p&gt;
&lt;p&gt;- Subscriber: This refers to a party who has received a credential or an authenticator from a CSP.&amp;nbsp;&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="NIST 800-63-1" url="https://csrc.nist.rip/groups/SMA/forum/documents/feb2012_nist-sp-800-63-1_newton-perlner.pdf"/>
            <reference name="NIST 800-63C" url="https://pages.nist.gov/800-63-3/sp800-63c.html"/>
          </references>
          <standards>
            <standard ref="2.2.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.6" supportedStandardRef="nist-800-63"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Verify the CSP and RA communicate securely with a secure channel, for example with TLS.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:13.433">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CWE-295-CLIENT" name="Validate the certificate presented by the server" issueId="" issueLink="" platform="" cost="0" risk="39" state="Recommended" owner="JamesRabe" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Certificates presented by the server must be valid, provable, and cryptographically secure in order to derive the benefits of TLS encrypted communications.&amp;nbsp; Invalid certificates expose the application and its users to spoofing attacks such as Man In The Middle (MITM) where data may be intercepted or redirected to a malicious site, and undermine confidence in the site.&lt;/p&gt;&lt;p&gt;Validate the certificate presented by the server is signed by a trusted Certificate Authority.&lt;/p&gt;&lt;p&gt;Ensure the certificate chain of trust is legitimate and secure.&lt;/p&gt;&lt;p&gt;Verify cryptographically secure ciphers are in use throughout the chain, in particular strong hashing algorithms for certificate signatures.&amp;nbsp;&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA SC-11 Trusted Path" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/71-08_02_SC-11"/>
            <reference name="OSA SC-17 Public Key Infrastructure Certificates" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/77-08_02_SC-17"/>
          </references>
          <standards>
            <standard ref="1.9.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="1.9.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="13.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="164.312(e)(1)(B)" supportedStandardRef="hipaa-addressable"/>
            <standard ref="9.2.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="9.2.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="PR.DS-2" supportedStandardRef="nist-csf"/>
            <standard ref="SC-11" supportedStandardRef="NIST 800-53"/>
            <standard ref="SC-17" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="SC-17" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="SC-17" supportedStandardRef="NIST 800-53"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Verify the client is conducting appropriate checks and receives a positive response regarding the validity and quality of the site certificate.&lt;/li&gt;&lt;li&gt;Use TLS analysis tools to check and rate the server security, for example:&lt;ol&gt;&lt;li&gt;SSL Labs SSL Server Test:&amp;nbsp;https://www.ssllabs.com/ssltest/&lt;/li&gt;&lt;li&gt;sslscan tool: https://github.com/rbsec/sslscan&lt;/li&gt;&lt;li&gt;testssh.sh tool: https://github.com/drwetter/testssl.sh&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;Remediate all security issues and warnings relating to the server certificate, and those in the trust chain.&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:13.432">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CWE-327" name="Validate the TLS implementation in use" issueId="" issueLink="" platform="" cost="0" risk="39" state="Recommended" owner="JamesRabe" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;There are a number of established open- and closed- source TLS implementations in use, which have undergone extensive review and testing by the developers, as well as third-parties in the development, security, and cryptography space. Typically, these widely used implementations have a lower risk of exploitation compared with privately developed - or less known - implementations (although vulnerabilities such as Heartbleed highlight this is not universally true) due to this additional scrutiny scrutiny.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Identify the TLS and other cryptographic libraries, implementations, and technologies in use.&lt;/li&gt;&lt;li&gt;Verify the veracity of the implementations, and review third party validations together with security advisories or best-practices relating to them.&lt;/li&gt;&lt;li&gt;Some well-known TLS libraries are NSS from Mozilla, and OpenSSL.&lt;/li&gt;&lt;li&gt;Where an unknown or unproven implementation is in use, consider use of an established option.&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="Mozilla SSL Config" url="https://ssl-config.mozilla.org/"/>
            <reference name="OSA SC-08 Transmission Integrity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/68-08_02_SC-08"/>
            <reference name="Server Side TLS Configuration" url="https://wiki.mozilla.org/Security/Server_Side_TLS"/>
          </references>
          <standards>
            <standard ref="13.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="164.312(e)(1)(B)" supportedStandardRef="hipaa-addressable"/>
            <standard ref="9.1.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="9.1.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="9.1.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="PR.DS-2" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-5" supportedStandardRef="nist-csf"/>
            <standard ref="SC-8" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="SC-8" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="SC-8" supportedStandardRef="NIST 800-53"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Confirm the TLS layer in use is a secure, stable, release of a publicly published implementation that has been subject to expert analysis and review.&lt;ul&gt;&lt;li&gt;If not, assurance of the security of the implementation should be sought, or the risk quantified.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Verify that a client connecting to the server will only be able to negotiate cryptographically strong, secure ciphers.&lt;/li&gt;&lt;li&gt;Confirm that a client can not downgrade to a weaker cipher after initial negotiation.&lt;/li&gt;&lt;li&gt;Use TLS analysis tools to check and rate the server security, for example:&lt;ol&gt;&lt;li&gt;SSL Labs SSL Server Test:&amp;nbsp;https://www.ssllabs.com/ssltest/&lt;/li&gt;&lt;li&gt;sslscan tool: https://github.com/rbsec/sslscan&lt;/li&gt;&lt;li&gt;testssh.sh tool: https://github.com/drwetter/testssl.sh&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;Remediate all security issues and warnings relating to the TLS/SSL ciphers, protocols, and security mechanisms.&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:13.432">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="GENERAL" name="General" desc="" library="CS-Default">
          <threats>
            <threat ref="sec-vuln-dev-process" name="Application contains security vulnerabilities not identified during the development process" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="CS-Default" editable="true">
              <desc>Application security should be embedded into a project's development environment, allowing developers to monitor their code regularly in order to avoid security vulnerabilities when the application is deployed in the production environment.</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references>
                <reference name="NIST Security Considerations in the System Development Life Cycle" url="https://csrc.nist.gov/publications/detail/sp/800-64/rev-2/archive/2008-10-16"/>
                <reference name="Risk-Based and Functional Security Testing" url="https://www.us-cert.gov/bsi/articles/best-practices/security-testing/risk-based-and-functional-security-testing"/>
              </references>
              <weaknesses>
                <weakness ref="lack-automated-vuln-identification">
                  <countermeasures>
                    <countermeasure ref="use-analysis-static-code" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="use-analysis-static-code" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="CSD-CLIENT-SECRET" name="Attackers gain unauthorised access to data or services by accessing a client side secret" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="CS-Default" editable="true">
              <desc>Secrets stored in any client side components, such as a mobile application, thick
                                client application or in JavaScript used by a browser, can be accessed by
                                users/attackers who have access to this client.
                                &lt;div&gt;
                                &lt;br /&gt;
                                &lt;/div&gt;
                                &lt;div&gt;
                                Attackers could then gain access to the data or services that are protected by this
                                secret, if no other credentials are required.
                                &lt;/div&gt;
                            </desc>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-312">
                  <countermeasures>
                    <countermeasure ref="CSD-CLIENT-SECRET" mitigation="50"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-798, CWE-603">
                  <countermeasures>
                    <countermeasure ref="CS-CLIENT-SECRET" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CS-CLIENT-SECRET" mitigation="50"/>
                <countermeasure ref="CSD-CLIENT-SECRET" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="DEP-CLIENT-TECH" name="Attackers gain unauthorised access to the application by the use of deprecated client-side technologies" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="CS-Default" editable="true">
              <desc>&lt;div&gt;
  As programming languages evolve, functions occasionally become obsolete due to:
&lt;/div&gt;
&lt;ul&gt;
 &lt;li&gt;Advances in the language.&lt;/li&gt;
 &lt;li&gt;Improved understanding of how operations should be performed effectively and securely.&lt;/li&gt;
 &lt;li&gt;Changes in the conventions that govern certain operations. &lt;/li&gt;
&lt;/ul&gt;
&lt;br /&gt;Functions that are removed are usually replaced by newer counterparts that perform the same task in some different and hopefully improved way.
&lt;br /&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-477">
                  <countermeasures>
                    <countermeasure ref="INS-CLIENT" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="INS-CLIENT" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="READ OR POST DATA" name="Read or Post data" desc="" library="CS-Default">
          <threats>
            <threat ref="NTW-MITM" name="Attackers could gain access to sensitive data through a man in the middle attack" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="CS-Default" editable="true">
              <desc>&lt;p&gt;This type of attack targets the communication between two components (typically client and server). The attacker places himself in the communication channel between the two components. Whenever one component attempts to communicate with the other (data flow, authentication challenges, etc.), the data first goes to the attacker, who has the opportunity to observe or alter it, and it is then passed to the other component as if it were never intercepted. This interposition is transparent leaving the two compromised components unaware of the potential corruption or leakage of their communications. The potential for Man-in-the-Middle attacks yields an implicit lack of trust in communication or identity between two components.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-311">
                  <countermeasures>
                    <countermeasure ref="CWE-295-CLIENT" mitigation="25"/>
                    <countermeasure ref="CWE-319-TRANSPORT" mitigation="25"/>
                    <countermeasure ref="secure-communication-ra-and-csp" mitigation="25"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-327">
                  <countermeasures>
                    <countermeasure ref="CWE-327" mitigation="25"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CWE-295-CLIENT" mitigation="25"/>
                <countermeasure ref="CWE-319-TRANSPORT" mitigation="25"/>
                <countermeasure ref="CWE-327" mitigation="25"/>
                <countermeasure ref="secure-communication-ra-and-csp" mitigation="25"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="3d90cf5d-5b27-4fa7-b439-2fe7a98e8c2e" diagramComponentId="5319fe47-9f18-40bb-8967-640d8ec4412a" ref="2fc3685e-bba6-4420-be25-aa55eefc56bd" name="Generic Client" desc="" library="CS-Default" parentComponentRef="9a93e3e4-9c1d-4105-a6c4-a8a8dd9baf25" componentDefinitionRef="generic-client">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="internet"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses>
        <weakness ref="CWE-798, CWE-603" name="Client side code stores secret keys, sensitive business logic or other proprietary information" state="0" impact="100" issueId="" issueLink="">
          <desc>When client side code is fully controlled by the user, a malicious user may be able to read the code or reverse engineer it if it is compiled in any form. If the client side code includes secret keys, sensitive business logic (like client authentication) or proprietary information, all of this is directly exposed to the user, allowing them to get the sensitive information or study the business logic with the aim of bypassing it.&amp;nbsp; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Some examples of this vulnerability are:&amp;nbsp; 
 &lt;div&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Performing an authentication on the client side without server side validation.&amp;nbsp;&lt;/li&gt; 
   &lt;li&gt;Making privileged calls from the client based solely on client side conditions (i.e. a cash check on the client side to place an order on an e-commerce platform).&lt;/li&gt; 
   &lt;li&gt;&amp;nbsp;Hard-coding keys and secrets on the client side to make client-to-client calls without a proxy.&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:14.610">
              <output/>
            </source>
            <references>
              <reference name="CWE-602: client-side Enforcement of Server-Side Security" url="https://cwe.mitre.org/data/definitions/602.html"/>
              <reference name="CWE-603: Use of client-side Authentication" url="https://cwe.mitre.org/data/definitions/603.html"/>
            </references>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="lack-automated-vuln-identification" name="Lack of automated vulnerability identification" state="0" impact="100" issueId="" issueLink="">
          <desc>Developmental security testing/evaluation is not enforced during post-design phases of the system development life cycle. Such testing/evaluation is necessary because it confirms that the required security controls are implemented correctly, operating as intended, enforcing the desired security policy, and meeting established security requirements.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:14.434">
              <output/>
            </source>
            <references>
              <reference name="Risk-Based and Functional Security Testing" url="https://www.us-cert.gov/bsi/articles/best-practices/security-testing/risk-based-and-functional-security-testing"/>
            </references>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CWE-311" name="Missing Encryption of Sensitive Data" state="0" impact="100" issueId="" issueLink="">
          <desc>The software does not encrypt sensitive or critical information
                        before storage or transmission.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:14.610">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CWE-312" name="Secrets, API keys and or passwords are included in the source code or online repositories" state="0" impact="100" issueId="" issueLink="">
          <desc>API keys, passwords or secrets included in the source code or in the configuration files can be leaked to users with access to the code. This access can be incidentally granted by publishing the source code on a package-form or an online, public repository.

          The unauthorized access to any of those secrets could lead to a compromise of sensitive data or a system.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:14.610">
              <output/>
            </source>
            <references>
              <reference name="CWE-312: Secrets, API keys and or passwords are included in the source code or online repositories" url="https://cwe.mitre.org/data/definitions/312.html"/>
            </references>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CWE-477" name="Use of Obsolete Function" state="0" impact="75" issueId="" issueLink="">
          <desc>The code uses deprecated or obsolete functions, which suggests that the code has not been actively reviewed or maintained.
&lt;br /&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:14.609">
              <output/>
            </source>
            <references>
              <reference name="CWE-477: Use of Obsolete Function" url="https://cwe.mitre.org/data/definitions/477.html"/>
            </references>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CWE-327" name="Use of a Broken or Risky Cryptographic Algorithm" state="0" impact="100" issueId="" issueLink="">
          <desc>The use of a broken or risky cryptographic algorithm is an unnecessary risk that may result in
                        the exposure of sensitive information.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:14.610">
              <output/>
            </source>
            <references>
              <reference name="CWE-327: Use of a Broken or Risky Cryptographic Algorithm" url="https://cwe.mitre.org/data/definitions/327.html"/>
            </references>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="CWE-319-TRANSPORT" name="Encrypt data between the client and server/service" issueId="" issueLink="" platform="" cost="0" risk="68" state="Recommended" owner="JamesRabe" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Data passed between the client and server should be protected by encryption in transit.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Implement cryptographically strong TLS end-to-end encryption between the client and server, terminating within a secure environment on the server-side.&lt;/li&gt;&lt;li&gt;Consider use of client certificates to prevent interception of (or man-in-the-middle attacks on) the encrypted connection.&lt;/li&gt;&lt;li&gt;Alternatively, asymmetric (public-key) encryption could be utilized and a recognized, proven, and tested implementation/library should be used&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA AC-03 Access Enforcement" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/25-08_02_AC-03"/>
            <reference name="OSA AC-06 Least Privilege" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/28-08_02_AC-06"/>
            <reference name="OSA AC-14 Permitted Actions Without Identification Or Authentication" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/38-08_02_AC-14"/>
            <reference name="OSA AC-16 Automated Labeling" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/198-08_02_AC-16"/>
            <reference name="OSA SC-08 Transmission Integrity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/68-08_02_SC-08"/>
            <reference name="OSA SC-13 Use Of Cryptography" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/73-08_02_SC-13"/>
          </references>
          <standards>
            <standard ref="1.9.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="1.9.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="13.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="13.2.6" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="13.2.6" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="164.312(a)(1)(D)" supportedStandardRef="hipaa-addressable"/>
            <standard ref="164.312(e)(1)(A)" supportedStandardRef="hipaa-addressable"/>
            <standard ref="5.1" supportedStandardRef="OWASP-MASVS-L1"/>
            <standard ref="5.1" supportedStandardRef="OWASP-MASVS-L1+R"/>
            <standard ref="5.1" supportedStandardRef="OWASP-MASVS-L2"/>
            <standard ref="5.1" supportedStandardRef="OWASP-MASVS-L2+R"/>
            <standard ref="9.1.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="9.1.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="9.1.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="9.2.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="9.2.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="9.2.3" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="9.2.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="9.2.4" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="9.4.3" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="AC-14" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AC-14" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AC-14" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AC-14" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-16" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-3" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AC-3" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AC-3" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AC-3" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-6" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AC-6" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AC-6" supportedStandardRef="NIST 800-53"/>
            <standard ref="PR.AC-4" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-6" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-7" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-2" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-5" supportedStandardRef="nist-csf"/>
            <standard ref="PR.PT-3" supportedStandardRef="nist-csf"/>
            <standard ref="SC-13" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="SC-13" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="SC-13" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="SC-13" supportedStandardRef="NIST 800-53"/>
            <standard ref="SC-8" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="SC-8" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="SC-8" supportedStandardRef="NIST 800-53"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Check client to server connections use and enforce established encryption protocols, e.g. TLSv1.2.&lt;br&gt;&amp;nbsp;&lt;/li&gt;&lt;li&gt;Verify only strong cipher suites are in use and permitted.&lt;/li&gt;&lt;li&gt;Ensure attempts to use unencrypted transport mechanisms are rejected or redirected (e.g. HTTP instead of HTTPS)&lt;/li&gt;&lt;li&gt;Review configuration of protocols and services against best-practice guidelines.&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:14.521">
              <output/>
            </source>
            <references>
              <reference name="Server Side TLS Configuration" url="https://wiki.mozilla.org/Security/Server_Side_TLS"/>
            </references>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="INS-CLIENT" name="Ensure the application does not use unsupported, insecure, or deprecated client-side technologies" issueId="" issueLink="" platform="" cost="0" risk="60" state="Recommended" owner="JamesRabe" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Ensure the application does not use unsupported, insecure, or deprecated client-side technologies such as: NSAPI plugins, Flash, Shockwave, ActiveX, Silverlight, NACL, or client-side Java applets.&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1.14.6" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="1.14.6" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ul&gt;
 &lt;li&gt;Test the presence of any client side applet such as Flash, ActiveX and Silverlight.&lt;/li&gt;
&lt;/ul&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:14.521">
              <output/>
            </source>
            <references>
              <reference name="Testing Information Gathering" url="https://www.owasp.org/index.php/Testing_Information_Gathering"/>
            </references>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CS-CLIENT-SECRET" name="Implement sensitive logic and data validation on the server-side" issueId="" issueLink="" platform="" cost="1" risk="73" state="Recommended" owner="JamesRabe" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;All data and functionalities on the client-side must be considered tainted and subject to manipulation by a malicious actor, regardless of the controls in place (e.g. encryption or obfuscation of client-side code or content). &lt;/p&gt; This includes application logic decisions, such as access controls, and data considered sensitive or secret, such as encryption keys. While controls may be duplicated on the client-side to improve the user experience, it is important to have these enforced on the server-side.&amp;nbsp; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Business logic, in particular access controls, must be implemented on the server-side.&lt;/li&gt; 
  &lt;li&gt;Secret data should be stored on the server-side, and only what is explicitly required should be duplicated on the client-side.&amp;nbsp;&lt;/li&gt; 
 &lt;/ul&gt;All data provided from the client-side (even from binary clients) should be considered tainted, and security decisions should not be made solely on this data. For example, an insecure implementation could include a compiled application (e.g. Flash!) performing authentication on the client-side against a stored password. The decompilation of the binary (in this case flv file) or the interception and modification of controls between the client and server could expose the password or allow unauthorized access to the authenticated application content. 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA AC-01 Access Control Policies and Procedures" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/23-08_02_AC-01"/>
            <reference name="OSA SI-10 Information Accuracy, Completeness, Validity, And Authenticity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/48-08_02_SI-10"/>
            <reference name="OWASP Juice Shop: Broken Access Control" url="https://pwning.owasp-juice.shop/part2/broken-access-control.html"/>
            <reference name="OWASP Juice Shop: Injection" url="https://pwning.owasp-juice.shop/part2/injection.html"/>
          </references>
          <standards>
            <standard ref="12.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="2.4.11.7" supportedStandardRef="iotsf-class-0"/>
            <standard ref="2.4.11.7" supportedStandardRef="iotsf-class-1"/>
            <standard ref="2.4.11.7" supportedStandardRef="iotsf-class-2"/>
            <standard ref="4.1.1" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="4.1.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="4.1.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="A01:2021-Broken Access Control" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A03:2021-Injection" supportedStandardRef="owasp-top-10-2021"/>
            <standard ref="A1:2017-Injection" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="A5:2017-Broken Access Control" supportedStandardRef="owasp-top-10-2017"/>
            <standard ref="AC-1" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="AC-1" supportedStandardRef="fedramp-low-baseline"/>
            <standard ref="AC-1" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="AC-1" supportedStandardRef="NIST 800-53"/>
            <standard ref="AC-24" supportedStandardRef="NIST 800-53"/>
            <standard ref="ID.GV-1" supportedStandardRef="nist-csf"/>
            <standard ref="ID.GV-3" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-1" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-3" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-4" supportedStandardRef="nist-csf"/>
            <standard ref="PR.AC-6" supportedStandardRef="nist-csf"/>
            <standard ref="SI-10" supportedStandardRef="NIST 800-53"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;&lt;/p&gt; 
&lt;ul&gt; 
 &lt;li&gt;Identify where critical decisions are made on the application. Key areas include:&amp;nbsp;&lt;/li&gt; 
 &lt;ul&gt; 
  &lt;li&gt;authentication&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;input validation&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;access to resources&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;state bypasses&amp;nbsp;&lt;/li&gt; 
 &lt;/ul&gt; 
 &lt;li&gt;Ensure those decisions are made or validated on the server side, particularly where client-side controls are implemented.&amp;nbsp;&lt;/li&gt; 
 &lt;li&gt;Verify that sensitive data passed to the client side is appropriate, and ensure no inappropriate data is stored or hard-coded into client-side components, for example&amp;nbsp;&lt;/li&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Personally Identifiable Information.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Financial data, in particular cardholder data (as defined by the &lt;span class="caps"&gt;PCI&lt;/span&gt; Council).&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Application secrets - such as symmetric encryption keys or passwords.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/ul&gt; 
&lt;p&gt;&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:14.520">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CSD-CLIENT-SECRET" name="Review code, configuration, and online repositories for secrets and sensitive information systemically" issueId="" issueLink="" platform="" cost="0" risk="73" state="Recommended" owner="JamesRabe" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Secret or sensitive information should not be exposed in source-code or client-side software.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Code and online repositories must not contain secrets or sensitive information.&lt;/li&gt;&lt;li&gt;Configuration files on the client- and server-side must not contain hard-coded credentials or other sensitive data.&lt;/li&gt;&lt;li&gt;Online repositories, services, and other associated restricted content must have appropriate access controls in place.&lt;/li&gt;&lt;li&gt;Where sensitive information must be stored on the server side, it should be in memory for transient data, or encrypted if persistent. &amp;nbsp;Depending on the use case, this encryption may be asymmetric or public key, or symmetric using a shared secret. Note however that reversible encryption on the client-side and in-memory storage are still susceptible to client-side attacks.&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="10.1.2" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="2.10.4" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="2.10.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="AU-13" supportedStandardRef="NIST 800-53"/>
            <standard ref="DE.CM-3" supportedStandardRef="nist-csf"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Use automated tools to regularly search for keywords or regular expression patterns within the code, configuration and other files exposed on the client and server-side, and any remote repositories.&lt;/li&gt;&lt;li&gt;The scanning process must be triggered before the code is published (in particular for public/open source code) as once published it is likely to be archived (and any disclosed secrets would be exposed and/or have to be changed)&lt;/li&gt;&lt;li&gt;Review criteria and requirements for any temporary or persistent storage of sensitive or secret data on the client-side, and the protections in place.&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:14.521">
              <output/>
            </source>
            <references>
              <reference name="Microsoft Exchange 2016 Sensitive Information Patterns" url="https://technet.microsoft.com/en-us/library/jj150541(v=exchg.160).aspx"/>
              <reference name="Prevents you from committing secrets and credentials into git repositories" url="https://github.com/awslabs/git-secrets"/>
              <reference name="Seekret" url="https://github.com/apuigsech/seekret"/>
            </references>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="use-analysis-static-code" name="Scan the code with static code analysis tools" issueId="" issueLink="" platform="" cost="0" risk="78" state="Recommended" owner="JamesRabe" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Use periodically a static code analysis tool to analyze the code and detect potentially malicious code, such as time functions, unsafe file operations and networks connections. With the scanning of static code, we ensure the integrity of the application. 
&lt;/div&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="10.1.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="10.2.3" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="10.2.4" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="10.2.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="10.2.6" supportedStandardRef="owasp-asvs4-level-3"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Verify that a code analysis tool is in use and it is configured to detect potentially malicious code, such as time functions, unsafe file operations and network connections. 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:14.399">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="secure-communication-ra-and-csp" name="Use secure communication between CSP and RA" issueId="" issueLink="" platform="" cost="0" risk="68" state="Recommended" owner="JamesRabe" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;In situations where the verifier and CSP are separate entities, communications between RA (Registration Authority) and CSP (Credential Service Provider), should be authenticated with a mutually-authenticated secure channel, such as a client-authenticated TLS connection, using approved cryptographic algorithms.&lt;/p&gt;
&lt;p&gt;NIST's digital identity model involves some entities:&lt;/p&gt;
&lt;p&gt;- CSP (Credential Service Provider): A credential service provider is a trusted entity that issues security tokens or electronic credentials to subscribers. A CSP forms part of an authentication system, most typically identified as a separate entity in a Federated authentication system. A CSP may be an independent third party, or may issue credentials for its own use. Credential Service Provider is typically also the Identity Provider (IDP). An example of a CSP would be an online site whose primary purpose may be, for example, internet banking - but whose users may be subsequently authenticated to other sites, applications or services without further action on their part.&lt;/p&gt;
&lt;p&gt;- Registration Authority (RA): A trusted entity that establishes and vouches for the identity of a subscriber to a CSP. The RA may be an integral part of a CSP, or it may be independent of a CSP, but it has a relationship to the CSP.&lt;/p&gt;
&lt;p&gt;- Verifier: This refers to an entity that verifies the claimant's identity by verifying the claimant's possession and control of one or two authenticators, using an authentication protocol.&lt;/p&gt;
&lt;p&gt;- RP (Relying party): This refers to an entity that relies on the subscriber's authenticator(s) and credentials or a verifier's assertion of a claimant's identity, typically to process a transaction or grant access to information or a system.&lt;/p&gt;
&lt;p&gt;- Applicant: This refers to a subject undergoing the processes of enrollment and identity proofing.&lt;/p&gt;
&lt;p&gt;- Claimant: This refers to a subject whose identity is to be verified using one or more authentication protocols.&lt;/p&gt;
&lt;p&gt;- Subscriber: This refers to a party who has received a credential or an authenticator from a CSP.&amp;nbsp;&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="NIST 800-63-1" url="https://csrc.nist.rip/groups/SMA/forum/documents/feb2012_nist-sp-800-63-1_newton-perlner.pdf"/>
            <reference name="NIST 800-63C" url="https://pages.nist.gov/800-63-3/sp800-63c.html"/>
          </references>
          <standards>
            <standard ref="2.2.5" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="5.2.6" supportedStandardRef="nist-800-63"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Verify the CSP and RA communicate securely with a secure channel, for example with TLS.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:14.521">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CWE-295-CLIENT" name="Validate the certificate presented by the server" issueId="" issueLink="" platform="" cost="0" risk="68" state="Recommended" owner="JamesRabe" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Certificates presented by the server must be valid, provable, and cryptographically secure in order to derive the benefits of TLS encrypted communications.&amp;nbsp; Invalid certificates expose the application and its users to spoofing attacks such as Man In The Middle (MITM) where data may be intercepted or redirected to a malicious site, and undermine confidence in the site.&lt;/p&gt;&lt;p&gt;Validate the certificate presented by the server is signed by a trusted Certificate Authority.&lt;/p&gt;&lt;p&gt;Ensure the certificate chain of trust is legitimate and secure.&lt;/p&gt;&lt;p&gt;Verify cryptographically secure ciphers are in use throughout the chain, in particular strong hashing algorithms for certificate signatures.&amp;nbsp;&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="OSA SC-11 Trusted Path" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/71-08_02_SC-11"/>
            <reference name="OSA SC-17 Public Key Infrastructure Certificates" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/77-08_02_SC-17"/>
          </references>
          <standards>
            <standard ref="1.9.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="1.9.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="13.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="164.312(e)(1)(B)" supportedStandardRef="hipaa-addressable"/>
            <standard ref="9.2.1" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="9.2.1" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="PR.DS-2" supportedStandardRef="nist-csf"/>
            <standard ref="SC-11" supportedStandardRef="NIST 800-53"/>
            <standard ref="SC-17" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="SC-17" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="SC-17" supportedStandardRef="NIST 800-53"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Verify the client is conducting appropriate checks and receives a positive response regarding the validity and quality of the site certificate.&lt;/li&gt;&lt;li&gt;Use TLS analysis tools to check and rate the server security, for example:&lt;ol&gt;&lt;li&gt;SSL Labs SSL Server Test:&amp;nbsp;https://www.ssllabs.com/ssltest/&lt;/li&gt;&lt;li&gt;sslscan tool: https://github.com/rbsec/sslscan&lt;/li&gt;&lt;li&gt;testssh.sh tool: https://github.com/drwetter/testssl.sh&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;Remediate all security issues and warnings relating to the server certificate, and those in the trust chain.&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:14.521">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="CWE-327" name="Validate the TLS implementation in use" issueId="" issueLink="" platform="" cost="0" risk="68" state="Recommended" owner="JamesRabe" library="CS-Default" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;There are a number of established open- and closed- source TLS implementations in use, which have undergone extensive review and testing by the developers, as well as third-parties in the development, security, and cryptography space. Typically, these widely used implementations have a lower risk of exploitation compared with privately developed - or less known - implementations (although vulnerabilities such as Heartbleed highlight this is not universally true) due to this additional scrutiny scrutiny.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Identify the TLS and other cryptographic libraries, implementations, and technologies in use.&lt;/li&gt;&lt;li&gt;Verify the veracity of the implementations, and review third party validations together with security advisories or best-practices relating to them.&lt;/li&gt;&lt;li&gt;Some well-known TLS libraries are NSS from Mozilla, and OpenSSL.&lt;/li&gt;&lt;li&gt;Where an unknown or unproven implementation is in use, consider use of an established option.&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references>
            <reference name="Mozilla SSL Config" url="https://ssl-config.mozilla.org/"/>
            <reference name="OSA SC-08 Transmission Integrity" url="https://www.opensecurityarchitecture.org/cms/library/08_02_control-catalogue/68-08_02_SC-08"/>
            <reference name="Server Side TLS Configuration" url="https://wiki.mozilla.org/Security/Server_Side_TLS"/>
          </references>
          <standards>
            <standard ref="13.2.1" supportedStandardRef="ISO/IEC 27002:2013"/>
            <standard ref="164.312(e)(1)(B)" supportedStandardRef="hipaa-addressable"/>
            <standard ref="9.1.2" supportedStandardRef="owasp-asvs4-level-1"/>
            <standard ref="9.1.2" supportedStandardRef="owasp-asvs4-level-2"/>
            <standard ref="9.1.2" supportedStandardRef="owasp-asvs4-level-3"/>
            <standard ref="PR.DS-2" supportedStandardRef="nist-csf"/>
            <standard ref="PR.DS-5" supportedStandardRef="nist-csf"/>
            <standard ref="SC-8" supportedStandardRef="fedramp-high-baseline"/>
            <standard ref="SC-8" supportedStandardRef="fedramp-moderate-baseline"/>
            <standard ref="SC-8" supportedStandardRef="NIST 800-53"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Confirm the TLS layer in use is a secure, stable, release of a publicly published implementation that has been subject to expert analysis and review.&lt;ul&gt;&lt;li&gt;If not, assurance of the security of the implementation should be sought, or the risk quantified.&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li&gt;Verify that a client connecting to the server will only be able to negotiate cryptographically strong, secure ciphers.&lt;/li&gt;&lt;li&gt;Confirm that a client can not downgrade to a weaker cipher after initial negotiation.&lt;/li&gt;&lt;li&gt;Use TLS analysis tools to check and rate the server security, for example:&lt;ol&gt;&lt;li&gt;SSL Labs SSL Server Test:&amp;nbsp;https://www.ssllabs.com/ssltest/&lt;/li&gt;&lt;li&gt;sslscan tool: https://github.com/rbsec/sslscan&lt;/li&gt;&lt;li&gt;testssh.sh tool: https://github.com/drwetter/testssl.sh&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;Remediate all security issues and warnings relating to the TLS/SSL ciphers, protocols, and security mechanisms.&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:14.521">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="GENERAL" name="General" desc="" library="CS-Default">
          <threats>
            <threat ref="sec-vuln-dev-process" name="Application contains security vulnerabilities not identified during the development process" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="CS-Default" editable="true">
              <desc>Application security should be embedded into a project's development environment, allowing developers to monitor their code regularly in order to avoid security vulnerabilities when the application is deployed in the production environment.</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="100"/>
              <references>
                <reference name="NIST Security Considerations in the System Development Life Cycle" url="https://csrc.nist.gov/publications/detail/sp/800-64/rev-2/archive/2008-10-16"/>
                <reference name="Risk-Based and Functional Security Testing" url="https://www.us-cert.gov/bsi/articles/best-practices/security-testing/risk-based-and-functional-security-testing"/>
              </references>
              <weaknesses>
                <weakness ref="lack-automated-vuln-identification">
                  <countermeasures>
                    <countermeasure ref="use-analysis-static-code" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="use-analysis-static-code" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="CSD-CLIENT-SECRET" name="Attackers gain unauthorised access to data or services by accessing a client side secret" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="CS-Default" editable="true">
              <desc>Secrets stored in any client side components, such as a mobile application, thick
                                client application or in JavaScript used by a browser, can be accessed by
                                users/attackers who have access to this client.
                                &lt;div&gt;
                                &lt;br /&gt;
                                &lt;/div&gt;
                                &lt;div&gt;
                                Attackers could then gain access to the data or services that are protected by this
                                secret, if no other credentials are required.
                                &lt;/div&gt;
                            </desc>
              <riskRating confidentiality="100" integrity="50" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-312">
                  <countermeasures>
                    <countermeasure ref="CSD-CLIENT-SECRET" mitigation="50"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-798, CWE-603">
                  <countermeasures>
                    <countermeasure ref="CS-CLIENT-SECRET" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CS-CLIENT-SECRET" mitigation="50"/>
                <countermeasure ref="CSD-CLIENT-SECRET" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="DEP-CLIENT-TECH" name="Attackers gain unauthorised access to the application by the use of deprecated client-side technologies" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="CS-Default" editable="true">
              <desc>&lt;div&gt;
  As programming languages evolve, functions occasionally become obsolete due to:
&lt;/div&gt;
&lt;ul&gt;
 &lt;li&gt;Advances in the language.&lt;/li&gt;
 &lt;li&gt;Improved understanding of how operations should be performed effectively and securely.&lt;/li&gt;
 &lt;li&gt;Changes in the conventions that govern certain operations. &lt;/li&gt;
&lt;/ul&gt;
&lt;br /&gt;Functions that are removed are usually replaced by newer counterparts that perform the same task in some different and hopefully improved way.
&lt;br /&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-477">
                  <countermeasures>
                    <countermeasure ref="INS-CLIENT" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="INS-CLIENT" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="READ OR POST DATA" name="Read or Post data" desc="" library="CS-Default">
          <threats>
            <threat ref="NTW-MITM" name="Attackers could gain access to sensitive data through a man in the middle attack" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="CS-Default" editable="true">
              <desc>&lt;p&gt;This type of attack targets the communication between two components (typically client and server). The attacker places himself in the communication channel between the two components. Whenever one component attempts to communicate with the other (data flow, authentication challenges, etc.), the data first goes to the attacker, who has the opportunity to observe or alter it, and it is then passed to the other component as if it were never intercepted. This interposition is transparent leaving the two compromised components unaware of the potential corruption or leakage of their communications. The potential for Man-in-the-Middle attacks yields an implicit lack of trust in communication or identity between two components.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-311">
                  <countermeasures>
                    <countermeasure ref="CWE-295-CLIENT" mitigation="25"/>
                    <countermeasure ref="CWE-319-TRANSPORT" mitigation="25"/>
                    <countermeasure ref="secure-communication-ra-and-csp" mitigation="25"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-327">
                  <countermeasures>
                    <countermeasure ref="CWE-327" mitigation="25"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="CWE-295-CLIENT" mitigation="25"/>
                <countermeasure ref="CWE-319-TRANSPORT" mitigation="25"/>
                <countermeasure ref="CWE-327" mitigation="25"/>
                <countermeasure ref="secure-communication-ra-and-csp" mitigation="25"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="55e6b127-01cc-4c54-aa5a-fbb23048534c" diagramComponentId="ca784980-5d42-45ab-9408-8fe2baba0788" ref="3a689354-8936-4a32-855b-ef9f1763f25c" name="Azure Active Directory" desc="" library="Microsoft-Azure" parentComponentRef="" componentDefinitionRef="microsoft-azure-active-directory">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses>
        <weakness ref="CWE-16" name="Configuration" state="0" impact="100" issueId="" issueLink="">
          <desc>Weaknesses in this category are typically introduced during the
                        configuration of the software.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:16.403">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-MON02" name="Excessive use of administrator accounts" state="0" impact="100" issueId="" issueLink="">
          <desc>The administrator accounts are used for all actions, not only for administrative actions. This
                        is because these users have not got a personal or a user account to do the daily actions.&amp;nbsp;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that there is any rule to notify when there is a bad usage of the root
                            account.&lt;/li&gt;
                            &lt;li&gt;Check if these rules are enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:16.403">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CWE-778" name="Insufficient Logging" state="0" impact="100" issueId="" issueLink="">
          <desc>When a critical security event occurs, the software either does not record the event or omits important details about the event when logging it. When critical security events are not logged properly, such as in the case of a failed login attempt, this can make malicious behavior more difficult to detect and may hinder forensic analyses after a successful attack.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:16.403">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-MON03" name="Lack of 2FA" state="0" impact="100" issueId="" issueLink="">
          <desc>Logging into the console without using Multi-factor Authentication (MFA) and without being detected. The connection without MFA must be audited and monitored, the correct security group must be informed and the connection must be validated.&amp;nbsp;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that there is any rule to notify when someone tries to login into the
                            console without MFA.&lt;/li&gt;
                            &lt;li&gt;Check if these rules are enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:16.403">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZ-W04" name="Misconfigured Authentication Method for Administrator Accounts" state="0" impact="100" issueId="" issueLink="">
          <desc>The authentication method &amp;quot;Multi-factor Authentication&amp;quot; for the Administrator accounts is not configured.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;Multi-Factor Authentication&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check all Administrator accounts have got the MFA flag enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:16.403">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-IDENTITY-03" name="Misconfigured User Account" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        Key security settings such as resetting the password and other password controls are not
                        configured.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log in to the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each user has got an assigned account.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;Password reset&amp;quot; &amp;gt; &amp;quot;Authentication Method&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that the security confirmation measures and the security criteria are well
                            filled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:16.402">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-ACCESS-01" name="Misconfigured credentials for groups and roles" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        The credentials for groups and roles are not correctly configured and there are user accounts with more privileges than necessary.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each user has got assigned the correct groups.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All groups&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each group has got assigned the correct roles to achieve principle of
                            least privilege.&lt;/li&gt;
                            &lt;li&gt;Check that the roles for the Cloud Service are well assigned.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;div&gt;
                            &lt;/div&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:16.402">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-ACCESS-DATA-01" name="Sensitive data are accessible" state="0" impact="100" issueId="" issueLink="">
          <desc>Sensitive data are not encrypted and the sensitive data is exposed.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:16.402">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="no-alerts-access" name="There is no alert for unauthorized access" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;p&gt;There is no alert to notify about unauthorized access to the resources, and this access is not logged.&lt;/p&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:16.402">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-NET-01" name="Unauthorized connection attempts on open ports" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        Receiving unauthorized connections to open ports makes systems vulnerable to attacks. To
                        avoid this, access to the network must be as restricted as possible, so that only the necessary
                        ports are open and the minimum inbound traffic is accepted.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Check that each Azure resources have got their Network Security Groups.&lt;/li&gt;
                            &lt;li&gt;Check that a set of these groups achieve with the principle of the least
                            privilege.&lt;/li&gt;
                            &lt;li&gt;Check that the inbound/outbound security rules are enabled and correctly
                            configured.&lt;/li&gt;
                            &lt;li&gt;In &amp;quot;Inbound security rules&amp;quot;, check that all the traffic from
                            0.0.0.0/0&amp;nbsp;is blocked.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:16.401">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="AZ-A09" name="Apply RBAC with pre-defined policies added into groups or roles" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Define and create groups that relate to job functions (administrators, developers, accounting,
                        etc.) and assign the relevant permissions for each group, and then assign IAM users to those
                        groups.&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &amp;nbsp;&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        All the users in an IAM group inherit the permissions assigned to the group. That way, you can
                        make changes for everyone in a group in just one place. As people move around in your company,
                        you can simply change what IAM group their IAM user belongs to. This method is known as Role
                        Based Access Control (RBAC).&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Remove a user from a group:&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;ol&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                        &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                        &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Click on the user name. All the groups the user belongs are there.&lt;/li&gt;
                        &lt;li&gt;Choose the group and &amp;quot;Remove&amp;quot;.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/ol&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Create a group and add user:&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;ol&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                        &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                        &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All groups&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Click &amp;quot;New Group&amp;quot; and fill the information.&lt;/li&gt;
                        &lt;li&gt;Search and add the user.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Create a group and add members in Azure Active Directory" url="https://docs.microsoft.com/en-us/azure/active-directory/active-directory-groups-create-azure-portal"/>
            <reference name="MS Azure - Use Role-Based Access Control to manage access to your Azure subscription resources" url="https://docs.microsoft.com/en-us/azure/active-directory/role-based-access-control-configure"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each user has got assigned the correct groups.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All groups&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each group has got assigned the correct roles.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:16.208">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-AD1" name="Block legacy authentication for Azure AD" issueId="" issueLink="" platform="" cost="0" risk="40" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Block legacy authentication for Azure AD&lt;/p&gt;&lt;p&gt;Rationale:&lt;br&gt; To give your users easy access to your cloud apps, Azure Active Directory (Azure AD) supports a broad variety of authentication protocols including legacy authentication. Legacy authentication is a term that refers to an authentication request made by:&lt;br&gt; - Older Office clients that do not use modern authentication (for example, Office 2010 client)&lt;br&gt; - Any client that uses legacy mail protocols such as IMAP/SMTP/POP3&lt;br&gt; Today, the majority of all compromising sign-in attempts come from legacy authentication. Legacy authentication does not support multi-factor authentication (MFA). Even if you have an MFA policy enabled on your directory, a bad actor can authenticate using a legacy protocol and bypass MFA. The best way to protect your account from malicious authentication requests made by legacy protocols is to block these attempts altogether.&lt;/p&gt;&lt;p&gt;Remediation:&lt;br&gt; Follow the steps below in order to block legacy authentication in your directory&lt;/p&gt;&lt;p&gt;Identify legacy authentication use&lt;/p&gt;&lt;p&gt;Before you can block legacy authentication in your directory, you need to first understand if your users have apps that use legacy authentication and how it affects your overall directory. Azure AD sign-in logs can be used to understand if you are using legacy authentication.&lt;/p&gt;&lt;p&gt;1. Navigate to the Azure portal &amp;gt; Azure Active Directory &amp;gt; Sign-ins.&lt;br&gt; 2. Add the Client App column if it is not shown by clicking on Columns &amp;gt; Client App.&lt;br&gt; 3. Filter by Client App &amp;gt; check all the Legacy Authentication Clients options presented.&lt;br&gt; 4. Filter by Status &amp;gt; Success.&lt;br&gt; 5. Expand your date range if necessary using the Date filter.&lt;/p&gt;&lt;p&gt;Filtering will only show you successful sign-in attempts that were made by the selected legacy authentication protocols. Clicking on each individual sign-in attempt will show you additional details. The Client App column or the Client App field under the Basic Info tab after selecting an individual row of data will indicate which legacy authentication protocol was used. These logs will indicate which users are still depending on legacy authentication and which applications are using legacy protocols to make authentication requests. For users that do not appear in these logs and are confirmed to not be using legacy authentication, implement a Conditional Access policy or enable the Baseline policy: block legacy authentication for these users only.&lt;/p&gt;&lt;p&gt;Moving away from legacy authentication&lt;/p&gt;&lt;p&gt;Once you have a better idea of who is using legacy authentication in your directory and which applications depend on it, the next step is upgrading your users to use modern authentication. Modern authentication is a method of identity management that offers more secure user authentication and authorization. If you have an MFA policy in place on your directory, modern authentication ensures that the user is prompted for MFA when required. It is the more secure alternative to legacy authentication protocols.&lt;/p&gt;&lt;p&gt;This section gives a step-by-step overview on how to update your environment to modern authentication. Read through the steps below before enabling a legacy authentication blocking policy in your organization.&lt;/p&gt;&lt;p&gt;Step 1: Enable modern authentication in your directory&lt;/p&gt;&lt;p&gt;The first step in enabling modern authentication is making sure your directory supports modern authentication. Modern authentication is enabled by default for directories created on or after August 1, 2017. If your directory was created prior to this date, you will need to manually enable modern authentication for your directory using the following steps:&lt;/p&gt;&lt;p&gt;1. Check to see if your directory already supports modern authentication by running Get-CsOAuthConfiguration from the Skype for Business Online PowerShell module.&lt;br&gt; 2. If your command returns an empty OAuthServers property, then Modern Authentication is disabled. Update the setting to enable modern authentication using Set-CsOAuthConfiguration. If your OAuthServers property contains an entry, you are good to go.&lt;/p&gt;&lt;p&gt;Be sure to complete this step before moving forward. It is critical that your directory configurations are changed first because they dictate which protocol will be used by all Office clients. Even if you are using Office clients that support modern authentication, they will default to using legacy protocols if modern authentication is disabled on your directory.&lt;/p&gt;&lt;p&gt;Step 2: Office applications&lt;/p&gt;&lt;p&gt;Once you have enabled modern authentication in your directory, you can start updating applications by enabling modern authentication for Office clients. Office 2016 or later clients support modern authentication by default. No extra steps are required.&lt;/p&gt;&lt;p&gt;If you are using Office 2013 Windows clients or older, Azure recommends upgrading to Office 2016 or later. Even after completing the prior step of enabling modern authentication in your directory, the older Office applications will continue to use legacy authentication protocols. If you are using Office 2013 clients and are unable to immediately upgrade to Office 2016 or later, follow the steps in the following article to Enable Modern Authentication for Office 2013 on Windows devices. To help protect your account while you are using legacy authentication, Azure recommends using strong passwords across your directory. Check out Azure AD password protection to ban weak passwords across your directory.&lt;/p&gt;&lt;p&gt;Office 2010 does not support modern authentication. You will need to upgrade any users with Office 2010 to a more recent version of Office. Azure recommends upgrading to Office 2016 or later, as it blocks legacy authentication by default.&lt;/p&gt;&lt;p&gt;If you are using macOS, Azure recommends upgrading to Office for Mac 2016 or later. If you are using the native mail client, you will need to have macOS version 10.14 or later on all devices.&lt;/p&gt;&lt;p&gt;Step 3: Exchange and SharePoint&lt;/p&gt;&lt;p&gt;For Windows-based Outlook clients to use modern authentication, Exchange Online must be modern authentication enabled as well. If modern authentication is disabled for Exchange Online, Windows-based Outlook clients that support modern authentication (Outlook 2013 or later) will use basic authentication to connect to Exchange Online mailboxes.&lt;/p&gt;&lt;p&gt;SharePoint Online is enabled for modern authentication default. For directories created after August 1, 2017, modern authentication is enabled by default in Exchange Online. However, if you had previously disabled modern authentication or are you using a directory created prior to this date, follow the steps in the "Enable modern authentication in Exchange Online" in Reference Url.&lt;/p&gt;&lt;p&gt;Step 4: Skype for Business&lt;/p&gt;&lt;p&gt;To prevent legacy authentication requests made by Skype for Business, it is necessary to enable modern authentication for Skype for Business Online. For directories created after August 1, 2017, modern authentication for Skype for Business is enabled by default.&lt;/p&gt;&lt;p&gt;Azure suggests you transition to Microsoft Teams, which supports modern authentication by default. However, if you are unable to migrate at this time, you will need to enable modern authentication for Skype for Business Online so that Skype for Business clients start using modern authentication.&lt;/p&gt;&lt;p&gt;In addition to enabling modern authentication for Skype for Business Online, Azure recommends enabling modern authentication for Exchange Online when enabling modern authentication for Skype for Business. This process will help synchronize the state of modern authentication in Exchange Online and Skype for Business online and will prevent multiple sign-in prompts for Skype for Business clients.&lt;/p&gt;&lt;p&gt;Step 5: Using mobile devices&lt;br&gt; Applications on your mobile device need to block legacy authentication as well. Azure recommends using Outlook for Mobile. Outlook for Mobile supports modern authentication by default and will satisfy other MFA baseline protection policies.&lt;/p&gt;&lt;p&gt;In order to use the native iOS mail client, you will need to be running iOS version 11.0 or later to ensure the mail client has been updated to block legacy authentication.&lt;/p&gt;&lt;p&gt;Step 6: On-premises clients&lt;/p&gt;&lt;p&gt;If you are a hybrid customer using Exchange Server on-premises and Skype for Business on-premises, both services will need to be updated to enable modern authentication. When using modern authentication in a hybrid environment, you are still authenticating users on-premises. The story of authorizing their access to resources (files or emails) changes.&lt;/p&gt;&lt;p&gt;Before you can begin enabling modern authentication on-premises, please be sure that you have met the pre-requisites. You are now ready to enable modern authentication on-premises.&lt;/p&gt;&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Blocking legacy authentication" url="https://docs.microsoft.com/en-us/azure/active-directory/fundamentals/concept-fundamentals-block-legacy-authentication"/>
            <reference name="Enable or disable modern authentication for Outlook in Exchange Online" url="https://docs.microsoft.com/en-us/exchange/clients-and-mobile-in-exchange-online/enable-or-disable-modern-authentication-in-exchange-online"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;To check if your users have apps that use legacy authentication, follow again the steps of "Identify legacy authentication use" section:&lt;/p&gt;      &lt;p&gt;1. Navigate to the Azure portal &gt; Azure Active Directory &gt; Sign-ins.&lt;br /&gt;  2. Add the Client App column if it is not shown by clicking on Columns &gt; Client App.&lt;br /&gt;  3. Filter by Client App &gt; check all the Legacy Authentication Clients options presented.&lt;br /&gt;  4. Filter by Status &gt; Success.&lt;br /&gt;  5. Expand your date range if necessary using the Date filter.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:16.210">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-AD18" name="Configure Azure Active Directory settings" issueId="" issueLink="" platform="" cost="0" risk="42" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;There are some options that must be configured properly to secure Azure Active Directory.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Checklist:&lt;/strong&gt;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Ensure that 'Allow users to remember multi-factor authentication on devices they trust' is 'Disabled'&lt;/li&gt;&lt;li&gt;Ensure that 'Number of methods required to reset' is set to '2'&lt;/li&gt;&lt;li&gt;Ensure that 'Number of days before users are asked to re-confirm their authentication information' is not set to "0"&lt;/li&gt;&lt;li&gt;Ensure that 'Notify users on password resets?' is set to 'Yes'&lt;/li&gt;&lt;li&gt;Ensure that 'Notify all admins when other admins reset their password?' is set to 'Yes'&lt;/li&gt;&lt;li&gt;Ensure that 'Users can consent to apps accessing company data on their behalf' is set to 'No'&lt;/li&gt;&lt;li&gt;Ensure that 'Users can add gallery apps to their Access Panel' is set to 'No'&lt;/li&gt;&lt;li&gt;Ensure that 'Users can register applications' is set to 'No'&lt;/li&gt;&lt;li&gt;Ensure that 'Guest user permissions are limited' is set to 'Yes'&lt;/li&gt;&lt;li&gt;Ensure that 'Members can invite' is set to 'No'&lt;/li&gt;&lt;li&gt;Ensure that 'Guests can invite' is set to 'No'&lt;/li&gt;&lt;li&gt;Ensure that 'Restrict access to Azure AD administration portal' is set to 'Yes'&lt;/li&gt;&lt;li&gt;Ensure that 'Restrict user ability to access groups features in the Access Pane' is set to 'No'&lt;/li&gt;&lt;li&gt;Ensure that 'Users can create security groups in Azure Portals' is set to 'No'&lt;/li&gt;&lt;li&gt;Ensure that 'Owners can manage group membership requests in the Access Panel' is set to 'No'&lt;/li&gt;&lt;li&gt;Ensure that 'Users can create Microsoft 365 groups in Azure Portals' is set to 'No'&lt;/li&gt;&lt;li&gt;Ensure that 'Require Multi-Factor Auth to join devices' is set to 'Yes'&lt;/li&gt;&lt;li&gt;Ensure that no custom subscription owner roles are created&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;From Azure Console&lt;/strong&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Go to Azure Active Directory&lt;ol&gt;&lt;li&gt;Go to Users&lt;ol&gt;&lt;li&gt;Go to Password reset&lt;ol&gt;&lt;li&gt;Go to Authentication methods&lt;ol&gt;&lt;li&gt;Set the Number of methods required to reset to 2&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;Go to Registration&lt;ol&gt;&lt;li&gt;Set the Number of days before users are asked to re-confirm their authentication information to your organization defined frequency&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;Go to Notification&lt;ol&gt;&lt;li&gt;Set Notify users on password resets? to Yes&lt;/li&gt;&lt;li&gt;Set Notify all admins when other admins reset their password? to Yes&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;Go to All Users&lt;ol&gt;&lt;li&gt;Click on Multi-Factor Authentication button on the top bar&lt;/li&gt;&lt;li&gt;Click on service settings&lt;/li&gt;&lt;li&gt;Disable Allow users to remember multi-factor authentication on devices they trust&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;Go to User settings&lt;ol&gt;&lt;li&gt;Click on Manage how end users launch and view their applications&lt;ol&gt;&lt;li&gt;Set Users can consent to apps accessing company data on their behalf to No&lt;/li&gt;&lt;li&gt;Set Users can add gallery apps to their Access Panel to No&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;Set Users can register applications to No&lt;/li&gt;&lt;li&gt;Set Restrict access to Azure AD administration portal to Yes&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;Go to External Identities&lt;ol&gt;&lt;li&gt;Go to External collaboration settings&lt;ol&gt;&lt;li&gt;Set Guest users permissions are limited to Yes&lt;/li&gt;&lt;li&gt;Set Members can invite to No&lt;/li&gt;&lt;li&gt;Set Guests can invite to No&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;Go to Groups&lt;ol&gt;&lt;li&gt;Go to General in setting&lt;ol&gt;&lt;li&gt;Ensure that Restrict user ability to access groups features in the Access Pane is set to No&lt;/li&gt;&lt;li&gt;Set Users can create security groups in Azure Portals to No&lt;/li&gt;&lt;li&gt;Set Owners can manage group membership requests in the Access Panel to No&lt;/li&gt;&lt;li&gt;Set Users can create Microsoft 365 groups in Azure Portals to No&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;Go to Devices&lt;ol&gt;&lt;li&gt;Go to Device settings&lt;ol&gt;&lt;li&gt;Set Require Multi-Factor Auth to join devices to Yes&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;/ol&gt;</desc>
          <implementations/>
          <references>
            <reference name="Associate or add an Azure subscription to your Azure Active Directory tenant" url="https://learn.microsoft.com/en-us/azure/active-directory/fundamentals/active-directory-how-subscriptions-associated-directory"/>
            <reference name="IM-2: Protect identity and authentication systems" url="https://learn.microsoft.com/en-us/security/benchmark/azure/security-controls-v3-identity-management#im-2-protect-identity-and-authentication-systems"/>
            <reference name="Manage Azure subscription policies" url="https://learn.microsoft.com/en-us/azure/cost-management-billing/manage/manage-azure-subscription-policy"/>
            <reference name="Remember multi-factor authentication" url="https://learn.microsoft.com/en-us/azure/active-directory/authentication/howto-mfa-mfasettings#remember-multi-factor-authentication"/>
            <reference name="Security Control v3: Identity management" url="https://learn.microsoft.com/en-us/security/benchmark/azure/security-controls-v3-identity-management#im-4-use-strong-authentication-controls-for-all-azure-active-directory-based-access"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="1.1.4" supportedStandardRef="cis-azure-standard"/>
            <standard ref="1.10" supportedStandardRef="cis-azure-standard"/>
            <standard ref="1.10" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="1.11" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="1.13" supportedStandardRef="cis-azure-standard"/>
            <standard ref="1.13" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="1.14" supportedStandardRef="cis-azure-standard"/>
            <standard ref="1.14" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="1.15" supportedStandardRef="cis-azure-standard"/>
            <standard ref="1.15" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="1.16" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="1.17" supportedStandardRef="cis-azure-standard"/>
            <standard ref="1.17" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="1.18" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="1.19" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="1.20" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="1.21" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="1.22" supportedStandardRef="cis-azure-standard"/>
            <standard ref="1.22" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="1.23" supportedStandardRef="cis-azure-standard"/>
            <standard ref="1.23" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="1.25" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="1.5" supportedStandardRef="cis-azure-standard"/>
            <standard ref="1.5" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="1.6" supportedStandardRef="cis-azure-standard"/>
            <standard ref="1.6" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="1.8" supportedStandardRef="cis-azure-standard"/>
            <standard ref="1.8" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="1.9" supportedStandardRef="cis-azure-standard"/>
            <standard ref="1.9" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="14" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="16" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="8" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="9" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API7:2019-Security Misconfiguration" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="GS-1" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="GS-2" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="GS-6" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="IM-4" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="PA-1" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="PA-2" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="PA-5" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="PA-7" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Follow the paths detailed in the description and ensure that the values are the ones indicated.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:16.210">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-AD12" name="Configure Azure Monitor logs" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Configure Azure Monitor logs&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Azure Monitor logs allows you to query data to find particular events, analyze trends, and perform correlation across various data sources. You can also set up alerts on your query. With the integration of Azure AD activity logs in Azure Monitor logs, you can now perform tasks like:&lt;/p&gt; 
&lt;p&gt;- Compare your Azure AD sign-in logs against security logs published by Azure Security Center&lt;br&gt; - Troubleshoot performance bottlenecks on your application's sign-in page by correlating application performance data from Azure Application Insights.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Using this feature requires an Azure AD Premium P1 or P2 license.&lt;/p&gt; 
&lt;p&gt;Send logs to Azure Monitor&lt;/p&gt; 
&lt;p&gt;1.Sign in to the Azure portal.&lt;/p&gt; 
&lt;p&gt;2. Select Azure Active Directory &amp;gt; Diagnostic settings -&amp;gt; Add diagnostic setting. You can also select Export Settings from the Audit Logs or Sign-ins page to get to the diagnostic settings configuration page.&lt;/p&gt; 
&lt;p&gt;3. In the Diagnostic settings menu, select the Send to Log Analytics workspace check box, and then select Configure.&lt;/p&gt; 
&lt;p&gt;4. Select the Log Analytics workspace you want to send the logs to, or create a new workspace in the provided dialog box.&lt;/p&gt; 
&lt;p&gt;5. Do either or both of the following:&lt;/p&gt; 
&lt;p&gt;- To send audit logs to the Log Analytics workspace, select the AuditLogs check box.&lt;br&gt; - To send sign-in logs to the Log Analytics workspace, select the SignInLogs check box.&lt;/p&gt; 
&lt;p&gt;6. Select Save to save the setting.&lt;/p&gt; 
&lt;p&gt;7. After about 15 minutes, verify that events are streamed to your Log Analytics workspace.&lt;/p&gt; 
&lt;p&gt;Navigate to the Log Analytics workspace&lt;/p&gt; 
&lt;p&gt;- Sign in to the Azure portal.&lt;br&gt; - Select Azure Active Directory, and then select Logs from the Monitoring section to open your Log Analytics workspace. The workspace will open with a default query.&lt;/p&gt; 
&lt;p&gt;Alert on Azure AD activity log data&lt;/p&gt; 
&lt;p&gt;You can also set up alerts on your query. For example, to configure an alert when more than 10 applications have been used in the last week:&lt;/p&gt; 
&lt;p&gt;1. From the workspace, select Set alert to open the Create rule page.&lt;/p&gt; 
&lt;p&gt;2. Select the default alert criteria created in the alert and update the Threshold in the default metric to 10.&lt;/p&gt; 
&lt;p&gt;3. Enter a name and description for the alert, and choose the severity level. For our example, we could set it to Informational.&lt;/p&gt; 
&lt;p&gt;4. Select the Action Group that will be alerted when the signal occurs. You can choose to notify your team via email or text message, or you could automate the action using webhooks, Azure functions or logic apps. Learn more about creating and managing alert groups in the Azure portal.&lt;/p&gt; 
&lt;p&gt;5. Once you have configured the alert, select Create alert to enable it.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Analyze Azure AD activity logs with Azure Monitor logs" url="https://docs.microsoft.com/en-us/azure/active-directory/reports-monitoring/howto-analyze-activity-logs-log-analytics#alert-on-azure-ad-activity-log-data"/>
            <reference name="Integrate Azure AD logs with Azure Monitor logs" url="https://docs.microsoft.com/en-us/azure/active-directory/reports-monitoring/howto-integrate-activity-logs-with-log-analytics"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="LT-2" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that Azure Monitor logs are configured.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:16.210">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-A11" name="Configure roles for the Cloud Service" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Define and create the roles for the Azure Cloud Service. For each role, define the permissions and also configure how that role runs. When you launch an Azure instance, you shall specify a role for the instance as a launch parameter. Applications that run on the Cloud instance use the role's credentials when they access Azure resources. This role's permissions determine what the application is allowed to do.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Configure an Azure cloud service from Solution Explorer in Visual Studio.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Use Role-Based Access Control to manage access to your Azure subscription resources" url="https://docs.microsoft.com/en-us/azure/active-directory/role-based-access-control-configure"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that the roles for the Cloud Service are well assigned.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:16.210">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-AD4" name="Create an organization specific custom banned password list" issueId="" issueLink="" platform="" cost="1" risk="40" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Create an organization specific custom banned password list&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Users often create passwords that use common local words such as a school, sports team, or famous person. These passwords are easy to guess, and weak against dictionary-based attacks. To enforce strong passwords in your organization, the Azure Active Directory (Azure AD) custom banned password list let you add specific strings to evaluate and block. A password change request fails if there is a match in the custom banned password list.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Note: To complete this guide, you need a working Azure AD tenant with at least an Azure AD Premium P1 or trial license enabled.&lt;/p&gt; 
&lt;p&gt;Configure custom banned passwords&lt;/p&gt; 
&lt;p&gt;To enable the custom banned password list and add entries to it, complete the following steps:&lt;/p&gt; 
&lt;p&gt;1. Sign in to the Azure portal using an account with global administrator permissions.&lt;/p&gt; 
&lt;p&gt;2. Search for and select Azure Active Directory, then choose Security from the menu on the left-hand side.&lt;/p&gt; 
&lt;p&gt;3. Under the Manage menu header, select Authentication methods, then Password protection.&lt;/p&gt; 
&lt;p&gt;4. Set the option for Enforce custom list to Yes.&lt;/p&gt; 
&lt;p&gt;5. Add strings to the Custom banned password list, one string per line. The following considerations and limitations apply to the custom banned password list:&lt;/p&gt; 
&lt;p&gt;- The custom banned password list can contain up to 1000 terms.&lt;br&gt; - The custom banned password list is case-insensitive.&lt;br&gt; - The custom banned password list considers common character substitution, such as o and 0, or a and @.&lt;br&gt; - The minimum string length is four characters, and the maximum is 16 characters.&lt;/p&gt; 
&lt;p&gt;Specify your own custom passwords to ban.&lt;/p&gt; 
&lt;p&gt;6. Leave the option for Enable password protection on Windows Server Active Directory to No.&lt;/p&gt; 
&lt;p&gt;7. To enable the custom banned passwords and your entries, select Save.&lt;/p&gt; 
&lt;p&gt;It may take several hours for updates to the custom banned password list to be applied.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Combined password policy and check for weak passwords in Azure Active Directory" url="https://learn.microsoft.com/en-us/azure/active-directory/authentication/concept-password-ban-bad-combined-policy"/>
            <reference name="Eliminate bad passwords using Azure Active Directory Password Protection" url="https://learn.microsoft.com/en-us/azure/active-directory/authentication/concept-password-ban-bad"/>
            <reference name="IM-6: Use strong authentication controls" url="https://learn.microsoft.com/en-us/security/benchmark/azure/security-controls-v3-identity-management#im-6-use-strong-authentication-controls"/>
            <reference name="Password Guidance" url="https://www.microsoft.com/en-us/research/publication/password-guidance/"/>
            <reference name="Tutorial: Configure custom banned passwords for Azure Active Directory password protection" url="https://docs.microsoft.com/en-us/azure/active-directory/authentication/tutorial-configure-custom-password-protection"/>
          </references>
          <standards>
            <standard ref="1.7" supportedStandardRef="cis-azure-standard"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Test custom banned password list&lt;/p&gt;

  &lt;p&gt;To see the custom banned password list in action, try to change the password to a variation of one that you added in the Remediation section. When Azure AD tries to process the password change, the password is matched against an entry in the custom banned password list. An error is then displayed to the user.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:16.210">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-A03" name="Create Individual Accounts for the administrator users" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Create an individual account for the administrator users and with this new accounts By creating individual Azure users for people accessing your account, you can give each Azure user a unique set of security credentials.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The administrator accounts shall be used for the administrative actions and for giving or revoke credentials to the user's account. The administrator account shall be not used as a normal user account. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt; 
  &lt;li&gt;Select Azure Active Directory.&lt;/li&gt; 
  &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt; 
  &lt;li&gt;Select &amp;quot;Add New User&amp;quot;.&lt;/li&gt; 
  &lt;li&gt;Fill the required information and click &amp;quot;Create&amp;quot;.&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt; 
&lt;div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Add new users to Azure Active Directory" url="https://docs.microsoft.com/en-us/azure/active-directory/add-users-azure-active-directory"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each user has got a user account assigned.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:16.210">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-A10" name="Create mechanisms to ensure the principle of least privilege is applied" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Create the mechanisms to review periodically the group and user permissions to ensure the least privilege for the user accounts. Granting least privilege ensures that users only have the permissions required to complete their jobs rather than additional privileges that are not required. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Following this model ensures that, should an account be compromised, the blast radius of damage is limited&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Allocate privileges via groups or roles via the recommendation in "Use RBAC with pre-defined policies added into groups or roles".&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt; 
&lt;div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Create a group and add members in Azure Active Directory" url="https://docs.microsoft.com/en-us/azure/active-directory/active-directory-groups-create-azure-portal"/>
            <reference name="MS Azure - Use Role-Based Access Control to manage access to your Azure subscription resources" url="https://docs.microsoft.com/en-us/azure/active-directory/role-based-access-control-configure"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that the principle of least privilege is achieved in the assignation of roles and
                            groups to the users.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:16.210">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="C-AZURE-AD19" name="Define trusted or untrusted locations in Azure AD" issueId="" issueLink="" platform="" cost="1" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Azure Active Directory Conditional Access allows an organization to configure Named locations and configure whether those locations are trusted or untrusted. These settings provide organizations the means to specify Geographical locations for use in conditional access policies, or define actual IP addresses and IP ranges and whether or not those IP addresses and/or ranges are trusted by the organization.&lt;/p&gt;&lt;p&gt;Conditional Access Policies can be used to block access from geographic locations that are deemed out-of-scope for your organization or application. The scope and variables for this policy should be carefully examined and defined.&lt;/p&gt;&lt;p&gt;CAUTION: If these policies are created without first auditing and testing the result, misconfiguration can potentially lock out administrators or create undesired access issues.&amp;nbsp;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;Rationale:&lt;/p&gt;&lt;p&gt;Defining trusted source IP addresses or ranges helps organizations create and enforce Conditional Access policies around those trusted or untrusted IP addresses and ranges. Users authenticating from trusted IP addresses and/or ranges may have less access restrictions or access requirements when compared to users that try to authenticate to Azure Active Directory from untrusted locations or untrusted source IP addresses/ranges.&lt;/p&gt;&lt;p&gt;Conditional Access, when used as a deny list for the tenant or subscription, is able to prevent ingress or egress of traffic to countries that are outside of the scope of interest (e.g.: customers, suppliers) or jurisdiction of an organization. This is an effective way to prevent unnecessary and long-lasting exposure to international threats such as APTs.&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;Remediation:&lt;/p&gt;&lt;p&gt;Define Trusted Locations&lt;/p&gt;&lt;p&gt;From Azure Portal&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;1. Navigate to the Azure AD Conditional Access Blade&lt;/p&gt;&lt;p&gt;2. Click on the Named locations blade&lt;/p&gt;&lt;p&gt;3. Within the Named locations blade, click on IP ranges location&lt;/p&gt;&lt;p&gt;4. Enter a name for this location setting in the Name text box&lt;/p&gt;&lt;p&gt;5. Click on the + sign&lt;/p&gt;&lt;p&gt;6. Add an IP Address Range in CIDR notation inside the text box that appears&lt;/p&gt;&lt;p&gt;7. Click on the Add button&lt;/p&gt;&lt;p&gt;8. Repeat steps 5 through 7 for each IP Range that needs to be added&lt;/p&gt;&lt;p&gt;9. If the information entered are trusted ranges, select the Mark as trusted location check box&lt;/p&gt;&lt;p&gt;10.Once finished, click on Create&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;Exclusionary Geographic Access Policies&lt;/p&gt;&lt;p&gt;From Azure Portal&lt;/p&gt;&lt;p&gt;&lt;br&gt;Part 1 of 2 - Create the policy and enable it in Report-only mode.&lt;br&gt;1. From Azure Home open the portal menu in the top left, and select Azure Active Directory.&lt;br&gt;2. Scroll down in the menu on the left, and select Security.&lt;br&gt;3. Select on the left side Conditional Access.&lt;br&gt;4. Click the + New policy button, then:&lt;br&gt;5. Under Assignments, select Users and Groups then:&lt;br&gt;- Under Include, select All users&lt;br&gt;- Under Exclude, only select emergency access accounts and service accounts (NOTE: Service accounts are excluded here because service accounts are non-interactive and cannot complete MFA)&lt;br&gt;6. Under Assignments, select Cloud apps or actions then:&lt;br&gt;- Under Include, select All cloud apps&lt;br&gt;- Leave Exclude blank unless you have a well defined exception&lt;br&gt;7. Under Conditions:&lt;br&gt;- Select Include, then add entries for locations for those that should be blocked&lt;br&gt;- Select Exclude, then add entries for those that should be allowed&lt;br&gt;(IMPORTANT: Ensure that all Trusted Locations are in the Exclude list.)&lt;br&gt;8. Under Access Controls, select Grant and Confirm that Block Access is selected.&lt;br&gt;9. Set Enable policy to Report-only and click Create.&lt;br&gt;NOTE: The policy is not yet 'live,' since Report-only is being used to audit the effect of&amp;nbsp;&lt;br&gt;the policy.&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;Part 2 of 2 - Confirm that the policy is not blocking access that should be granted, then toggle to On.&lt;br&gt;1. With your policy now in report-only mode, return to the Azure Active Directory &amp;nbsp;blade and click on Sign-ins.&lt;br&gt;2. Review the recent sign-in events - click an event then review the event details (specifically the Report-only tab) to ensure:&lt;br&gt;- The sign-in event you're reviewing occurred after turning on the policy in report-only mode&lt;br&gt;- The policy name from step 4 above is listed in the Policy Name column&lt;br&gt;- The Result column for the new policy shows that the policy was Not&amp;nbsp;&lt;br&gt;applied (indicating the location origin was not blocked)&lt;br&gt;3. If the above conditions are present, navigate back to the policy name in&amp;nbsp;&lt;br&gt;Conditional Access and open it.&lt;br&gt;4. Toggle the policy from Report-only to On&lt;/p&gt;&lt;p&gt;Impact:&lt;/p&gt;&lt;p&gt;When configuring Named locations, the organization can create locations using Geographical location data or by defining source IP addresses or ranges. Configuring Named locations using a Country location does not provide the organization the ability to mark those locations as trusted, and any Conditional Access policy relying on those Countries location setting will not be able to use the All trusted locations setting within the Conditional Access policy. They instead will have to rely on the Select locations setting. This may add additional resource requirements when configuring, and will require thorough organizational testing.&lt;/p&gt;&lt;p&gt;In general, Conditional Access policies may completely prevent users from authenticating to Azure Active Directory, and thorough testing is recommended. To avoid complete lockout, a 'Break Glass' account with full Global Administrator rights is recommended in the event all other administrators are locked out of authenticating to Azure Active Directory. This 'Break Glass' account should be excluded from Conditional Access Policies and should be configured with the longest pass phrase feasible. This account should only be used in the event of an emergency and complete administrator lockout.&lt;/p&gt;&lt;p&gt;For exclusionary Geographic Access Policies, Azure AD Premium is required. Limiting access geographically will deny access to users that are traveling or working remotely in a different part of the world. A point-to-site or site to site tunnel such as a VPN is recommended to address exceptions to geographic access policies.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Conditional Access: Block access by location" url="https://learn.microsoft.com/en-us/azure/active-directory/conditional-access/howto-conditional-access-policy-location"/>
            <reference name="IM-7: Restrict resource access based on conditions" url="https://learn.microsoft.com/en-us/security/benchmark/azure/security-controls-v3-identity-management#im-7-restrict-resource-access-based-on--conditions"/>
            <reference name="Using the location condition in a Conditional Access policy" url="https://learn.microsoft.com/en-us/azure/active-directory/conditional-access/location-condition"/>
            <reference name="What is Conditional Access report-only mode?" url="https://learn.microsoft.com/en-us/azure/active-directory/conditional-access/concept-conditional-access-report-only"/>
          </references>
          <standards>
            <standard ref="1.2.1" supportedStandardRef="cis-azure-standard"/>
            <standard ref="1.2.2" supportedStandardRef="cis-azure-standard"/>
            <standard ref="IM-7" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;From Azure Portal&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;1. In the Azure Portal, navigate to Azure AD Conditional Access&lt;/p&gt;&lt;p&gt;2. Click on Named locations&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;Ensure there are IP ranges location settings configured and marked as Trusted&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;From PowerShell&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;Get-AzureADMSNamedLocationPolicy&lt;/p&gt;&lt;p&gt;&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;In the output from the above command, for each Named location group, make sure at least one entry contains the IsTrusted parameter with a value of True. Otherwise, if there is no output as a result of the above command or all of the entries contain the IsTrusted parameter with an empty value, a NULL value, or a value of False, the results are out of compliance with this check.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:16.212">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-AD3" name="Designate more than one global administrator in Azure AD" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Designate more than one global administrator in Azure AD&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; It is important that you prevent being accidentally locked out of your Azure Active Directory (Azure AD) organization because you cannot sign in or activate another user's account as an administrator. You can mitigate the impact of accidental lack of administrative access by creating two or more emergency access accounts in your organization.&lt;/p&gt; 
&lt;p&gt;Emergency access accounts are highly privileged, and they are not assigned to specific individuals. Emergency access accounts are limited to emergency or "break glass"' scenarios where normal administrative accounts cannot be used. Azure recommends that you maintain a goal of restricting emergency account use to only the times when it is absolutely necessary.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Create emergency access accounts&lt;/p&gt; 
&lt;p&gt;Create two or more emergency access accounts. These accounts should be cloud-only accounts that use the *.onmicrosoft.com domain and that are not federated or synchronized from an on-premises environment.&lt;/p&gt; 
&lt;p&gt;When configuring these accounts, the following requirements must be met:&lt;/p&gt; 
&lt;p&gt;- The emergency access accounts should not be associated with any individual user in the organization. Make sure that your accounts are not connected with any employee-supplied mobile phones, hardware tokens that travel with individual employees, or other employee-specific credentials. This precaution covers instances where an individual employee is unreachable when the credential is needed. It is important to ensure that any registered devices are kept in a known, secure location that has multiple means of communicating with Azure AD.&lt;br&gt; - The authentication mechanism used for an emergency access account should be distinct from that used by your other administrative accounts, including other emergency access accounts. For example, if your normal administrator sign-in is via on-premises MFA, then Azure AD MFA would be a different mechanism. However if Azure AD MFA is your primary part of authentication for your administrative accounts, then consider a different approach for these, such as using Conditional Access with a third-party MFA provider via Custom controls.&lt;br&gt; - The device or credential must not expire or be in scope of automated cleanup due to lack of use.&lt;br&gt; - You should make the Global Administrator role assignment permanent for your emergency access accounts.&lt;/p&gt; 
&lt;p&gt;Exclude at least one account from phone-based multi-factor authentication&lt;/p&gt; 
&lt;p&gt;To reduce the risk of an attack resulting from a compromised password, Azure AD recommends that you require multi-factor authentication for all individual users. This group includes administrators and all others (for example, financial officers) whose compromised account would have a significant impact.&lt;/p&gt; 
&lt;p&gt;However, at least one of your emergency access accounts should not have the same multi-factor authentication mechanism as your other non-emergency accounts. This includes third-party multi-factor authentication solutions. If you have a Conditional Access policy to require multi-factor authentication for every administrator for Azure AD and other connected software as a service (SaaS) apps, you should exclude emergency access accounts from this requirement, and configure a different mechanism instead. Additionally, you should make sure the accounts do not have a per-user multi-factor authentication policy.&lt;/p&gt; 
&lt;p&gt;Exclude at least one account from Conditional Access policies&lt;/p&gt; 
&lt;p&gt;During an emergency, you do not want a policy to potentially block your access to fix an issue. At least one emergency access account should be excluded from all Conditional Access policies.&lt;/p&gt; 
&lt;p&gt;In addition you have to store the credentials for emergency access accounts safely and monitor sign-in and audit log activity.&lt;br&gt; For more information please see Reference URL.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Manage emergency access accounts in Azure AD" url="https://docs.microsoft.com/en-us/azure/active-directory/roles/security-emergency-access"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that you have at least two emergency access accounts.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:16.210">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-AD8" name="Disable end-user consent to applications" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Disable end-user consent to applications&lt;/p&gt;
&lt;p&gt;Rationale:&lt;br&gt; The admin consent workflow gives admins a secure way to grant access to applications that require admin approval so end users do not expose corporate data. Microsoft recommends disabling future user consent operations to help reduce your surface area and mitigate this risk.&lt;/p&gt;
&lt;p&gt;Remediation:&lt;br&gt; To configure user consent settings through the Azure portal:&lt;/p&gt;
&lt;p&gt;1. Sign in to the Azure portal as a Global Administrator.&lt;br&gt; 2. Select Azure Active Directory &amp;gt; Enterprise applications &amp;gt; Consent and permissions &amp;gt; User consent settings.&lt;br&gt; 3. Under User consent for applications, select "Do not allow user consent" &lt;br&gt; 4. Select Save to save your settings.&lt;/p&gt;
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Configure how end-users consent to applications" url="https://docs.microsoft.com/en-us/azure/active-directory/manage-apps/configure-user-consent"/>
          </references>
          <standards>
            <standard ref="1.12" supportedStandardRef="cis-azure-standard"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that end-user consent to applications is disabled.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:16.210">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-AD11" name="Enable Azure AD Identity Protection" issueId="" issueLink="" platform="" cost="1" risk="45" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Enable Azure Active Directory Identity Protection&lt;/p&gt;

  &lt;p&gt;Rationale:&lt;br /&gt;
Identity Protection is a tool that allows organizations to accomplish three key tasks:&lt;/p&gt;

  &lt;p&gt;- Automate the detection and remediation of identity-based risks.&lt;br /&gt;
- Investigate risks using data in the portal.&lt;br /&gt;
- Export risk detection data to third-party utilities for further analysis.&lt;/p&gt;

  &lt;p&gt;Identity Protection uses the learnings Microsoft has acquired from their position in organizations with Azure AD, the consumer space with Microsoft Accounts, and in gaming with Xbox to protect your users. Microsoft analyses 6.5 trillion signals per day to identify and protect customers from threats.&lt;/p&gt;

  &lt;p&gt;The signals generated by and fed to Identity Protection, can be further fed into tools like Conditional Access to make access decisions, or fed back to a security information and event management (SIEM) tool for further investigation based on your organization's enforced policies.&lt;/p&gt;

  &lt;p&gt;Remediation:&lt;br /&gt;
Using this feature requires an Azure AD Premium P2 license.&lt;/p&gt;

  &lt;p&gt;Then in the Azure portal under Azure Active Directory &gt; Security &gt; Identity Protection you can:&lt;/p&gt;

  &lt;p&gt;- Configure the MFA registration policy&lt;br /&gt;
- Configure risk policies&lt;br /&gt;
- Configure notifications&lt;/p&gt;

  &lt;p&gt;For more information please see Reference URLs.&lt;/p&gt;

  &lt;p&gt;Impact:&lt;br /&gt;
None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Azure Active Directory Identity Protection notifications" url="https://docs.microsoft.com/en-us/azure/active-directory/identity-protection/howto-identity-protection-configure-notifications"/>
            <reference name="How To: Configure and enable risk policies" url="https://docs.microsoft.com/en-us/azure/active-directory/identity-protection/howto-identity-protection-configure-risk-policies"/>
            <reference name="How To: Configure the Azure AD Multi-Factor Authentication registration policy" url="https://docs.microsoft.com/en-us/azure/active-directory/identity-protection/howto-identity-protection-configure-mfa-policy"/>
            <reference name="What is Identity Protection?" url="https://docs.microsoft.com/en-us/azure/active-directory/identity-protection/overview-identity-protection"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="LT-2" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that Azure Active Directory Identity Protection is enabled.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:16.210">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-AD5" name="Enable combined security information registration in Azure AD" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Enable combined security information registration in Azure AD&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Before combined registration, users registered authentication methods for Azure AD Multi-Factor Authentication and self-service password reset (SSPR) separately. People were confused that similar methods were used for Azure AD Multi-Factor Authentication and SSPR but they had to register for both features. Now, with combined registration, users can register once and get the benefits of both Azure AD Multi-Factor Authentication and SSPR.&lt;br&gt; Note: Starting on August 15th 2020, all new Azure AD tenants will be automatically enabled for combined registration. Starting on December 14th 2020, all Azure AD tenants with one user will be automatically enabled for combined registration.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; To enable combined registration, complete these steps:&lt;/p&gt; 
&lt;p&gt;1. Sign in to the Azure portal as a user administrator or global administrator.&lt;/p&gt; 
&lt;p&gt;2. Go to Azure Active Directory &amp;gt; User settings &amp;gt; Manage user feature preview settings.&lt;/p&gt; 
&lt;p&gt;3. Under Users can use the combined security information registration experience, choose to enable for a Selected group of users or for All users.&lt;/p&gt; 
&lt;p&gt;Create a policy to require registration from a trusted location&lt;/p&gt; 
&lt;p&gt;Complete the following steps to create a policy that applies to all selected users that attempt to register using the combined registration experience, and blocks access unless they are connecting from a location marked as trusted network:&lt;/p&gt; 
&lt;p&gt;1. In the Azure portal, browse to Azure Active Directory &amp;gt; Security &amp;gt; Conditional Access.&lt;/p&gt; 
&lt;p&gt;2. Select + New policy.&lt;/p&gt; 
&lt;p&gt;3. Enter a name for this policy, such as Combined Security Info Registration on Trusted Networks.&lt;/p&gt; 
&lt;p&gt;4. Under Assignments, select Users and groups. Choose the users and groups you want this policy to apply to, then select Done.&lt;/p&gt; 
&lt;p&gt;Warning: Users must be enabled for combined registration.&lt;/p&gt; 
&lt;p&gt;5. Under Cloud apps or actions, select User actions. Check Register security information, then select Done.&lt;/p&gt; 
&lt;p&gt;6. Under Conditions &amp;gt; Locations, configure the following options:&lt;br&gt; a. Configure Yes.&lt;br&gt; b. Include Any location.&lt;br&gt; c. Exclude All trusted locations.&lt;/p&gt; 
&lt;p&gt;7. Select Done on the Locations window, then select Done on the Conditions window.&lt;/p&gt; 
&lt;p&gt;8. Under Access controls &amp;gt; Grant, choose Block access, then Select.&lt;/p&gt; 
&lt;p&gt;9. Set Enable policy to On.&lt;/p&gt; 
&lt;p&gt;10. To finalize the policy, select Create.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Enable combined security information registration in Azure Active Directory" url="https://docs.microsoft.com/en-us/azure/active-directory/authentication/howto-registration-mfa-sspr-combined"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that combined security information registration is enabled.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:16.210">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-AD14" name="Enable device based Conditional Access" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Enable device based Conditional Access&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Improve security and user experiences with device-based Conditional Access. This control ensures users can only access from devices that meet your standards for security and compliance. These devices are also known as managed devices. Managed devices can be Intune compliant or Hybrid Azure AD joined devices.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Managed devices&lt;/p&gt; 
&lt;p&gt;In simple terms, managed devices are devices that are under some sort of organizational control. In Azure AD, the prerequisite for a managed device is that it has been registered with Azure AD. Registering a device creates an identity for the device in form of a device object. This object is used by Azure to track status information about a device. As an Azure AD administrator, you can already use this object to toggle (enable/disable) the state of a device.&lt;/p&gt; 
&lt;p&gt;To get a device registered with Azure AD, you have three options:&lt;/p&gt; 
&lt;p&gt;- Azure AD registered devices - to get a personal device registered with Azure AD&lt;br&gt; - Azure AD joined devices - to get an organizational Windows 10 device that is not joined to an on-premises AD registered with Azure AD.&lt;br&gt; - Hybrid Azure AD joined devices - to get a Windows 10 or supported down-level device that is joined to an on-premises AD registered with Azure AD.&lt;/p&gt; 
&lt;p&gt;To become a managed device, a registered device must be either a Hybrid Azure AD joined device or a device that has been marked as compliant.&lt;/p&gt; 
&lt;p&gt;Require Hybrid Azure AD joined devices&lt;/p&gt; 
&lt;p&gt;In your Conditional Access policy, you can select Require Hybrid Azure AD joined device to state that the selected cloud apps can only be accessed using a managed device.&lt;/p&gt; 
&lt;p&gt;This setting only applies to Windows 10 or down-level devices such as Windows 7 or Windows 8 that are joined to an on-premises AD. You can only register these devices with Azure AD using a Hybrid Azure AD join, which is an automated process to get a Windows 10 device registered.&lt;/p&gt; 
&lt;p&gt;What makes a Hybrid Azure AD joined device a managed device? For devices that are joined to an on-premises AD, it is assumed that the control over these devices is enforced using management solutions such as Configuration Manager or group policy (GP) to manage them. Because there is no method for Azure AD to determine whether any of these methods has been applied to a device, requiring a hybrid Azure AD joined device is a relatively weak mechanism to require a managed device. It is up to you as an administrator to judge whether the methods that are applied to your on-premises domain-joined devices are strong enough to constitute a managed device if such a device is also a Hybrid Azure AD joined device.&lt;/p&gt; 
&lt;p&gt;Require device to be marked as compliant&lt;/p&gt; 
&lt;p&gt;The option to require a device to be marked as compliant is the strongest form to request a managed device.&lt;/p&gt; 
&lt;p&gt;This option requires a device to be registered with Azure AD, and also to be marked as compliant by:&lt;br&gt; - Intune&lt;br&gt; - A third-party mobile device management (MDM) system that manages Windows 10 devices via Azure AD integration. Third-party MDM systems for device OS types other than Windows 10 are not supported.&lt;/p&gt; 
&lt;p&gt;For a device that is marked as compliant, you can assume that:&lt;br&gt; - The mobile devices your workforce uses to access company data are managed&lt;br&gt; - Mobile apps your workforce uses are managed&lt;br&gt; - Your company information is protected by helping to control the way your workforce accesses and shares it&lt;br&gt; - The device and its apps are compliant with company security requirements&lt;/p&gt; 
&lt;p&gt;Scenario: Require device enrollment for iOS and Android devices&lt;/p&gt; 
&lt;p&gt;In this scenario, Contoso has decided that all mobile access to Microsoft 365 resources must use an enrolled device. All of their users already sign in with Azure AD credentials and have licenses assigned to them that include Azure AD Premium P1 or P2 and Microsoft Intune.&lt;/p&gt; 
&lt;p&gt;Organizations must complete the following steps in order to require the use of an enrolled mobile device.&lt;/p&gt; 
&lt;p&gt;1. Sign in to the Azure portal as a global administrator, security administrator, or Conditional Access administrator.&lt;br&gt; 2. Browse to Azure Active Directory &amp;gt; Security &amp;gt; Conditional Access.&lt;br&gt; 3. Select New policy.&lt;br&gt; 4. Give your policy a name. We recommend that organizations create a meaningful standard for the names of their policies.&lt;br&gt; 5. Under Assignments, select Users and groups&lt;br&gt; a. Under Include, select All users or the specific Users and groups you wish to apply this policy to.&lt;br&gt; b. Select Done.&lt;br&gt; 6. Under Cloud apps or actions &amp;gt; Include, select Office 365.&lt;br&gt; 7. Under Conditions, select Device platforms.&lt;br&gt; a. Set Configure to Yes.&lt;br&gt; b. Include Android and iOS.&lt;br&gt; 8. Under Access controls &amp;gt; Grant, select the following options:&lt;br&gt; - Require device to be marked as compliant&lt;br&gt; 9. Confirm your settings and set Enable policy to On.&lt;br&gt; 10. Select Create to create and enable your policy.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="How To: Require managed devices for cloud app access with Conditional Access" url="https://docs.microsoft.com/en-us/azure/active-directory/conditional-access/require-managed-devices#require-hybrid-azure-ad-joined-devices"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that device based Conditional Access is enabled.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:16.211">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-L01" name="Enable diagnostic logs auditing for Microsoft Azure" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Diagnostic Logs capture activity to the data access plane while the Activity log is a subscription-level log for the control plane. Resource-level diagnostic logs provide insight into operations that were performed within that resource itself, for example, getting a secret from a Key Vault. Currently, 32 Azure resources support Diagnostic Logging (See the references section for a complete list), including Network Security Groups, Load Balancers, Key Vault, AD, Logic Apps and CosmosDB. The content of these logs varies by resource type. For example, Windows event system logs are a category of diagnostics logs for VMs, and blob, table, and queue logs are categories of diagnostics logs for storage accounts.&lt;/p&gt;&lt;p&gt;A number of back-end services were not configured to log and store Diagnostic Logs for certain activities or for a sufficient length. It is crucial that logging systems are correctly configured to log all relevant activities and retain those logs for a sufficient length of time. By default, Diagnostic Logs are not enabled. Given that the mean time to detection in an enterprise is 240 days, a minimum retention period of two years is recommended.&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation:&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;The specific steps for configuring resources within the Azure console vary depending on resource, but typically the steps are:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Go to the resource&lt;/li&gt;&lt;li&gt;Click on Diagnostic settings&lt;/li&gt;&lt;li&gt;In the blade that appears, click "Add diagnostic setting"&lt;/li&gt;&lt;li&gt;Configure the diagnostic settings&lt;/li&gt;&lt;li&gt;Click on Save&lt;/li&gt;&lt;/ol&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Enable diagnostics logging for web apps in Azure App Service" url="https://docs.microsoft.com/en-us/azure/app-service-web/web-sites-enable-diagnostic-log"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5.3" supportedStandardRef="cis-azure-standard"/>
            <standard ref="5.3" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="LT-4" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="LT-5" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Go to the resource&lt;/li&gt;&lt;li&gt;Click on Diagnostic settings&lt;/li&gt;&lt;li&gt;In the blade that appears, click "Add diagnostic setting"&lt;/li&gt;&lt;li&gt;Configure the diagnostic settings&lt;/li&gt;&lt;li&gt;Click on Save&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:16.211">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-A04" name="Enable MFA for Administrator &amp; Co Administrator accounts" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Enable multi-factor authentication (MFA) device enhances the security of the login process for the Administrator accounts. With MFA, users have a device that generates a unique authentication code (a one-time password, or OTP) and users must provide both their normal credentials (like their username and password) and the OTP. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The MFA device can either be a special piece of hardware, or it can be a virtual device. The recommendation for the Service Administrator &amp;amp; Co Administrator accounts is to use MFA to increase the level of security of the login process. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt; 
  &lt;li&gt;Select Azure Active Directory.&lt;/li&gt; 
  &lt;li&gt;Go into "Users and groups" &amp;gt; "All users".&lt;/li&gt; 
  &lt;li&gt;Select "Multi-Factor Authentication".&lt;/li&gt; 
  &lt;li&gt;Choose all the Service Administrator &amp;amp; Co Administrator accounts and enable MFA.&amp;nbsp;&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - How to require two-step verification for a user or group" url="https://docs.microsoft.com/en-us/azure/multi-factor-authentication/multi-factor-authentication-get-started-user-states"/>
          </references>
          <standards>
            <standard ref="IM-6" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="IM-7" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;Multi-Factor Authentication&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check all Administrator accounts have got the MFA flag enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:16.211">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-AD16" name="Enable Microsoft's password guidance" issueId="" issueLink="" platform="" cost="0" risk="40" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Enable Microsoft's password guidance&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Password Guidance provides Microsoft's recommendations for password management based on current research and lessons from their own experience as one of the largest Identity Providers (IdPs) in the world. It covers recommendations for end users and identity administrators.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Download and enforce Microsoft's password guidance in your organization.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Password Guidance" url="https://www.microsoft.com/en-us/research/publication/password-guidance/"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that Microsoft's password guidance is enabled.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:16.211">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-AD7" name="Enable password writeback for SSPR if using hybrid identities" issueId="" issueLink="" platform="" cost="0" risk="40" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Enable password writeback for SSPR if using hybrid identities&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; With Azure Active Directory (Azure AD) self-service password reset (SSPR), users can update their password or unlock their account using a web browser. In a hybrid environment where Azure AD is connected to an on-premises Active Directory Domain Services (AD DS) environment, this scenario can cause passwords to be different between the two directories.&lt;/p&gt; 
&lt;p&gt;Password writeback can be used to synchronize password changes in Azure AD back to your on-premises AD DS environment. Azure AD Connect provides a secure mechanism to send these password changes back to an existing on-premises directory from Azure AD.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;/p&gt; 
&lt;p&gt;Enable password writeback for SSPR&lt;/p&gt; 
&lt;p&gt;Note: Before proceeding to the following steps, make sure you have enabled password writeback to Azure AD Connect first.&lt;/p&gt; 
&lt;p&gt;With password writeback enabled in Azure AD Connect, now configure Azure AD SSPR for writeback. When you enable SSPR to use password writeback, users who change or reset their password have that updated password synchronized back to the on-premises AD DS environment as well.&lt;/p&gt; 
&lt;p&gt;To enable password writeback in SSPR, complete the following steps:&lt;/p&gt; 
&lt;p&gt;1. Sign in to the Azure portal using a global administrator account.&lt;/p&gt; 
&lt;p&gt;2. Search for and select Azure Active Directory, select Password reset, then choose On-premises integration.&lt;/p&gt; 
&lt;p&gt;3. Set the option for Write back passwords to your on-premises directory? to Yes.&lt;/p&gt; 
&lt;p&gt;4. Set the option for Allow users to unlock accounts without resetting their password? to Yes.&lt;/p&gt; 
&lt;p&gt;5. When ready, select Save.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Tutorial: Enable Azure Active Directory self-service password reset writeback to an on-premises environment" url="https://docs.microsoft.com/en-us/azure/active-directory/authentication/tutorial-enable-sspr-writeback#enable-password-writeback-for-sspr"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that password writeback for SSPR is enabled.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:16.211">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-USER-MFA" name="Enable per-user MFA" issueId="" issueLink="" platform="" cost="0" risk="40" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Enable per-user MFA 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  Multi-factor authentication (MFA) is a process where a user is prompted during a sign-in event for additional forms of identification. This prompt could be to enter a code on their cellphone or to provide a fingerprint scan. When you require a second form of authentication, security is increased as this additional factor isn't something that's easy for an attacker to obtain or duplicate. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  To secure user sign-in events in Azure AD, you can require multi-factor authentication (MFA). Enabling Azure AD Multi-Factor Authentication using Conditional Access policies is the recommended approach to protect users. Conditional Access is an Azure AD Premium P1 or P2 feature that lets you apply rules to require MFA as needed in certain scenarios 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  For Azure AD free tenants without Conditional Access, you can use security defaults to protect users. Users are prompted for MFA as needed, but you can't define your own rules to control the behavior. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Features and licenses for Azure AD Multi-Factor Authentication" url="https://docs.microsoft.com/en-us/azure/active-directory/authentication/concept-mfa-licensing"/>
          </references>
          <standards>
            <standard ref="1.1.2" supportedStandardRef="cis-azure-standard"/>
            <standard ref="1.1.2" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="1.1.3" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="IM-6" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="IM-7" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  1. Log into the Azure portal as an owner. 
&lt;/div&gt; 
&lt;div&gt;
  2. Select Azure Active Directory. 
&lt;/div&gt; 
&lt;div&gt;
  3. Go into "Users and groups" &amp;gt; "All users". 
&lt;/div&gt; 
&lt;div&gt;
  4. Select "Multi-Factor Authentication". 
&lt;/div&gt; 
&lt;div&gt;
  5. Ensure your users have the MFA flag enabled. 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:16.211">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-AD10" name="Enable Privileged Identity Management for tracking admin role use" issueId="" issueLink="" platform="" cost="1" risk="45" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Enable Privileged Identity Management for tracking admin role use&lt;/p&gt;

  &lt;p&gt;Rationale:&lt;br /&gt;
Use Privileged Identity Management (PIM) to manage, control, and monitor access within your Azure Active Directory (Azure AD) organization. With PIM you can provide as-needed and just-in-time access to Azure resources, Azure AD resources, and other Microsoft online services like Microsoft 365 or Microsoft Intune.&lt;/p&gt;

  &lt;p&gt;Remediation:&lt;br /&gt;
Licensing requirements&lt;/p&gt;

  &lt;p&gt;To use Privileged Identity Management, your directory must have one of the following paid or trial licenses.&lt;/p&gt;

  &lt;p&gt;- Azure AD Premium P2&lt;br /&gt;
- Enterprise Mobility + Security (EMS) E5&lt;/p&gt;

  &lt;p&gt;When a user who is active in a privileged role in an Azure AD organization with a Premium P2 license goes to Roles and administrators in Azure AD and selects a role (or even just visits Privileged Identity Management):&lt;/p&gt;

  &lt;p&gt;- Azure automatically enables PIM for the organization&lt;br /&gt;
- Their experience is now that they can either assign a "regular" role assignment or an eligible role assignment&lt;br /&gt;
When PIM is enabled it doesn't have any other effect on your organization that you need to worry about. It gives you additional assignment options such as active vs eligible with start and end time. PIM also enables you to define scope for role assignments using Administrative Units and custom roles. If you are a Global Administrator or Privileged Role Administrator, you might start getting a few additional emails like the PIM weekly digest. You might also see MS-PIM service principal in the audit log related to role assignment. This is an expected change that should have no effect on your workflow.&lt;/p&gt;

  &lt;p&gt;For more PIM configurations please see Reference URL.&lt;/p&gt;

  &lt;p&gt;Impact:&lt;br /&gt;
None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Start using Privileged Identity Management" url="https://docs.microsoft.com/en-us/azure/active-directory/privileged-identity-management/pim-getting-started"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="PA-4" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that Privileged Identity Management is enabled.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:16.211">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-AD2" name="Enable Security defaults for Azure AD" issueId="" issueLink="" platform="" cost="0" risk="40" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Enable Security defaults for Azure AD&lt;/p&gt;&lt;p&gt;Rationale:&lt;br&gt; Managing security can be difficult with common identity-related attacks like password spray, replay, and phishing becoming more and more popular. Security defaults make it easier to help protect your organization from these attacks with preconfigured security settings:&lt;/p&gt;&lt;p&gt;- Requiring all users to register for Azure AD Multi-Factor Authentication.&lt;br&gt; - Requiring administrators to perform multi-factor authentication.&lt;br&gt; - Blocking legacy authentication protocols.&lt;br&gt; - Requiring users to perform multi-factor authentication when necessary.&lt;br&gt; - Protecting privileged activities like access to the Azure portal.&lt;/p&gt;&lt;p&gt;Note: If your tenant was created on or after October 22, 2019, it is possible security defaults are already enabled in your tenant.&lt;/p&gt;&lt;p&gt;Remediation:&lt;br&gt; Enabling security defaults&lt;br&gt; To enable security defaults in your directory:&lt;/p&gt;&lt;p&gt;1. Sign in to the Azure portal as a security administrator, Conditional Access administrator, or global administrator.&lt;br&gt; 2. Browse to Azure Active Directory &amp;gt; Properties.&lt;br&gt; 3. Select Manage security defaults.&lt;br&gt; 4. Set the Enable security defaults toggle to Yes.&lt;br&gt; 5. Select Save.&lt;/p&gt;&lt;p&gt;Impact:&lt;br&gt; Warning: Before you enable security defaults, make sure your administrators are not using older authentication protocols.&lt;/p&gt;&lt;p&gt;Who should use Conditional Access instead of Security defaults?&lt;br&gt; - If you are an organization currently using Conditional Access policies to bring signals together, to make decisions, and enforce organizational policies, security defaults are probably not right for you.&lt;br&gt; - If you are an organization with Azure Active Directory Premium licenses, security defaults are probably not right for you.&lt;br&gt; - If your organization has complex security requirements you should consider Conditional Access.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="What are security defaults?" url="https://docs.microsoft.com/en-us/azure/active-directory/fundamentals/concept-fundamentals-security-defaults"/>
          </references>
          <standards>
            <standard ref="1.1.1" supportedStandardRef="cis-azure-standard"/>
            <standard ref="1.1.1" supportedStandardRef="cis-azure-standard-level-2"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;To ensure that Security defaults are enabled:&lt;/p&gt;      &lt;p&gt;1. Sign in to the Azure portal as a security administrator, Conditional Access administrator, or global administrator.&lt;br /&gt;  2. Browse to Azure Active Directory &gt; Properties.&lt;br /&gt;  3. Select Manage security defaults.&lt;br /&gt;  4. Check that the Enable security defaults toggle is set to Yes.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:16.211">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-AD6" name="Enable self-service password reset (SSPR)" issueId="" issueLink="" platform="" cost="0" risk="40" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Enable self-service password reset (SSPR)&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Self-Service Password Reset (SSPR) is an Azure Active Directory (AD) feature that enables users to reset their passwords without contacting IT staff for help. The users can quickly unblock themselves and continue working no matter where they are or time of day. By allowing the employees to unblock themselves, your organization can reduce the non-productive time and high support costs for most common password-related issues.&lt;/p&gt; 
&lt;p&gt;SSPR has the following key capabilities:&lt;/p&gt; 
&lt;p&gt;- Self-service allows end users to reset their expired or non-expired passwords without contacting an administrator or helpdesk for support.&lt;br&gt; - Password Writeback allows management of on-premises passwords and resolution of account lockout though the cloud.&lt;br&gt; - Password management activity reports give administrators insight into password reset and registration activity occurring in their organization.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; This is how configure SSPR for a set of users in a test group. In the following example, the group SSPR-Test-Group is used. Provide your own Azure AD group as needed:&lt;/p&gt; 
&lt;p&gt;1. Sign in to the Azure portal using an account with global administrator permissions.&lt;/p&gt; 
&lt;p&gt;2. Search for and select Azure Active Directory, then choose Password reset from the menu on the left-hand side.&lt;/p&gt; 
&lt;p&gt;3. From the Properties page, under the option Self service password reset enabled, choose Select group&lt;/p&gt; 
&lt;p&gt;4. Browse for and select your Azure AD group, such as SSPR-Test-Group, then choose Select.&lt;/p&gt; 
&lt;p&gt;5. To enable SSPR for the select users, select Save.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Plan an Azure Active Directory self-service password reset deployment" url="https://docs.microsoft.com/en-us/azure/active-directory/authentication/howto-sspr-deployment"/>
            <reference name="Tutorial: Enable users to unlock their account or reset passwords using Azure Active Directory self-service password reset" url="https://docs.microsoft.com/en-us/azure/active-directory/authentication/tutorial-enable-sspr"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Test self-service password reset&lt;/p&gt;

  &lt;p&gt;With SSPR enabled and configured, test the SSPR process with a user that's part of the group you selected in the Remediation section, such as Test-SSPR-Group. In the following example, the testuser account is used. Provide your own user account that's part of the group you enabled for SSPR in the Remediation section.&lt;/p&gt;

  &lt;p&gt;Note: When you test self-service password reset, use a non-administrator account. By default, admins are enabled for self-service password reset and are required to use two authentication methods to reset their password. For more information, see Administrator reset policy differences.&lt;/p&gt;

  &lt;p&gt;1. To see the manual registration process, open a new browser window in InPrivate or incognito mode, and browse to https://aka.ms/ssprsetup. Users should be directed to this registration portal when they next sign-in.&lt;/p&gt;

  &lt;p&gt;2. Sign in with a non-administrator test user, such as testuser, and register your authentication methods contact information.&lt;/p&gt;

  &lt;p&gt;3. Once complete, select the button marked Looks good and close the browser window.&lt;/p&gt;

  &lt;p&gt;4. Open a new browser window in InPrivate or incognito mode, and browse to https://aka.ms/sspr.&lt;/p&gt;

  &lt;p&gt;5. Enter your non-administrator test users' account information, such as testuser, the characters from the CAPTCHA, and then select Next.&lt;/p&gt;

  &lt;p&gt;6. Follow the verification steps to reset your password. When complete, you should receive an e-mail notification that your password was reset.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:16.211">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-AD17" name="Ensure there are no Azure Active Directory guest users if they are not needed" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Azure AD is extended to include Azure AD B2B collaboration, allowing you to invite people from outside your organization to be guest users in your cloud account and sign in with their own work, school, or social identities. Guest users allow you to share your company's applications and services with users from any other organization, while maintaining control over your own corporate data.&lt;/p&gt;
&lt;p&gt;Work with external partners, large or small, even if they don't have Azure AD or an IT department. A simple invitation and redemption process lets partners use their own credentials to access your company's resources a a guest user.&lt;/p&gt;
&lt;p&gt;Rationale:&lt;/p&gt;
&lt;p&gt;Guest users in the Azure AD are generally required for collaboration purposes in Office 365, and may also be required for Azure functions in enterprises with multiple Azure tenants, Guest users should be reviewed on a regular basis, at least annually, Guest users should not be granted administrative roles where possible.&lt;/p&gt;
&lt;p&gt;Guest users are typically added outside your employee on-boarding/off-boarding process and could potentially be overlooked indefinitely leading to a potential vulnerability.&lt;/p&gt;
&lt;p&gt;Guest users should be reviewed on a monthly basis to ensure that inactive and unneeded accounts are removed.&lt;/p&gt;
&lt;p&gt;Impact:&lt;/p&gt;
&lt;p&gt;Until you have a business need to provide guest access to any user, avoid creating guest users. If guest accounts are being used, they should be removed when no longer required.&lt;/p&gt;
&lt;p&gt;Remediation:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;From Azure Console&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
 &lt;li&gt;Go to Azure Active Directory&lt;/li&gt;
 &lt;li&gt;Go to Users and group&lt;/li&gt;
 &lt;li&gt;Go to All Users&lt;/li&gt;
 &lt;li&gt;Click on Show drop down and select Guest users only&lt;/li&gt;
 &lt;li&gt;Delete all "Guest" users that are no longer required or are inactive.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;It is good practice to use a dynamic group to manage guest users. To create the dynamic group:&lt;/p&gt;
&lt;ol&gt;
 &lt;li&gt;Navigate to the Active Directory blade in the Azure Portal&lt;/li&gt;
 &lt;li&gt;Select the &lt;i&gt;Groups &lt;/i&gt;item&lt;/li&gt;
 &lt;li&gt;Create new&lt;/li&gt;
 &lt;li&gt;Type of &lt;i&gt;dynamic&lt;/i&gt;&lt;/li&gt;
 &lt;li&gt;Use the following dynamic selection rule. "(user.userType -eq "Guest")"&lt;/li&gt;
 &lt;li&gt;Once the group has been created, select access reviews option and create a new access review with a period of monthly and send to relevant administrators for review.&lt;/li&gt;
&lt;/ol&gt;</desc>
          <implementations/>
          <references>
            <reference name="Delete a user" url="https://learn.microsoft.com/en-us/azure/active-directory/fundamentals/add-users-azure-active-directory#delete-a-user"/>
            <reference name="How To: Manage inactive user accounts in Azure AD" url="https://learn.microsoft.com/en-us/azure/active-directory/reports-monitoring/howto-manage-inactive-user-accounts"/>
            <reference name="Manage guest access with Microsoft Entra access reviews" url="https://learn.microsoft.com/en-us/azure/active-directory/governance/manage-guest-access-with-access-reviews"/>
            <reference name="Properties of an Azure Active Directory B2B collaboration user" url="https://learn.microsoft.com/en-us/azure/active-directory/external-identities/user-properties"/>
            <reference name="Restore or remove a recently deleted user using Azure Active Directory" url="https://learn.microsoft.com/en-us/azure/active-directory/fundamentals/active-directory-users-restore"/>
            <reference name="Security Control v3: Privileged access" url="https://learn.microsoft.com/en-us/security/benchmark/azure/security-controls-v3-privileged-access#pa-3-review-and-reconcile-user-access-regularly"/>
          </references>
          <standards>
            <standard ref="1.3" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="1.4" supportedStandardRef="cis-azure-standard"/>
            <standard ref="PA-3" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;&lt;strong&gt;From Azure Console&lt;/strong&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Go to Azure Active Directory&lt;/li&gt;&lt;li&gt;Go to Users and group&lt;/li&gt;&lt;li&gt;Go to All Users&lt;/li&gt;&lt;li&gt;Click on Show drop down and select Guest users only&lt;/li&gt;&lt;li&gt;Ensure that guest users listed are still required (USER TYPE = Guest)&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;strong&gt;Using Azure Command Line Interface 2.0&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;az ad user list --query "[?userType=='Guest']"&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Ensure all users listed are not inactive and still required.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Using PowerShell&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;Connect-AzureAD (Only needs to be performed once within the PowerShell session) Get-AzureADUser |Where-Object {$_.UserType -like "Guest"} |Select-Object DisplayName, UserPrincipalName, UserType -Unique&lt;/p&gt;&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:16.211">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-L05" name="Export the Audit Logs to a storage account" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Export the information of Audit Logs to a storage account. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Go to "Monitor" and then to "Activity Logs".&lt;/li&gt; 
  &lt;li&gt;Push the button "Export".&lt;/li&gt; 
  &lt;li&gt;Select "All Regions".&lt;/li&gt; 
  &lt;li&gt;Select "Export to a storage account" and select your account.&lt;/li&gt; 
  &lt;li&gt;Select the "Retention (days)" as minimum 90 days.&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Enable diagnostics logging for web apps in Azure App Service" url="https://docs.microsoft.com/en-us/azure/app-service-web/web-sites-enable-diagnostic-log"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="6.5" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Activity Logs&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Push the button &amp;quot;Export&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;All Regions&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;Export to a storage account&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that all fields are correctly filled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:16.211">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-AD9" name="Integrate supported SaaS applications from the gallery to Azure AD and enable SSO" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Integrate supported SaaS applications from the gallery to Azure AD and enable Single sign on (SSO)&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Azure AD has a gallery that contains thousands of pre-integrated applications. Some of the applications your organization uses are probably in the gallery accessible directly from the Azure portal. Provide access to corporate SaaS applications remotely and securely with improved user experience (SSO).&lt;/p&gt; 
&lt;p&gt;After integrating supported SaaS applications, you can automatically create user identities and roles in the cloud (SaaS) applications that users need access to. In addition to creating user identities, automatic provisioning includes the maintenance and removal of user identities as status or roles change, increasing your organization's security.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Add an app to your Azure AD tenant&lt;/p&gt; 
&lt;p&gt;To add an application to your Azure AD tenant:&lt;/p&gt; 
&lt;p&gt;1. In the Azure portal, on the left navigation panel, select Azure Active Directory.&lt;/p&gt; 
&lt;p&gt;2. In the Azure Active Directory pane, select Enterprise applications. The All applications pane opens and displays a random sample of the applications in your Azure AD tenant.&lt;/p&gt; 
&lt;p&gt;3. In the Enterprise applications pane, select New application.&lt;/p&gt; 
&lt;p&gt;4. Switch to the new gallery preview experience: In the banner at the top of the Add an application page, select the link that says Click here to try out the new and improved app gallery.&lt;/p&gt; 
&lt;p&gt;5. The Browse Azure AD Gallery (Preview) pane opens and displays tiles for cloud platforms, on-premises applications, and featured applications. Applications listed in the Featured applications section have icons indicating whether they support federated single sign-on (SSO) and provisioning.&lt;/p&gt; 
&lt;p&gt;6. You can browse the gallery for the application you want to add, or search for the application by entering its name in the search box. Then select the application from the results.&lt;/p&gt; 
&lt;p&gt;7. The next step depends on the way the developer of the application implemented single sign-on (SSO). Single sign-on can be implemented by app developers in four ways. The four ways are SAML, OpenID Connect, Password, and Linked. When you add an app, you can choose to filter and see only apps using a particular SSO implementation as shown in the screenshot. For example, a popular standard to implement SSO is called Security Assertion Markup Language (SAML). Another standard that is popular is called OpenId Connect (OIDC). The way you configure SSO with these standards is different so take note of the type of SSO that is implemented by the app that you are adding.&lt;/p&gt; 
&lt;p&gt;- If the developer of the app used the OIDC standard for SSO then select Sign Up. A setup page appears. Next, go to the quickstart on setting up OIDC-based single sign-on.&lt;/p&gt; 
&lt;p&gt;- If the developer of the app used the SAML standard for SSO then select Create. A getting started page appears with the options for configuring the application for your organization. In the form, you can edit the name of the application to match the needs of your organization. Next, go to the quickstart on setting up SAML-based single sign-on.&lt;/p&gt; 
&lt;p&gt;Important: There are some key differences between SAML-based and OIDC-based SSO implementations. With SAML-based apps you can add multiple instances of the same app. For example, GitHub1, GitHub2, etc.. For OIDC-based apps you can only add one instance of an app. If you have already added an OIDC-based app and try to add the same app again and provide consent twice, it will not be added again in the tenant.&lt;/p&gt; 
&lt;p&gt;If the application you are looking for is not in the gallery then you can select the link Create your own application and then under What are you looking to do with your application? choose Integrate any other application you do not find in the gallery. Microsoft has already worked with many application developers to pre-configure them to work with Azure AD. The pre-configured apps show up in the gallery. But if the app you want to add is not listed then you can create a new, generic, app and then configure it yourself or with the guidance of the developer that created it.&lt;/p&gt; 
&lt;p&gt;You have finished adding an application.&lt;/p&gt; 
&lt;p&gt;How to set up automatic provisioning to an application&lt;/p&gt; 
&lt;p&gt;For pre-integrated applications listed in the gallery, step-by-step guidance is available for setting up automatic provisioning. Please follow Reference URL for more details.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Quickstart: Add an application to your Azure Active Directory (Azure AD) tenant" url="https://docs.microsoft.com/en-us/azure/active-directory/manage-apps/add-application-portal"/>
            <reference name="What is automated SaaS app user provisioning in Azure AD?" url="https://docs.microsoft.com/en-us/azure/active-directory/app-provisioning/user-provisioning"/>
          </references>
          <standards>
            <standard ref="IM-5" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Testing supported SaaS applications integration&lt;/p&gt;

  &lt;p&gt;Azure recommends using a non-production environment to test the steps in the description section.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:16.211">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-A07" name="Recertify user access" issueId="" issueLink="" platform="" cost="0" risk="40" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Do regular reviews of accounts on the system and verify that it doesn't exist stoled or fake accounts. With this process is ensured that there are not compromised accounts by former employees or by attackers.&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation:&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;At least every 90 days complete the following:&amp;nbsp;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Log in to the Azure portal as an owner.&lt;/li&gt;&lt;li&gt;Select Azure Active Directory.&lt;/li&gt;&lt;li&gt;Go into "Users and groups" &amp;gt; "All users".&lt;/li&gt;&lt;li&gt;For any user that should not exist:&lt;/li&gt;&lt;li&gt;Select the user.&lt;/li&gt;&lt;li&gt;Click "Delete".&lt;/li&gt;&lt;/ol&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Assign a user or group to an enterprise app in Azure Active Directory" url="https://docs.microsoft.com/en-us/azure/active-directory/active-directory-coreapps-assign-user-azure-portal"/>
          </references>
          <standards>
            <standard ref="PA-4" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Log in to the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each user has got an assigned account.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:16.212">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-AD13" name="Secure legacy apps with Azure Active Directory" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Secure legacy apps with Azure Active Directory&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Publish and protect your on-premises and cloud legacy authentication applications by connecting them to Azure AD with your existing application delivery controller or network.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; You can protect your on-premises and cloud legacy authentication applications by connecting them to Azure Active Directory (AD) with:&lt;/p&gt; 
&lt;p&gt;- Azure AD Application Proxy&lt;/p&gt; 
&lt;p&gt;- Your existing application delivery controllers and networks&lt;/p&gt; 
&lt;p&gt;- Virtual Private Network (VPN) and Software-Defined Perimeter (SDP) applications&lt;/p&gt; 
&lt;p&gt;You can bridge the gap and strengthen your security posture across all applications with Azure AD capabilities like Azure AD Conditional Access and Azure AD Identity Protection.&lt;/p&gt; 
&lt;p&gt;For more details please see Reference URL.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Secure hybrid access: Secure legacy apps with Azure Active Directory" url="https://docs.microsoft.com/en-us/azure/active-directory/manage-apps/secure-hybrid-access"/>
          </references>
          <standards>
            <standard ref="IM-9" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that your on-premises and cloud legacy authentication applications are secured.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:16.212">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-AD15" name="Use Azure AD B2B to invite guest users" issueId="" issueLink="" platform="" cost="1" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Use Azure AD B2B to invite guest users&lt;/p&gt;

  &lt;p&gt;Rationale:&lt;br /&gt;
Azure Active Directory (Azure AD) business-to-business (B2B) collaboration is a feature within External Identities that lets you invite guest users to collaborate with your organization. With B2B collaboration, you can securely share your company's applications and services with guest users from any other organization, while maintaining control over your own corporate data. Work safely and securely with external partners, large or small, even if they don't have Azure AD or an IT department. A simple invitation and redemption process lets partners use their own credentials to access your company's resources. Developers can use Azure AD business-to-business APIs to customize the invitation process or write applications like self-service sign-up portals.&lt;/p&gt;

  &lt;p&gt;Remediation:&lt;br /&gt;
Invite guest users from the Azure AD portal&lt;/p&gt;

  &lt;p&gt;As an administrator, you can add guest users to your organization in the Azure portal.&lt;/p&gt;

  &lt;p&gt;- Create a new guest user in Azure AD, similar to how you'd add a new user.&lt;br /&gt;
- Assign guest users to apps or groups.&lt;br /&gt;
- Send an invitation email that contains a redemption link, or send a direct link to an app you want to share.&lt;br /&gt;
- Guest users follow a few simple redemption steps to sign in.&lt;/p&gt;

  &lt;p&gt;Impact:&lt;br /&gt;
None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="What is guest user access in Azure Active Directory B2B?" url="https://docs.microsoft.com/en-us/azure/active-directory/external-identities/what-is-b2b"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that Azure AD B2B is used to invite guest users.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:16.212">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="AUTHENTICATION" name="Authentication" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="AZURE-LOST-ACCESS-ROOT" name="Attackers gain unauthorized access to the root account due to the lack of configuration of the account" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;div&gt;Attackers could gain unauthorized access to the administrator account due to a lack of configuration of the account and its security mechanisms, making it possible to modify credentials and add/remove user accounts.
                                &lt;/div&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="AZ-W04">
                  <countermeasures>
                    <countermeasure ref="AZ-A04" mitigation="50"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AZURE-MON02">
                  <countermeasures>
                    <countermeasure ref="AZ-A03" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-A03" mitigation="50"/>
                <countermeasure ref="AZ-A04" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="AZURE-LOST-ACCESS-USER" name="Attackers gain unauthorized access to the user account due to the lack of configuration of the account" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;Attackers could gain unauthorized access to the user account due to the lack of configuration of the account, for example, the security question to reset the password is configured incorrectly.&lt;/p&gt;</desc>
              <riskRating confidentiality="50" integrity="50" availability="50" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-IDENTITY-03">
                  <countermeasures>
                    <countermeasure ref="AZ-A07" mitigation="12"/>
                    <countermeasure ref="AZURE-AD1" mitigation="12"/>
                    <countermeasure ref="AZURE-AD16" mitigation="13"/>
                    <countermeasure ref="AZURE-AD2" mitigation="12"/>
                    <countermeasure ref="AZURE-AD4" mitigation="13"/>
                    <countermeasure ref="AZURE-AD6" mitigation="13"/>
                    <countermeasure ref="AZURE-AD7" mitigation="13"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AZURE-MON03">
                  <countermeasures>
                    <countermeasure ref="AZURE-USER-MFA" mitigation="12"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-A07" mitigation="12"/>
                <countermeasure ref="AZURE-AD1" mitigation="12"/>
                <countermeasure ref="AZURE-AD16" mitigation="13"/>
                <countermeasure ref="AZURE-AD2" mitigation="12"/>
                <countermeasure ref="AZURE-AD4" mitigation="13"/>
                <countermeasure ref="AZURE-AD6" mitigation="13"/>
                <countermeasure ref="AZURE-AD7" mitigation="13"/>
                <countermeasure ref="AZURE-USER-MFA" mitigation="12"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="AUTHORIZATION" name="Authorization" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="LOSS-CONTROL_ENV" name="Attackers gain unauthorized access to the control of the environment" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;Attackers could potentially gain unauthorized access to the control of the environment, due to user accounts - or role groups - not being well defined and configured. As a consequence attackers may be able to make changes without root approval.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="75" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-ACCESS-01">
                  <countermeasures>
                    <countermeasure ref="AZ-A09" mitigation="20"/>
                    <countermeasure ref="AZ-A10" mitigation="20"/>
                    <countermeasure ref="AZ-A11" mitigation="20"/>
                    <countermeasure ref="AZURE-AD3" mitigation="20"/>
                    <countermeasure ref="AZURE-AD5" mitigation="20"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-A09" mitigation="20"/>
                <countermeasure ref="AZ-A10" mitigation="20"/>
                <countermeasure ref="AZ-A11" mitigation="20"/>
                <countermeasure ref="AZURE-AD3" mitigation="20"/>
                <countermeasure ref="AZURE-AD5" mitigation="20"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="GENERAL" name="General" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="UNCONFIGURED-SECURITY" name="Attackers gain access to the system by exploiting weak security configurations" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>Weak security configurations like using sharing passwords in plain text, using weak passwords, using obsolete encryption algorithms, etc. can lead attackers to gain access to the system.</desc>
              <riskRating confidentiality="75" integrity="50" availability="25" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-16">
                  <countermeasures>
                    <countermeasure ref="AZURE-AD18" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZURE-AD18" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="UNAUTHORISED-CONNECTION" name="Attackers gain unauthorized connection to the resources" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>Attackers could gain unauthorized connection to the resources through misconfigured
                                ports or security network configurations.
                            </desc>
              <riskRating confidentiality="25" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="no-alerts-access">
                  <countermeasures>
                    <countermeasure ref="AZURE-AD17" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZURE-AD17" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="ACCESS-TO-DATA" name="Sensitive data is compromised through unauthorized access to data storage" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;A data breach is a security violation in which sensitive, protected or confidential data is copied, transmitted, viewed, stolen or used by an individual unauthorized to do so. Sensitive data could be exposed due to a bad configuration in user permissions.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-ACCESS-DATA-01">
                  <countermeasures>
                    <countermeasure ref="AZURE-AD8" mitigation="50"/>
                    <countermeasure ref="AZURE-AD9" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZURE-AD8" mitigation="50"/>
                <countermeasure ref="AZURE-AD9" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="LOGGING AND MONITORING" name="Logging and Monitoring" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="OWASP A10:2017" name="Exploitation of insufficient logging and monitoring" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>	&lt;p&gt;Exploitation of insufficient logging and monitoring is the bedrock of nearly every major incident.&lt;br /&gt;
 Attackers rely on the lack of monitoring and timely response to achieve their goals without being detected.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="AZ-L01" mitigation="20"/>
                    <countermeasure ref="AZ-L05" mitigation="20"/>
                    <countermeasure ref="AZURE-AD10" mitigation="20"/>
                    <countermeasure ref="AZURE-AD11" mitigation="20"/>
                    <countermeasure ref="AZURE-AD12" mitigation="20"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-L01" mitigation="20"/>
                <countermeasure ref="AZ-L05" mitigation="20"/>
                <countermeasure ref="AZURE-AD10" mitigation="20"/>
                <countermeasure ref="AZURE-AD11" mitigation="20"/>
                <countermeasure ref="AZURE-AD12" mitigation="20"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="NETWORKING" name="Networking" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="AZURE-UNAUTHORISED-CONNECTION" name="Attackers perform unauthorized network access" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;Attackers could perform unauthorized network access to the resources through misconfigured ports or security network configurations.&lt;/p&gt;</desc>
              <riskRating confidentiality="25" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-NET-01">
                  <countermeasures>
                    <countermeasure ref="AZURE-AD13" mitigation="34"/>
                    <countermeasure ref="AZURE-AD14" mitigation="33"/>
                    <countermeasure ref="AZURE-AD15" mitigation="33"/>
                    <countermeasure ref="C-AZURE-AD19" mitigation="25"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZURE-AD13" mitigation="34"/>
                <countermeasure ref="AZURE-AD14" mitigation="33"/>
                <countermeasure ref="AZURE-AD15" mitigation="33"/>
                <countermeasure ref="C-AZURE-AD19" mitigation="25"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="0141f720-e7f1-4878-8a08-a2e2ffda8dbb" diagramComponentId="6a8a8301-8641-45c9-a6dd-01ad61b4fb76" ref="94df54d2-acca-470e-8ab5-95173e4a9370" name="Azure Load Balancer" desc="" library="Microsoft-Azure" parentComponentRef="37f32cf3-3a52-4ec6-be95-fdd624d45001" componentDefinitionRef="microsoft-azure-load-balancer">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses>
        <weakness ref="AZURE-MON02" name="Excessive use of administrator accounts" state="0" impact="100" issueId="" issueLink="">
          <desc>The administrator accounts are used for all actions, not only for administrative actions. This
                        is because these users have not got a personal or a user account to do the daily actions.&amp;nbsp;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that there is any rule to notify when there is a bad usage of the root
                            account.&lt;/li&gt;
                            &lt;li&gt;Check if these rules are enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:12.965">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CWE-778" name="Insufficient Logging" state="0" impact="100" issueId="" issueLink="">
          <desc>When a critical security event occurs, the software either does not record the event or omits important details about the event when logging it. When critical security events are not logged properly, such as in the case of a failed login attempt, this can make malicious behavior more difficult to detect and may hinder forensic analyses after a successful attack.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:12.615">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-NON-IDENTIFY" name="Insufficient resource identification" state="0" impact="100" issueId="" issueLink="">
          <desc>Resources are not registered in the safety net systems, and/or additional unidentified resources exist. As such, additional weaknesses might be introduced.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:12.615">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-MON03" name="Lack of 2FA" state="0" impact="100" issueId="" issueLink="">
          <desc>Logging into the console without using Multi-factor Authentication (MFA) and without being detected. The connection without MFA must be audited and monitored, the correct security group must be informed and the connection must be validated.&amp;nbsp;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Alerts&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that there is any rule to notify when someone tries to login into the
                            console without MFA.&lt;/li&gt;
                            &lt;li&gt;Check if these rules are enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:12.965">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZ-W04" name="Misconfigured Authentication Method for Administrator Accounts" state="0" impact="100" issueId="" issueLink="">
          <desc>The authentication method &amp;quot;Multi-factor Authentication&amp;quot; for the Administrator accounts is not configured.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;Multi-Factor Authentication&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check all Administrator accounts have got the MFA flag enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:12.965">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="LOST-SECURITY-ALERTS" name="Misconfigured Security contact details" state="0" impact="100" issueId="" issueLink="">
          <desc>The security contact details for the Azure subscription are not properly configured.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Access &amp;quot;Azure Security Center&amp;quot;.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;In the &amp;quot;Recommendations&amp;quot; tab choose &amp;quot;Provide security
                            contact details&amp;quot;.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Check that all fields are filled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;
                        </steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:12.965">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-IDENTITY-03" name="Misconfigured User Account" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        Key security settings such as resetting the password and other password controls are not
                        configured.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log in to the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each user has got an assigned account.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;Password reset&amp;quot; &amp;gt; &amp;quot;Authentication Method&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that the security confirmation measures and the security criteria are well
                            filled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:12.965">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-ACCESS-01" name="Misconfigured credentials for groups and roles" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        The credentials for groups and roles are not correctly configured and there are user accounts with more privileges than necessary.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each user has got assigned the correct groups.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All groups&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each group has got assigned the correct roles to achieve principle of
                            least privilege.&lt;/li&gt;
                            &lt;li&gt;Check that the roles for the Cloud Service are well assigned.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;div&gt;
                            &lt;/div&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:12.615">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-VNET01" name="Networks for Azure resources are not properly segmented. Without proper segmentation, when attackers gain access to one resource, any other resources in the same VNet are compromised" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        Resources in the same VNet are compromised because when one of them is attacked and the
                        attackers gain access, they also gain access to all resources.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            Identify the resources and the Microsoft Azure instances.
                            &lt;/div&gt;
                            &lt;div&gt;
                            Check that the resources are in the correct VNet.
                            &lt;/div&gt;
                            &lt;div&gt;
                            Check that the Microsoft Azure instances&amp;nbsp;are into different VNets.
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:12.615">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-VM01" name="Security policies exposing system resources" state="0" impact="100" issueId="" issueLink="">
          <desc>The security policies are not adequately configured.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:12.615">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-NET-04" name="Unauthorized connection attempts on Azure resources" state="0" impact="100" issueId="" issueLink="">
          <desc>Receiving unauthorized connections to Azure resources is most likely to be receiving an
                        attack. To avoid this, access to the network must be as restricted as possible using Network
                        Access Control Lists for blacklisting.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;Network security groups&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Select the Network Security Group (NSG) for your virtual machine and click on
                            &amp;quot;Inbound security rules&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that there is a rule to deny the inbound access from a blacklisted IP
                            address or range to a designated port or port range.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:12.964">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-NET-01" name="Unauthorized connection attempts on open ports" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        Receiving unauthorized connections to open ports makes systems vulnerable to attacks. To
                        avoid this, access to the network must be as restricted as possible, so that only the necessary
                        ports are open and the minimum inbound traffic is accepted.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Check that each Azure resources have got their Network Security Groups.&lt;/li&gt;
                            &lt;li&gt;Check that a set of these groups achieve with the principle of the least
                            privilege.&lt;/li&gt;
                            &lt;li&gt;Check that the inbound/outbound security rules are enabled and correctly
                            configured.&lt;/li&gt;
                            &lt;li&gt;In &amp;quot;Inbound security rules&amp;quot;, check that all the traffic from
                            0.0.0.0/0&amp;nbsp;is blocked.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:12.614">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="AZ-A09" name="Apply RBAC with pre-defined policies added into groups or roles" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Define and create groups that relate to job functions (administrators, developers, accounting,
                        etc.) and assign the relevant permissions for each group, and then assign IAM users to those
                        groups.&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &amp;nbsp;&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        All the users in an IAM group inherit the permissions assigned to the group. That way, you can
                        make changes for everyone in a group in just one place. As people move around in your company,
                        you can simply change what IAM group their IAM user belongs to. This method is known as Role
                        Based Access Control (RBAC).&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Remove a user from a group:&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;ol&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                        &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                        &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Click on the user name. All the groups the user belongs are there.&lt;/li&gt;
                        &lt;li&gt;Choose the group and &amp;quot;Remove&amp;quot;.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/ol&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Create a group and add user:&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;ol&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                        &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                        &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All groups&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Click &amp;quot;New Group&amp;quot; and fill the information.&lt;/li&gt;
                        &lt;li&gt;Search and add the user.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Create a group and add members in Azure Active Directory" url="https://docs.microsoft.com/en-us/azure/active-directory/active-directory-groups-create-azure-portal"/>
            <reference name="MS Azure - Use Role-Based Access Control to manage access to your Azure subscription resources" url="https://docs.microsoft.com/en-us/azure/active-directory/role-based-access-control-configure"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each user has got assigned the correct groups.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All groups&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each group has got assigned the correct roles.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:12.867">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-A11" name="Configure roles for the Cloud Service" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Define and create the roles for the Azure Cloud Service. For each role, define the permissions and also configure how that role runs. When you launch an Azure instance, you shall specify a role for the instance as a launch parameter. Applications that run on the Cloud instance use the role's credentials when they access Azure resources. This role's permissions determine what the application is allowed to do.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ul&gt; 
  &lt;li&gt;Configure an Azure cloud service from Solution Explorer in Visual Studio.&lt;/li&gt; 
 &lt;/ul&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Use Role-Based Access Control to manage access to your Azure subscription resources" url="https://docs.microsoft.com/en-us/azure/active-directory/role-based-access-control-configure"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that the roles for the Cloud Service are well assigned.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:12.868">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-M01" name="Create alerts for changes on Activity Logs configuration" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Create alerts for the Activity Logs changes to monitor, audit and notify about the changes to the correspondent personnel. It's vital that these unauthorized changes are detected.&lt;/p&gt;&lt;p&gt;Checklist:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Ensure that Activity Log Alert exists for:&amp;nbsp;&lt;ul&gt;&lt;li&gt;Create Policy Assignment&lt;/li&gt;&lt;li&gt;Delete Policy Assignment&lt;/li&gt;&lt;li&gt;Create or Update Network Security Group&lt;/li&gt;&lt;li&gt;Delete Network Security Group&lt;/li&gt;&lt;li&gt;Create or Update Network Security Group Rule&lt;/li&gt;&lt;li&gt;Delete Network Security Group Rule&lt;/li&gt;&lt;li&gt;Create or Update Security Solution&lt;/li&gt;&lt;li&gt;Delete Security Solution&lt;/li&gt;&lt;li&gt;Create or Update or Delete SQL Server Firewall Rule&lt;br&gt;&amp;nbsp;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;Remediation:&lt;/strong&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Go to Monitor&lt;/li&gt;&lt;li&gt;Select Alerts&lt;ol&gt;&lt;li&gt;For each one of the elements in the checklist, click On New Alert Rule&lt;ol&gt;&lt;li&gt;Under Scope, click Select resource&lt;/li&gt;&lt;li&gt;Select the appropriate subscription under Filter by subscription&lt;/li&gt;&lt;li&gt;Select Policy Assignment under Filter by resource type&lt;/li&gt;&lt;li&gt;Select All for Filter by location&lt;/li&gt;&lt;li&gt;Click on the subscription resource from the entries populated under Resource&lt;/li&gt;&lt;li&gt;Verify Selection preview shows All Policy assignment (policyAssignments) and your selected subscription name&lt;/li&gt;&lt;li&gt;Click Done&lt;/li&gt;&lt;li&gt;Under Condition click Add Condition&lt;/li&gt;&lt;li&gt;Select the corresponding element from the checklist&lt;/li&gt;&lt;li&gt;Click Done&lt;/li&gt;&lt;li&gt;Under Action group, select Add action groups and complete creation process or select appropriate action group&lt;/li&gt;&lt;li&gt;Under Alert rule details, enter Alert rule name and Description&lt;/li&gt;&lt;li&gt;Select appropriate resource group to save the alert to&lt;/li&gt;&lt;li&gt;Check Enable alert rule upon creation checkbox&lt;/li&gt;&lt;li&gt;Click Create alert rule&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;/ol&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Create activity log alerts" url="https://docs.microsoft.com/en-us/azure/monitoring-and-diagnostics/monitoring-activity-log-alerts"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5.2.1" supportedStandardRef="cis-azure-standard"/>
            <standard ref="5.2.1" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="5.2.10" supportedStandardRef="cis-azure-standard"/>
            <standard ref="5.2.10" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="5.2.2" supportedStandardRef="cis-azure-standard"/>
            <standard ref="5.2.2" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="5.2.3" supportedStandardRef="cis-azure-standard"/>
            <standard ref="5.2.3" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="5.2.4" supportedStandardRef="cis-azure-standard"/>
            <standard ref="5.2.4" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="5.2.5" supportedStandardRef="cis-azure-standard"/>
            <standard ref="5.2.5" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="5.2.6" supportedStandardRef="cis-azure-standard"/>
            <standard ref="5.2.6" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="5.2.7" supportedStandardRef="cis-azure-standard"/>
            <standard ref="5.2.7" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="5.2.8" supportedStandardRef="cis-azure-standard"/>
            <standard ref="5.2.8" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="5.2.9" supportedStandardRef="cis-azure-standard"/>
            <standard ref="5.2.9" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="LT-4" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Go to "Monitor" and then to "Alerts".&lt;/li&gt;&lt;li&gt;Check that there is any rule to alert when the Activity Logs configuration changes.&lt;/li&gt;&lt;li&gt;Check if these rules are enabled.&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:12.522">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-A03" name="Create Individual Accounts for the administrator users" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Create an individual account for the administrator users and with this new accounts By creating individual Azure users for people accessing your account, you can give each Azure user a unique set of security credentials.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The administrator accounts shall be used for the administrative actions and for giving or revoke credentials to the user's account. The administrator account shall be not used as a normal user account. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt; 
  &lt;li&gt;Select Azure Active Directory.&lt;/li&gt; 
  &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt; 
  &lt;li&gt;Select &amp;quot;Add New User&amp;quot;.&lt;/li&gt; 
  &lt;li&gt;Fill the required information and click &amp;quot;Create&amp;quot;.&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt; 
&lt;div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Add new users to Azure Active Directory" url="https://docs.microsoft.com/en-us/azure/active-directory/add-users-azure-active-directory"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each user has got a user account assigned.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:12.868">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-A10" name="Create mechanisms to ensure the principle of least privilege is applied" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Create the mechanisms to review periodically the group and user permissions to ensure the least privilege for the user accounts. Granting least privilege ensures that users only have the permissions required to complete their jobs rather than additional privileges that are not required. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Following this model ensures that, should an account be compromised, the blast radius of damage is limited&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Allocate privileges via groups or roles via the recommendation in "Use RBAC with pre-defined policies added into groups or roles".&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt; 
&lt;div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Create a group and add members in Azure Active Directory" url="https://docs.microsoft.com/en-us/azure/active-directory/active-directory-groups-create-azure-portal"/>
            <reference name="MS Azure - Use Role-Based Access Control to manage access to your Azure subscription resources" url="https://docs.microsoft.com/en-us/azure/active-directory/role-based-access-control-configure"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that the principle of least privilege is achieved in the assignation of roles and
                            groups to the users.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:12.868">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-IDS-IPS" name="Deploy network-based IDS/IPS" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Deploy network-based intrusion detection/intrusion prevention systems (IDS/IPS)&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Select an offer from Azure Marketplace that supports IDS/IPS functionality with payload inspection capabilities. If intrusion detection and/or prevention based on payload inspection is not a requirement, Azure Firewall with Threat Intelligence can be used. Azure Firewall Threat intelligence-based filtering can alert and deny traffic to and from known malicious IP addresses and domains. The IP addresses and domains are sourced from the Microsoft Threat Intelligence feed.&lt;/p&gt; 
&lt;p&gt;Deploy the firewall solution of your choice at each of your organization's network boundaries to detect and/or deny malicious traffic.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Set up the network&lt;/p&gt; 
&lt;p&gt;First, create a resource group to contain the resources needed to deploy the firewall. Then create a VNet, subnets, and a test server.&lt;br&gt; For more information please see Reference URL.&lt;/p&gt; 
&lt;p&gt;Deploy the firewall&lt;/p&gt; 
&lt;p&gt;Deploy the firewall into the VNet.&lt;/p&gt; 
&lt;p&gt;1. On the Azure portal menu or from the Home page, select Create a resource.&lt;/p&gt; 
&lt;p&gt;2. Type firewall in the search box and press Enter.&lt;/p&gt; 
&lt;p&gt;3. Select Firewall and then select Create.&lt;/p&gt; 
&lt;p&gt;4. On the Create a Firewall page, use the following values to configure the firewall:&lt;/p&gt; 
&lt;p&gt;Subscription: &lt;br&gt; Resource group: Test-FW-RG&lt;br&gt; Name: Test-FW01&lt;br&gt; Location: Select the same location that you used previously&lt;br&gt; Choose a virtual network: Use existing: Test-FW-VN&lt;br&gt; Public IP address: Add new&lt;br&gt; Name: fw-pip&lt;/p&gt; 
&lt;p&gt;5. Select Review + create.&lt;/p&gt; 
&lt;p&gt;6. Review the summary, and then select Create to create the firewall.&lt;/p&gt; 
&lt;p&gt;This will take a few minutes to deploy.&lt;/p&gt; 
&lt;p&gt;7. After deployment completes, go to the Test-FW-RG resource group, and select the Test-FW01 firewall.&lt;/p&gt; 
&lt;p&gt;8. Note the firewall private and public IP addresses. You will use these addresses later.&lt;/p&gt; 
&lt;p&gt;Create a default route&lt;/p&gt; 
&lt;p&gt;For the Workload-SN subnet, configure the outbound default route to go through the firewall.&lt;/p&gt; 
&lt;p&gt;1. On the Azure portal menu, select All services or search for and select All services from any page.&lt;/p&gt; 
&lt;p&gt;2. Under Networking, select Route tables.&lt;/p&gt; 
&lt;p&gt;3. Select Add.&lt;/p&gt; 
&lt;p&gt;4. For Name, type Firewall-route.&lt;/p&gt; 
&lt;p&gt;5. For Subscription, select your subscription.&lt;/p&gt; 
&lt;p&gt;6. For Resource group, select Test-FW-RG.&lt;/p&gt; 
&lt;p&gt;7. For Location, select the same location that you used previously.&lt;/p&gt; 
&lt;p&gt;8. Select Create.&lt;/p&gt; 
&lt;p&gt;9. Select Refresh, and then select the Firewall-route route table.&lt;/p&gt; 
&lt;p&gt;10. Select Subnets and then select Associate.&lt;/p&gt; 
&lt;p&gt;11. Select Virtual network &amp;gt; Test-FW-VN.&lt;/p&gt; 
&lt;p&gt;12. For Subnet, select Workload-SN. Make sure that you select only the Workload-SN subnet for this route, otherwise your firewall will not work correctly.&lt;/p&gt; 
&lt;p&gt;13. Select OK.&lt;/p&gt; 
&lt;p&gt;14. Select Routes and then select Add.&lt;/p&gt; 
&lt;p&gt;15. For Route name, type fw-dg.&lt;/p&gt; 
&lt;p&gt;16. For Address prefix, type 0.0.0.0/0.&lt;/p&gt; 
&lt;p&gt;17. For Next hop type, select Virtual appliance.&lt;/p&gt; 
&lt;p&gt;Azure Firewall is actually a managed service, but virtual appliance works in this situation.&lt;/p&gt; 
&lt;p&gt;18. For Next hop address, type the private IP address for the firewall that you noted previously.&lt;/p&gt; 
&lt;p&gt;19. Select OK.&lt;/p&gt; 
&lt;p&gt;Configure an application rule&lt;/p&gt; 
&lt;p&gt;This is the application rule that allows outbound access to www.google.com.&lt;/p&gt; 
&lt;p&gt;1. Open the Test-FW-RG, and select the Test-FW01 firewall.&lt;br&gt; 2. On the Test-FW01 page, under Settings, select Rules.&lt;br&gt; 3. Select the Application rule collection tab.&lt;br&gt; 4. Select Add application rule collection.&lt;br&gt; 5. For Name, type App-Coll01.&lt;br&gt; 6. For Priority, type 200.&lt;br&gt; 7. For Action, select Allow.&lt;br&gt; 8. Under Rules, Target FQDNs, for Name, type Allow-Google.&lt;br&gt; 9. For Source type, select IP address.&lt;br&gt; 10. For Source, type 10.0.2.0/24.&lt;br&gt; 11. For Protocol:port, type http, https.&lt;br&gt; 12. For Target FQDNS, type www.google.com&lt;br&gt; 13. Select Add.&lt;/p&gt; 
&lt;p&gt;Azure Firewall includes a built-in rule collection for infrastructure FQDNs that are allowed by default. These FQDNs are specific for the platform and cannot be used for other purposes. For more information, see Infrastructure FQDNs.&lt;/p&gt; 
&lt;p&gt;Configure a network rule&lt;/p&gt; 
&lt;p&gt;This is the network rule that allows outbound access to two IP addresses at port 53 (DNS).&lt;/p&gt; 
&lt;p&gt;1. Select the Network rule collection tab.&lt;/p&gt; 
&lt;p&gt;2. Select Add network rule collection.&lt;/p&gt; 
&lt;p&gt;3. For Name, type Net-Coll01.&lt;/p&gt; 
&lt;p&gt;4. For Priority, type 200.&lt;/p&gt; 
&lt;p&gt;5. For Action, select Allow.&lt;/p&gt; 
&lt;p&gt;6. Under Rules, IP addresses, for Name, type Allow-DNS.&lt;/p&gt; 
&lt;p&gt;7. For Protocol, select UDP.&lt;/p&gt; 
&lt;p&gt;8. For Source type, select IP address.&lt;/p&gt; 
&lt;p&gt;9. For Source, type 10.0.2.0/24.&lt;/p&gt; 
&lt;p&gt;10. For Destination type select IP address.&lt;/p&gt; 
&lt;p&gt;11. For Destination address, type 209.244.0.3,209.244.0.4&lt;/p&gt; 
&lt;p&gt;These are public DNS servers operated by CenturyLink.&lt;/p&gt; 
&lt;p&gt;12. For Destination Ports, type 53.&lt;/p&gt; 
&lt;p&gt;13. Select Add.&lt;/p&gt; 
&lt;p&gt;Configure a DNAT rule&lt;/p&gt; 
&lt;p&gt;This rule allows you to connect a remote desktop to the Srv-Work virtual machine through the firewall.&lt;/p&gt; 
&lt;p&gt;1. Select the NAT rule collection tab.&lt;br&gt; 2. Select Add NAT rule collection.&lt;br&gt; 3. For Name, type rdp.&lt;br&gt; 4. For Priority, type 200.&lt;br&gt; 5. Under Rules, for Name, type rdp-nat.&lt;br&gt; 6. For Protocol, select TCP.&lt;br&gt; 7. For Source type, select IP address.&lt;br&gt; 8. For Source, type *.&lt;br&gt; 9. For Destination address, type the firewall public IP address.&lt;br&gt; 10. For Destination Ports, type 3389.&lt;br&gt; 11. For Translated address, type the Srv-work private IP address.&lt;br&gt; 12. For Translated port, type 3389.&lt;br&gt; 13. Select Add.&lt;/p&gt; 
&lt;p&gt;Change the primary and secondary DNS address for the Srv-Work network interface&lt;/p&gt; 
&lt;p&gt;For testing purposes in this tutorial, configure the server's primary and secondary DNS addresses. This is not a general Azure Firewall requirement.&lt;/p&gt; 
&lt;p&gt;1. On the Azure portal menu, select Resource groups or search for and select Resource groups from any page. Select the Test-FW-RG resource group.&lt;br&gt; 2. Select the network interface for the Srv-Work virtual machine.&lt;br&gt; 3. Under Settings, select DNS servers.&lt;br&gt; 4. Under DNS servers, select Custom.&lt;br&gt; 5. Type 209.244.0.3 in the Add DNS server text box, and 209.244.0.4 in the next text box.&lt;br&gt; 6. Select Save.&lt;br&gt; 7. Restart the Srv-Work virtual machine.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Tutorial: Deploy and configure Azure Firewall using the Azure portal" url="https://docs.microsoft.com/en-us/azure/firewall/tutorial-firewall-deploy-portal"/>
          </references>
          <standards>
            <standard ref="NS-3" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="NS-4" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Test the firewall&lt;/p&gt;&lt;p&gt;Now, test the firewall to confirm that it works as expected.&lt;/p&gt;&lt;p&gt;1. Connect a remote desktop to firewall public IP address and sign in to the Srv-Work virtual machine.&lt;/p&gt;&lt;p&gt;2. Open Internet Explorer and browse to https://www.google.com.&lt;/p&gt;&lt;p&gt;3. Select OK &amp;gt; Close on the Internet Explorer security alerts.&lt;/p&gt;&lt;p&gt;You should see the Google home page.&lt;/p&gt;&lt;p&gt;4. Browse to https://www.microsoft.com.&lt;/p&gt;&lt;p&gt;You should be blocked by the firewall.LT-3&lt;/p&gt;&lt;p&gt;So now you've verified that the firewall rules are working:&lt;/p&gt;&lt;p&gt;- You can browse to the one allowed FQDN, but not to any others.&lt;br&gt;- You can resolve DNS names using the configured external DNS server.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:12.523">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-ENABLE-ALERTS" name="Enable alerts for anomalous activities" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Enable alerts for anomalous activities 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  Azure Security Center generates detailed security alerts and recommendations. You can view them in the portal or through programmatic tools. You may also need to export some or all of this information for tracking with other monitoring tools in your environment. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Continuous export lets you fully customize what will be exported, and where it will go. For example, you can configure it so that: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  All high severity alerts are sent to an Azure Event Hub 
&lt;/div&gt; 
&lt;div&gt;
  All medium or higher severity findings from vulnerability assessment scans of your SQL servers are sent to a specific Log Analytics workspace 
&lt;/div&gt; 
&lt;div&gt;
  Specific recommendations are delivered to an Event Hub or Log Analytics workspace whenever they're generated 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  Set up a continuous export 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  You can configure continuous export from the Security Center pages in Azure portal, via the Security Center REST API, or at scale using the supplied Azure Policy templates. Select the appropriate tab below for details of each. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Configure continuous export from the Security Center pages in Azure portal 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The steps below are necessary whether you're setting up a continuous export to Log Analytics workspace or Azure Event Hubs. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  1. From Security Center's sidebar, select Pricing &amp;amp; settings. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  2. Select the specific subscription for which you want to configure the data export. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  3. From the sidebar of the settings page for that subscription, select Continuous Export. 
&lt;/div&gt; 
&lt;div&gt;
  Here you see the export options. There's a tab for each available export target. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  4. Select the data type you'd like to export and choose from the filters on each type (for example, export only high severity alerts). 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  5. Optionally, if your selection includes one of these four recommendations, you can include the vulnerability assessment findings together with them: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - Vulnerability Assessment findings on your SQL databases should be remediated 
&lt;/div&gt; 
&lt;div&gt;
  - Vulnerability Assessment findings on your SQL servers on machines should be remediated (Preview) 
&lt;/div&gt; 
&lt;div&gt;
  - Vulnerabilities in Azure Container Registry images should be remediated (powered by Qualys) 
&lt;/div&gt; 
&lt;div&gt;
  - Vulnerabilities in your virtual machines should be remediated 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  To include the findings with these recommendations, enable the include security findings option. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  6. From the "Export target" area, choose where you'd like the data saved. Data can be saved in a target on a different subscription (for example on a Central Event Hub instance or a central Log Analytics workspace). 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  7. Select Save. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Continuously export Security Center data" url="https://docs.microsoft.com/en-us/azure/security-center/continuous-export?tabs=azure-portal"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  View exported alerts and recommendations in Azure Monitor 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  In some cases, you may choose to view the exported Security Alerts and/or recommendations in Azure Monitor. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Azure Monitor provides a unified alerting experience for a variety of Azure alerts including Diagnostic Log, Metric alerts, and custom alerts based on Log Analytics workspace queries. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  To view alerts and recommendations from Security Center in Azure Monitor, configure an Alert rule based on Log Analytics queries (Log Alert): 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  1. From Azure Monitor's Alerts page, select New alert rule. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  2. In the create rule page, configure your new rule (in the same way you'd configure a log alert rule in Azure Monitor): 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - For Resource, select the Log Analytics workspace to which you exported security alerts and recommendations. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - For Condition, select Custom log search. In the page that appears, configure the query, look-back period, and frequency period. In the search query, you can type SecurityAlert or SecurityRecommendation to query the data types that Security Center continuously exports to as you enable the Continuous export to Log Analytics feature. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - Optionally, configure the Action Group that you'd like to trigger. Action groups can trigger email sending, ITSM tickets, WebHooks, and more. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  You'll now see new Azure Security Center alerts or recommendations (depending on your configured continuous export rules and the condition you defined in your Azure Monitor alert rule) in Azure Monitor alerts, with automatic triggering of an action group (if provided). 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:12.523">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-MONITOR6" name="Enable and use Traffic Analytics" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Enable and use Traffic Analytics 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  Traffic Analytics is a cloud-based solution that provides visibility into user and application activity in cloud networks. Traffic analytics analyzes Network Watcher network security group (NSG) flow logs to provide insights into traffic flow in your Azure cloud. With traffic analytics, you can: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - Visualize network activity across your Azure subscriptions and identify hot spots. 
&lt;/div&gt; 
&lt;div&gt;
  - Identify security threats to, and secure your network, with information such as open-ports, applications attempting Internet access, and virtual machines (VM) connecting to rogue networks. 
&lt;/div&gt; 
&lt;div&gt;
  - Understand traffic flow patterns across Azure regions and the Internet to optimize your network deployment for performance and capacity. 
&lt;/div&gt; 
&lt;div&gt;
  - Pinpoint network misconfigurations leading to failed connections in your network. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  Enable Network Watcher 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  To analyze traffic, you need to have an existing network watcher, or enable a network watcher in each region that you have NSGs that you want to analyze traffic for. Traffic analytics can be enabled for NSGs hosted in any of the supported regions. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Select a network security group 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Before enabling NSG flow logging, you must have a network security group to log flows for. If you don't have a network security group, see Create a network security group to create one. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  In Azure portal, go to Network watcher, and then select NSG flow logs. Select the network security group that you want to enable an NSG flow log for. 
&lt;/div&gt; 
&lt;div&gt;
  If you try to enable traffic analytics for an NSG that is hosted in any region other than the supported regions, you receive a "Not found" error. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Enable flow log settings 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Before enabling flow log settings, you must complete the following tasks: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Register the Azure Insights provider, if it's not already registered for your subscription: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Register-AzResourceProvider -ProviderNamespace Microsoft.Insights 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  If you don't already have an Azure Storage account to store NSG flow logs in, you must create a storage account. You can create a storage account with the command that follows. Before running the command, replace &amp;lt;replace-with-your-unique-storage-account-name&amp;gt; with a name that is unique across all Azure locations, between 3-24 characters in length, using only numbers and lower-case letters. You can also change the resource group name, if necessary. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  New-AzStorageAccount ` 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; -Location westcentralus ` 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; -Name &amp;lt;replace-with-your-unique-storage-account-name&amp;gt; ` 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; -ResourceGroupName myResourceGroup ` 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; -SkuName Standard_LRS ` 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; -Kind StorageV2 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Select the following options: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  1. Select On for Status 
&lt;/div&gt; 
&lt;div&gt;
  2. Select Version 2 for Flow Logs version. Version 2 contains flow-session statistics (Bytes and Packets) 
&lt;/div&gt; 
&lt;div&gt;
  3. Select an existing storage account to store the flow logs in. Ensure that your storage does not have "Data Lake Storage Gen2 Hierarchical Namespace Enabled" set to true. 
&lt;/div&gt; 
&lt;div&gt;
  4. Set Retention to the number of days you want to store data for. If you want to store the data forever, set the value to 0. You incur Azure Storage fees for the storage account. 
&lt;/div&gt; 
&lt;div&gt;
  5. Select On for Traffic Analytics Status. 
&lt;/div&gt; 
&lt;div&gt;
  6. Select processing interval. Based on your choice, flow logs will be collected from storage account and processed by Traffic Analytics. You can choose processing interval of every 1 hour or every 10 mins. 
&lt;/div&gt; 
&lt;div&gt;
  7. Select an existing Log Analytics (OMS) Workspace, or select Create New Workspace to create a new one. A Log Analytics workspace is used by Traffic Analytics to store the aggregated and indexed data that is then used to generate the analytics. If you select an existing workspace, it must exist in one of the supported regions and have been upgraded to the new query language. If you do not wish to upgrade an existing workspace, or do not have a workspace in a supported region, create a new one. For more information about query languages, see Azure Log Analytics upgrade to new log search. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Note: The log analytics workspace hosting the traffic analytics solution and the NSGs do not have to be in the same region. For example, you may have traffic analytics in a workspace in the West Europe region, while you may have NSGs in East US and West US. Multiple NSGs can be configured in the same workspace. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  8. Select Save. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Repeat the previous steps for any other NSGs for which you wish to enable traffic analytics for. Data from flow logs is sent to the workspace, so ensure that the local laws and regulations in your country/region permit data storage in the region where the workspace exists. If you have set different processing intervals for different NSGs, data will be collected at different intervals. For example: You can choose to enable processing interval of 10 mins for critical VNETs and 1 hour for noncritical VNETs. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  You can also configure traffic analytics using the Set-AzNetworkWatcherConfigFlowLog PowerShell cmdlet in Azure PowerShell. Run Get-Module -ListAvailable Az to find your installed version. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Traffic Analytics" url="https://docs.microsoft.com/en-us/azure/network-watcher/traffic-analytics"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="6.6" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  View traffic analytics 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  To view Traffic Analytics, search for Network Watcher in the portal search bar. Once inside Network Watcher, to explore traffic analytics and its capabilities, select Traffic Analytics from the left menu. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The dashboard may take up to 30 minutes to appear the first time because Traffic Analytics must first aggregate enough data for it to derive meaningful insights, before it can generate any reports. 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:12.523">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-DDOS-PROTECTION" name="Enable Azure DDoS Standard protection on your Azure Virtual Network" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Enable Azure DDoS Standard protection on your Azure Virtual Network&lt;/p&gt;&lt;p&gt;Rationale:&lt;br&gt;Enable Azure Distributed Denial of Service (DDoS) Standard protection on your Azure Virtual Network to guard against DDoS attacks.&lt;/p&gt;&lt;p&gt;Remediation:&lt;br&gt;Create a DDoS protection plan&lt;/p&gt;&lt;p&gt;1. Select Create a resource in the upper left corner of the Azure portal.&lt;/p&gt;&lt;p&gt;2. Search the term DDoS. When DDoS protection plan appears in the search results, select it.&lt;/p&gt;&lt;p&gt;3. Select Create.&lt;/p&gt;&lt;p&gt;4. Enter or select the following values, then select Create:&lt;/p&gt;&lt;p&gt;Name: Enter MyDdosProtectionPlan.&lt;br&gt;Subscription: Select your subscription.&lt;br&gt;Resource group: Select Create new and enter MyResourceGroup.&lt;br&gt;Location: Enter East US.&lt;/p&gt;&lt;p&gt;Enable DDoS protection for a new virtual network&lt;/p&gt;&lt;p&gt;1. Select Create a resource in the upper left corner of the Azure portal.&lt;/p&gt;&lt;p&gt;2. Select Networking, and then select Virtual network.&lt;/p&gt;&lt;p&gt;3. Enter or select the following values, accept the remaining defaults, and then select Create:&lt;/p&gt;&lt;p&gt;Name: Enter MyVnet.&lt;br&gt;Subscription: Select your subscription.&lt;br&gt;Resource group: Select Use existing, and then select MyResourceGroup&lt;br&gt;Location: Enter East US&lt;br&gt;DDoS Protection Standard: Select Enable. The plan you select can be in the same, or different subscription than the virtual network, but both subscriptions must be associated to the same Azure Active Directory tenant.&lt;/p&gt;&lt;p&gt;Enable DDoS protection for an existing virtual network&lt;/p&gt;&lt;p&gt;1. Create a DDoS protection plan by completing the steps in Create a DDoS protection plan, if you don't have an existing DDoS protection plan.&lt;br&gt;2. Select Create a resource in the upper left corner of the Azure portal.&lt;br&gt;3. Enter the name of the virtual network that you want to enable DDoS Protection Standard for in the Search resources, services, and docs box at the top of the portal. When the name of the virtual network appears in the search results, select it.&lt;br&gt;4. Select DDoS protection, under SETTINGS.&lt;br&gt;5. Select Standard. Under DDoS protection plan, select an existing DDoS protection plan, or the plan you created in step 1, and then select Save. The plan you select can be in the same, or different subscription than the virtual network, but both subscriptions must be associated to the same Azure Active Directory tenant.&lt;/p&gt;&lt;p&gt;Impact:&lt;br&gt;You cannot move a virtual network to another resource group or subscription when DDoS Standard is enabled for the virtual network. If you need to move a virtual network with DDoS Standard enabled, disable DDoS Standard first, move the virtual network, and then enable DDoS standard. After the move, the auto-tuned policy thresholds for all the protected public IP addresses in the virtual network are reset.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Quickstart: Create and configure Azure DDoS Protection Standard" url="https://docs.microsoft.com/en-us/azure/ddos-protection/manage-ddos-protection"/>
          </references>
          <standards>
            <standard ref="GS-9" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="NS-5" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Validate and test&lt;/p&gt;

	&lt;p&gt;First, check the details of your DDoS protection plan:&lt;/p&gt;

	&lt;p&gt;1. Select All services on the top, left of the portal.&lt;br /&gt;
2. Enter DDoS in the Filter box. When DDoS protection plans appear in the results, select it.&lt;br /&gt;
3. Select your DDoS protection plan from the list.&lt;/p&gt;

	&lt;p&gt;The MyVnet virtual network should be listed.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:12.523">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-SENTINEL" name="Enable Azure Sentinel" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Enable Azure Sentinel&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Microsoft Azure Sentinel is a scalable, cloud-native, security information event management (SIEM) and security orchestration automated response (SOAR) solution. Azure Sentinel delivers intelligent security analytics and threat intelligence across the enterprise, providing a single solution for alert detection, threat visibility, proactive hunting, and threat response.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Enable Azure Sentinel&lt;/p&gt; 
&lt;p&gt;1. Sign in to the Azure portal. Make sure that the subscription in which Azure Sentinel is created is selected.&lt;/p&gt; 
&lt;p&gt;2. Search for and select Azure Sentinel.&lt;/p&gt; 
&lt;p&gt;3. Select Add.&lt;/p&gt; 
&lt;p&gt;4. Select the workspace you want to use or create a new one. You can run Azure Sentinel on more than one workspace, but the data is isolated to a single workspace.&lt;/p&gt; 
&lt;p&gt;Note: Default workspaces created by Azure Security Center will not appear in the list; you cannot install Azure Sentinel on them.&lt;/p&gt; 
&lt;p&gt;Important: Once deployed on a workspace, Azure Sentinel does not currently support the moving of that workspace to other resource groups or subscriptions.&lt;/p&gt; 
&lt;p&gt;If you have already moved the workspace, disable all active rules under Analytics and re-enable them after five minutes. This should be effective in most cases, though, to reiterate, it is unsupported and undertaken at your own risk.&lt;/p&gt; 
&lt;p&gt;5. Select Add Azure Sentinel.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Quickstart: On-board Azure Sentinel" url="https://docs.microsoft.com/en-us/azure/sentinel/quickstart-onboard"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="NS-8" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure Azure Sentinel is enabled.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:12.868">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-L01" name="Enable diagnostic logs auditing for Microsoft Azure" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Diagnostic Logs capture activity to the data access plane while the Activity log is a subscription-level log for the control plane. Resource-level diagnostic logs provide insight into operations that were performed within that resource itself, for example, getting a secret from a Key Vault. Currently, 32 Azure resources support Diagnostic Logging (See the references section for a complete list), including Network Security Groups, Load Balancers, Key Vault, AD, Logic Apps and CosmosDB. The content of these logs varies by resource type. For example, Windows event system logs are a category of diagnostics logs for VMs, and blob, table, and queue logs are categories of diagnostics logs for storage accounts.&lt;/p&gt;&lt;p&gt;A number of back-end services were not configured to log and store Diagnostic Logs for certain activities or for a sufficient length. It is crucial that logging systems are correctly configured to log all relevant activities and retain those logs for a sufficient length of time. By default, Diagnostic Logs are not enabled. Given that the mean time to detection in an enterprise is 240 days, a minimum retention period of two years is recommended.&lt;br&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation:&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;The specific steps for configuring resources within the Azure console vary depending on resource, but typically the steps are:&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Go to the resource&lt;/li&gt;&lt;li&gt;Click on Diagnostic settings&lt;/li&gt;&lt;li&gt;In the blade that appears, click "Add diagnostic setting"&lt;/li&gt;&lt;li&gt;Configure the diagnostic settings&lt;/li&gt;&lt;li&gt;Click on Save&lt;/li&gt;&lt;/ol&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Enable diagnostics logging for web apps in Azure App Service" url="https://docs.microsoft.com/en-us/azure/app-service-web/web-sites-enable-diagnostic-log"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5.3" supportedStandardRef="cis-azure-standard"/>
            <standard ref="5.3" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="LT-4" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="LT-5" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;&lt;li&gt;Go to the resource&lt;/li&gt;&lt;li&gt;Click on Diagnostic settings&lt;/li&gt;&lt;li&gt;In the blade that appears, click "Add diagnostic setting"&lt;/li&gt;&lt;li&gt;Configure the diagnostic settings&lt;/li&gt;&lt;li&gt;Click on Save&lt;/li&gt;&lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:12.868">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-A04" name="Enable MFA for Administrator &amp; Co Administrator accounts" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Enable multi-factor authentication (MFA) device enhances the security of the login process for the Administrator accounts. With MFA, users have a device that generates a unique authentication code (a one-time password, or OTP) and users must provide both their normal credentials (like their username and password) and the OTP. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The MFA device can either be a special piece of hardware, or it can be a virtual device. The recommendation for the Service Administrator &amp;amp; Co Administrator accounts is to use MFA to increase the level of security of the login process. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt; 
  &lt;li&gt;Select Azure Active Directory.&lt;/li&gt; 
  &lt;li&gt;Go into "Users and groups" &amp;gt; "All users".&lt;/li&gt; 
  &lt;li&gt;Select "Multi-Factor Authentication".&lt;/li&gt; 
  &lt;li&gt;Choose all the Service Administrator &amp;amp; Co Administrator accounts and enable MFA.&amp;nbsp;&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - How to require two-step verification for a user or group" url="https://docs.microsoft.com/en-us/azure/multi-factor-authentication/multi-factor-authentication-get-started-user-states"/>
          </references>
          <standards>
            <standard ref="IM-6" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="IM-7" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;Multi-Factor Authentication&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check all Administrator accounts have got the MFA flag enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:12.868">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-NSG-LOGS" name="Enable Network Security Group flow logs" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Enable Network Security Group (NSG) flow logs&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; A network security group (NSG) enables you to filter inbound traffic to, and outbound traffic from, a virtual machine (VM). You can log network traffic that flows through an NSG with Network Watcher's NSG flow log capability. &lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; How to enable NSG flow log&lt;/p&gt; 
&lt;p&gt;1. NSG flow log data is written to an Azure Storage account. To create an Azure Storage account, select + Create a resource at the top, left corner of the portal.&lt;/p&gt; 
&lt;p&gt;2. Select Storage, then select Storage account - blob, file, table, queue.&lt;/p&gt; 
&lt;p&gt;3. Enter, or select the following information, accept the remaining defaults, and then select Create.&lt;/p&gt; 
&lt;p&gt;Name: 3-24 characters in length, can only contain lowercase letters and numbers, and must be unique across all Azure Storage accounts.&lt;br&gt; Location: Select East US&lt;br&gt; Resource group: Select Use existing, and then select myResourceGroup&lt;/p&gt; 
&lt;p&gt;The storage account may take around minute to create. Don't continue with remaining steps until the storage account is created. In all cases, the storage account must be in the same region as the NSG.&lt;/p&gt; 
&lt;p&gt;4. In the top, left corner of portal, select All services. In the Filter box, type Network Watcher. When Network Watcher appears in the search results, select it.&lt;/p&gt; 
&lt;p&gt;5. Under LOGS, select NSG flow logs.&lt;/p&gt; 
&lt;p&gt;6. From the list of NSGs, select the NSG named myVm-nsg.&lt;/p&gt; 
&lt;p&gt;7. Under Flow logs settings, select On.&lt;/p&gt; 
&lt;p&gt;8. Select the flow logging version. Version 2 contains flow-session statistics (Bytes and Packets)&lt;/p&gt; 
&lt;p&gt;9. Select the storage account that you created in step 3.&lt;/p&gt; 
&lt;p&gt;Note: NSG Flow Logs do not work with storage accounts that have hierarchical namespace enabled.&lt;/p&gt; 
&lt;p&gt;10. In the top, left corner of portal, select All services. In the Filter box, type Network Watcher. When Network Watcher appears in the search results, select it.&lt;/p&gt; 
&lt;p&gt;11. Set Retention (days) to 5, and then select Save.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Tutorial: Log network traffic to and from a virtual machine using the Azure portal" url="https://docs.microsoft.com/en-us/azure/network-watcher/network-watcher-nsg-flow-logging-portal"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="6.5" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Download flow log&lt;/p&gt;

	&lt;p&gt;1. From Network Watcher, in the portal, select NSG flow logs under LOGS.&lt;/p&gt;

	&lt;p&gt;2. Select You can download flow logs from configured storage accounts.&lt;/p&gt;

	&lt;p&gt;3. Select the storage account that you configured in step 2 of Enable NSG flow log (Remediation section).&lt;/p&gt;

	&lt;p&gt;4. Under Blob service, select Containers, and then select the insights-logs-networksecuritygroupflowevent container.&lt;/p&gt;

	&lt;p&gt;5. In the container, navigate the folder hierarchy until you get to a PT1H.json file. Log files are written to a folder hierarchy that follows the following naming convention: https://{storageAccountName}.blob.core.windows.net/insights-logs-networksecuritygroupflowevent/resourceId=/SUBSCRIPTIONS/{subscriptionID}/RESOURCEGROUPS/{resourceGroupName}/PROVIDERS/MICROSOFT.NETWORK/NETWORKSECURITYGROUPS/{nsgName}/y={year}/m={month}/d={day}/h={hour}/m=00/macAddress={macAddress}/PT1H.json&lt;/p&gt;

	&lt;p&gt;6. Select ... to the right of the PT1H.json file and select Download.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:12.523">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-USER-MFA" name="Enable per-user MFA" issueId="" issueLink="" platform="" cost="0" risk="40" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Enable per-user MFA 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  Multi-factor authentication (MFA) is a process where a user is prompted during a sign-in event for additional forms of identification. This prompt could be to enter a code on their cellphone or to provide a fingerprint scan. When you require a second form of authentication, security is increased as this additional factor isn't something that's easy for an attacker to obtain or duplicate. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  To secure user sign-in events in Azure AD, you can require multi-factor authentication (MFA). Enabling Azure AD Multi-Factor Authentication using Conditional Access policies is the recommended approach to protect users. Conditional Access is an Azure AD Premium P1 or P2 feature that lets you apply rules to require MFA as needed in certain scenarios 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  For Azure AD free tenants without Conditional Access, you can use security defaults to protect users. Users are prompted for MFA as needed, but you can't define your own rules to control the behavior. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Features and licenses for Azure AD Multi-Factor Authentication" url="https://docs.microsoft.com/en-us/azure/active-directory/authentication/concept-mfa-licensing"/>
          </references>
          <standards>
            <standard ref="1.1.2" supportedStandardRef="cis-azure-standard"/>
            <standard ref="1.1.2" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="1.1.3" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="IM-6" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="IM-7" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  1. Log into the Azure portal as an owner. 
&lt;/div&gt; 
&lt;div&gt;
  2. Select Azure Active Directory. 
&lt;/div&gt; 
&lt;div&gt;
  3. Go into "Users and groups" &amp;gt; "All users". 
&lt;/div&gt; 
&lt;div&gt;
  4. Select "Multi-Factor Authentication". 
&lt;/div&gt; 
&lt;div&gt;
  5. Ensure your users have the MFA flag enabled. 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:12.868">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-FIREWALL3" name="Enable Threat intelligence-based filtering to alert and deny traffic" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Enable Threat intelligence-based filtering to alert and deny traffic&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Threat intelligence-based filtering can be enabled for your firewall to alert and deny traffic from/to known malicious IP addresses and domains. The IP addresses and domains are sourced from the Microsoft Threat Intelligence feed.&lt;br&gt; By default, threat intelligence-based filtering is enabled in alert mode. Azure recommends to enable it in alert and deny mode.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; By default, threat intelligence-based filtering is enabled in alert mode. You cannot turn off this feature or change the mode until the portal interface becomes available in your region.&lt;br&gt; You can then change the mode by selecting "Alert and deny" in the Azure portal interface.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; none&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Azure Firewall threat intelligence-based filtering" url="https://docs.microsoft.com/en-us/azure/firewall/threat-intel"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Testing&lt;/p&gt;

  &lt;p&gt;- Outbound testing - Outbound traffic alerts should be a rare occurrence, as it means that your environment has been compromised. To help test outbound alerts are working, a test FQDN has been created that triggers an alert. Use testmaliciousdomain.eastus.cloudapp.azure.com for your outbound tests.&lt;/p&gt;

  &lt;p&gt;- Inbound testing - You can expect to see alerts on incoming traffic if DNAT rules are configured on the firewall. This is true even if only specific sources are allowed on the DNAT rule and traffic is otherwise denied. Azure Firewall doesn't alert on all known port scanners; only on scanners that are known to also engage in malicious activity.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:12.524">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-SECURE-CONFIG" name="Establish secure configurations with Azure Policy" issueId="" issueLink="" platform="" cost="0" risk="42" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Establish secure configurations with Azure Policy&lt;/p&gt;&lt;p&gt;Rationale:&lt;br&gt;Azure Policy helps to enforce organizational standards and to assess compliance at-scale. Through its compliance dashboard, it provides an aggregated view to evaluate the overall state of the environment, with the ability to drill down to the per-resource, per-policy granularity. It also helps to bring your resources to compliance through bulk remediation for existing resources and automatic remediation for new resources.&lt;/p&gt;&lt;p&gt;Common use cases for Azure Policy include implementing governance for resource consistency, regulatory compliance, security, cost, and management. Policy definitions for these common use cases are already available in your Azure environment as built-ins to help you get started.&lt;/p&gt;&lt;p&gt;All Azure Policy data and objects are encrypted at rest.&lt;/p&gt;&lt;p&gt;Remediation:&lt;br&gt;Define and implement standard security configurations with Azure Policy&lt;/p&gt;&lt;p&gt;1. Use Azure Policy to put restrictions on the type of resources that can be created in your and in customer subscriptions using the following built-in policy definitions:&lt;br&gt;- Not allowed resource types&lt;br&gt;- Allowed resource types&lt;br&gt;You can also create custom Azure Policy definitions to restrict more granular resource settings.&lt;/p&gt;&lt;p&gt;2. Use built-in Azure Policy definitions as well as Azure Policy aliases in the "Microsoft.Network" namespace to create custom policies to alert, audit, and enforce system configurations. Additionally, develop a process and pipeline for managing policy exceptions.&lt;/p&gt;&lt;p&gt;3. Use Azure Policy [audit], [deny], and [deploy if not exist] to automatically enforce configurations for your Azure resources.&lt;/p&gt;&lt;p&gt;4. You can use recommendations from Azure Security Center or built-in Azure Policies, such as:&lt;br&gt;- There should be more than one owner assigned to your subscription&lt;br&gt;- Deprecated accounts with owner permissions should be removed from your subscription&lt;br&gt;- External accounts with owner permissions should be removed from your subscription&lt;/p&gt;&lt;p&gt;Impact:&lt;br&gt;It is important to validate a new policy works as intended before allowing it to change or block work. The validation must ensure only the intended resources are determined to be non-compliant and no compliant resources are incorrectly included (known as a false positive) in the results.&lt;br&gt;For this reason, your policy definitions should be as tightly defined and focused on the resources and the properties you need to evaluate for compliance as possible.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Tutorial: Create and manage policies to enforce compliance" url="https://docs.microsoft.com/en-us/azure/governance/policy/tutorials/create-and-manage"/>
            <reference name="Understand Azure Policy effects" url="https://docs.microsoft.com/en-us/azure/governance/policy/concepts/effects"/>
          </references>
          <standards>
            <standard ref="AM-2" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="GS-5" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;The recommended approach to validating a new policy definition is by following these steps:&lt;/p&gt;

	&lt;p&gt;- Tightly define your policy&lt;br /&gt;
- Audit your existing resources&lt;br /&gt;
- Audit new or updated resource requests&lt;br /&gt;
- Deploy your policy to resources&lt;br /&gt;
- Continuous monitoring&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:12.868">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="C-AZURE-COMMON1" name="Evaluate public IP addresses on a periodic basis" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Public IP Addresses provide tenant accounts with Internet connectivity for resources contained within the tenant. During the creation of certain resources in Azure, a Public IP Address may be created. All Public IP Addresses within the tenant should be periodically reviewed for accuracy and necessity.&lt;/p&gt;
&lt;p&gt;Rationale:&lt;/p&gt;
&lt;p&gt;Public IP Addresses allocated to the tenant should be periodically reviewed for necessity. Public IP Addresses that are not intentionally assigned and controlled present a publicly facing vector for threat actors and significant risk to the tenant.&lt;/p&gt;
&lt;p&gt;Remediation:&lt;/p&gt;
&lt;p&gt;Remediation will vary significantly depending on your organization's security requirements for the resources attached to each individual Public IP address&lt;/p&gt;
&lt;p&gt;Impact:&lt;/p&gt;
&lt;p&gt;None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Security Control v3: Network security" url="https://learn.microsoft.com/en-us/security/benchmark/azure/security-controls-v3-network-security"/>
            <reference name="az network public-ip" url="https://learn.microsoft.com/en-us/cli/azure/network/public-ip?view=azure-cli-latest"/>
          </references>
          <standards>
            <standard ref="6.7" supportedStandardRef="cis-azure-standard"/>
            <standard ref="NS-2" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;From Azure Portal&lt;br&gt;1. Open the All Resources blade&lt;br&gt;2. Click on Add Filter&lt;br&gt;3. In the Add Filter window, select the following:&lt;br&gt;Filter: Type&lt;br&gt;Operator: Equals&lt;br&gt;Value: Public IP address&lt;br&gt;4. Click the Apply button&lt;br&gt;5. For each Public IP address in the list, use Overview (or Properties) to review the "Associated to:" field and determine if the associated resource is still relevant to your tenant environment. If the associated resource is relevant, ensure that additional controls exist to mitigate risk (e.g. Firewalls, VPNs, Traffic Filtering, Virtual Gateway Appliances, Web Application Firewalls, etc.) on all subsequently attached resources.&lt;br&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;From Azure CLI&lt;br&gt;List all Public IP addresses:&lt;br&gt;az network public-ip list&lt;br&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;For each Public IP address in the output, review the "name" property and determine if &amp;nbsp;the associated resource is still relevant to your tenant environment. If the associated resource is relevant, ensure that additional controls exist to mitigate risk (e.g. Firewalls, VPNs, Traffic Filtering, Virtual Gateway Appliances, Web Application Firewalls, etc.) on all subsequently attached resources.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:12.869">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-L05" name="Export the Audit Logs to a storage account" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Export the information of Audit Logs to a storage account. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Go to "Monitor" and then to "Activity Logs".&lt;/li&gt; 
  &lt;li&gt;Push the button "Export".&lt;/li&gt; 
  &lt;li&gt;Select "All Regions".&lt;/li&gt; 
  &lt;li&gt;Select "Export to a storage account" and select your account.&lt;/li&gt; 
  &lt;li&gt;Select the "Retention (days)" as minimum 90 days.&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Enable diagnostics logging for web apps in Azure App Service" url="https://docs.microsoft.com/en-us/azure/app-service-web/web-sites-enable-diagnostic-log"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="6.5" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Activity Logs&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Push the button &amp;quot;Export&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;All Regions&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;Export to a storage account&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that all fields are correctly filled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:12.868">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-SUBSCRIPTIONS" name="Implement isolation using separate subscriptions" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Implement isolation using separate subscriptions&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; You can create an additional subscription for your Enterprise Agreement (EA), Microsoft Customer Agreement or Microsoft Partner Agreement billing account in the Azure portal. You may want an additional subscription to avoid hitting subscription limits, to create separate environments for security, or to isolate data for compliance reasons.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Create a subscription in the Azure portal&lt;/p&gt; 
&lt;p&gt;1. Sign in to the Azure portal.&lt;/p&gt; 
&lt;p&gt;2. Search for Subscriptions.&lt;/p&gt; 
&lt;p&gt;3. Select Add.&lt;/p&gt; 
&lt;p&gt;4. If you have access to multiple billing accounts, select the billing account for which you want to create the subscription.&lt;/p&gt; 
&lt;p&gt;5. Fill the form and click Create.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Create an additional Azure subscription" url="https://docs.microsoft.com/en-us/azure/cost-management-billing/manage/create-subscription"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that you have implemented isolation through separate subscriptions.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:12.868">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-LOAD-BALANCER3" name="Integrate Azure Firewall with Azure Standard Load Balancer" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Integrate Azure Firewall with Azure Standard Load Balancer&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; You can integrate an Azure Firewall into a virtual network with an Azure Standard Load Balancer (either public or internal).&lt;br&gt; Explicitly define internet connectivity and valid source IPs through outbound rules and network security groups with your Load Balancer to use Microsoft's threat intelligence for protecting your web applications.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; The preferred design is to integrate an internal load balancer with your Azure firewall, as this is a much simpler design. You can use a public load balancer if you already have one deployed and you want to keep it in place. However, you need to be aware of an asymmetric routing issue that can break functionality with the public load balancer scenario.&lt;/p&gt; 
&lt;p&gt;Public load balancer&lt;/p&gt; 
&lt;p&gt;With a public load balancer, the load balancer is deployed with a public frontend IP address.&lt;/p&gt; 
&lt;p&gt;Asymmetric routing&lt;/p&gt; 
&lt;p&gt;Asymmetric routing is where a packet takes one path to the destination and takes another path when returning to the source. This issue occurs when a subnet has a default route going to the firewall's private IP address and you're using a public load balancer. In this case, the incoming load balancer traffic is received via its public IP address, but the return path goes through the firewall's private IP address. Since the firewall is stateful, it drops the returning packet because the firewall isn't aware of such an established session.&lt;/p&gt; 
&lt;p&gt;Fix the routing issue&lt;/p&gt; 
&lt;p&gt;When you deploy an Azure Firewall into a subnet, one step is to create a default route for the subnet directing packets through the firewall's private IP address located on the AzureFirewallSubnet.&lt;br&gt; When you introduce the firewall into your load balancer scenario, you want your Internet traffic to come in through your firewall's public IP address. From there, the firewall applies its firewall rules and NATs the packets to your load balancer's public IP address. This is where the problem occurs. Packets arrive on the firewall's public IP address, but return to the firewall via the private IP address (using the default route). To avoid this problem, create an additional host route for the firewall's public IP address. Packets going to the firewall's public IP address are routed via the Internet. This avoids taking the default route to the firewall's private IP address.&lt;/p&gt; 
&lt;p&gt;Internal load balancer&lt;/p&gt; 
&lt;p&gt;With an internal load balancer, the load balancer is deployed with a private frontend IP address.&lt;br&gt; There's no asymmetric routing issue with this scenario. The incoming packets arrive at the firewall's public IP address, get translated to the load balancer's private IP address, and then returns to the firewall's private IP address using the same return path.&lt;br&gt; So, you can deploy this scenario similar to the public load balancer scenario, but without the need for the firewall public IP address host route.&lt;/p&gt; 
&lt;p&gt;Note: The virtual machines in the backend pool will not have outbound internet connectivity with this configuration. For more information please see Reference URLs.&lt;/p&gt; 
&lt;p&gt;Additional security&lt;/p&gt; 
&lt;p&gt;To further enhance the security of your load-balanced scenario, you can use network security groups (NSGs).&lt;br&gt; For example, you can create an NSG on the backend subnet where the load-balanced virtual machines are located. Allow incoming traffic originating from the firewall IP address/port.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; You need to be aware of an asymmetric routing issue that can break functionality with the public load balancer scenario.&lt;br&gt; The virtual machines in the backend pool will not have outbound internet connectivity with this configuration. For more information please see Reference URLs.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Integrate Azure Firewall with Azure Standard Load Balancer" url="https://docs.microsoft.com/en-us/azure/firewall/integrate-lb"/>
            <reference name="Tutorial: Deploy and configure Azure Firewall using the Azure portal" url="https://docs.microsoft.com/en-us/azure/firewall/tutorial-firewall-deploy-portal"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that Azure Firewall is integrated with Azure Standard Load Balancer.&lt;br /&gt;
Test the firewall to confirm that it works as expected, following the testing steps for firewall deployment.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:12.524">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-N09" name="Isolate Azure instances into different VNets" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Specify a VNet for the Azure instance as a launch parameter. Applications that run on the Cloud instance can use the VNet security configuration when they access Azure resources.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  You can configure an Azure cloud service from Solution Explorer in Visual Studio. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Create a virtual network with multiple subnets" url="https://docs.microsoft.com/en-us/azure/virtual-network/virtual-networks-create-vnet-arm-pportal"/>
          </references>
          <standards>
            <standard ref="GS-4" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that the Azure instances are into different VNets.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:12.524">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-LOAD-BALANCER1" name="Maintain an inventory of administrative accounts for Azure Load Balancer" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Maintain an inventory of administrative accounts for Azure Load Balancer&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Azure role-based access control (Azure RBAC) allows you to manage access to Azure resources such as your Load Balancer through role assignments. Assign these roles to users, groups service principals, and managed identities.&lt;br&gt; Inventory Pre-defined and built-in roles for certain resources with tools like Azure CLI, Azure PowerShell or the Azure portal.&lt;br&gt; It is highly recommended by Microsoft to maintain an inventory of administrative accounts.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; How to get a directory role in Azure AD with PowerShell&lt;/p&gt; 
&lt;p&gt;Get-AzureADDirectoryRole [-Filter ] [-InformationAction ] [-InformationVariable ] []&lt;/p&gt; 
&lt;p&gt;Get-AzureADDirectoryRole -ObjectId  [-InformationAction ] [-InformationVariable ] []&lt;/p&gt; 
&lt;p&gt;How to get members of a directory role in Azure AD with PowerShell&lt;/p&gt; 
&lt;p&gt;Get-AzureADDirectoryRoleMember -ObjectId  [-InformationAction ] [-InformationVariable ] []&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Azure built-in roles" url="https://docs.microsoft.com/en-us/azure/role-based-access-control/built-in-roles"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that you maintain an inventory of administrative accounts for Azure Load Balancer&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:12.524">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-A07" name="Recertify user access" issueId="" issueLink="" platform="" cost="0" risk="40" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Do regular reviews of accounts on the system and verify that it doesn't exist stoled or fake accounts. With this process is ensured that there are not compromised accounts by former employees or by attackers.&lt;/p&gt;&lt;p&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Remediation:&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;At least every 90 days complete the following:&amp;nbsp;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Log in to the Azure portal as an owner.&lt;/li&gt;&lt;li&gt;Select Azure Active Directory.&lt;/li&gt;&lt;li&gt;Go into "Users and groups" &amp;gt; "All users".&lt;/li&gt;&lt;li&gt;For any user that should not exist:&lt;/li&gt;&lt;li&gt;Select the user.&lt;/li&gt;&lt;li&gt;Click "Delete".&lt;/li&gt;&lt;/ol&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Assign a user or group to an enterprise app in Azure Active Directory" url="https://docs.microsoft.com/en-us/azure/active-directory/active-directory-coreapps-assign-user-azure-portal"/>
          </references>
          <standards>
            <standard ref="PA-4" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Log in to the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each user has got an assigned account.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:12.869">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-A01" name="Register a Security contact for your Azure account" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Provide the security contact details for the Azure subscription. Microsoft Security Response Center (MSRC) performs security monitoring of the Azure network and infrastructure and receives threat intelligence and abuse complaints from third parties. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Microsoft will use this information provided to contact if the MSRC discovers that customer data has been accessed by an unlawful or unauthorized party. Also, this provides the means of ensuring these advisories are routed to the security team, especially if a distribution email address is used.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br /&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Access &amp;quot;Azure Security Center&amp;quot;.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;In the &amp;quot;Recommendations&amp;quot; tab choose &amp;quot;Provide security contact details&amp;quot;.&amp;nbsp;&lt;/li&gt; 
  &lt;li&gt;Once filled, save changes.&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Provide security contact details in Azure Security Center" url="https://docs.microsoft.com/en-us/azure/security-center/security-center-provide-security-contact-details"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Access &amp;quot;Azure Security Center&amp;quot;.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;In the &amp;quot;Recommendations&amp;quot; tab choose &amp;quot;Provide security
                            contact details&amp;quot;.&amp;nbsp;&lt;/li&gt;
                            &lt;li&gt;Check that all fields are filled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:12.869">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-REPOS-GIT" name="Securely store configuration of Azure resources" issueId="" issueLink="" platform="" cost="0" risk="42" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Securely store configuration of Azure resources&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; If using custom Azure Policy definitions, use Azure DevOps or Azure Repos to securely store and manage your code.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Use version control to save your work and coordinate code changes across your team. Even if you are just a single developer, version control helps you stay organized as you fix bugs and develop new features. Version control keeps a history of your development so that you can review and even rollback to any version of your code with ease.&lt;/p&gt; 
&lt;p&gt;Version control workflow&lt;/p&gt; 
&lt;p&gt;Version control has a general workflow that most developers use when writing code and sharing it with the team.&lt;/p&gt; 
&lt;p&gt;These steps are:&lt;br&gt; 1. Get a local copy of code if they do not have one yet.&lt;br&gt; 2. Make changes to code to fix bugs or add new features.&lt;br&gt; 3. Once the code is ready, make it available for review by your team.&lt;br&gt; 4. Once the code is reviewed, merge it into the team's shared codebase.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Azure Repos Git tutorial" url="https://docs.microsoft.com/en-us/azure/devops/repos/git/gitworkflow?view=azure-devops"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that the configuration of Azure resources is securely stored.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:12.524">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-JIT-VM-ACCESS" name="Secure your management ports with just-in-time VM access" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Secure your management ports with just-in-time (JIT) VM access&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Threat actors actively hunt accessible machines with open management ports, like RDP or SSH. All of your virtual machines are potential targets for an attack. When a VM is successfully compromised, it's used as the entry point to attack further resources within your environment.&lt;/p&gt; 
&lt;p&gt;As with all cybersecurity prevention techniques, your goal should be to reduce the attack surface. In this case, that means having fewer open ports, especially management ports.&lt;br&gt; Your legitimate users also use these ports, so it's not practical to keep them closed.&lt;br&gt; To solve this dilemma, Azure Security Center offers JIT. With JIT, you can lock down the inbound traffic to your VMs, reducing exposure to attacks while providing easy access to connect to VMs when needed.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; How to Enable JIT on your VMs from Azure Security Center&lt;/p&gt; 
&lt;p&gt;From Security Center, you can enable and configure the JIT VM access.&lt;/p&gt; 
&lt;p&gt;1. Open the Azure Defender dashboard and from the advanced protection area, select Just-in-time VM access.&lt;/p&gt; 
&lt;p&gt;The Just-in-time VM access page opens with your VMs grouped into the following tabs:&lt;/p&gt; 
&lt;p&gt;a. Configured - VMs that have been already been configured to support just-in-time VM access. For each VM, the configured tab shows:&lt;br&gt; i. The number of approved JIT requests in the last seven days&lt;br&gt; ii. The last access date and time&lt;br&gt; iii. The connection details configured&lt;br&gt; iv. The last user&lt;/p&gt; 
&lt;p&gt;b. Not configured - VMs without JIT enabled, but that can support JIT. Microsoft recommends that you enable JIT for these VMs.&lt;/p&gt; 
&lt;p&gt;c. Unsupported - VMs without JIT enabled and which don't support the feature. Your VM might be in this tab for the following reasons:&lt;br&gt; i. Missing network security group (NSG) - JIT requires an NSG to be configured&lt;br&gt; ii. Classic VM - JIT supports VMs that are deployed through Azure Resource Manager, not 'classic deployment'. Learn more about classic vs Azure Resource Manager deployment models.&lt;br&gt; iii. Other - Your VM might be in this tab if the JIT solution is disabled in the security policy of the subscription or the resource group.&lt;/p&gt; 
&lt;p&gt;2. From the Not configured tab, mark the VMs to protect with JIT and select Enable JIT on VMs.&lt;/p&gt; 
&lt;p&gt;The JIT VM access page opens listing the ports that Security Center recommends protecting:&lt;/p&gt; 
&lt;p&gt;- 22 - SSH&lt;br&gt; - 3389 - RDP&lt;br&gt; - 5985 - WinRM&lt;br&gt; - 5986 - WinRM&lt;/p&gt; 
&lt;p&gt;To accept the default settings, select Save.&lt;/p&gt; 
&lt;p&gt;3. To customize the JIT options:&lt;/p&gt; 
&lt;p&gt;- Add custom ports with the Add button.&lt;br&gt; - Modify one of the default ports, by selecting it from the list.&lt;/p&gt; 
&lt;p&gt;For each port (custom and default) the Add port configuration pane offers the following options:&lt;/p&gt; 
&lt;p&gt;- Protocol- The protocol that is allowed on this port when a request is approved&lt;br&gt; - Allowed source IPs- The IP ranges that are allowed on this port when a request is approved&lt;br&gt; - Maximum request time- The maximum time window during which a specific port can be opened&lt;/p&gt; 
&lt;p&gt;a. Set the port security to your needs.&lt;/p&gt; 
&lt;p&gt;b. Select OK.&lt;/p&gt; 
&lt;p&gt;4. Select Save.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; JIT does not support VMs protected by Azure Firewalls controlled by Azure Firewall Manager.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Secure your management ports with just-in-time access" url="https://docs.microsoft.com/en-us/azure/security-center/security-center-just-in-time"/>
            <reference name="Understanding just-in-time (JIT) VM access" url="https://docs.microsoft.com/en-us/azure/security-center/just-in-time-explained"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Audit JIT access activity in Security Center&lt;/p&gt;

	&lt;p&gt;You can gain insights into VM activities using log search. To view the logs:&lt;/p&gt;

	&lt;p&gt;1. From Just-in-time VM access, select the Configured tab.&lt;/p&gt;

	&lt;p&gt;2. For the VM that you want to audit, open the ellipsis menu at the end of the row.&lt;/p&gt;

	&lt;p&gt;3. Select Activity Log from the menu.&lt;/p&gt;

	&lt;p&gt;4. The activity log provides a filtered view of previous operations for that VM along with time, date, and subscription.&lt;/p&gt;

	&lt;p&gt;To download the log information, select Download as CSV.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:12.524">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-RESOURCE1" name="Set resource locks for mission critical Azure resources" issueId="" issueLink="" platform="" cost="0" risk="42" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Resource Manager Locks provide a way for administrators to lock down Azure resources to prevent deletion of, or modifications to, a resource. These locks sit outside of the Role Based Access Controls (RBAC) hierarchy and, when applied, will place restrictions on the resource for all users. These locks are very useful when there is an important resource in a subscription that users should not be able to delete or change. Locks can help prevent accidental and malicious changes or deletion.&lt;/p&gt;&lt;p&gt;Rationale:&lt;/p&gt;&lt;p&gt;As an administrator, it may be necessary to lock a subscription, resource group, or resource to prevent other users in the organization from accidentally deleting or modifying critical resources. The lock level can be set to to CanNotDelete or ReadOnly to achieve this purpose.&lt;/p&gt;&lt;ul&gt;&lt;li&gt;CanNotDelete means authorized users can still read and modify a resource, but they can't delete the resource.&lt;/li&gt;&lt;li&gt;ReadOnly means authorized users can read a resource, but they can't delete or update the resource. Applying this lock is similar to restricting all authorized users to the permissions granted by the Reader role.&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Remediation:&lt;/p&gt;&lt;p&gt;&lt;strong&gt;From Azure Console&lt;/strong&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Navigate to the specific Azure Resource or Resource Group&lt;/li&gt;&lt;li&gt;For each of the mission critical resource, click on Locks&lt;/li&gt;&lt;li&gt;Click Add&lt;/li&gt;&lt;li&gt;Give the lock a name and a description, then select the type, CanNotDelete or ReadOnly as appropriate&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;strong&gt;Using Azure Command Line Interface 2.0&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;To lock a resource, provide the name of the resource, its resource type, and its resource group name.&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;az lock create --name &amp;lt;LockName&amp;gt; --lock-type &amp;lt;CanNotDelete/Read-only&amp;gt; --resource-group &amp;lt;resourceGroupName&amp;gt; --resource-name &amp;lt;resourceName&amp;gt; --resource-type &amp;lt;resourceType&amp;gt;&lt;/p&gt;&lt;/blockquote&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="10.1" supportedStandardRef="cis-azure-standard-level-2"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;&lt;strong&gt;From Azure Console&lt;/strong&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Navigate to the specific Azure Resource or Resource Group&lt;/li&gt;&lt;li&gt;Click on Locks&lt;/li&gt;&lt;li&gt;Ensure the lock is defined with name and description, type as CanNotDelete or ReadOnly as appropriate.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;strong&gt;Using Azure Command Line Interface 2.0&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Review the list of all locks set currently:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;az lock list --resource-group &amp;lt;resourcegroupname&amp;gt; --resource-name &amp;lt;resourcename&amp;gt; --namespace &amp;lt;Namespace&amp;gt; --resource-type &amp;lt;type&amp;gt; --parent ""&lt;/p&gt;&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:12.869">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-V02" name="Set up the security policy" issueId="" issueLink="" platform="" cost="0" risk="42" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Set up the security policies to define the items for which Security Center collects data and makes recommendations. Apply different security policies to different sets of Azure resources. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;On the Security Center dashboard, select Security policy, and then select your subscription.&lt;/li&gt; 
  &lt;li&gt;Select Prevention policy.&lt;/li&gt; 
  &lt;li&gt;Turn on or turn off policy items that you want to apply to all Azure resources.&lt;/li&gt; 
  &lt;li&gt;When you're finished selecting your settings, select OK.&lt;/li&gt; 
  &lt;li&gt;On the Security policy blade, select Save.&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt; 
&lt;div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Set security policies in Azure Security Center" url="https://docs.microsoft.com/en-us/azure/security-center/security-center-policies"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;On the Security Center dashboard, select Security policy, and then select your
                            subscription.&lt;/li&gt;
                            &lt;li&gt;Select Prevention policy.&lt;/li&gt;
                            &lt;li&gt;Check that the required policy items are enabled.&amp;nbsp;&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:12.869">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-LOAD-BALANCER2" name="Upgrade Azure Public Load Balancers from Basic to Standard" issueId="" issueLink="" platform="" cost="1" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Upgrade Azure Public Load Balancers from Basic to Standard&lt;/p&gt;

	&lt;p&gt;Rationale:&lt;br /&gt;
Azure offers two types of Load Balancer offerings, Standard and Basic. &lt;/p&gt;

	&lt;p&gt;Standard Load Balancer is secure by default and part of your virtual network. The virtual network is a private and isolated network. This means Standard Load Balancers and Standard Public IP addresses are closed to inbound flows unless opened by Network Security Groups. NSGs are used to explicitly permit allowed traffic. If you do not have an NSG on a subnet or NIC of your virtual machine resource, traffic is not allowed to reach this resource.&lt;br /&gt;
Basic Load Balancer is open to the internet by default.&lt;/p&gt;

	&lt;p&gt;Using a Standard Load Balancer is recommended for your production workloads and typically the Basic Load Balancer is only used for testing since the basic type is open to connections from the internet by default, and doesn't require network security groups for operation.&lt;/p&gt;

	&lt;p&gt;Remediation:&lt;br /&gt;
There are two stages in an upgrade:&lt;/p&gt;

	&lt;p&gt;1. Change IP allocation method from Dynamic to Static.&lt;br /&gt;
2. Run the PowerShell script to complete the upgrade and traffic migration.&lt;/p&gt;

	&lt;p&gt;There are different scripts to support upgrade for Public (External) Load Balancers, Private (Internal) where no outbound connection is required and Private (Internal) where outbound connection is required.&lt;br /&gt;
For more information please see the Reference URLs. &lt;/p&gt;

	&lt;p&gt;Impact:&lt;br /&gt;
It usually take about 5-10 minutes for the script to finish and it could take longer depending on the complexity of your Load Balancer configuration. Therefore, keep the downtime in mind and plan for failover if necessary.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Upgrade Azure Internal Load Balancer - Outbound Connection Required" url="https://docs.microsoft.com/en-us/azure/load-balancer/upgrade-internalbasic-to-publicstandard"/>
            <reference name="Upgrade Azure Internal Load Balancer- No Outbound Connection Required" url="https://docs.microsoft.com/en-us/azure/load-balancer/upgrade-basicinternal-standard"/>
            <reference name="Upgrade Azure Public Load Balancer" url="https://docs.microsoft.com/en-us/azure/load-balancer/upgrade-basic-standard"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that you are using Standard Load Balancers for your production workloads.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:12.524">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-SSO" name="Use Azure Active Directory single sign-on (SSO)" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Use Azure Active Directory single sign-on (SSO)&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Single sign-on means a user does not have to sign in to every application they use. The user logs in once and that credential is used for other apps too.&lt;/p&gt; 
&lt;p&gt;Single sign-on provides many benefits over traditional sign-on methods.&lt;/p&gt; 
&lt;p&gt;- With single sign-on, users sign in once with one account to access domain-joined devices, company resources, software as a service (SaaS) applications, and web applications. After signing in, the user can launch applications from the Office 365 portal or My Apps. Administrators can centralize user account management, and automatically add or remove user access to applications based on group membership.&lt;/p&gt; 
&lt;p&gt;- Without single sign-on, users must remember application-specific passwords and sign in to each application. IT staff needs to create and update user accounts for each application such as Microsoft 365, Box, and Salesforce. Users need to remember their passwords, plus spend the time to sign in to each application.&lt;/p&gt; 
&lt;p&gt;Azure Active Directory (Azure AD) has a gallery that contains thousands of pre-integrated applications. Many of the applications your organization uses are probably already in the gallery.&lt;/p&gt; 
&lt;p&gt;After an application is added to your Azure AD tenant, you can:&lt;/p&gt; 
&lt;p&gt;- Configure properties for the app.&lt;br&gt; - Manage user access to the app with a Conditional Access policy.&lt;br&gt; - Configure single sign-on so users can sign in to the app with their Azure AD credentials.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Add an app to your Azure AD tenant&lt;/p&gt; 
&lt;p&gt;To add an application to your Azure AD tenant:&lt;/p&gt; 
&lt;p&gt;1. In the Azure portal, on the left navigation panel, select Azure Active Directory.&lt;/p&gt; 
&lt;p&gt;2. In the Azure Active Directory pane, select Enterprise applications. The All applications pane opens and displays a random sample of the applications in your Azure AD tenant.&lt;/p&gt; 
&lt;p&gt;3. In the Enterprise applications pane, select New application. Select New application to add a gallery app to your tenant&lt;/p&gt; 
&lt;p&gt;4. Switch to the new gallery preview experience: In the banner at the top of the Add an application page, select the link that says Click here to try out the new and improved app gallery.&lt;/p&gt; 
&lt;p&gt;5. The Browse Azure AD Gallery (Preview) pane opens and displays tiles for cloud platforms, on-premises applications, and featured applications. Applications listed in the Featured applications section have icons indicating whether they support federated single sign-on (SSO) and provisioning.&lt;/p&gt; 
&lt;p&gt;6. You can browse the gallery for the application you want to add, or search for the application by entering its name in the search box. Then select the application from the results.&lt;/p&gt; 
&lt;p&gt;7. The next step depends on the way the developer of the application implemented single sign-on (SSO). Single sign-on can be implemented by app developers in four ways. The four ways are SAML, OpenID Connect, Password, and Linked. When you add an app, you can choose to filter and see only apps using a particular SSO implementation as shown in the screenshot. For example, a popular standard to implement SSO is called Security Assertion Markup Language (SAML). Another standard that is popular is called OpenId Connect (OIDC). The way you configure SSO with these standards is different so take note of the type of SSO that is implemented by the app that you are adding.&lt;/p&gt; 
&lt;p&gt;- If the developer of the app used the OIDC standard for SSO then select Sign Up. A setup page appears. Next, go to the quickstart on setting up OIDC-based single sign-on. Screenshot shows adding an OIDC-based SSO app.&lt;/p&gt; 
&lt;p&gt;- If the developer of the app used the SAML standard for SSO then select Create. A getting started page appears with the options for configuring the application for your organization. In the form, you can edit the name of the application to match the needs of your organization. Next, go to the quickstart on setting up SAML-based single sign-on. Screenshot shows adding an SAML-based SSO app.&lt;/p&gt; 
&lt;p&gt;Important: There are some key differences between SAML-based and OIDC-based SSO implementations. With SAML-based apps you can add multiple instances of the same app. For example, GitHub1, GitHub2, etc.. For OIDC-based apps you can only add one instance of an app. If you have already added an OIDC-based app and try to add the same app again and provide consent twice, it will not be added again in the tenant.&lt;/p&gt; 
&lt;p&gt;If the application you are looking for is not in the gallery then you can select the link Create your own application and then under What are you looking to do with your application? choose Integrate any other application you do not find in the gallery. Microsoft has already worked with many application developers to pre-configure them to work with Azure AD. The pre-configured apps show up in the gallery. But if the app you want to add is not listed then you can create a new, generic, app and then configure it yourself or with the guidance of the developer that created it.&lt;/p&gt; 
&lt;p&gt;You have finished adding an application. &lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Quickstart: Add an application to your Azure Active Directory (Azure AD) tenant" url="https://docs.microsoft.com/en-us/azure/active-directory/manage-apps/add-application-portal"/>
            <reference name="What is single sign-on (SSO)?" url="https://docs.microsoft.com/en-us/azure/active-directory/manage-apps/what-is-single-sign-on"/>
          </references>
          <standards>
            <standard ref="IM-5" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="PA-6" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that, wherever possible, you are using Azure Active Directory SSO instead of configuring individual stand-alone credentials per-service.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:12.869">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-RESOURCE-MANAGER" name="Use Azure Resource Manager" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Use Azure Resource Manager&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; The Resource Manager and classic deployment models represent two different ways of deploying and managing your Azure solutions. You work with them through two different API sets, and the deployed resources can contain important differences. The two models are not compatible with each other.&lt;br&gt; With Resource Manager, you can:&lt;br&gt; - Manage your infrastructure through declarative templates rather than scripts.&lt;br&gt; - Deploy, manage, and monitor all the resources for your solution as a group, rather than handling these resources individually.&lt;br&gt; - Redeploy your solution throughout the development life-cycle and have confidence your resources are deployed in a consistent state.&lt;br&gt; - Define the dependencies between resources so they are deployed in the correct order.&lt;br&gt; - Apply access control to all services because Azure role-based access control (Azure RBAC) is natively integrated into the management platform.&lt;br&gt; - Apply tags to resources to logically organize all the resources in your subscription.&lt;br&gt; - Clarify your organization's billing by viewing costs for a group of resources sharing the same tag.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; To simplify the deployment and management of resources, Microsoft recommends that you use Resource Manager for all new resources. If possible, Microsoft recommends that you redeploy existing resources through Resource Manager.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; Resource Manager and classic deployment models are not compatible with each other.&lt;br&gt; There are three scenarios to be aware of:&lt;br&gt; 1. Cloud Services does not support Resource Manager deployment model.&lt;br&gt; 2. Virtual machines, storage accounts, and virtual networks support both Resource Manager and classic deployment models.&lt;br&gt; 3. All other Azure services support Resource Manager.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Azure Resource Manager vs. classic deployment: Understand deployment models and the state of your resources" url="https://docs.microsoft.com/en-us/azure/azure-resource-manager/management/deployment-models"/>
          </references>
          <standards>
            <standard ref="AM-3" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that you are using Resource Manager for all new resources.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:12.869">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-ADAPTIVE-NET-HARDENING" name="Use Security Center's Adaptive Network Hardening" issueId="" issueLink="" platform="" cost="1" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Use Defender for Cloud's Adaptive Network Hardening&lt;/p&gt;&lt;p&gt;Rationale:&lt;br&gt;Applying network security groups (NSG) to filter traffic to and from resources, improves your network security posture. However, there can still be some cases in which the actual traffic flowing through the NSG is a subset of the NSG rules defined. In these cases, further improving the security posture can be achieved by hardening the NSG rules, based on the actual traffic patterns.&lt;/p&gt;&lt;p&gt;Adaptive network hardening provides recommendations to further harden the NSG rules. It uses a machine learning algorithm that factors in actual traffic, known trusted configuration, threat intelligence, and other indicators of compromise, and then provides recommendations to allow traffic only from specific IP/port tuples.&lt;/p&gt;&lt;p&gt;Note: Adaptive network hardening recommendations are only supported on the following specific ports (for both UDP and TCP): 13, 17, 19, 22, 23, 53, 69, 81, 111, 119, 123, 135, 137, 138, 139, 161, 162, 389, 445, 512, 514, 593, 636, 873, 1433, 1434, 1900, 2049, 2301, 2323, 2381, 3268, 3306, 3389, 4333, 5353, 5432, 5555, 5800, 5900, 5900, 5985, 5986, 6379, 6379, 7000, 7001, 7199, 8081, 8089, 8545, 9042, 9160, 9300, 11211, 16379, 26379, 27017, 37215&lt;/p&gt;&lt;p&gt;Remediation:&lt;br&gt;View and manage hardening alerts and rules&lt;/p&gt;&lt;p&gt;1. From Defender for Cloud's menu, open the Workload protections dashboard and select the adaptive network hardening tile, or the insights panel item related to adaptive network hardening.&lt;/p&gt;&lt;p&gt;Tip: The insights panel shows the percentage of your VMs currently defended with adaptive network hardening.&lt;/p&gt;&lt;p&gt;The details page for the Adaptive Network Hardening recommendations should be applied on internet facing virtual machines recommendation opens with your network VMs grouped into three tabs:&lt;/p&gt;&lt;p&gt;a. Unhealthy resources: VMs that currently have recommendations and alerts that were triggered by running the adaptive network hardening algorithm.&lt;/p&gt;&lt;p&gt;b. Healthy resources: VMs without alerts and recommendations.&lt;/p&gt;&lt;p&gt;c. Unscanned resources: VMs that the adaptive network hardening algorithm cannot be run on because of one of the following reasons:&lt;br&gt;i. VMs are Classic VMs: Only Azure Resource Manager VMs are supported.&lt;br&gt;ii. Not enough data is available: In order to generate accurate traffic hardening recommendations, Security Center requires at least 30 days of traffic data.&lt;br&gt;iii. VM is not protected by Azure Defender: Only VMs protected with Azure Defender for servers are eligible for this feature.&lt;/p&gt;&lt;p&gt;3. From the Unhealthy resources tab, select a VM to view its alerts and the recommended hardening rules to apply.&lt;/p&gt;&lt;p&gt;- The Rules tab lists the rules that adaptive network hardening recommends you add&lt;br&gt;- The Alerts tab lists the alerts that were generated due to traffic, flowing to the resource, which is not within the IP range allowed in the recommended rules.&lt;/p&gt;&lt;p&gt;4. Optionally, edit the rules:&lt;/p&gt;&lt;p&gt;- Modify a rule&lt;br&gt;- Delete a rule&lt;br&gt;- Add a rule&lt;/p&gt;&lt;p&gt;5. Select the rules that you want to apply on the NSG, and click Enforce.&lt;/p&gt;&lt;p&gt;Tip: If the allowed source IP ranges shows as 'None', it means that recommended rule is a deny rule, otherwise, it is an allow rule.&lt;/p&gt;&lt;p&gt;Note: The enforced rules are added to the NSG protecting the VM. (A VM could be protected by an NSG that is associated to its NIC, or the subnet in which the VM resides, or both)&lt;/p&gt;&lt;p&gt;Impact:&lt;br&gt;None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Improve your network security posture with adaptive network hardening" url="https://docs.microsoft.com/en-us/azure/security-center/security-center-adaptive-network-hardening"/>
          </references>
          <standards>
            <standard ref="NS-7" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that Security Center's Adaptive Network Hardening recommendations are enforced  to your NSG configurations.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:12.524">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-TAGS" name="Use service tags in place of specific IP addresses" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Use service tags in place of specific IP addresses&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; A service tag represents a group of IP address prefixes from a given Azure service. Microsoft manages the address prefixes encompassed by the service tag and automatically updates the service tag as addresses change, minimizing the complexity of frequent updates to network security rules.&lt;/p&gt; 
&lt;p&gt;You can use service tags to define network access controls on network security groups or Azure Firewall. Use service tags in place of specific IP addresses when you create security rules. By specifying the service tag name, such as ApiManagement, in the appropriate source or destination field of a rule, you can allow or deny the traffic for the corresponding service.&lt;/p&gt; 
&lt;p&gt;You can use service tags to achieve network isolation and protect your Azure resources from the general Internet while accessing Azure services that have public endpoints. Create inbound/outbound network security group rules to deny traffic to/from Internet and allow traffic to/from AzureCloud or other available service tags of specific Azure services.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; By default, service tags reflect the ranges for the entire cloud. Some service tags also allow more granular control by restricting the corresponding IP ranges to a specified region. For example, the service tag Storage represents Azure Storage for the entire cloud, but Storage.WestUS narrows the range to only the storage IP address ranges from the WestUS region.&lt;/p&gt; 
&lt;p&gt;By specifying the service tag name in the appropriate source or destination field of a rule, you can allow or deny the traffic for the corresponding service.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Virtual network service tags" url="https://docs.microsoft.com/en-us/azure/virtual-network/service-tags-overview"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that your network security rules are simplified by using VNet Service tags.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:12.524">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="AUTHENTICATION" name="Authentication" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="AZURE-LOST-ACCESS-ROOT" name="Attackers gain unauthorized access to the root account due to the lack of configuration of the account" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;div&gt;Attackers could gain unauthorized access to the administrator account due to a lack of configuration of the account and its security mechanisms, making it possible to modify credentials and add/remove user accounts.
                                &lt;/div&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="AZ-W04">
                  <countermeasures>
                    <countermeasure ref="AZ-A04" mitigation="25"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AZURE-MON02">
                  <countermeasures>
                    <countermeasure ref="AZ-A03" mitigation="25"/>
                    <countermeasure ref="AZURE-SUBSCRIPTIONS" mitigation="25"/>
                  </countermeasures>
                </weakness>
                <weakness ref="LOST-SECURITY-ALERTS">
                  <countermeasures>
                    <countermeasure ref="AZ-A01" mitigation="25"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-A01" mitigation="25"/>
                <countermeasure ref="AZ-A03" mitigation="25"/>
                <countermeasure ref="AZ-A04" mitigation="25"/>
                <countermeasure ref="AZURE-SUBSCRIPTIONS" mitigation="25"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="AZURE-LOST-ACCESS-USER" name="Attackers gain unauthorized access to the user account due to the lack of configuration of the account" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;Attackers could gain unauthorized access to the user account due to the lack of configuration of the account, for example, the security question to reset the password is configured incorrectly.&lt;/p&gt;</desc>
              <riskRating confidentiality="50" integrity="50" availability="50" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-IDENTITY-03">
                  <countermeasures>
                    <countermeasure ref="AZ-A07" mitigation="50"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AZURE-MON03">
                  <countermeasures>
                    <countermeasure ref="AZURE-USER-MFA" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-A07" mitigation="50"/>
                <countermeasure ref="AZURE-USER-MFA" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="AUTHORIZATION" name="Authorization" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="LOSS-CONTROL_ENV" name="Attackers gain unauthorized access to the control of the environment" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;Attackers could potentially gain unauthorized access to the control of the environment, due to user accounts - or role groups - not being well defined and configured. As a consequence attackers may be able to make changes without root approval.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="75" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-ACCESS-01">
                  <countermeasures>
                    <countermeasure ref="AZ-A09" mitigation="20"/>
                    <countermeasure ref="AZ-A10" mitigation="20"/>
                    <countermeasure ref="AZ-A11" mitigation="20"/>
                    <countermeasure ref="AZURE-LOAD-BALANCER1" mitigation="100"/>
                    <countermeasure ref="AZURE-RESOURCE-MANAGER" mitigation="20"/>
                    <countermeasure ref="AZURE-SSO" mitigation="20"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-A09" mitigation="20"/>
                <countermeasure ref="AZ-A10" mitigation="20"/>
                <countermeasure ref="AZ-A11" mitigation="20"/>
                <countermeasure ref="AZURE-LOAD-BALANCER1" mitigation="100"/>
                <countermeasure ref="AZURE-RESOURCE-MANAGER" mitigation="20"/>
                <countermeasure ref="AZURE-SSO" mitigation="20"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="GENERAL" name="General" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="UNCONFIGURED-SECURITY" name="Attackers gain access to the system by exploiting weak security configurations" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>Weak security configurations like using sharing passwords in plain text, using weak passwords, using obsolete encryption algorithms, etc. can lead attackers to gain access to the system.</desc>
              <riskRating confidentiality="75" integrity="50" availability="25" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-NET-04">
                  <countermeasures>
                    <countermeasure ref="AZURE-RESOURCE1" mitigation="34"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AZURE-VM01">
                  <countermeasures>
                    <countermeasure ref="AZ-V02" mitigation="33"/>
                    <countermeasure ref="AZURE-REPOS-GIT" mitigation="100"/>
                    <countermeasure ref="AZURE-SECURE-CONFIG" mitigation="33"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-V02" mitigation="33"/>
                <countermeasure ref="AZURE-REPOS-GIT" mitigation="100"/>
                <countermeasure ref="AZURE-RESOURCE1" mitigation="34"/>
                <countermeasure ref="AZURE-SECURE-CONFIG" mitigation="33"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="LOGGING AND MONITORING" name="Logging and Monitoring" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="OWASP A10:2017" name="Exploitation of insufficient logging and monitoring" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>	&lt;p&gt;Exploitation of insufficient logging and monitoring is the bedrock of nearly every major incident.&lt;br /&gt;
 Attackers rely on the lack of monitoring and timely response to achieve their goals without being detected.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="AZ-ENABLE-ALERTS" mitigation="25"/>
                    <countermeasure ref="AZ-L01" mitigation="33"/>
                    <countermeasure ref="AZ-L05" mitigation="33"/>
                    <countermeasure ref="AZ-M01" mitigation="25"/>
                    <countermeasure ref="AZURE-MONITOR6" mitigation="25"/>
                    <countermeasure ref="AZURE-NSG-LOGS" mitigation="25"/>
                    <countermeasure ref="AZURE-SENTINEL" mitigation="34"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-ENABLE-ALERTS" mitigation="25"/>
                <countermeasure ref="AZ-L01" mitigation="33"/>
                <countermeasure ref="AZ-L05" mitigation="33"/>
                <countermeasure ref="AZ-M01" mitigation="25"/>
                <countermeasure ref="AZURE-MONITOR6" mitigation="25"/>
                <countermeasure ref="AZURE-NSG-LOGS" mitigation="25"/>
                <countermeasure ref="AZURE-SENTINEL" mitigation="34"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="NETWORKING" name="Networking" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="AZURE-UNAUTHORISED-CONNECTION" name="Attackers perform unauthorized network access" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;Attackers could perform unauthorized network access to the resources through misconfigured ports or security network configurations.&lt;/p&gt;</desc>
              <riskRating confidentiality="25" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-NET-01">
                  <countermeasures>
                    <countermeasure ref="AZURE-ADAPTIVE-NET-HARDENING" mitigation="11"/>
                    <countermeasure ref="AZURE-DDOS-PROTECTION" mitigation="11"/>
                    <countermeasure ref="AZURE-FIREWALL3" mitigation="11"/>
                    <countermeasure ref="AZURE-IDS-IPS" mitigation="11"/>
                    <countermeasure ref="AZURE-JIT-VM-ACCESS" mitigation="11"/>
                    <countermeasure ref="AZURE-LOAD-BALANCER2" mitigation="11"/>
                    <countermeasure ref="AZURE-LOAD-BALANCER3" mitigation="11"/>
                    <countermeasure ref="C-AZURE-COMMON1" mitigation="100"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AZURE-NON-IDENTIFY">
                  <countermeasures>
                    <countermeasure ref="AZURE-TAGS" mitigation="11"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AZURE-VNET01">
                  <countermeasures>
                    <countermeasure ref="AZ-N09" mitigation="12"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-N09" mitigation="12"/>
                <countermeasure ref="AZURE-ADAPTIVE-NET-HARDENING" mitigation="11"/>
                <countermeasure ref="AZURE-DDOS-PROTECTION" mitigation="11"/>
                <countermeasure ref="AZURE-FIREWALL3" mitigation="11"/>
                <countermeasure ref="AZURE-IDS-IPS" mitigation="11"/>
                <countermeasure ref="AZURE-JIT-VM-ACCESS" mitigation="11"/>
                <countermeasure ref="AZURE-LOAD-BALANCER2" mitigation="11"/>
                <countermeasure ref="AZURE-LOAD-BALANCER3" mitigation="11"/>
                <countermeasure ref="AZURE-TAGS" mitigation="11"/>
                <countermeasure ref="C-AZURE-COMMON1" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="93d784cd-facf-45f9-99b4-734933604847" diagramComponentId="dd886a7c-4606-4948-8964-4621193a85d1" ref="c53a9781-46e2-40bb-aa97-1631d71bc846" name="Web Tier" desc="" library="CS-Default" parentComponentRef="4560c874-df9e-41bd-8263-17574a8d5767" componentDefinitionRef="empty-component">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses/>
      <countermeasures/>
      <usecases/>
    </component>
    <component uuid="52f1a816-f447-4d10-b993-10ac0219c8a3" diagramComponentId="d0e26373-d6c5-4fc1-8019-638913e37856" ref="c632c203-72f1-4b62-90ad-363b1c128ffe" name="Azure Active Directory Domain Services" desc="" library="Microsoft-Azure" parentComponentRef="" componentDefinitionRef="CD-MICROSOFT-AZURE-AD-DS">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="private-secured"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses>
        <weakness ref="DATA-TRANSMIT-CLEAR" name="Data is transmitted in clear text" state="0" impact="100" issueId="" issueLink="">
          <desc>Data is not protected when transmitted to applications or customers and it can be read or modified by unauthorized actors.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:10.292">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="C-AZURE-AD-DS1" name="Harden Azure Active Directory Domain Services managed domains" issueId="" issueLink="" platform="" cost="0" risk="37" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Harden Azure Active Directory Domain Services managed domains&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; By default, Azure Active Directory Domain Services (Azure AD DS) enables the use of ciphers such as NTLM v1 and TLS v1. These ciphers may be required for some legacy applications, but are considered weak and can be disabled if you don't need them. If you have on-premises hybrid connectivity using Azure AD Connect, you can also disable the synchronization of NTLM password hashes.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Use Security settings to harden your domain&lt;/p&gt; 
&lt;p&gt;1. Sign in to the Azure portal.&lt;/p&gt; 
&lt;p&gt;2. Search for and select Azure AD Domain Services.&lt;/p&gt; 
&lt;p&gt;3. Choose your managed domain, such as aaddscontoso.com.&lt;/p&gt; 
&lt;p&gt;4. On the left-hand side, select Security settings.&lt;/p&gt; 
&lt;p&gt;5. Click Enable or Disable for the following settings:&lt;/p&gt; 
&lt;p&gt;- Disable NTLM v1 and TLS v1 ciphers&lt;br&gt; - Disable NTLM password hash synchronization&lt;br&gt; - Disable the ability to change passwords with RC4 encryption&lt;br&gt; - Enable Kerberos armoring&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Harden an Azure Active Directory Domain Services managed domain" url="https://docs.microsoft.com/en-us/azure/active-directory-domain-services/secure-your-domain"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>	&lt;p&gt;Ensure that Security settings for Azure Active Directory Domain Services.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:10.255">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="NETWORKING" name="Networking" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="DATA-EXPOSED-CHANNEL" name="The data is exposed through the transmission channel" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;Attackers can obtain the data through the transmitted channel because this does not have the security measures in place to protect the data&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="DATA-TRANSMIT-CLEAR">
                  <countermeasures>
                    <countermeasure ref="C-AZURE-AD-DS1" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="C-AZURE-AD-DS1" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="900a7b9b-5c1d-415b-84ac-59a3fc76b0e7" diagramComponentId="24bfddec-462e-499c-8c60-c8bf05d1cdba" ref="4560c874-df9e-41bd-8263-17574a8d5767" name="Azure VNet" desc="" library="Microsoft-Azure" parentComponentRef="" componentDefinitionRef="CD-MICROSOFT-AZURE-VNET">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses>
        <weakness ref="AZURE-UNSECURE-CREDENTIALS" name="Credentials are not securely stored" state="0" impact="100" issueId="" issueLink="">
          <desc>The credentials used to access the resources are not securely stored and can be accessed by unauthorized personnel.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:15.399">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="DATA-TRANSMIT-CLEAR" name="Data is transmitted in clear text" state="0" impact="100" issueId="" issueLink="">
          <desc>Data is not protected when transmitted to applications or customers and it can be read or modified by unauthorized actors.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:15.399">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CWE-778" name="Insufficient Logging" state="0" impact="100" issueId="" issueLink="">
          <desc>When a critical security event occurs, the software either does not record the event or omits important details about the event when logging it. When critical security events are not logged properly, such as in the case of a failed login attempt, this can make malicious behavior more difficult to detect and may hinder forensic analyses after a successful attack.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:15.399">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-NON-IDENTIFY" name="Insufficient resource identification" state="0" impact="100" issueId="" issueLink="">
          <desc>Resources are not registered in the safety net systems, and/or additional unidentified resources exist. As such, additional weaknesses might be introduced.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:15.399">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-ACCESS-01" name="Misconfigured credentials for groups and roles" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        The credentials for groups and roles are not correctly configured and there are user accounts with more privileges than necessary.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Azure Active Directory.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All users&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each user has got assigned the correct groups.&lt;/li&gt;
                            &lt;li&gt;Go into &amp;quot;Users and groups&amp;quot; &amp;gt; &amp;quot;All groups&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that each group has got assigned the correct roles to achieve principle of
                            least privilege.&lt;/li&gt;
                            &lt;li&gt;Check that the roles for the Cloud Service are well assigned.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;
                            &lt;div&gt;
                            &lt;div&gt;
                            &lt;/div&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:15.399">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-VNET01" name="Networks for Azure resources are not properly segmented. Without proper segmentation, when attackers gain access to one resource, any other resources in the same VNet are compromised" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        Resources in the same VNet are compromised because when one of them is attacked and the
                        attackers gain access, they also gain access to all resources.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            Identify the resources and the Microsoft Azure instances.
                            &lt;/div&gt;
                            &lt;div&gt;
                            Check that the resources are in the correct VNet.
                            &lt;/div&gt;
                            &lt;div&gt;
                            Check that the Microsoft Azure instances&amp;nbsp;are into different VNets.
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:15.399">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-VM01" name="Security policies exposing system resources" state="0" impact="100" issueId="" issueLink="">
          <desc>The security policies are not adequately configured.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:15.399">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-NET-01" name="Unauthorized connection attempts on open ports" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        Receiving unauthorized connections to open ports makes systems vulnerable to attacks. To
                        avoid this, access to the network must be as restricted as possible, so that only the necessary
                        ports are open and the minimum inbound traffic is accepted.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Check that each Azure resources have got their Network Security Groups.&lt;/li&gt;
                            &lt;li&gt;Check that a set of these groups achieve with the principle of the least
                            privilege.&lt;/li&gt;
                            &lt;li&gt;Check that the inbound/outbound security rules are enabled and correctly
                            configured.&lt;/li&gt;
                            &lt;li&gt;In &amp;quot;Inbound security rules&amp;quot;, check that all the traffic from
                            0.0.0.0/0&amp;nbsp;is blocked.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:15.398">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="AZURE-IDS-IPS" name="Deploy network-based IDS/IPS" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Deploy network-based intrusion detection/intrusion prevention systems (IDS/IPS)&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Select an offer from Azure Marketplace that supports IDS/IPS functionality with payload inspection capabilities. If intrusion detection and/or prevention based on payload inspection is not a requirement, Azure Firewall with Threat Intelligence can be used. Azure Firewall Threat intelligence-based filtering can alert and deny traffic to and from known malicious IP addresses and domains. The IP addresses and domains are sourced from the Microsoft Threat Intelligence feed.&lt;/p&gt; 
&lt;p&gt;Deploy the firewall solution of your choice at each of your organization's network boundaries to detect and/or deny malicious traffic.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Set up the network&lt;/p&gt; 
&lt;p&gt;First, create a resource group to contain the resources needed to deploy the firewall. Then create a VNet, subnets, and a test server.&lt;br&gt; For more information please see Reference URL.&lt;/p&gt; 
&lt;p&gt;Deploy the firewall&lt;/p&gt; 
&lt;p&gt;Deploy the firewall into the VNet.&lt;/p&gt; 
&lt;p&gt;1. On the Azure portal menu or from the Home page, select Create a resource.&lt;/p&gt; 
&lt;p&gt;2. Type firewall in the search box and press Enter.&lt;/p&gt; 
&lt;p&gt;3. Select Firewall and then select Create.&lt;/p&gt; 
&lt;p&gt;4. On the Create a Firewall page, use the following values to configure the firewall:&lt;/p&gt; 
&lt;p&gt;Subscription: &lt;br&gt; Resource group: Test-FW-RG&lt;br&gt; Name: Test-FW01&lt;br&gt; Location: Select the same location that you used previously&lt;br&gt; Choose a virtual network: Use existing: Test-FW-VN&lt;br&gt; Public IP address: Add new&lt;br&gt; Name: fw-pip&lt;/p&gt; 
&lt;p&gt;5. Select Review + create.&lt;/p&gt; 
&lt;p&gt;6. Review the summary, and then select Create to create the firewall.&lt;/p&gt; 
&lt;p&gt;This will take a few minutes to deploy.&lt;/p&gt; 
&lt;p&gt;7. After deployment completes, go to the Test-FW-RG resource group, and select the Test-FW01 firewall.&lt;/p&gt; 
&lt;p&gt;8. Note the firewall private and public IP addresses. You will use these addresses later.&lt;/p&gt; 
&lt;p&gt;Create a default route&lt;/p&gt; 
&lt;p&gt;For the Workload-SN subnet, configure the outbound default route to go through the firewall.&lt;/p&gt; 
&lt;p&gt;1. On the Azure portal menu, select All services or search for and select All services from any page.&lt;/p&gt; 
&lt;p&gt;2. Under Networking, select Route tables.&lt;/p&gt; 
&lt;p&gt;3. Select Add.&lt;/p&gt; 
&lt;p&gt;4. For Name, type Firewall-route.&lt;/p&gt; 
&lt;p&gt;5. For Subscription, select your subscription.&lt;/p&gt; 
&lt;p&gt;6. For Resource group, select Test-FW-RG.&lt;/p&gt; 
&lt;p&gt;7. For Location, select the same location that you used previously.&lt;/p&gt; 
&lt;p&gt;8. Select Create.&lt;/p&gt; 
&lt;p&gt;9. Select Refresh, and then select the Firewall-route route table.&lt;/p&gt; 
&lt;p&gt;10. Select Subnets and then select Associate.&lt;/p&gt; 
&lt;p&gt;11. Select Virtual network &amp;gt; Test-FW-VN.&lt;/p&gt; 
&lt;p&gt;12. For Subnet, select Workload-SN. Make sure that you select only the Workload-SN subnet for this route, otherwise your firewall will not work correctly.&lt;/p&gt; 
&lt;p&gt;13. Select OK.&lt;/p&gt; 
&lt;p&gt;14. Select Routes and then select Add.&lt;/p&gt; 
&lt;p&gt;15. For Route name, type fw-dg.&lt;/p&gt; 
&lt;p&gt;16. For Address prefix, type 0.0.0.0/0.&lt;/p&gt; 
&lt;p&gt;17. For Next hop type, select Virtual appliance.&lt;/p&gt; 
&lt;p&gt;Azure Firewall is actually a managed service, but virtual appliance works in this situation.&lt;/p&gt; 
&lt;p&gt;18. For Next hop address, type the private IP address for the firewall that you noted previously.&lt;/p&gt; 
&lt;p&gt;19. Select OK.&lt;/p&gt; 
&lt;p&gt;Configure an application rule&lt;/p&gt; 
&lt;p&gt;This is the application rule that allows outbound access to www.google.com.&lt;/p&gt; 
&lt;p&gt;1. Open the Test-FW-RG, and select the Test-FW01 firewall.&lt;br&gt; 2. On the Test-FW01 page, under Settings, select Rules.&lt;br&gt; 3. Select the Application rule collection tab.&lt;br&gt; 4. Select Add application rule collection.&lt;br&gt; 5. For Name, type App-Coll01.&lt;br&gt; 6. For Priority, type 200.&lt;br&gt; 7. For Action, select Allow.&lt;br&gt; 8. Under Rules, Target FQDNs, for Name, type Allow-Google.&lt;br&gt; 9. For Source type, select IP address.&lt;br&gt; 10. For Source, type 10.0.2.0/24.&lt;br&gt; 11. For Protocol:port, type http, https.&lt;br&gt; 12. For Target FQDNS, type www.google.com&lt;br&gt; 13. Select Add.&lt;/p&gt; 
&lt;p&gt;Azure Firewall includes a built-in rule collection for infrastructure FQDNs that are allowed by default. These FQDNs are specific for the platform and cannot be used for other purposes. For more information, see Infrastructure FQDNs.&lt;/p&gt; 
&lt;p&gt;Configure a network rule&lt;/p&gt; 
&lt;p&gt;This is the network rule that allows outbound access to two IP addresses at port 53 (DNS).&lt;/p&gt; 
&lt;p&gt;1. Select the Network rule collection tab.&lt;/p&gt; 
&lt;p&gt;2. Select Add network rule collection.&lt;/p&gt; 
&lt;p&gt;3. For Name, type Net-Coll01.&lt;/p&gt; 
&lt;p&gt;4. For Priority, type 200.&lt;/p&gt; 
&lt;p&gt;5. For Action, select Allow.&lt;/p&gt; 
&lt;p&gt;6. Under Rules, IP addresses, for Name, type Allow-DNS.&lt;/p&gt; 
&lt;p&gt;7. For Protocol, select UDP.&lt;/p&gt; 
&lt;p&gt;8. For Source type, select IP address.&lt;/p&gt; 
&lt;p&gt;9. For Source, type 10.0.2.0/24.&lt;/p&gt; 
&lt;p&gt;10. For Destination type select IP address.&lt;/p&gt; 
&lt;p&gt;11. For Destination address, type 209.244.0.3,209.244.0.4&lt;/p&gt; 
&lt;p&gt;These are public DNS servers operated by CenturyLink.&lt;/p&gt; 
&lt;p&gt;12. For Destination Ports, type 53.&lt;/p&gt; 
&lt;p&gt;13. Select Add.&lt;/p&gt; 
&lt;p&gt;Configure a DNAT rule&lt;/p&gt; 
&lt;p&gt;This rule allows you to connect a remote desktop to the Srv-Work virtual machine through the firewall.&lt;/p&gt; 
&lt;p&gt;1. Select the NAT rule collection tab.&lt;br&gt; 2. Select Add NAT rule collection.&lt;br&gt; 3. For Name, type rdp.&lt;br&gt; 4. For Priority, type 200.&lt;br&gt; 5. Under Rules, for Name, type rdp-nat.&lt;br&gt; 6. For Protocol, select TCP.&lt;br&gt; 7. For Source type, select IP address.&lt;br&gt; 8. For Source, type *.&lt;br&gt; 9. For Destination address, type the firewall public IP address.&lt;br&gt; 10. For Destination Ports, type 3389.&lt;br&gt; 11. For Translated address, type the Srv-work private IP address.&lt;br&gt; 12. For Translated port, type 3389.&lt;br&gt; 13. Select Add.&lt;/p&gt; 
&lt;p&gt;Change the primary and secondary DNS address for the Srv-Work network interface&lt;/p&gt; 
&lt;p&gt;For testing purposes in this tutorial, configure the server's primary and secondary DNS addresses. This is not a general Azure Firewall requirement.&lt;/p&gt; 
&lt;p&gt;1. On the Azure portal menu, select Resource groups or search for and select Resource groups from any page. Select the Test-FW-RG resource group.&lt;br&gt; 2. Select the network interface for the Srv-Work virtual machine.&lt;br&gt; 3. Under Settings, select DNS servers.&lt;br&gt; 4. Under DNS servers, select Custom.&lt;br&gt; 5. Type 209.244.0.3 in the Add DNS server text box, and 209.244.0.4 in the next text box.&lt;br&gt; 6. Select Save.&lt;br&gt; 7. Restart the Srv-Work virtual machine.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Tutorial: Deploy and configure Azure Firewall using the Azure portal" url="https://docs.microsoft.com/en-us/azure/firewall/tutorial-firewall-deploy-portal"/>
          </references>
          <standards>
            <standard ref="NS-3" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="NS-4" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Test the firewall&lt;/p&gt;&lt;p&gt;Now, test the firewall to confirm that it works as expected.&lt;/p&gt;&lt;p&gt;1. Connect a remote desktop to firewall public IP address and sign in to the Srv-Work virtual machine.&lt;/p&gt;&lt;p&gt;2. Open Internet Explorer and browse to https://www.google.com.&lt;/p&gt;&lt;p&gt;3. Select OK &amp;gt; Close on the Internet Explorer security alerts.&lt;/p&gt;&lt;p&gt;You should see the Google home page.&lt;/p&gt;&lt;p&gt;4. Browse to https://www.microsoft.com.&lt;/p&gt;&lt;p&gt;You should be blocked by the firewall.LT-3&lt;/p&gt;&lt;p&gt;So now you've verified that the firewall rules are working:&lt;/p&gt;&lt;p&gt;- You can browse to the one allowed FQDN, but not to any others.&lt;br&gt;- You can resolve DNS names using the configured external DNS server.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:15.266">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-ENABLE-ALERTS" name="Enable alerts for anomalous activities" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Enable alerts for anomalous activities 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  Azure Security Center generates detailed security alerts and recommendations. You can view them in the portal or through programmatic tools. You may also need to export some or all of this information for tracking with other monitoring tools in your environment. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Continuous export lets you fully customize what will be exported, and where it will go. For example, you can configure it so that: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  All high severity alerts are sent to an Azure Event Hub 
&lt;/div&gt; 
&lt;div&gt;
  All medium or higher severity findings from vulnerability assessment scans of your SQL servers are sent to a specific Log Analytics workspace 
&lt;/div&gt; 
&lt;div&gt;
  Specific recommendations are delivered to an Event Hub or Log Analytics workspace whenever they're generated 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  Set up a continuous export 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  You can configure continuous export from the Security Center pages in Azure portal, via the Security Center REST API, or at scale using the supplied Azure Policy templates. Select the appropriate tab below for details of each. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Configure continuous export from the Security Center pages in Azure portal 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The steps below are necessary whether you're setting up a continuous export to Log Analytics workspace or Azure Event Hubs. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  1. From Security Center's sidebar, select Pricing &amp;amp; settings. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  2. Select the specific subscription for which you want to configure the data export. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  3. From the sidebar of the settings page for that subscription, select Continuous Export. 
&lt;/div&gt; 
&lt;div&gt;
  Here you see the export options. There's a tab for each available export target. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  4. Select the data type you'd like to export and choose from the filters on each type (for example, export only high severity alerts). 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  5. Optionally, if your selection includes one of these four recommendations, you can include the vulnerability assessment findings together with them: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - Vulnerability Assessment findings on your SQL databases should be remediated 
&lt;/div&gt; 
&lt;div&gt;
  - Vulnerability Assessment findings on your SQL servers on machines should be remediated (Preview) 
&lt;/div&gt; 
&lt;div&gt;
  - Vulnerabilities in Azure Container Registry images should be remediated (powered by Qualys) 
&lt;/div&gt; 
&lt;div&gt;
  - Vulnerabilities in your virtual machines should be remediated 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  To include the findings with these recommendations, enable the include security findings option. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  6. From the "Export target" area, choose where you'd like the data saved. Data can be saved in a target on a different subscription (for example on a Central Event Hub instance or a central Log Analytics workspace). 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  7. Select Save. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Continuously export Security Center data" url="https://docs.microsoft.com/en-us/azure/security-center/continuous-export?tabs=azure-portal"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  View exported alerts and recommendations in Azure Monitor 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  In some cases, you may choose to view the exported Security Alerts and/or recommendations in Azure Monitor. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Azure Monitor provides a unified alerting experience for a variety of Azure alerts including Diagnostic Log, Metric alerts, and custom alerts based on Log Analytics workspace queries. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  To view alerts and recommendations from Security Center in Azure Monitor, configure an Alert rule based on Log Analytics queries (Log Alert): 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  1. From Azure Monitor's Alerts page, select New alert rule. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  2. In the create rule page, configure your new rule (in the same way you'd configure a log alert rule in Azure Monitor): 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - For Resource, select the Log Analytics workspace to which you exported security alerts and recommendations. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - For Condition, select Custom log search. In the page that appears, configure the query, look-back period, and frequency period. In the search query, you can type SecurityAlert or SecurityRecommendation to query the data types that Security Center continuously exports to as you enable the Continuous export to Log Analytics feature. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - Optionally, configure the Action Group that you'd like to trigger. Action groups can trigger email sending, ITSM tickets, WebHooks, and more. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  You'll now see new Azure Security Center alerts or recommendations (depending on your configured continuous export rules and the condition you defined in your Azure Monitor alert rule) in Azure Monitor alerts, with automatic triggering of an action group (if provided). 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:15.267">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-MONITOR6" name="Enable and use Traffic Analytics" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Enable and use Traffic Analytics 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  Traffic Analytics is a cloud-based solution that provides visibility into user and application activity in cloud networks. Traffic analytics analyzes Network Watcher network security group (NSG) flow logs to provide insights into traffic flow in your Azure cloud. With traffic analytics, you can: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - Visualize network activity across your Azure subscriptions and identify hot spots. 
&lt;/div&gt; 
&lt;div&gt;
  - Identify security threats to, and secure your network, with information such as open-ports, applications attempting Internet access, and virtual machines (VM) connecting to rogue networks. 
&lt;/div&gt; 
&lt;div&gt;
  - Understand traffic flow patterns across Azure regions and the Internet to optimize your network deployment for performance and capacity. 
&lt;/div&gt; 
&lt;div&gt;
  - Pinpoint network misconfigurations leading to failed connections in your network. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  Enable Network Watcher 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  To analyze traffic, you need to have an existing network watcher, or enable a network watcher in each region that you have NSGs that you want to analyze traffic for. Traffic analytics can be enabled for NSGs hosted in any of the supported regions. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Select a network security group 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Before enabling NSG flow logging, you must have a network security group to log flows for. If you don't have a network security group, see Create a network security group to create one. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  In Azure portal, go to Network watcher, and then select NSG flow logs. Select the network security group that you want to enable an NSG flow log for. 
&lt;/div&gt; 
&lt;div&gt;
  If you try to enable traffic analytics for an NSG that is hosted in any region other than the supported regions, you receive a "Not found" error. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Enable flow log settings 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Before enabling flow log settings, you must complete the following tasks: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Register the Azure Insights provider, if it's not already registered for your subscription: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Register-AzResourceProvider -ProviderNamespace Microsoft.Insights 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  If you don't already have an Azure Storage account to store NSG flow logs in, you must create a storage account. You can create a storage account with the command that follows. Before running the command, replace &amp;lt;replace-with-your-unique-storage-account-name&amp;gt; with a name that is unique across all Azure locations, between 3-24 characters in length, using only numbers and lower-case letters. You can also change the resource group name, if necessary. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  New-AzStorageAccount ` 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; -Location westcentralus ` 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; -Name &amp;lt;replace-with-your-unique-storage-account-name&amp;gt; ` 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; -ResourceGroupName myResourceGroup ` 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; -SkuName Standard_LRS ` 
&lt;/div&gt; 
&lt;div&gt;
  &amp;nbsp; -Kind StorageV2 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Select the following options: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  1. Select On for Status 
&lt;/div&gt; 
&lt;div&gt;
  2. Select Version 2 for Flow Logs version. Version 2 contains flow-session statistics (Bytes and Packets) 
&lt;/div&gt; 
&lt;div&gt;
  3. Select an existing storage account to store the flow logs in. Ensure that your storage does not have "Data Lake Storage Gen2 Hierarchical Namespace Enabled" set to true. 
&lt;/div&gt; 
&lt;div&gt;
  4. Set Retention to the number of days you want to store data for. If you want to store the data forever, set the value to 0. You incur Azure Storage fees for the storage account. 
&lt;/div&gt; 
&lt;div&gt;
  5. Select On for Traffic Analytics Status. 
&lt;/div&gt; 
&lt;div&gt;
  6. Select processing interval. Based on your choice, flow logs will be collected from storage account and processed by Traffic Analytics. You can choose processing interval of every 1 hour or every 10 mins. 
&lt;/div&gt; 
&lt;div&gt;
  7. Select an existing Log Analytics (OMS) Workspace, or select Create New Workspace to create a new one. A Log Analytics workspace is used by Traffic Analytics to store the aggregated and indexed data that is then used to generate the analytics. If you select an existing workspace, it must exist in one of the supported regions and have been upgraded to the new query language. If you do not wish to upgrade an existing workspace, or do not have a workspace in a supported region, create a new one. For more information about query languages, see Azure Log Analytics upgrade to new log search. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Note: The log analytics workspace hosting the traffic analytics solution and the NSGs do not have to be in the same region. For example, you may have traffic analytics in a workspace in the West Europe region, while you may have NSGs in East US and West US. Multiple NSGs can be configured in the same workspace. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  8. Select Save. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Repeat the previous steps for any other NSGs for which you wish to enable traffic analytics for. Data from flow logs is sent to the workspace, so ensure that the local laws and regulations in your country/region permit data storage in the region where the workspace exists. If you have set different processing intervals for different NSGs, data will be collected at different intervals. For example: You can choose to enable processing interval of 10 mins for critical VNETs and 1 hour for noncritical VNETs. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  You can also configure traffic analytics using the Set-AzNetworkWatcherConfigFlowLog PowerShell cmdlet in Azure PowerShell. Run Get-Module -ListAvailable Az to find your installed version. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Traffic Analytics" url="https://docs.microsoft.com/en-us/azure/network-watcher/traffic-analytics"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="6.6" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  View traffic analytics 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  To view Traffic Analytics, search for Network Watcher in the portal search bar. Once inside Network Watcher, to explore traffic analytics and its capabilities, select Traffic Analytics from the left menu. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  The dashboard may take up to 30 minutes to appear the first time because Traffic Analytics must first aggregate enough data for it to derive meaningful insights, before it can generate any reports. 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:15.268">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-DDOS-PROTECTION" name="Enable Azure DDoS Standard protection on your Azure Virtual Network" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Enable Azure DDoS Standard protection on your Azure Virtual Network&lt;/p&gt;&lt;p&gt;Rationale:&lt;br&gt;Enable Azure Distributed Denial of Service (DDoS) Standard protection on your Azure Virtual Network to guard against DDoS attacks.&lt;/p&gt;&lt;p&gt;Remediation:&lt;br&gt;Create a DDoS protection plan&lt;/p&gt;&lt;p&gt;1. Select Create a resource in the upper left corner of the Azure portal.&lt;/p&gt;&lt;p&gt;2. Search the term DDoS. When DDoS protection plan appears in the search results, select it.&lt;/p&gt;&lt;p&gt;3. Select Create.&lt;/p&gt;&lt;p&gt;4. Enter or select the following values, then select Create:&lt;/p&gt;&lt;p&gt;Name: Enter MyDdosProtectionPlan.&lt;br&gt;Subscription: Select your subscription.&lt;br&gt;Resource group: Select Create new and enter MyResourceGroup.&lt;br&gt;Location: Enter East US.&lt;/p&gt;&lt;p&gt;Enable DDoS protection for a new virtual network&lt;/p&gt;&lt;p&gt;1. Select Create a resource in the upper left corner of the Azure portal.&lt;/p&gt;&lt;p&gt;2. Select Networking, and then select Virtual network.&lt;/p&gt;&lt;p&gt;3. Enter or select the following values, accept the remaining defaults, and then select Create:&lt;/p&gt;&lt;p&gt;Name: Enter MyVnet.&lt;br&gt;Subscription: Select your subscription.&lt;br&gt;Resource group: Select Use existing, and then select MyResourceGroup&lt;br&gt;Location: Enter East US&lt;br&gt;DDoS Protection Standard: Select Enable. The plan you select can be in the same, or different subscription than the virtual network, but both subscriptions must be associated to the same Azure Active Directory tenant.&lt;/p&gt;&lt;p&gt;Enable DDoS protection for an existing virtual network&lt;/p&gt;&lt;p&gt;1. Create a DDoS protection plan by completing the steps in Create a DDoS protection plan, if you don't have an existing DDoS protection plan.&lt;br&gt;2. Select Create a resource in the upper left corner of the Azure portal.&lt;br&gt;3. Enter the name of the virtual network that you want to enable DDoS Protection Standard for in the Search resources, services, and docs box at the top of the portal. When the name of the virtual network appears in the search results, select it.&lt;br&gt;4. Select DDoS protection, under SETTINGS.&lt;br&gt;5. Select Standard. Under DDoS protection plan, select an existing DDoS protection plan, or the plan you created in step 1, and then select Save. The plan you select can be in the same, or different subscription than the virtual network, but both subscriptions must be associated to the same Azure Active Directory tenant.&lt;/p&gt;&lt;p&gt;Impact:&lt;br&gt;You cannot move a virtual network to another resource group or subscription when DDoS Standard is enabled for the virtual network. If you need to move a virtual network with DDoS Standard enabled, disable DDoS Standard first, move the virtual network, and then enable DDoS standard. After the move, the auto-tuned policy thresholds for all the protected public IP addresses in the virtual network are reset.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Quickstart: Create and configure Azure DDoS Protection Standard" url="https://docs.microsoft.com/en-us/azure/ddos-protection/manage-ddos-protection"/>
          </references>
          <standards>
            <standard ref="GS-9" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="NS-5" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Validate and test&lt;/p&gt;

	&lt;p&gt;First, check the details of your DDoS protection plan:&lt;/p&gt;

	&lt;p&gt;1. Select All services on the top, left of the portal.&lt;br /&gt;
2. Enter DDoS in the Filter box. When DDoS protection plans appear in the results, select it.&lt;br /&gt;
3. Select your DDoS protection plan from the list.&lt;/p&gt;

	&lt;p&gt;The MyVnet virtual network should be listed.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:15.268">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-SECURITY-CENTER4" name="Enable Azure Defender" issueId="" issueLink="" platform="" cost="1" risk="45" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Enable Azure Defender&lt;/p&gt;

	&lt;p&gt;Rationale:&lt;br /&gt;
Azure Defender provides security alerts and advanced threat protection for virtual machines, SQL databases, containers, web applications, your network, and more.&lt;/p&gt;

	&lt;p&gt;When you enable Azure Defender from the Pricing and settings area of Azure Security Center, the following Defender plans are all enabled simultaneously and provide comprehensive defenses for the compute, data, and service layers of your environment:&lt;/p&gt;

	&lt;p&gt;- Azure Defender for servers&lt;br /&gt;
- Azure Defender for App Service&lt;br /&gt;
- Azure Defender for Storage&lt;br /&gt;
- Azure Defender for SQL&lt;br /&gt;
- Azure Defender for Kubernetes&lt;br /&gt;
- Azure Defender for container registries&lt;br /&gt;
- Azure Defender for Key Vault&lt;br /&gt;
- Azure Defender for Resource Manager&lt;br /&gt;
- Azure Defender for DNS&lt;/p&gt;

	&lt;p&gt;Each plan in Azure Defender is priced separately and can be individually set to on or off. For example, you might want to turn off Azure Defender for App Service on subscriptions that don't have an associated Azure App Service plan.&lt;/p&gt;

	&lt;p&gt;Remediation:&lt;br /&gt;
To enable Azure Defender on one subscription:&lt;/p&gt;

	&lt;p&gt;1. From Security Center's main menu, select Pricing &amp;amp; settings.&lt;br /&gt;
2. Select the subscription or workspace that you want to protect.&lt;br /&gt;
3. Select Azure Defender on to upgrade.&lt;br /&gt;
4. Select Save.&lt;/p&gt;

	&lt;p&gt;Tip: You'll notice that each plan in Azure Defender is priced separately and can be individually set to on or off. For example, you might want to turn off Azure Defender for App Service on subscriptions that don't have an associated Azure App Service plan.&lt;/p&gt;


	&lt;p&gt;To enable Azure Defender on multiple subscriptions or workspaces:&lt;/p&gt;

	&lt;p&gt;1. From Security Center's sidebar, select Getting started.&lt;/p&gt;

	&lt;p&gt;The Upgrade tab lists subscriptions and workspaces eligible for onboarding.&lt;/p&gt;

	&lt;p&gt;2. From the Select subscriptions and workspaces to enable Azure Defender on list, select the subscriptions and workspaces to upgrade and select Upgrade to enable Azure Defender.&lt;/p&gt;

	&lt;p&gt;- If you select subscriptions and workspaces that aren't eligible for trial, the next step will upgrade them and charges will begin.&lt;br /&gt;
- If you select a workspace that's eligible for a free trial, the next step will begin a trial.&lt;/p&gt;

	&lt;p&gt;Impact:&lt;br /&gt;
Turning on Azure Defender in Azure Security Center incurs an additional cost per resource.&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Introduction to Azure Defender" url="https://docs.microsoft.com/en-us/azure/security-center/azure-defender"/>
            <reference name="Quickstart: Enable Azure Defender" url="https://docs.microsoft.com/en-us/azure/security-center/enable-azure-defender"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="2.1.1" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="2.1.10" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="2.1.11" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="2.1.12" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="2.1.13" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="2.1.2" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="2.1.3" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="2.1.4" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="2.1.5" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="2.1.6" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="2.1.7" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="2.1.8" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="2.1.9" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="DP-3" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="ES-1" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="IM-8" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="LT-2" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="PA-6" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="PV-2" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="PV-4" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="PV-5" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;To ensure that Azure Defender is enabled from Azure portal&lt;/p&gt;

	&lt;p&gt;1. Go to Security Center&lt;br /&gt;
2. Select Pricing &amp;amp; settings blade&lt;br /&gt;
3. Click on the subscription name&lt;br /&gt;
4. Select the Azure Defender plans blade&lt;br /&gt;
5. Review the chosen pricing tier. For the desired resource type Plan should be set to On.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:15.268">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-NSG-FLOW-LOGS" name="Enable NSG flow logs" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Enable NSG flow logs&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; A network security group (NSG) enables you to filter inbound traffic to, and outbound traffic from, a virtual machine (VM). You can log network traffic that flows through an NSG with Network Watcher's NSG flow log capability.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Enable NSG flow log&lt;/p&gt; 
&lt;p&gt;1. NSG flow log data is written to an Azure Storage account. To create an Azure Storage account, select + Create a resource at the top, left corner of the portal.&lt;/p&gt; 
&lt;p&gt;2. Select Storage, then select Storage account - blob, file, table, queue.&lt;/p&gt; 
&lt;p&gt;3. Enter, or select the following information, accept the remaining defaults, and then select Create.&lt;/p&gt; 
&lt;p&gt;Name: 3-24 characters in length, can only contain lowercase letters and numbers, and must be unique across all Azure Storage accounts.&lt;br&gt; Location: Select East US&lt;br&gt; Resource group: Select Use existing, and then select myResourceGroup&lt;/p&gt; 
&lt;p&gt;The storage account may take around minute to create. Do not continue with remaining steps until the storage account is created. In all cases, the storage account must be in the same region as the NSG.&lt;/p&gt; 
&lt;p&gt;4. In the top, left corner of portal, select All services. In the Filter box, type Network Watcher. When Network Watcher appears in the search results, select it.&lt;/p&gt; 
&lt;p&gt;5. Under LOGS, select NSG flow logs.&lt;/p&gt; 
&lt;p&gt;6. From the list of NSGs, select the NSG named myVm-nsg.&lt;/p&gt; 
&lt;p&gt;7. Under Flow logs settings, select On.&lt;/p&gt; 
&lt;p&gt;8. Select the flow logging version. Version 2 contains flow-session statistics (Bytes and Packets)&lt;/p&gt; 
&lt;p&gt;9. Select the storage account that you created in step 3.&lt;/p&gt; 
&lt;p&gt;Note: NSG Flow Logs do not work with storage accounts that have hierarchical namespace enabled.&lt;/p&gt; 
&lt;p&gt;10. In the top, left corner of portal, select All services. In the Filter box, type Network Watcher. When Network Watcher appears in the search results, select it.&lt;/p&gt; 
&lt;p&gt;11. Set Retention (days) to 5, and then select Save.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Tutorial: Log network traffic to and from a virtual machine using the Azure portal" url="https://docs.microsoft.com/en-us/azure/network-watcher/network-watcher-nsg-flow-logging-portal"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="5.1.6" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that NSG flow logs are enabled.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:15.268">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="C-AZURE-VNET2" name="Enable packet capture for VPN gateways" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Enable packet capture for VPN gateways&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Use VPN Gateway's packet capture in addition to commonly available packet capture tools to record network packets.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; To set up packet capture in Azure portal&lt;/p&gt; 
&lt;p&gt;1. Sign in to the Azure portal.&lt;/p&gt; 
&lt;p&gt;2. Go to Virtual network gateway setup.&lt;/p&gt; 
&lt;p&gt;3. Select VPN Gateway Packet Capture from the left-nav menu.&lt;/p&gt; 
&lt;p&gt;4. Click Start Packet Capture.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Configure packet capture for VPN gateways" url="https://docs.microsoft.com/en-us/azure/vpn-gateway/packet-capture"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>	&lt;p&gt;Ensure that packet capture for VPN gateways is enabled.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:15.268">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-AD10" name="Enable Privileged Identity Management for tracking admin role use" issueId="" issueLink="" platform="" cost="1" risk="45" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Enable Privileged Identity Management for tracking admin role use&lt;/p&gt;

  &lt;p&gt;Rationale:&lt;br /&gt;
Use Privileged Identity Management (PIM) to manage, control, and monitor access within your Azure Active Directory (Azure AD) organization. With PIM you can provide as-needed and just-in-time access to Azure resources, Azure AD resources, and other Microsoft online services like Microsoft 365 or Microsoft Intune.&lt;/p&gt;

  &lt;p&gt;Remediation:&lt;br /&gt;
Licensing requirements&lt;/p&gt;

  &lt;p&gt;To use Privileged Identity Management, your directory must have one of the following paid or trial licenses.&lt;/p&gt;

  &lt;p&gt;- Azure AD Premium P2&lt;br /&gt;
- Enterprise Mobility + Security (EMS) E5&lt;/p&gt;

  &lt;p&gt;When a user who is active in a privileged role in an Azure AD organization with a Premium P2 license goes to Roles and administrators in Azure AD and selects a role (or even just visits Privileged Identity Management):&lt;/p&gt;

  &lt;p&gt;- Azure automatically enables PIM for the organization&lt;br /&gt;
- Their experience is now that they can either assign a "regular" role assignment or an eligible role assignment&lt;br /&gt;
When PIM is enabled it doesn't have any other effect on your organization that you need to worry about. It gives you additional assignment options such as active vs eligible with start and end time. PIM also enables you to define scope for role assignments using Administrative Units and custom roles. If you are a Global Administrator or Privileged Role Administrator, you might start getting a few additional emails like the PIM weekly digest. You might also see MS-PIM service principal in the audit log related to role assignment. This is an expected change that should have no effect on your workflow.&lt;/p&gt;

  &lt;p&gt;For more PIM configurations please see Reference URL.&lt;/p&gt;

  &lt;p&gt;Impact:&lt;br /&gt;
None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Start using Privileged Identity Management" url="https://docs.microsoft.com/en-us/azure/active-directory/privileged-identity-management/pim-getting-started"/>
          </references>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="15" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="31" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API10:2019-Insufficient Logging &amp; Monitoring" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="PA-4" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that Privileged Identity Management is enabled.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:15.268">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="C-AZURE-VNET1" name="Enable resource logs for NSGs" issueId="" issueLink="" platform="" cost="0" risk="45" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Enable resource logs for NSGs&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; When you enable logging for an NSG, you can gather the following types of resource log information:&lt;br&gt; - Event: Entries are logged for which NSG rules are applied to VMs, based on MAC address.&lt;br&gt; - Rule counter: Contains entries for how many times each NSG rule is applied to deny or allow traffic. The status for these rules is collected every 300 seconds.&lt;br&gt; Resource logs are only available for NSGs deployed through the Azure Resource Manager deployment model. You cannot enable resource logging for NSGs deployed through the classic deployment model. &lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; How to enable resource logs for NSG from Azure Portal&lt;/p&gt; 
&lt;p&gt;1. Sign in to the portal.&lt;/p&gt; 
&lt;p&gt;2. Select All services, then type network security groups. When Network security groups appear in the search results, select it.&lt;/p&gt; 
&lt;p&gt;3. Select the NSG you want to enable logging for.&lt;/p&gt; 
&lt;p&gt;4. Under MONITORING, select Diagnostics logs, and then select Turn on diagnostics.&lt;/p&gt; 
&lt;p&gt;5. Under Diagnostics settings, enter, or select the following information, and then select Save:&lt;/p&gt; 
&lt;p&gt;- Name: A name of your choosing. For example: myNsgDiagnostics&lt;br&gt; - Archive to a storage account, Stream to an event hub, and Send to Log Analytics: You can select as many destinations as you choose.&lt;br&gt; - LOG: Select either, or both log categories.&lt;/p&gt; 
&lt;p&gt;6. View and analyze logs.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Resource logging for a network security group" url="https://docs.microsoft.com/en-us/azure/virtual-network/virtual-network-nsg-manage-log"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>	&lt;p&gt;View and analyze logs&lt;br /&gt;
To learn how to view resource log data, see Azure platform logs overview. If you send diagnostics data to:&lt;/p&gt;

	&lt;p&gt;Azure Monitor logs: You can use the network security group analytics solution for enhanced insights. The solution provides visualizations for NSG rules that allow or deny traffic, per MAC address, of the network interface in a virtual machine.&lt;br /&gt;
Azure Storage account: Data is written to a PT1H.json file. You can find the:&lt;br /&gt;
Event log in the following path: insights-logs-networksecuritygroupevent/resourceId=/SUBSCRIPTIONS/[ID]/RESOURCEGROUPS/[RESOURCE-GROUP-NAME-FOR-NSG]/PROVIDERS/MICROSOFT.NETWORK/NETWORKSECURITYGROUPS/[NSG NAME]/y=[YEAR]/m=[MONTH/d=[DAY]/h=[HOUR]/m=[MINUTE]&lt;br /&gt;
Rule counter log in the following path: insights-logs-networksecuritygrouprulecounter/resourceId=/SUBSCRIPTIONS/[ID]/RESOURCEGROUPS/[RESOURCE-GROUP-NAME-FOR-NSG]/PROVIDERS/MICROSOFT.NETWORK/NETWORKSECURITYGROUPS/[NSG NAME]/y=[YEAR]/m=[MONTH/d=[DAY]/h=[HOUR]/m=[MINUTE]&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:15.268">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-FIREWALL3" name="Enable Threat intelligence-based filtering to alert and deny traffic" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Enable Threat intelligence-based filtering to alert and deny traffic&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Threat intelligence-based filtering can be enabled for your firewall to alert and deny traffic from/to known malicious IP addresses and domains. The IP addresses and domains are sourced from the Microsoft Threat Intelligence feed.&lt;br&gt; By default, threat intelligence-based filtering is enabled in alert mode. Azure recommends to enable it in alert and deny mode.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; By default, threat intelligence-based filtering is enabled in alert mode. You cannot turn off this feature or change the mode until the portal interface becomes available in your region.&lt;br&gt; You can then change the mode by selecting "Alert and deny" in the Azure portal interface.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; none&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Azure Firewall threat intelligence-based filtering" url="https://docs.microsoft.com/en-us/azure/firewall/threat-intel"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Testing&lt;/p&gt;

  &lt;p&gt;- Outbound testing - Outbound traffic alerts should be a rare occurrence, as it means that your environment has been compromised. To help test outbound alerts are working, a test FQDN has been created that triggers an alert. Use testmaliciousdomain.eastus.cloudapp.azure.com for your outbound tests.&lt;/p&gt;

  &lt;p&gt;- Inbound testing - You can expect to see alerts on incoming traffic if DNAT rules are configured on the firewall. This is true even if only specific sources are allowed on the DNAT rule and traffic is otherwise denied. Azure Firewall doesn't alert on all known port scanners; only on scanners that are known to also engage in malicious activity.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:15.268">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-ENCRYPTION-TRANSIT" name="Encrypt Sensitive data in transit" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt; 
 &lt;div&gt;
   Use encryption to protect traffic on external and public networks as it is critical for data protection 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   Rationale: 
 &lt;/div&gt; 
 &lt;div&gt;
   Protect data in transit against 'out of band' attacks (such as traffic capture) using encryption to ensure that attackers cannot easily read or modify the data. 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   Remediation: 
 &lt;/div&gt; 
 &lt;div&gt;
   1. Use a valid TLS/SSL certificate for custom domains. 
 &lt;/div&gt; 
 &lt;div&gt;
   2. Ensure that any clients connecting to your Azure resources for HTTP traffic can negotiate TLS v1.2 or greater. 
 &lt;/div&gt; 
 &lt;div&gt;
   3. Use SSH (for Linux) or RDP/TLS (for Windows) for remote management, instead of unencrypted protocols 
 &lt;/div&gt; 
 &lt;div&gt;
   4. Disable obsoleted SSL/TLS/SSH versions, protocols, and weak ciphers 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   Redirect HTTP to HTTPs 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   By default, clients can connect to web apps by using both HTTP or HTTPS. Microsoft Azure recommends redirecting HTTP to HTTPs because HTTPS uses the SSL/TLS protocol to provide a secure connection, which is both encrypted and authenticated. 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   Enforce FTPS 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   For enhanced security, you should allow FTP over TLS/SSL only. You can also disable both FTP and FTPS if you don't use FTP deployment. 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   In your app's resource page in Azure portal, select Configuration &amp;gt; General settings from the left navigation. 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   To disable unencrypted FTP, select FTPS Only in FTP state. To disable both FTP and FTPS entirely, select Disabled. When finished, click Save. If using FTPS Only, you must enforce TLS 1.2 or higher by navigating to the TLS/SSL settings blade of your web app. TLS 1.0 and 1.1 are not supported with FTPS Only. 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   Enable client certificates 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   To set up your app to require client certificates, you can switch On the Require incoming certificate by selecting Configuration &amp;gt; General Settings from the Azure Portal or you need to set the clientCertEnabled setting for your app to true. To set the setting, run the following command in the Cloud Shell. 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   az webapp update --set clientCertEnabled=true --name &amp;lt;app_name&amp;gt; --resource-group &amp;lt;group_name&amp;gt; 
 &lt;/div&gt; 
 &lt;div&gt; 
  &lt;br&gt; 
 &lt;/div&gt; 
 &lt;div&gt;
   Impact: 
 &lt;/div&gt; 
 &lt;div&gt;
   None 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Add a TLS/SSL certificate in Azure App Service" url="https://docs.microsoft.com/en-us/azure/app-service/configure-ssl-certificate"/>
            <reference name="Azure App ServiceSecurity" url="https://docs.microsoft.com/en-us/azure/app-service/overview-security"/>
            <reference name="Configure TLS mutual authentication for Azure App Service" url="https://docs.microsoft.com/en-us/azure/app-service/app-service-web-configure-tls-mutual-auth"/>
            <reference name="Deploy your app to Azure App Service using FTP/S" url="https://docs.microsoft.com/en-us/azure/app-service/deploy-ftp"/>
            <reference name="Security in Azure App Service" url="https://docs.microsoft.com/en-us/azure/app-service/overview-security"/>
            <reference name="Security recommendations for App Service" url="https://docs.microsoft.com/en-us/azure/app-service/security-recommendations"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
  Test HTTPS 
&lt;/div&gt; 
&lt;div&gt;
  In various browsers, browse to https://&amp;lt;your.custom.domain&amp;gt; to verify that it serves up your app. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Your application code can inspect the protocol via the "x-appservice-proto" header. The header will have a value of http or https. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Note 
&lt;/div&gt; 
&lt;div&gt;
  If your app gives you certificate validation errors, you're probably using a self-signed certificate. 
&lt;/div&gt; 
&lt;div&gt;
  If that's not the case, you may have left out intermediate certificates when you export your certificate to the PFX file. 
&lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:15.268">
              <output/>
            </source>
            <references>
              <reference name="Azure App ServiceSecurity" url="https://docs.microsoft.com/en-us/azure/app-service/overview-security"/>
            </references>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-CRED-SCAN" name="Implement Credential Scanner to identify credentials within code" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Implement Credential Scanner to identify credentials within code&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Credential Scanner (aka CredScan) is a tool developed and maintained by Microsoft to identify credential leaks such as those in source code and configuration files. Some of the commonly found types of credentials are default passwords, SQL connection strings and Certificates with private keys.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Prerequisites:&lt;br&gt; 1. You are using the Azure DevOps Build system.&lt;br&gt; 2. The Microsoft Security Code Analysis Extension installed in your account.&lt;br&gt; Setup:&lt;br&gt; 1. Open your team project from your Azure DevOps Account.&lt;br&gt; 2. Navigate to the Build tab under Build and Release&lt;br&gt; 3. Select the Build Definition into which you wish to add the CredScan build task.&lt;br&gt; - New - Click New and follow the steps detailed to create a new Build Definition.&lt;br&gt; - Edit - Select the Build Definition. On the subsequent page, click Edit to begin editing the Build Definition.&lt;br&gt; 4. Click + to navigate to the Add Tasks pane.&lt;br&gt; 5. Find the CredScan build task either from the list or using the search box and then click Add.&lt;br&gt; 6. The Run CredScan build task should now be a part of the Build Definition.&lt;/p&gt; 
&lt;p&gt;Customizing the CredScan Build Task:&lt;br&gt; 1. Click the task Run CredScan to see the different options available within.&lt;br&gt; 2. Available options include&lt;br&gt; Output Format - TSV/ CSV/ SARIF/ PREfast&lt;br&gt; Tool Version (Recommended: Latest)&lt;br&gt; Scan Folder - The folder in your repository to scan&lt;br&gt; Searchers File Type - Options to locate the searchers file used for scanning.&lt;br&gt; Suppressions File - A JSON file can be used for suppressing issues in the output log (more details in the Resources section).&lt;br&gt; (New) Verbose Output - self explanatory&lt;br&gt; Batch Size - The number of concurrent threads used to run Credential Scanners in parallel. Defaults to 20 (Value must be in the range of 1 to 2147483647).&lt;br&gt; (New) Match Timeout - The amount of time to spend attempting a searcher match before abandoning the check.&lt;br&gt; (New) File Scan Read Buffer Size - Buffer size while reading content in bytes. (Defaults to 524288)&lt;br&gt; (New) Maximum File Scan Read Bytes - Maximum number of bytes to read from a given file during content analysis. (Defaults to 104857600)&lt;br&gt; Run this task (under Control Options) - Specifies when the task should run. Choose "Custom conditions" to specify more complex conditions.&lt;/p&gt; 
&lt;p&gt;*Version - Build task version within Azure DevOps. Not frequently used.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Getting started with Credential Scanner (CredScan)" url="https://secdevtools.azurewebsites.net/helpcredscan.html"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that Credential Scanner is implemented&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:15.269">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-N09" name="Isolate Azure instances into different VNets" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Specify a VNet for the Azure instance as a launch parameter. Applications that run on the Cloud instance can use the VNet security configuration when they access Azure resources.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt;
  You can configure an Azure cloud service from Solution Explorer in Visual Studio. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;div&gt; 
 &lt;/div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Create a virtual network with multiple subnets" url="https://docs.microsoft.com/en-us/azure/virtual-network/virtual-networks-create-vnet-arm-pportal"/>
          </references>
          <standards>
            <standard ref="GS-4" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Check that the Azure instances are into different VNets.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:15.269">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-N08" name="Isolate Azure resources into separate VNets by function" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Place the resources into separate VNets according to their use (production, development, test).
                        Placing such resources accordingly ensures that a resource of a higher security level is not
                        exposed by the security settings of a lower labeled VNet.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Identify the resources that exist in an incorrect VNet.&lt;/li&gt;
                        &lt;li&gt;Migrate or move it to the correct Vnet.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Azure Virtual Network" url="https://docs.microsoft.com/en-us/azure/virtual-network/virtual-networks-overview"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Identify the resources that exist in an incorrect VNet.&lt;/li&gt;
                            &lt;li&gt;Check that the resources are into the correct Vnet.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:15.269">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-ADMIN-INV" name="Maintain an inventory of administrative accounts" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Maintain an inventory of administrative accounts&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Azure AD has built-in roles that must be explicitly assigned and are queryable. Use the Azure AD PowerShell module to perform ad hoc queries to discover accounts that are members of administrative groups.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; How to get a directory role in Azure AD with PowerShell&lt;/p&gt; 
&lt;p&gt;Get-AzureADDirectoryRole [-Filter ] [-InformationAction ] [-InformationVariable ] []&lt;/p&gt; 
&lt;p&gt;Get-AzureADDirectoryRole -ObjectId  [-InformationAction ] [-InformationVariable ] []&lt;/p&gt; 
&lt;p&gt;How to get members of a directory role in Azure AD with PowerShell&lt;/p&gt; 
&lt;p&gt;Get-AzureADDirectoryRoleMember -ObjectId  [-InformationAction ] [-InformationVariable ] []&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Get-AzureADDirectoryRole" url="https://docs.microsoft.com/en-us/powershell/module/azuread/get-azureaddirectoryrole?view=azureadps-2.0"/>
            <reference name="Get-AzureADDirectoryRoleMember" url="https://docs.microsoft.com/en-us/powershell/module/azuread/get-azureaddirectoryrolemember?view=azureadps-2.0"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that you maintain an inventory of administrative accounts.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:15.269">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-APPROVED-LOCATIONS" name="Manage Azure resources from only approved locations" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Manage Azure resources from only approved locations 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Rationale: 
&lt;/div&gt; 
&lt;div&gt;
  Use Conditional Access Named Locations to allow access from only specific logical groupings of IP address ranges or countries/regions. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Remediation: 
&lt;/div&gt; 
&lt;div&gt;
  Prerequisites 
&lt;/div&gt; 
&lt;div&gt;
  You need: 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - An Azure AD tenant. Sign up for a free trial. 
&lt;/div&gt; 
&lt;div&gt;
  - A user, who is a global administrator for the tenant. 
&lt;/div&gt; 
&lt;div&gt;
  - An IP range that is established and credible in your organization. The IP range needs to be in Classless Interdomain Routing (CIDR) format. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Configure named locations 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  1. Sign in to the Azure portal. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  2. In the left pane, select Azure Active Directory, then select Conditional Access from the Security section. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  3. On the Conditional Access page, select Named locations and select New location. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  4. Fill out the form on the new page. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - In the Name box, type a name for your named location. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - In the IP ranges box, type the IP range in CIDR format. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  - Click Create. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt;
  Impact: 
&lt;/div&gt; 
&lt;div&gt;
  None 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Quickstart: Configure named locations in Azure Active Directory" url="https://docs.microsoft.com/en-us/azure/active-directory/reports-monitoring/quickstart-configure-named-locations"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>Ensure that you have configured named locations in your Azure environment.</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:15.269">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-REPOS-GIT" name="Securely store configuration of Azure resources" issueId="" issueLink="" platform="" cost="0" risk="42" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Securely store configuration of Azure resources&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; If using custom Azure Policy definitions, use Azure DevOps or Azure Repos to securely store and manage your code.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Use version control to save your work and coordinate code changes across your team. Even if you are just a single developer, version control helps you stay organized as you fix bugs and develop new features. Version control keeps a history of your development so that you can review and even rollback to any version of your code with ease.&lt;/p&gt; 
&lt;p&gt;Version control workflow&lt;/p&gt; 
&lt;p&gt;Version control has a general workflow that most developers use when writing code and sharing it with the team.&lt;/p&gt; 
&lt;p&gt;These steps are:&lt;br&gt; 1. Get a local copy of code if they do not have one yet.&lt;br&gt; 2. Make changes to code to fix bugs or add new features.&lt;br&gt; 3. Once the code is ready, make it available for review by your team.&lt;br&gt; 4. Once the code is reviewed, merge it into the team's shared codebase.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Azure Repos Git tutorial" url="https://docs.microsoft.com/en-us/azure/devops/repos/git/gitworkflow?view=azure-devops"/>
          </references>
          <standards/>
          <customFields/>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that the configuration of Azure resources is securely stored.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:15.270">
              <output/>
            </source>
            <references/>
            <customFields/>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-N01" name="Set Network Security Groups to be as restrictive as possible" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Use Network Security Groups (NSG) to filter the ingress/egress network traffic to Azure resources. Set the limit all the traffic (ingress/egress) on the NSG in order to force the use of least privilege into the NSG.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Identify Azure resources for each NSG.&lt;/li&gt; 
  &lt;li&gt;Create a set of least privilege NSG for those resources.&lt;/li&gt; 
  &lt;li&gt;Place the resources in those security groups.&lt;/li&gt; 
  &lt;li&gt;Change the inbound/outbound security rules to fulfill the least privilege.&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - How to open ports to a virtual machine with the Azure portal" url="https://docs.microsoft.com/en-us/azure/virtual-machines/windows/nsg-quickstart-portal"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Check that each Azure resources has got their Network Security Groups.&lt;/li&gt;
                            &lt;li&gt;Check that a set of these groups achieve with the principle of the least
                            privilege.&lt;/li&gt;
                            &lt;li&gt;Check that the inbound/outbound security rules are enabled and correctly
                            configured.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:15.269">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-MANAGED-ID" name="Use Managed Identities" issueId="" issueLink="" platform="" cost="0" risk="50" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Use Managed Identities&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; Use Managed Identities to provide Azure services with an automatically managed identity in Azure AD. Managed Identities allows you to authenticate to any service that supports Azure AD authentication to Azure Resource Manager and can be used with API/Azure Portal/CLI/PowerShell.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; Enable system-assigned managed identity during creation of a VM&lt;/p&gt; 
&lt;p&gt;To enable system-assigned managed identity on a VM during its creation, your account needs the Virtual Machine Contributor role assignment. No additional Azure AD directory role assignments are required.&lt;/p&gt; 
&lt;p&gt;- Under the Management tab in the Identity section, switch Managed service identity to On.&lt;/p&gt; 
&lt;p&gt;Enable system-assigned managed identity on an existing VM&lt;/p&gt; 
&lt;p&gt;To enable system-assigned managed identity on a VM that was originally provisioned without it, your account needs the Virtual Machine Contributor role assignment. No additional Azure AD directory role assignments are required.&lt;/p&gt; 
&lt;p&gt;1. Sign in to the Azure portal using an account associated with the Azure subscription that contains the VM.&lt;/p&gt; 
&lt;p&gt;2. Navigate to the desired Virtual Machine and select Identity.&lt;/p&gt; 
&lt;p&gt;3. Under System assigned, Status, select On and then click Save:&lt;/p&gt; 
&lt;p&gt;Assign a user-assigned managed identity to an existing VM&lt;/p&gt; 
&lt;p&gt;To assign a user-assigned identity to a VM, your account needs the Virtual Machine Contributor and Managed Identity Operator role assignments. No additional Azure AD directory role assignments are required.&lt;/p&gt; 
&lt;p&gt;1. Sign in to the Azure portal using an account associated with the Azure subscription that contains the VM.&lt;/p&gt; 
&lt;p&gt;2. Navigate to the desired VM and click Identity, User assigned and then +Add.&lt;/p&gt; 
&lt;p&gt;3. Click the user-assigned identity you want to add to the VM and then click Add.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Configure managed identities for Azure resources on a VM using the Azure portal" url="https://docs.microsoft.com/en-us/azure/active-directory/managed-identities-azure-resources/qs-configure-portal-windows-vm"/>
          </references>
          <standards>
            <standard ref="IM-3" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that you manage identities securely and automatically.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:15.269">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-N02" name="Use Network Security Groups to block inbound port traffic from 0.0.0.0/0" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Use Network Security Groups (NSG) to filter the ingress/egress network traffic to Azure resources. Set the limit inbound access to all TCP or all ports to avoid undue exposure to risk.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt; 
  &lt;li&gt;Select Network Security Groups.&lt;/li&gt; 
  &lt;li&gt;Choose the NSG to edit (or create a new one).&lt;/li&gt; 
  &lt;li&gt;In "Inbound security rules":&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;ul&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Remove all rules that allow port traffic.&lt;/li&gt; 
   &lt;li&gt;Add a rule to deny port traffic&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/ul&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - How to open ports to a virtual machine with the Azure portal" url="https://docs.microsoft.com/en-us/azure/virtual-machines/windows/nsg-quickstart-portal"/>
          </references>
          <standards>
            <standard ref="6.4" supportedStandardRef="cis-azure-standard"/>
            <standard ref="6.4" supportedStandardRef="cis-azure-standard-level-2"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Network Security Groups.&lt;/li&gt;
                            &lt;li&gt;Choose the NSG to view one of them.&lt;/li&gt;
                            &lt;li&gt;In &amp;quot;Inbound security rules&amp;quot;, check that all the traffic from
                            0.0.0.0/0 is are blocked.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:15.269">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-N03" name="Use Network Security Groups to block ingress to port 3389 from 0.0.0.0/0" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Use Network Security Groups (NSG) to filter the ingress/egress network traffic to Azure
                        resources. Set the limit inbound access to port 3389 (Remote Desk Protocol) to IP addresses that
                        require this access to avoid undue exposure to risk.&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                        &lt;li&gt;Select Network Security Groups.&lt;/li&gt;
                        &lt;li&gt;Choose the NSG to edit (or create a new one).&lt;/li&gt;
                        &lt;li&gt;In &amp;quot;Inbound security rules&amp;quot;:&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ul&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Allow RDP port traffic just to/from IPs that require the access.&lt;/li&gt;
                        &lt;li&gt;Otherwise, remove all rules that allow port 3389 traffic.&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/ul&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - How to open ports to a virtual machine with the Azure portal" url="https://docs.microsoft.com/en-us/azure/virtual-machines/windows/nsg-quickstart-portal"/>
          </references>
          <standards>
            <standard ref="6.1" supportedStandardRef="cis-azure-standard"/>
            <standard ref="6.1" supportedStandardRef="cis-azure-standard-level-2"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Network Security Groups.&lt;/li&gt;
                            &lt;li&gt;Choose the NSG to view one of them.&lt;/li&gt;
                            &lt;li&gt;In &amp;quot;Inbound security rules&amp;quot;, check that the traffic through the
                            port 3389 is blocked.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:15.269">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-ADAPTIVE-NET-HARDENING" name="Use Security Center's Adaptive Network Hardening" issueId="" issueLink="" platform="" cost="1" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Use Defender for Cloud's Adaptive Network Hardening&lt;/p&gt;&lt;p&gt;Rationale:&lt;br&gt;Applying network security groups (NSG) to filter traffic to and from resources, improves your network security posture. However, there can still be some cases in which the actual traffic flowing through the NSG is a subset of the NSG rules defined. In these cases, further improving the security posture can be achieved by hardening the NSG rules, based on the actual traffic patterns.&lt;/p&gt;&lt;p&gt;Adaptive network hardening provides recommendations to further harden the NSG rules. It uses a machine learning algorithm that factors in actual traffic, known trusted configuration, threat intelligence, and other indicators of compromise, and then provides recommendations to allow traffic only from specific IP/port tuples.&lt;/p&gt;&lt;p&gt;Note: Adaptive network hardening recommendations are only supported on the following specific ports (for both UDP and TCP): 13, 17, 19, 22, 23, 53, 69, 81, 111, 119, 123, 135, 137, 138, 139, 161, 162, 389, 445, 512, 514, 593, 636, 873, 1433, 1434, 1900, 2049, 2301, 2323, 2381, 3268, 3306, 3389, 4333, 5353, 5432, 5555, 5800, 5900, 5900, 5985, 5986, 6379, 6379, 7000, 7001, 7199, 8081, 8089, 8545, 9042, 9160, 9300, 11211, 16379, 26379, 27017, 37215&lt;/p&gt;&lt;p&gt;Remediation:&lt;br&gt;View and manage hardening alerts and rules&lt;/p&gt;&lt;p&gt;1. From Defender for Cloud's menu, open the Workload protections dashboard and select the adaptive network hardening tile, or the insights panel item related to adaptive network hardening.&lt;/p&gt;&lt;p&gt;Tip: The insights panel shows the percentage of your VMs currently defended with adaptive network hardening.&lt;/p&gt;&lt;p&gt;The details page for the Adaptive Network Hardening recommendations should be applied on internet facing virtual machines recommendation opens with your network VMs grouped into three tabs:&lt;/p&gt;&lt;p&gt;a. Unhealthy resources: VMs that currently have recommendations and alerts that were triggered by running the adaptive network hardening algorithm.&lt;/p&gt;&lt;p&gt;b. Healthy resources: VMs without alerts and recommendations.&lt;/p&gt;&lt;p&gt;c. Unscanned resources: VMs that the adaptive network hardening algorithm cannot be run on because of one of the following reasons:&lt;br&gt;i. VMs are Classic VMs: Only Azure Resource Manager VMs are supported.&lt;br&gt;ii. Not enough data is available: In order to generate accurate traffic hardening recommendations, Security Center requires at least 30 days of traffic data.&lt;br&gt;iii. VM is not protected by Azure Defender: Only VMs protected with Azure Defender for servers are eligible for this feature.&lt;/p&gt;&lt;p&gt;3. From the Unhealthy resources tab, select a VM to view its alerts and the recommended hardening rules to apply.&lt;/p&gt;&lt;p&gt;- The Rules tab lists the rules that adaptive network hardening recommends you add&lt;br&gt;- The Alerts tab lists the alerts that were generated due to traffic, flowing to the resource, which is not within the IP range allowed in the recommended rules.&lt;/p&gt;&lt;p&gt;4. Optionally, edit the rules:&lt;/p&gt;&lt;p&gt;- Modify a rule&lt;br&gt;- Delete a rule&lt;br&gt;- Add a rule&lt;/p&gt;&lt;p&gt;5. Select the rules that you want to apply on the NSG, and click Enforce.&lt;/p&gt;&lt;p&gt;Tip: If the allowed source IP ranges shows as 'None', it means that recommended rule is a deny rule, otherwise, it is an allow rule.&lt;/p&gt;&lt;p&gt;Note: The enforced rules are added to the NSG protecting the VM. (A VM could be protected by an NSG that is associated to its NIC, or the subnet in which the VM resides, or both)&lt;/p&gt;&lt;p&gt;Impact:&lt;br&gt;None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Improve your network security posture with adaptive network hardening" url="https://docs.microsoft.com/en-us/azure/security-center/security-center-adaptive-network-hardening"/>
          </references>
          <standards>
            <standard ref="NS-7" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that Security Center's Adaptive Network Hardening recommendations are enforced  to your NSG configurations.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:15.269">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZURE-TAGS" name="Use service tags in place of specific IP addresses" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Use service tags in place of specific IP addresses&lt;/p&gt; 
&lt;p&gt;Rationale:&lt;br&gt; A service tag represents a group of IP address prefixes from a given Azure service. Microsoft manages the address prefixes encompassed by the service tag and automatically updates the service tag as addresses change, minimizing the complexity of frequent updates to network security rules.&lt;/p&gt; 
&lt;p&gt;You can use service tags to define network access controls on network security groups or Azure Firewall. Use service tags in place of specific IP addresses when you create security rules. By specifying the service tag name, such as ApiManagement, in the appropriate source or destination field of a rule, you can allow or deny the traffic for the corresponding service.&lt;/p&gt; 
&lt;p&gt;You can use service tags to achieve network isolation and protect your Azure resources from the general Internet while accessing Azure services that have public endpoints. Create inbound/outbound network security group rules to deny traffic to/from Internet and allow traffic to/from AzureCloud or other available service tags of specific Azure services.&lt;/p&gt; 
&lt;p&gt;Remediation:&lt;br&gt; By default, service tags reflect the ranges for the entire cloud. Some service tags also allow more granular control by restricting the corresponding IP ranges to a specified region. For example, the service tag Storage represents Azure Storage for the entire cloud, but Storage.WestUS narrows the range to only the storage IP address ranges from the WestUS region.&lt;/p&gt; 
&lt;p&gt;By specifying the service tag name in the appropriate source or destination field of a rule, you can allow or deny the traffic for the corresponding service.&lt;/p&gt; 
&lt;p&gt;Impact:&lt;br&gt; None&lt;/p&gt;</desc>
          <implementations/>
          <references>
            <reference name="Virtual network service tags" url="https://docs.microsoft.com/en-us/azure/virtual-network/service-tags-overview"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;Ensure that your network security rules are simplified by using VNet Service tags.&lt;/p&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:15.270">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="AUTHORIZATION" name="Authorization" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="LOSS-CONTROL_ENV" name="Attackers gain unauthorized access to the control of the environment" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;Attackers could potentially gain unauthorized access to the control of the environment, due to user accounts - or role groups - not being well defined and configured. As a consequence attackers may be able to make changes without root approval.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="75" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-ACCESS-01">
                  <countermeasures>
                    <countermeasure ref="AZURE-ADMIN-INV" mitigation="50"/>
                    <countermeasure ref="AZURE-MANAGED-ID" mitigation="50"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZURE-ADMIN-INV" mitigation="50"/>
                <countermeasure ref="AZURE-MANAGED-ID" mitigation="50"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="GENERAL" name="General" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="UNCONFIGURED-SECURITY" name="Attackers gain access to the system by exploiting weak security configurations" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>Weak security configurations like using sharing passwords in plain text, using weak passwords, using obsolete encryption algorithms, etc. can lead attackers to gain access to the system.</desc>
              <riskRating confidentiality="75" integrity="50" availability="25" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-VM01">
                  <countermeasures>
                    <countermeasure ref="AZURE-REPOS-GIT" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZURE-REPOS-GIT" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="ACCESS-TO-DATA" name="Sensitive data is compromised through unauthorized access to data storage" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;A data breach is a security violation in which sensitive, protected or confidential data is copied, transmitted, viewed, stolen or used by an individual unauthorized to do so. Sensitive data could be exposed due to a bad configuration in user permissions.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-UNSECURE-CREDENTIALS">
                  <countermeasures>
                    <countermeasure ref="AZURE-CRED-SCAN" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZURE-CRED-SCAN" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="LOGGING AND MONITORING" name="Logging and Monitoring" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="INSUFFICIENT-LOGGING-MONITORING" name="Exploitation of insufficient logging and monitoring" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;Exploitation of insufficient logging and monitoring is the bedrock of nearly every major incident. Attackers rely on the lack of monitoring and timely response to achieve their goals without being detected.&lt;/p&gt;</desc>
              <riskRating confidentiality="100" integrity="100" availability="100" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="CWE-778">
                  <countermeasures>
                    <countermeasure ref="AZ-ENABLE-ALERTS" mitigation="14"/>
                    <countermeasure ref="AZURE-AD10" mitigation="14"/>
                    <countermeasure ref="AZURE-MONITOR6" mitigation="14"/>
                    <countermeasure ref="AZURE-NSG-FLOW-LOGS" mitigation="14"/>
                    <countermeasure ref="AZURE-SECURITY-CENTER4" mitigation="14"/>
                    <countermeasure ref="C-AZURE-VNET1" mitigation="15"/>
                    <countermeasure ref="C-AZURE-VNET2" mitigation="15"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-ENABLE-ALERTS" mitigation="14"/>
                <countermeasure ref="AZURE-AD10" mitigation="14"/>
                <countermeasure ref="AZURE-MONITOR6" mitigation="14"/>
                <countermeasure ref="AZURE-NSG-FLOW-LOGS" mitigation="14"/>
                <countermeasure ref="AZURE-SECURITY-CENTER4" mitigation="14"/>
                <countermeasure ref="C-AZURE-VNET1" mitigation="15"/>
                <countermeasure ref="C-AZURE-VNET2" mitigation="15"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="NETWORKING" name="Networking" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="AZURE-UNAUTHORISED-CONNECTION" name="Attackers perform unauthorized network access" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;Attackers could perform unauthorized network access to the resources through misconfigured ports or security network configurations.&lt;/p&gt;</desc>
              <riskRating confidentiality="25" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-NET-01">
                  <countermeasures>
                    <countermeasure ref="AZ-N01" mitigation="9"/>
                    <countermeasure ref="AZ-N02" mitigation="9"/>
                    <countermeasure ref="AZ-N03" mitigation="9"/>
                    <countermeasure ref="AZURE-ADAPTIVE-NET-HARDENING" mitigation="9"/>
                    <countermeasure ref="AZURE-APPROVED-LOCATIONS" mitigation="9"/>
                    <countermeasure ref="AZURE-DDOS-PROTECTION" mitigation="9"/>
                    <countermeasure ref="AZURE-FIREWALL3" mitigation="9"/>
                    <countermeasure ref="AZURE-IDS-IPS" mitigation="9"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AZURE-NON-IDENTIFY">
                  <countermeasures>
                    <countermeasure ref="AZURE-TAGS" mitigation="10"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AZURE-VNET01">
                  <countermeasures>
                    <countermeasure ref="AZ-N08" mitigation="9"/>
                    <countermeasure ref="AZ-N09" mitigation="9"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-N01" mitigation="9"/>
                <countermeasure ref="AZ-N02" mitigation="9"/>
                <countermeasure ref="AZ-N03" mitigation="9"/>
                <countermeasure ref="AZ-N08" mitigation="9"/>
                <countermeasure ref="AZ-N09" mitigation="9"/>
                <countermeasure ref="AZURE-ADAPTIVE-NET-HARDENING" mitigation="9"/>
                <countermeasure ref="AZURE-APPROVED-LOCATIONS" mitigation="9"/>
                <countermeasure ref="AZURE-DDOS-PROTECTION" mitigation="9"/>
                <countermeasure ref="AZURE-FIREWALL3" mitigation="9"/>
                <countermeasure ref="AZURE-IDS-IPS" mitigation="9"/>
                <countermeasure ref="AZURE-TAGS" mitigation="10"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="DATA-EXPOSED-CHANNEL" name="The data is exposed through the transmission channel" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;Attackers can obtain the data through the transmitted channel because this does not have the security measures in place to protect the data&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="DATA-TRANSMIT-CLEAR">
                  <countermeasures>
                    <countermeasure ref="AZURE-ENCRYPTION-TRANSIT" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZURE-ENCRYPTION-TRANSIT" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="1ad5c313-dd6d-44eb-ac50-d1038638470f" diagramComponentId="6b094d22-90d7-4965-8280-a95bee282165" ref="a315fb34-349d-4395-b728-36e75aa09751" name="Azure Virtual Machines" desc="" library="Microsoft-Azure" parentComponentRef="c53a9781-46e2-40bb-aa97-1631d71bc846" componentDefinitionRef="azure-virtual-machines">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses>
        <weakness ref="AZURE-LOGS03" name="Audit logs can be deleted" state="0" impact="100" issueId="" issueLink="">
          <desc>There is no external backups of log records. If logs are deleted, there is no way to recover
                        them.ed.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Go to &amp;quot;Monitor&amp;quot; and then to &amp;quot;Activity Logs&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Push the button &amp;quot;Export&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;All Regions&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;Export to a storage account&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that all fields are correctly filled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:15.892">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-NET-05" name="Communication is not allowed from/to Virtual Machines" state="0" impact="100" issueId="" issueLink="">
          <desc>IP allocation of virtual machines, DNS resolution, and node monitorization is performed by a
                        Microsoft host node. It is necessary to allow the communication with this virtual IP to be able
                        to make the communication from/to the virtual machine of Azure.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Network Security Groups.&lt;/li&gt;
                            &lt;li&gt;Choose the NSG to edit (or create a new one).&lt;/li&gt;
                            &lt;li&gt;In &amp;quot;Inbound security rules&amp;quot;, check that the IP 168.63.129.16
                            inbound traffic is allowed.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:15.892">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CWE-16" name="Configuration" state="0" impact="100" issueId="" issueLink="">
          <desc>Weaknesses in this category are typically introduced during the
                        configuration of the software.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:15.892">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="CWE-311" name="Missing Encryption of Sensitive Data" state="0" impact="100" issueId="" issueLink="">
          <desc>The software does not encrypt sensitive or critical information
                        before storage or transmission.
                    </desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:15.892">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-VM01" name="Security policies exposing system resources" state="0" impact="100" issueId="" issueLink="">
          <desc>The security policies are not adequately configured.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps/>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:15.891">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-NET-04" name="Unauthorized connection attempts on Azure resources" state="0" impact="100" issueId="" issueLink="">
          <desc>Receiving unauthorized connections to Azure resources is most likely to be receiving an
                        attack. To avoid this, access to the network must be as restricted as possible using Network
                        Access Control Lists for blacklisting.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;Network security groups&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Select the Network Security Group (NSG) for your virtual machine and click on
                            &amp;quot;Inbound security rules&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that there is a rule to deny the inbound access from a blacklisted IP
                            address or range to a designated port or port range.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:15.891">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-NET-01" name="Unauthorized connection attempts on open ports" state="0" impact="100" issueId="" issueLink="">
          <desc>&lt;div&gt;
                        Receiving unauthorized connections to open ports makes systems vulnerable to attacks. To
                        avoid this, access to the network must be as restricted as possible, so that only the necessary
                        ports are open and the minimum inbound traffic is accepted.
                        &lt;/div&gt;</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Check that each Azure resources have got their Network Security Groups.&lt;/li&gt;
                            &lt;li&gt;Check that a set of these groups achieve with the principle of the least
                            privilege.&lt;/li&gt;
                            &lt;li&gt;Check that the inbound/outbound security rules are enabled and correctly
                            configured.&lt;/li&gt;
                            &lt;li&gt;In &amp;quot;Inbound security rules&amp;quot;, check that all the traffic from
                            0.0.0.0/0&amp;nbsp;is blocked.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:15.891">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-NET-02" name="Unauthorized connection attempts on port 22" state="0" impact="100" issueId="" issueLink="">
          <desc>Receiving unauthorized connections to port 22 is most likely to be receiving an SSH attack. To
                        avoid this, access to the network must be as restricted as possible, so that only the necessary
                        ports are open and the minimum inbound traffic is accepted.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Login&amp;nbsp;into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Network Security Groups.&lt;/li&gt;
                            &lt;li&gt;Choose the NSG to view one of them.&lt;/li&gt;
                            &lt;li&gt;In &amp;quot;Inbound security rules&amp;quot;, check that the traffic through the
                            port 22 is blocked.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:15.891">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-NET-03" name="Unauthorized connection attempts on port 3389" state="0" impact="100" issueId="" issueLink="">
          <desc>Receiving unauthorized connections to port 3389 is most likely to be receiving an RDP attack.
                        To avoid this, access to the network must be as restricted as possible, so that only the
                        necessary ports are open and the minimum inbound traffic is accepted.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Login&amp;nbsp;into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Network Security Groups.&lt;/li&gt;
                            &lt;li&gt;Choose the NSG to view one of them.&lt;/li&gt;
                            &lt;li&gt;In &amp;quot;Inbound security rules&amp;quot;, check that the traffic through the
                            port 3389 is blocked.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:15.891">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-VM02" name="Undetected changes in Virtual Machine configurations" state="0" impact="100" issueId="" issueLink="">
          <desc>The changes in virtual machines configurations are not detected because the monitorization and
                        alerts of the security configuration are not configured.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;In the Azure portal, click Resource Groups, select myResourceGroup, and then
                            select myVM in the resource list.&lt;/li&gt;
                            &lt;li&gt;Click Alert rules on the VM blade.&lt;/li&gt;
                            &lt;li&gt;Check there are some metric alerts and they are correctly configured and enabled.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:15.891">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
        <weakness ref="AZURE-VM-NOT_LICENSE" name="Unlicensed Virtual Machines" state="0" impact="100" issueId="" issueLink="">
          <desc>Azure is a system formed by Microsoft machines, therefore, it is necessary that Microsoft
                        perform periodic verification of the licenses of the products.</desc>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Network Security Groups.&lt;/li&gt;
                            &lt;li&gt;Choose the NSG to view one of them.&lt;/li&gt;
                            &lt;li&gt;In &amp;quot;Inbound security rules&amp;quot;, check that the traffic outbound
                            through the port 1688 is allowed.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:15.890">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </weakness>
      </weaknesses>
      <countermeasures>
        <countermeasure ref="AZ-N06" name="Allow Key Management Service request" issueId="" issueLink="" platform="" cost="0" risk="56" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Allow Key Management Service host server to handle the periodic request to ensure Microsoft
                        licensing. Set the limit outbound access to port 1688 (Service Request) in the Network Security
                        Groups to avoid undue exposure to risk.&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                        &lt;li&gt;Select Network Security Groups.&lt;/li&gt;
                        &lt;li&gt;Choose the NSG to edit (or create a new one).&lt;/li&gt;
                        &lt;li&gt;In &amp;quot;Outbound security rules&amp;quot;: Allow port 1688 outbound traffic.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - How to open ports to a virtual machine with the Azure portal" url="https://docs.microsoft.com/en-us/azure/virtual-machines/windows/nsg-quickstart-portal"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Network Security Groups.&lt;/li&gt;
                            &lt;li&gt;Choose the NSG to view one of them.&lt;/li&gt;
                            &lt;li&gt;In &amp;quot;Inbound security rules&amp;quot;, check that the traffic outbound
                            through the port 1688 is allowed.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:15.804">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-N05" name="Allow Virtual IP of the Microsoft host node" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Allow inbound accesses in Network Security Groups from the IP address 168.63.129.16 to
                        communicate with the Azure Service. This IP belongs to Microsoft and acts as DHCP server, DNS
                        server and monitoring the host node hosting the Azure Virtual Machine.
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                        &lt;li&gt;Select Network Security Groups.&lt;/li&gt;
                        &lt;li&gt;Choose the NSG to edit (or create a new one).&lt;/li&gt;
                        &lt;li&gt;In &amp;quot;Inbound security rules&amp;quot;: Allow IP 168.63.129.16 inbound traffic.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - How to open ports to a virtual machine with the Azure portal" url="https://docs.microsoft.com/en-us/azure/virtual-machines/windows/nsg-quickstart-portal"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Network Security Groups.&lt;/li&gt;
                            &lt;li&gt;Choose the NSG to edit (or create a new one).&lt;/li&gt;
                            &lt;li&gt;In &amp;quot;Inbound security rules&amp;quot;, check that the IP 168.63.129.16
                            inbound traffic is allowed.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:15.805">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-V07" name="Apply common security best practices in virtual machine's configuration" issueId="" issueLink="" platform="" cost="0" risk="42" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Only install organization-approved extensions on VMs.&lt;/p&gt;&lt;p&gt;Rationale:&lt;/p&gt;&lt;p&gt;Azure virtual machine extensions are small applications that provide post-deployment configuration and automation tasks on Azure virtual machines. These extensions run with administrative privileges and could potentially access anything on a virtual machine. The Azure Portal and community provide several such extensions. Each organization should carefully evaluate these extensions and ensure that only those that are approved for use are actually implemented.&lt;/p&gt;&lt;p&gt;Windows and Linux virtual machines should be kept updated to:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;Address a specific bug or flaw&lt;/li&gt;&lt;li&gt;Improve an OS or application's general stability&lt;/li&gt;&lt;li&gt;Fix a security vulnerability&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;The Azure Security Center retrieves a list of available security and critical updates from Windows Update or Windows Server Update Services (WSUS), depending on which service is configured on a Windows VM. The security center also checks for the latest updates in Linux systems. If a VM is missing a system update, the security center will recommend system updates be applied.&lt;/p&gt;&lt;p&gt;Installing endpoint protection systems (like Antimalware for Azure) provides for real-time protection capability that helps identify and remove viruses, spyware, and other malicious software, with configurable alerts when known malicious or unwanted software attempts to install itself or run on Azure systems.&lt;/p&gt;&lt;p&gt;Remediation:&lt;/p&gt;&lt;p&gt;&lt;strong&gt;From Azure Console&lt;/strong&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Go to Virtual machines&lt;/li&gt;&lt;li&gt;For each virtual machine, go to Settings&lt;/li&gt;&lt;li&gt;Click on Extensions&lt;/li&gt;&lt;li&gt;If there are unapproved extensions, uninstall them.&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;Follow Microsoft Azure documentation to apply security patches and install endpoint protection from the security center. Alternatively, you can employ your own patch assessment and management tool or endpoint protection tool to periodically assess, report and install the required security patches for your OS.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;From Azure Command Line Interface 2.0&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;From the audit command identify the unapproved extensions, and use the below CLI command to remove an unapproved extension attached to VM. az vm extension delete --resource-group &amp;lt;resourceGroupName&amp;gt; --vm-name &amp;lt;vmName&amp;gt; --name &amp;lt;extensionName&amp;gt;&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="1" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="14" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="16" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="17" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="2.5" supportedStandardRef="cis-azure-standard"/>
            <standard ref="2.5" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="29" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="30" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="7.4" supportedStandardRef="cis-azure-standard"/>
            <standard ref="7.4" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="7.5" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="8" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="9" supportedStandardRef="csa-api-security-guidelines"/>
            <standard ref="API7:2019-Security Misconfiguration" supportedStandardRef="owasp-api-security-top-10"/>
            <standard ref="ES-1" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="ES-2" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="ES-3" supportedStandardRef="azure-security-benchmark"/>
            <standard ref="PV-7" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;&lt;strong&gt;From Azure Console&lt;/strong&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Go to Virtual machines&lt;ol&gt;&lt;li&gt;For each virtual machine, go to Settings&lt;/li&gt;&lt;li&gt;Click on Extensions&lt;/li&gt;&lt;li&gt;Ensure that the listed extensions are approved for use.&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;Go to Security Center - Recommendations&lt;ol&gt;&lt;li&gt;Ensure that there are no recommendations for Apply system updates&lt;/li&gt;&lt;li&gt;Ensure that there are no recommendations for Endpoint Protection not installed on Azure VMs&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;strong&gt;From Azure Command Line Interface 2.0&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Use the below command to list the extensions attached to a VM, and ensure the listed extensions are approved for use.&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;az vm extension list --vm-name &amp;lt;vmName&amp;gt; --resource-group &amp;lt;sourceGroupName&amp;gt; --query [*].name&lt;/p&gt;&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:15.805">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-V03" name="Create alerts for Virtual Machines" issueId="" issueLink="" platform="" cost="0" risk="40" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Create alerts based on specific performance metrics:
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Notify to the correspondent personnel when the average CPU usage exceeds a certain
                        threshold.&lt;/li&gt;
                        &lt;li&gt;Notify to the correspondent personnel when the available free disk space drops below a
                        certain amount,&lt;/li&gt;
                        &lt;li&gt;Notify to the correspondent personnel when the security configuration of the Virtual
                        Machines changes.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;In the Azure portal, click Resource Groups, select myResourceGroup, and then select
                        myVM in the resource list.&lt;/li&gt;
                        &lt;li&gt;Click Alert rules on the VM blade, then click Add metric alert across the top of the
                        alerts blade.&lt;/li&gt;
                        &lt;li&gt;Provide a Name for your alert, such as myAlertRule&lt;/li&gt;
                        &lt;li&gt;To trigger an alert when CPU percentage exceeds 1.0 for five minutes, leave all the
                        other defaults selected.&lt;/li&gt;
                        &lt;li&gt;Optionally, check the box for Email owners, contributors, and readers to send an email
                        notification. The default action is to present a notification in the portal.&lt;/li&gt;
                        &lt;li&gt;Click the OK button.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Microsoft Azure Virtual Machine Monitoring with Azure Diagnostics Extension" url="https://azure.microsoft.com/en-us/blog/windows-azure-virtual-machine-monitoring-with-wad-extension/"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;In the Azure portal, click Resource Groups, select myResourceGroup, and then
                            select myVM in the resource list.&lt;/li&gt;
                            &lt;li&gt;Click Alert rules on the VM blade.&lt;/li&gt;
                            &lt;li&gt;Check there are some metric alerts and they are correctly configured and enabled.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:15.805">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-V04" name="Disable Internet exposed UDP ports on network security groups" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Disable Internet exposed UDP ports on network security groups.&lt;/p&gt;&lt;p&gt;Rationale:&lt;/p&gt;&lt;p&gt;The potential security problem with broadly exposing UDP services over the Internet is that attackers can use DDoS amplification techniques to reflect spoofed UDP traffic from Azure Virtual Machines. The most common types of these attacks use exposed DNS, NTP, SSDP, SNMP, CLDAP and other UDP-based services as amplification source for disrupting services of other machines on the Azure Virtual Network or even attack networked devices outside of Azure.&lt;/p&gt;&lt;p&gt;Remediation:&lt;/p&gt;&lt;p&gt;Disable direct UDP access to your Azure Virtual Machines from the Internet. After direct UDP access from the Internet is disabled, you have other options you can use to access UDP based services running on these virtual machines:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/azure/vpn-gateway/vpn-gateway-howto-point-to-site-resource-manager-portal"&gt;Point-to-site VPN&lt;/a&gt;&amp;nbsp;&lt;/li&gt;&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/azure/vpn-gateway/tutorial-site-to-site-portal"&gt;Site-to-site VPN&lt;/a&gt;&lt;/li&gt;&lt;li&gt;&lt;a href="https://docs.microsoft.com/en-us/azure/expressroute/"&gt;ExpressRoute&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="6.3" supportedStandardRef="cis-azure-standard"/>
            <standard ref="6.3" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="NS-1" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;&lt;strong&gt;From Azure Console&lt;/strong&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Open the Networking blade for the specific Virtual machine in Azure portal&lt;/li&gt;&lt;li&gt;Verify that the INBOUND PORT RULES does not have a rule for UDP such as&lt;/li&gt;&lt;/ol&gt;&lt;ul&gt;&lt;li&gt;protocol = UDP,&lt;/li&gt;&lt;li&gt;Source = Any OR Internet&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;&lt;strong&gt;Using Azure Command Line Interface 2.0&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;List Network security groups with corresponding non-default Security rules:&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;az network nsg list --query [*].[name,securityRules]&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Ensure that none of the NSGs have security rule as below&amp;nbsp;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;"access" : "Allow"&amp;nbsp;&lt;/p&gt;&lt;p&gt;"destinationPortRange" : "*" or "[port range containing 53, 123, 161, 389, 1900, or other configured UDP-based services]"&amp;nbsp;&lt;/p&gt;&lt;p&gt;"direction" : "Inbound"&amp;nbsp;&lt;/p&gt;&lt;p&gt;"protocol" : "UDP"&amp;nbsp;&lt;/p&gt;&lt;p&gt;"sourceAddressPrefix" : "*" or "0.0.0.0" or "&amp;lt;nw&amp;gt;/0" or "/0" or "internet" or "any"&lt;/p&gt;&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:15.806">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-V06" name="Encrypt disks with CMK" issueId="" issueLink="" platform="" cost="0" risk="42" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Ensure that OS disks (boot volumes) and data disks (non-boot volumes) are encrypted with CMK.&lt;/p&gt;&lt;p&gt;Rationale:&lt;/p&gt;&lt;p&gt;Encrypting the IaaS VM's OS disk (boot volume), Data disks (non-boot volume) ensures that the entire content is fully unrecoverable without a key and thus protects the volume from unwarranted reads. CMK is superior encryption although requires additional planning.&lt;/p&gt;&lt;p&gt;Impact:&lt;/p&gt;&lt;p&gt;Using CMK/BYOK will entail additional management of keys.&lt;/p&gt;&lt;p&gt;NOTE: You must have your key vault setup to utilize this.&lt;/p&gt;&lt;p&gt;Remediation:&lt;/p&gt;&lt;p&gt;&lt;strong&gt;From Azure Console&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Note: Disks must be detached from VMs to have encryption changed.&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Go to Virtual machines&lt;/li&gt;&lt;li&gt;For each virtual machine, go to Settings&lt;/li&gt;&lt;li&gt;Click on Disks&lt;/li&gt;&lt;li&gt;Click the X to detach the disk from the VM&lt;/li&gt;&lt;li&gt;Now search for Disks and locate the unattached disk&lt;/li&gt;&lt;li&gt;Click the disk then select Encryption&lt;/li&gt;&lt;li&gt;Change your encryption type, then select your encryption set&lt;/li&gt;&lt;li&gt;Click Save&lt;/li&gt;&lt;li&gt;Go back to the VM and re-attach the disk&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;strong&gt;Using PowerShell&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;$KVRGname = 'MyKeyVaultResourceGroup'; $VMRGName = 'MyVirtualMachineResourceGroup'; $vmName = 'MySecureVM'; $KeyVaultName = 'MySecureVault'; $KeyVault = Get-AzKeyVault -VaultName $KeyVaultName -ResourceGroupName $KVRGname; $diskEncryptionKeyVaultUrl = $KeyVault.VaultUri; $KeyVaultResourceId = $KeyVault.ResourceId; Set-AzVMDiskEncryptionExtension -ResourceGroupName $VMRGname -VMName $vmName -DiskEncryptionKeyVaultUrl $diskEncryptionKeyVaultUrl -DiskEncryptionKeyVaultId $KeyVaultResourceId;&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;Managed disks are encrypted by default with Platform-managed keys. Using Customer-managed keys may provide an additional level of security or meet an organization's regulatory requirements. Encrypting managed disks ensures that its entire content is fully unrecoverable without a key and thus protects the volume from unwarranted reads. Even if the disk is not attached to any of the VMs, there is always a risk where a compromised user account with administrative access to VM service can mount/attach these data disks which may lead to sensitive information disclosure and tampering.&lt;/p&gt;&lt;p&gt;If data stored in the disk is no longer useful, refer to Azure documentation to delete unattached data disks at:&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;https://docs.microsoft.com/en-us/rest/api/compute/disks/delete&lt;/li&gt;&lt;li&gt;https://docs.microsoft.com/en-us/cli/azure/disk?view=azure-cli-latest#az-disk-delete&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;If data stored in the disk is important, To encrypt the disk refer azure documentation at:&amp;nbsp;&lt;/p&gt;&lt;ul&gt;&lt;li&gt;https://docs.microsoft.com/en-us/azure/virtual-machines/disks-enable-customer-managed-keys-portal&lt;/li&gt;&lt;li&gt;https://docs.microsoft.com/en-us/rest/api/compute/disks/update#encryptionsettings&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;NOTE: During encryption it is likely that a reboot will be required, it may take up to 15 minutes to complete the process. NOTE 2: This may differ for Linux Machines as you may need to set the -skipVmBackup parameter&lt;/p&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.2" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="7.3" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="DP-5" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;&lt;strong&gt;From Azure Console&lt;/strong&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Go to Virtual machines&lt;ol&gt;&lt;li&gt;For each virtual machine, go to Settings&lt;/li&gt;&lt;li&gt;Click on Disks&lt;/li&gt;&lt;li&gt;Ensure that the OS disk and Data disks have encryption set to CMK.&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;li&gt;Go to Disks&lt;ol&gt;&lt;li&gt;Click on Add Filter&lt;/li&gt;&lt;li&gt;In the filter field select Disk state&lt;/li&gt;&lt;li&gt;In the Value field select Unattached&lt;/li&gt;&lt;li&gt;Click Apply&lt;/li&gt;&lt;li&gt;For each disk listed ensure that Encryption type in the encryption blade is `Encryption at-rest with a customer-managed key'&lt;/li&gt;&lt;/ol&gt;&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;strong&gt;Using PowerShell&lt;/strong&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;$ResourceGroupName="yourResourceGroupName" $DiskName="yourDiskName" $disk=Get-AzDisk -ResourceGroupName $ResourceGroupName -DiskName $DiskName $disk.Encryption.Type&lt;/p&gt;&lt;/blockquote&gt;&lt;p&gt;&lt;strong&gt;From Azure Command Line Interface 2.0&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Ensure command below does not return any output.&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;az disk list --query '[? diskstate == `Unattached`].{encryptionSettings: encryptionSettings, name: name}' -o json&lt;/p&gt;&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:15.806">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-N01" name="Set Network Security Groups to be as restrictive as possible" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Use Network Security Groups (NSG) to filter the ingress/egress network traffic to Azure resources. Set the limit all the traffic (ingress/egress) on the NSG in order to force the use of least privilege into the NSG.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Identify Azure resources for each NSG.&lt;/li&gt; 
  &lt;li&gt;Create a set of least privilege NSG for those resources.&lt;/li&gt; 
  &lt;li&gt;Place the resources in those security groups.&lt;/li&gt; 
  &lt;li&gt;Change the inbound/outbound security rules to fulfill the least privilege.&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - How to open ports to a virtual machine with the Azure portal" url="https://docs.microsoft.com/en-us/azure/virtual-machines/windows/nsg-quickstart-portal"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Check that each Azure resources has got their Network Security Groups.&lt;/li&gt;
                            &lt;li&gt;Check that a set of these groups achieve with the principle of the least
                            privilege.&lt;/li&gt;
                            &lt;li&gt;Check that the inbound/outbound security rules are enabled and correctly
                            configured.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:15.806">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-V01" name="Set up data collection" issueId="" issueLink="" platform="" cost="0" risk="42" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Set up the Security Center Data Collection to create an Azure storage account to hold the
                        collected data.&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;On the Security Center dashboard, click Security policy, and then select your
                        subscription.&lt;/li&gt;
                        &lt;li&gt;For Data collection, select On.&lt;/li&gt;
                        &lt;li&gt;To create a storage account, select Choose a storage account. Then, select OK.&lt;/li&gt;
                        &lt;li&gt;On the Security Policy blade, select Save.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="Configure auto provisioning for agents and extensions from Azure Security Center" url="https://docs.microsoft.com/en-us/azure/security-center/security-center-enable-data-collection"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;On the Security Center dashboard, click Security policy, and then select your
                            subscription.&lt;/li&gt;
                            &lt;li&gt;Check that the Data collection is enabled and correctly configured.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:15.806">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-V02" name="Set up the security policy" issueId="" issueLink="" platform="" cost="0" risk="42" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Set up the security policies to define the items for which Security Center collects data and makes recommendations. Apply different security policies to different sets of Azure resources. 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;On the Security Center dashboard, select Security policy, and then select your subscription.&lt;/li&gt; 
  &lt;li&gt;Select Prevention policy.&lt;/li&gt; 
  &lt;li&gt;Turn on or turn off policy items that you want to apply to all Azure resources.&lt;/li&gt; 
  &lt;li&gt;When you're finished selecting your settings, select OK.&lt;/li&gt; 
  &lt;li&gt;On the Security policy blade, select Save.&lt;/li&gt; 
 &lt;/ol&gt; 
&lt;/div&gt; 
&lt;div&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - Set security policies in Azure Security Center" url="https://docs.microsoft.com/en-us/azure/security-center/security-center-policies"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;On the Security Center dashboard, select Security policy, and then select your
                            subscription.&lt;/li&gt;
                            &lt;li&gt;Select Prevention policy.&lt;/li&gt;
                            &lt;li&gt;Check that the required policy items are enabled.&amp;nbsp;&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:15.806">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-V05" name="Use Managed disks for virtual machines" issueId="" issueLink="" platform="" cost="0" risk="42" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;p&gt;Migrate BLOB based VHD's to Managed Disks on Virtual Machines to exploit the default features of this configuration. The features include&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Default Disk Encryption&lt;/li&gt;&lt;li&gt;Resilience as Microsoft will managed the disk storage and move around if underlying hardware goes faulty&lt;/li&gt;&lt;li&gt;Reduction of costs over storage accounts&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;Rationale:&lt;/p&gt;&lt;p&gt;Managed disks are by default encrypted on the underlying hardware so no additional encryption is required for basic protection, it is available if additional encryption is required. Managed disks are by design more resilient that storage accounts.&lt;/p&gt;&lt;p&gt;For ARM deployed Virtual Machines, Azure Adviser will at some point recommend moving VHD's to managed disks both from a security and cost management perspective.&lt;/p&gt;&lt;p&gt;Impact:&lt;/p&gt;&lt;p&gt;There is no operational impact of migrating to managed disks other than the benefits mentioned above.&lt;/p&gt;&lt;p&gt;NOTE: When converting to managed disks VMs will be powered off and back on.&lt;/p&gt;&lt;p&gt;Remediation:&lt;/p&gt;&lt;p&gt;&lt;strong&gt;From Azure Console&lt;/strong&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Using the search feature, go to Virtual Machines&lt;/li&gt;&lt;li&gt;Select the virtual machine you would like to convert&lt;/li&gt;&lt;li&gt;Select Disks in the menu for the VM&lt;/li&gt;&lt;li&gt;At the top select Migrate to managed disks&lt;/li&gt;&lt;li&gt;You may follow the prompts to convert the disk and finish by selecting `Migrate' to start the process&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;NOTE VMs will be stopped and restarted after migration is complete.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Using Powershell&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;Stop-AzVM -ResourceGroupName $rgName -Name $vmName -Force ConvertTo-AzVMManagedDisk -ResourceGroupName $rgName -VMName $vmName Start-AzVM -ResourceGroupName $rgName -Name $vmName&lt;/p&gt;&lt;/blockquote&gt;</desc>
          <implementations/>
          <references/>
          <standards>
            <standard ref="7.1" supportedStandardRef="cis-azure-standard"/>
            <standard ref="7.1" supportedStandardRef="cis-azure-standard-level-2"/>
            <standard ref="GS-1" supportedStandardRef="azure-security-benchmark"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;p&gt;&lt;strong&gt;From Azure Console&lt;/strong&gt;&lt;/p&gt;&lt;ol&gt;&lt;li&gt;Using the search feature, go to Virtual Machines&lt;/li&gt;&lt;li&gt;Select Edit columns&lt;/li&gt;&lt;li&gt;Add Uses managed disks to the selected columns&lt;/li&gt;&lt;li&gt;Select Apply&lt;/li&gt;&lt;li&gt;Ensure virtual machine listed are using a managed disk&lt;/li&gt;&lt;/ol&gt;&lt;p&gt;&lt;strong&gt;Using Powershell&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;p&gt;Get-AzVM | ForEach-Object {"Name: " + $_.Name;"ManagedDisk Id: " + $_.StorageProfile.OsDisk.ManagedDisk.Id;""}&lt;/p&gt;&lt;/blockquote&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:15.806">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-N07" name="Use Network Access Control Lists (NACLs) for blacklisting" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Use Network Access Control Lists (NACLs) as a method of blacklisting IP addresses to filters the
                        traffic across endpoints to allow or deny traffic per pre-created rules.&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation: &amp;nbsp;&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                        &lt;li&gt;Select &amp;quot;Network security groups&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Select the Network Security Group (NSG) for your virtual machine and click on &amp;quot;Inbound
                        security rules&amp;quot;.&lt;/li&gt;
                        &lt;li&gt;Add a DENY rule that will restrict inbound access from a blacklisted IP address or
                        range to a designated port or port range.&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;
                        &lt;ol&gt;
                        &lt;ul&gt;
                        &lt;/ul&gt;
                        &lt;/ol&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - How to open ports to a virtual machine with the Azure portal" url="https://docs.microsoft.com/en-us/azure/virtual-machines/windows/nsg-quickstart-portal"/>
          </references>
          <standards/>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select &amp;quot;Network security groups&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Select the Network Security Group (NSG) for your virtual machine and click on
                            &amp;quot;Inbound security rules&amp;quot;.&lt;/li&gt;
                            &lt;li&gt;Check that there is a rule to deny the inbound access from a blacklisted IP
                            address or range to a designated port or port range.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:15.806">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-N02" name="Use Network Security Groups to block inbound port traffic from 0.0.0.0/0" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
  Use Network Security Groups (NSG) to filter the ingress/egress network traffic to Azure resources. Set the limit inbound access to all TCP or all ports to avoid undue exposure to risk.&amp;nbsp; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;br&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt; 
&lt;/div&gt; 
&lt;div&gt; 
 &lt;ol&gt; 
  &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt; 
  &lt;li&gt;Select Network Security Groups.&lt;/li&gt; 
  &lt;li&gt;Choose the NSG to edit (or create a new one).&lt;/li&gt; 
  &lt;li&gt;In "Inbound security rules":&lt;/li&gt; 
 &lt;/ol&gt; 
 &lt;ul&gt; 
  &lt;ul&gt; 
   &lt;li&gt;Remove all rules that allow port traffic.&lt;/li&gt; 
   &lt;li&gt;Add a rule to deny port traffic&lt;/li&gt; 
  &lt;/ul&gt; 
 &lt;/ul&gt; 
&lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - How to open ports to a virtual machine with the Azure portal" url="https://docs.microsoft.com/en-us/azure/virtual-machines/windows/nsg-quickstart-portal"/>
          </references>
          <standards>
            <standard ref="6.4" supportedStandardRef="cis-azure-standard"/>
            <standard ref="6.4" supportedStandardRef="cis-azure-standard-level-2"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Network Security Groups.&lt;/li&gt;
                            &lt;li&gt;Choose the NSG to view one of them.&lt;/li&gt;
                            &lt;li&gt;In &amp;quot;Inbound security rules&amp;quot;, check that all the traffic from
                            0.0.0.0/0 is are blocked.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:15.806">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-N04" name="Use Network Security Groups to block ingress to port 22 from 0.0.0.0/0" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Use Network Security Groups (NSG) to filter the ingress/egress network traffic to Azure
                        resources. Set the limit inbound access to port 22 (Secure Desk) to IP addresses that require
                        this access to avoid undue exposure to risk.&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&lt;/b&gt;&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                        &lt;li&gt;Select Network Security Groups.&lt;/li&gt;
                        &lt;li&gt;Choose the NSG to edit (or create a new one).&lt;/li&gt;
                        &lt;li&gt;In &amp;quot;Inbound security rules&amp;quot;:&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ul&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Allow SSH port traffic just to/from IPs that require the access.&lt;/li&gt;
                        &lt;li&gt;Otherwise, remove all rules that allow port 22 traffic.&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/ul&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - How to open ports to a virtual machine with the Azure portal" url="https://docs.microsoft.com/en-us/azure/virtual-machines/windows/nsg-quickstart-portal"/>
          </references>
          <standards>
            <standard ref="6.2" supportedStandardRef="cis-azure-standard"/>
            <standard ref="6.2" supportedStandardRef="cis-azure-standard-level-2"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;div&gt;
                            &lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Network Security Groups.&lt;/li&gt;
                            &lt;li&gt;Choose the NSG to view one of them.&lt;/li&gt;
                            &lt;li&gt;In &amp;quot;Inbound security rules&amp;quot;, check that the traffic through the
                            port 22 is blocked.&lt;/li&gt;
                            &lt;/ol&gt;
                            &lt;/div&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:15.806">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
        <countermeasure ref="AZ-N03" name="Use Network Security Groups to block ingress to port 3389 from 0.0.0.0/0" issueId="" issueLink="" platform="" cost="0" risk="47" state="Recommended" owner="JamesRabe" library="Microsoft-Azure" source="RULES" edited="false" stateChangeSource="" priority="">
          <desc>&lt;div&gt;
                        Use Network Security Groups (NSG) to filter the ingress/egress network traffic to Azure
                        resources. Set the limit inbound access to port 3389 (Remote Desk Protocol) to IP addresses that
                        require this access to avoid undue exposure to risk.&amp;nbsp;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;br /&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;b&gt;Remediation:&amp;nbsp;&lt;/b&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ol&gt;
                        &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                        &lt;li&gt;Select Network Security Groups.&lt;/li&gt;
                        &lt;li&gt;Choose the NSG to edit (or create a new one).&lt;/li&gt;
                        &lt;li&gt;In &amp;quot;Inbound security rules&amp;quot;:&lt;/li&gt;
                        &lt;/ol&gt;
                        &lt;/div&gt;
                        &lt;div&gt;
                        &lt;ul&gt;
                        &lt;ul&gt;
                        &lt;li&gt;Allow RDP port traffic just to/from IPs that require the access.&lt;/li&gt;
                        &lt;li&gt;Otherwise, remove all rules that allow port 3389 traffic.&lt;/li&gt;
                        &lt;/ul&gt;
                        &lt;/ul&gt;
                        &lt;/div&gt;</desc>
          <implementations/>
          <references>
            <reference name="MS Azure - How to open ports to a virtual machine with the Azure portal" url="https://docs.microsoft.com/en-us/azure/virtual-machines/windows/nsg-quickstart-portal"/>
          </references>
          <standards>
            <standard ref="6.1" supportedStandardRef="cis-azure-standard"/>
            <standard ref="6.1" supportedStandardRef="cis-azure-standard-level-2"/>
          </standards>
          <customFields>
            <customField ref="Compensating Controls" value=""/>
          </customFields>
          <test expiryDate="" expiryPeriod="0">
            <steps>&lt;ol&gt;
                            &lt;li&gt;Log into the Azure portal as an owner.&lt;/li&gt;
                            &lt;li&gt;Select Network Security Groups.&lt;/li&gt;
                            &lt;li&gt;Choose the NSG to view one of them.&lt;/li&gt;
                            &lt;li&gt;In &amp;quot;Inbound security rules&amp;quot;, check that the traffic through the
                            port 3389 is blocked.&lt;/li&gt;
                            &lt;/ol&gt;</steps>
            <notes/>
            <source filename="" args="" type="Manual" result="Not Tested" enabled="true" timestamp="2023-02-20T14:43:15.807">
              <output/>
            </source>
            <references/>
            <customFields>
              <customField ref="Documentation Links" value=""/>
            </customFields>
          </test>
        </countermeasure>
      </countermeasures>
      <usecases>
        <usecase ref="ACTIVITY LOGS ALERTS" name="Activity Logs alerts" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="UNAUTHORIZED-ACCESS-VIRTUAL-MACHINES" name="Attackers gain undetected access to the system by changing Virtual Machine configurations" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>Attackers can gain undetected access to the virtual machine configurations and these
                                changes couldn't be audited or detected.
                            </desc>
              <riskRating confidentiality="50" integrity="50" availability="25" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-VM02">
                  <countermeasures>
                    <countermeasure ref="AZ-V03" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-V03" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="API LOGGING AND AUDITING" name="API Logging and Auditing" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="UNAUDITABLE-CHANGES-AZURE" name="Attackers make undetected and unaudited changes to system configurations" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>If audit trails are not properly protected, an attacker could gain access to the
                                system, modify the status of resources or exfiltrate sensitive data without being
                                noticed.</desc>
              <riskRating confidentiality="25" integrity="75" availability="25" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-LOGS03">
                  <countermeasures>
                    <countermeasure ref="AZ-V01" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-V01" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="GENERAL" name="General" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="UNCONFIGURED-SECURITY" name="Attackers gain access to the system by exploiting weak security configurations" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>Weak security configurations like using sharing passwords in plain text, using weak passwords, using obsolete encryption algorithms, etc. can lead attackers to gain access to the system.</desc>
              <riskRating confidentiality="75" integrity="50" availability="25" easeOfExploitation="25"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-VM01">
                  <countermeasures>
                    <countermeasure ref="AZ-V02" mitigation="25"/>
                    <countermeasure ref="AZ-V05" mitigation="25"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-16">
                  <countermeasures>
                    <countermeasure ref="AZ-V07" mitigation="25"/>
                  </countermeasures>
                </weakness>
                <weakness ref="CWE-311">
                  <countermeasures>
                    <countermeasure ref="AZ-V06" mitigation="25"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-V02" mitigation="25"/>
                <countermeasure ref="AZ-V05" mitigation="25"/>
                <countermeasure ref="AZ-V06" mitigation="25"/>
                <countermeasure ref="AZ-V07" mitigation="25"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="NETWORKING" name="Networking" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="UNAUTHORISED-CONNECTION" name="Attackers gain unauthorized connection to the resources" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>Attackers could gain unauthorized connection to the resources through misconfigured
                                ports or security network configurations.
                            </desc>
              <riskRating confidentiality="25" integrity="25" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-NET-01">
                  <countermeasures>
                    <countermeasure ref="AZ-N01" mitigation="20"/>
                    <countermeasure ref="AZ-N02" mitigation="10"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AZURE-NET-02">
                  <countermeasures>
                    <countermeasure ref="AZ-N04" mitigation="10"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AZURE-NET-03">
                  <countermeasures>
                    <countermeasure ref="AZ-N03" mitigation="20"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AZURE-NET-04">
                  <countermeasures>
                    <countermeasure ref="AZ-N07" mitigation="20"/>
                  </countermeasures>
                </weakness>
                <weakness ref="AZURE-NET-05">
                  <countermeasures>
                    <countermeasure ref="AZ-N05" mitigation="20"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-N01" mitigation="20"/>
                <countermeasure ref="AZ-N02" mitigation="10"/>
                <countermeasure ref="AZ-N03" mitigation="20"/>
                <countermeasure ref="AZ-N04" mitigation="10"/>
                <countermeasure ref="AZ-N05" mitigation="20"/>
                <countermeasure ref="AZ-N07" mitigation="20"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
            <threat ref="UNAUTHORIZED-CONNECTION" name="Attackers gain unauthorized connection to the resources" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;Attackers could potentially gain unauthorized connection to the resources through misconfigured ports or security network configurations.&lt;/p&gt;</desc>
              <riskRating confidentiality="50" integrity="50" availability="50" easeOfExploitation="50"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-NET-01">
                  <countermeasures>
                    <countermeasure ref="AZ-V04" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-V04" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
        <usecase ref="PATCHING" name="Patching" desc="" library="Microsoft-Azure">
          <threats>
            <threat ref="UNAUTHZ-SERVICES-NOT-UPDATE" name="Attackers gain access to the system exploiting a known vulnerability" state="Expose" source="RULES" edited="false" owner="JamesRabe" library="Microsoft-Azure" editable="true">
              <desc>&lt;p&gt;Attackers can gain access to the systems because the security patches for each system have not been applied or the licenses of the products have expired.&lt;/p&gt;</desc>
              <riskRating confidentiality="75" integrity="75" availability="50" easeOfExploitation="75"/>
              <references/>
              <weaknesses>
                <weakness ref="AZURE-VM-NOT_LICENSE">
                  <countermeasures>
                    <countermeasure ref="AZ-N06" mitigation="100"/>
                  </countermeasures>
                </weakness>
              </weaknesses>
              <countermeasures>
                <countermeasure ref="AZ-N06" mitigation="100"/>
              </countermeasures>
              <customFields>
                <customField ref="Attack Complexity" value=""/>
                <customField ref="Attack Vector" value=""/>
                <customField ref="Mitre" value=""/>
                <customField ref="Privileges Required" value=""/>
                <customField ref="Records" value=""/>
                <customField ref="STRIDE" value=""/>
                <customField ref="User Interaction" value=""/>
              </customFields>
            </threat>
          </threats>
        </usecase>
      </usecases>
    </component>
    <component uuid="ffac0bde-f8dd-48af-98d1-859915164b33" diagramComponentId="a29345fb-2453-4ea4-ad2d-32e3cf6cc9b7" ref="8a4aa198-240b-4035-bec7-9847a31eace5" name="Web Tier" desc="" library="CS-Default" parentComponentRef="4560c874-df9e-41bd-8263-17574a8d5767" componentDefinitionRef="empty-component">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="public-cloud"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses/>
      <countermeasures/>
      <usecases/>
    </component>
    <component uuid="871c5fcc-23b5-4c7a-8d76-350f3a39b480" diagramComponentId="56751617-92f8-42d4-9c2f-2065ae41ce19" ref="9a93e3e4-9c1d-4105-a6c4-a8a8dd9baf25" name="Off-Premise Users" desc="" library="CS-Default" parentComponentRef="" componentDefinitionRef="empty-component">
      <tags/>
      <questions/>
      <trustZones>
        <trustZone ref="internet"/>
      </trustZones>
      <assets/>
      <settings/>
      <weaknesses/>
      <countermeasures/>
      <usecases/>
    </component>
  </components>
</template>
